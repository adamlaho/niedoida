/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pddd_AB_zz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1222_12_33(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C150608 = ae + be;
    const double C150607 = ae * be;
    const double C150606 = zA - zB;
    const double C150615 = 0 * be;
    const double C150664 = 0 * ae;
    const double C150659 = 0 * be;
    const double C150713 = p + q;
    const double C150712 = p * q;
    const double C150719 = bs[3];
    const double C150718 = zP - zQ;
    const double C150726 = bs[4];
    const double C150724 = xP - xQ;
    const double C150734 = bs[5];
    const double C150743 = bs[6];
    const double C150754 = bs[7];
    const double C150769 = bs[8];
    const double C150805 = bs[2];
    const double C150928 = yP - yQ;
    const double C136 = bs[0];
    const double C152450 = xA - xB;
    const double C152475 = ce + de;
    const double C152474 = ce * de;
    const double C152473 = xC - xD;
    const double C152507 = yC - yD;
    const double C152525 = zC - zD;
    const double C152691 = yA - yB;
    const double C150616 = std::pow(C150608, 2);
    const double C150660 = 2 * C150608;
    const double C150623 = 2 * C150607;
    const double C150617 = C150607 * C150606;
    const double C152707 = std::pow(C150606, 2);
    const double C152771 = C150606 * be;
    const double C152770 = C150606 * ae;
    const double C150661 = C150606 * C150615;
    const double C150679 = -2 * C150615;
    const double C150669 = C150664 / C150608;
    const double C150714 = 2 * C150712;
    const double C150721 = std::pow(C150718, 2);
    const double C150796 = C150718 * ae;
    const double C150795 = C150718 * be;
    const double C150736 = std::pow(C150724, 2);
    const double C150940 = std::pow(C150928, 2);
    const double C152453 = C152450 * be;
    const double C152452 = C152450 * ae;
    const double C152451 = std::pow(C152450, 2);
    const double C152479 = 2 * C152475;
    const double C152478 = std::pow(C152475, 2);
    const double C152480 = C152473 * de;
    const double C152477 = C152473 * ce;
    const double C152476 = std::pow(C152473, 2);
    const double C152508 = std::pow(C152507, 2);
    const double C152567 = C152507 * de;
    const double C152565 = C152507 * ce;
    const double C152526 = std::pow(C152525, 2);
    const double C152609 = C152525 * de;
    const double C152607 = C152525 * ce;
    const double C152692 = std::pow(C152691, 2);
    const double C152743 = C152691 * be;
    const double C152742 = C152691 * ae;
    const double C150618 = 2 * C150616;
    const double C152811 = 4 * C150616;
    const double C150678 = C150616 * C150660;
    const double C152461 = std::pow(C150660, -1);
    const double C152843 = std::pow(C150660, -2);
    const double C152708 = C152707 * C150607;
    const double C150666 = C150661 / C150608;
    const double C150682 = ae * C150679;
    const double C150716 = C150714 / C150713;
    const double C160 =
        ((std::pow(zP - zQ, 2) * bs[2] * std::pow(C150714 / C150713, 2) -
          (bs[1] * C150714) / C150713) *
         C150607) /
        C150616;
    const double C137 = -(C150724 * bs[1] * C150714) / C150713;
    const double C371 = -(C150928 * bs[1] * C150714) / C150713;
    const double C632 = -(C150718 * bs[1] * C150714) / C150713;
    const double C150728 = C150721 * C150726;
    const double C150737 = C150721 * C150734;
    const double C150745 = C150721 * C150743;
    const double C150757 = C150721 * C150754;
    const double C150772 = C150721 * C150769;
    const double C150798 = C150726 * C150796;
    const double C150809 = C150719 * C150796;
    const double C150819 = C150734 * C150796;
    const double C150833 = C150743 * C150796;
    const double C150860 = C150754 * C150796;
    const double C150896 = C150769 * C150796;
    const double C145 = (-(bs[1] * C150796 * C150714) / C150713) / C150608;
    const double C150797 = C150726 * C150795;
    const double C150808 = C150719 * C150795;
    const double C150817 = C150734 * C150795;
    const double C150829 = C150743 * C150795;
    const double C150854 = C150754 * C150795;
    const double C150888 = C150769 * C150795;
    const double C144 = (-(bs[1] * C150795 * C150714) / C150713) / C150608;
    const double C152454 = C152451 * C150607;
    const double C152492 = std::pow(C152479, -1);
    const double C152819 = std::pow(C152479, -2);
    const double C152493 = 2 * C152478;
    const double C152823 = C152478 * C152479;
    const double C152822 = 4 * C152478;
    const double C152812 = std::pow(C152477, 2);
    const double C152481 = C152476 * C152474;
    const double C152509 = C152508 * C152474;
    const double C152824 = std::pow(C152565, 2);
    const double C152527 = C152526 * C152474;
    const double C152826 = std::pow(C152607, 2);
    const double C152693 = C152692 * C150607;
    const double C150663 = C150615 / C150618;
    const double C150667 = C150659 / C150618;
    const double C152709 = C152708 / C150608;
    const double C150670 = 0 - C150666;
    const double C150720 = -C150716;
    const double C150727 = std::pow(C150716, 4);
    const double C150744 = std::pow(C150716, 6);
    const double C150770 = std::pow(C150716, 8);
    const double C150804 = std::pow(C150716, 2);
    const double C161 =
        ((xP - xQ) *
         (bs[2] * std::pow(C150716, 2) +
          std::pow(zP - zQ, 2) * bs[3] * std::pow(-C150716, 3)) *
         C150607) /
        C150616;
    const double C152455 = C152454 / C150608;
    const double C152867 = 4 * C152823;
    const double C152866 = C152475 * C152822;
    const double C152482 = C152481 / C152475;
    const double C152510 = C152509 / C152475;
    const double C152528 = C152527 / C152475;
    const double C152694 = C152693 / C150608;
    const double C152710 = -C152709;
    const double C150673 = C150670 * ae;
    const double C150722 = std::pow(C150720, 3);
    const double C150735 = std::pow(C150720, 5);
    const double C150755 = std::pow(C150720, 7);
    const double C150729 = C150728 * C150727;
    const double C150733 = C150726 * C150727;
    const double C150800 = C150727 * C150798;
    const double C150799 = C150727 * C150797;
    const double C150746 = C150745 * C150744;
    const double C150753 = C150743 * C150744;
    const double C150839 = C150744 * C150833;
    const double C150835 = C150744 * C150829;
    const double C150773 = C150772 * C150770;
    const double C150902 = C150770 * C150896;
    const double C150898 = C150770 * C150888;
    const double C150807 = C150805 * C150804;
    const double C146 = (C150724 * C150804 * C150805 * C150795) / C150608;
    const double C147 = (C150724 * C150804 * C150805 * C150796) / C150608;
    const double C386 = (C150928 * C150804 * C150805 * C150795) / C150608;
    const double C387 = (C150928 * C150804 * C150805 * C150796) / C150608;
    const double C647 = (C150718 * C150804 * C150805 * C150795) / C150608 -
                        (be * bs[1] * C150714) / (C150713 * C150608);
    const double C648 = (C150718 * C150804 * C150805 * C150796) / C150608 -
                        (ae * bs[1] * C150714) / (C150713 * C150608);
    const double C152456 = -C152455;
    const double C152483 = -C152482;
    const double C152511 = -C152510;
    const double C152529 = -C152528;
    const double C152695 = -C152694;
    const double C152711 = std::exp(C152710);
    const double C150674 = C150673 / C150608;
    const double C150725 = C150719 * C150722;
    const double C150811 = C150722 * C150809;
    const double C150810 = C150722 * C150808;
    const double C162 =
        ((bs[2] * std::pow(C150716, 2) + C150721 * C150719 * C150722) *
             C150607 +
         (C150719 * C150722 + C150721 * bs[4] * std::pow(C150716, 4)) *
             C150607 * std::pow(xP - xQ, 2)) /
        C150616;
    const double C407 =
        ((yP - yQ) *
         (bs[2] * std::pow(C150716, 2) + C150721 * C150719 * C150722) *
         C150607) /
        C150616;
    const double C668 =
        (ae * C150804 * C150805 * C150795 + be * C150804 * C150805 * C150796 +
         C150718 * (C150805 * C150804 + C150721 * C150719 * C150722) *
             C150607) /
        C150616;
    const double C150738 = C150737 * C150735;
    const double C150742 = C150734 * C150735;
    const double C150822 = C150735 * C150819;
    const double C150820 = C150735 * C150817;
    const double C150758 = C150757 * C150755;
    const double C150768 = C150754 * C150755;
    const double C150866 = C150755 * C150860;
    const double C150862 = C150755 * C150854;
    const double C150818 = C150733 * C150736;
    const double C150830 = C150724 * C150733;
    const double C150966 = C150733 * C150940;
    const double C151039 = C150733 * ae;
    const double C151037 = C150733 * C150721;
    const double C151036 = C150718 * C150733;
    const double C151035 = C150733 * be;
    const double C151137 = C150928 * C150733;
    const double C150815 = C150724 * C150800;
    const double C150959 = C150928 * C150800;
    const double C151026 = C150718 * C150800;
    const double C151032 = be * C150800;
    const double C150813 = C150724 * C150799;
    const double C150957 = C150928 * C150799;
    const double C151023 = C150718 * C150799;
    const double C151031 = ae * C150799;
    const double C150857 = C150753 * C150736;
    const double C150891 = C150724 * C150753;
    const double C151243 = C150753 * C150940;
    const double C151554 = C150753 * ae;
    const double C151548 = C150753 * C150721;
    const double C151547 = C150718 * C150753;
    const double C151546 = C150753 * be;
    const double C151735 = C150928 * C150753;
    const double C150842 = C150839 * C150736;
    const double C150859 = C150724 * C150839;
    const double C151225 = C150839 * C150940;
    const double C151245 = C150928 * C150839;
    const double C151505 = C150718 * C150839;
    const double C151541 = be * C150839;
    const double C150840 = C150835 * C150736;
    const double C150853 = C150724 * C150835;
    const double C151221 = C150835 * C150940;
    const double C151239 = C150928 * C150835;
    const double C151499 = C150718 * C150835;
    const double C151540 = ae * C150835;
    const double C150905 = C150902 * C150736;
    const double C151274 = C150724 * C150902;
    const double C151840 = C150902 * C150940;
    const double C151911 = C150928 * C150902;
    const double C152027 = C150718 * C150902;
    const double C150903 = C150898 * C150736;
    const double C151268 = C150724 * C150898;
    const double C151832 = C150898 * C150940;
    const double C151905 = C150928 * C150898;
    const double C152017 = C150718 * C150898;
    const double C138 = C150807 * C150736 - (bs[1] * C150714) / C150713;
    const double C370 = C150928 * C150724 * C150807;
    const double C372 = C150807 * C150940 - (bs[1] * C150714) / C150713;
    const double C631 = C150718 * C150724 * C150807;
    const double C633 = C150807 * C150721 - (bs[1] * C150714) / C150713;
    const double C1227 = C150718 * C150928 * C150807;
    const double C152457 = std::exp(C152456);
    const double C152484 = std::exp(C152483);
    const double C152512 = std::exp(C152511);
    const double C152530 = std::exp(C152529);
    const double C152696 = std::exp(C152695);
    const double C172 = C152711 * C161;
    const double C150619 = C150617 * C152711;
    const double C134 = -(2 * ae * be * (zA - zB) * C152711) / (ae + be);
    const double C135 =
        -((C152711 - (C150606 * 2 * C150607 * C150606 * C152711) / C150608) *
          2 * C150607) /
        C150608;
    const double C152772 = C152711 * C152770;
    const double C152775 = C152461 * C152711;
    const double C152851 = C152711 * C152771;
    const double C152844 = C152711 / C150660;
    const double C14812 = C152843 * C152711;
    const double C150675 = C150674 - C150667;
    const double C150730 = C150725 + C150729;
    const double C150814 = C150724 * C150725;
    const double C150958 = C150928 * C150725;
    const double C151027 = C150725 * ae;
    const double C151025 = C150718 * C150725;
    const double C151024 = C150725 * be;
    const double C139 =
        2 * C150724 * C150807 + C150724 * (C150807 + C150725 * C150736);
    const double C369 = C150928 * (C150807 + C150725 * C150736);
    const double C630 = C150718 * (C150807 + C150725 * C150736);
    const double C1526 =
        2 * C150928 * C150807 + C150928 * (C150807 + C150725 * C150940);
    const double C1708 = C150718 * (C150807 + C150725 * C150940);
    const double C2666 =
        2 * C150718 * C150807 + C150718 * (C150807 + C150725 * C150721);
    const double C149 =
        (C150804 * C150805 * C150796 + C150811 * C150736) / C150608;
    const double C151 =
        (2 * C150724 * C150811 + C150724 * (C150811 + C150800 * C150736)) /
        C150608;
    const double C383 = (C150928 * (C150811 + C150800 * C150736)) / C150608;
    const double C385 = (C150928 * C150724 * C150811) / C150608;
    const double C389 =
        (C150804 * C150805 * C150796 + C150811 * C150940) / C150608;
    const double C644 = (C150718 * (C150811 + C150800 * C150736) +
                         (C150807 + C150725 * C150736) * ae) /
                        C150608;
    const double C646 =
        (C150718 * C150724 * C150811 + C150724 * C150807 * ae) / C150608;
    const double C650 = (C150804 * C150805 * C150796 +
                         C150718 * (C150718 * C150811 + C150807 * ae) +
                         C150718 * C150807 * ae) /
                        C150608;
    const double C1234 =
        (C150718 * C150928 * C150811 + C150928 * C150807 * ae) / C150608;
    const double C1538 =
        (2 * C150928 * C150811 + C150928 * (C150811 + C150800 * C150940)) /
        C150608;
    const double C1728 = (C150718 * (C150811 + C150800 * C150940) +
                          (C150807 + C150725 * C150940) * ae) /
                         C150608;
    const double C148 =
        (C150804 * C150805 * C150795 + C150810 * C150736) / C150608;
    const double C150 =
        (2 * C150724 * C150810 + C150724 * (C150810 + C150799 * C150736)) /
        C150608;
    const double C382 = (C150928 * (C150810 + C150799 * C150736)) / C150608;
    const double C384 = (C150928 * C150724 * C150810) / C150608;
    const double C388 =
        (C150804 * C150805 * C150795 + C150810 * C150940) / C150608;
    const double C643 = (C150718 * (C150810 + C150799 * C150736) +
                         (C150807 + C150725 * C150736) * be) /
                        C150608;
    const double C645 =
        (C150718 * C150724 * C150810 + C150724 * C150807 * be) / C150608;
    const double C649 = (C150804 * C150805 * C150795 +
                         C150718 * (C150718 * C150810 + C150807 * be) +
                         C150718 * C150807 * be) /
                        C150608;
    const double C1233 =
        (C150718 * C150928 * C150810 + C150928 * C150807 * be) / C150608;
    const double C1537 =
        (2 * C150928 * C150810 + C150928 * (C150810 + C150799 * C150940)) /
        C150608;
    const double C1727 = (C150718 * (C150810 + C150799 * C150940) +
                          (C150807 + C150725 * C150940) * be) /
                         C150608;
    const double C176 = C152711 * C162;
    const double C6577 = C152711 * C407;
    const double C150739 = C150733 + C150738;
    const double C150747 = C150742 + C150746;
    const double C150831 = C150742 * C150736;
    const double C150856 = C150724 * C150742;
    const double C151223 = C150742 * C150940;
    const double C151242 = C150928 * C150742;
    const double C151506 = C150742 * ae;
    const double C151502 = C150742 * C150721;
    const double C151501 = C150718 * C150742;
    const double C151500 = C150742 * be;
    const double C150824 = C150822 * C150736;
    const double C150832 = C150724 * C150822;
    const double C150967 = C150822 * C150940;
    const double C151038 = C150718 * C150822;
    const double C151138 = C150928 * C150822;
    const double C151496 = be * C150822;
    const double C150823 = C150820 * C150736;
    const double C150828 = C150724 * C150820;
    const double C150965 = C150820 * C150940;
    const double C151034 = C150718 * C150820;
    const double C151136 = C150928 * C150820;
    const double C151495 = ae * C150820;
    const double C150759 = C150753 + C150758;
    const double C150774 = C150768 + C150773;
    const double C150892 = C150768 * C150736;
    const double C151271 = C150724 * C150768;
    const double C151836 = C150768 * C150940;
    const double C151906 = C150928 * C150768;
    const double C152028 = C150768 * ae;
    const double C152020 = C150768 * C150721;
    const double C152019 = C150718 * C150768;
    const double C152018 = C150768 * be;
    const double C150869 = C150866 * C150736;
    const double C150895 = C150724 * C150866;
    const double C151246 = C150866 * C150940;
    const double C151553 = C150718 * C150866;
    const double C151738 = C150928 * C150866;
    const double C152012 = be * C150866;
    const double C150867 = C150862 * C150736;
    const double C150887 = C150724 * C150862;
    const double C151240 = C150862 * C150940;
    const double C151545 = C150718 * C150862;
    const double C151734 = C150928 * C150862;
    const double C152011 = ae * C150862;
    const double C150821 = C150725 + C150818;
    const double C150836 = 2 * C150830;
    const double C150954 = C150928 * C150830;
    const double C151019 = C150830 * ae;
    const double C151017 = C150718 * C150830;
    const double C151016 = C150830 * be;
    const double C150969 = C150725 + C150966;
    const double C151043 = C150725 + C151037;
    const double C151045 = C151036 * ae;
    const double C151042 = C151036 * be;
    const double C151503 = 2 * C151036;
    const double C151143 = C151137 * ae;
    const double C151141 = C150718 * C151137;
    const double C151140 = C151137 * be;
    const double C151222 = 2 * C151137;
    const double C391 = (C150724 * C150811 + C150815 * C150940) / C150608;
    const double C390 = (C150724 * C150810 + C150813 * C150940) / C150608;
    const double C151040 = C151031 + C151032;
    const double C150864 = C150742 + C150857;
    const double C150899 = 2 * C150891;
    const double C151207 = C150891 * C150940;
    const double C151270 = C150928 * C150891;
    const double C151464 = C150891 * ae;
    const double C151460 = C150891 * C150721;
    const double C151459 = C150718 * C150891;
    const double C151458 = C150891 * be;
    const double C151250 = C150742 + C151243;
    const double C151560 = C150742 + C151548;
    const double C151562 = C151547 * ae;
    const double C151559 = C151547 * be;
    const double C152021 = 2 * C151547;
    const double C151747 = C151735 * ae;
    const double C151745 = C151735 * C150721;
    const double C151744 = C150718 * C151735;
    const double C151743 = C151735 * be;
    const double C151835 = 2 * C151735;
    const double C150845 = C150822 + C150842;
    const double C150865 = 2 * C150859;
    const double C150974 = C150859 * C150940;
    const double C151061 = C150718 * C150859;
    const double C151150 = C150928 * C150859;
    const double C151454 = be * C150859;
    const double C151228 = C150822 + C151225;
    const double C151251 = 2 * C151245;
    const double C151326 = C150718 * C151245;
    const double C151731 = be * C151245;
    const double C150843 = C150820 + C150840;
    const double C150861 = 2 * C150853;
    const double C150972 = C150853 * C150940;
    const double C151057 = C150718 * C150853;
    const double C151148 = C150928 * C150853;
    const double C151453 = ae * C150853;
    const double C151226 = C150820 + C151221;
    const double C151247 = 2 * C151239;
    const double C151322 = C150718 * C151239;
    const double C151730 = ae * C151239;
    const double C151557 = C151540 + C151541;
    const double C150908 = C150866 + C150905;
    const double C151280 = C151274 * C150940;
    const double C151615 = C150718 * C151274;
    const double C151784 = C150928 * C151274;
    const double C151843 = C150866 + C151840;
    const double C151920 = C150718 * C151911;
    const double C150906 = C150862 + C150903;
    const double C151276 = C151268 * C150940;
    const double C151607 = C150718 * C151268;
    const double C151780 = C150928 * C151268;
    const double C151841 = C150862 + C151832;
    const double C151916 = C150718 * C151905;
    const double C152458 = C152457 * C152452;
    const double C152462 = C152461 * C152457;
    const double C152808 = C152457 * C152453;
    const double C152805 = C152457 / C150660;
    const double C51247 = C152843 * C152457;
    const double C152486 = C152484 * C152477;
    const double C152485 = C152484 / C152479;
    const double C152495 = C152492 * C152484;
    const double C152815 = C152484 * C152480;
    const double C152864 = C152819 * C152484;
    const double C152858 = C152484 * C152812;
    const double C152566 = C152512 / C152479;
    const double C152568 = C152512 * C152565;
    const double C152575 = C152492 * C152512;
    const double C152830 = C152512 * C152567;
    const double C152870 = C152819 * C152512;
    const double C152868 = C152512 * C152824;
    const double C152608 = C152530 / C152479;
    const double C152610 = C152530 * C152607;
    const double C152617 = C152492 * C152530;
    const double C152836 = C152530 * C152609;
    const double C152873 = C152819 * C152530;
    const double C152871 = C152530 * C152826;
    const double C152744 = C152696 * C152742;
    const double C152747 = C152461 * C152696;
    const double C152847 = C152696 * C152743;
    const double C152842 = C152696 / C150660;
    const double C6340 = C152843 * C152696;
    const double C150622 = 2 * C150619;
    const double C150665 = C150619 / C150616;
    const double C150680 = -4 * C150619;
    const double C14817 =
        ((0 * ae) / C150608 - C150619 / C150616) / (2 * C150608) +
        (0 * ae) / C150608;
    const double C31629 = (0 * ae) / C150608 - C150619 / C150616;
    const double C171 = C134 * C147;
    const double C169 = C134 * C146;
    const double C6576 = C134 * C387;
    const double C6574 = C134 * C386;
    const double C174 = C135 * C138;
    const double C170 = C135 * C137;
    const double C426 = C135 * C370;
    const double C687 = C135 * C631;
    const double C6579 = C135 * C372;
    const double C6575 = C135 * C371;
    const double C7554 = C135 * C1227;
    const double C152853 = C152772 / C150618;
    const double C152852 = C152772 * C152771;
    const double C152846 = C152772 / C150608;
    const double C14811 = (2 * C152461 * C152772) / C150608;
    const double C152854 = C152775 * C152771;
    const double C117460 = C152775 / C152811;
    const double C133814 = C152775 / C150660;
    const double C152890 = C152851 / C150608;
    const double C14810 = (C152711 * std::pow(C152770, 2)) / C150616 + C152844;
    const double C150731 = C150730 * C150607;
    const double C651 =
        (C150724 * C150810 + C150718 * (C150718 * C150813 + C150814 * be) +
         C150718 * C150814 * be) /
        C150608;
    const double C652 =
        (C150724 * C150811 + C150718 * (C150718 * C150815 + C150814 * ae) +
         C150718 * C150814 * ae) /
        C150608;
    const double C1235 =
        (C150718 * C150928 * C150813 + C150928 * C150814 * be) / C150608;
    const double C1236 =
        (C150718 * C150928 * C150815 + C150928 * C150814 * ae) / C150608;
    const double C373 = C150724 * C150807 + C150814 * C150940;
    const double C634 = C150724 * C150807 + C150814 * C150721;
    const double C1228 = C150718 * C150928 * C150814;
    const double C1525 =
        2 * C150928 * C150814 + C150928 * (C150814 + C150830 * C150940);
    const double C1707 = C150718 * (C150814 + C150830 * C150940);
    const double C2665 =
        2 * C150718 * C150814 + C150718 * (C150814 + C150830 * C150721);
    const double C1719 =
        (C150928 * C150810 + C150718 * (C150718 * C150957 + C150958 * be) +
         C150718 * C150958 * be) /
        C150608;
    const double C1720 =
        (C150928 * C150811 + C150718 * (C150718 * C150959 + C150958 * ae) +
         C150718 * C150958 * ae) /
        C150608;
    const double C1704 = C150928 * C150807 + C150958 * C150721;
    const double C3209 =
        2 * C150718 * C150958 + C150718 * (C150958 + C151137 * C150721);
    const double C151029 = C151026 + C151027;
    const double C151028 = C151023 + C151024;
    const double C178 = C135 * C139;
    const double C422 = C135 * C369;
    const double C683 = C135 * C630;
    const double C6586 = C135 * C1526;
    const double C7550 = C135 * C1708;
    const double C175 = C134 * C149;
    const double C179 = C134 * C151;
    const double C423 = C134 * C383;
    const double C427 = C134 * C385;
    const double C6580 = C134 * C389;
    const double C684 = C134 * C644;
    const double C688 = C134 * C646;
    const double C7555 = C134 * C1234;
    const double C6587 = C134 * C1538;
    const double C7551 = C134 * C1728;
    const double C173 = C134 * C148;
    const double C177 = C134 * C150;
    const double C421 = C134 * C382;
    const double C425 = C134 * C384;
    const double C6578 = C134 * C388;
    const double C682 = C134 * C643;
    const double C686 = C134 * C645;
    const double C7553 = C134 * C1233;
    const double C6585 = C134 * C1537;
    const double C7549 = C134 * C1727;
    const double C150740 = C150739 * C150607;
    const double C150748 = C150747 * C150607;
    const double C150837 = C150733 + C150831;
    const double C150863 = 2 * C150856;
    const double C150973 = C150856 * C150940;
    const double C151062 = C150856 * ae;
    const double C151060 = C150856 * C150721;
    const double C151059 = C150718 * C150856;
    const double C151058 = C150856 * be;
    const double C151149 = C150928 * C150856;
    const double C151227 = C150733 + C151223;
    const double C151249 = 2 * C151242;
    const double C151327 = C151242 * ae;
    const double C151325 = C151242 * C150721;
    const double C151324 = C150718 * C151242;
    const double C151323 = C151242 * be;
    const double C151512 = C151505 + C151506;
    const double C151511 = C150733 + C151502;
    const double C151513 = C151501 * ae;
    const double C151510 = C151501 * be;
    const double C151549 = 2 * C151501;
    const double C151509 = C151499 + C151500;
    const double C150826 = C150800 + C150824;
    const double C150838 = 2 * C150832;
    const double C150955 = C150928 * C150832;
    const double C151018 = C150718 * C150832;
    const double C151055 = be * C150832;
    const double C1536 =
        (2 * C150928 * C150815 + C150928 * (C150815 + C150832 * C150940)) /
        C150608;
    const double C1726 = (C150718 * (C150815 + C150832 * C150940) +
                          (C150814 + C150830 * C150940) * ae) /
                         C150608;
    const double C150970 = C150800 + C150967;
    const double C151044 = C151038 + C151039;
    const double C151142 = C150718 * C151138;
    const double C151224 = 2 * C151138;
    const double C151320 = be * C151138;
    const double C150825 = C150799 + C150823;
    const double C150834 = 2 * C150828;
    const double C150953 = C150928 * C150828;
    const double C151015 = C150718 * C150828;
    const double C151054 = ae * C150828;
    const double C1535 =
        (2 * C150928 * C150813 + C150928 * (C150813 + C150828 * C150940)) /
        C150608;
    const double C1725 = (C150718 * (C150813 + C150828 * C150940) +
                          (C150814 + C150830 * C150940) * be) /
                         C150608;
    const double C150968 = C150799 + C150965;
    const double C151041 = C151034 + C151035;
    const double C151139 = C150718 * C151136;
    const double C151220 = 2 * C151136;
    const double C151319 = ae * C151136;
    const double C151508 = C151495 + C151496;
    const double C150760 = C150759 * C150607;
    const double C150775 = C150774 * C150607;
    const double C150900 = C150753 + C150892;
    const double C151278 = C151271 * C150940;
    const double C151616 = C151271 * ae;
    const double C151610 = C151271 * C150721;
    const double C151609 = C150718 * C151271;
    const double C151608 = C151271 * be;
    const double C151781 = C150928 * C151271;
    const double C151842 = C150753 + C151836;
    const double C151921 = C151906 * ae;
    const double C151919 = C151906 * C150721;
    const double C151918 = C150718 * C151906;
    const double C151917 = C151906 * be;
    const double C152036 = C152027 + C152028;
    const double C152035 = C150753 + C152020;
    const double C152037 = C152019 * ae;
    const double C152034 = C152019 * be;
    const double C152033 = C152017 + C152018;
    const double C150872 = C150839 + C150869;
    const double C150901 = 2 * C150895;
    const double C151209 = C150895 * C150940;
    const double C151273 = C150928 * C150895;
    const double C151463 = C150718 * C150895;
    const double C151603 = be * C150895;
    const double C151252 = C150839 + C151246;
    const double C151561 = C151553 + C151554;
    const double C151746 = C150718 * C151738;
    const double C151839 = 2 * C151738;
    const double C151901 = be * C151738;
    const double C150870 = C150835 + C150867;
    const double C150897 = 2 * C150887;
    const double C151205 = C150887 * C150940;
    const double C151267 = C150928 * C150887;
    const double C151457 = C150718 * C150887;
    const double C151602 = ae * C150887;
    const double C151248 = C150835 + C151240;
    const double C151558 = C151545 + C151546;
    const double C151742 = C150718 * C151734;
    const double C151831 = 2 * C151734;
    const double C151900 = ae * C151734;
    const double C152032 = C152011 + C152012;
    const double C140 = 3 * (C150807 + C150725 * C150736) +
                        C150724 * (2 * C150814 + C150724 * C150821);
    const double C368 = C150928 * (2 * C150814 + C150724 * C150821);
    const double C374 = C150807 + C150725 * C150736 + C150821 * C150940;
    const double C629 = C150718 * (2 * C150814 + C150724 * C150821);
    const double C635 = C150807 + C150725 * C150736 + C150821 * C150721;
    const double C1229 = C150718 * C150928 * C150821;
    const double C1703 = C150928 * C150814 + C150954 * C150721;
    const double C1527 = 3 * (C150807 + C150725 * C150940) +
                         C150928 * (2 * C150958 + C150928 * C150969);
    const double C1709 = C150807 + C150725 * C150940 + C150969 * C150721;
    const double C2265 = C150718 * (2 * C150958 + C150928 * C150969);
    const double C2667 = 3 * (C150807 + C150725 * C150721) +
                         C150718 * (2 * C151025 + C150718 * C151043);
    const double C431 = C134 * C391;
    const double C429 = C134 * C390;
    const double C150868 = C150724 * C150864;
    const double C150890 = 3 * C150864;
    const double C150980 = C150864 * C150940;
    const double C151085 = C150864 * ae;
    const double C151083 = C150864 * C150721;
    const double C151082 = C150718 * C150864;
    const double C151081 = C150864 * be;
    const double C151161 = C150928 * C150864;
    const double C151211 = C150856 + C151207;
    const double C151277 = 2 * C151270;
    const double C151373 = C151270 * ae;
    const double C151371 = C151270 * C150721;
    const double C151370 = C150718 * C151270;
    const double C151369 = C151270 * be;
    const double C151469 = C150856 + C151460;
    const double C151471 = C151459 * ae;
    const double C151468 = C151459 * be;
    const double C151611 = 2 * C151459;
    const double C151254 = C150928 * C151250;
    const double C151350 = C151250 * ae;
    const double C151348 = C151250 * C150721;
    const double C151347 = C150718 * C151250;
    const double C151346 = C151250 * be;
    const double C151834 = 3 * C151250;
    const double C151570 = C151560 * ae;
    const double C151568 = C150718 * C151560;
    const double C151567 = C151560 * be;
    const double C152022 = 3 * C151560;
    const double C151752 = C151242 + C151745;
    const double C151754 = C151744 * ae;
    const double C151751 = C151744 * be;
    const double C151907 = 2 * C151744;
    const double C150847 = C150724 * C150845;
    const double C150858 = 3 * C150845;
    const double C150951 = C150928 * C150845;
    const double C151010 = C150718 * C150845;
    const double C151078 = be * C150845;
    const double C150977 = C150832 + C150974;
    const double C151154 = C150718 * C151150;
    const double C151208 = 2 * C151150;
    const double C151366 = be * C151150;
    const double C151231 = C150928 * C151228;
    const double C151244 = 3 * C151228;
    const double C151314 = C150718 * C151228;
    const double C151343 = be * C151228;
    const double C150846 = C150724 * C150843;
    const double C150852 = 3 * C150843;
    const double C150949 = C150928 * C150843;
    const double C151007 = C150718 * C150843;
    const double C151077 = ae * C150843;
    const double C150975 = C150828 + C150972;
    const double C151151 = C150718 * C151148;
    const double C151204 = 2 * C151148;
    const double C151365 = ae * C151148;
    const double C151466 = C151453 + C151454;
    const double C151229 = C150928 * C151226;
    const double C151238 = 3 * C151226;
    const double C151311 = C150718 * C151226;
    const double C151342 = ae * C151226;
    const double C151740 = C151730 + C151731;
    const double C150911 = C150724 * C150908;
    const double C151416 = C150908 * C150940;
    const double C151664 = C150928 * C150908;
    const double C151698 = C150718 * C150908;
    const double C151283 = C150895 + C151280;
    const double C151792 = C150718 * C151784;
    const double C151846 = C150928 * C151843;
    const double C151973 = C150718 * C151843;
    const double C150909 = C150724 * C150906;
    const double C151412 = C150906 * C150940;
    const double C151662 = C150928 * C150906;
    const double C151692 = C150718 * C150906;
    const double C151281 = C150887 + C151276;
    const double C151788 = C150718 * C151780;
    const double C151844 = C150928 * C151841;
    const double C151967 = C150718 * C151841;
    const double C152809 = C152458 / C150618;
    const double C152807 = C152458 / C150608;
    const double C152806 = C152458 * C152453;
    const double C51246 = (2 * C152461 * C152458) / C150608;
    const double C152810 = C152462 * C152453;
    const double C126 = C152462 / C152811;
    const double C23411 = C152462 / C150660;
    const double C152856 = C152808 / C150608;
    const double C51245 = (C152457 * std::pow(C152452, 2)) / C150616 + C152805;
    const double C152487 = C152486 * C152480;
    const double C152494 = C152486 / C152493;
    const double C152816 = C152492 * C152486;
    const double C152814 = C152486 / C152475;
    const double C365 = (C152484 * std::pow(C152480, 2)) / C152478 + C152485;
    const double C152496 = C152495 * C152480;
    const double C152820 = C152477 * C152495;
    const double C152818 = 2 * C152495;
    const double C152874 = C152495 / C152822;
    const double C133 = C152495 / C152867;
    const double C3842 = C152495 / C152479;
    const double C152860 = C152815 / C152475;
    const double C366 = (-2 * C152492 * C152815) / C152475;
    const double C152895 = C152858 / C152478;
    const double C1429 = (C152512 * std::pow(C152567, 2)) / C152478 + C152566;
    const double C152569 = C152568 * C152567;
    const double C152574 = C152568 / C152493;
    const double C152828 = C152568 / C152475;
    const double C152825 = C152492 * C152568;
    const double C152576 = C152575 * C152567;
    const double C152834 = C152565 * C152575;
    const double C152833 = 2 * C152575;
    const double C152880 = C152575 / C152822;
    const double C1521 = C152575 / C152867;
    const double C3839 = C152575 / C152479;
    const double C152876 = C152830 / C152475;
    const double C1430 = (-2 * C152492 * C152830) / C152475;
    const double C152900 = C152868 / C152478;
    const double C2427 = (C152530 * std::pow(C152609, 2)) / C152478 + C152608;
    const double C152611 = C152610 * C152609;
    const double C152616 = C152610 / C152493;
    const double C152829 = C152610 / C152475;
    const double C152827 = C152492 * C152610;
    const double C152618 = C152617 * C152609;
    const double C152840 = C152607 * C152617;
    const double C152839 = 2 * C152617;
    const double C152886 = C152617 / C152822;
    const double C2662 = C152617 / C152867;
    const double C5033 = C152617 / C152479;
    const double C152882 = C152836 / C152475;
    const double C2428 = (-2 * C152492 * C152836) / C152475;
    const double C152902 = C152871 / C152478;
    const double C152849 = C152744 / C150618;
    const double C152848 = C152744 * C152743;
    const double C152845 = C152744 / C150608;
    const double C6339 = (2 * C152461 * C152744) / C150608;
    const double C152850 = C152747 * C152743;
    const double C59417 = C152747 / C152811;
    const double C73311 = C152747 / C150660;
    const double C152887 = C152847 / C150608;
    const double C6338 = (C152696 * std::pow(C152742, 2)) / C150616 + C152842;
    const double C150624 = C150606 * C150622;
    const double C100536 =
        (-C150622 / C150608) / (2 * C150608) - (0 * be) / C150608;
    const double C150672 = C150669 - C150665;
    const double C150683 = C150680 / C150608;
    const double C31646 = C31629 * C644;
    const double C31644 = C31629 * C643;
    const double C31638 = C31629 * C646;
    const double C31636 = C31629 * C645;
    const double C40551 = C31629 * C1728;
    const double C40549 = C31629 * C1727;
    const double C40544 = C31629 * C1234;
    const double C40542 = C31629 * C1233;
    const double C193 = C169 - C170;
    const double C6604 = C6574 - C6575;
    const double C152891 = C152852 / C150616;
    const double C31643 = C152846 * C162;
    const double C31635 = C152846 * C161;
    const double C40541 = C152846 * C407;
    const double C14813 =
        (((0 - (C150606 * C150615) / C150608) * ae) / C150608 -
         (0 * be) / C150618) /
            (2 * C150608) +
        ((C150606 *
              (((C152711 - (C150606 * 2 * C150619) / C150608) * ae) / C150608 -
               C150615 / C150618) +
          C152846) *
         ae) /
            C150608 +
        (0 * ae) / C150608 - C150619 / C150616;
    const double C152892 = C152854 / C150608;
    const double C100532 = -C152890;
    const double C14843 = C14810 * C162;
    const double C14823 = C14810 * C161;
    const double C65177 = C14810 * C407;
    const double C163 =
        (2 * C150724 * C150731 +
         C150724 * (C150731 + (C150726 * C150727 +
                               C150721 * bs[5] * std::pow(C150720, 5)) *
                                  C150607 * std::pow(C150724, 2))) /
        C150616;
    const double C406 = ((yP - yQ) * C150724 * C150731) / C150616;
    const double C408 =
        ((bs[2] * std::pow(C150716, 2) + C150721 * C150719 * C150722) *
             C150607 +
         C150731 * std::pow(yP - yQ, 2)) /
        C150616;
    const double C667 = (ae * C150724 * C150722 * C150719 * C150795 +
                         be * C150724 * C150722 * C150719 * C150796 +
                         C150718 * C150724 * C150731) /
                        C150616;
    const double C669 =
        ((C150807 + C150721 * C150719 * C150722) * C150607 +
         ae * (C150718 * C150810 + C150807 * be) +
         be * (C150718 * C150811 + C150807 * ae) +
         C150718 * (ae * C150810 + be * C150811 + C150718 * C150731)) /
        C150616;
    const double C1245 = (ae * C150928 * C150810 + be * C150928 * C150811 +
                          C150718 * C150928 * C150731) /
                         C150616;
    const double C690 = C134 * C651;
    const double C14828 = C14817 * C651;
    const double C32240 = C31629 * C651;
    const double C692 = C134 * C652;
    const double C14830 = C14817 * C652;
    const double C32242 = C31629 * C652;
    const double C1252 = C134 * C1235;
    const double C31934 = C31629 * C1235;
    const double C1254 = C134 * C1236;
    const double C31936 = C31629 * C1236;
    const double C430 = C135 * C373;
    const double C691 = C135 * C634;
    const double C1253 = C135 * C1228;
    const double C1899 = C135 * C1525;
    const double C2121 = C135 * C1707;
    const double C3065 = C135 * C2665;
    const double C8202 = C134 * C1719;
    const double C41766 = C31629 * C1719;
    const double C65182 = C14817 * C1719;
    const double C8204 = C134 * C1720;
    const double C41768 = C31629 * C1720;
    const double C65184 = C14817 * C1720;
    const double C8203 = C135 * C1704;
    const double C10252 = C135 * C3209;
    const double C2678 =
        (2 * (C150718 * C150811 + C150807 * ae) +
         C150718 * (C150811 + C150718 * C151029 + C151025 * ae) +
         (C150807 + C150725 * C150721) * ae) /
        C150608;
    const double C2677 =
        (2 * (C150718 * C150810 + C150807 * be) +
         C150718 * (C150810 + C150718 * C151028 + C151025 * be) +
         (C150807 + C150725 * C150721) * be) /
        C150608;
    const double C194 = C173 - C174;
    const double C195 = C177 - C178;
    const double C450 = C421 - C422;
    const double C451 = C425 - C426;
    const double C6605 = C6578 - C6579;
    const double C711 = C682 - C683;
    const double C712 = C686 - C687;
    const double C7570 = C7553 - C7554;
    const double C6606 = C6585 - C6586;
    const double C7569 = C7549 - C7550;
    const double C150937 = C150724 * C150740;
    const double C151033 = C150718 * C150740;
    const double C151135 = C150928 * C150740;
    const double C164 =
        (3 * (C150731 + C150740 * C150736) +
         C150724 *
             (2 * C150724 * C150740 +
              C150724 * (C150740 + (C150734 * C150735 +
                                    C150721 * bs[6] * std::pow(C150716, 6)) *
                                       C150607 * C150736))) /
        C150616;
    const double C405 = ((yP - yQ) * (C150731 + C150740 * C150736)) / C150616;
    const double C409 =
        (C150724 * C150731 + C150724 * C150740 * std::pow(yP - yQ, 2)) /
        C150616;
    const double C666 =
        (ae * (C150722 * C150719 * C150795 + C150799 * C150736) +
         be * (C150722 * C150719 * C150796 + C150800 * C150736) +
         C150718 * (C150731 + C150740 * C150736)) /
        C150616;
    const double C670 =
        (C150724 * C150731 + ae * (C150718 * C150813 + C150814 * be) +
         be * (C150718 * C150815 + C150814 * ae) +
         C150718 *
             (ae * C150813 + be * C150815 + C150718 * C150724 * C150740)) /
        C150616;
    const double C1246 = (ae * C150928 * C150813 + be * C150928 * C150815 +
                          C150718 * C150928 * C150724 * C150740) /
                         C150616;
    const double C1550 =
        (2 * C150928 * C150731 +
         C150928 * (C150731 + C150740 * std::pow(C150928, 2))) /
        C150616;
    const double C1740 =
        (C150928 * C150731 + ae * (C150718 * C150957 + C150958 * be) +
         be * (C150718 * C150959 + C150958 * ae) +
         C150718 *
             (ae * C150957 + be * C150959 + C150718 * C150928 * C150740)) /
        C150616;
    const double C1744 = (ae * (C150810 + C150799 * C150940) +
                          be * (C150811 + C150800 * C150940) +
                          C150718 * (C150731 + C150740 * C150940)) /
                         C150616;
    const double C2690 =
        (2 * (ae * C150810 + be * C150811 + C150718 * C150731) +
         ae * (C150810 + C150718 * C151028 + C151025 * be) +
         be * (C150811 + C150718 * C151029 + C151025 * ae) +
         C150718 *
             (C150731 + ae * C151028 + be * C151029 +
              C150718 * (ae * C150799 + be * C150800 + C150718 * C150740))) /
        C150616;
    const double C150749 = C150748 * C150736;
    const double C150752 = C150724 * C150748;
    const double C151186 = C150748 * C150940;
    const double C151189 = C150928 * C150748;
    const double C151497 = C150718 * C150748;
    const double C1551 = (3 * (C150731 + C150740 * C150940) +
                          C150928 * (2 * C150928 * C150740 +
                                     C150928 * (C150740 + C150748 * C150940))) /
                         C150616;
    const double C150841 = C150724 * C150837;
    const double C150855 = 3 * C150837;
    const double C150950 = C150928 * C150837;
    const double C151011 = C150837 * ae;
    const double C151009 = C150718 * C150837;
    const double C151008 = C150837 * be;
    const double C1524 =
        2 * C150928 * C150821 + C150928 * (C150821 + C150837 * C150940);
    const double C1706 = C150718 * (C150821 + C150837 * C150940);
    const double C2664 =
        2 * C150718 * C150821 + C150718 * (C150821 + C150837 * C150721);
    const double C150976 = C150830 + C150973;
    const double C151067 = C151061 + C151062;
    const double C151066 = C150830 + C151060;
    const double C151068 = C151059 * ae;
    const double C151065 = C151059 * be;
    const double C151461 = 2 * C151059;
    const double C151064 = C151057 + C151058;
    const double C151155 = C151149 * ae;
    const double C151153 = C150718 * C151149;
    const double C151152 = C151149 * be;
    const double C151206 = 2 * C151149;
    const double C3210 =
        2 * C150718 * C150954 + C150718 * (C150954 + C151149 * C150721);
    const double C151230 = C150928 * C151227;
    const double C151241 = 3 * C151227;
    const double C151315 = C151227 * ae;
    const double C151313 = C150718 * C151227;
    const double C151312 = C151227 * be;
    const double C9509 =
        2 * C150718 * C150969 + C150718 * (C150969 + C151227 * C150721);
    const double C151332 = C151326 + C151327;
    const double C151331 = C151137 + C151325;
    const double C151333 = C151324 * ae;
    const double C151330 = C151324 * be;
    const double C151736 = 2 * C151324;
    const double C151329 = C151322 + C151323;
    const double C151519 = C150718 * C151512;
    const double C151552 = 2 * C151512;
    const double C151539 = be * C151512;
    const double C151520 = C151511 * ae;
    const double C151518 = C150718 * C151511;
    const double C151517 = C151511 * be;
    const double C151550 = 3 * C151511;
    const double C151516 = C150718 * C151509;
    const double C151544 = 2 * C151509;
    const double C151538 = ae * C151509;
    const double C153 = (3 * (C150811 + C150800 * C150736) +
                         C150724 * (2 * C150815 + C150724 * C150826)) /
                        C150608;
    const double C381 = (C150928 * (2 * C150815 + C150724 * C150826)) / C150608;
    const double C393 =
        (C150811 + C150800 * C150736 + C150826 * C150940) / C150608;
    const double C642 = (C150718 * (2 * C150815 + C150724 * C150826) +
                         (2 * C150814 + C150724 * C150821) * ae) /
                        C150608;
    const double C654 = (C150811 + C150800 * C150736 +
                         C150718 * (C150718 * C150826 + C150821 * ae) +
                         C150718 * C150821 * ae) /
                        C150608;
    const double C1238 =
        (C150718 * C150928 * C150826 + C150928 * C150821 * ae) / C150608;
    const double C1534 =
        (2 * C150928 * C150826 + C150928 * (C150826 + C150845 * C150940)) /
        C150608;
    const double C1724 = (C150718 * (C150826 + C150845 * C150940) +
                          (C150821 + C150837 * C150940) * ae) /
                         C150608;
    const double C1718 =
        (C150928 * C150815 + C150718 * (C150718 * C150955 + C150954 * ae) +
         C150718 * C150954 * ae) /
        C150608;
    const double C151021 = C151018 + C151019;
    const double C1900 = C134 * C1536;
    const double C2122 = C134 * C1726;
    const double C31948 = C31629 * C1726;
    const double C1540 = (3 * (C150811 + C150800 * C150940) +
                          C150928 * (2 * C150959 + C150928 * C150970)) /
                         C150608;
    const double C1730 = (C150811 + C150800 * C150940 +
                          C150718 * (C150718 * C150970 + C150969 * ae) +
                          C150718 * C150969 * ae) /
                         C150608;
    const double C2270 = (C150718 * (2 * C150959 + C150928 * C150970) +
                          (2 * C150958 + C150928 * C150969) * ae) /
                         C150608;
    const double C151048 = C150718 * C151044;
    const double C151504 = 2 * C151044;
    const double C151494 = be * C151044;
    const double C151145 = C151142 + C151143;
    const double C152 = (3 * (C150810 + C150799 * C150736) +
                         C150724 * (2 * C150813 + C150724 * C150825)) /
                        C150608;
    const double C380 = (C150928 * (2 * C150813 + C150724 * C150825)) / C150608;
    const double C392 =
        (C150810 + C150799 * C150736 + C150825 * C150940) / C150608;
    const double C641 = (C150718 * (2 * C150813 + C150724 * C150825) +
                         (2 * C150814 + C150724 * C150821) * be) /
                        C150608;
    const double C653 = (C150810 + C150799 * C150736 +
                         C150718 * (C150718 * C150825 + C150821 * be) +
                         C150718 * C150821 * be) /
                        C150608;
    const double C1237 =
        (C150718 * C150928 * C150825 + C150928 * C150821 * be) / C150608;
    const double C1533 =
        (2 * C150928 * C150825 + C150928 * (C150825 + C150843 * C150940)) /
        C150608;
    const double C1723 = (C150718 * (C150825 + C150843 * C150940) +
                          (C150821 + C150837 * C150940) * be) /
                         C150608;
    const double C1717 =
        (C150928 * C150813 + C150718 * (C150718 * C150953 + C150954 * be) +
         C150718 * C150954 * be) /
        C150608;
    const double C151020 = C151015 + C151016;
    const double C151063 = C151054 + C151055;
    const double C1898 = C134 * C1535;
    const double C2120 = C134 * C1725;
    const double C31946 = C31629 * C1725;
    const double C1745 =
        (C150731 + C150740 * C150940 + ae * (C150718 * C150968 + C150969 * be) +
         be * (C150718 * C150970 + C150969 * ae) +
         C150718 * (ae * C150968 + be * C150970 +
                    C150718 * (C150740 + C150748 * C150940))) /
        C150616;
    const double C2277 = (ae * (2 * C150957 + C150928 * C150968) +
                          be * (2 * C150959 + C150928 * C150970) +
                          C150718 * (2 * C150928 * C150740 +
                                     C150928 * (C150740 + C150748 * C150940))) /
                         C150616;
    const double C1539 = (3 * (C150810 + C150799 * C150940) +
                          C150928 * (2 * C150957 + C150928 * C150968)) /
                         C150608;
    const double C1729 = (C150810 + C150799 * C150940 +
                          C150718 * (C150718 * C150968 + C150969 * be) +
                          C150718 * C150969 * be) /
                         C150608;
    const double C2269 = (C150718 * (2 * C150957 + C150928 * C150968) +
                          (2 * C150958 + C150928 * C150969) * be) /
                         C150608;
    const double C151047 = C150718 * C151041;
    const double C151498 = 2 * C151041;
    const double C151493 = ae * C151041;
    const double C151144 = C151139 + C151140;
    const double C151328 = C151319 + C151320;
    const double C150761 = C150760 * C150736;
    const double C150767 = C150724 * C150760;
    const double C151190 = C150760 * C150940;
    const double C151542 = C150718 * C150760;
    const double C151732 = C150928 * C150760;
    const double C150776 = C150775 * C150736;
    const double C151197 = C150724 * C150775;
    const double C151822 = C150775 * C150940;
    const double C151902 = C150928 * C150775;
    const double C152013 = C150718 * C150775;
    const double C150904 = C150724 * C150900;
    const double C151414 = C150900 * C150940;
    const double C151663 = C150928 * C150900;
    const double C151699 = C150900 * ae;
    const double C151695 = C150900 * C150721;
    const double C151694 = C150718 * C150900;
    const double C151693 = C150900 * be;
    const double C151282 = C150891 + C151278;
    const double C151623 = C151615 + C151616;
    const double C151622 = C150891 + C151610;
    const double C151624 = C151609 * ae;
    const double C151621 = C151609 * be;
    const double C151620 = C151607 + C151608;
    const double C151793 = C151781 * ae;
    const double C151791 = C151781 * C150721;
    const double C151790 = C150718 * C151781;
    const double C151789 = C151781 * be;
    const double C151845 = C150928 * C151842;
    const double C151974 = C151842 * ae;
    const double C151970 = C151842 * C150721;
    const double C151969 = C150718 * C151842;
    const double C151968 = C151842 * be;
    const double C151928 = C151920 + C151921;
    const double C151927 = C151735 + C151919;
    const double C151929 = C151918 * ae;
    const double C151926 = C151918 * be;
    const double C151925 = C151916 + C151917;
    const double C152045 = C150718 * C152036;
    const double C152046 = C152035 * ae;
    const double C152044 = C150718 * C152035;
    const double C152043 = C152035 * be;
    const double C152042 = C150718 * C152033;
    const double C150875 = C150724 * C150872;
    const double C150894 = 3 * C150872;
    const double C150981 = C150872 * C150940;
    const double C151084 = C150718 * C150872;
    const double C151162 = C150928 * C150872;
    const double C151689 = be * C150872;
    const double C151212 = C150859 + C151209;
    const double C151279 = 2 * C151273;
    const double C151372 = C150718 * C151273;
    const double C151777 = be * C151273;
    const double C151470 = C151463 + C151464;
    const double C151255 = C150928 * C151252;
    const double C151349 = C150718 * C151252;
    const double C151838 = 3 * C151252;
    const double C151964 = be * C151252;
    const double C151569 = C150718 * C151561;
    const double C152026 = 2 * C151561;
    const double C152010 = be * C151561;
    const double C151753 = C151746 + C151747;
    const double C150873 = C150724 * C150870;
    const double C150886 = 3 * C150870;
    const double C150979 = C150870 * C150940;
    const double C151080 = C150718 * C150870;
    const double C151160 = C150928 * C150870;
    const double C151688 = ae * C150870;
    const double C151210 = C150853 + C151205;
    const double C151275 = 2 * C151267;
    const double C151368 = C150718 * C151267;
    const double C151776 = ae * C151267;
    const double C151467 = C151457 + C151458;
    const double C151619 = C151602 + C151603;
    const double C151253 = C150928 * C151248;
    const double C151345 = C150718 * C151248;
    const double C151830 = 3 * C151248;
    const double C151963 = ae * C151248;
    const double C151566 = C150718 * C151558;
    const double C152016 = 2 * C151558;
    const double C152009 = ae * C151558;
    const double C151750 = C151742 + C151743;
    const double C151914 = C151900 + C151901;
    const double C182 = C135 * C140;
    const double C418 = C135 * C368;
    const double C434 = C135 * C374;
    const double C679 = C135 * C629;
    const double C695 = C135 * C635;
    const double C1257 = C135 * C1229;
    const double C2903 = C135 * C1703;
    const double C7940 = C135 * C1527;
    const double C8207 = C135 * C1709;
    const double C8211 = C135 * C2265;
    const double C150871 = C150863 + C150868;
    const double C150983 = C150837 + C150980;
    const double C151089 = C150837 + C151083;
    const double C151091 = C151082 * ae;
    const double C151088 = C151082 * be;
    const double C151696 = 2 * C151082;
    const double C151167 = C151161 * ae;
    const double C151165 = C150718 * C151161;
    const double C151164 = C151161 * be;
    const double C151413 = 2 * C151161;
    const double C151214 = C150928 * C151211;
    const double C151269 = 3 * C151211;
    const double C151307 = C151211 * ae;
    const double C151305 = C150718 * C151211;
    const double C151304 = C151211 * be;
    const double C151377 = C151149 + C151371;
    const double C151379 = C151370 * ae;
    const double C151376 = C151370 * be;
    const double C151782 = 2 * C151370;
    const double C151478 = C151469 * ae;
    const double C151476 = C150718 * C151469;
    const double C151475 = C151469 * be;
    const double C151612 = 3 * C151469;
    const double C151257 = C151249 + C151254;
    const double C151354 = C151227 + C151348;
    const double C151356 = C151347 * ae;
    const double C151353 = C151347 * be;
    const double C151971 = 2 * C151347;
    const double C151573 = C151549 + C151568;
    const double C151760 = C151752 * ae;
    const double C151758 = C150718 * C151752;
    const double C151757 = C151752 * be;
    const double C151908 = 3 * C151752;
    const double C150849 = C150838 + C150847;
    const double C1542 = (3 * (C150815 + C150832 * C150940) +
                          C150928 * (2 * C150955 + C150928 * C150977)) /
                         C150608;
    const double C151234 = C151224 + C151231;
    const double C150848 = C150834 + C150846;
    const double C151086 = C151077 + C151078;
    const double C1541 = (3 * (C150813 + C150828 * C150940) +
                          C150928 * (2 * C150953 + C150928 * C150975)) /
                         C150608;
    const double C151374 = C151365 + C151366;
    const double C151232 = C151220 + C151229;
    const double C151351 = C151342 + C151343;
    const double C150914 = C150901 + C150911;
    const double C151419 = C150872 + C151416;
    const double C151671 = C150718 * C151664;
    const double C151286 = C150928 * C151283;
    const double C151395 = C150718 * C151283;
    const double C151849 = C151839 + C151846;
    const double C150912 = C150897 + C150909;
    const double C151417 = C150870 + C151412;
    const double C151667 = C150718 * C151662;
    const double C151284 = C150928 * C151281;
    const double C151391 = C150718 * C151281;
    const double C151847 = C151831 + C151844;
    const double C152855 = C152806 / C150616;
    const double C152857 = C152810 / C150608;
    const double C6341 = -C152856;
    const double C152488 = C152487 / C152478;
    const double C152861 = 2 * C152816;
    const double C152497 = C152496 / C152475;
    const double C152865 = C152820 / C152493;
    const double C152896 = C152814 - C152860;
    const double C3495 = -C152860;
    const double C152914 = C152895 + C152485;
    const double C152570 = C152569 / C152478;
    const double C152869 = 2 * C152825;
    const double C152577 = C152576 / C152475;
    const double C152879 = C152834 / C152493;
    const double C152904 = C152828 - C152876;
    const double C3355 = -C152876;
    const double C152917 = C152900 + C152566;
    const double C152612 = C152611 / C152478;
    const double C152872 = 2 * C152827;
    const double C152619 = C152618 / C152475;
    const double C152885 = C152840 / C152493;
    const double C152907 = C152829 - C152882;
    const double C4361 = -C152882;
    const double C152918 = C152902 + C152608;
    const double C152888 = C152848 / C150616;
    const double C152889 = C152850 / C150608;
    const double C51243 = -C152887;
    const double C150625 = C150624 / C150608;
    const double C100553 = C100536 * C644;
    const double C100551 = C100536 * C643;
    const double C100545 = C100536 * C646;
    const double C100543 = C100536 * C645;
    const double C100855 = C100536 * C1726;
    const double C100853 = C100536 * C1725;
    const double C100843 = C100536 * C1236;
    const double C100841 = C100536 * C1235;
    const double C101149 = C100536 * C652;
    const double C101147 = C100536 * C651;
    const double C109347 = C100536 * C1728;
    const double C109345 = C100536 * C1727;
    const double C109339 = C100536 * C1234;
    const double C109337 = C100536 * C1233;
    const double C110283 = C100536 * C1720;
    const double C110281 = C100536 * C1719;
    const double C117467 =
        (C150672 / C150660 - (0 * be) / C150608) / C150660 + (0 * ae) / C150608;
    const double C133819 = C150672 / C150660 - (0 * be) / C150608;
    const double C199 = C193 - C171;
    const double C6609 = C6604 - C6576;
    const double C152912 = C152844 - C152891;
    const double C14846 = C14813 * C151;
    const double C14844 = C14813 * C150;
    const double C14842 = C14813 * C149;
    const double C14840 = C14813 * C148;
    const double C14822 = C14813 * C147;
    const double C14820 = C14813 * C146;
    const double C15148 = C14813 * C383;
    const double C15146 = C14813 * C382;
    const double C15136 = C14813 * C391;
    const double C15134 = C14813 * C390;
    const double C15132 = C14813 * C385;
    const double C15130 = C14813 * C384;
    const double C15450 = C14813 * C644;
    const double C15448 = C14813 * C643;
    const double C15438 = C14813 * C652;
    const double C15436 = C14813 * C651;
    const double C15434 = C14813 * C646;
    const double C15432 = C14813 * C645;
    const double C16230 = C14813 * C1236;
    const double C16228 = C14813 * C1235;
    const double C17032 = C14813 * C1536;
    const double C17030 = C14813 * C1535;
    const double C17343 = C14813 * C1726;
    const double C17341 = C14813 * C1725;
    const double C65196 = C14813 * C389;
    const double C65194 = C14813 * C388;
    const double C65176 = C14813 * C387;
    const double C65174 = C14813 * C386;
    const double C66122 = C14813 * C1234;
    const double C66120 = C14813 * C1233;
    const double C66475 = C14813 * C1538;
    const double C66473 = C14813 * C1537;
    const double C66747 = C14813 * C1728;
    const double C66745 = C14813 * C1727;
    const double C66735 = C14813 * C1720;
    const double C66733 = C14813 * C1719;
    const double C152913 = C152853 - C152892;
    const double C100550 = C100532 * C162;
    const double C100542 = C100532 * C161;
    const double C109336 = C100532 * C407;
    const double C180 = C152711 * C163;
    const double C14847 = C14810 * C163;
    const double C31655 = C152846 * C163;
    const double C100562 = C100532 * C163;
    const double C428 = C152711 * C406;
    const double C15133 = C14810 * C406;
    const double C31941 = C152846 * C406;
    const double C100848 = C100532 * C406;
    const double C6581 = C152711 * C408;
    const double C40556 = C152846 * C408;
    const double C65197 = C14810 * C408;
    const double C109344 = C100532 * C408;
    const double C689 = C152711 * C667;
    const double C14827 = C14811 * C667;
    const double C15435 = C14810 * C667;
    const double C31639 = C152775 * C667;
    const double C32247 = C152846 * C667;
    const double C100546 = C152775 * C667;
    const double C101154 = C100532 * C667;
    const double C7556 = C152711 * C1245;
    const double C40545 = C152775 * C1245;
    const double C41773 = C152846 * C1245;
    const double C65181 = C14811 * C1245;
    const double C66123 = C14810 * C1245;
    const double C109340 = C152775 * C1245;
    const double C110288 = C100532 * C1245;
    const double C452 = C429 - C430;
    const double C713 = C690 - C691;
    const double C1268 = C1252 - C1253;
    const double C8222 = C8202 - C8203;
    const double C200 = C194 - C175;
    const double C201 = C195 - C179;
    const double C458 = C450 - C423;
    const double C459 = C451 - C427;
    const double C6610 = C6605 - C6580;
    const double C719 = C711 - C684;
    const double C720 = C712 - C688;
    const double C7574 = C7570 - C7555;
    const double C6611 = C6606 - C6587;
    const double C7573 = C7569 - C7551;
    const double C151046 = C151040 + C151033;
    const double C184 = C152711 * C164;
    const double C14867 = C14810 * C164;
    const double C31659 = C152846 * C164;
    const double C100566 = C100532 * C164;
    const double C424 = C152711 * C405;
    const double C15149 = C14810 * C405;
    const double C31933 = C152846 * C405;
    const double C100840 = C100532 * C405;
    const double C432 = C152711 * C409;
    const double C15137 = C14810 * C409;
    const double C31945 = C152846 * C409;
    const double C100852 = C100532 * C409;
    const double C685 = C152711 * C666;
    const double C14839 = C14811 * C666;
    const double C15451 = C14810 * C666;
    const double C31647 = C152775 * C666;
    const double C32239 = C152846 * C666;
    const double C100554 = C152775 * C666;
    const double C101146 = C100532 * C666;
    const double C693 = C152711 * C670;
    const double C14831 = C14812 * C670;
    const double C15439 = C14810 * C670;
    const double C15431 = C14811 * C670;
    const double C32251 = C152846 * C670;
    const double C32243 = C152775 * C670;
    const double C101158 = C100532 * C670;
    const double C101150 = C152775 * C670;
    const double C133833 = C133814 * C670;
    const double C1255 = C152711 * C1246;
    const double C15129 = C14811 * C1246;
    const double C16231 = C14810 * C1246;
    const double C31937 = C152775 * C1246;
    const double C33033 = C152846 * C1246;
    const double C100844 = C152775 * C1246;
    const double C101940 = C100532 * C1246;
    const double C6588 = C152711 * C1550;
    const double C42237 = C152846 * C1550;
    const double C66476 = C14810 * C1550;
    const double C109356 = C100532 * C1550;
    const double C8205 = C152711 * C1740;
    const double C41769 = C152775 * C1740;
    const double C42569 = C152846 * C1740;
    const double C65185 = C14812 * C1740;
    const double C66119 = C14811 * C1740;
    const double C66736 = C14810 * C1740;
    const double C110284 = C152775 * C1740;
    const double C110893 = C100532 * C1740;
    const double C142607 = C133814 * C1740;
    const double C7552 = C152711 * C1744;
    const double C40552 = C152775 * C1744;
    const double C42577 = C152846 * C1744;
    const double C65193 = C14811 * C1744;
    const double C66748 = C14810 * C1744;
    const double C109348 = C152775 * C1744;
    const double C110280 = C100532 * C1744;
    const double C150750 = C150740 + C150749;
    const double C150756 = 2 * C150752;
    const double C151056 = C150718 * C150752;
    const double C151147 = C150928 * C150752;
    const double C1549 =
        (2 * C150928 * C150937 +
         C150928 * (C150937 + C150752 * std::pow(C150928, 2))) /
        C150616;
    const double C1739 =
        (C150928 * C150937 + ae * (C150718 * C150953 + C150954 * be) +
         be * (C150718 * C150955 + C150954 * ae) +
         C150718 *
             (ae * C150953 + be * C150955 + C150718 * C150928 * C150752)) /
        C150616;
    const double C1743 = (ae * (C150813 + C150828 * C150940) +
                          be * (C150815 + C150832 * C150940) +
                          C150718 * (C150937 + C150752 * C150940)) /
                         C150616;
    const double C151187 = C150740 + C151186;
    const double C151191 = 2 * C151189;
    const double C151321 = C150718 * C151189;
    const double C151515 = C151508 + C151497;
    const double C7942 = C152711 * C1551;
    const double C42257 = C152846 * C1551;
    const double C66496 = C14810 * C1551;
    const double C110645 = C100532 * C1551;
    const double C150844 = C150836 + C150841;
    const double C1715 =
        (C150928 * C150825 + C150718 * (C150718 * C150949 + C150950 * be) +
         C150718 * C150950 * be) /
        C150608;
    const double C1716 =
        (C150928 * C150826 + C150718 * (C150718 * C150951 + C150950 * ae) +
         C150718 * C150950 * ae) /
        C150608;
    const double C1702 = C150928 * C150821 + C150950 * C150721;
    const double C3211 =
        2 * C150718 * C150950 + C150718 * (C150950 + C151161 * C150721);
    const double C151013 = C151010 + C151011;
    const double C151012 = C151007 + C151008;
    const double C1895 = C135 * C1524;
    const double C2117 = C135 * C1706;
    const double C3061 = C135 * C2664;
    const double C1731 = (C150813 + C150828 * C150940 +
                          C150718 * (C150718 * C150975 + C150976 * be) +
                          C150718 * C150976 * be) /
                         C150608;
    const double C1732 = (C150815 + C150832 * C150940 +
                          C150718 * (C150718 * C150977 + C150976 * ae) +
                          C150718 * C150976 * ae) /
                         C150608;
    const double C2271 = (C150718 * (2 * C150953 + C150928 * C150975) +
                          (2 * C150954 + C150928 * C150976) * be) /
                         C150608;
    const double C2272 = (C150718 * (2 * C150955 + C150928 * C150977) +
                          (2 * C150954 + C150928 * C150976) * ae) /
                         C150608;
    const double C1528 = 3 * (C150814 + C150830 * C150940) +
                         C150928 * (2 * C150954 + C150928 * C150976);
    const double C1710 = C150814 + C150830 * C150940 + C150976 * C150721;
    const double C2266 = C150718 * (2 * C150954 + C150928 * C150976);
    const double C9508 =
        2 * C150718 * C150976 + C150718 * (C150976 + C151211 * C150721);
    const double C151071 = C150718 * C151067;
    const double C151462 = 2 * C151067;
    const double C151452 = be * C151067;
    const double C2668 = 3 * (C150814 + C150830 * C150721) +
                         C150718 * (2 * C151017 + C150718 * C151066);
    const double C151070 = C150718 * C151064;
    const double C151456 = 2 * C151064;
    const double C151451 = ae * C151064;
    const double C151157 = C151154 + C151155;
    const double C151156 = C151151 + C151152;
    const double C10033 = C135 * C3210;
    const double C151233 = C151222 + C151230;
    const double C151317 = C151314 + C151315;
    const double C151316 = C151311 + C151312;
    const double C10248 = C135 * C9509;
    const double C151336 = C150718 * C151332;
    const double C151737 = 2 * C151332;
    const double C151729 = be * C151332;
    const double C9510 = 3 * (C150958 + C151137 * C150721) +
                         C150718 * (2 * C151141 + C150718 * C151331);
    const double C151335 = C150718 * C151329;
    const double C151733 = 2 * C151329;
    const double C151728 = ae * C151329;
    const double C151524 = C150822 + C151519;
    const double C151523 = C151503 + C151518;
    const double C151522 = C150820 + C151516;
    const double C151556 = C150748 + C151538;
    const double C183 = C134 * C153;
    const double C14866 = C14813 * C153;
    const double C419 = C134 * C381;
    const double C15712 = C14813 * C381;
    const double C435 = C134 * C393;
    const double C15168 = C14813 * C393;
    const double C680 = C134 * C642;
    const double C15927 = C14813 * C642;
    const double C31650 = C31629 * C642;
    const double C100557 = C100536 * C642;
    const double C696 = C134 * C654;
    const double C14834 = C14817 * C654;
    const double C15470 = C14813 * C654;
    const double C32234 = C31629 * C654;
    const double C101141 = C100536 * C654;
    const double C1258 = C134 * C1238;
    const double C16250 = C14813 * C1238;
    const double C31928 = C31629 * C1238;
    const double C100835 = C100536 * C1238;
    const double C1896 = C134 * C1534;
    const double C2118 = C134 * C1724;
    const double C31956 = C31629 * C1724;
    const double C100863 = C100536 * C1724;
    const double C2904 = C134 * C1718;
    const double C15124 = C14817 * C1718;
    const double C18426 = C14813 * C1718;
    const double C33036 = C31629 * C1718;
    const double C101943 = C100536 * C1718;
    const double C2676 =
        (2 * (C150718 * C150815 + C150814 * ae) +
         C150718 * (C150815 + C150718 * C151021 + C151017 * ae) +
         (C150814 + C150830 * C150721) * ae) /
        C150608;
    const double C7941 = C134 * C1540;
    const double C66495 = C14813 * C1540;
    const double C8208 = C134 * C1730;
    const double C42580 = C31629 * C1730;
    const double C65188 = C14817 * C1730;
    const double C66767 = C14813 * C1730;
    const double C110275 = C100536 * C1730;
    const double C8212 = C134 * C2270;
    const double C42240 = C31629 * C2270;
    const double C67484 = C14813 * C2270;
    const double C109351 = C100536 * C2270;
    const double C151050 = C150800 + C151048;
    const double C3214 =
        (2 * (C150718 * C150959 + C150958 * ae) +
         C150718 * (C150959 + C150718 * C151145 + C151141 * ae) +
         (C150958 + C151137 * C150721) * ae) /
        C150608;
    const double C181 = C134 * C152;
    const double C14864 = C14813 * C152;
    const double C417 = C134 * C380;
    const double C15710 = C14813 * C380;
    const double C433 = C134 * C392;
    const double C15166 = C14813 * C392;
    const double C678 = C134 * C641;
    const double C15925 = C14813 * C641;
    const double C31648 = C31629 * C641;
    const double C100555 = C100536 * C641;
    const double C694 = C134 * C653;
    const double C14832 = C14817 * C653;
    const double C15468 = C14813 * C653;
    const double C32232 = C31629 * C653;
    const double C101139 = C100536 * C653;
    const double C1256 = C134 * C1237;
    const double C16248 = C14813 * C1237;
    const double C31926 = C31629 * C1237;
    const double C100833 = C100536 * C1237;
    const double C1894 = C134 * C1533;
    const double C2116 = C134 * C1723;
    const double C31954 = C31629 * C1723;
    const double C100861 = C100536 * C1723;
    const double C2902 = C134 * C1717;
    const double C15122 = C14817 * C1717;
    const double C18424 = C14813 * C1717;
    const double C33034 = C31629 * C1717;
    const double C101941 = C100536 * C1717;
    const double C2689 =
        (2 * (ae * C150813 + be * C150815 + C150718 * C150937) +
         ae * (C150813 + C150718 * C151020 + C151017 * be) +
         be * (C150815 + C150718 * C151021 + C151017 * ae) +
         C150718 *
             (C150937 + ae * C151020 + be * C151021 +
              C150718 * (ae * C150828 + be * C150832 + C150718 * C150752))) /
        C150616;
    const double C2675 =
        (2 * (C150718 * C150813 + C150814 * be) +
         C150718 * (C150813 + C150718 * C151020 + C151017 * be) +
         (C150814 + C150830 * C150721) * be) /
        C150608;
    const double C1904 = C1898 - C1899;
    const double C2126 = C2120 - C2121;
    const double C8209 = C152711 * C1745;
    const double C42597 = C152846 * C1745;
    const double C42581 = C152775 * C1745;
    const double C65189 = C14812 * C1745;
    const double C66768 = C14810 * C1745;
    const double C66752 = C14811 * C1745;
    const double C110276 = C152775 * C1745;
    const double C110901 = C100532 * C1745;
    const double C142611 = C133814 * C1745;
    const double C8213 = C152711 * C2277;
    const double C42241 = C152775 * C2277;
    const double C43549 = C152846 * C2277;
    const double C66480 = C14811 * C2277;
    const double C67485 = C14810 * C2277;
    const double C109352 = C152775 * C2277;
    const double C110909 = C100532 * C2277;
    const double C7939 = C134 * C1539;
    const double C66493 = C14813 * C1539;
    const double C8206 = C134 * C1729;
    const double C42578 = C31629 * C1729;
    const double C65186 = C14817 * C1729;
    const double C66765 = C14813 * C1729;
    const double C110273 = C100536 * C1729;
    const double C8210 = C134 * C2269;
    const double C42238 = C31629 * C2269;
    const double C67482 = C14813 * C2269;
    const double C109349 = C100536 * C2269;
    const double C151049 = C150799 + C151047;
    const double C151507 = C150740 + C151493;
    const double C3221 =
        (2 * (ae * C150957 + be * C150959 + C150718 * C151135) +
         ae * (C150957 + C150718 * C151144 + C151141 * be) +
         be * (C150959 + C150718 * C151145 + C151141 * ae) +
         C150718 * (C151135 + ae * C151144 + be * C151145 +
                    C150718 * (ae * C151136 + be * C151138 +
                               C150718 * C150928 * C150748))) /
        C150616;
    const double C3213 =
        (2 * (C150718 * C150957 + C150958 * be) +
         C150718 * (C150957 + C150718 * C151144 + C151141 * be) +
         (C150958 + C151137 * C150721) * be) /
        C150608;
    const double C150762 = C150748 + C150761;
    const double C150771 = 2 * C150767;
    const double C151183 = C150767 * C150940;
    const double C151196 = C150928 * C150767;
    const double C151455 = C150718 * C150767;
    const double C1552 = (3 * (C150937 + C150752 * C150940) +
                          C150928 * (2 * C150928 * C150752 +
                                     C150928 * (C150752 + C150767 * C150940))) /
                         C150616;
    const double C1746 =
        (C150937 + C150752 * C150940 + ae * (C150718 * C150975 + C150976 * be) +
         be * (C150718 * C150977 + C150976 * ae) +
         C150718 * (ae * C150975 + be * C150977 +
                    C150718 * (C150752 + C150767 * C150940))) /
        C150616;
    const double C2278 = (ae * (2 * C150953 + C150928 * C150975) +
                          be * (2 * C150955 + C150928 * C150977) +
                          C150718 * (2 * C150928 * C150752 +
                                     C150928 * (C150752 + C150767 * C150940))) /
                         C150616;
    const double C151192 = C150748 + C151190;
    const double C151565 = C151557 + C151542;
    const double C151741 = C150718 * C151732;
    const double C151821 = 2 * C151732;
    const double C150777 = C150760 + C150776;
    const double C151199 = C151197 * C150940;
    const double C151604 = C150718 * C151197;
    const double C151778 = C150928 * C151197;
    const double C151823 = C150760 + C151822;
    const double C151915 = C150718 * C151902;
    const double C152041 = C152032 + C152013;
    const double C150907 = C150899 + C150904;
    const double C151418 = C150864 + C151414;
    const double C151672 = C151663 * ae;
    const double C151670 = C151663 * C150721;
    const double C151669 = C150718 * C151663;
    const double C151668 = C151663 * be;
    const double C151705 = C151698 + C151699;
    const double C151704 = C150864 + C151695;
    const double C151706 = C151694 * ae;
    const double C151703 = C151694 * be;
    const double C151702 = C151692 + C151693;
    const double C151285 = C150928 * C151282;
    const double C151396 = C151282 * ae;
    const double C151394 = C151282 * C150721;
    const double C151393 = C150718 * C151282;
    const double C151392 = C151282 * be;
    const double C151631 = C150718 * C151623;
    const double C151632 = C151622 * ae;
    const double C151630 = C150718 * C151622;
    const double C151629 = C151622 * be;
    const double C151628 = C150718 * C151620;
    const double C151799 = C151792 + C151793;
    const double C151798 = C151270 + C151791;
    const double C151800 = C151790 * ae;
    const double C151797 = C151790 * be;
    const double C151796 = C151788 + C151789;
    const double C151848 = C151835 + C151845;
    const double C151980 = C151973 + C151974;
    const double C151979 = C151250 + C151970;
    const double C151981 = C151969 * ae;
    const double C151978 = C151969 * be;
    const double C151977 = C151967 + C151968;
    const double C151934 = C150718 * C151928;
    const double C151935 = C151927 * ae;
    const double C151933 = C150718 * C151927;
    const double C151932 = C151927 * be;
    const double C151931 = C150718 * C151925;
    const double C152050 = C150866 + C152045;
    const double C152049 = C152021 + C152044;
    const double C152048 = C150862 + C152042;
    const double C150878 = C150865 + C150875;
    const double C150984 = C150845 + C150981;
    const double C151090 = C151084 + C151085;
    const double C151166 = C150718 * C151162;
    const double C151415 = 2 * C151162;
    const double C151660 = be * C151162;
    const double C151215 = C150928 * C151212;
    const double C151272 = 3 * C151212;
    const double C151306 = C150718 * C151212;
    const double C151389 = be * C151212;
    const double C151378 = C151372 + C151373;
    const double C151477 = C150718 * C151470;
    const double C151614 = 2 * C151470;
    const double C151601 = be * C151470;
    const double C151258 = C151251 + C151255;
    const double C151355 = C151349 + C151350;
    const double C151574 = C150839 + C151569;
    const double C151759 = C150718 * C151753;
    const double C151910 = 2 * C151753;
    const double C151899 = be * C151753;
    const double C150876 = C150861 + C150873;
    const double C150982 = C150843 + C150979;
    const double C151087 = C151080 + C151081;
    const double C151163 = C150718 * C151160;
    const double C151411 = 2 * C151160;
    const double C151659 = ae * C151160;
    const double C151701 = C151688 + C151689;
    const double C151213 = C150928 * C151210;
    const double C151266 = 3 * C151210;
    const double C151303 = C150718 * C151210;
    const double C151388 = ae * C151210;
    const double C151375 = C151368 + C151369;
    const double C151786 = C151776 + C151777;
    const double C151474 = C150718 * C151467;
    const double C151606 = 2 * C151467;
    const double C151600 = ae * C151467;
    const double C151256 = C151247 + C151253;
    const double C151352 = C151345 + C151346;
    const double C151976 = C151963 + C151964;
    const double C151572 = C150835 + C151566;
    const double C152031 = C150760 + C152009;
    const double C151756 = C150718 * C151750;
    const double C151904 = 2 * C151750;
    const double C151898 = ae * C151750;
    const double C150874 = C150724 * C150871;
    const double C150889 = 4 * C150871;
    const double C150946 = C150928 * C150871;
    const double C151003 = C150871 * ae;
    const double C151001 = C150718 * C150871;
    const double C151000 = C150871 * be;
    const double C1529 = 3 * (C150821 + C150837 * C150940) +
                         C150928 * (2 * C150950 + C150928 * C150983);
    const double C1711 = C150821 + C150837 * C150940 + C150983 * C150721;
    const double C2267 = C150718 * (2 * C150950 + C150928 * C150983);
    const double C2669 = 3 * (C150821 + C150837 * C150721) +
                         C150718 * (2 * C151009 + C150718 * C151089);
    const double C151217 = C151206 + C151214;
    const double C9512 = 3 * (C150954 + C151149 * C150721) +
                         C150718 * (2 * C151153 + C150718 * C151377);
    const double C151481 = C151461 + C151476;
    const double C151260 = C150928 * C151257;
    const double C151439 = C151257 * ae;
    const double C151437 = C150718 * C151257;
    const double C151436 = C151257 * be;
    const double C151833 = 4 * C151257;
    const double C9511 = 3 * (C150969 + C151227 * C150721) +
                         C150718 * (2 * C151313 + C150718 * C151354);
    const double C151580 = C151573 * ae;
    const double C151578 = C150718 * C151573;
    const double C151577 = C151573 * be;
    const double C152023 = 4 * C151573;
    const double C151763 = C151736 + C151758;
    const double C155 = (4 * (2 * C150815 + C150724 * C150826) +
                         C150724 * (3 * C150826 + C150724 * C150849)) /
                        C150608;
    const double C395 =
        (2 * C150815 + C150724 * C150826 + C150849 * C150940) / C150608;
    const double C397 = (C150928 * (3 * C150826 + C150724 * C150849)) / C150608;
    const double C6593 = C134 * C1542;
    const double C7929 = (4 * (2 * C150959 + C150928 * C150970) +
                          C150928 * (3 * C150970 + C150928 * C151234)) /
                         C150608;
    const double C154 = (4 * (2 * C150813 + C150724 * C150825) +
                         C150724 * (3 * C150825 + C150724 * C150848)) /
                        C150608;
    const double C394 =
        (2 * C150813 + C150724 * C150825 + C150848 * C150940) / C150608;
    const double C396 = (C150928 * (3 * C150825 + C150724 * C150848)) / C150608;
    const double C6591 = C134 * C1541;
    const double C7928 = (4 * (2 * C150957 + C150928 * C150968) +
                          C150928 * (3 * C150968 + C150928 * C151232)) /
                         C150608;
    const double C150917 = C150724 * C150914;
    const double C150988 = C150914 * C150940;
    const double C151107 = C150718 * C150914;
    const double C151174 = C150928 * C150914;
    const double C151422 = C150928 * C151419;
    const double C151430 = C150718 * C151419;
    const double C151289 = C151279 + C151286;
    const double C151852 = C150928 * C151849;
    const double C151871 = C150718 * C151849;
    const double C150915 = C150724 * C150912;
    const double C150986 = C150912 * C150940;
    const double C151103 = C150718 * C150912;
    const double C151172 = C150928 * C150912;
    const double C151420 = C150928 * C151417;
    const double C151427 = C150718 * C151417;
    const double C151287 = C151275 + C151284;
    const double C151850 = C150928 * C151847;
    const double C151867 = C150718 * C151847;
    const double C152893 = C152805 - C152855;
    const double C152894 = C152809 - C152857;
    const double C152489 = C152485 - C152488;
    const double C152897 = C152861 / C152475;
    const double C152498 = C152494 - C152497;
    const double C152915 = C152896 / C152479;
    const double C152571 = C152566 - C152570;
    const double C152901 = C152869 / C152475;
    const double C152578 = C152574 - C152577;
    const double C152919 = C152904 / C152479;
    const double C152613 = C152608 - C152612;
    const double C152903 = C152872 / C152475;
    const double C152620 = C152616 - C152619;
    const double C152921 = C152907 / C152479;
    const double C152910 = C152842 - C152888;
    const double C152911 = C152849 - C152889;
    const double C150626 = C152711 - C150625;
    const double C133836 = C133819 * C654;
    const double C133834 = C133819 * C653;
    const double C133832 = C133819 * C652;
    const double C133830 = C133819 * C651;
    const double C134126 = C133819 * C1718;
    const double C134124 = C133819 * C1717;
    const double C142610 = C133819 * C1730;
    const double C142608 = C133819 * C1729;
    const double C142606 = C133819 * C1720;
    const double C142604 = C133819 * C1719;
    const double C205 = C199 + C172;
    const double C6614 = C6609 + C6577;
    const double C133869 = C152912 * C164;
    const double C133849 = C152912 * C163;
    const double C133845 = C152912 * C162;
    const double C133825 = C152912 * C161;
    const double C134151 = C152912 * C405;
    const double C134139 = C152912 * C409;
    const double C134135 = C152912 * C406;
    const double C134453 = C152912 * C666;
    const double C134441 = C152912 * C670;
    const double C134437 = C152912 * C667;
    const double C135233 = C152912 * C1246;
    const double C142619 = C152912 * C408;
    const double C142599 = C152912 * C407;
    const double C143545 = C152912 * C1245;
    const double C143918 = C152912 * C1551;
    const double C143898 = C152912 * C1550;
    const double C144190 = C152912 * C1745;
    const double C144170 = C152912 * C1744;
    const double C144158 = C152912 * C1740;
    const double C144907 = C152912 * C2277;
    const double C117457 =
        (C152912 * C152770) / C150608 + (C152846 - C152890) / C150660;
    const double C133841 = C152913 * C666;
    const double C133829 = C152913 * C667;
    const double C134131 = C152913 * C1246;
    const double C134433 = C152913 * C670;
    const double C142615 = C152913 * C1744;
    const double C142603 = C152913 * C1245;
    const double C143541 = C152913 * C1740;
    const double C143902 = C152913 * C2277;
    const double C144174 = C152913 * C1745;
    const double C117458 =
        (C152913 * C152770) / C150608 + (2 * C152775 + C152912) / C150660;
    const double C117459 = (C152770 * C152775) / C150618 + C152913 / C150660;
    const double C460 = C452 - C431;
    const double C721 = C713 - C692;
    const double C1272 = C1268 - C1254;
    const double C8227 = C8222 - C8204;
    const double C206 = C200 + C176;
    const double C207 = C201 + C180;
    const double C467 = C459 + C428;
    const double C6615 = C6610 + C6581;
    const double C728 = C720 + C689;
    const double C7578 = C7574 + C7556;
    const double C466 = C458 + C424;
    const double C727 = C719 + C685;
    const double C6616 = C6611 + C6588;
    const double C7577 = C7573 + C7552;
    const double C165 =
        (4 * (2 * C150724 * C150740 + C150724 * C150750) +
         C150724 * (3 * C150750 +
                    C150724 * (2 * C150724 * C150748 +
                               C150724 * (C150748 + (C150743 * C150744 +
                                                     C150721 * bs[7] *
                                                         std::pow(C150720, 7)) *
                                                        C150607 * C150736)))) /
        C150616;
    const double C404 =
        ((yP - yQ) * (2 * C150724 * C150740 + C150724 * C150750)) / C150616;
    const double C410 =
        (C150731 + C150740 * C150736 + C150750 * std::pow(yP - yQ, 2)) /
        C150616;
    const double C665 =
        (ae * (2 * C150724 * C150799 +
               C150724 * (C150799 + C150735 * C150734 * C150795 * C150736)) +
         be * (2 * C150724 * C150800 +
               C150724 * (C150800 + C150735 * C150734 * C150796 * C150736)) +
         C150718 * (2 * C150724 * C150740 + C150724 * C150750)) /
        C150616;
    const double C671 =
        (C150731 + C150740 * C150736 + ae * (C150718 * C150825 + C150821 * be) +
         be * (C150718 * C150826 + C150821 * ae) +
         C150718 * (ae * C150825 + be * C150826 + C150718 * C150750)) /
        C150616;
    const double C1247 = (ae * C150928 * C150825 + be * C150928 * C150826 +
                          C150718 * C150928 * C150750) /
                         C150616;
    const double C151069 = C151063 + C151056;
    const double C1901 = C152711 * C1549;
    const double C17033 = C14810 * C1549;
    const double C33841 = C152846 * C1549;
    const double C102748 = C100532 * C1549;
    const double C136035 = C152912 * C1549;
    const double C2905 = C152711 * C1739;
    const double C15125 = C14812 * C1739;
    const double C16235 = C14811 * C1739;
    const double C18427 = C14810 * C1739;
    const double C33037 = C152775 * C1739;
    const double C35229 = C152846 * C1739;
    const double C101944 = C152775 * C1739;
    const double C104136 = C100532 * C1739;
    const double C134127 = C133814 * C1739;
    const double C135237 = C152913 * C1739;
    const double C137409 = C152912 * C1739;
    const double C2123 = C152711 * C1743;
    const double C15141 = C14811 * C1743;
    const double C17344 = C14810 * C1743;
    const double C31949 = C152775 * C1743;
    const double C34159 = C152846 * C1743;
    const double C100856 = C152775 * C1743;
    const double C103066 = C100532 * C1743;
    const double C134143 = C152913 * C1743;
    const double C136346 = C152912 * C1743;
    const double C7935 =
        (4 * (2 * C151135 + C150928 * C151187) +
         C150928 * (3 * C151187 +
                    C150928 * (2 * C150928 * C150748 +
                               C150928 * (C150748 + C150760 * C150940)))) /
        C150616;
    const double C151334 = C151328 + C151321;
    const double C151521 = C150718 * C151515;
    const double C151535 = 2 * C151515;
    const double C655 = (2 * C150813 + C150724 * C150825 +
                         C150718 * (C150718 * C150848 + C150844 * be) +
                         C150718 * C150844 * be) /
                        C150608;
    const double C656 = (2 * C150815 + C150724 * C150826 +
                         C150718 * (C150718 * C150849 + C150844 * ae) +
                         C150718 * C150844 * ae) /
                        C150608;
    const double C657 = (C150718 * (3 * C150825 + C150724 * C150848) +
                         (3 * C150821 + C150724 * C150844) * be) /
                        C150608;
    const double C658 = (C150718 * (3 * C150826 + C150724 * C150849) +
                         (3 * C150821 + C150724 * C150844) * ae) /
                        C150608;
    const double C1239 =
        (C150718 * C150928 * C150848 + C150928 * C150844 * be) / C150608;
    const double C1240 =
        (C150718 * C150928 * C150849 + C150928 * C150844 * ae) / C150608;
    const double C141 = 4 * (2 * C150814 + C150724 * C150821) +
                        C150724 * (3 * C150821 + C150724 * C150844);
    const double C375 = 2 * C150814 + C150724 * C150821 + C150844 * C150940;
    const double C376 = C150928 * (3 * C150821 + C150724 * C150844);
    const double C636 = 2 * C150814 + C150724 * C150821 + C150844 * C150721;
    const double C637 = C150718 * (3 * C150821 + C150724 * C150844);
    const double C1230 = C150718 * C150928 * C150844;
    const double C1523 =
        2 * C150928 * C150844 + C150928 * (C150844 + C150871 * C150940);
    const double C1705 = C150718 * (C150844 + C150871 * C150940);
    const double C2663 =
        2 * C150718 * C150844 + C150718 * (C150844 + C150871 * C150721);
    const double C2898 = C134 * C1715;
    const double C15154 = C14817 * C1715;
    const double C33042 = C31629 * C1715;
    const double C101949 = C100536 * C1715;
    const double C134156 = C133819 * C1715;
    const double C2900 = C134 * C1716;
    const double C15156 = C14817 * C1716;
    const double C33044 = C31629 * C1716;
    const double C101951 = C100536 * C1716;
    const double C134158 = C133819 * C1716;
    const double C2899 = C135 * C1702;
    const double C26872 = C135 * C3211;
    const double C2674 =
        (2 * (C150718 * C150826 + C150821 * ae) +
         C150718 * (C150826 + C150718 * C151013 + C151009 * ae) +
         (C150821 + C150837 * C150721) * ae) /
        C150608;
    const double C2673 =
        (2 * (C150718 * C150825 + C150821 * be) +
         C150718 * (C150825 + C150718 * C151012 + C151009 * be) +
         (C150821 + C150837 * C150721) * be) /
        C150608;
    const double C6844 = C134 * C1731;
    const double C15142 = C14817 * C1731;
    const double C34152 = C31629 * C1731;
    const double C103059 = C100536 * C1731;
    const double C134144 = C133819 * C1731;
    const double C6846 = C134 * C1732;
    const double C15144 = C14817 * C1732;
    const double C34154 = C31629 * C1732;
    const double C103061 = C100536 * C1732;
    const double C134146 = C133819 * C1732;
    const double C7559 = C134 * C2271;
    const double C33834 = C31629 * C2271;
    const double C102741 = C100536 * C2271;
    const double C7561 = C134 * C2272;
    const double C33836 = C31629 * C2272;
    const double C102743 = C100536 * C2272;
    const double C6592 = C135 * C1528;
    const double C6845 = C135 * C1710;
    const double C7560 = C135 * C2266;
    const double C10029 = C135 * C9508;
    const double C151073 = C150832 + C151071;
    const double C151072 = C150828 + C151070;
    const double C151465 = C150752 + C151451;
    const double C3216 =
        (2 * (C150718 * C150955 + C150954 * ae) +
         C150718 * (C150955 + C150718 * C151157 + C151153 * ae) +
         (C150954 + C151149 * C150721) * ae) /
        C150608;
    const double C3222 =
        (2 * (ae * C150953 + be * C150955 + C150718 * C151147) +
         ae * (C150953 + C150718 * C151156 + C151153 * be) +
         be * (C150955 + C150718 * C151157 + C151153 * ae) +
         C150718 * (C151147 + ae * C151156 + be * C151157 +
                    C150718 * (ae * C151148 + be * C151150 +
                               C150718 * C150928 * C150767))) /
        C150616;
    const double C3215 =
        (2 * (C150718 * C150953 + C150954 * be) +
         C150718 * (C150953 + C150718 * C151156 + C151153 * be) +
         (C150954 + C151149 * C150721) * be) /
        C150608;
    const double C8185 = (2 * C150957 + C150928 * C150968 +
                          C150718 * (C150718 * C151232 + C151233 * be) +
                          C150718 * C151233 * be) /
                         C150608;
    const double C8186 = (2 * C150959 + C150928 * C150970 +
                          C150718 * (C150718 * C151234 + C151233 * ae) +
                          C150718 * C151233 * ae) /
                         C150608;
    const double C8189 = (C150718 * (3 * C150968 + C150928 * C151232) +
                          (3 * C150969 + C150928 * C151233) * be) /
                         C150608;
    const double C8190 = (C150718 * (3 * C150970 + C150928 * C151234) +
                          (3 * C150969 + C150928 * C151233) * ae) /
                         C150608;
    const double C7923 = 4 * (2 * C150958 + C150928 * C150969) +
                         C150928 * (3 * C150969 + C150928 * C151233);
    const double C8178 = 2 * C150958 + C150928 * C150969 + C151233 * C150721;
    const double C8180 = C150718 * (3 * C150969 + C150928 * C151233);
    const double C10238 =
        2 * C150718 * C151233 + C150718 * (C151233 + C151257 * C150721);
    const double C9517 =
        (2 * (C150718 * C150970 + C150969 * ae) +
         C150718 * (C150970 + C150718 * C151317 + C151313 * ae) +
         (C150969 + C151227 * C150721) * ae) /
        C150608;
    const double C9516 =
        (2 * (C150718 * C150968 + C150969 * be) +
         C150718 * (C150968 + C150718 * C151316 + C151313 * be) +
         (C150969 + C151227 * C150721) * be) /
        C150608;
    const double C151338 = C151138 + C151336;
    const double C151337 = C151136 + C151335;
    const double C151739 = C151189 + C151728;
    const double C151527 = C151524 + C151513;
    const double C18106 = 4 * (2 * C151025 + C150718 * C151043) +
                          C150718 * (3 * C151043 + C150718 * C151523);
    const double C151526 = C151522 + C151510;
    const double C151564 = C151556 + C151539;
    const double C3066 = C134 * C2676;
    const double C15426 = C14817 * C2676;
    const double C18645 = C14813 * C2676;
    const double C32254 = C31629 * C2676;
    const double C101161 = C100536 * C2676;
    const double C134428 = C133819 * C2676;
    const double C151052 = C151050 + C151045;
    const double C10253 = C134 * C3214;
    const double C42572 = C31629 * C3214;
    const double C66114 = C14817 * C3214;
    const double C68749 = C14813 * C3214;
    const double C110896 = C100536 * C3214;
    const double C143536 = C133819 * C3214;
    const double C196 = C181 - C182;
    const double C449 = C417 - C418;
    const double C453 = C433 - C434;
    const double C710 = C678 - C679;
    const double C714 = C694 - C695;
    const double C1269 = C1256 - C1257;
    const double C1903 = C1894 - C1895;
    const double C2125 = C2116 - C2117;
    const double C2908 = C2902 - C2903;
    const double C3067 = C152711 * C2689;
    const double C15443 = C14811 * C2689;
    const double C15427 = C14812 * C2689;
    const double C18646 = C14810 * C2689;
    const double C32255 = C152775 * C2689;
    const double C35451 = C152846 * C2689;
    const double C101162 = C152775 * C2689;
    const double C104358 = C100532 * C2689;
    const double C134445 = C152913 * C2689;
    const double C134429 = C133814 * C2689;
    const double C137624 = C152912 * C2689;
    const double C3064 = C134 * C2675;
    const double C15424 = C14817 * C2675;
    const double C18643 = C14813 * C2675;
    const double C32252 = C31629 * C2675;
    const double C101159 = C100536 * C2675;
    const double C134426 = C133819 * C2675;
    const double C1907 = C1904 - C1900;
    const double C2129 = C2126 - C2122;
    const double C7951 = C7939 - C7940;
    const double C8223 = C8206 - C8207;
    const double C8224 = C8210 - C8211;
    const double C151051 = C151049 + C151042;
    const double C151514 = C151507 + C151494;
    const double C10254 = C152711 * C3221;
    const double C42573 = C152775 * C3221;
    const double C45223 = C152846 * C3221;
    const double C66115 = C14812 * C3221;
    const double C66740 = C14811 * C3221;
    const double C68750 = C14810 * C3221;
    const double C110897 = C152775 * C3221;
    const double C112935 = C100532 * C3221;
    const double C143537 = C133814 * C3221;
    const double C144162 = C152913 * C3221;
    const double C146164 = C152912 * C3221;
    const double C10251 = C134 * C3213;
    const double C42570 = C31629 * C3213;
    const double C66112 = C14817 * C3213;
    const double C68747 = C14813 * C3213;
    const double C110894 = C100536 * C3213;
    const double C143534 = C133819 * C3213;
    const double C150763 = C150724 * C150762;
    const double C150766 = 3 * C150762;
    const double C151079 = C150718 * C150762;
    const double C151159 = C150928 * C150762;
    const double C1548 =
        (2 * C150928 * C150750 +
         C150928 * (C150750 + C150762 * std::pow(C150928, 2))) /
        C150616;
    const double C1738 =
        (C150928 * C150750 + ae * (C150718 * C150949 + C150950 * be) +
         be * (C150718 * C150951 + C150950 * ae) +
         C150718 *
             (ae * C150949 + be * C150951 + C150718 * C150928 * C150762)) /
        C150616;
    const double C1742 = (ae * (C150825 + C150843 * C150940) +
                          be * (C150826 + C150845 * C150940) +
                          C150718 * (C150750 + C150762 * C150940)) /
                         C150616;
    const double C2688 =
        (2 * (ae * C150825 + be * C150826 + C150718 * C150750) +
         ae * (C150825 + C150718 * C151012 + C151009 * be) +
         be * (C150826 + C150718 * C151013 + C151009 * ae) +
         C150718 *
             (C150750 + ae * C151012 + be * C151013 +
              C150718 * (ae * C150843 + be * C150845 + C150718 * C150762))) /
        C150616;
    const double C151184 = C150752 + C151183;
    const double C151198 = 2 * C151196;
    const double C151367 = C150718 * C151196;
    const double C151473 = C151466 + C151455;
    const double C6594 = C152711 * C1552;
    const double C42249 = C152846 * C1552;
    const double C111149 = C100532 * C1552;
    const double C6847 = C152711 * C1746;
    const double C15145 = C14812 * C1746;
    const double C17340 = C14811 * C1746;
    const double C34155 = C152775 * C1746;
    const double C42589 = C152846 * C1746;
    const double C103062 = C152775 * C1746;
    const double C112525 = C100532 * C1746;
    const double C134147 = C133814 * C1746;
    const double C136342 = C152913 * C1746;
    const double C7562 = C152711 * C2278;
    const double C17029 = C14811 * C2278;
    const double C33837 = C152775 * C2278;
    const double C43276 = C152846 * C2278;
    const double C102744 = C152775 * C2278;
    const double C111454 = C100532 * C2278;
    const double C136031 = C152913 * C2278;
    const double C151193 = C150928 * C151192;
    const double C151344 = C150718 * C151192;
    const double C151820 = 3 * C151192;
    const double C9527 =
        (2 * (ae * C150968 + be * C150970 + C150718 * C151187) +
         ae * (C150968 + C150718 * C151316 + C151313 * be) +
         be * (C150970 + C150718 * C151317 + C151313 * ae) +
         C150718 *
             (C151187 + ae * C151316 + be * C151317 +
              C150718 * (ae * C151226 + be * C151228 + C150718 * C151192))) /
        C150616;
    const double C151571 = C150718 * C151565;
    const double C152006 = 2 * C151565;
    const double C151749 = C151740 + C151741;
    const double C150778 = C150724 * C150777;
    const double C151297 = C150777 * C150940;
    const double C151661 = C150928 * C150777;
    const double C151690 = C150718 * C150777;
    const double C1553 = (3 * (C150750 + C150762 * C150940) +
                          C150928 * (2 * C150928 * C150762 +
                                     C150928 * (C150762 + C150777 * C150940))) /
                         C150616;
    const double C151200 = C150767 + C151199;
    const double C151627 = C151619 + C151604;
    const double C151787 = C150718 * C151778;
    const double C151824 = C150928 * C151823;
    const double C151965 = C150718 * C151823;
    const double C151924 = C151914 + C151915;
    const double C152047 = C150718 * C152041;
    const double C150910 = C150724 * C150907;
    const double C150987 = C150907 * C150940;
    const double C151108 = C150907 * ae;
    const double C151106 = C150907 * C150721;
    const double C151105 = C150718 * C150907;
    const double C151104 = C150907 * be;
    const double C151173 = C150928 * C150907;
    const double C151421 = C150928 * C151418;
    const double C151431 = C151418 * ae;
    const double C151429 = C150718 * C151418;
    const double C151428 = C151418 * be;
    const double C10023 =
        2 * C150718 * C150983 + C150718 * (C150983 + C151418 * C150721);
    const double C151677 = C151671 + C151672;
    const double C151676 = C151161 + C151670;
    const double C151678 = C151669 * ae;
    const double C151675 = C151669 * be;
    const double C151674 = C151667 + C151668;
    const double C151712 = C150718 * C151705;
    const double C151713 = C151704 * ae;
    const double C151711 = C150718 * C151704;
    const double C151710 = C151704 * be;
    const double C151709 = C150718 * C151702;
    const double C151288 = C151277 + C151285;
    const double C151401 = C151395 + C151396;
    const double C151400 = C151211 + C151394;
    const double C151402 = C151393 * ae;
    const double C151399 = C151393 * be;
    const double C151398 = C151391 + C151392;
    const double C151636 = C150895 + C151631;
    const double C151635 = C151611 + C151630;
    const double C151634 = C150887 + C151628;
    const double C151805 = C150718 * C151799;
    const double C151806 = C151798 * ae;
    const double C151804 = C150718 * C151798;
    const double C151803 = C151798 * be;
    const double C151802 = C150718 * C151796;
    const double C151851 = C150928 * C151848;
    const double C151872 = C151848 * ae;
    const double C151870 = C151848 * C150721;
    const double C151869 = C150718 * C151848;
    const double C151868 = C151848 * be;
    const double C151987 = C150718 * C151980;
    const double C151988 = C151979 * ae;
    const double C151986 = C150718 * C151979;
    const double C151985 = C151979 * be;
    const double C151984 = C150718 * C151977;
    const double C151939 = C151738 + C151934;
    const double C151938 = C151907 + C151933;
    const double C151937 = C151734 + C151931;
    const double C152055 = C152050 + C152037;
    const double C152056 = C152049 * ae;
    const double C152054 = C150718 * C152049;
    const double C152053 = C152049 * be;
    const double C152052 = C152048 + C152034;
    const double C150880 = C150724 * C150878;
    const double C150893 = 4 * C150878;
    const double C150947 = C150928 * C150878;
    const double C151002 = C150718 * C150878;
    const double C151101 = be * C150878;
    const double C1532 =
        (2 * C150928 * C150849 + C150928 * (C150849 + C150878 * C150940)) /
        C150608;
    const double C1722 = (C150718 * (C150849 + C150878 * C150940) +
                          (C150844 + C150871 * C150940) * ae) /
                         C150608;
    const double C1544 = (3 * (C150826 + C150845 * C150940) +
                          C150928 * (2 * C150951 + C150928 * C150984)) /
                         C150608;
    const double C1734 = (C150826 + C150845 * C150940 +
                          C150718 * (C150718 * C150984 + C150983 * ae) +
                          C150718 * C150983 * ae) /
                         C150608;
    const double C2274 = (C150718 * (2 * C150951 + C150928 * C150984) +
                          (2 * C150950 + C150928 * C150983) * ae) /
                         C150608;
    const double C151094 = C150718 * C151090;
    const double C151697 = 2 * C151090;
    const double C151687 = be * C151090;
    const double C151169 = C151166 + C151167;
    const double C151218 = C151208 + C151215;
    const double C151309 = C151306 + C151307;
    const double C151382 = C150718 * C151378;
    const double C151783 = 2 * C151378;
    const double C151775 = be * C151378;
    const double C151482 = C150859 + C151477;
    const double C151261 = C150928 * C151258;
    const double C151438 = C150718 * C151258;
    const double C151837 = 4 * C151258;
    const double C151865 = be * C151258;
    const double C151359 = C150718 * C151355;
    const double C151972 = 2 * C151355;
    const double C151962 = be * C151355;
    const double C151579 = C151574 + C151562;
    const double C151764 = C151245 + C151759;
    const double C150879 = C150724 * C150876;
    const double C150885 = 4 * C150876;
    const double C150945 = C150928 * C150876;
    const double C150999 = C150718 * C150876;
    const double C151100 = ae * C150876;
    const double C1531 =
        (2 * C150928 * C150848 + C150928 * (C150848 + C150876 * C150940)) /
        C150608;
    const double C1721 = (C150718 * (C150848 + C150876 * C150940) +
                          (C150844 + C150871 * C150940) * be) /
                         C150608;
    const double C1747 =
        (C150750 + C150762 * C150940 + ae * (C150718 * C150982 + C150983 * be) +
         be * (C150718 * C150984 + C150983 * ae) +
         C150718 * (ae * C150982 + be * C150984 +
                    C150718 * (C150762 + C150777 * C150940))) /
        C150616;
    const double C2279 = (ae * (2 * C150949 + C150928 * C150982) +
                          be * (2 * C150951 + C150928 * C150984) +
                          C150718 * (2 * C150928 * C150762 +
                                     C150928 * (C150762 + C150777 * C150940))) /
                         C150616;
    const double C1543 = (3 * (C150825 + C150843 * C150940) +
                          C150928 * (2 * C150949 + C150928 * C150982)) /
                         C150608;
    const double C1733 = (C150825 + C150843 * C150940 +
                          C150718 * (C150718 * C150982 + C150983 * be) +
                          C150718 * C150983 * be) /
                         C150608;
    const double C2273 = (C150718 * (2 * C150949 + C150928 * C150982) +
                          (2 * C150950 + C150928 * C150983) * be) /
                         C150608;
    const double C151093 = C150718 * C151087;
    const double C151691 = 2 * C151087;
    const double C151686 = ae * C151087;
    const double C151168 = C151163 + C151164;
    const double C151665 = C151659 + C151660;
    const double C151216 = C151204 + C151213;
    const double C151308 = C151303 + C151304;
    const double C151397 = C151388 + C151389;
    const double C151381 = C150718 * C151375;
    const double C151779 = 2 * C151375;
    const double C151774 = ae * C151375;
    const double C151480 = C150853 + C151474;
    const double C151618 = C150767 + C151600;
    const double C151259 = C150928 * C151256;
    const double C151435 = C150718 * C151256;
    const double C151829 = 4 * C151256;
    const double C151864 = ae * C151256;
    const double C151358 = C150718 * C151352;
    const double C151966 = 2 * C151352;
    const double C151961 = ae * C151352;
    const double C151576 = C151572 + C151559;
    const double C152040 = C152031 + C152010;
    const double C151762 = C151239 + C151756;
    const double C151913 = C151732 + C151898;
    const double C150877 = C150855 + C150874;
    const double C1701 = C150928 * C150844 + C150946 * C150721;
    const double C6599 = C135 * C1529;
    const double C6852 = C135 * C1711;
    const double C7564 = C135 * C2267;
    const double C7922 = 4 * (2 * C150954 + C150928 * C150976) +
                         C150928 * (3 * C150976 + C150928 * C151217);
    const double C8177 = 2 * C150954 + C150928 * C150976 + C151217 * C150721;
    const double C8179 = C150718 * (3 * C150976 + C150928 * C151217);
    const double C18105 = 4 * (2 * C151017 + C150718 * C151066) +
                          C150718 * (3 * C151066 + C150718 * C151481);
    const double C151263 = C151241 + C151260;
    const double C151583 = C151550 + C151578;
    const double C18849 = 4 * (2 * C151141 + C150718 * C151331) +
                          C150718 * (3 * C151331 + C150718 * C151763);
    const double C187 = C134 * C155;
    const double C439 = C134 * C395;
    const double C443 = C134 * C397;
    const double C7949 = C134 * C7929;
    const double C185 = C134 * C154;
    const double C437 = C134 * C394;
    const double C441 = C134 * C396;
    const double C7947 = C134 * C7928;
    const double C150920 = C150894 + C150917;
    const double C150991 = C150878 + C150988;
    const double C151178 = C150718 * C151174;
    const double C151425 = C151415 + C151422;
    const double C151292 = C150928 * C151289;
    const double C151446 = C150718 * C151289;
    const double C151855 = C151838 + C151852;
    const double C150918 = C150886 + C150915;
    const double C150989 = C150876 + C150986;
    const double C151175 = C150718 * C151172;
    const double C151423 = C151411 + C151420;
    const double C151290 = C150928 * C151287;
    const double C151443 = C150718 * C151287;
    const double C151853 = C151830 + C151850;
    const double C123 =
        (C152893 * C152452) / C150608 + (C152807 - C152856) / C150660;
    const double C124 =
        (C152894 * C152452) / C150608 + (2 * C152462 + C152893) / C150660;
    const double C125 = (C152452 * C152462) / C150618 + C152894 / C150660;
    const double C152813 = C152489 * C152477;
    const double C152863 = C152818 + C152489;
    const double C152821 = C152498 / C152479;
    const double C152817 = C152498 * C152477;
    const double C873 = C152915 - (C152489 * C152480) / C152475;
    const double C152831 = C152571 * C152565;
    const double C152878 = C152833 + C152571;
    const double C152835 = C152578 / C152479;
    const double C152832 = C152578 * C152565;
    const double C1879 = C152919 - (C152571 * C152567) / C152475;
    const double C152837 = C152613 * C152607;
    const double C152884 = C152839 + C152613;
    const double C152841 = C152620 / C152479;
    const double C152838 = C152620 * C152607;
    const double C3047 = C152921 - (C152613 * C152609) / C152475;
    const double C59414 =
        (C152910 * C152742) / C150608 + (C152845 - C152887) / C150660;
    const double C59415 =
        (C152911 * C152742) / C150608 + (2 * C152747 + C152910) / C150660;
    const double C59416 = (C152742 * C152747) / C150618 + C152911 / C150660;
    const double C150627 = C150626 * C150623;
    const double C150662 = C150626 * ae;
    const double C14815 =
        ((C150626 * ae) / C150608 - C150615 / C150618) / (2 * C150608) +
        ((C150606 * ((0 * ae) / C150608 - C150619 / C150616) + C152775) * ae) /
            C150608;
    const double C31627 = (C150626 * ae) / C150608 - C150615 / C150618;
    const double C100534 =
        (-C150615 / C150608) / (2 * C150608) - (C150626 * be) / C150608;
    const double C211 = C205 * C152696;
    const double C6344 = C205 * C6338;
    const double C23413 = C205 * C152845;
    const double C51249 = C205 * C51243;
    const double C73315 = C205 * C152910;
    const double C468 = C460 + C432;
    const double C729 = C721 + C693;
    const double C1276 = C1272 + C1255;
    const double C8232 = C8227 + C8205;
    const double C212 = C206 * C152696;
    const double C6349 = C206 * C6338;
    const double C23415 = C206 * C152845;
    const double C51251 = C206 * C51243;
    const double C73320 = C206 * C152910;
    const double C213 = C207 * C152696;
    const double C6350 = C207 * C6338;
    const double C23418 = C207 * C152845;
    const double C51254 = C207 * C51243;
    const double C73321 = C207 * C152910;
    const double C475 = C467 * C152696;
    const double C6345 = C467 * C6339;
    const double C6584 = C467 * C6338;
    const double C23414 = C467 * C152747;
    const double C23647 = C467 * C152845;
    const double C51250 = C467 * C152747;
    const double C51483 = C467 * C51243;
    const double C73316 = C467 * C152911;
    const double C73547 = C467 * C152910;
    const double C736 = C728 * C152696;
    const double C6841 = C728 * C6338;
    const double C23879 = C728 * C152845;
    const double C51715 = C728 * C51243;
    const double C73777 = C728 * C152910;
    const double C474 = C466 * C152696;
    const double C6348 = C466 * C6339;
    const double C6595 = C466 * C6338;
    const double C23416 = C466 * C152747;
    const double C23645 = C466 * C152845;
    const double C51252 = C466 * C152747;
    const double C51481 = C466 * C51243;
    const double C73319 = C466 * C152911;
    const double C73551 = C466 * C152910;
    const double C735 = C727 * C152696;
    const double C6848 = C727 * C6338;
    const double C23877 = C727 * C152845;
    const double C51713 = C727 * C51243;
    const double C73781 = C727 * C152910;
    const double C188 = C152711 * C165;
    const double C31671 = C152846 * C165;
    const double C100578 = C100532 * C165;
    const double C420 = C152711 * C404;
    const double C15713 = C14810 * C404;
    const double C31961 = C152846 * C404;
    const double C100868 = C100532 * C404;
    const double C134715 = C152912 * C404;
    const double C436 = C152711 * C410;
    const double C15169 = C14810 * C410;
    const double C31953 = C152846 * C410;
    const double C100860 = C100532 * C410;
    const double C134171 = C152912 * C410;
    const double C681 = C152711 * C665;
    const double C14851 = C14811 * C665;
    const double C15928 = C14810 * C665;
    const double C31651 = C152775 * C665;
    const double C32267 = C152846 * C665;
    const double C100558 = C152775 * C665;
    const double C101174 = C100532 * C665;
    const double C133853 = C152913 * C665;
    const double C134930 = C152912 * C665;
    const double C697 = C152711 * C671;
    const double C14835 = C14812 * C671;
    const double C15471 = C14810 * C671;
    const double C15455 = C14811 * C671;
    const double C32259 = C152846 * C671;
    const double C32235 = C152775 * C671;
    const double C101166 = C100532 * C671;
    const double C101142 = C152775 * C671;
    const double C133837 = C133814 * C671;
    const double C134473 = C152912 * C671;
    const double C134457 = C152913 * C671;
    const double C1259 = C152711 * C1247;
    const double C15153 = C14811 * C1247;
    const double C16251 = C14810 * C1247;
    const double C31929 = C152775 * C1247;
    const double C33041 = C152846 * C1247;
    const double C100836 = C152775 * C1247;
    const double C101948 = C100532 * C1247;
    const double C134155 = C152913 * C1247;
    const double C135253 = C152912 * C1247;
    const double C7950 = C152711 * C7935;
    const double C93799 = C152846 * C7935;
    const double C110657 = C100532 * C7935;
    const double C698 = C134 * C655;
    const double C14852 = C14817 * C655;
    const double C32268 = C31629 * C655;
    const double C101175 = C100536 * C655;
    const double C133854 = C133819 * C655;
    const double C700 = C134 * C656;
    const double C14854 = C14817 * C656;
    const double C32270 = C31629 * C656;
    const double C101177 = C100536 * C656;
    const double C133856 = C133819 * C656;
    const double C702 = C134 * C657;
    const double C31660 = C31629 * C657;
    const double C100567 = C100536 * C657;
    const double C704 = C134 * C658;
    const double C31662 = C31629 * C658;
    const double C100569 = C100536 * C658;
    const double C1260 = C134 * C1239;
    const double C31962 = C31629 * C1239;
    const double C100869 = C100536 * C1239;
    const double C1262 = C134 * C1240;
    const double C31964 = C31629 * C1240;
    const double C100871 = C100536 * C1240;
    const double C186 = C135 * C141;
    const double C438 = C135 * C375;
    const double C442 = C135 * C376;
    const double C699 = C135 * C636;
    const double C703 = C135 * C637;
    const double C1261 = C135 * C1230;
    const double C1891 = C135 * C1523;
    const double C2113 = C135 * C1705;
    const double C3057 = C135 * C2663;
    const double C2907 = C2898 - C2899;
    const double C3062 = C134 * C2674;
    const double C15458 = C14817 * C2674;
    const double C32262 = C31629 * C2674;
    const double C101169 = C100536 * C2674;
    const double C134460 = C133819 * C2674;
    const double C3060 = C134 * C2673;
    const double C15456 = C14817 * C2673;
    const double C32260 = C31629 * C2673;
    const double C101167 = C100536 * C2673;
    const double C134458 = C133819 * C2673;
    const double C6607 = C6591 - C6592;
    const double C6857 = C6844 - C6845;
    const double C7571 = C7559 - C7560;
    const double C151075 = C151073 + C151068;
    const double C151074 = C151072 + C151065;
    const double C151472 = C151465 + C151452;
    const double C10034 = C134 * C3216;
    const double C16238 = C14817 * C3216;
    const double C35224 = C31629 * C3216;
    const double C104131 = C100536 * C3216;
    const double C135240 = C133819 * C3216;
    const double C10035 = C152711 * C3222;
    const double C16239 = C14812 * C3222;
    const double C18423 = C14811 * C3222;
    const double C35225 = C152775 * C3222;
    const double C44951 = C152846 * C3222;
    const double C104132 = C152775 * C3222;
    const double C127534 = C100532 * C3222;
    const double C135241 = C133814 * C3222;
    const double C137405 = C152913 * C3222;
    const double C10032 = C134 * C3215;
    const double C16236 = C14817 * C3215;
    const double C35222 = C31629 * C3215;
    const double C104129 = C100536 * C3215;
    const double C135238 = C133819 * C3215;
    const double C8218 = C134 * C8185;
    const double C43542 = C31629 * C8185;
    const double C66481 = C14817 * C8185;
    const double C110910 = C100536 * C8185;
    const double C143903 = C133819 * C8185;
    const double C8220 = C134 * C8186;
    const double C43544 = C31629 * C8186;
    const double C66483 = C14817 * C8186;
    const double C110912 = C100536 * C8186;
    const double C143905 = C133819 * C8186;
    const double C8944 = C134 * C8189;
    const double C42250 = C31629 * C8189;
    const double C110646 = C100536 * C8189;
    const double C8946 = C134 * C8190;
    const double C42252 = C31629 * C8190;
    const double C110648 = C100536 * C8190;
    const double C7948 = C135 * C7923;
    const double C8219 = C135 * C8178;
    const double C8945 = C135 * C8180;
    const double C61864 = C135 * C10238;
    const double C10249 = C134 * C9517;
    const double C42592 = C31629 * C9517;
    const double C66755 = C14817 * C9517;
    const double C110904 = C100536 * C9517;
    const double C144177 = C133819 * C9517;
    const double C10247 = C134 * C9516;
    const double C42590 = C31629 * C9516;
    const double C66753 = C14817 * C9516;
    const double C110902 = C100536 * C9516;
    const double C144175 = C133819 * C9516;
    const double C151340 = C151338 + C151333;
    const double C151339 = C151337 + C151330;
    const double C151748 = C151739 + C151729;
    const double C151529 = C150718 * C151527;
    const double C151551 = 3 * C151527;
    const double C151537 = be * C151527;
    const double C151528 = C150718 * C151526;
    const double C151543 = 3 * C151526;
    const double C151536 = ae * C151526;
    const double C2680 =
        (3 * (C150811 + C150718 * C151029 + C151025 * ae) +
         C150718 * (2 * C151029 + C150718 * C151052 + C151043 * ae) +
         (2 * C151025 + C150718 * C151043) * ae) /
        C150608;
    const double C202 = C196 - C183;
    const double C457 = C449 - C419;
    const double C461 = C453 - C435;
    const double C718 = C710 - C680;
    const double C722 = C714 - C696;
    const double C1273 = C1269 - C1258;
    const double C1906 = C1903 - C1896;
    const double C2128 = C2125 - C2118;
    const double C2911 = C2908 - C2904;
    const double C3070 = C3064 - C3065;
    const double C1910 = C1907 + C1901;
    const double C2132 = C2129 + C2123;
    const double C7954 = C7951 - C7941;
    const double C8228 = C8223 - C8208;
    const double C8229 = C8224 - C8212;
    const double C2691 =
        (3 * (C150731 + ae * C151028 + be * C151029 + C150718 * C151046) +
         ae * (2 * C151028 + C150718 * C151051 + C151043 * be) +
         be * (2 * C151029 + C150718 * C151052 + C151043 * ae) +
         C150718 * (2 * C151046 + ae * C151051 + be * C151052 +
                    C150718 * (C150740 + ae * C151041 + be * C151044 +
                               C150718 * (ae * C150820 + be * C150822 +
                                          C150718 * C150748)))) /
        C150616;
    const double C2679 =
        (3 * (C150810 + C150718 * C151028 + C151025 * be) +
         C150718 * (2 * C151028 + C150718 * C151051 + C151043 * be) +
         (2 * C151025 + C150718 * C151043) * be) /
        C150608;
    const double C151525 = C151514 + C151521;
    const double C10256 = C10251 - C10252;
    const double C150764 = C150756 + C150763;
    const double C151092 = C151086 + C151079;
    const double C1897 = C152711 * C1548;
    const double C33833 = C152846 * C1548;
    const double C102740 = C100532 * C1548;
    const double C2901 = C152711 * C1738;
    const double C15157 = C14812 * C1738;
    const double C16247 = C14811 * C1738;
    const double C33045 = C152775 * C1738;
    const double C35221 = C152846 * C1738;
    const double C101952 = C152775 * C1738;
    const double C104128 = C100532 * C1738;
    const double C134159 = C133814 * C1738;
    const double C135249 = C152913 * C1738;
    const double C2119 = C152711 * C1742;
    const double C15165 = C14811 * C1742;
    const double C31957 = C152775 * C1742;
    const double C34151 = C152846 * C1742;
    const double C100864 = C152775 * C1742;
    const double C103058 = C100532 * C1742;
    const double C134167 = C152913 * C1742;
    const double C3063 = C152711 * C2688;
    const double C15467 = C14811 * C2688;
    const double C15459 = C14812 * C2688;
    const double C32263 = C152775 * C2688;
    const double C35443 = C152846 * C2688;
    const double C101170 = C152775 * C2688;
    const double C104350 = C100532 * C2688;
    const double C134469 = C152913 * C2688;
    const double C134461 = C133814 * C2688;
    const double C7934 =
        (4 * (2 * C151147 + C150928 * C151184) +
         C150928 *
             (3 * C151184 +
              C150928 * (2 * C150928 * C150767 +
                         C150928 * (C150767 + C150724 * C150775 * C150940)))) /
        C150616;
    const double C151380 = C151374 + C151367;
    const double C151479 = C150718 * C151473;
    const double C151597 = 2 * C151473;
    const double C151194 = C151191 + C151193;
    const double C151357 = C151351 + C151344;
    const double C10250 = C152711 * C9527;
    const double C42593 = C152775 * C9527;
    const double C66764 = C14811 * C9527;
    const double C66756 = C14812 * C9527;
    const double C95976 = C152846 * C9527;
    const double C110905 = C152775 * C9527;
    const double C112927 = C100532 * C9527;
    const double C144186 = C152913 * C9527;
    const double C144178 = C133814 * C9527;
    const double C151575 = C151564 + C151571;
    const double C151755 = C150718 * C151749;
    const double C151895 = 2 * C151749;
    const double C150779 = C150771 + C150778;
    const double C151298 = C150762 + C151297;
    const double C151666 = C150718 * C151661;
    const double C151708 = C151701 + C151690;
    const double C6601 = C152711 * C1553;
    const double C151201 = C150928 * C151200;
    const double C151390 = C150718 * C151200;
    const double C151633 = C150718 * C151627;
    const double C151795 = C151786 + C151787;
    const double C151825 = C151821 + C151824;
    const double C151983 = C151976 + C151965;
    const double C151930 = C150718 * C151924;
    const double C150913 = C150890 + C150910;
    const double C150990 = C150871 + C150987;
    const double C151113 = C151107 + C151108;
    const double C151112 = C150871 + C151106;
    const double C151114 = C151105 * ae;
    const double C151111 = C151105 * be;
    const double C151110 = C151103 + C151104;
    const double C151179 = C151173 * ae;
    const double C151177 = C150718 * C151173;
    const double C151176 = C151173 * be;
    const double C3212 =
        2 * C150718 * C150946 + C150718 * (C150946 + C151173 * C150721);
    const double C151424 = C151413 + C151421;
    const double C151433 = C151430 + C151431;
    const double C151432 = C151427 + C151428;
    const double C151680 = C150718 * C151677;
    const double C18411 = 3 * (C150950 + C151161 * C150721) +
                          C150718 * (2 * C151165 + C150718 * C151676);
    const double C151679 = C150718 * C151674;
    const double C151717 = C150872 + C151712;
    const double C151716 = C151696 + C151711;
    const double C151715 = C150870 + C151709;
    const double C151291 = C150928 * C151288;
    const double C151447 = C151288 * ae;
    const double C151445 = C150718 * C151288;
    const double C151444 = C151288 * be;
    const double C10239 =
        2 * C150718 * C151217 + C150718 * (C151217 + C151288 * C150721);
    const double C151405 = C150718 * C151401;
    const double C9513 = 3 * (C150976 + C151211 * C150721) +
                         C150718 * (2 * C151305 + C150718 * C151400);
    const double C151404 = C150718 * C151398;
    const double C151641 = C151636 + C151624;
    const double C151642 = C151635 * ae;
    const double C151640 = C150718 * C151635;
    const double C151639 = C151635 * be;
    const double C151638 = C151634 + C151621;
    const double C151810 = C151273 + C151805;
    const double C151809 = C151782 + C151804;
    const double C151808 = C151267 + C151802;
    const double C151854 = C151834 + C151851;
    const double C151877 = C151871 + C151872;
    const double C151876 = C151257 + C151870;
    const double C151878 = C151869 * ae;
    const double C151875 = C151869 * be;
    const double C151874 = C151867 + C151868;
    const double C151992 = C151252 + C151987;
    const double C151991 = C151971 + C151986;
    const double C151990 = C151248 + C151984;
    const double C151944 = C151939 + C151929;
    const double C151945 = C151938 * ae;
    const double C151943 = C150718 * C151938;
    const double C151942 = C151938 * be;
    const double C151941 = C151937 + C151926;
    const double C152060 = C150718 * C152055;
    const double C152059 = C152022 + C152054;
    const double C152058 = C150718 * C152052;
    const double C150882 = C150858 + C150880;
    const double C1714 =
        (C150928 * C150849 + C150718 * (C150718 * C150947 + C150946 * ae) +
         C150718 * C150946 * ae) /
        C150608;
    const double C151005 = C151002 + C151003;
    const double C1892 = C134 * C1532;
    const double C2114 = C134 * C1722;
    const double C31968 = C31629 * C1722;
    const double C100875 = C100536 * C1722;
    const double C6600 = C134 * C1544;
    const double C6853 = C134 * C1734;
    const double C15160 = C14817 * C1734;
    const double C34146 = C31629 * C1734;
    const double C103053 = C100536 * C1734;
    const double C134162 = C133819 * C1734;
    const double C7565 = C134 * C2274;
    const double C33828 = C31629 * C2274;
    const double C102735 = C100536 * C2274;
    const double C151096 = C150845 + C151094;
    const double C3218 =
        (2 * (C150718 * C150951 + C150950 * ae) +
         C150718 * (C150951 + C150718 * C151169 + C151165 * ae) +
         (C150950 + C151161 * C150721) * ae) /
        C150608;
    const double C7927 = (4 * (2 * C150955 + C150928 * C150977) +
                          C150928 * (3 * C150977 + C150928 * C151218)) /
                         C150608;
    const double C8184 = (2 * C150955 + C150928 * C150977 +
                          C150718 * (C150718 * C151218 + C151217 * ae) +
                          C150718 * C151217 * ae) /
                         C150608;
    const double C8188 = (C150718 * (3 * C150977 + C150928 * C151218) +
                          (3 * C150976 + C150928 * C151217) * ae) /
                         C150608;
    const double C9515 =
        (2 * (C150718 * C150977 + C150976 * ae) +
         C150718 * (C150977 + C150718 * C151309 + C151305 * ae) +
         (C150976 + C151211 * C150721) * ae) /
        C150608;
    const double C151384 = C151150 + C151382;
    const double C151485 = C151482 + C151471;
    const double C151264 = C151244 + C151261;
    const double C151441 = C151438 + C151439;
    const double C151361 = C151228 + C151359;
    const double C151584 = C150718 * C151579;
    const double C152025 = 3 * C151579;
    const double C152008 = be * C151579;
    const double C151766 = C151764 + C151754;
    const double C150881 = C150852 + C150879;
    const double C1713 =
        (C150928 * C150848 + C150718 * (C150718 * C150945 + C150946 * be) +
         C150718 * C150946 * be) /
        C150608;
    const double C151004 = C150999 + C151000;
    const double C151109 = C151100 + C151101;
    const double C1890 = C134 * C1531;
    const double C2112 = C134 * C1721;
    const double C31966 = C31629 * C1721;
    const double C100873 = C100536 * C1721;
    const double C6854 = C152711 * C1747;
    const double C15161 = C14812 * C1747;
    const double C34147 = C152775 * C1747;
    const double C103054 = C152775 * C1747;
    const double C134163 = C133814 * C1747;
    const double C7566 = C152711 * C2279;
    const double C33829 = C152775 * C2279;
    const double C102736 = C152775 * C2279;
    const double C6598 = C134 * C1543;
    const double C6851 = C134 * C1733;
    const double C15158 = C14817 * C1733;
    const double C34144 = C31629 * C1733;
    const double C103051 = C100536 * C1733;
    const double C134160 = C133819 * C1733;
    const double C7563 = C134 * C2273;
    const double C33826 = C31629 * C2273;
    const double C102733 = C100536 * C2273;
    const double C151095 = C150843 + C151093;
    const double C151700 = C150762 + C151686;
    const double C3223 =
        (2 * (ae * C150949 + be * C150951 + C150718 * C151159) +
         ae * (C150949 + C150718 * C151168 + C151165 * be) +
         be * (C150951 + C150718 * C151169 + C151165 * ae) +
         C150718 * (C151159 + ae * C151168 + be * C151169 +
                    C150718 * (ae * C151160 + be * C151162 +
                               C150718 * C150928 * C150777))) /
        C150616;
    const double C3217 =
        (2 * (C150718 * C150949 + C150950 * be) +
         C150718 * (C150949 + C150718 * C151168 + C151165 * be) +
         (C150950 + C151161 * C150721) * be) /
        C150608;
    const double C7926 = (4 * (2 * C150953 + C150928 * C150975) +
                          C150928 * (3 * C150975 + C150928 * C151216)) /
                         C150608;
    const double C8183 = (2 * C150953 + C150928 * C150975 +
                          C150718 * (C150718 * C151216 + C151217 * be) +
                          C150718 * C151217 * be) /
                         C150608;
    const double C8187 = (C150718 * (3 * C150975 + C150928 * C151216) +
                          (3 * C150976 + C150928 * C151217) * be) /
                         C150608;
    const double C9526 =
        (2 * (ae * C150975 + be * C150977 + C150718 * C151184) +
         ae * (C150975 + C150718 * C151308 + C151305 * be) +
         be * (C150977 + C150718 * C151309 + C151305 * ae) +
         C150718 *
             (C151184 + ae * C151308 + be * C151309 +
              C150718 * (ae * C151210 + be * C151212 + C150718 * C151200))) /
        C150616;
    const double C9514 =
        (2 * (C150718 * C150975 + C150976 * be) +
         C150718 * (C150975 + C150718 * C151308 + C151305 * be) +
         (C150976 + C151211 * C150721) * be) /
        C150608;
    const double C151383 = C151148 + C151381;
    const double C151785 = C151196 + C151774;
    const double C151484 = C151480 + C151468;
    const double C151626 = C151618 + C151601;
    const double C151262 = C151238 + C151259;
    const double C151440 = C151435 + C151436;
    const double C151873 = C151864 + C151865;
    const double C151360 = C151226 + C151358;
    const double C151975 = C151192 + C151961;
    const double C151582 = C150718 * C151576;
    const double C152015 = 3 * C151576;
    const double C152007 = ae * C151576;
    const double C152051 = C152040 + C152047;
    const double C151765 = C151762 + C151751;
    const double C151923 = C151913 + C151899;
    const double C142 = 5 * (3 * C150821 + C150724 * C150844) +
                        C150724 * (4 * C150844 + C150724 * C150877);
    const double C377 = 3 * C150821 + C150724 * C150844 + C150877 * C150940;
    const double C378 = C150928 * (4 * C150844 + C150724 * C150877);
    const double C638 = 3 * C150821 + C150724 * C150844 + C150877 * C150721;
    const double C639 = C150718 * (4 * C150844 + C150724 * C150877);
    const double C1231 = C150718 * C150928 * C150877;
    const double C2895 = C135 * C1701;
    const double C7944 = C135 * C7922;
    const double C8215 = C135 * C8177;
    const double C8733 = C135 * C8179;
    const double C7924 = 5 * (3 * C150969 + C150928 * C151233) +
                         C150928 * (4 * C151233 + C150928 * C151263);
    const double C8181 = 3 * C150969 + C150928 * C151233 + C151263 * C150721;
    const double C8935 = C150718 * (4 * C151233 + C150928 * C151263);
    const double C18107 = 5 * (3 * C151043 + C150718 * C151523) +
                          C150718 * (4 * C151523 + C150718 * C151583);
    const double C150922 = C150724 * C150920;
    const double C151125 = C150928 * C150920;
    const double C151130 = C150718 * C150920;
    const double C1546 = (3 * (C150849 + C150878 * C150940) +
                          C150928 * (2 * C150947 + C150928 * C150991)) /
                         C150608;
    const double C8432 = (4 * (2 * C150951 + C150928 * C150984) +
                          C150928 * (3 * C150984 + C150928 * C151425)) /
                         C150608;
    const double C151295 = C151272 + C151292;
    const double C151858 = C150928 * C151855;
    const double C151890 = C150718 * C151855;
    const double C150921 = C150724 * C150918;
    const double C151123 = C150928 * C150918;
    const double C151127 = C150718 * C150918;
    const double C1545 = (3 * (C150848 + C150876 * C150940) +
                          C150928 * (2 * C150945 + C150928 * C150989)) /
                         C150608;
    const double C8431 = (4 * (2 * C150949 + C150928 * C150982) +
                          C150928 * (3 * C150982 + C150928 * C151423)) /
                         C150608;
    const double C151293 = C151266 + C151290;
    const double C151856 = C150928 * C151853;
    const double C151887 = C150718 * C151853;
    const double C152859 = C152813 / C152475;
    const double C152898 = C152863 / C152479;
    const double C152899 = C152865 + C152821;
    const double C875 = C152821 - C152496 / C152493;
    const double C152862 = C152817 / C152475;
    const double C152875 = C152831 / C152475;
    const double C152905 = C152878 / C152479;
    const double C152906 = C152879 + C152835;
    const double C1881 = C152835 - C152576 / C152493;
    const double C152877 = C152832 / C152475;
    const double C152881 = C152837 / C152475;
    const double C152908 = C152884 / C152479;
    const double C152909 = C152885 + C152841;
    const double C3049 = C152841 - C152618 / C152493;
    const double C152883 = C152838 / C152475;
    const double C150632 = C150606 * C150627;
    const double C14814 =
        (ae * -2 * C150615) / (C150616 * 2 * C150608) +
        (((C150606 *
           ((-4 * C150619) / C150608 - (C150606 * C150627) / C150608) * ae) /
              C150608 +
          2 * ((C150626 * ae) / C150608 - C150615 / C150618)) *
         ae) /
            C150608 -
        C150627 / C150618;
    const double C14818 = (-C150627 / C150608) / (4 * C150616);
    const double C31630 = (-C150627 / C150608) / (2 * C150608);
    const double C100537 = (-C150627 / C150608) / (2 * C150608);
    const double C117468 = (-C150627 / C150608) / (4 * C150678);
    const double C133820 = (-C150627 / C150608) / (4 * C150616);
    const double C150668 = C150662 / C150608;
    const double C14862 = C14815 * C658;
    const double C14860 = C14815 * C657;
    const double C14850 = C14815 * C642;
    const double C14848 = C14815 * C641;
    const double C14838 = C14815 * C644;
    const double C14836 = C14815 * C643;
    const double C14826 = C14815 * C646;
    const double C14824 = C14815 * C645;
    const double C15164 = C14815 * C1724;
    const double C15162 = C14815 * C1723;
    const double C15152 = C14815 * C1238;
    const double C15150 = C14815 * C1237;
    const double C15140 = C14815 * C1726;
    const double C15138 = C14815 * C1725;
    const double C15128 = C14815 * C1236;
    const double C15126 = C14815 * C1235;
    const double C15466 = C14815 * C2674;
    const double C15464 = C14815 * C2673;
    const double C15454 = C14815 * C654;
    const double C15452 = C14815 * C653;
    const double C15442 = C14815 * C2676;
    const double C15440 = C14815 * C2675;
    const double C15430 = C14815 * C652;
    const double C15428 = C14815 * C651;
    const double C15708 = C14815 * C1240;
    const double C15706 = C14815 * C1239;
    const double C15923 = C14815 * C656;
    const double C15921 = C14815 * C655;
    const double C16246 = C14815 * C1716;
    const double C16244 = C14815 * C1715;
    const double C16234 = C14815 * C1718;
    const double C16232 = C14815 * C1717;
    const double C17028 = C14815 * C2272;
    const double C17026 = C14815 * C2271;
    const double C17339 = C14815 * C1732;
    const double C17337 = C14815 * C1731;
    const double C18422 = C14815 * C3216;
    const double C18420 = C14815 * C3215;
    const double C65192 = C14815 * C1728;
    const double C65190 = C14815 * C1727;
    const double C65180 = C14815 * C1234;
    const double C65178 = C14815 * C1233;
    const double C66118 = C14815 * C1720;
    const double C66116 = C14815 * C1719;
    const double C66491 = C14815 * C8190;
    const double C66489 = C14815 * C8189;
    const double C66479 = C14815 * C2270;
    const double C66477 = C14815 * C2269;
    const double C66763 = C14815 * C9517;
    const double C66761 = C14815 * C9516;
    const double C66751 = C14815 * C1730;
    const double C66749 = C14815 * C1729;
    const double C66739 = C14815 * C3214;
    const double C66737 = C14815 * C3213;
    const double C67480 = C14815 * C8186;
    const double C67478 = C14815 * C8185;
    const double C31670 = C31627 * C155;
    const double C31668 = C31627 * C154;
    const double C31658 = C31627 * C153;
    const double C31656 = C31627 * C152;
    const double C31654 = C31627 * C151;
    const double C31652 = C31627 * C150;
    const double C31642 = C31627 * C149;
    const double C31640 = C31627 * C148;
    const double C31634 = C31627 * C147;
    const double C31632 = C31627 * C146;
    const double C31972 = C31627 * C395;
    const double C31970 = C31627 * C394;
    const double C31960 = C31627 * C381;
    const double C31958 = C31627 * C380;
    const double C31952 = C31627 * C393;
    const double C31950 = C31627 * C392;
    const double C31944 = C31627 * C391;
    const double C31942 = C31627 * C390;
    const double C31940 = C31627 * C385;
    const double C31938 = C31627 * C384;
    const double C31932 = C31627 * C383;
    const double C31930 = C31627 * C382;
    const double C32278 = C31627 * C656;
    const double C32276 = C31627 * C655;
    const double C32266 = C31627 * C642;
    const double C32264 = C31627 * C641;
    const double C32258 = C31627 * C654;
    const double C32256 = C31627 * C653;
    const double C32250 = C31627 * C652;
    const double C32248 = C31627 * C651;
    const double C32246 = C31627 * C646;
    const double C32244 = C31627 * C645;
    const double C32238 = C31627 * C644;
    const double C32236 = C31627 * C643;
    const double C32521 = C31627 * C397;
    const double C32519 = C31627 * C396;
    const double C32731 = C31627 * C658;
    const double C32729 = C31627 * C657;
    const double C33052 = C31627 * C1240;
    const double C33050 = C31627 * C1239;
    const double C33040 = C31627 * C1238;
    const double C33038 = C31627 * C1237;
    const double C33032 = C31627 * C1236;
    const double C33030 = C31627 * C1235;
    const double C33840 = C31627 * C1536;
    const double C33838 = C31627 * C1535;
    const double C33832 = C31627 * C1534;
    const double C33830 = C31627 * C1533;
    const double C34158 = C31627 * C1726;
    const double C34156 = C31627 * C1725;
    const double C34150 = C31627 * C1724;
    const double C34148 = C31627 * C1723;
    const double C35228 = C31627 * C1718;
    const double C35226 = C31627 * C1717;
    const double C35220 = C31627 * C1716;
    const double C35218 = C31627 * C1715;
    const double C35450 = C31627 * C2676;
    const double C35448 = C31627 * C2675;
    const double C35442 = C31627 * C2674;
    const double C35440 = C31627 * C2673;
    const double C40555 = C31627 * C389;
    const double C40553 = C31627 * C388;
    const double C40540 = C31627 * C387;
    const double C40538 = C31627 * C386;
    const double C41772 = C31627 * C1234;
    const double C41770 = C31627 * C1233;
    const double C42256 = C31627 * C1540;
    const double C42254 = C31627 * C1539;
    const double C42248 = C31627 * C1542;
    const double C42246 = C31627 * C1541;
    const double C42236 = C31627 * C1538;
    const double C42234 = C31627 * C1537;
    const double C42596 = C31627 * C1730;
    const double C42594 = C31627 * C1729;
    const double C42588 = C31627 * C1732;
    const double C42586 = C31627 * C1731;
    const double C42576 = C31627 * C1728;
    const double C42574 = C31627 * C1727;
    const double C42568 = C31627 * C1720;
    const double C42566 = C31627 * C1719;
    const double C43275 = C31627 * C2272;
    const double C43273 = C31627 * C2271;
    const double C43548 = C31627 * C2270;
    const double C43546 = C31627 * C2269;
    const double C44950 = C31627 * C3216;
    const double C44948 = C31627 * C3215;
    const double C45222 = C31627 * C3214;
    const double C45220 = C31627 * C3213;
    const double C93798 = C31627 * C7929;
    const double C93796 = C31627 * C7928;
    const double C94032 = C31627 * C8186;
    const double C94030 = C31627 * C8185;
    const double C94725 = C31627 * C8190;
    const double C94723 = C31627 * C8189;
    const double C95975 = C31627 * C9517;
    const double C95973 = C31627 * C9516;
    const double C100577 = C100534 * C155;
    const double C100575 = C100534 * C154;
    const double C100565 = C100534 * C153;
    const double C100563 = C100534 * C152;
    const double C100561 = C100534 * C151;
    const double C100559 = C100534 * C150;
    const double C100549 = C100534 * C149;
    const double C100547 = C100534 * C148;
    const double C100541 = C100534 * C147;
    const double C100539 = C100534 * C146;
    const double C100879 = C100534 * C395;
    const double C100877 = C100534 * C394;
    const double C100867 = C100534 * C381;
    const double C100865 = C100534 * C380;
    const double C100859 = C100534 * C393;
    const double C100857 = C100534 * C392;
    const double C100851 = C100534 * C391;
    const double C100849 = C100534 * C390;
    const double C100847 = C100534 * C385;
    const double C100845 = C100534 * C384;
    const double C100839 = C100534 * C383;
    const double C100837 = C100534 * C382;
    const double C101185 = C100534 * C656;
    const double C101183 = C100534 * C655;
    const double C101173 = C100534 * C642;
    const double C101171 = C100534 * C641;
    const double C101165 = C100534 * C654;
    const double C101163 = C100534 * C653;
    const double C101157 = C100534 * C652;
    const double C101155 = C100534 * C651;
    const double C101153 = C100534 * C646;
    const double C101151 = C100534 * C645;
    const double C101145 = C100534 * C644;
    const double C101143 = C100534 * C643;
    const double C101428 = C100534 * C397;
    const double C101426 = C100534 * C396;
    const double C101638 = C100534 * C658;
    const double C101636 = C100534 * C657;
    const double C101959 = C100534 * C1240;
    const double C101957 = C100534 * C1239;
    const double C101947 = C100534 * C1238;
    const double C101945 = C100534 * C1237;
    const double C101939 = C100534 * C1236;
    const double C101937 = C100534 * C1235;
    const double C102747 = C100534 * C1536;
    const double C102745 = C100534 * C1535;
    const double C102739 = C100534 * C1534;
    const double C102737 = C100534 * C1533;
    const double C103065 = C100534 * C1726;
    const double C103063 = C100534 * C1725;
    const double C103057 = C100534 * C1724;
    const double C103055 = C100534 * C1723;
    const double C104135 = C100534 * C1718;
    const double C104133 = C100534 * C1717;
    const double C104127 = C100534 * C1716;
    const double C104125 = C100534 * C1715;
    const double C104357 = C100534 * C2676;
    const double C104355 = C100534 * C2675;
    const double C104349 = C100534 * C2674;
    const double C104347 = C100534 * C2673;
    const double C109355 = C100534 * C1538;
    const double C109353 = C100534 * C1537;
    const double C109343 = C100534 * C389;
    const double C109341 = C100534 * C388;
    const double C109335 = C100534 * C387;
    const double C109333 = C100534 * C386;
    const double C110287 = C100534 * C1234;
    const double C110285 = C100534 * C1233;
    const double C110279 = C100534 * C1728;
    const double C110277 = C100534 * C1727;
    const double C110656 = C100534 * C7929;
    const double C110654 = C100534 * C7928;
    const double C110644 = C100534 * C1540;
    const double C110642 = C100534 * C1539;
    const double C110920 = C100534 * C8186;
    const double C110918 = C100534 * C8185;
    const double C110908 = C100534 * C2270;
    const double C110906 = C100534 * C2269;
    const double C110900 = C100534 * C1730;
    const double C110898 = C100534 * C1729;
    const double C110892 = C100534 * C1720;
    const double C110890 = C100534 * C1719;
    const double C111148 = C100534 * C1542;
    const double C111146 = C100534 * C1541;
    const double C111453 = C100534 * C2272;
    const double C111451 = C100534 * C2271;
    const double C111662 = C100534 * C8190;
    const double C111660 = C100534 * C8189;
    const double C112524 = C100534 * C1732;
    const double C112522 = C100534 * C1731;
    const double C112934 = C100534 * C3214;
    const double C112932 = C100534 * C3213;
    const double C112926 = C100534 * C9517;
    const double C112924 = C100534 * C9516;
    const double C127533 = C100534 * C3216;
    const double C127531 = C100534 * C3215;
    const double C476 = C468 * C152696;
    const double C6346 = C468 * C6340;
    const double C6589 = C468 * C6338;
    const double C6583 = C468 * C6339;
    const double C23648 = C468 * C152845;
    const double C23646 = C468 * C152747;
    const double C51484 = C468 * C51243;
    const double C51482 = C468 * C152747;
    const double C73317 = C468 * C73311;
    const double C73548 = C468 * C152910;
    const double C73546 = C468 * C152911;
    const double C737 = C729 * C152696;
    const double C6842 = C729 * C6338;
    const double C23880 = C729 * C152845;
    const double C51716 = C729 * C51243;
    const double C73778 = C729 * C152910;
    const double C1280 = C1276 * C152696;
    const double C6840 = C1276 * C6339;
    const double C7557 = C1276 * C6338;
    const double C23878 = C1276 * C152747;
    const double C24574 = C1276 * C152845;
    const double C51714 = C1276 * C152747;
    const double C52410 = C1276 * C51243;
    const double C73776 = C1276 * C152911;
    const double C74471 = C1276 * C152910;
    const double C23423 = C23415 + C23416;
    const double C51259 = C51251 + C51252;
    const double C197 = C185 - C186;
    const double C454 = C437 - C438;
    const double C455 = C441 - C442;
    const double C715 = C698 - C699;
    const double C716 = C702 - C703;
    const double C1270 = C1260 - C1261;
    const double C2910 = C2907 - C2900;
    const double C3069 = C3060 - C3061;
    const double C6612 = C6607 - C6593;
    const double C6859 = C6857 - C6846;
    const double C7575 = C7571 - C7561;
    const double C2682 =
        (3 * (C150815 + C150718 * C151021 + C151017 * ae) +
         C150718 * (2 * C151021 + C150718 * C151075 + C151066 * ae) +
         (2 * C151017 + C150718 * C151066) * ae) /
        C150608;
    const double C2692 =
        (3 * (C150937 + ae * C151020 + be * C151021 + C150718 * C151069) +
         ae * (2 * C151020 + C150718 * C151074 + C151066 * be) +
         be * (2 * C151021 + C150718 * C151075 + C151066 * ae) +
         C150718 * (2 * C151069 + ae * C151074 + be * C151075 +
                    C150718 * (C150752 + ae * C151064 + be * C151067 +
                               C150718 * (ae * C150853 + be * C150859 +
                                          C150718 * C150767)))) /
        C150616;
    const double C2681 =
        (3 * (C150813 + C150718 * C151020 + C151017 * be) +
         C150718 * (2 * C151020 + C150718 * C151074 + C151066 * be) +
         (2 * C151017 + C150718 * C151066) * be) /
        C150608;
    const double C10038 = C10032 - C10033;
    const double C7953 = C7947 - C7948;
    const double C8226 = C8218 - C8219;
    const double C8948 = C8944 - C8945;
    const double C10255 = C10247 - C10248;
    const double C9519 =
        (3 * (C150959 + C150718 * C151145 + C151141 * ae) +
         C150718 * (2 * C151145 + C150718 * C151340 + C151331 * ae) +
         (2 * C151141 + C150718 * C151331) * ae) /
        C150608;
    const double C9528 =
        (3 * (C151135 + ae * C151144 + be * C151145 + C150718 * C151334) +
         ae * (2 * C151144 + C150718 * C151339 + C151331 * be) +
         be * (2 * C151145 + C150718 * C151340 + C151331 * ae) +
         C150718 * (2 * C151334 + ae * C151339 + be * C151340 +
                    C150718 * (C151189 + ae * C151329 + be * C151332 +
                               C150718 * (ae * C151239 + be * C151245 +
                                          C150718 * C150928 * C150760)))) /
        C150616;
    const double C9518 =
        (3 * (C150957 + C150718 * C151144 + C151141 * be) +
         C150718 * (2 * C151144 + C150718 * C151339 + C151331 * be) +
         (2 * C151141 + C150718 * C151331) * be) /
        C150608;
    const double C151531 = C151504 + C151529;
    const double C151530 = C151498 + C151528;
    const double C151555 = C151535 + C151536;
    const double C208 = C202 + C184;
    const double C465 = C457 + C420;
    const double C469 = C461 + C436;
    const double C726 = C718 + C681;
    const double C730 = C722 + C697;
    const double C1277 = C1273 + C1259;
    const double C2914 = C2911 + C2905;
    const double C3073 = C3070 - C3066;
    const double C1913 = C1910 * C152696;
    const double C6590 = C1910 * C6339;
    const double C6582 = C1910 * C6340;
    const double C8437 = C1910 * C6338;
    const double C23649 = C1910 * C152747;
    const double C25336 = C1910 * C152845;
    const double C51485 = C1910 * C152747;
    const double C53172 = C1910 * C51243;
    const double C73549 = C1910 * C152911;
    const double C73545 = C1910 * C73311;
    const double C75231 = C1910 * C152910;
    const double C2135 = C2132 * C152696;
    const double C6839 = C2132 * C6340;
    const double C7558 = C2132 * C6339;
    const double C8737 = C2132 * C6338;
    const double C24575 = C2132 * C152747;
    const double C25630 = C2132 * C152845;
    const double C52411 = C2132 * C152747;
    const double C53466 = C2132 * C51243;
    const double C73775 = C2132 * C73311;
    const double C74472 = C2132 * C152911;
    const double C75524 = C2132 * C152910;
    const double C7957 = C7954 + C7942;
    const double C8233 = C8228 + C8209;
    const double C8234 = C8229 + C8213;
    const double C10258 = C10256 - C10253;
    const double C166 =
        (5 * (3 * C150750 + C150724 * C150764) +
         C150724 *
             (4 * C150764 +
              C150724 *
                  (3 * C150762 +
                   C150724 * (2 * C150724 * C150760 +
                              C150724 * (C150760 + (C150754 * C150755 +
                                                    C150721 * bs[8] *
                                                        std::pow(C150716, 8)) *
                                                       C150607 * C150736))))) /
        C150616;
    const double C411 = (2 * C150724 * C150740 + C150724 * C150750 +
                         C150764 * std::pow(yP - yQ, 2)) /
                        C150616;
    const double C412 =
        ((yP - yQ) * (3 * C150750 + C150724 * C150764)) / C150616;
    const double C672 =
        (2 * C150724 * C150740 + C150724 * C150750 +
         ae * (C150718 * C150848 + C150844 * be) +
         be * (C150718 * C150849 + C150844 * ae) +
         C150718 * (ae * C150848 + be * C150849 + C150718 * C150764)) /
        C150616;
    const double C673 = (ae * (3 * C150825 + C150724 * C150848) +
                         be * (3 * C150826 + C150724 * C150849) +
                         C150718 * (3 * C150750 + C150724 * C150764)) /
                        C150616;
    const double C1248 = (ae * C150928 * C150848 + be * C150928 * C150849 +
                          C150718 * C150928 * C150764) /
                         C150616;
    const double C1909 = C1906 + C1897;
    const double C2131 = C2128 + C2119;
    const double C7946 = C152711 * C7934;
    const double C151483 = C151472 + C151479;
    const double C7936 =
        (5 * (3 * C151187 + C150928 * C151194) +
         C150928 * (4 * C151194 +
                    C150928 * (3 * C151192 +
                               C150928 * (2 * C150928 * C150760 +
                                          C150928 * (C150760 +
                                                     C150775 * C150940))))) /
        C150616;
    const double C8196 =
        (2 * C151135 + C150928 * C151187 +
         ae * (C150718 * C151232 + C151233 * be) +
         be * (C150718 * C151234 + C151233 * ae) +
         C150718 * (ae * C151232 + be * C151234 + C150718 * C151194)) /
        C150616;
    const double C8198 = (ae * (3 * C150968 + C150928 * C151232) +
                          be * (3 * C150970 + C150928 * C151234) +
                          C150718 * (3 * C151187 + C150928 * C151194)) /
                         C150616;
    const double C151581 = C150718 * C151575;
    const double C152003 = 3 * C151575;
    const double C151761 = C151748 + C151755;
    const double C150780 = C150724 * C150779;
    const double C151102 = C150718 * C150779;
    const double C151171 = C150928 * C150779;
    const double C1547 =
        (2 * C150928 * C150764 +
         C150928 * (C150764 + C150779 * std::pow(C150928, 2))) /
        C150616;
    const double C1554 =
        (3 * (C150764 + C150779 * C150940) +
         C150928 *
             (2 * C150928 * C150779 +
              C150928 * (C150779 +
                         (2 * C150724 * C150775 +
                          C150724 * (C150775 +
                                     (C150769 * C150770 +
                                      C150721 * bs[9] * std::pow(C150720, 9)) *
                                         C150607 * C150736)) *
                             C150940))) /
        C150616;
    const double C1737 =
        (C150928 * C150764 + ae * (C150718 * C150945 + C150946 * be) +
         be * (C150718 * C150947 + C150946 * ae) +
         C150718 *
             (ae * C150945 + be * C150947 + C150718 * C150928 * C150779)) /
        C150616;
    const double C1741 = (ae * (C150848 + C150876 * C150940) +
                          be * (C150849 + C150878 * C150940) +
                          C150718 * (C150764 + C150779 * C150940)) /
                         C150616;
    const double C2280 =
        (ae * (2 * C150945 + C150928 * C150989) +
         be * (2 * C150947 + C150928 * C150991) +
         C150718 *
             (2 * C150928 * C150779 +
              C150928 * (C150779 +
                         (2 * C150724 * C150775 +
                          C150724 * (C150775 +
                                     (C150769 * C150770 +
                                      C150721 * bs[9] * std::pow(C150720, 9)) *
                                         C150607 * C150736)) *
                             C150940))) /
        C150616;
    const double C8433 =
        (4 * (2 * C151159 + C150928 * C151298) +
         C150928 *
             (3 * C151298 +
              C150928 *
                  (2 * C150928 * C150777 +
                   C150928 * (C150777 + (C150775 + (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                       C150607 * C150736) *
                                            C150940)))) /
        C150616;
    const double C8730 =
        (ae * (3 * C150982 +
               C150928 *
                   (2 * C151160 + C150928 * (C150870 + C150906 * C150940))) +
         be * (3 * C150984 +
               C150928 *
                   (2 * C151162 + C150928 * (C150872 + C150908 * C150940))) +
         C150718 *
             (3 * C151298 +
              C150928 *
                  (2 * C150928 * C150777 +
                   C150928 * (C150777 + (C150775 + (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                       C150607 * C150736) *
                                            C150940)))) /
        C150616;
    const double C151673 = C151665 + C151666;
    const double C151714 = C150718 * C151708;
    const double C151202 = C151198 + C151201;
    const double C151403 = C151397 + C151390;
    const double C151801 = C150718 * C151795;
    const double C151826 = C150928 * C151825;
    const double C151866 = C150718 * C151825;
    const double C151989 = C150718 * C151983;
    const double C150916 = C150724 * C150913;
    const double C151124 = C150928 * C150913;
    const double C151131 = C150913 * ae;
    const double C151129 = C150718 * C150913;
    const double C151128 = C150913 * be;
    const double C1885 =
        2 * C150928 * C150877 + C150928 * (C150877 + C150913 * C150940);
    const double C2107 = C150718 * (C150877 + C150913 * C150940);
    const double C3051 =
        2 * C150718 * C150877 + C150718 * (C150877 + C150913 * C150721);
    const double C1748 =
        (C150764 + C150779 * C150940 + ae * (C150718 * C150989 + C150990 * be) +
         be * (C150718 * C150991 + C150990 * ae) +
         C150718 *
             (ae * C150989 + be * C150991 +
              C150718 * (C150779 +
                         (2 * C150724 * C150775 +
                          C150724 * (C150775 +
                                     (C150769 * C150770 +
                                      C150721 * bs[9] * std::pow(C150720, 9)) *
                                         C150607 * C150736)) *
                             C150940))) /
        C150616;
    const double C1735 = (C150848 + C150876 * C150940 +
                          C150718 * (C150718 * C150989 + C150990 * be) +
                          C150718 * C150990 * be) /
                         C150608;
    const double C1736 = (C150849 + C150878 * C150940 +
                          C150718 * (C150718 * C150991 + C150990 * ae) +
                          C150718 * C150990 * ae) /
                         C150608;
    const double C2275 = (C150718 * (2 * C150945 + C150928 * C150989) +
                          (2 * C150946 + C150928 * C150990) * be) /
                         C150608;
    const double C2276 = (C150718 * (2 * C150947 + C150928 * C150991) +
                          (2 * C150946 + C150928 * C150990) * ae) /
                         C150608;
    const double C1530 = 3 * (C150844 + C150871 * C150940) +
                         C150928 * (2 * C150946 + C150928 * C150990);
    const double C1712 = C150844 + C150871 * C150940 + C150990 * C150721;
    const double C2268 = C150718 * (2 * C150946 + C150928 * C150990);
    const double C151117 = C150718 * C151113;
    const double C2670 = 3 * (C150844 + C150871 * C150721) +
                         C150718 * (2 * C151001 + C150718 * C151112);
    const double C151116 = C150718 * C151110;
    const double C151181 = C151178 + C151179;
    const double C151180 = C151175 + C151176;
    const double C9825 =
        (2 * C151159 + C150928 * C151298 +
         ae * (C150718 * C151423 + C151424 * be) +
         be * (C150718 * C151425 + C151424 * ae) +
         C150718 *
             (ae * C151423 + be * C151425 +
              C150718 *
                  (2 * C150928 * C150777 +
                   C150928 * (C150777 + (C150775 + (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                       C150607 * C150736) *
                                            C150940)))) /
        C150616;
    const double C8728 = (C150718 * (3 * C150982 + C150928 * C151423) +
                          (3 * C150983 + C150928 * C151424) * be) /
                         C150608;
    const double C8729 = (C150718 * (3 * C150984 + C150928 * C151425) +
                          (3 * C150983 + C150928 * C151424) * ae) /
                         C150608;
    const double C9823 = (2 * C150949 + C150928 * C150982 +
                          C150718 * (C150718 * C151423 + C151424 * be) +
                          C150718 * C151424 * be) /
                         C150608;
    const double C9824 = (2 * C150951 + C150928 * C150984 +
                          C150718 * (C150718 * C151425 + C151424 * ae) +
                          C150718 * C151424 * ae) /
                         C150608;
    const double C8430 = 4 * (2 * C150950 + C150928 * C150983) +
                         C150928 * (3 * C150983 + C150928 * C151424);
    const double C8727 = C150718 * (3 * C150983 + C150928 * C151424);
    const double C9822 = 2 * C150950 + C150928 * C150983 + C151424 * C150721;
    const double C10025 =
        (2 * (C150718 * C150984 + C150983 * ae) +
         C150718 * (C150984 + C150718 * C151433 + C151429 * ae) +
         (C150983 + C151418 * C150721) * ae) /
        C150608;
    const double C10026 =
        (2 * (ae * C150982 + be * C150984 + C150718 * C151298) +
         ae * (C150982 + C150718 * C151432 + C151429 * be) +
         be * (C150984 + C150718 * C151433 + C151429 * ae) +
         C150718 *
             (C151298 + ae * C151432 + be * C151433 +
              C150718 *
                  (ae * C151417 + be * C151419 +
                   C150718 * (C150777 + (C150775 + (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                       C150607 * C150736) *
                                            C150940)))) /
        C150616;
    const double C10024 =
        (2 * (C150718 * C150982 + C150983 * be) +
         C150718 * (C150982 + C150718 * C151432 + C151429 * be) +
         (C150983 + C151418 * C150721) * be) /
        C150608;
    const double C151682 = C151162 + C151680;
    const double C151681 = C151160 + C151679;
    const double C151720 = C151717 + C151706;
    const double C18630 = 4 * (2 * C151009 + C150718 * C151089) +
                          C150718 * (3 * C151089 + C150718 * C151716);
    const double C151719 = C151715 + C151703;
    const double C151294 = C151269 + C151291;
    const double C151449 = C151446 + C151447;
    const double C151448 = C151443 + C151444;
    const double C151407 = C151212 + C151405;
    const double C151406 = C151210 + C151404;
    const double C151646 = C150718 * C151641;
    const double C151645 = C151612 + C151640;
    const double C151644 = C150718 * C151638;
    const double C151812 = C151810 + C151800;
    const double C18850 = 4 * (2 * C151153 + C150718 * C151377) +
                          C150718 * (3 * C151377 + C150718 * C151809);
    const double C151811 = C151808 + C151797;
    const double C151857 = C150928 * C151854;
    const double C151891 = C151854 * ae;
    const double C151889 = C150718 * C151854;
    const double C151888 = C151854 * be;
    const double C61858 =
        2 * C150718 * C151263 + C150718 * (C151263 + C151854 * C150721);
    const double C151881 = C150718 * C151877;
    const double C61400 = 3 * (C151233 + C151257 * C150721) +
                          C150718 * (2 * C151437 + C150718 * C151876);
    const double C151880 = C150718 * C151874;
    const double C151995 = C151992 + C151981;
    const double C68734 = 4 * (2 * C151313 + C150718 * C151354) +
                          C150718 * (3 * C151354 + C150718 * C151991);
    const double C151994 = C151990 + C151978;
    const double C151949 = C150718 * C151944;
    const double C151948 = C151908 + C151943;
    const double C151947 = C150718 * C151941;
    const double C152065 = C152026 + C152060;
    const double C152066 = C152059 * ae;
    const double C152064 = C150718 * C152059;
    const double C152063 = C152059 * be;
    const double C152062 = C152016 + C152058;
    const double C157 = (5 * (3 * C150826 + C150724 * C150849) +
                         C150724 * (4 * C150849 + C150724 * C150882)) /
                        C150608;
    const double C399 =
        (3 * C150826 + C150724 * C150849 + C150882 * C150940) / C150608;
    const double C401 = (C150928 * (4 * C150849 + C150724 * C150882)) / C150608;
    const double C660 = (3 * C150826 + C150724 * C150849 +
                         C150718 * (C150718 * C150882 + C150877 * ae) +
                         C150718 * C150877 * ae) /
                        C150608;
    const double C662 = (C150718 * (4 * C150849 + C150724 * C150882) +
                         (4 * C150844 + C150724 * C150877) * ae) /
                        C150608;
    const double C1242 =
        (C150718 * C150928 * C150882 + C150928 * C150877 * ae) / C150608;
    const double C1887 =
        (2 * C150928 * C150882 + C150928 * (C150882 + C150920 * C150940)) /
        C150608;
    const double C2109 = (C150718 * (C150882 + C150920 * C150940) +
                          (C150877 + C150913 * C150940) * ae) /
                         C150608;
    const double C2896 = C134 * C1714;
    const double C15704 = C14817 * C1714;
    const double C33048 = C31629 * C1714;
    const double C101955 = C100536 * C1714;
    const double C134706 = C133819 * C1714;
    const double C2672 =
        (2 * (C150718 * C150849 + C150844 * ae) +
         C150718 * (C150849 + C150718 * C151005 + C151001 * ae) +
         (C150844 + C150871 * C150721) * ae) /
        C150608;
    const double C151098 = C151096 + C151091;
    const double C16242 = C14817 * C3218;
    const double C26873 = C134 * C3218;
    const double C35216 = C31629 * C3218;
    const double C104123 = C100536 * C3218;
    const double C135244 = C133819 * C3218;
    const double C7945 = C134 * C7927;
    const double C8216 = C134 * C8184;
    const double C17024 = C14817 * C8184;
    const double C43271 = C31629 * C8184;
    const double C111449 = C100536 * C8184;
    const double C136026 = C133819 * C8184;
    const double C8734 = C134 * C8188;
    const double C42244 = C31629 * C8188;
    const double C111144 = C100536 * C8188;
    const double C10030 = C134 * C9515;
    const double C17335 = C14817 * C9515;
    const double C42584 = C31629 * C9515;
    const double C112520 = C100536 * C9515;
    const double C136337 = C133819 * C9515;
    const double C151386 = C151384 + C151379;
    const double C151487 = C150718 * C151485;
    const double C151613 = 3 * C151485;
    const double C151599 = be * C151485;
    const double C7931 = (5 * (3 * C150970 + C150928 * C151234) +
                          C150928 * (4 * C151234 + C150928 * C151264)) /
                         C150608;
    const double C8192 = (3 * C150970 + C150928 * C151234 +
                          C150718 * (C150718 * C151264 + C151263 * ae) +
                          C150718 * C151263 * ae) /
                         C150608;
    const double C8938 = (C150718 * (4 * C151234 + C150928 * C151264) +
                          (4 * C151233 + C150928 * C151263) * ae) /
                         C150608;
    const double C10241 =
        (2 * (C150718 * C151234 + C151233 * ae) +
         C150718 * (C151234 + C150718 * C151441 + C151437 * ae) +
         (C151233 + C151257 * C150721) * ae) /
        C150608;
    const double C151363 = C151361 + C151356;
    const double C151587 = C151552 + C151584;
    const double C151768 = C150718 * C151766;
    const double C151909 = 3 * C151766;
    const double C151897 = be * C151766;
    const double C156 = (5 * (3 * C150825 + C150724 * C150848) +
                         C150724 * (4 * C150848 + C150724 * C150881)) /
                        C150608;
    const double C398 =
        (3 * C150825 + C150724 * C150848 + C150881 * C150940) / C150608;
    const double C400 = (C150928 * (4 * C150848 + C150724 * C150881)) / C150608;
    const double C659 = (3 * C150825 + C150724 * C150848 +
                         C150718 * (C150718 * C150881 + C150877 * be) +
                         C150718 * C150877 * be) /
                        C150608;
    const double C661 = (C150718 * (4 * C150848 + C150724 * C150881) +
                         (4 * C150844 + C150724 * C150877) * be) /
                        C150608;
    const double C1241 =
        (C150718 * C150928 * C150881 + C150928 * C150877 * be) / C150608;
    const double C1886 =
        (2 * C150928 * C150881 + C150928 * (C150881 + C150918 * C150940)) /
        C150608;
    const double C2108 = (C150718 * (C150881 + C150918 * C150940) +
                          (C150877 + C150913 * C150940) * be) /
                         C150608;
    const double C2894 = C134 * C1713;
    const double C15702 = C14817 * C1713;
    const double C33046 = C31629 * C1713;
    const double C101953 = C100536 * C1713;
    const double C134704 = C133819 * C1713;
    const double C2687 =
        (2 * (ae * C150848 + be * C150849 + C150718 * C150764) +
         ae * (C150848 + C150718 * C151004 + C151001 * be) +
         be * (C150849 + C150718 * C151005 + C151001 * ae) +
         C150718 *
             (C150764 + ae * C151004 + be * C151005 +
              C150718 * (ae * C150876 + be * C150878 + C150718 * C150779))) /
        C150616;
    const double C2671 =
        (2 * (C150718 * C150848 + C150844 * be) +
         C150718 * (C150848 + C150718 * C151004 + C151001 * be) +
         (C150844 + C150871 * C150721) * be) /
        C150608;
    const double C1902 = C1890 - C1891;
    const double C2124 = C2112 - C2113;
    const double C6608 = C6598 - C6599;
    const double C6858 = C6851 - C6852;
    const double C7572 = C7563 - C7564;
    const double C151097 = C151095 + C151088;
    const double C151707 = C151700 + C151687;
    const double C16243 = C14812 * C3223;
    const double C26874 = C152711 * C3223;
    const double C35217 = C152775 * C3223;
    const double C104124 = C152775 * C3223;
    const double C135245 = C133814 * C3223;
    const double C16240 = C14817 * C3217;
    const double C26871 = C134 * C3217;
    const double C35214 = C31629 * C3217;
    const double C104121 = C100536 * C3217;
    const double C135242 = C133819 * C3217;
    const double C7943 = C134 * C7926;
    const double C8214 = C134 * C8183;
    const double C17022 = C14817 * C8183;
    const double C43269 = C31629 * C8183;
    const double C111447 = C100536 * C8183;
    const double C136024 = C133819 * C8183;
    const double C8732 = C134 * C8187;
    const double C42242 = C31629 * C8187;
    const double C111142 = C100536 * C8187;
    const double C10031 = C152711 * C9526;
    const double C17336 = C14812 * C9526;
    const double C42585 = C152775 * C9526;
    const double C112521 = C152775 * C9526;
    const double C136338 = C133814 * C9526;
    const double C10028 = C134 * C9514;
    const double C17333 = C14817 * C9514;
    const double C42582 = C31629 * C9514;
    const double C112518 = C100536 * C9514;
    const double C136335 = C133819 * C9514;
    const double C151385 = C151383 + C151376;
    const double C151794 = C151785 + C151775;
    const double C151486 = C150718 * C151484;
    const double C151605 = 3 * C151484;
    const double C151598 = ae * C151484;
    const double C151637 = C151626 + C151633;
    const double C8199 =
        (3 * C151187 + C150928 * C151194 +
         ae * (C150718 * C151262 + C151263 * be) +
         be * (C150718 * C151264 + C151263 * ae) +
         C150718 * (ae * C151262 + be * C151264 +
                    C150718 * (3 * C151192 +
                               C150928 * (2 * C150928 * C150760 +
                                          C150928 * (C150760 +
                                                     C150775 * C150940))))) /
        C150616;
    const double C8941 =
        (ae * (4 * C151232 + C150928 * C151262) +
         be * (4 * C151234 + C150928 * C151264) +
         C150718 * (4 * C151194 +
                    C150928 * (3 * C151192 +
                               C150928 * (2 * C150928 * C150760 +
                                          C150928 * (C150760 +
                                                     C150775 * C150940))))) /
        C150616;
    const double C7930 = (5 * (3 * C150968 + C150928 * C151232) +
                          C150928 * (4 * C151232 + C150928 * C151262)) /
                         C150608;
    const double C8191 = (3 * C150968 + C150928 * C151232 +
                          C150718 * (C150718 * C151262 + C151263 * be) +
                          C150718 * C151263 * be) /
                         C150608;
    const double C8937 = (C150718 * (4 * C151232 + C150928 * C151262) +
                          (4 * C151233 + C150928 * C151263) * be) /
                         C150608;
    const double C10244 =
        (2 * (ae * C151232 + be * C151234 + C150718 * C151194) +
         ae * (C151232 + C150718 * C151440 + C151437 * be) +
         be * (C151234 + C150718 * C151441 + C151437 * ae) +
         C150718 * (C151194 + ae * C151440 + be * C151441 +
                    C150718 * (ae * C151256 + be * C151258 +
                               C150718 * (2 * C150928 * C150760 +
                                          C150928 * (C150760 +
                                                     C150775 * C150940))))) /
        C150616;
    const double C10240 =
        (2 * (C150718 * C151232 + C151233 * be) +
         C150718 * (C151232 + C150718 * C151440 + C151437 * be) +
         (C151233 + C151257 * C150721) * be) /
        C150608;
    const double C151362 = C151360 + C151353;
    const double C151982 = C151975 + C151962;
    const double C151586 = C151544 + C151582;
    const double C152030 = C152006 + C152007;
    const double C152057 = C150718 * C152051;
    const double C151767 = C150718 * C151765;
    const double C151903 = 3 * C151765;
    const double C151896 = ae * C151765;
    const double C151936 = C151923 + C151930;
    const double C190 = C135 * C142;
    const double C446 = C135 * C377;
    const double C883 = C135 * C378;
    const double C707 = C135 * C638;
    const double C1027 = C135 * C639;
    const double C1265 = C135 * C1231;
    const double C60399 = C135 * C7924;
    const double C60556 = C135 * C8181;
    const double C61021 = C135 * C8935;
    const double C150924 = C150893 + C150922;
    const double C7933 = (5 * (3 * C150977 + C150928 * C151218) +
                          C150928 * (4 * C151218 + C150928 * C151295)) /
                         C150608;
    const double C151861 = C151837 + C151858;
    const double C150923 = C150885 + C150921;
    const double C7932 = (5 * (3 * C150975 + C150928 * C151216) +
                          C150928 * (4 * C151216 + C150928 * C151293)) /
                         C150608;
    const double C151859 = C151829 + C151856;
    const double C152923 = C152859 + C152915;
    const double C874 = C152898 - (C152498 * C152480) / C152475;
    const double C132 = C152899 / C152479 - C152496 / C152866;
    const double C152916 = C152862 + C152898;
    const double C152924 = C152875 + C152919;
    const double C1880 = C152905 - (C152578 * C152567) / C152475;
    const double C1520 = C152906 / C152479 - C152576 / C152866;
    const double C152920 = C152877 + C152905;
    const double C152925 = C152881 + C152921;
    const double C3048 = C152908 - (C152620 * C152609) / C152475;
    const double C2661 = C152909 / C152479 - C152618 / C152866;
    const double C152922 = C152883 + C152908;
    const double C150681 = C150632 / C150608;
    const double C14816 =
        (((-4 * C150619) / C150608 - C150632 / C150608) * ae) / C150618 +
        ((2 * ((0 * ae) / C150608 - C150619 / C150616) - C150632 / C150618) *
         ae) /
            C150608;
    const double C31628 =
        (((-4 * C150619) / C150608 - C150632 / C150608) * ae) / C150608;
    const double C100535 =
        -(((-4 * C150619) / C150608 - C150632 / C150608) * be) / C150608;
    const double C14865 = C14814 * C140;
    const double C14845 = C14814 * C139;
    const double C14841 = C14814 * C138;
    const double C14821 = C14814 * C137;
    const double C15167 = C14814 * C374;
    const double C15147 = C14814 * C369;
    const double C15135 = C14814 * C373;
    const double C15131 = C14814 * C370;
    const double C15469 = C14814 * C635;
    const double C15449 = C14814 * C630;
    const double C15437 = C14814 * C634;
    const double C15433 = C14814 * C631;
    const double C15711 = C14814 * C368;
    const double C15926 = C14814 * C629;
    const double C16249 = C14814 * C1229;
    const double C16229 = C14814 * C1228;
    const double C17031 = C14814 * C1525;
    const double C17342 = C14814 * C1707;
    const double C18425 = C14814 * C1703;
    const double C18644 = C14814 * C2665;
    const double C65195 = C14814 * C372;
    const double C65175 = C14814 * C371;
    const double C66121 = C14814 * C1227;
    const double C66494 = C14814 * C1527;
    const double C66474 = C14814 * C1526;
    const double C66766 = C14814 * C1709;
    const double C66746 = C14814 * C1708;
    const double C66734 = C14814 * C1704;
    const double C67483 = C14814 * C2265;
    const double C68748 = C14814 * C3209;
    const double C14857 = C14818 * C638;
    const double C14853 = C14818 * C636;
    const double C14833 = C14818 * C635;
    const double C14829 = C14818 * C634;
    const double C15159 = C14818 * C1711;
    const double C15155 = C14818 * C1702;
    const double C15143 = C14818 * C1710;
    const double C15123 = C14818 * C1703;
    const double C15461 = C14818 * C2669;
    const double C15457 = C14818 * C2664;
    const double C15445 = C14818 * C2668;
    const double C15425 = C14818 * C2665;
    const double C15703 = C14818 * C1701;
    const double C15918 = C14818 * C2663;
    const double C16241 = C14818 * C3211;
    const double C16237 = C14818 * C3210;
    const double C17023 = C14818 * C8177;
    const double C17334 = C14818 * C9508;
    const double C18417 = C14818 * C9512;
    const double C18636 = C14818 * C18105;
    const double C65187 = C14818 * C1709;
    const double C65183 = C14818 * C1704;
    const double C66113 = C14818 * C3209;
    const double C66486 = C14818 * C8181;
    const double C66482 = C14818 * C8178;
    const double C66758 = C14818 * C9511;
    const double C66754 = C14818 * C9509;
    const double C66742 = C14818 * C9510;
    const double C67475 = C14818 * C10238;
    const double C68740 = C14818 * C18849;
    const double C31665 = C31630 * C639;
    const double C31661 = C31630 * C637;
    const double C31649 = C31630 * C629;
    const double C31645 = C31630 * C630;
    const double C31637 = C31630 * C631;
    const double C31967 = C31630 * C1705;
    const double C31963 = C31630 * C1230;
    const double C31955 = C31630 * C1706;
    const double C31947 = C31630 * C1707;
    const double C31935 = C31630 * C1228;
    const double C31927 = C31630 * C1229;
    const double C32273 = C31630 * C2663;
    const double C32269 = C31630 * C636;
    const double C32261 = C31630 * C2664;
    const double C32253 = C31630 * C2665;
    const double C32241 = C31630 * C634;
    const double C32233 = C31630 * C635;
    const double C32516 = C31630 * C1231;
    const double C32726 = C31630 * C638;
    const double C33047 = C31630 * C1701;
    const double C33043 = C31630 * C1702;
    const double C33035 = C31630 * C1703;
    const double C33835 = C31630 * C2266;
    const double C33827 = C31630 * C2267;
    const double C34153 = C31630 * C1710;
    const double C34145 = C31630 * C1711;
    const double C35223 = C31630 * C3210;
    const double C35215 = C31630 * C3211;
    const double C35445 = C31630 * C2668;
    const double C35437 = C31630 * C2669;
    const double C40550 = C31630 * C1708;
    const double C40543 = C31630 * C1227;
    const double C41767 = C31630 * C1704;
    const double C42251 = C31630 * C8180;
    const double C42243 = C31630 * C8179;
    const double C42239 = C31630 * C2265;
    const double C42591 = C31630 * C9509;
    const double C42583 = C31630 * C9508;
    const double C42579 = C31630 * C1709;
    const double C42571 = C31630 * C3209;
    const double C43270 = C31630 * C8177;
    const double C43543 = C31630 * C8178;
    const double C44945 = C31630 * C9512;
    const double C45217 = C31630 * C9510;
    const double C93793 = C31630 * C8935;
    const double C94027 = C31630 * C10238;
    const double C94720 = C31630 * C8181;
    const double C95970 = C31630 * C9511;
    const double C100572 = C100537 * C639;
    const double C100568 = C100537 * C637;
    const double C100556 = C100537 * C629;
    const double C100552 = C100537 * C630;
    const double C100544 = C100537 * C631;
    const double C100874 = C100537 * C1705;
    const double C100870 = C100537 * C1230;
    const double C100862 = C100537 * C1706;
    const double C100854 = C100537 * C1707;
    const double C100842 = C100537 * C1228;
    const double C100834 = C100537 * C1229;
    const double C101180 = C100537 * C2663;
    const double C101176 = C100537 * C636;
    const double C101168 = C100537 * C2664;
    const double C101160 = C100537 * C2665;
    const double C101148 = C100537 * C634;
    const double C101140 = C100537 * C635;
    const double C101423 = C100537 * C1231;
    const double C101633 = C100537 * C638;
    const double C101954 = C100537 * C1701;
    const double C101950 = C100537 * C1702;
    const double C101942 = C100537 * C1703;
    const double C102742 = C100537 * C2266;
    const double C102734 = C100537 * C2267;
    const double C103060 = C100537 * C1710;
    const double C103052 = C100537 * C1711;
    const double C104130 = C100537 * C3210;
    const double C104122 = C100537 * C3211;
    const double C104352 = C100537 * C2668;
    const double C104344 = C100537 * C2669;
    const double C109350 = C100537 * C2265;
    const double C109346 = C100537 * C1708;
    const double C109338 = C100537 * C1227;
    const double C110282 = C100537 * C1704;
    const double C110274 = C100537 * C1709;
    const double C110651 = C100537 * C8935;
    const double C110647 = C100537 * C8180;
    const double C110915 = C100537 * C10238;
    const double C110911 = C100537 * C8178;
    const double C110903 = C100537 * C9509;
    const double C110895 = C100537 * C3209;
    const double C111143 = C100537 * C8179;
    const double C111448 = C100537 * C8177;
    const double C111657 = C100537 * C8181;
    const double C112519 = C100537 * C9508;
    const double C112929 = C100537 * C9510;
    const double C112921 = C100537 * C9511;
    const double C127528 = C100537 * C9512;
    const double C133859 = C133820 * C638;
    const double C133855 = C133820 * C636;
    const double C133835 = C133820 * C635;
    const double C133831 = C133820 * C634;
    const double C134161 = C133820 * C1711;
    const double C134157 = C133820 * C1702;
    const double C134145 = C133820 * C1710;
    const double C134125 = C133820 * C1703;
    const double C134463 = C133820 * C2669;
    const double C134459 = C133820 * C2664;
    const double C134447 = C133820 * C2668;
    const double C134427 = C133820 * C2665;
    const double C134705 = C133820 * C1701;
    const double C134920 = C133820 * C2663;
    const double C135243 = C133820 * C3211;
    const double C135239 = C133820 * C3210;
    const double C136025 = C133820 * C8177;
    const double C136336 = C133820 * C9508;
    const double C137399 = C133820 * C9512;
    const double C137614 = C133820 * C18105;
    const double C142609 = C133820 * C1709;
    const double C142605 = C133820 * C1704;
    const double C143535 = C133820 * C3209;
    const double C143908 = C133820 * C8181;
    const double C143904 = C133820 * C8178;
    const double C144180 = C133820 * C9511;
    const double C144176 = C133820 * C9509;
    const double C144164 = C133820 * C9510;
    const double C144897 = C133820 * C10238;
    const double C146154 = C133820 * C18849;
    const double C150671 = C150668 - C150663;
    const double C203 = C197 - C187;
    const double C462 = C454 - C439;
    const double C463 = C455 - C443;
    const double C723 = C715 - C700;
    const double C724 = C716 - C704;
    const double C1274 = C1270 - C1262;
    const double C2913 = C2910 + C2901;
    const double C3072 = C3069 - C3062;
    const double C6617 = C6612 + C6594;
    const double C6861 = C6859 + C6847;
    const double C7579 = C7575 + C7562;
    const double C15446 = C14817 * C2682;
    const double C18641 = C14815 * C2682;
    const double C35446 = C31629 * C2682;
    const double C104353 = C100536 * C2682;
    const double C134448 = C133819 * C2682;
    const double C15447 = C14812 * C2692;
    const double C18642 = C14811 * C2692;
    const double C35447 = C152775 * C2692;
    const double C104354 = C152775 * C2692;
    const double C134449 = C133814 * C2692;
    const double C137620 = C152913 * C2692;
    const double C15444 = C14817 * C2681;
    const double C18639 = C14815 * C2681;
    const double C35444 = C31629 * C2681;
    const double C104351 = C100536 * C2681;
    const double C134446 = C133819 * C2681;
    const double C10040 = C10038 - C10034;
    const double C7956 = C7953 - C7949;
    const double C8231 = C8226 - C8220;
    const double C8949 = C8948 - C8946;
    const double C10257 = C10255 - C10249;
    const double C45218 = C31629 * C9519;
    const double C66743 = C14817 * C9519;
    const double C68745 = C14815 * C9519;
    const double C112930 = C100536 * C9519;
    const double C144165 = C133819 * C9519;
    const double C45219 = C152775 * C9528;
    const double C66744 = C14812 * C9528;
    const double C68746 = C14811 * C9528;
    const double C112931 = C152775 * C9528;
    const double C144166 = C133814 * C9528;
    const double C146160 = C152913 * C9528;
    const double C45216 = C31629 * C9518;
    const double C66741 = C14817 * C9518;
    const double C68743 = C14815 * C9518;
    const double C112928 = C100536 * C9518;
    const double C144163 = C133819 * C9518;
    const double C151533 = C151531 + C151520;
    const double C151532 = C151530 + C151517;
    const double C151563 = C151555 + C151537;
    const double C214 = C208 * C152696;
    const double C6355 = C208 * C6338;
    const double C23419 = C208 * C152845;
    const double C51255 = C208 * C51243;
    const double C73326 = C208 * C152910;
    const double C473 = C465 * C152696;
    const double C6351 = C465 * C6339;
    const double C7061 = C465 * C6338;
    const double C23417 = C465 * C152747;
    const double C23652 = C465 * C152845;
    const double C51253 = C465 * C152747;
    const double C51488 = C465 * C51243;
    const double C73322 = C465 * C152911;
    const double C73983 = C465 * C152910;
    const double C477 = C469 * C152696;
    const double C6347 = C469 * C6340;
    const double C6603 = C469 * C6338;
    const double C6596 = C469 * C6339;
    const double C23650 = C469 * C152845;
    const double C23644 = C469 * C152747;
    const double C51486 = C469 * C51243;
    const double C51480 = C469 * C152747;
    const double C73318 = C469 * C73311;
    const double C73556 = C469 * C152910;
    const double C73552 = C469 * C152911;
    const double C734 = C726 * C152696;
    const double C7258 = C726 * C6338;
    const double C23884 = C726 * C152845;
    const double C51720 = C726 * C51243;
    const double C74180 = C726 * C152910;
    const double C738 = C730 * C152696;
    const double C6856 = C730 * C6338;
    const double C23882 = C730 * C152845;
    const double C51718 = C730 * C51243;
    const double C73786 = C730 * C152910;
    const double C1281 = C1277 * C152696;
    const double C6849 = C1277 * C6339;
    const double C7568 = C1277 * C6338;
    const double C23876 = C1277 * C152747;
    const double C24576 = C1277 * C152845;
    const double C51712 = C1277 * C152747;
    const double C52412 = C1277 * C51243;
    const double C73782 = C1277 * C152911;
    const double C74476 = C1277 * C152910;
    const double C2917 = C2914 * C152696;
    const double C6843 = C2914 * C6339;
    const double C9829 = C2914 * C6338;
    const double C23881 = C2914 * C152747;
    const double C26676 = C2914 * C152845;
    const double C51717 = C2914 * C152747;
    const double C54512 = C2914 * C51243;
    const double C73779 = C2914 * C152911;
    const double C76569 = C2914 * C152910;
    const double C3076 = C3073 + C3067;
    const double C10260 = C10258 + C10254;
    const double C192 = C152711 * C166;
    const double C440 = C152711 * C411;
    const double C31973 = C152846 * C411;
    const double C100880 = C100532 * C411;
    const double C444 = C152711 * C412;
    const double C32522 = C152846 * C412;
    const double C101429 = C100532 * C412;
    const double C701 = C152711 * C672;
    const double C14855 = C14812 * C672;
    const double C15924 = C14811 * C672;
    const double C32279 = C152846 * C672;
    const double C32271 = C152775 * C672;
    const double C101186 = C100532 * C672;
    const double C101178 = C152775 * C672;
    const double C133857 = C133814 * C672;
    const double C134926 = C152913 * C672;
    const double C705 = C152711 * C673;
    const double C14863 = C14811 * C673;
    const double C31663 = C152775 * C673;
    const double C32732 = C152846 * C673;
    const double C100570 = C152775 * C673;
    const double C101639 = C100532 * C673;
    const double C133865 = C152913 * C673;
    const double C1263 = C152711 * C1248;
    const double C15709 = C14811 * C1248;
    const double C31965 = C152775 * C1248;
    const double C33053 = C152846 * C1248;
    const double C100872 = C152775 * C1248;
    const double C101960 = C100532 * C1248;
    const double C134711 = C152913 * C1248;
    const double C1912 = C1909 * C152696;
    const double C6602 = C1909 * C6339;
    const double C6597 = C1909 * C6340;
    const double C23651 = C1909 * C152747;
    const double C25334 = C1909 * C152845;
    const double C51487 = C1909 * C152747;
    const double C53170 = C1909 * C51243;
    const double C73555 = C1909 * C152911;
    const double C73553 = C1909 * C73311;
    const double C2134 = C2131 * C152696;
    const double C6850 = C2131 * C6340;
    const double C7567 = C2131 * C6339;
    const double C24577 = C2131 * C152747;
    const double C25628 = C2131 * C152845;
    const double C52413 = C2131 * C152747;
    const double C53464 = C2131 * C51243;
    const double C73783 = C2131 * C73311;
    const double C74475 = C2131 * C152911;
    const double C60401 = C152711 * C7936;
    const double C8221 = C152711 * C8196;
    const double C43545 = C152775 * C8196;
    const double C66484 = C14812 * C8196;
    const double C67481 = C14811 * C8196;
    const double C94033 = C152846 * C8196;
    const double C110921 = C100532 * C8196;
    const double C110913 = C152775 * C8196;
    const double C143906 = C133814 * C8196;
    const double C144903 = C152913 * C8196;
    const double C8947 = C152711 * C8198;
    const double C42253 = C152775 * C8198;
    const double C66492 = C14811 * C8198;
    const double C94726 = C152846 * C8198;
    const double C110649 = C152775 * C8198;
    const double C111663 = C100532 * C8198;
    const double C143914 = C152913 * C8198;
    const double C150781 = C150766 + C150780;
    const double C151115 = C151109 + C151102;
    const double C1893 = C152711 * C1547;
    const double C2897 = C152711 * C1737;
    const double C15705 = C14812 * C1737;
    const double C33049 = C152775 * C1737;
    const double C101956 = C152775 * C1737;
    const double C134707 = C133814 * C1737;
    const double C2115 = C152711 * C1741;
    const double C31969 = C152775 * C1741;
    const double C100876 = C152775 * C1741;
    const double C7937 =
        (5 * (3 * C151184 + C150928 * C151202) +
         C150928 *
             (4 * C151202 +
              C150928 * (3 * C151200 +
                         C150928 * (2 * C150928 * C151197 +
                                    C150928 * (C151197 +
                                               C150724 *
                                                   (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                   C150607 * C150940))))) /
        C150616;
    const double C8195 =
        (2 * C151147 + C150928 * C151184 +
         ae * (C150718 * C151216 + C151217 * be) +
         be * (C150718 * C151218 + C151217 * ae) +
         C150718 * (ae * C151216 + be * C151218 + C150718 * C151202)) /
        C150616;
    const double C8197 = (ae * (3 * C150975 + C150928 * C151216) +
                          be * (3 * C150977 + C150928 * C151218) +
                          C150718 * (3 * C151184 + C150928 * C151202)) /
                         C150616;
    const double C8942 =
        (ae * (4 * C151216 + C150928 * C151293) +
         be * (4 * C151218 + C150928 * C151295) +
         C150718 *
             (4 * C151202 +
              C150928 * (3 * C151200 +
                         C150928 * (2 * C150928 * C151197 +
                                    C150928 * (C151197 +
                                               C150724 *
                                                   (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                   C150607 * C150940))))) /
        C150616;
    const double C151827 = C151820 + C151826;
    const double C151879 = C151873 + C151866;
    const double C150919 = C150889 + C150916;
    const double C2890 =
        (C150928 * C150881 + C150718 * (C150718 * C151123 + C151124 * be) +
         C150718 * C151124 * be) /
        C150608;
    const double C2891 =
        (C150928 * C150882 + C150718 * (C150718 * C151125 + C151124 * ae) +
         C150718 * C151124 * ae) /
        C150608;
    const double C2889 = C150928 * C150877 + C151124 * C150721;
    const double C151133 = C151130 + C151131;
    const double C151132 = C151127 + C151128;
    const double C151119 = C150878 + C151117;
    const double C151118 = C150876 + C151116;
    const double C3220 =
        (2 * (C150718 * C150947 + C150946 * ae) +
         C150718 * (C150947 + C150718 * C151181 + C151177 * ae) +
         (C150946 + C151173 * C150721) * ae) /
        C150608;
    const double C3224 =
        (2 * (ae * C150945 + be * C150947 + C150718 * C151171) +
         ae * (C150945 + C150718 * C151180 + C151177 * be) +
         be * (C150947 + C150718 * C151181 + C151177 * ae) +
         C150718 *
             (C151171 + ae * C151180 + be * C151181 +
              C150718 * (ae * C151172 + be * C151174 +
                         C150718 * C150928 *
                             (2 * C150724 * C150775 +
                              C150724 * (C150775 + (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                       C150607 * C150736))))) /
        C150616;
    const double C3219 =
        (2 * (C150718 * C150945 + C150946 * be) +
         C150718 * (C150945 + C150718 * C151180 + C151177 * be) +
         (C150946 + C151173 * C150721) * be) /
        C150608;
    const double C151684 = C151682 + C151678;
    const double C151683 = C151681 + C151675;
    const double C151722 = C150718 * C151720;
    const double C151721 = C150718 * C151719;
    const double C8200 =
        (3 * C151184 + C150928 * C151202 +
         ae * (C150718 * C151293 + C151294 * be) +
         be * (C150718 * C151295 + C151294 * ae) +
         C150718 *
             (ae * C151293 + be * C151295 +
              C150718 * (3 * C151200 +
                         C150928 * (2 * C150928 * C151197 +
                                    C150928 * (C151197 +
                                               C150724 *
                                                   (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                   C150607 * C150940))))) /
        C150616;
    const double C8193 = (3 * C150975 + C150928 * C151216 +
                          C150718 * (C150718 * C151293 + C151294 * be) +
                          C150718 * C151294 * be) /
                         C150608;
    const double C8194 = (3 * C150977 + C150928 * C151218 +
                          C150718 * (C150718 * C151295 + C151294 * ae) +
                          C150718 * C151294 * ae) /
                         C150608;
    const double C8939 = (C150718 * (4 * C151216 + C150928 * C151293) +
                          (4 * C151217 + C150928 * C151294) * be) /
                         C150608;
    const double C8940 = (C150718 * (4 * C151218 + C150928 * C151295) +
                          (4 * C151217 + C150928 * C151294) * ae) /
                         C150608;
    const double C7925 = 5 * (3 * C150976 + C150928 * C151217) +
                         C150928 * (4 * C151217 + C150928 * C151294);
    const double C8182 = 3 * C150976 + C150928 * C151217 + C151294 * C150721;
    const double C8936 = C150718 * (4 * C151217 + C150928 * C151294);
    const double C10243 =
        (2 * (C150718 * C151218 + C151217 * ae) +
         C150718 * (C151218 + C150718 * C151449 + C151445 * ae) +
         (C151217 + C151288 * C150721) * ae) /
        C150608;
    const double C10245 =
        (2 * (ae * C151216 + be * C151218 + C150718 * C151202) +
         ae * (C151216 + C150718 * C151448 + C151445 * be) +
         be * (C151218 + C150718 * C151449 + C151445 * ae) +
         C150718 *
             (C151202 + ae * C151448 + be * C151449 +
              C150718 * (ae * C151287 + be * C151289 +
                         C150718 * (2 * C150928 * C151197 +
                                    C150928 * (C151197 +
                                               C150724 *
                                                   (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                   C150607 * C150940))))) /
        C150616;
    const double C10242 =
        (2 * (C150718 * C151216 + C151217 * be) +
         C150718 * (C151216 + C150718 * C151448 + C151445 * be) +
         (C151217 + C151288 * C150721) * be) /
        C150608;
    const double C151409 = C151407 + C151402;
    const double C151408 = C151406 + C151399;
    const double C151649 = C151614 + C151646;
    const double C18108 = 5 * (3 * C151066 + C150718 * C151481) +
                          C150718 * (4 * C151481 + C150718 * C151645);
    const double C151648 = C151606 + C151644;
    const double C151814 = C150718 * C151812;
    const double C151813 = C150718 * C151811;
    const double C151860 = C151833 + C151857;
    const double C151893 = C151890 + C151891;
    const double C151892 = C151887 + C151888;
    const double C151883 = C151258 + C151881;
    const double C151882 = C151256 + C151880;
    const double C151997 = C150718 * C151995;
    const double C151996 = C150718 * C151994;
    const double C151951 = C151910 + C151949;
    const double C68052 = 5 * (3 * C151331 + C150718 * C151763) +
                          C150718 * (4 * C151763 + C150718 * C151948);
    const double C151950 = C151904 + C151947;
    const double C152070 = C152065 + C152046;
    const double C152069 = C152023 + C152064;
    const double C152068 = C152062 + C152043;
    const double C191 = C134 * C157;
    const double C447 = C134 * C399;
    const double C884 = C134 * C401;
    const double C708 = C134 * C660;
    const double C14858 = C14817 * C660;
    const double C32727 = C31629 * C660;
    const double C101634 = C100536 * C660;
    const double C133860 = C133819 * C660;
    const double C1028 = C134 * C662;
    const double C31666 = C31629 * C662;
    const double C100573 = C100536 * C662;
    const double C1266 = C134 * C1242;
    const double C32517 = C31629 * C1242;
    const double C101424 = C100536 * C1242;
    const double C3058 = C134 * C2672;
    const double C15919 = C14817 * C2672;
    const double C32274 = C31629 * C2672;
    const double C101181 = C100536 * C2672;
    const double C134921 = C133819 * C2672;
    const double C2684 =
        (3 * (C150826 + C150718 * C151013 + C151009 * ae) +
         C150718 * (2 * C151013 + C150718 * C151098 + C151089 * ae) +
         (2 * C151009 + C150718 * C151089) * ae) /
        C150608;
    const double C9523 =
        (3 * (C150955 + C150718 * C151157 + C151153 * ae) +
         C150718 * (2 * C151157 + C150718 * C151386 + C151377 * ae) +
         (2 * C151153 + C150718 * C151377) * ae) /
        C150608;
    const double C151489 = C151462 + C151487;
    const double C60400 = C134 * C7931;
    const double C60557 = C134 * C8192;
    const double C66487 = C14817 * C8192;
    const double C94721 = C31629 * C8192;
    const double C111658 = C100536 * C8192;
    const double C143909 = C133819 * C8192;
    const double C61022 = C134 * C8938;
    const double C93794 = C31629 * C8938;
    const double C110652 = C100536 * C8938;
    const double C61865 = C134 * C10241;
    const double C67476 = C14817 * C10241;
    const double C94028 = C31629 * C10241;
    const double C110916 = C100536 * C10241;
    const double C144898 = C133819 * C10241;
    const double C9521 =
        (3 * (C150970 + C150718 * C151317 + C151313 * ae) +
         C150718 * (2 * C151317 + C150718 * C151363 + C151354 * ae) +
         (2 * C151313 + C150718 * C151354) * ae) /
        C150608;
    const double C151589 = C151587 + C151570;
    const double C151770 = C151737 + C151768;
    const double C189 = C134 * C156;
    const double C445 = C134 * C398;
    const double C882 = C134 * C400;
    const double C706 = C134 * C659;
    const double C14856 = C14817 * C659;
    const double C32725 = C31629 * C659;
    const double C101632 = C100536 * C659;
    const double C133858 = C133819 * C659;
    const double C1026 = C134 * C661;
    const double C31664 = C31629 * C661;
    const double C100571 = C100536 * C661;
    const double C1264 = C134 * C1241;
    const double C32515 = C31629 * C1241;
    const double C101422 = C100536 * C1241;
    const double C2906 = C2894 - C2895;
    const double C3059 = C152711 * C2687;
    const double C15920 = C14812 * C2687;
    const double C32275 = C152775 * C2687;
    const double C101182 = C152775 * C2687;
    const double C134922 = C133814 * C2687;
    const double C3056 = C134 * C2671;
    const double C15917 = C14817 * C2671;
    const double C32272 = C31629 * C2671;
    const double C101179 = C100536 * C2671;
    const double C134919 = C133819 * C2671;
    const double C1905 = C1902 - C1892;
    const double C2127 = C2124 - C2114;
    const double C6613 = C6608 - C6600;
    const double C6860 = C6858 - C6853;
    const double C7576 = C7572 - C7565;
    const double C2693 =
        (3 * (C150750 + ae * C151012 + be * C151013 + C150718 * C151092) +
         ae * (2 * C151012 + C150718 * C151097 + C151089 * be) +
         be * (2 * C151013 + C150718 * C151098 + C151089 * ae) +
         C150718 * (2 * C151092 + ae * C151097 + be * C151098 +
                    C150718 * (C150762 + ae * C151087 + be * C151090 +
                               C150718 * (ae * C150870 + be * C150872 +
                                          C150718 * C150777)))) /
        C150616;
    const double C2683 =
        (3 * (C150825 + C150718 * C151012 + C151009 * be) +
         C150718 * (2 * C151012 + C150718 * C151097 + C151089 * be) +
         (2 * C151009 + C150718 * C151089) * be) /
        C150608;
    const double C151718 = C151707 + C151714;
    const double C26878 = C26871 - C26872;
    const double C7952 = C7943 - C7944;
    const double C8225 = C8214 - C8215;
    const double C8738 = C8732 - C8733;
    const double C10037 = C10028 - C10029;
    const double C9530 =
        (3 * (C151147 + ae * C151156 + be * C151157 + C150718 * C151380) +
         ae * (2 * C151156 + C150718 * C151385 + C151377 * be) +
         be * (2 * C151157 + C150718 * C151386 + C151377 * ae) +
         C150718 * (2 * C151380 + ae * C151385 + be * C151386 +
                    C150718 * (C151196 + ae * C151375 + be * C151378 +
                               C150718 * (ae * C151267 + be * C151273 +
                                          C150718 * C150928 * C151197)))) /
        C150616;
    const double C9522 =
        (3 * (C150953 + C150718 * C151156 + C151153 * be) +
         C150718 * (2 * C151156 + C150718 * C151385 + C151377 * be) +
         (2 * C151153 + C150718 * C151377) * be) /
        C150608;
    const double C151807 = C151794 + C151801;
    const double C151488 = C151456 + C151486;
    const double C151617 = C151597 + C151598;
    const double C151643 = C150718 * C151637;
    const double C60558 = C152711 * C8199;
    const double C66488 = C14812 * C8199;
    const double C94722 = C152775 * C8199;
    const double C111659 = C152775 * C8199;
    const double C143910 = C133814 * C8199;
    const double C61023 = C152711 * C8941;
    const double C93795 = C152775 * C8941;
    const double C110653 = C152775 * C8941;
    const double C60398 = C134 * C7930;
    const double C60555 = C134 * C8191;
    const double C66485 = C14817 * C8191;
    const double C94719 = C31629 * C8191;
    const double C111656 = C100536 * C8191;
    const double C143907 = C133819 * C8191;
    const double C61020 = C134 * C8937;
    const double C93792 = C31629 * C8937;
    const double C110650 = C100536 * C8937;
    const double C61866 = C152711 * C10244;
    const double C67477 = C14812 * C10244;
    const double C94029 = C152775 * C10244;
    const double C110917 = C152775 * C10244;
    const double C144899 = C133814 * C10244;
    const double C61863 = C134 * C10240;
    const double C67474 = C14817 * C10240;
    const double C94026 = C31629 * C10240;
    const double C110914 = C100536 * C10240;
    const double C144896 = C133819 * C10240;
    const double C9529 =
        (3 * (C151187 + ae * C151316 + be * C151317 + C150718 * C151357) +
         ae * (2 * C151316 + C150718 * C151362 + C151354 * be) +
         be * (2 * C151317 + C150718 * C151363 + C151354 * ae) +
         C150718 * (2 * C151357 + ae * C151362 + be * C151363 +
                    C150718 * (C151192 + ae * C151352 + be * C151355 +
                               C150718 * (ae * C151248 + be * C151252 +
                                          C150718 * (C150760 +
                                                     C150775 * C150940))))) /
        C150616;
    const double C9520 =
        (3 * (C150968 + C150718 * C151316 + C151313 * be) +
         C150718 * (2 * C151316 + C150718 * C151362 + C151354 * be) +
         (2 * C151313 + C150718 * C151354) * be) /
        C150608;
    const double C151993 = C151982 + C151989;
    const double C151588 = C151586 + C151567;
    const double C152039 = C152030 + C152008;
    const double C151769 = C151733 + C151767;
    const double C151912 = C151895 + C151896;
    const double C151940 = C150718 * C151936;
    const double C159 = (6 * (4 * C150849 + C150724 * C150882) +
                         C150724 * (5 * C150882 + C150724 * C150924)) /
                        C150608;
    const double C403 =
        (4 * C150849 + C150724 * C150882 + C150924 * C150940) / C150608;
    const double C879 = (C150928 * (5 * C150882 + C150724 * C150924)) / C150608;
    const double C60395 = (6 * (4 * C151234 + C150928 * C151264) +
                           C150928 * (5 * C151264 + C150928 * C151861)) /
                          C150608;
    const double C1250 =
        (ae * C150928 * C150923 + be * C150928 * C150924 +
         C150718 * C150928 *
             (4 * C150779 +
              C150724 *
                  (3 * C150777 +
                   C150724 * (2 * C150724 * C150775 +
                              C150724 * (C150775 + (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                       C150607 * C150736))))) /
        C150616;
    const double C158 = (6 * (4 * C150848 + C150724 * C150881) +
                         C150724 * (5 * C150881 + C150724 * C150923)) /
                        C150608;
    const double C402 =
        (4 * C150848 + C150724 * C150881 + C150923 * C150940) / C150608;
    const double C878 = (C150928 * (5 * C150881 + C150724 * C150923)) / C150608;
    const double C60394 = (6 * (4 * C151232 + C150928 * C151262) +
                           C150928 * (5 * C151262 + C150928 * C151859)) /
                          C150608;
    const double C129 =
        (C152914 + 2 * C152489) / C152479 - (C152923 * C152480) / C152475;
    const double C130 = (C152897 + 2 * C152498 + C152923) / C152479 -
                        (C152916 * C152480) / C152475;
    const double C131 = (C152864 + C152495 / C152475 + C152916) / C152479 -
                        (C152899 * C152480) / C152475;
    const double C1517 =
        (C152917 + 2 * C152571) / C152479 - (C152924 * C152567) / C152475;
    const double C1518 = (C152901 + 2 * C152578 + C152924) / C152479 -
                         (C152920 * C152567) / C152475;
    const double C1519 = (C152870 + C152575 / C152475 + C152920) / C152479 -
                         (C152906 * C152567) / C152475;
    const double C2658 =
        (C152918 + 2 * C152613) / C152479 - (C152925 * C152609) / C152475;
    const double C2659 = (C152903 + 2 * C152620 + C152925) / C152479 -
                         (C152922 * C152609) / C152475;
    const double C2660 = (C152873 + C152617 / C152475 + C152922) / C152479 -
                         (C152909 * C152609) / C152475;
    const double C150684 = C150683 - C150681;
    const double C14861 = C14816 * C637;
    const double C14849 = C14816 * C629;
    const double C14837 = C14816 * C630;
    const double C14825 = C14816 * C631;
    const double C15163 = C14816 * C1706;
    const double C15151 = C14816 * C1229;
    const double C15139 = C14816 * C1707;
    const double C15127 = C14816 * C1228;
    const double C15465 = C14816 * C2664;
    const double C15453 = C14816 * C635;
    const double C15441 = C14816 * C2665;
    const double C15429 = C14816 * C634;
    const double C15707 = C14816 * C1230;
    const double C15922 = C14816 * C636;
    const double C16245 = C14816 * C1702;
    const double C16233 = C14816 * C1703;
    const double C17027 = C14816 * C2266;
    const double C17338 = C14816 * C1710;
    const double C18421 = C14816 * C3210;
    const double C18640 = C14816 * C2668;
    const double C65191 = C14816 * C1708;
    const double C65179 = C14816 * C1227;
    const double C66117 = C14816 * C1704;
    const double C66490 = C14816 * C8180;
    const double C66478 = C14816 * C2265;
    const double C66762 = C14816 * C9509;
    const double C66750 = C14816 * C1709;
    const double C66738 = C14816 * C3209;
    const double C67479 = C14816 * C8178;
    const double C68744 = C14816 * C9510;
    const double C31669 = C31628 * C141;
    const double C31657 = C31628 * C140;
    const double C31653 = C31628 * C139;
    const double C31641 = C31628 * C138;
    const double C31633 = C31628 * C137;
    const double C31971 = C31628 * C375;
    const double C31959 = C31628 * C368;
    const double C31951 = C31628 * C374;
    const double C31943 = C31628 * C373;
    const double C31939 = C31628 * C370;
    const double C31931 = C31628 * C369;
    const double C32277 = C31628 * C636;
    const double C32265 = C31628 * C629;
    const double C32257 = C31628 * C635;
    const double C32249 = C31628 * C634;
    const double C32245 = C31628 * C631;
    const double C32237 = C31628 * C630;
    const double C32520 = C31628 * C376;
    const double C32730 = C31628 * C637;
    const double C33051 = C31628 * C1230;
    const double C33039 = C31628 * C1229;
    const double C33031 = C31628 * C1228;
    const double C33839 = C31628 * C1525;
    const double C33831 = C31628 * C1524;
    const double C34157 = C31628 * C1707;
    const double C34149 = C31628 * C1706;
    const double C35227 = C31628 * C1703;
    const double C35219 = C31628 * C1702;
    const double C35449 = C31628 * C2665;
    const double C35441 = C31628 * C2664;
    const double C40554 = C31628 * C372;
    const double C40539 = C31628 * C371;
    const double C41771 = C31628 * C1227;
    const double C42255 = C31628 * C1527;
    const double C42247 = C31628 * C1528;
    const double C42235 = C31628 * C1526;
    const double C42595 = C31628 * C1709;
    const double C42587 = C31628 * C1710;
    const double C42575 = C31628 * C1708;
    const double C42567 = C31628 * C1704;
    const double C43274 = C31628 * C2266;
    const double C43547 = C31628 * C2265;
    const double C44949 = C31628 * C3210;
    const double C45221 = C31628 * C3209;
    const double C93797 = C31628 * C7923;
    const double C94031 = C31628 * C8178;
    const double C94724 = C31628 * C8180;
    const double C95974 = C31628 * C9509;
    const double C100576 = C100535 * C141;
    const double C100564 = C100535 * C140;
    const double C100560 = C100535 * C139;
    const double C100548 = C100535 * C138;
    const double C100540 = C100535 * C137;
    const double C100878 = C100535 * C375;
    const double C100866 = C100535 * C368;
    const double C100858 = C100535 * C374;
    const double C100850 = C100535 * C373;
    const double C100846 = C100535 * C370;
    const double C100838 = C100535 * C369;
    const double C101184 = C100535 * C636;
    const double C101172 = C100535 * C629;
    const double C101164 = C100535 * C635;
    const double C101156 = C100535 * C634;
    const double C101152 = C100535 * C631;
    const double C101144 = C100535 * C630;
    const double C101427 = C100535 * C376;
    const double C101637 = C100535 * C637;
    const double C101958 = C100535 * C1230;
    const double C101946 = C100535 * C1229;
    const double C101938 = C100535 * C1228;
    const double C102746 = C100535 * C1525;
    const double C102738 = C100535 * C1524;
    const double C103064 = C100535 * C1707;
    const double C103056 = C100535 * C1706;
    const double C104134 = C100535 * C1703;
    const double C104126 = C100535 * C1702;
    const double C104356 = C100535 * C2665;
    const double C104348 = C100535 * C2664;
    const double C109354 = C100535 * C1526;
    const double C109342 = C100535 * C372;
    const double C109334 = C100535 * C371;
    const double C110286 = C100535 * C1227;
    const double C110278 = C100535 * C1708;
    const double C110655 = C100535 * C7923;
    const double C110643 = C100535 * C1527;
    const double C110919 = C100535 * C8178;
    const double C110907 = C100535 * C2265;
    const double C110899 = C100535 * C1709;
    const double C110891 = C100535 * C1704;
    const double C111147 = C100535 * C1528;
    const double C111452 = C100535 * C2266;
    const double C111661 = C100535 * C8180;
    const double C112523 = C100535 * C1710;
    const double C112933 = C100535 * C3209;
    const double C112925 = C100535 * C9509;
    const double C127532 = C100535 * C3210;
    const double C14879 = C14864 - C14865;
    const double C14874 = C14844 - C14845;
    const double C14873 = C14840 - C14841;
    const double C14868 = C14820 - C14821;
    const double C15181 = C15166 - C15167;
    const double C15176 = C15146 - C15147;
    const double C15173 = C15134 - C15135;
    const double C15172 = C15130 - C15131;
    const double C15483 = C15468 - C15469;
    const double C15478 = C15448 - C15449;
    const double C15475 = C15436 - C15437;
    const double C15474 = C15432 - C15433;
    const double C15716 = C15710 - C15711;
    const double C15931 = C15925 - C15926;
    const double C16257 = C16248 - C16249;
    const double C16252 = C16228 - C16229;
    const double C17036 = C17030 - C17031;
    const double C17347 = C17341 - C17342;
    const double C18430 = C18424 - C18425;
    const double C18649 = C18643 - C18644;
    const double C65203 = C65194 - C65195;
    const double C65198 = C65174 - C65175;
    const double C66126 = C66120 - C66121;
    const double C66502 = C66493 - C66494;
    const double C66497 = C66473 - C66474;
    const double C66777 = C66765 - C66766;
    const double C66772 = C66745 - C66746;
    const double C66769 = C66733 - C66734;
    const double C67488 = C67482 - C67483;
    const double C68753 = C68747 - C68748;
    const double C14876 = C14852 - C14853;
    const double C14871 = C14832 - C14833;
    const double C14870 = C14828 - C14829;
    const double C15179 = C15158 - C15159;
    const double C15178 = C15154 - C15155;
    const double C15175 = C15142 - C15143;
    const double C15170 = C15122 - C15123;
    const double C15480 = C15456 - C15457;
    const double C15472 = C15424 - C15425;
    const double C15714 = C15702 - C15703;
    const double C16255 = C16240 - C16241;
    const double C16254 = C16236 - C16237;
    const double C17034 = C17022 - C17023;
    const double C17345 = C17333 - C17334;
    const double C65201 = C65186 - C65187;
    const double C65200 = C65182 - C65183;
    const double C66124 = C66112 - C66113;
    const double C66499 = C66481 - C66482;
    const double C66774 = C66753 - C66754;
    const double C31679 = C31660 - C31661;
    const double C31676 = C31648 - C31649;
    const double C31675 = C31644 - C31645;
    const double C31673 = C31636 - C31637;
    const double C31984 = C31966 - C31967;
    const double C31983 = C31962 - C31963;
    const double C31981 = C31954 - C31955;
    const double C31979 = C31946 - C31947;
    const double C31976 = C31934 - C31935;
    const double C31974 = C31926 - C31927;
    const double C32289 = C32268 - C32269;
    const double C32287 = C32260 - C32261;
    const double C32285 = C32252 - C32253;
    const double C32282 = C32240 - C32241;
    const double C32280 = C32232 - C32233;
    const double C33058 = C33046 - C33047;
    const double C33057 = C33042 - C33043;
    const double C33055 = C33034 - C33035;
    const double C33844 = C33834 - C33835;
    const double C33842 = C33826 - C33827;
    const double C34162 = C34152 - C34153;
    const double C34160 = C34144 - C34145;
    const double C35232 = C35222 - C35223;
    const double C35230 = C35214 - C35215;
    const double C40562 = C40549 - C40550;
    const double C40561 = C40542 - C40543;
    const double C41776 = C41766 - C41767;
    const double C42262 = C42250 - C42251;
    const double C42260 = C42242 - C42243;
    const double C42259 = C42238 - C42239;
    const double C42604 = C42590 - C42591;
    const double C42602 = C42582 - C42583;
    const double C42601 = C42578 - C42579;
    const double C42599 = C42570 - C42571;
    const double C43278 = C43269 - C43270;
    const double C43550 = C43542 - C43543;
    const double C100586 = C100567 - C100568;
    const double C100583 = C100555 - C100556;
    const double C100582 = C100551 - C100552;
    const double C100580 = C100543 - C100544;
    const double C100891 = C100873 - C100874;
    const double C100890 = C100869 - C100870;
    const double C100888 = C100861 - C100862;
    const double C100886 = C100853 - C100854;
    const double C100883 = C100841 - C100842;
    const double C100881 = C100833 - C100834;
    const double C101196 = C101175 - C101176;
    const double C101194 = C101167 - C101168;
    const double C101192 = C101159 - C101160;
    const double C101189 = C101147 - C101148;
    const double C101187 = C101139 - C101140;
    const double C101965 = C101953 - C101954;
    const double C101964 = C101949 - C101950;
    const double C101962 = C101941 - C101942;
    const double C102751 = C102741 - C102742;
    const double C102749 = C102733 - C102734;
    const double C103069 = C103059 - C103060;
    const double C103067 = C103051 - C103052;
    const double C104139 = C104129 - C104130;
    const double C104137 = C104121 - C104122;
    const double C109362 = C109349 - C109350;
    const double C109361 = C109345 - C109346;
    const double C109359 = C109337 - C109338;
    const double C110291 = C110281 - C110282;
    const double C110289 = C110273 - C110274;
    const double C110659 = C110646 - C110647;
    const double C110927 = C110910 - C110911;
    const double C110925 = C110902 - C110903;
    const double C110923 = C110894 - C110895;
    const double C111150 = C111142 - C111143;
    const double C111455 = C111447 - C111448;
    const double C112526 = C112518 - C112519;
    const double C133878 = C133854 - C133855;
    const double C133873 = C133834 - C133835;
    const double C133872 = C133830 - C133831;
    const double C134181 = C134160 - C134161;
    const double C134180 = C134156 - C134157;
    const double C134177 = C134144 - C134145;
    const double C134172 = C134124 - C134125;
    const double C134482 = C134458 - C134459;
    const double C134474 = C134426 - C134427;
    const double C134716 = C134704 - C134705;
    const double C135257 = C135242 - C135243;
    const double C135256 = C135238 - C135239;
    const double C136036 = C136024 - C136025;
    const double C136347 = C136335 - C136336;
    const double C142623 = C142608 - C142609;
    const double C142622 = C142604 - C142605;
    const double C143546 = C143534 - C143535;
    const double C143921 = C143903 - C143904;
    const double C144196 = C144175 - C144176;
    const double C117461 =
        ((((0 - (C150606 * C150659) / C150608) * ae) / C150608 -
          (0 * be) / C150618 + C150615 / C150608) /
             C150660 -
         ((C150606 * C150675 + 0) * be) / C150608) /
            C150660 +
        ((C150606 * (C150675 / C150660 -
                     ((C150606 * C150671 + C152846) * be) / C150608 + C150672) +
          C152912) *
         ae) /
            C150608 +
        C150671 / C150660 - ((C150606 * C150672 + C152775) * be) / C150608;
    const double C117463 =
        (C150675 / C150660 - ((C150606 * C150671 + C152846) * be) / C150608 +
         C150672) /
            C150660 +
        ((C150606 * (C150671 / C150660 -
                     ((C150606 * C150672 + C152775) * be) / C150608) +
          C152913) *
         ae) /
            C150608 +
        2 * (C150672 / C150660 - (0 * be) / C150608);
    const double C117465 =
        (C150671 / C150660 - ((C150606 * C150672 + C152775) * be) / C150608) /
            C150660 +
        ((C150606 * (C150672 / C150660 - (0 * be) / C150608) + C133814) * ae) /
            C150608;
    const double C133815 = C150675 / C150660 -
                           ((C150606 * C150671 + C152846) * be) / C150608 +
                           C150672;
    const double C133817 =
        C150671 / C150660 - ((C150606 * C150672 + C152775) * be) / C150608;
    const double C209 = C203 + C188;
    const double C2916 = C2913 * C152696;
    const double C6855 = C2913 * C6339;
    const double C23883 = C2913 * C152747;
    const double C26674 = C2913 * C152845;
    const double C51719 = C2913 * C152747;
    const double C54510 = C2913 * C51243;
    const double C73785 = C2913 * C152911;
    const double C3075 = C3072 + C3063;
    const double C6619 = C6617 * C6340;
    const double C8436 = C6617 * C6339;
    const double C25335 = C6617 * C152747;
    const double C53171 = C6617 * C152747;
    const double C73550 = C6617 * C73311;
    const double C75230 = C6617 * C152911;
    const double C6863 = C6861 * C6340;
    const double C9828 = C6861 * C6339;
    const double C26675 = C6861 * C152747;
    const double C54511 = C6861 * C152747;
    const double C73780 = C6861 * C73311;
    const double C76568 = C6861 * C152911;
    const double C7581 = C7579 * C6340;
    const double C8736 = C7579 * C6339;
    const double C25629 = C7579 * C152747;
    const double C53465 = C7579 * C152747;
    const double C74473 = C7579 * C73311;
    const double C75523 = C7579 * C152911;
    const double C15477 = C15444 - C15445;
    const double C35454 = C35444 - C35445;
    const double C104361 = C104351 - C104352;
    const double C134479 = C134446 - C134447;
    const double C10042 = C10040 + C10035;
    const double C7959 = C7956 + C7950;
    const double C10259 = C10257 + C10250;
    const double C45224 = C45216 - C45217;
    const double C66771 = C66741 - C66742;
    const double C112938 = C112928 - C112929;
    const double C144193 = C144163 - C144164;
    const double C18112 =
        (4 * (2 * C151029 + C150718 * C151052 + C151043 * ae) +
         C150718 * (3 * C151052 + C150718 * C151533 + C151523 * ae) +
         (3 * C151043 + C150718 * C151523) * ae) /
        C150608;
    const double C18118 =
        (4 * (2 * C151046 + ae * C151051 + be * C151052 + C150718 * C151525) +
         ae * (3 * C151051 + C150718 * C151532 + C151523 * be) +
         be * (3 * C151052 + C150718 * C151533 + C151523 * ae) +
         C150718 *
             (3 * C151525 + ae * C151532 + be * C151533 +
              C150718 * (2 * C151515 + ae * C151526 + be * C151527 +
                         C150718 * (C150748 + ae * C151509 + be * C151512 +
                                    C150718 * (ae * C150835 + be * C150839 +
                                               C150718 * C150760))))) /
        C150616;
    const double C18111 =
        (4 * (2 * C151028 + C150718 * C151051 + C151043 * be) +
         C150718 * (3 * C151051 + C150718 * C151532 + C151523 * be) +
         (3 * C151043 + C150718 * C151523) * be) /
        C150608;
    const double C151585 = C151563 + C151581;
    const double C23424 = C23417 + C23418;
    const double C51260 = C51253 + C51254;
    const double C23656 = C23644 + C23645;
    const double C51492 = C51480 + C51481;
    const double C23888 = C23876 + C23877;
    const double C51724 = C51712 + C51713;
    const double C3079 = C3076 * C152696;
    const double C10036 = C3076 * C6338;
    const double C26877 = C3076 * C152845;
    const double C54710 = C3076 * C51243;
    const double C76766 = C3076 * C152910;
    const double C470 = C462 + C440;
    const double C471 = C463 + C444;
    const double C731 = C723 + C701;
    const double C732 = C724 + C705;
    const double C1278 = C1274 + C1263;
    const double C23657 = C23650 + C23651;
    const double C51493 = C51486 + C51487;
    const double C24580 = C24576 + C24577;
    const double C52416 = C52412 + C52413;
    const double C8236 = C8231 + C8221;
    const double C8950 = C8949 + C8947;
    const double C167 =
        (6 * (4 * C150764 + C150724 * C150781) +
         C150724 *
             (5 * C150781 +
              C150724 *
                  (4 * C150779 +
                   C150724 *
                       (3 * C150777 +
                        C150724 *
                            (2 * C150724 * C150775 +
                             C150724 * (C150775 + (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                      C150607 * C150736)))))) /
        C150616;
    const double C413 =
        (3 * C150750 + C150724 * C150764 + C150781 * std::pow(yP - yQ, 2)) /
        C150616;
    const double C414 =
        ((yP - yQ) * (4 * C150764 + C150724 * C150781)) / C150616;
    const double C415 =
        (4 * C150764 + C150724 * C150781 +
         (4 * C150779 +
          C150724 *
              (3 * C150777 +
               C150724 * (2 * C150724 * C150775 +
                          C150724 * (C150775 +
                                     (C150769 * C150770 +
                                      C150721 * bs[9] * std::pow(C150720, 9)) *
                                         C150607 * C150736)))) *
             std::pow(yP - yQ, 2)) /
        C150616;
    const double C674 =
        (3 * C150750 + C150724 * C150764 +
         ae * (C150718 * C150881 + C150877 * be) +
         be * (C150718 * C150882 + C150877 * ae) +
         C150718 * (ae * C150881 + be * C150882 + C150718 * C150781)) /
        C150616;
    const double C675 = (ae * (4 * C150848 + C150724 * C150881) +
                         be * (4 * C150849 + C150724 * C150882) +
                         C150718 * (4 * C150764 + C150724 * C150781)) /
                        C150616;
    const double C880 =
        ((yP - yQ) *
         (5 * C150781 +
          C150724 *
              (4 * C150779 +
               C150724 * (3 * C150777 +
                          C150724 * (2 * C150724 * C150775 +
                                     C150724 * (C150775 +
                                                (C150769 * C150770 +
                                                 C150721 * bs[9] *
                                                     std::pow(C150720, 9)) *
                                                    C150607 * C150736)))))) /
        C150616;
    const double C1024 =
        (ae * (5 * C150881 + C150724 * C150923) +
         be * (5 * C150882 + C150724 * C150924) +
         C150718 *
             (5 * C150781 +
              C150724 *
                  (4 * C150779 +
                   C150724 *
                       (3 * C150777 +
                        C150724 *
                            (2 * C150724 * C150775 +
                             C150724 * (C150775 + (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                      C150607 * C150736)))))) /
        C150616;
    const double C1249 = (ae * C150928 * C150881 + be * C150928 * C150882 +
                          C150718 * C150928 * C150781) /
                         C150616;
    const double C1888 =
        (2 * C150928 * C150781 +
         C150928 *
             (C150781 +
              (3 * C150777 +
               C150724 * (2 * C150724 * C150775 +
                          C150724 * (C150775 +
                                     (C150769 * C150770 +
                                      C150721 * bs[9] * std::pow(C150720, 9)) *
                                         C150607 * C150736))) *
                  C150940)) /
        C150616;
    const double C2110 =
        (ae * (C150881 + C150918 * C150940) +
         be * (C150882 + C150920 * C150940) +
         C150718 *
             (C150781 +
              (3 * C150777 +
               C150724 * (2 * C150724 * C150775 +
                          C150724 * (C150775 +
                                     (C150769 * C150770 +
                                      C150721 * bs[9] * std::pow(C150720, 9)) *
                                         C150607 * C150736))) *
                  C150940)) /
        C150616;
    const double C2892 =
        (C150928 * C150781 + ae * (C150718 * C151123 + C151124 * be) +
         be * (C150718 * C151125 + C151124 * ae) +
         C150718 *
             (ae * C151123 + be * C151125 +
              C150718 * C150928 *
                  (3 * C150777 +
                   C150724 * (2 * C150724 * C150775 +
                              C150724 * (C150775 + (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                       C150607 * C150736))))) /
        C150616;
    const double C8217 = C152711 * C8195;
    const double C17025 = C14812 * C8195;
    const double C43272 = C152775 * C8195;
    const double C111450 = C152775 * C8195;
    const double C136027 = C133814 * C8195;
    const double C8735 = C152711 * C8197;
    const double C42245 = C152775 * C8197;
    const double C111145 = C152775 * C8197;
    const double C60396 =
        (6 * (4 * C151194 + C150928 * C151827) +
         C150928 *
             (5 * C151827 +
              C150928 *
                  (4 * C151825 +
                   C150928 *
                       (3 * C151823 +
                        C150928 *
                            (2 * C150928 * C150775 +
                             C150928 * (C150775 + (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                      C150607 * C150940)))))) /
        C150616;
    const double C61018 =
        (ae * (5 * C151262 + C150928 * C151859) +
         be * (5 * C151264 + C150928 * C151861) +
         C150718 *
             (5 * C151827 +
              C150928 *
                  (4 * C151825 +
                   C150928 *
                       (3 * C151823 +
                        C150928 *
                            (2 * C150928 * C150775 +
                             C150928 * (C150775 + (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                      C150607 * C150940)))))) /
        C150616;
    const double C676 =
        (4 * C150764 + C150724 * C150781 +
         ae * (C150718 * C150923 + C150919 * be) +
         be * (C150718 * C150924 + C150919 * ae) +
         C150718 *
             (ae * C150923 + be * C150924 +
              C150718 *
                  (4 * C150779 +
                   C150724 *
                       (3 * C150777 +
                        C150724 *
                            (2 * C150724 * C150775 +
                             C150724 * (C150775 + (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                      C150607 * C150736)))))) /
        C150616;
    const double C663 = (4 * C150848 + C150724 * C150881 +
                         C150718 * (C150718 * C150923 + C150919 * be) +
                         C150718 * C150919 * be) /
                        C150608;
    const double C664 = (4 * C150849 + C150724 * C150882 +
                         C150718 * (C150718 * C150924 + C150919 * ae) +
                         C150718 * C150919 * ae) /
                        C150608;
    const double C1022 = (C150718 * (5 * C150881 + C150724 * C150923) +
                          (5 * C150877 + C150724 * C150919) * be) /
                         C150608;
    const double C1023 = (C150718 * (5 * C150882 + C150724 * C150924) +
                          (5 * C150877 + C150724 * C150919) * ae) /
                         C150608;
    const double C1243 =
        (C150718 * C150928 * C150923 + C150928 * C150919 * be) / C150608;
    const double C1244 =
        (C150718 * C150928 * C150924 + C150928 * C150919 * ae) / C150608;
    const double C143 = 6 * (4 * C150844 + C150724 * C150877) +
                        C150724 * (5 * C150877 + C150724 * C150919);
    const double C379 = 4 * C150844 + C150724 * C150877 + C150919 * C150940;
    const double C640 = 4 * C150844 + C150724 * C150877 + C150919 * C150721;
    const double C877 = C150928 * (5 * C150877 + C150724 * C150919);
    const double C1021 = C150718 * (5 * C150877 + C150724 * C150919);
    const double C1232 = C150718 * C150928 * C150919;
    const double C3053 =
        (2 * (C150718 * C150882 + C150877 * ae) +
         C150718 * (C150882 + C150718 * C151133 + C151129 * ae) +
         (C150877 + C150913 * C150721) * ae) /
        C150608;
    const double C3054 =
        (2 * (ae * C150881 + be * C150882 + C150718 * C150781) +
         ae * (C150881 + C150718 * C151132 + C151129 * be) +
         be * (C150882 + C150718 * C151133 + C151129 * ae) +
         C150718 *
             (C150781 + ae * C151132 + be * C151133 +
              C150718 *
                  (ae * C150918 + be * C150920 +
                   C150718 *
                       (3 * C150777 +
                        C150724 *
                            (2 * C150724 * C150775 +
                             C150724 * (C150775 + (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                      C150607 * C150736)))))) /
        C150616;
    const double C3052 =
        (2 * (C150718 * C150881 + C150877 * be) +
         C150718 * (C150881 + C150718 * C151132 + C151129 * be) +
         (C150877 + C150913 * C150721) * be) /
        C150608;
    const double C151121 = C151119 + C151114;
    const double C151120 = C151118 + C151111;
    const double C18413 =
        (3 * (C150951 + C150718 * C151169 + C151165 * ae) +
         C150718 * (2 * C151169 + C150718 * C151684 + C151676 * ae) +
         (2 * C151165 + C150718 * C151676) * ae) /
        C150608;
    const double C18414 =
        (3 * (C151159 + ae * C151168 + be * C151169 + C150718 * C151673) +
         ae * (2 * C151168 + C150718 * C151683 + C151676 * be) +
         be * (2 * C151169 + C150718 * C151684 + C151676 * ae) +
         C150718 *
             (2 * C151673 + ae * C151683 + be * C151684 +
              C150718 * (C151661 + ae * C151674 + be * C151677 +
                         C150718 * (ae * C151662 + be * C151664 +
                                    C150718 * C150928 *
                                        (C150775 + (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                       C150607 * C150736))))) /
        C150616;
    const double C18412 =
        (3 * (C150949 + C150718 * C151168 + C151165 * be) +
         C150718 * (2 * C151168 + C150718 * C151683 + C151676 * be) +
         (2 * C151165 + C150718 * C151676) * be) /
        C150608;
    const double C151724 = C151697 + C151722;
    const double C151723 = C151691 + C151721;
    const double C9525 =
        (3 * (C150977 + C150718 * C151309 + C151305 * ae) +
         C150718 * (2 * C151309 + C150718 * C151409 + C151400 * ae) +
         (2 * C151305 + C150718 * C151400) * ae) /
        C150608;
    const double C9531 =
        (3 * (C151184 + ae * C151308 + be * C151309 + C150718 * C151403) +
         ae * (2 * C151308 + C150718 * C151408 + C151400 * be) +
         be * (2 * C151309 + C150718 * C151409 + C151400 * ae) +
         C150718 *
             (2 * C151403 + ae * C151408 + be * C151409 +
              C150718 * (C151200 + ae * C151398 + be * C151401 +
                         C150718 * (ae * C151281 + be * C151283 +
                                    C150718 * (C151197 +
                                               C150724 *
                                                   (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                   C150607 * C150940))))) /
        C150616;
    const double C9524 =
        (3 * (C150975 + C150718 * C151308 + C151305 * be) +
         C150718 * (2 * C151308 + C150718 * C151408 + C151400 * be) +
         (2 * C151305 + C150718 * C151400) * be) /
        C150608;
    const double C151651 = C151649 + C151632;
    const double C151650 = C151648 + C151629;
    const double C151816 = C151783 + C151814;
    const double C151815 = C151779 + C151813;
    const double C60553 =
        (4 * C151194 + C150928 * C151827 +
         ae * (C150718 * C151859 + C151860 * be) +
         be * (C150718 * C151861 + C151860 * ae) +
         C150718 *
             (ae * C151859 + be * C151861 +
              C150718 *
                  (4 * C151825 +
                   C150928 *
                       (3 * C151823 +
                        C150928 *
                            (2 * C150928 * C150775 +
                             C150928 * (C150775 + (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                      C150607 * C150940)))))) /
        C150616;
    const double C60551 = (4 * C151232 + C150928 * C151262 +
                           C150718 * (C150718 * C151859 + C151860 * be) +
                           C150718 * C151860 * be) /
                          C150608;
    const double C60552 = (4 * C151234 + C150928 * C151264 +
                           C150718 * (C150718 * C151861 + C151860 * ae) +
                           C150718 * C151860 * ae) /
                          C150608;
    const double C61016 = (C150718 * (5 * C151262 + C150928 * C151859) +
                           (5 * C151263 + C150928 * C151860) * be) /
                          C150608;
    const double C61017 = (C150718 * (5 * C151264 + C150928 * C151861) +
                           (5 * C151263 + C150928 * C151860) * ae) /
                          C150608;
    const double C60393 = 6 * (4 * C151233 + C150928 * C151263) +
                          C150928 * (5 * C151263 + C150928 * C151860);
    const double C60550 = 4 * C151233 + C150928 * C151263 + C151860 * C150721;
    const double C61015 = C150718 * (5 * C151263 + C150928 * C151860);
    const double C61860 =
        (2 * (C150718 * C151264 + C151263 * ae) +
         C150718 * (C151264 + C150718 * C151893 + C151889 * ae) +
         (C151263 + C151854 * C150721) * ae) /
        C150608;
    const double C61861 =
        (2 * (ae * C151262 + be * C151264 + C150718 * C151827) +
         ae * (C151262 + C150718 * C151892 + C151889 * be) +
         be * (C151264 + C150718 * C151893 + C151889 * ae) +
         C150718 *
             (C151827 + ae * C151892 + be * C151893 +
              C150718 *
                  (ae * C151853 + be * C151855 +
                   C150718 *
                       (3 * C151823 +
                        C150928 *
                            (2 * C150928 * C150775 +
                             C150928 * (C150775 + (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                      C150607 * C150940)))))) /
        C150616;
    const double C61859 =
        (2 * (C150718 * C151262 + C151263 * be) +
         C150718 * (C151262 + C150718 * C151892 + C151889 * be) +
         (C151263 + C151854 * C150721) * be) /
        C150608;
    const double C151885 = C151883 + C151878;
    const double C151884 = C151882 + C151875;
    const double C151999 = C151972 + C151997;
    const double C151998 = C151966 + C151996;
    const double C151953 = C151951 + C151935;
    const double C151952 = C151950 + C151932;
    const double C152073 = C150718 * C152070;
    const double C119417 = 6 * (4 * C151523 + C150718 * C151583) +
                           C150718 * (5 * C151583 + C150718 * C152069);
    const double C152072 = C150718 * C152068;
    const double C15462 = C14817 * C2684;
    const double C35438 = C31629 * C2684;
    const double C104345 = C100536 * C2684;
    const double C134464 = C133819 * C2684;
    const double C18418 = C14817 * C9523;
    const double C44946 = C31629 * C9523;
    const double C127529 = C100536 * C9523;
    const double C137400 = C133819 * C9523;
    const double C151491 = C151489 + C151478;
    const double C66759 = C14817 * C9521;
    const double C95971 = C31629 * C9521;
    const double C112922 = C100536 * C9521;
    const double C144181 = C133819 * C9521;
    const double C151591 = C150718 * C151589;
    const double C152024 = 4 * C151589;
    const double C152005 = be * C151589;
    const double C151772 = C151770 + C151760;
    const double C198 = C189 - C190;
    const double C456 = C445 - C446;
    const double C886 = C882 - C883;
    const double C717 = C706 - C707;
    const double C14877 = C14856 - C14857;
    const double C32734 = C32725 - C32726;
    const double C101641 = C101632 - C101633;
    const double C133879 = C133858 - C133859;
    const double C1030 = C1026 - C1027;
    const double C31680 = C31664 - C31665;
    const double C100587 = C100571 - C100572;
    const double C1271 = C1264 - C1265;
    const double C32524 = C32515 - C32516;
    const double C101431 = C101422 - C101423;
    const double C2909 = C2906 - C2896;
    const double C3068 = C3056 - C3057;
    const double C15929 = C15917 - C15918;
    const double C32290 = C32272 - C32273;
    const double C101197 = C101179 - C101180;
    const double C134931 = C134919 - C134920;
    const double C1908 = C1905 + C1893;
    const double C2130 = C2127 + C2115;
    const double C6618 = C6613 + C6601;
    const double C6862 = C6860 + C6854;
    const double C7580 = C7576 + C7566;
    const double C15463 = C14812 * C2693;
    const double C35439 = C152775 * C2693;
    const double C104346 = C152775 * C2693;
    const double C134465 = C133814 * C2693;
    const double C15460 = C14817 * C2683;
    const double C35436 = C31629 * C2683;
    const double C104343 = C100536 * C2683;
    const double C134462 = C133819 * C2683;
    const double C26879 = C26878 - C26873;
    const double C7955 = C7952 - C7945;
    const double C8230 = C8225 - C8216;
    const double C8739 = C8738 - C8734;
    const double C10039 = C10037 - C10030;
    const double C18419 = C14812 * C9530;
    const double C44947 = C152775 * C9530;
    const double C127530 = C152775 * C9530;
    const double C137401 = C133814 * C9530;
    const double C18416 = C14817 * C9522;
    const double C44944 = C31629 * C9522;
    const double C127527 = C100536 * C9522;
    const double C137398 = C133819 * C9522;
    const double C151490 = C151488 + C151475;
    const double C151625 = C151617 + C151599;
    const double C60402 = C60398 - C60399;
    const double C60559 = C60555 - C60556;
    const double C66500 = C66485 - C66486;
    const double C94727 = C94719 - C94720;
    const double C111664 = C111656 - C111657;
    const double C143922 = C143907 - C143908;
    const double C61024 = C61020 - C61021;
    const double C93800 = C93792 - C93793;
    const double C110660 = C110650 - C110651;
    const double C61867 = C61863 - C61864;
    const double C67486 = C67474 - C67475;
    const double C94034 = C94026 - C94027;
    const double C110928 = C110914 - C110915;
    const double C144908 = C144896 - C144897;
    const double C66760 = C14812 * C9529;
    const double C95972 = C152775 * C9529;
    const double C112923 = C152775 * C9529;
    const double C144182 = C133814 * C9529;
    const double C66757 = C14817 * C9520;
    const double C95969 = C31629 * C9520;
    const double C112920 = C100536 * C9520;
    const double C144179 = C133819 * C9520;
    const double C151590 = C150718 * C151588;
    const double C152014 = 4 * C151588;
    const double C152004 = ae * C151588;
    const double C152061 = C152039 + C152057;
    const double C151771 = C151769 + C151757;
    const double C151922 = C151912 + C151897;
    const double C150685 = C150684 * ae;
    const double C14878 = C14860 - C14861;
    const double C14875 = C14848 - C14849;
    const double C14872 = C14836 - C14837;
    const double C14869 = C14824 - C14825;
    const double C15180 = C15162 - C15163;
    const double C15177 = C15150 - C15151;
    const double C15174 = C15138 - C15139;
    const double C15171 = C15126 - C15127;
    const double C15482 = C15464 - C15465;
    const double C15479 = C15452 - C15453;
    const double C15476 = C15440 - C15441;
    const double C15473 = C15428 - C15429;
    const double C15715 = C15706 - C15707;
    const double C15930 = C15921 - C15922;
    const double C16256 = C16244 - C16245;
    const double C16253 = C16232 - C16233;
    const double C17035 = C17026 - C17027;
    const double C17346 = C17337 - C17338;
    const double C18429 = C18420 - C18421;
    const double C18648 = C18639 - C18640;
    const double C65202 = C65190 - C65191;
    const double C65199 = C65178 - C65179;
    const double C66125 = C66116 - C66117;
    const double C66501 = C66489 - C66490;
    const double C66498 = C66477 - C66478;
    const double C66776 = C66761 - C66762;
    const double C66773 = C66749 - C66750;
    const double C66770 = C66737 - C66738;
    const double C67487 = C67478 - C67479;
    const double C68752 = C68743 - C68744;
    const double C31681 = C31668 - C31669;
    const double C31678 = C31656 - C31657;
    const double C31677 = C31652 - C31653;
    const double C31674 = C31640 - C31641;
    const double C31672 = C31632 - C31633;
    const double C31985 = C31970 - C31971;
    const double C31982 = C31958 - C31959;
    const double C31980 = C31950 - C31951;
    const double C31978 = C31942 - C31943;
    const double C31977 = C31938 - C31939;
    const double C31975 = C31930 - C31931;
    const double C32291 = C32276 - C32277;
    const double C32288 = C32264 - C32265;
    const double C32286 = C32256 - C32257;
    const double C32284 = C32248 - C32249;
    const double C32283 = C32244 - C32245;
    const double C32281 = C32236 - C32237;
    const double C32525 = C32519 - C32520;
    const double C32735 = C32729 - C32730;
    const double C33059 = C33050 - C33051;
    const double C33056 = C33038 - C33039;
    const double C33054 = C33030 - C33031;
    const double C33845 = C33838 - C33839;
    const double C33843 = C33830 - C33831;
    const double C34163 = C34156 - C34157;
    const double C34161 = C34148 - C34149;
    const double C35233 = C35226 - C35227;
    const double C35231 = C35218 - C35219;
    const double C35455 = C35448 - C35449;
    const double C35453 = C35440 - C35441;
    const double C40563 = C40553 - C40554;
    const double C40560 = C40538 - C40539;
    const double C41777 = C41770 - C41771;
    const double C42263 = C42254 - C42255;
    const double C42261 = C42246 - C42247;
    const double C42258 = C42234 - C42235;
    const double C42605 = C42594 - C42595;
    const double C42603 = C42586 - C42587;
    const double C42600 = C42574 - C42575;
    const double C42598 = C42566 - C42567;
    const double C43279 = C43273 - C43274;
    const double C43551 = C43546 - C43547;
    const double C44953 = C44948 - C44949;
    const double C45225 = C45220 - C45221;
    const double C93801 = C93796 - C93797;
    const double C94035 = C94030 - C94031;
    const double C94728 = C94723 - C94724;
    const double C95978 = C95973 - C95974;
    const double C100588 = C100575 - C100576;
    const double C100585 = C100563 - C100564;
    const double C100584 = C100559 - C100560;
    const double C100581 = C100547 - C100548;
    const double C100579 = C100539 - C100540;
    const double C100892 = C100877 - C100878;
    const double C100889 = C100865 - C100866;
    const double C100887 = C100857 - C100858;
    const double C100885 = C100849 - C100850;
    const double C100884 = C100845 - C100846;
    const double C100882 = C100837 - C100838;
    const double C101198 = C101183 - C101184;
    const double C101195 = C101171 - C101172;
    const double C101193 = C101163 - C101164;
    const double C101191 = C101155 - C101156;
    const double C101190 = C101151 - C101152;
    const double C101188 = C101143 - C101144;
    const double C101432 = C101426 - C101427;
    const double C101642 = C101636 - C101637;
    const double C101966 = C101957 - C101958;
    const double C101963 = C101945 - C101946;
    const double C101961 = C101937 - C101938;
    const double C102752 = C102745 - C102746;
    const double C102750 = C102737 - C102738;
    const double C103070 = C103063 - C103064;
    const double C103068 = C103055 - C103056;
    const double C104140 = C104133 - C104134;
    const double C104138 = C104125 - C104126;
    const double C104362 = C104355 - C104356;
    const double C104360 = C104347 - C104348;
    const double C109363 = C109353 - C109354;
    const double C109360 = C109341 - C109342;
    const double C109358 = C109333 - C109334;
    const double C110292 = C110285 - C110286;
    const double C110290 = C110277 - C110278;
    const double C110661 = C110654 - C110655;
    const double C110658 = C110642 - C110643;
    const double C110929 = C110918 - C110919;
    const double C110926 = C110906 - C110907;
    const double C110924 = C110898 - C110899;
    const double C110922 = C110890 - C110891;
    const double C111151 = C111146 - C111147;
    const double C111456 = C111451 - C111452;
    const double C111665 = C111660 - C111661;
    const double C112527 = C112522 - C112523;
    const double C112939 = C112932 - C112933;
    const double C112937 = C112924 - C112925;
    const double C127536 = C127531 - C127532;
    const double C14891 = C14879 - C14866;
    const double C14886 = C14874 - C14846;
    const double C14885 = C14873 - C14842;
    const double C14880 = C14868 - C14822;
    const double C15193 = C15181 - C15168;
    const double C15188 = C15176 - C15148;
    const double C15185 = C15173 - C15136;
    const double C15184 = C15172 - C15132;
    const double C15495 = C15483 - C15470;
    const double C15490 = C15478 - C15450;
    const double C15487 = C15475 - C15438;
    const double C15486 = C15474 - C15434;
    const double C15719 = C15716 - C15712;
    const double C15934 = C15931 - C15927;
    const double C16263 = C16257 - C16250;
    const double C16258 = C16252 - C16230;
    const double C17039 = C17036 - C17032;
    const double C17350 = C17347 - C17343;
    const double C18433 = C18430 - C18426;
    const double C18652 = C18649 - C18645;
    const double C65209 = C65203 - C65196;
    const double C65204 = C65198 - C65176;
    const double C66129 = C66126 - C66122;
    const double C66508 = C66502 - C66495;
    const double C66503 = C66497 - C66475;
    const double C66786 = C66777 - C66767;
    const double C66781 = C66772 - C66747;
    const double C66778 = C66769 - C66735;
    const double C67491 = C67488 - C67484;
    const double C68756 = C68753 - C68749;
    const double C14888 = C14876 - C14854;
    const double C14883 = C14871 - C14834;
    const double C14882 = C14870 - C14830;
    const double C15191 = C15179 - C15160;
    const double C15190 = C15178 - C15156;
    const double C15187 = C15175 - C15144;
    const double C15182 = C15170 - C15124;
    const double C15492 = C15480 - C15458;
    const double C15484 = C15472 - C15426;
    const double C15717 = C15714 - C15704;
    const double C16261 = C16255 - C16242;
    const double C16260 = C16254 - C16238;
    const double C17037 = C17034 - C17024;
    const double C17348 = C17345 - C17335;
    const double C65207 = C65201 - C65188;
    const double C65206 = C65200 - C65184;
    const double C66127 = C66124 - C66114;
    const double C66505 = C66499 - C66483;
    const double C66783 = C66774 - C66755;
    const double C31689 = C31679 - C31662;
    const double C31686 = C31676 - C31650;
    const double C31685 = C31675 - C31646;
    const double C31683 = C31673 - C31638;
    const double C31996 = C31984 - C31968;
    const double C31995 = C31983 - C31964;
    const double C31993 = C31981 - C31956;
    const double C31991 = C31979 - C31948;
    const double C31988 = C31976 - C31936;
    const double C31986 = C31974 - C31928;
    const double C32301 = C32289 - C32270;
    const double C32299 = C32287 - C32262;
    const double C32297 = C32285 - C32254;
    const double C32294 = C32282 - C32242;
    const double C32292 = C32280 - C32234;
    const double C33064 = C33058 - C33048;
    const double C33063 = C33057 - C33044;
    const double C33061 = C33055 - C33036;
    const double C33848 = C33844 - C33836;
    const double C33846 = C33842 - C33828;
    const double C34166 = C34162 - C34154;
    const double C34164 = C34160 - C34146;
    const double C35236 = C35232 - C35224;
    const double C35234 = C35230 - C35216;
    const double C40566 = C40562 - C40551;
    const double C40565 = C40561 - C40544;
    const double C41778 = C41776 - C41768;
    const double C42268 = C42262 - C42252;
    const double C42266 = C42260 - C42244;
    const double C42265 = C42259 - C42240;
    const double C42612 = C42604 - C42592;
    const double C42610 = C42602 - C42584;
    const double C42609 = C42601 - C42580;
    const double C42607 = C42599 - C42572;
    const double C43280 = C43278 - C43271;
    const double C43552 = C43550 - C43544;
    const double C100596 = C100586 - C100569;
    const double C100593 = C100583 - C100557;
    const double C100592 = C100582 - C100553;
    const double C100590 = C100580 - C100545;
    const double C100903 = C100891 - C100875;
    const double C100902 = C100890 - C100871;
    const double C100900 = C100888 - C100863;
    const double C100898 = C100886 - C100855;
    const double C100895 = C100883 - C100843;
    const double C100893 = C100881 - C100835;
    const double C101208 = C101196 - C101177;
    const double C101206 = C101194 - C101169;
    const double C101204 = C101192 - C101161;
    const double C101201 = C101189 - C101149;
    const double C101199 = C101187 - C101141;
    const double C101971 = C101965 - C101955;
    const double C101970 = C101964 - C101951;
    const double C101968 = C101962 - C101943;
    const double C102755 = C102751 - C102743;
    const double C102753 = C102749 - C102735;
    const double C103073 = C103069 - C103061;
    const double C103071 = C103067 - C103053;
    const double C104143 = C104139 - C104131;
    const double C104141 = C104137 - C104123;
    const double C109368 = C109362 - C109351;
    const double C109367 = C109361 - C109347;
    const double C109365 = C109359 - C109339;
    const double C110295 = C110291 - C110283;
    const double C110293 = C110289 - C110275;
    const double C110663 = C110659 - C110648;
    const double C110935 = C110927 - C110912;
    const double C110933 = C110925 - C110904;
    const double C110931 = C110923 - C110896;
    const double C111152 = C111150 - C111144;
    const double C111457 = C111455 - C111449;
    const double C112528 = C112526 - C112520;
    const double C133890 = C133878 - C133856;
    const double C133885 = C133873 - C133836;
    const double C133884 = C133872 - C133832;
    const double C134193 = C134181 - C134162;
    const double C134192 = C134180 - C134158;
    const double C134189 = C134177 - C134146;
    const double C134184 = C134172 - C134126;
    const double C134494 = C134482 - C134460;
    const double C134486 = C134474 - C134428;
    const double C134719 = C134716 - C134706;
    const double C135263 = C135257 - C135244;
    const double C135262 = C135256 - C135240;
    const double C136039 = C136036 - C136026;
    const double C136350 = C136347 - C136337;
    const double C142629 = C142623 - C142610;
    const double C142628 = C142622 - C142606;
    const double C143549 = C143546 - C143536;
    const double C143927 = C143921 - C143905;
    const double C144205 = C144196 - C144177;
    const double C133868 = C133815 * C153;
    const double C133866 = C133815 * C152;
    const double C133848 = C133815 * C151;
    const double C133846 = C133815 * C150;
    const double C133844 = C133815 * C149;
    const double C133842 = C133815 * C148;
    const double C133824 = C133815 * C147;
    const double C133822 = C133815 * C146;
    const double C134170 = C133815 * C393;
    const double C134168 = C133815 * C392;
    const double C134150 = C133815 * C383;
    const double C134148 = C133815 * C382;
    const double C134138 = C133815 * C391;
    const double C134136 = C133815 * C390;
    const double C134134 = C133815 * C385;
    const double C134132 = C133815 * C384;
    const double C134472 = C133815 * C654;
    const double C134470 = C133815 * C653;
    const double C134452 = C133815 * C644;
    const double C134450 = C133815 * C643;
    const double C134440 = C133815 * C652;
    const double C134438 = C133815 * C651;
    const double C134436 = C133815 * C646;
    const double C134434 = C133815 * C645;
    const double C134714 = C133815 * C381;
    const double C134712 = C133815 * C380;
    const double C134929 = C133815 * C642;
    const double C134927 = C133815 * C641;
    const double C135252 = C133815 * C1238;
    const double C135250 = C133815 * C1237;
    const double C135232 = C133815 * C1236;
    const double C135230 = C133815 * C1235;
    const double C136034 = C133815 * C1536;
    const double C136032 = C133815 * C1535;
    const double C136345 = C133815 * C1726;
    const double C136343 = C133815 * C1725;
    const double C137408 = C133815 * C1718;
    const double C137406 = C133815 * C1717;
    const double C137623 = C133815 * C2676;
    const double C137621 = C133815 * C2675;
    const double C142618 = C133815 * C389;
    const double C142616 = C133815 * C388;
    const double C142598 = C133815 * C387;
    const double C142596 = C133815 * C386;
    const double C143544 = C133815 * C1234;
    const double C143542 = C133815 * C1233;
    const double C143917 = C133815 * C1540;
    const double C143915 = C133815 * C1539;
    const double C143897 = C133815 * C1538;
    const double C143895 = C133815 * C1537;
    const double C144189 = C133815 * C1730;
    const double C144187 = C133815 * C1729;
    const double C144169 = C133815 * C1728;
    const double C144167 = C133815 * C1727;
    const double C144157 = C133815 * C1720;
    const double C144155 = C133815 * C1719;
    const double C144906 = C133815 * C2270;
    const double C144904 = C133815 * C2269;
    const double C146163 = C133815 * C3214;
    const double C146161 = C133815 * C3213;
    const double C133864 = C133817 * C658;
    const double C133862 = C133817 * C657;
    const double C133852 = C133817 * C642;
    const double C133850 = C133817 * C641;
    const double C133840 = C133817 * C644;
    const double C133838 = C133817 * C643;
    const double C133828 = C133817 * C646;
    const double C133826 = C133817 * C645;
    const double C134166 = C133817 * C1724;
    const double C134164 = C133817 * C1723;
    const double C134154 = C133817 * C1238;
    const double C134152 = C133817 * C1237;
    const double C134142 = C133817 * C1726;
    const double C134140 = C133817 * C1725;
    const double C134130 = C133817 * C1236;
    const double C134128 = C133817 * C1235;
    const double C134468 = C133817 * C2674;
    const double C134466 = C133817 * C2673;
    const double C134456 = C133817 * C654;
    const double C134454 = C133817 * C653;
    const double C134444 = C133817 * C2676;
    const double C134442 = C133817 * C2675;
    const double C134432 = C133817 * C652;
    const double C134430 = C133817 * C651;
    const double C134710 = C133817 * C1240;
    const double C134708 = C133817 * C1239;
    const double C134925 = C133817 * C656;
    const double C134923 = C133817 * C655;
    const double C135248 = C133817 * C1716;
    const double C135246 = C133817 * C1715;
    const double C135236 = C133817 * C1718;
    const double C135234 = C133817 * C1717;
    const double C136030 = C133817 * C2272;
    const double C136028 = C133817 * C2271;
    const double C136341 = C133817 * C1732;
    const double C136339 = C133817 * C1731;
    const double C137404 = C133817 * C3216;
    const double C137402 = C133817 * C3215;
    const double C137619 = C133817 * C2682;
    const double C137617 = C133817 * C2681;
    const double C142614 = C133817 * C1728;
    const double C142612 = C133817 * C1727;
    const double C142602 = C133817 * C1234;
    const double C142600 = C133817 * C1233;
    const double C143540 = C133817 * C1720;
    const double C143538 = C133817 * C1719;
    const double C143913 = C133817 * C8190;
    const double C143911 = C133817 * C8189;
    const double C143901 = C133817 * C2270;
    const double C143899 = C133817 * C2269;
    const double C144185 = C133817 * C9517;
    const double C144183 = C133817 * C9516;
    const double C144173 = C133817 * C1730;
    const double C144171 = C133817 * C1729;
    const double C144161 = C133817 * C3214;
    const double C144159 = C133817 * C3213;
    const double C144902 = C133817 * C8186;
    const double C144900 = C133817 * C8185;
    const double C146159 = C133817 * C9519;
    const double C146157 = C133817 * C9518;
    const double C215 = C209 * C152696;
    const double C23422 = C209 * C152845;
    const double C51258 = C209 * C51243;
    const double C23889 = C23882 + C23883;
    const double C51725 = C51718 + C51719;
    const double C3078 = C3075 * C152696;
    const double C26875 = C3075 * C152845;
    const double C54708 = C3075 * C51243;
    const double C15489 = C15477 - C15446;
    const double C35458 = C35454 - C35446;
    const double C104365 = C104361 - C104353;
    const double C134491 = C134479 - C134448;
    const double C10044 = C10042 * C6339;
    const double C26876 = C10042 * C152747;
    const double C54709 = C10042 * C152747;
    const double C76765 = C10042 * C152911;
    const double C45226 = C45224 - C45218;
    const double C66780 = C66771 - C66743;
    const double C112942 = C112938 - C112930;
    const double C144202 = C144193 - C144165;
    const double C478 = C470 * C152696;
    const double C6352 = C470 * C6340;
    const double C7060 = C470 * C6339;
    const double C23655 = C470 * C152845;
    const double C23653 = C470 * C152747;
    const double C51491 = C470 * C51243;
    const double C51489 = C470 * C152747;
    const double C73323 = C470 * C73311;
    const double C73982 = C470 * C152911;
    const double C479 = C471 * C152696;
    const double C6354 = C471 * C6339;
    const double C23420 = C471 * C152747;
    const double C24086 = C471 * C152845;
    const double C51256 = C471 * C152747;
    const double C51922 = C471 * C51243;
    const double C73325 = C471 * C152911;
    const double C739 = C731 * C152696;
    const double C23887 = C731 * C152845;
    const double C51723 = C731 * C51243;
    const double C740 = C732 * C152696;
    const double C24283 = C732 * C152845;
    const double C52119 = C732 * C51243;
    const double C1282 = C1278 * C152696;
    const double C7257 = C1278 * C6339;
    const double C23885 = C1278 * C152747;
    const double C24579 = C1278 * C152845;
    const double C51721 = C1278 * C152747;
    const double C52415 = C1278 * C51243;
    const double C74179 = C1278 * C152911;
    const double C448 = C152711 * C413;
    const double C885 = C152711 * C414;
    const double C709 = C152711 * C674;
    const double C14859 = C14812 * C674;
    const double C32728 = C152775 * C674;
    const double C101635 = C152775 * C674;
    const double C133861 = C133814 * C674;
    const double C1029 = C152711 * C675;
    const double C31667 = C152775 * C675;
    const double C100574 = C152775 * C675;
    const double C1267 = C152711 * C1249;
    const double C32518 = C152775 * C1249;
    const double C101425 = C152775 * C1249;
    const double C2686 =
        (3 * (C150849 + C150718 * C151005 + C151001 * ae) +
         C150718 * (2 * C151005 + C150718 * C151121 + C151112 * ae) +
         (2 * C151001 + C150718 * C151112) * ae) /
        C150608;
    const double C2694 =
        (3 * (C150764 + ae * C151004 + be * C151005 + C150718 * C151115) +
         ae * (2 * C151004 + C150718 * C151120 + C151112 * be) +
         be * (2 * C151005 + C150718 * C151121 + C151112 * ae) +
         C150718 *
             (2 * C151115 + ae * C151120 + be * C151121 +
              C150718 *
                  (C150779 + ae * C151110 + be * C151113 +
                   C150718 *
                       (ae * C150912 + be * C150914 +
                        C150718 *
                            (2 * C150724 * C150775 +
                             C150724 * (C150775 + (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                      C150607 * C150736)))))) /
        C150616;
    const double C2685 =
        (3 * (C150848 + C150718 * C151004 + C151001 * be) +
         C150718 * (2 * C151004 + C150718 * C151120 + C151112 * be) +
         (2 * C151001 + C150718 * C151112) * be) /
        C150608;
    const double C151726 = C151724 + C151713;
    const double C151725 = C151723 + C151710;
    const double C151653 = C150718 * C151651;
    const double C151652 = C150718 * C151650;
    const double C151818 = C151816 + C151806;
    const double C151817 = C151815 + C151803;
    const double C61402 =
        (3 * (C151234 + C150718 * C151441 + C151437 * ae) +
         C150718 * (2 * C151441 + C150718 * C151885 + C151876 * ae) +
         (2 * C151437 + C150718 * C151876) * ae) /
        C150608;
    const double C61403 =
        (3 * (C151194 + ae * C151440 + be * C151441 + C150718 * C151879) +
         ae * (2 * C151440 + C150718 * C151884 + C151876 * be) +
         be * (2 * C151441 + C150718 * C151885 + C151876 * ae) +
         C150718 *
             (2 * C151879 + ae * C151884 + be * C151885 +
              C150718 *
                  (C151825 + ae * C151874 + be * C151877 +
                   C150718 *
                       (ae * C151847 + be * C151849 +
                        C150718 *
                            (2 * C150928 * C150775 +
                             C150928 * (C150775 + (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                      C150607 * C150940)))))) /
        C150616;
    const double C61401 =
        (3 * (C151232 + C150718 * C151440 + C151437 * be) +
         C150718 * (2 * C151440 + C150718 * C151884 + C151876 * be) +
         (2 * C151437 + C150718 * C151876) * be) /
        C150608;
    const double C152001 = C151999 + C151988;
    const double C152000 = C151998 + C151985;
    const double C151955 = C150718 * C151953;
    const double C151954 = C150718 * C151952;
    const double C152075 = C152025 + C152073;
    const double C152074 = C152015 + C152072;
    const double C18110 =
        (4 * (2 * C151021 + C150718 * C151075 + C151066 * ae) +
         C150718 * (3 * C151075 + C150718 * C151491 + C151481 * ae) +
         (3 * C151066 + C150718 * C151481) * ae) /
        C150608;
    const double C151593 = C151551 + C151591;
    const double C18852 =
        (4 * (2 * C151145 + C150718 * C151340 + C151331 * ae) +
         C150718 * (3 * C151340 + C150718 * C151772 + C151763 * ae) +
         (3 * C151331 + C150718 * C151763) * ae) /
        C150608;
    const double C204 = C198 - C191;
    const double C464 = C456 - C447;
    const double C887 = C886 - C884;
    const double C725 = C717 - C708;
    const double C14889 = C14877 - C14858;
    const double C32736 = C32734 - C32727;
    const double C101643 = C101641 - C101634;
    const double C133891 = C133879 - C133860;
    const double C1031 = C1030 - C1028;
    const double C31690 = C31680 - C31666;
    const double C100597 = C100587 - C100573;
    const double C1275 = C1271 - C1266;
    const double C32526 = C32524 - C32517;
    const double C101433 = C101431 - C101424;
    const double C2912 = C2909 + C2897;
    const double C3071 = C3068 - C3058;
    const double C15932 = C15929 - C15919;
    const double C32302 = C32290 - C32274;
    const double C101209 = C101197 - C101181;
    const double C134934 = C134931 - C134921;
    const double C1911 = C1908 * C152696;
    const double C7059 = C1908 * C6340;
    const double C23654 = C1908 * C152747;
    const double C51490 = C1908 * C152747;
    const double C73981 = C1908 * C73311;
    const double C2133 = C2130 * C152696;
    const double C7256 = C2130 * C6340;
    const double C24578 = C2130 * C152747;
    const double C52414 = C2130 * C152747;
    const double C74178 = C2130 * C73311;
    const double C6620 = C6618 * C6340;
    const double C25333 = C6618 * C152747;
    const double C53169 = C6618 * C152747;
    const double C73554 = C6618 * C73311;
    const double C6864 = C6862 * C6340;
    const double C26673 = C6862 * C152747;
    const double C54509 = C6862 * C152747;
    const double C73784 = C6862 * C73311;
    const double C7582 = C7580 * C6340;
    const double C25627 = C7580 * C152747;
    const double C53463 = C7580 * C152747;
    const double C74474 = C7580 * C73311;
    const double C15481 = C15460 - C15461;
    const double C35452 = C35436 - C35437;
    const double C104359 = C104343 - C104344;
    const double C134483 = C134462 - C134463;
    const double C26880 = C26879 + C26874;
    const double C7958 = C7955 + C7946;
    const double C8235 = C8230 + C8217;
    const double C8740 = C8739 + C8735;
    const double C10041 = C10039 + C10031;
    const double C18428 = C18416 - C18417;
    const double C44952 = C44944 - C44945;
    const double C127535 = C127527 - C127528;
    const double C137410 = C137398 - C137399;
    const double C18117 =
        (4 * (2 * C151069 + ae * C151074 + be * C151075 + C150718 * C151483) +
         ae * (3 * C151074 + C150718 * C151490 + C151481 * be) +
         be * (3 * C151075 + C150718 * C151491 + C151481 * ae) +
         C150718 *
             (3 * C151483 + ae * C151490 + be * C151491 +
              C150718 * (2 * C151473 + ae * C151484 + be * C151485 +
                         C150718 * (C150767 + ae * C151467 + be * C151470 +
                                    C150718 * (ae * C150887 + be * C150895 +
                                               C150718 * C151197))))) /
        C150616;
    const double C18109 =
        (4 * (2 * C151020 + C150718 * C151074 + C151066 * be) +
         C150718 * (3 * C151074 + C150718 * C151490 + C151481 * be) +
         (3 * C151066 + C150718 * C151481) * be) /
        C150608;
    const double C151647 = C151625 + C151643;
    const double C60403 = C60402 - C60400;
    const double C60560 = C60559 - C60557;
    const double C66506 = C66500 - C66487;
    const double C94729 = C94727 - C94721;
    const double C111666 = C111664 - C111658;
    const double C143928 = C143922 - C143909;
    const double C61025 = C61024 - C61022;
    const double C93802 = C93800 - C93794;
    const double C110664 = C110660 - C110652;
    const double C61868 = C61867 - C61865;
    const double C67489 = C67486 - C67476;
    const double C94036 = C94034 - C94028;
    const double C110936 = C110928 - C110916;
    const double C144911 = C144908 - C144898;
    const double C66775 = C66757 - C66758;
    const double C95977 = C95969 - C95970;
    const double C112936 = C112920 - C112921;
    const double C144197 = C144179 - C144180;
    const double C151592 = C151543 + C151590;
    const double C152029 = C152003 + C152004;
    const double C152067 = C150718 * C152061;
    const double C18855 =
        (4 * (2 * C151334 + ae * C151339 + be * C151340 + C150718 * C151761) +
         ae * (3 * C151339 + C150718 * C151771 + C151763 * be) +
         be * (3 * C151340 + C150718 * C151772 + C151763 * ae) +
         C150718 *
             (3 * C151761 + ae * C151771 + be * C151772 +
              C150718 *
                  (2 * C151749 + ae * C151765 + be * C151766 +
                   C150718 * (C151732 + ae * C151750 + be * C151753 +
                              C150718 * (ae * C151734 + be * C151738 +
                                         C150718 * C150928 * C150775))))) /
        C150616;
    const double C18851 =
        (4 * (2 * C151144 + C150718 * C151339 + C151331 * be) +
         C150718 * (3 * C151339 + C150718 * C151771 + C151763 * be) +
         (3 * C151331 + C150718 * C151763) * be) /
        C150608;
    const double C151946 = C151922 + C151940;
    const double C117462 =
        ((ae * -2 * C150659) / C150678 -
         (((C150606 * C150682) / C150616 + 2 * C150675) * be) / C150608) /
            C150660 +
        ((C150606 *
              (C150682 / C150678 -
               (((C150606 * C150685) / C150608 + 2 * C150671) * be) / C150608 -
               C150627 / C150618) +
          2 * (C150675 / C150660 -
               ((C150606 * C150671 + C152846) * be) / C150608 + C150672)) *
         ae) /
            C150608 +
        C150685 / C150618 - ((2 * C150672 - C150632 / C150618) * be) / C150608;
    const double C117464 =
        (C150682 / C150678 -
         (((C150606 * C150685) / C150608 + 2 * C150671) * be) / C150608 -
         C150627 / C150618) /
            C150660 +
        ((C150606 * (C150685 / C150618 -
                     ((2 * C150672 - C150632 / C150618) * be) / C150608) +
          2 * (C150671 / C150660 -
               ((C150606 * C150672 + C152775) * be) / C150608)) *
         ae) /
            C150608 +
        (-2 * C150627) / (C150608 * 4 * C150616);
    const double C117466 =
        (C150685 / C150618 -
         ((2 * C150672 - C150632 / C150618) * be) / C150608) /
            C150660 +
        ((2 * (C150672 / C150660 - (0 * be) / C150608) -
          C150632 / (C150608 * 4 * C150616)) *
         ae) /
            C150608;
    const double C133816 =
        C150682 / C150678 -
        (((C150606 * C150685) / C150608 + 2 * C150671) * be) / C150608 -
        C150627 / C150618;
    const double C133818 =
        C150685 / C150618 - ((2 * C150672 - C150632 / C150618) * be) / C150608;
    const double C14890 = C14878 - C14862;
    const double C14887 = C14875 - C14850;
    const double C14884 = C14872 - C14838;
    const double C14881 = C14869 - C14826;
    const double C15192 = C15180 - C15164;
    const double C15189 = C15177 - C15152;
    const double C15186 = C15174 - C15140;
    const double C15183 = C15171 - C15128;
    const double C15494 = C15482 - C15466;
    const double C15491 = C15479 - C15454;
    const double C15488 = C15476 - C15442;
    const double C15485 = C15473 - C15430;
    const double C15718 = C15715 - C15708;
    const double C15933 = C15930 - C15923;
    const double C16262 = C16256 - C16246;
    const double C16259 = C16253 - C16234;
    const double C17038 = C17035 - C17028;
    const double C17349 = C17346 - C17339;
    const double C18432 = C18429 - C18422;
    const double C18651 = C18648 - C18641;
    const double C65208 = C65202 - C65192;
    const double C65205 = C65199 - C65180;
    const double C66128 = C66125 - C66118;
    const double C66507 = C66501 - C66491;
    const double C66504 = C66498 - C66479;
    const double C66785 = C66776 - C66763;
    const double C66782 = C66773 - C66751;
    const double C66779 = C66770 - C66739;
    const double C67490 = C67487 - C67480;
    const double C68755 = C68752 - C68745;
    const double C31691 = C31681 - C31670;
    const double C31688 = C31678 - C31658;
    const double C31687 = C31677 - C31654;
    const double C31684 = C31674 - C31642;
    const double C31682 = C31672 - C31634;
    const double C31997 = C31985 - C31972;
    const double C31994 = C31982 - C31960;
    const double C31992 = C31980 - C31952;
    const double C31990 = C31978 - C31944;
    const double C31989 = C31977 - C31940;
    const double C31987 = C31975 - C31932;
    const double C32303 = C32291 - C32278;
    const double C32300 = C32288 - C32266;
    const double C32298 = C32286 - C32258;
    const double C32296 = C32284 - C32250;
    const double C32295 = C32283 - C32246;
    const double C32293 = C32281 - C32238;
    const double C32527 = C32525 - C32521;
    const double C32737 = C32735 - C32731;
    const double C33065 = C33059 - C33052;
    const double C33062 = C33056 - C33040;
    const double C33060 = C33054 - C33032;
    const double C33849 = C33845 - C33840;
    const double C33847 = C33843 - C33832;
    const double C34167 = C34163 - C34158;
    const double C34165 = C34161 - C34150;
    const double C35237 = C35233 - C35228;
    const double C35235 = C35231 - C35220;
    const double C35459 = C35455 - C35450;
    const double C35457 = C35453 - C35442;
    const double C40567 = C40563 - C40555;
    const double C40564 = C40560 - C40540;
    const double C41779 = C41777 - C41772;
    const double C42269 = C42263 - C42256;
    const double C42267 = C42261 - C42248;
    const double C42264 = C42258 - C42236;
    const double C42613 = C42605 - C42596;
    const double C42611 = C42603 - C42588;
    const double C42608 = C42600 - C42576;
    const double C42606 = C42598 - C42568;
    const double C43281 = C43279 - C43275;
    const double C43553 = C43551 - C43548;
    const double C44955 = C44953 - C44950;
    const double C45227 = C45225 - C45222;
    const double C93803 = C93801 - C93798;
    const double C94037 = C94035 - C94032;
    const double C94730 = C94728 - C94725;
    const double C95980 = C95978 - C95975;
    const double C100598 = C100588 - C100577;
    const double C100595 = C100585 - C100565;
    const double C100594 = C100584 - C100561;
    const double C100591 = C100581 - C100549;
    const double C100589 = C100579 - C100541;
    const double C100904 = C100892 - C100879;
    const double C100901 = C100889 - C100867;
    const double C100899 = C100887 - C100859;
    const double C100897 = C100885 - C100851;
    const double C100896 = C100884 - C100847;
    const double C100894 = C100882 - C100839;
    const double C101210 = C101198 - C101185;
    const double C101207 = C101195 - C101173;
    const double C101205 = C101193 - C101165;
    const double C101203 = C101191 - C101157;
    const double C101202 = C101190 - C101153;
    const double C101200 = C101188 - C101145;
    const double C101434 = C101432 - C101428;
    const double C101644 = C101642 - C101638;
    const double C101972 = C101966 - C101959;
    const double C101969 = C101963 - C101947;
    const double C101967 = C101961 - C101939;
    const double C102756 = C102752 - C102747;
    const double C102754 = C102750 - C102739;
    const double C103074 = C103070 - C103065;
    const double C103072 = C103068 - C103057;
    const double C104144 = C104140 - C104135;
    const double C104142 = C104138 - C104127;
    const double C104366 = C104362 - C104357;
    const double C104364 = C104360 - C104349;
    const double C109369 = C109363 - C109355;
    const double C109366 = C109360 - C109343;
    const double C109364 = C109358 - C109335;
    const double C110296 = C110292 - C110287;
    const double C110294 = C110290 - C110279;
    const double C110665 = C110661 - C110656;
    const double C110662 = C110658 - C110644;
    const double C110937 = C110929 - C110920;
    const double C110934 = C110926 - C110908;
    const double C110932 = C110924 - C110900;
    const double C110930 = C110922 - C110892;
    const double C111153 = C111151 - C111148;
    const double C111458 = C111456 - C111453;
    const double C111667 = C111665 - C111662;
    const double C112529 = C112527 - C112524;
    const double C112943 = C112939 - C112934;
    const double C112941 = C112937 - C112926;
    const double C127538 = C127536 - C127533;
    const double C14903 = C14891 + C14867;
    const double C14898 = C14886 + C14847;
    const double C14897 = C14885 + C14843;
    const double C14892 = C14880 + C14823;
    const double C15205 = C15193 + C15169;
    const double C15200 = C15188 + C15149;
    const double C15197 = C15185 + C15137;
    const double C15196 = C15184 + C15133;
    const double C15507 = C15495 + C15471;
    const double C15502 = C15490 + C15451;
    const double C15499 = C15487 + C15439;
    const double C15498 = C15486 + C15435;
    const double C15722 = C15719 + C15713;
    const double C15937 = C15934 + C15928;
    const double C16269 = C16263 + C16251;
    const double C16264 = C16258 + C16231;
    const double C17042 = C17039 + C17033;
    const double C17353 = C17350 + C17344;
    const double C18436 = C18433 + C18427;
    const double C18655 = C18652 + C18646;
    const double C65215 = C65209 + C65197;
    const double C65210 = C65204 + C65177;
    const double C66132 = C66129 + C66123;
    const double C66514 = C66508 + C66496;
    const double C66509 = C66503 + C66476;
    const double C66795 = C66786 + C66768;
    const double C66790 = C66781 + C66748;
    const double C66787 = C66778 + C66736;
    const double C67494 = C67491 + C67485;
    const double C68759 = C68756 + C68750;
    const double C14900 = C14888 + C14855;
    const double C14895 = C14883 + C14835;
    const double C14894 = C14882 + C14831;
    const double C15203 = C15191 + C15161;
    const double C15202 = C15190 + C15157;
    const double C15199 = C15187 + C15145;
    const double C15194 = C15182 + C15125;
    const double C15504 = C15492 + C15459;
    const double C15496 = C15484 + C15427;
    const double C15720 = C15717 + C15705;
    const double C16267 = C16261 + C16243;
    const double C16266 = C16260 + C16239;
    const double C17040 = C17037 + C17025;
    const double C17351 = C17348 + C17336;
    const double C65213 = C65207 + C65189;
    const double C65212 = C65206 + C65185;
    const double C66130 = C66127 + C66115;
    const double C66511 = C66505 + C66484;
    const double C66792 = C66783 + C66756;
    const double C31699 = C31689 + C31663;
    const double C31696 = C31686 + C31651;
    const double C31695 = C31685 + C31647;
    const double C31693 = C31683 + C31639;
    const double C32008 = C31996 + C31969;
    const double C32007 = C31995 + C31965;
    const double C32005 = C31993 + C31957;
    const double C32003 = C31991 + C31949;
    const double C32000 = C31988 + C31937;
    const double C31998 = C31986 + C31929;
    const double C32313 = C32301 + C32271;
    const double C32311 = C32299 + C32263;
    const double C32309 = C32297 + C32255;
    const double C32306 = C32294 + C32243;
    const double C32304 = C32292 + C32235;
    const double C33070 = C33064 + C33049;
    const double C33069 = C33063 + C33045;
    const double C33067 = C33061 + C33037;
    const double C33852 = C33848 + C33837;
    const double C33850 = C33846 + C33829;
    const double C34170 = C34166 + C34155;
    const double C34168 = C34164 + C34147;
    const double C35240 = C35236 + C35225;
    const double C35238 = C35234 + C35217;
    const double C40570 = C40566 + C40552;
    const double C40569 = C40565 + C40545;
    const double C41780 = C41778 + C41769;
    const double C42274 = C42268 + C42253;
    const double C42272 = C42266 + C42245;
    const double C42271 = C42265 + C42241;
    const double C42620 = C42612 + C42593;
    const double C42618 = C42610 + C42585;
    const double C42617 = C42609 + C42581;
    const double C42615 = C42607 + C42573;
    const double C43282 = C43280 + C43272;
    const double C43554 = C43552 + C43545;
    const double C100606 = C100596 + C100570;
    const double C100603 = C100593 + C100558;
    const double C100602 = C100592 + C100554;
    const double C100600 = C100590 + C100546;
    const double C100915 = C100903 + C100876;
    const double C100914 = C100902 + C100872;
    const double C100912 = C100900 + C100864;
    const double C100910 = C100898 + C100856;
    const double C100907 = C100895 + C100844;
    const double C100905 = C100893 + C100836;
    const double C101220 = C101208 + C101178;
    const double C101218 = C101206 + C101170;
    const double C101216 = C101204 + C101162;
    const double C101213 = C101201 + C101150;
    const double C101211 = C101199 + C101142;
    const double C101977 = C101971 + C101956;
    const double C101976 = C101970 + C101952;
    const double C101974 = C101968 + C101944;
    const double C102759 = C102755 + C102744;
    const double C102757 = C102753 + C102736;
    const double C103077 = C103073 + C103062;
    const double C103075 = C103071 + C103054;
    const double C104147 = C104143 + C104132;
    const double C104145 = C104141 + C104124;
    const double C109374 = C109368 + C109352;
    const double C109373 = C109367 + C109348;
    const double C109371 = C109365 + C109340;
    const double C110299 = C110295 + C110284;
    const double C110297 = C110293 + C110276;
    const double C110667 = C110663 + C110649;
    const double C110943 = C110935 + C110913;
    const double C110941 = C110933 + C110905;
    const double C110939 = C110931 + C110897;
    const double C111154 = C111152 + C111145;
    const double C111459 = C111457 + C111450;
    const double C112530 = C112528 + C112521;
    const double C133902 = C133890 + C133857;
    const double C133897 = C133885 + C133837;
    const double C133896 = C133884 + C133833;
    const double C134205 = C134193 + C134163;
    const double C134204 = C134192 + C134159;
    const double C134201 = C134189 + C134147;
    const double C134196 = C134184 + C134127;
    const double C134506 = C134494 + C134461;
    const double C134498 = C134486 + C134429;
    const double C134722 = C134719 + C134707;
    const double C135269 = C135263 + C135245;
    const double C135268 = C135262 + C135241;
    const double C136042 = C136039 + C136027;
    const double C136353 = C136350 + C136338;
    const double C142635 = C142629 + C142611;
    const double C142634 = C142628 + C142607;
    const double C143552 = C143549 + C143537;
    const double C143933 = C143927 + C143906;
    const double C144214 = C144205 + C144178;
    const double C15501 = C15489 + C15447;
    const double C35462 = C35458 + C35447;
    const double C104369 = C104365 + C104354;
    const double C134503 = C134491 + C134449;
    const double C45228 = C45226 + C45219;
    const double C66789 = C66780 + C66744;
    const double C112946 = C112942 + C112931;
    const double C144211 = C144202 + C144166;
    const double C24084 = C23652 + C23653;
    const double C51920 = C51488 + C51489;
    const double C23425 = C23419 + C23420;
    const double C51261 = C51255 + C51256;
    const double C24281 = C23884 + C23885;
    const double C52117 = C51720 + C51721;
    const double C18632 =
        (4 * (2 * C151013 + C150718 * C151098 + C151089 * ae) +
         C150718 * (3 * C151098 + C150718 * C151726 + C151716 * ae) +
         (3 * C151089 + C150718 * C151716) * ae) /
        C150608;
    const double C18633 =
        (4 * (2 * C151092 + ae * C151097 + be * C151098 + C150718 * C151718) +
         ae * (3 * C151097 + C150718 * C151725 + C151716 * be) +
         be * (3 * C151098 + C150718 * C151726 + C151716 * ae) +
         C150718 *
             (3 * C151718 + ae * C151725 + be * C151726 +
              C150718 *
                  (2 * C151708 + ae * C151719 + be * C151720 +
                   C150718 *
                       (C150777 + ae * C151702 + be * C151705 +
                        C150718 *
                            (ae * C150906 + be * C150908 +
                             C150718 * (C150775 + (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                      C150607 * C150736)))))) /
        C150616;
    const double C18631 =
        (4 * (2 * C151012 + C150718 * C151097 + C151089 * be) +
         C150718 * (3 * C151097 + C150718 * C151725 + C151716 * be) +
         (3 * C151089 + C150718 * C151716) * be) /
        C150608;
    const double C151655 = C151613 + C151653;
    const double C151654 = C151605 + C151652;
    const double C18854 =
        (4 * (2 * C151157 + C150718 * C151386 + C151377 * ae) +
         C150718 * (3 * C151386 + C150718 * C151818 + C151809 * ae) +
         (3 * C151377 + C150718 * C151809) * ae) /
        C150608;
    const double C18856 =
        (4 * (2 * C151380 + ae * C151385 + be * C151386 + C150718 * C151807) +
         ae * (3 * C151385 + C150718 * C151817 + C151809 * be) +
         be * (3 * C151386 + C150718 * C151818 + C151809 * ae) +
         C150718 *
             (3 * C151807 + ae * C151817 + be * C151818 +
              C150718 * (2 * C151795 + ae * C151811 + be * C151812 +
                         C150718 * (C151778 + ae * C151796 + be * C151799 +
                                    C150718 * (ae * C151780 + be * C151784 +
                                               C150718 * C150928 * C150724 *
                                                   (C150769 * C150770 +
                                                    C150721 * bs[9] *
                                                        std::pow(C150720, 9)) *
                                                   C150607))))) /
        C150616;
    const double C18853 =
        (4 * (2 * C151156 + C150718 * C151385 + C151377 * be) +
         C150718 * (3 * C151385 + C150718 * C151817 + C151809 * be) +
         (3 * C151377 + C150718 * C151809) * be) /
        C150608;
    const double C68736 =
        (4 * (2 * C151317 + C150718 * C151363 + C151354 * ae) +
         C150718 * (3 * C151363 + C150718 * C152001 + C151991 * ae) +
         (3 * C151354 + C150718 * C151991) * ae) /
        C150608;
    const double C68737 =
        (4 * (2 * C151357 + ae * C151362 + be * C151363 + C150718 * C151993) +
         ae * (3 * C151362 + C150718 * C152000 + C151991 * be) +
         be * (3 * C151363 + C150718 * C152001 + C151991 * ae) +
         C150718 *
             (3 * C151993 + ae * C152000 + be * C152001 +
              C150718 *
                  (2 * C151983 + ae * C151994 + be * C151995 +
                   C150718 *
                       (C151823 + ae * C151977 + be * C151980 +
                        C150718 *
                            (ae * C151841 + be * C151843 +
                             C150718 * (C150775 + (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                      C150607 * C150940)))))) /
        C150616;
    const double C68735 =
        (4 * (2 * C151316 + C150718 * C151362 + C151354 * be) +
         C150718 * (3 * C151362 + C150718 * C152000 + C151991 * be) +
         (3 * C151354 + C150718 * C151991) * be) /
        C150608;
    const double C151957 = C151909 + C151955;
    const double C151956 = C151903 + C151954;
    const double C152077 = C152075 + C152056;
    const double C152076 = C152074 + C152053;
    const double C18637 = C14817 * C18110;
    const double C137615 = C133819 * C18110;
    const double C151595 = C151593 + C151580;
    const double C68741 = C14817 * C18852;
    const double C146155 = C133819 * C18852;
    const double C210 = C204 + C192;
    const double C472 = C464 + C448;
    const double C888 = C887 + C885;
    const double C733 = C725 + C709;
    const double C14901 = C14889 + C14859;
    const double C32738 = C32736 + C32728;
    const double C101645 = C101643 + C101635;
    const double C133903 = C133891 + C133861;
    const double C1032 = C1031 + C1029;
    const double C31700 = C31690 + C31667;
    const double C100607 = C100597 + C100574;
    const double C1279 = C1275 + C1267;
    const double C32528 = C32526 + C32518;
    const double C101435 = C101433 + C101425;
    const double C2915 = C2912 * C152696;
    const double C23886 = C2912 * C152747;
    const double C51722 = C2912 * C152747;
    const double C3074 = C3071 + C3059;
    const double C15935 = C15932 + C15920;
    const double C32314 = C32302 + C32275;
    const double C101221 = C101209 + C101182;
    const double C134937 = C134934 + C134922;
    const double C15493 = C15481 - C15462;
    const double C35456 = C35452 - C35438;
    const double C104363 = C104359 - C104345;
    const double C134495 = C134483 - C134464;
    const double C26881 = C26880 * C152747;
    const double C54707 = C26880 * C152747;
    const double C8435 = C7958 * C6340;
    const double C75229 = C7958 * C73311;
    const double C9827 = C8235 * C6340;
    const double C76567 = C8235 * C73311;
    const double C8741 = C8740 * C6340;
    const double C75522 = C8740 * C73311;
    const double C10043 = C10041 * C6340;
    const double C76764 = C10041 * C73311;
    const double C18431 = C18428 - C18418;
    const double C44954 = C44952 - C44946;
    const double C127537 = C127535 - C127529;
    const double C137413 = C137410 - C137400;
    const double C18638 = C14812 * C18117;
    const double C137616 = C133814 * C18117;
    const double C18635 = C14817 * C18109;
    const double C137613 = C133819 * C18109;
    const double C60404 = C60403 + C60401;
    const double C60561 = C60560 + C60558;
    const double C66512 = C66506 + C66488;
    const double C94731 = C94729 + C94722;
    const double C111668 = C111666 + C111659;
    const double C143934 = C143928 + C143910;
    const double C61026 = C61025 + C61023;
    const double C93804 = C93802 + C93795;
    const double C110668 = C110664 + C110653;
    const double C61869 = C61868 + C61866;
    const double C67492 = C67489 + C67477;
    const double C94038 = C94036 + C94029;
    const double C110944 = C110936 + C110917;
    const double C144914 = C144911 + C144899;
    const double C66784 = C66775 - C66759;
    const double C95979 = C95977 - C95971;
    const double C112940 = C112936 - C112922;
    const double C144206 = C144197 - C144181;
    const double C151594 = C151592 + C151577;
    const double C152038 = C152029 + C152005;
    const double C68742 = C14812 * C18855;
    const double C146156 = C133814 * C18855;
    const double C68739 = C14817 * C18851;
    const double C146153 = C133819 * C18851;
    const double C133867 = C133816 * C140;
    const double C133847 = C133816 * C139;
    const double C133843 = C133816 * C138;
    const double C133823 = C133816 * C137;
    const double C134169 = C133816 * C374;
    const double C134149 = C133816 * C369;
    const double C134137 = C133816 * C373;
    const double C134133 = C133816 * C370;
    const double C134471 = C133816 * C635;
    const double C134451 = C133816 * C630;
    const double C134439 = C133816 * C634;
    const double C134435 = C133816 * C631;
    const double C134713 = C133816 * C368;
    const double C134928 = C133816 * C629;
    const double C135251 = C133816 * C1229;
    const double C135231 = C133816 * C1228;
    const double C136033 = C133816 * C1525;
    const double C136344 = C133816 * C1707;
    const double C137407 = C133816 * C1703;
    const double C137622 = C133816 * C2665;
    const double C142617 = C133816 * C372;
    const double C142597 = C133816 * C371;
    const double C143543 = C133816 * C1227;
    const double C143916 = C133816 * C1527;
    const double C143896 = C133816 * C1526;
    const double C144188 = C133816 * C1709;
    const double C144168 = C133816 * C1708;
    const double C144156 = C133816 * C1704;
    const double C144905 = C133816 * C2265;
    const double C146162 = C133816 * C3209;
    const double C133863 = C133818 * C637;
    const double C133851 = C133818 * C629;
    const double C133839 = C133818 * C630;
    const double C133827 = C133818 * C631;
    const double C134165 = C133818 * C1706;
    const double C134153 = C133818 * C1229;
    const double C134141 = C133818 * C1707;
    const double C134129 = C133818 * C1228;
    const double C134467 = C133818 * C2664;
    const double C134455 = C133818 * C635;
    const double C134443 = C133818 * C2665;
    const double C134431 = C133818 * C634;
    const double C134709 = C133818 * C1230;
    const double C134924 = C133818 * C636;
    const double C135247 = C133818 * C1702;
    const double C135235 = C133818 * C1703;
    const double C136029 = C133818 * C2266;
    const double C136340 = C133818 * C1710;
    const double C137403 = C133818 * C3210;
    const double C137618 = C133818 * C2668;
    const double C142613 = C133818 * C1708;
    const double C142601 = C133818 * C1227;
    const double C143539 = C133818 * C1704;
    const double C143912 = C133818 * C8180;
    const double C143900 = C133818 * C2265;
    const double C144184 = C133818 * C9509;
    const double C144172 = C133818 * C1709;
    const double C144160 = C133818 * C3209;
    const double C144901 = C133818 * C8178;
    const double C146158 = C133818 * C9510;
    const double C14902 = C14890 + C14863;
    const double C14899 = C14887 + C14851;
    const double C14896 = C14884 + C14839;
    const double C14893 = C14881 + C14827;
    const double C15204 = C15192 + C15165;
    const double C15201 = C15189 + C15153;
    const double C15198 = C15186 + C15141;
    const double C15195 = C15183 + C15129;
    const double C15506 = C15494 + C15467;
    const double C15503 = C15491 + C15455;
    const double C15500 = C15488 + C15443;
    const double C15497 = C15485 + C15431;
    const double C15721 = C15718 + C15709;
    const double C15936 = C15933 + C15924;
    const double C16268 = C16262 + C16247;
    const double C16265 = C16259 + C16235;
    const double C17041 = C17038 + C17029;
    const double C17352 = C17349 + C17340;
    const double C18435 = C18432 + C18423;
    const double C18654 = C18651 + C18642;
    const double C65214 = C65208 + C65193;
    const double C65211 = C65205 + C65181;
    const double C66131 = C66128 + C66119;
    const double C66513 = C66507 + C66492;
    const double C66510 = C66504 + C66480;
    const double C66794 = C66785 + C66764;
    const double C66791 = C66782 + C66752;
    const double C66788 = C66779 + C66740;
    const double C67493 = C67490 + C67481;
    const double C68758 = C68755 + C68746;
    const double C31701 = C31691 + C31671;
    const double C31698 = C31688 + C31659;
    const double C31697 = C31687 + C31655;
    const double C31694 = C31684 + C31643;
    const double C31692 = C31682 + C31635;
    const double C32009 = C31997 + C31973;
    const double C32006 = C31994 + C31961;
    const double C32004 = C31992 + C31953;
    const double C32002 = C31990 + C31945;
    const double C32001 = C31989 + C31941;
    const double C31999 = C31987 + C31933;
    const double C32315 = C32303 + C32279;
    const double C32312 = C32300 + C32267;
    const double C32310 = C32298 + C32259;
    const double C32308 = C32296 + C32251;
    const double C32307 = C32295 + C32247;
    const double C32305 = C32293 + C32239;
    const double C32529 = C32527 + C32522;
    const double C32739 = C32737 + C32732;
    const double C33071 = C33065 + C33053;
    const double C33068 = C33062 + C33041;
    const double C33066 = C33060 + C33033;
    const double C33853 = C33849 + C33841;
    const double C33851 = C33847 + C33833;
    const double C34171 = C34167 + C34159;
    const double C34169 = C34165 + C34151;
    const double C35241 = C35237 + C35229;
    const double C35239 = C35235 + C35221;
    const double C35463 = C35459 + C35451;
    const double C35461 = C35457 + C35443;
    const double C40571 = C40567 + C40556;
    const double C40568 = C40564 + C40541;
    const double C41781 = C41779 + C41773;
    const double C42275 = C42269 + C42257;
    const double C42273 = C42267 + C42249;
    const double C42270 = C42264 + C42237;
    const double C42621 = C42613 + C42597;
    const double C42619 = C42611 + C42589;
    const double C42616 = C42608 + C42577;
    const double C42614 = C42606 + C42569;
    const double C43283 = C43281 + C43276;
    const double C43555 = C43553 + C43549;
    const double C44957 = C44955 + C44951;
    const double C45229 = C45227 + C45223;
    const double C93805 = C93803 + C93799;
    const double C94039 = C94037 + C94033;
    const double C94732 = C94730 + C94726;
    const double C95982 = C95980 + C95976;
    const double C100608 = C100598 + C100578;
    const double C100605 = C100595 + C100566;
    const double C100604 = C100594 + C100562;
    const double C100601 = C100591 + C100550;
    const double C100599 = C100589 + C100542;
    const double C100916 = C100904 + C100880;
    const double C100913 = C100901 + C100868;
    const double C100911 = C100899 + C100860;
    const double C100909 = C100897 + C100852;
    const double C100908 = C100896 + C100848;
    const double C100906 = C100894 + C100840;
    const double C101222 = C101210 + C101186;
    const double C101219 = C101207 + C101174;
    const double C101217 = C101205 + C101166;
    const double C101215 = C101203 + C101158;
    const double C101214 = C101202 + C101154;
    const double C101212 = C101200 + C101146;
    const double C101436 = C101434 + C101429;
    const double C101646 = C101644 + C101639;
    const double C101978 = C101972 + C101960;
    const double C101975 = C101969 + C101948;
    const double C101973 = C101967 + C101940;
    const double C102760 = C102756 + C102748;
    const double C102758 = C102754 + C102740;
    const double C103078 = C103074 + C103066;
    const double C103076 = C103072 + C103058;
    const double C104148 = C104144 + C104136;
    const double C104146 = C104142 + C104128;
    const double C104370 = C104366 + C104358;
    const double C104368 = C104364 + C104350;
    const double C109375 = C109369 + C109356;
    const double C109372 = C109366 + C109344;
    const double C109370 = C109364 + C109336;
    const double C110300 = C110296 + C110288;
    const double C110298 = C110294 + C110280;
    const double C110669 = C110665 + C110657;
    const double C110666 = C110662 + C110645;
    const double C110945 = C110937 + C110921;
    const double C110942 = C110934 + C110909;
    const double C110940 = C110932 + C110901;
    const double C110938 = C110930 + C110893;
    const double C111155 = C111153 + C111149;
    const double C111460 = C111458 + C111454;
    const double C111669 = C111667 + C111663;
    const double C112531 = C112529 + C112525;
    const double C112947 = C112943 + C112935;
    const double C112945 = C112941 + C112927;
    const double C127540 = C127538 + C127534;
    const double C151657 = C151655 + C151642;
    const double C151656 = C151654 + C151639;
    const double C151959 = C151957 + C151945;
    const double C151958 = C151956 + C151942;
    const double C152079 = C150718 * C152077;
    const double C152078 = C150718 * C152076;
    const double C18114 =
        (5 * (3 * C151052 + C150718 * C151533 + C151523 * ae) +
         C150718 * (4 * C151533 + C150718 * C151595 + C151583 * ae) +
         (4 * C151523 + C150718 * C151583) * ae) /
        C150608;
    const double C216 = C210 * C152696;
    const double C480 = C472 * C152696;
    const double C6353 = C472 * C6340;
    const double C24085 = C472 * C152747;
    const double C51921 = C472 * C152747;
    const double C73324 = C472 * C73311;
    const double C889 = C888 * C152696;
    const double C23421 = C888 * C152747;
    const double C51257 = C888 * C152747;
    const double C741 = C733 * C152696;
    const double C1033 = C1032 * C152696;
    const double C1283 = C1279 * C152696;
    const double C24282 = C1279 * C152747;
    const double C52118 = C1279 * C152747;
    const double C3077 = C3074 * C152696;
    const double C15505 = C15493 + C15463;
    const double C35460 = C35456 + C35439;
    const double C104367 = C104363 + C104346;
    const double C134507 = C134495 + C134465;
    const double C18434 = C18431 + C18419;
    const double C44956 = C44954 + C44947;
    const double C127539 = C127537 + C127530;
    const double C137416 = C137413 + C137401;
    const double C18647 = C18635 - C18636;
    const double C137625 = C137613 - C137614;
    const double C66793 = C66784 + C66760;
    const double C95981 = C95979 + C95972;
    const double C112944 = C112940 + C112923;
    const double C144215 = C144206 + C144182;
    const double C18119 =
        (5 * (3 * C151525 + ae * C151532 + be * C151533 + C150718 * C151585) +
         ae * (4 * C151532 + C150718 * C151594 + C151583 * be) +
         be * (4 * C151533 + C150718 * C151595 + C151583 * ae) +
         C150718 *
             (4 * C151585 + ae * C151594 + be * C151595 +
              C150718 *
                  (3 * C151575 + ae * C151588 + be * C151589 +
                   C150718 *
                       (2 * C151565 + ae * C151576 + be * C151579 +
                        C150718 * (C150760 + ae * C151558 + be * C151561 +
                                   C150718 * (ae * C150862 + be * C150866 +
                                              C150718 * C150775)))))) /
        C150616;
    const double C18113 =
        (5 * (3 * C151051 + C150718 * C151532 + C151523 * be) +
         C150718 * (4 * C151532 + C150718 * C151594 + C151583 * be) +
         (4 * C151523 + C150718 * C151583) * be) /
        C150608;
    const double C152071 = C152038 + C152067;
    const double C68751 = C68739 - C68740;
    const double C146165 = C146153 - C146154;
    const double C133881 = C133866 - C133867;
    const double C133876 = C133846 - C133847;
    const double C133875 = C133842 - C133843;
    const double C133870 = C133822 - C133823;
    const double C134183 = C134168 - C134169;
    const double C134178 = C134148 - C134149;
    const double C134175 = C134136 - C134137;
    const double C134174 = C134132 - C134133;
    const double C134485 = C134470 - C134471;
    const double C134480 = C134450 - C134451;
    const double C134477 = C134438 - C134439;
    const double C134476 = C134434 - C134435;
    const double C134718 = C134712 - C134713;
    const double C134933 = C134927 - C134928;
    const double C135259 = C135250 - C135251;
    const double C135254 = C135230 - C135231;
    const double C136038 = C136032 - C136033;
    const double C136349 = C136343 - C136344;
    const double C137412 = C137406 - C137407;
    const double C137627 = C137621 - C137622;
    const double C142625 = C142616 - C142617;
    const double C142620 = C142596 - C142597;
    const double C143548 = C143542 - C143543;
    const double C143924 = C143915 - C143916;
    const double C143919 = C143895 - C143896;
    const double C144199 = C144187 - C144188;
    const double C144194 = C144167 - C144168;
    const double C144191 = C144155 - C144156;
    const double C144910 = C144904 - C144905;
    const double C146167 = C146161 - C146162;
    const double C133880 = C133862 - C133863;
    const double C133877 = C133850 - C133851;
    const double C133874 = C133838 - C133839;
    const double C133871 = C133826 - C133827;
    const double C134182 = C134164 - C134165;
    const double C134179 = C134152 - C134153;
    const double C134176 = C134140 - C134141;
    const double C134173 = C134128 - C134129;
    const double C134484 = C134466 - C134467;
    const double C134481 = C134454 - C134455;
    const double C134478 = C134442 - C134443;
    const double C134475 = C134430 - C134431;
    const double C134717 = C134708 - C134709;
    const double C134932 = C134923 - C134924;
    const double C135258 = C135246 - C135247;
    const double C135255 = C135234 - C135235;
    const double C136037 = C136028 - C136029;
    const double C136348 = C136339 - C136340;
    const double C137411 = C137402 - C137403;
    const double C137626 = C137617 - C137618;
    const double C142624 = C142612 - C142613;
    const double C142621 = C142600 - C142601;
    const double C143547 = C143538 - C143539;
    const double C143923 = C143911 - C143912;
    const double C143920 = C143899 - C143900;
    const double C144198 = C144183 - C144184;
    const double C144195 = C144171 - C144172;
    const double C144192 = C144159 - C144160;
    const double C144909 = C144900 - C144901;
    const double C146166 = C146157 - C146158;
    const double C31704 = C31698 + C31699;
    const double C31703 = C31696 + C31697;
    const double C31702 = C31694 + C31695;
    const double C32514 = C32006 + C32007;
    const double C41120 = C32007 + C32006;
    const double C32011 = C32004 + C32005;
    const double C40559 = C32005 + C32004;
    const double C40557 = C32002 + C32003;
    const double C40547 = C32003 + C32002;
    const double C40548 = C32000 + C32001;
    const double C40546 = C32001 + C32000;
    const double C32010 = C31998 + C31999;
    const double C40558 = C31999 + C31998;
    const double C32724 = C32312 + C32313;
    const double C32317 = C32310 + C32311;
    const double C32316 = C32304 + C32305;
    const double C33072 = C33068 + C33069;
    const double C41775 = C33069 + C33068;
    const double C41774 = C33066 + C33067;
    const double C41765 = C33067 + C33066;
    const double C42881 = C33852 + C33853;
    const double C42880 = C33853 + C33852;
    const double C43277 = C34170 + C34171;
    const double C43268 = C34171 + C34170;
    const double C44685 = C35240 + C35241;
    const double C44684 = C35241 + C35240;
    const double C92553 = C40571 + C40570;
    const double C93791 = C42275 + C42274;
    const double C93790 = C42271 + C42270;
    const double C94025 = C42621 + C42620;
    const double C94024 = C42617 + C42616;
    const double C94718 = C43555 + C43554;
    const double C100611 = C100605 + C100606;
    const double C100610 = C100603 + C100604;
    const double C100609 = C100601 + C100602;
    const double C101421 = C100913 + C100914;
    const double C123845 = C100914 + C100913;
    const double C100918 = C100911 + C100912;
    const double C123296 = C100912 + C100911;
    const double C109357 = C100910 + C100909;
    const double C123294 = C100909 + C100910;
    const double C123293 = C100907 + C100908;
    const double C123292 = C100908 + C100907;
    const double C100917 = C100905 + C100906;
    const double C123295 = C100906 + C100905;
    const double C101631 = C101219 + C101220;
    const double C101224 = C101217 + C101218;
    const double C101223 = C101211 + C101212;
    const double C101979 = C101975 + C101976;
    const double C124492 = C101976 + C101975;
    const double C124491 = C101973 + C101974;
    const double C124490 = C101974 + C101973;
    const double C111141 = C102760 + C102759;
    const double C125493 = C102759 + C102760;
    const double C111446 = C103078 + C103077;
    const double C125880 = C103077 + C103078;
    const double C127268 = C104147 + C104148;
    const double C127267 = C104148 + C104147;
    const double C110641 = C109374 + C109375;
    const double C109376 = C109372 + C109373;
    const double C110889 = C110297 + C110298;
    const double C110670 = C110666 + C110667;
    const double C111655 = C110942 + C110943;
    const double C110946 = C110940 + C110941;
    const double C18116 =
        (5 * (3 * C151075 + C150718 * C151491 + C151481 * ae) +
         C150718 * (4 * C151491 + C150718 * C151657 + C151645 * ae) +
         (4 * C151481 + C150718 * C151645) * ae) /
        C150608;
    const double C18120 =
        (5 * (3 * C151483 + ae * C151490 + be * C151491 + C150718 * C151647) +
         ae * (4 * C151490 + C150718 * C151656 + C151645 * be) +
         be * (4 * C151491 + C150718 * C151657 + C151645 * ae) +
         C150718 *
             (4 * C151647 + ae * C151656 + be * C151657 +
              C150718 *
                  (3 * C151637 + ae * C151650 + be * C151651 +
                   C150718 *
                       (2 * C151627 + ae * C151638 + be * C151641 +
                        C150718 * (C151197 + ae * C151620 + be * C151623 +
                                   C150718 * (ae * C151268 + be * C151274 +
                                              C150718 * C150724 *
                                                  (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                  C150607)))))) /
        C150616;
    const double C18115 =
        (5 * (3 * C151074 + C150718 * C151490 + C151481 * be) +
         C150718 * (4 * C151490 + C150718 * C151656 + C151645 * be) +
         (4 * C151481 + C150718 * C151645) * be) /
        C150608;
    const double C68054 =
        (5 * (3 * C151340 + C150718 * C151772 + C151763 * ae) +
         C150718 * (4 * C151772 + C150718 * C151959 + C151948 * ae) +
         (4 * C151763 + C150718 * C151948) * ae) /
        C150608;
    const double C68055 =
        (5 * (3 * C151761 + ae * C151771 + be * C151772 + C150718 * C151946) +
         ae * (4 * C151771 + C150718 * C151958 + C151948 * be) +
         be * (4 * C151772 + C150718 * C151959 + C151948 * ae) +
         C150718 *
             (4 * C151946 + ae * C151958 + be * C151959 +
              C150718 *
                  (3 * C151936 + ae * C151952 + be * C151953 +
                   C150718 *
                       (2 * C151924 + ae * C151941 + be * C151944 +
                        C150718 * (C151902 + ae * C151925 + be * C151928 +
                                   C150718 * (ae * C151905 + be * C151911 +
                                              C150718 * C150928 *
                                                  (C150769 * C150770 +
                                                   C150721 * bs[9] *
                                                       std::pow(C150720, 9)) *
                                                  C150607)))))) /
        C150616;
    const double C68053 =
        (5 * (3 * C151339 + C150718 * C151771 + C151763 * be) +
         C150718 * (4 * C151771 + C150718 * C151958 + C151948 * be) +
         (4 * C151763 + C150718 * C151948) * be) /
        C150608;
    const double C152081 = C152024 + C152079;
    const double C152080 = C152014 + C152078;
    const double C18650 = C18647 - C18637;
    const double C137628 = C137625 - C137615;
    const double C68754 = C68751 - C68741;
    const double C146168 = C146165 - C146155;
    const double C133893 = C133881 - C133868;
    const double C133888 = C133876 - C133848;
    const double C133887 = C133875 - C133844;
    const double C133882 = C133870 - C133824;
    const double C134195 = C134183 - C134170;
    const double C134190 = C134178 - C134150;
    const double C134187 = C134175 - C134138;
    const double C134186 = C134174 - C134134;
    const double C134497 = C134485 - C134472;
    const double C134492 = C134480 - C134452;
    const double C134489 = C134477 - C134440;
    const double C134488 = C134476 - C134436;
    const double C134721 = C134718 - C134714;
    const double C134936 = C134933 - C134929;
    const double C135265 = C135259 - C135252;
    const double C135260 = C135254 - C135232;
    const double C136041 = C136038 - C136034;
    const double C136352 = C136349 - C136345;
    const double C137415 = C137412 - C137408;
    const double C137630 = C137627 - C137623;
    const double C142631 = C142625 - C142618;
    const double C142626 = C142620 - C142598;
    const double C143551 = C143548 - C143544;
    const double C143930 = C143924 - C143917;
    const double C143925 = C143919 - C143897;
    const double C144208 = C144199 - C144189;
    const double C144203 = C144194 - C144169;
    const double C144200 = C144191 - C144157;
    const double C144913 = C144910 - C144906;
    const double C146170 = C146167 - C146163;
    const double C133892 = C133880 - C133864;
    const double C133889 = C133877 - C133852;
    const double C133886 = C133874 - C133840;
    const double C133883 = C133871 - C133828;
    const double C134194 = C134182 - C134166;
    const double C134191 = C134179 - C134154;
    const double C134188 = C134176 - C134142;
    const double C134185 = C134173 - C134130;
    const double C134496 = C134484 - C134468;
    const double C134493 = C134481 - C134456;
    const double C134490 = C134478 - C134444;
    const double C134487 = C134475 - C134432;
    const double C134720 = C134717 - C134710;
    const double C134935 = C134932 - C134925;
    const double C135264 = C135258 - C135248;
    const double C135261 = C135255 - C135236;
    const double C136040 = C136037 - C136030;
    const double C136351 = C136348 - C136341;
    const double C137414 = C137411 - C137404;
    const double C137629 = C137626 - C137619;
    const double C142630 = C142624 - C142614;
    const double C142627 = C142621 - C142602;
    const double C143550 = C143547 - C143540;
    const double C143929 = C143923 - C143913;
    const double C143926 = C143920 - C143901;
    const double C144207 = C144198 - C144185;
    const double C144204 = C144195 - C144173;
    const double C144201 = C144192 - C144161;
    const double C144912 = C144909 - C144902;
    const double C146169 = C146166 - C146159;
    const double C31707 = C31704 * C152696;
    const double C31706 = C31703 * C152696;
    const double C31705 = C31702 * C152696;
    const double C32523 = C32514 * C152696;
    const double C32013 = C32011 * C152696;
    const double C32012 = C32010 * C152696;
    const double C32733 = C32724 * C152696;
    const double C32319 = C32317 * C152696;
    const double C32318 = C32316 * C152696;
    const double C33073 = C33072 * C152696;
    const double C100614 = C100611 * C152696;
    const double C100613 = C100610 * C152696;
    const double C100612 = C100609 * C152696;
    const double C101430 = C101421 * C152696;
    const double C100920 = C100918 * C152696;
    const double C100919 = C100917 * C152696;
    const double C101640 = C101631 * C152696;
    const double C101226 = C101224 * C152696;
    const double C101225 = C101223 * C152696;
    const double C101980 = C101979 * C152696;
    const double C152083 = C152081 + C152066;
    const double C152082 = C152080 + C152063;
    const double C18653 = C18650 + C18638;
    const double C137631 = C137628 + C137616;
    const double C68757 = C68754 + C68742;
    const double C146171 = C146168 + C146156;
    const double C133905 = C133893 + C133869;
    const double C133900 = C133888 + C133849;
    const double C133899 = C133887 + C133845;
    const double C133894 = C133882 + C133825;
    const double C134207 = C134195 + C134171;
    const double C134202 = C134190 + C134151;
    const double C134199 = C134187 + C134139;
    const double C134198 = C134186 + C134135;
    const double C134509 = C134497 + C134473;
    const double C134504 = C134492 + C134453;
    const double C134501 = C134489 + C134441;
    const double C134500 = C134488 + C134437;
    const double C134724 = C134721 + C134715;
    const double C134939 = C134936 + C134930;
    const double C135271 = C135265 + C135253;
    const double C135266 = C135260 + C135233;
    const double C136044 = C136041 + C136035;
    const double C136355 = C136352 + C136346;
    const double C137418 = C137415 + C137409;
    const double C137633 = C137630 + C137624;
    const double C142637 = C142631 + C142619;
    const double C142632 = C142626 + C142599;
    const double C143554 = C143551 + C143545;
    const double C143936 = C143930 + C143918;
    const double C143931 = C143925 + C143898;
    const double C144217 = C144208 + C144190;
    const double C144212 = C144203 + C144170;
    const double C144209 = C144200 + C144158;
    const double C144916 = C144913 + C144907;
    const double C146173 = C146170 + C146164;
    const double C133904 = C133892 + C133865;
    const double C133901 = C133889 + C133853;
    const double C133898 = C133886 + C133841;
    const double C133895 = C133883 + C133829;
    const double C134206 = C134194 + C134167;
    const double C134203 = C134191 + C134155;
    const double C134200 = C134188 + C134143;
    const double C134197 = C134185 + C134131;
    const double C134508 = C134496 + C134469;
    const double C134505 = C134493 + C134457;
    const double C134502 = C134490 + C134445;
    const double C134499 = C134487 + C134433;
    const double C134723 = C134720 + C134711;
    const double C134938 = C134935 + C134926;
    const double C135270 = C135264 + C135249;
    const double C135267 = C135261 + C135237;
    const double C136043 = C136040 + C136031;
    const double C136354 = C136351 + C136342;
    const double C137417 = C137414 + C137405;
    const double C137632 = C137629 + C137620;
    const double C142636 = C142630 + C142615;
    const double C142633 = C142627 + C142603;
    const double C143553 = C143550 + C143541;
    const double C143935 = C143929 + C143914;
    const double C143932 = C143926 + C143902;
    const double C144216 = C144207 + C144186;
    const double C144213 = C144204 + C144174;
    const double C144210 = C144201 + C144162;
    const double C144915 = C144912 + C144903;
    const double C146172 = C146169 + C146160;
    const double C119419 =
        (6 * (4 * C151533 + C150718 * C151595 + C151583 * ae) +
         C150718 * (5 * C151595 + C150718 * C152083 + C152069 * ae) +
         (5 * C151583 + C150718 * C152069) * ae) /
        C150608;
    const double C119420 =
        (6 * (4 * C151585 + ae * C151594 + be * C151595 + C150718 * C152071) +
         ae * (5 * C151594 + C150718 * C152082 + C152069 * be) +
         be * (5 * C151595 + C150718 * C152083 + C152069 * ae) +
         C150718 *
             (5 * C152071 + ae * C152082 + be * C152083 +
              C150718 *
                  (4 * C152061 + ae * C152076 + be * C152077 +
                   C150718 *
                       (3 * C152051 + ae * C152068 + be * C152070 +
                        C150718 *
                            (2 * C152041 + ae * C152052 + be * C152055 +
                             C150718 *
                                 (C150775 + ae * C152033 + be * C152036 +
                                  C150718 * (ae * C150898 + be * C150902 +
                                             C150718 *
                                                 (C150769 * C150770 +
                                                  C150721 * bs[9] *
                                                      std::pow(C150720, 9)) *
                                                 C150607))))))) /
        C150616;
    const double C119418 =
        (6 * (4 * C151532 + C150718 * C151594 + C151583 * be) +
         C150718 * (5 * C151594 + C150718 * C152082 + C152069 * be) +
         (5 * C151583 + C150718 * C152069) * be) /
        C150608;
    d2ee[0] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152530 * C152571 -
           (C23656 * C23411 + (C23646 + C23647) * C152894 +
            (C6615 * C152747 + C6614 * C152845) * C152893) *
               C152530 * C152578 +
           ((C6615 * C152845 + C6616 * C152747) * C152893 +
            (C23648 + C23649) * C152894 + C23657 * C23411) *
               C152530 * C3839) *
              C152489 +
          (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
            C24084 * C23411) *
               C152530 * C152578 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C152530 * C152571 -
           ((C23654 + C23655) * C23411 + (C23651 + C23650) * C152894 +
            (C23649 + C23648) * C152893) *
               C152530 * C3839) *
              C152498 +
          ((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
               C152530 * C152571 -
           ((C24085 + C24086) * C23411 + (C23653 + C23652) * C152894 +
            C23656 * C152893) *
               C152530 * C152578 +
           (C23657 * C152893 + (C23655 + C23654) * C152894 +
            (C472 * C152845 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C152747) *
                C23411) *
               C152530 * C3839) *
              C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152845 +
              C6614 * C152747) *
                 C152893 +
             (C23413 + C23414) * C152894 + C23423 * C23411) *
                C152829 -
            (C23888 * C23411 + (C23878 + C23879) * C152894 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152845) *
                 C152893) *
                C152617) *
               C152571 +
           (((C7578 * C152845 + C7577 * C152747) * C152893 +
             (C24574 + C24575) * C152894 + C24580 * C23411) *
                C152617 -
            (C23656 * C23411 + (C23646 + C23647) * C152894 +
             (C6615 * C152747 + C6614 * C152845) * C152893) *
                C152829) *
               C152578 +
           (((C6615 * C152845 + C6616 * C152747) * C152893 +
             (C23648 + C23649) * C152894 + C23657 * C23411) *
                C152829 -
            ((C25627 + C25628) * C23411 + (C25629 + C25630) * C152894 +
             (C8234 * C152747 + C7577 * C152845) * C152893) *
                C152617) *
               C3839) *
              C3495 +
          ((((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
             C24281 * C23411) *
                C152617 -
            (C23424 * C23411 + (C23416 + C23415) * C152894 +
             (C23414 + C23413) * C152893) *
                C152829) *
               C152571 +
           (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
             C24084 * C23411) *
                C152829 -
            ((C24578 + C24579) * C23411 + (C24577 + C24576) * C152894 +
             (C24575 + C24574) * C152893) *
                C152617) *
               C152578 +
           (((C25630 + C25629) * C152893 + (C25628 + C25627) * C152894 +
             (C2130 * C152845 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C152747) *
                 C23411) *
                C152617 -
            ((C23654 + C23655) * C23411 + (C23651 + C23650) * C152894 +
             (C23649 + C23648) * C152893) *
                C152829) *
               C3839) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152530 * C152924 -
           (C23656 * C23411 + (C23646 + C23647) * C152894 +
            (C6615 * C152747 + C6614 * C152845) * C152893) *
               C152530 * C152920 +
           ((C6615 * C152845 + C6616 * C152747) * C152893 +
            (C23648 + C23649) * C152894 + C23657 * C23411) *
               C152530 * C152906 -
           ((C25333 + C25334) * C23411 + (C25335 + C25336) * C152894 +
            (C7957 * C152747 + C6616 * C152845) * C152893) *
               C152530 * C152880) *
              C3495 +
          (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
            C24084 * C23411) *
               C152530 * C152920 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C152530 * C152924 -
           ((C23654 + C23655) * C23411 + (C23651 + C23650) * C152894 +
            (C23649 + C23648) * C152893) *
               C152530 * C152906 +
           ((C25336 + C25335) * C152893 + (C25334 + C25333) * C152894 +
            (C1908 * C152845 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C152747) *
                C23411) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152530 * C3355 -
           (C23656 * C23411 + (C23646 + C23647) * C152894 +
            (C6615 * C152747 + C6614 * C152845) * C152893) *
               C152530 * C152575) *
              C152923 +
          (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
            C24084 * C23411) *
               C152530 * C152575 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C152530 * C3355) *
              C152916 +
          ((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
               C152530 * C3355 -
           ((C24085 + C24086) * C23411 + (C23653 + C23652) * C152894 +
            C23656 * C152893) *
               C152530 * C152575) *
              C152899 +
          ((C24084 * C152893 + (C24086 + C24085) * C152894 +
            (C888 * C152845 +
             (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                 C152747) *
                C23411) *
               C152530 * C152575 -
           ((C23421 + C23422) * C23411 + (C23420 + C23419) * C152894 +
            C23424 * C152893) *
               C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152845 +
              C6614 * C152747) *
                 C152893 +
             (C23413 + C23414) * C152894 + C23423 * C23411) *
                C152918 -
            (C23888 * C23411 + (C23878 + C23879) * C152894 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152845) *
                 C152893) *
                C152903 +
            (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                  C152845 +
              C8232 * C152747) *
                 C152893 +
             (C23880 + C23881) * C152894 + C23889 * C23411) *
                C152873) *
               C3355 +
           (((C7578 * C152845 + C7577 * C152747) * C152893 +
             (C24574 + C24575) * C152894 + C24580 * C23411) *
                C152903 -
            (C23656 * C23411 + (C23646 + C23647) * C152894 +
             (C6615 * C152747 + C6614 * C152845) * C152893) *
                C152918 -
            ((C26673 + C26674) * C23411 + (C26675 + C26676) * C152894 +
             (C8233 * C152747 + C8232 * C152845) * C152893) *
                C152873) *
               C152575) *
              C3495 +
          ((((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
             C24281 * C23411) *
                C152903 -
            (C23424 * C23411 + (C23416 + C23415) * C152894 +
             (C23414 + C23413) * C152893) *
                C152918 -
            ((C23886 + C23887) * C23411 + (C23883 + C23882) * C152894 +
             (C23881 + C23880) * C152893) *
                C152873) *
               C3355 +
           (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
             C24084 * C23411) *
                C152918 -
            ((C24578 + C24579) * C23411 + (C24577 + C24576) * C152894 +
             (C24575 + C24574) * C152893) *
                C152903 +
            ((C26676 + C26675) * C152893 + (C26674 + C26673) * C152894 +
             (C2912 * C152845 +
              (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                  C152747) *
                 C23411) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152845 +
              C6614 * C152747) *
                 C152893 +
             (C23413 + C23414) * C152894 + C23423 * C23411) *
                C152829 -
            (C23888 * C23411 + (C23878 + C23879) * C152894 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152845) *
                 C152893) *
                C152617) *
               C3355 +
           (((C7578 * C152845 + C7577 * C152747) * C152893 +
             (C24574 + C24575) * C152894 + C24580 * C23411) *
                C152617 -
            (C23656 * C23411 + (C23646 + C23647) * C152894 +
             (C6615 * C152747 + C6614 * C152845) * C152893) *
                C152829) *
               C152575) *
              C152489 +
          ((((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
             C24281 * C23411) *
                C152617 -
            (C23424 * C23411 + (C23416 + C23415) * C152894 +
             (C23414 + C23413) * C152893) *
                C152829) *
               C3355 +
           (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
             C24084 * C23411) *
                C152829 -
            ((C24578 + C24579) * C23411 + (C24577 + C24576) * C152894 +
             (C24575 + C24574) * C152893) *
                C152617) *
               C152575) *
              C152498 +
          (((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
                C152829 -
            ((C24282 + C24283) * C23411 + (C23885 + C23884) * C152894 +
             C23888 * C152893) *
                C152617) *
               C3355 +
           ((C24580 * C152893 + (C24579 + C24578) * C152894 +
             (C1279 * C152845 +
              (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                  C152747) *
                 C23411) *
                C152617 -
            ((C24085 + C24086) * C23411 + (C23653 + C23652) * C152894 +
             C23656 * C152893) *
                C152829) *
               C152575) *
              C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152530 * C3355 -
           (C23656 * C23411 + (C23646 + C23647) * C152894 +
            (C6615 * C152747 + C6614 * C152845) * C152893) *
               C152530 * C152575) *
              C152923 +
          (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
            C24084 * C23411) *
               C152530 * C152575 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C152530 * C3355) *
              C152916 +
          ((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
               C152530 * C3355 -
           ((C24085 + C24086) * C23411 + (C23653 + C23652) * C152894 +
            C23656 * C152893) *
               C152530 * C152575) *
              C152899 +
          ((C24084 * C152893 + (C24086 + C24085) * C152894 +
            (C888 * C152845 +
             (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                 C152747) *
                C23411) *
               C152530 * C152575 -
           ((C23421 + C23422) * C23411 + (C23420 + C23419) * C152894 +
            C23424 * C152893) *
               C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152530 * C152924 -
           (C23656 * C23411 + (C23646 + C23647) * C152894 +
            (C6615 * C152747 + C6614 * C152845) * C152893) *
               C152530 * C152920 +
           ((C6615 * C152845 + C6616 * C152747) * C152893 +
            (C23648 + C23649) * C152894 + C23657 * C23411) *
               C152530 * C152906 -
           ((C25333 + C25334) * C23411 + (C25335 + C25336) * C152894 +
            (C7957 * C152747 + C6616 * C152845) * C152893) *
               C152530 * C152880) *
              C3495 +
          (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
            C24084 * C23411) *
               C152530 * C152920 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C152530 * C152924 -
           ((C23654 + C23655) * C23411 + (C23651 + C23650) * C152894 +
            (C23649 + C23648) * C152893) *
               C152530 * C152906 +
           ((C25336 + C25335) * C152893 + (C25334 + C25333) * C152894 +
            (C1908 * C152845 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C152747) *
                C23411) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152845 +
              C6614 * C152747) *
                 C152893 +
             (C23413 + C23414) * C152894 + C23423 * C23411) *
                C4361 -
            (C23888 * C23411 + (C23878 + C23879) * C152894 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152845) *
                 C152893) *
                C152617) *
               C152571 +
           (((C7578 * C152845 + C7577 * C152747) * C152893 +
             (C24574 + C24575) * C152894 + C24580 * C23411) *
                C152617 -
            (C23656 * C23411 + (C23646 + C23647) * C152894 +
             (C6615 * C152747 + C6614 * C152845) * C152893) *
                C4361) *
               C152578 +
           (((C6615 * C152845 + C6616 * C152747) * C152893 +
             (C23648 + C23649) * C152894 + C23657 * C23411) *
                C4361 -
            ((C25627 + C25628) * C23411 + (C25629 + C25630) * C152894 +
             (C8234 * C152747 + C7577 * C152845) * C152893) *
                C152617) *
               C3839) *
              C152814 +
          ((((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
             C24281 * C23411) *
                C152617 -
            (C23424 * C23411 + (C23416 + C23415) * C152894 +
             (C23414 + C23413) * C152893) *
                C4361) *
               C152571 +
           (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
             C24084 * C23411) *
                C4361 -
            ((C24578 + C24579) * C23411 + (C24577 + C24576) * C152894 +
             (C24575 + C24574) * C152893) *
                C152617) *
               C152578 +
           (((C25630 + C25629) * C152893 + (C25628 + C25627) * C152894 +
             (C2130 * C152845 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C152747) *
                 C23411) *
                C152617 -
            ((C23654 + C23655) * C23411 + (C23651 + C23650) * C152894 +
             (C23649 + C23648) * C152893) *
                C4361) *
               C3839) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                        C152845 +
                    C6614 * C152747) *
                       C152893 +
                   (C23413 + C23414) * C152894 + C23423 * C23411) *
                      C152613 -
                  (C23888 * C23411 + (C23878 + C23879) * C152894 +
                   (C7578 * C152747 +
                    (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                        C152845) *
                       C152893) *
                      C152620 +
                  (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                        C152845 +
                    C8232 * C152747) *
                       C152893 +
                   (C23880 + C23881) * C152894 + C23889 * C23411) *
                      C5033) *
                     C152571 +
                 (((C7578 * C152845 + C7577 * C152747) * C152893 +
                   (C24574 + C24575) * C152894 + C24580 * C23411) *
                      C152620 -
                  (C23656 * C23411 + (C23646 + C23647) * C152894 +
                   (C6615 * C152747 + C6614 * C152845) * C152893) *
                      C152613 -
                  ((C26673 + C26674) * C23411 + (C26675 + C26676) * C152894 +
                   (C8233 * C152747 + C8232 * C152845) * C152893) *
                      C5033) *
                     C152578 +
                 (((C6615 * C152845 + C6616 * C152747) * C152893 +
                   (C23648 + C23649) * C152894 + C23657 * C23411) *
                      C152613 -
                  ((C25627 + C25628) * C23411 + (C25629 + C25630) * C152894 +
                   (C8234 * C152747 + C7577 * C152845) * C152893) *
                      C152620 +
                  ((C8233 * C152845 + C8236 * C152747) * C152893 +
                   (C6861 * C152845 + C8235 * C152747) * C152894 +
                   (C6862 * C152845 + (C134 * C9823 - C135 * C9822 -
                                       C134 * C9824 + C152711 * C9825) *
                                          C152747) *
                       C23411) *
                      C5033) *
                     C3839) *
                C152484) /
               (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C4361 -
           (C23888 * C23411 + (C23878 + C23879) * C152894 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152845) *
                C152893) *
               C152617) *
              C152924 +
          (((C7578 * C152845 + C7577 * C152747) * C152893 +
            (C24574 + C24575) * C152894 + C24580 * C23411) *
               C152617 -
           (C23656 * C23411 + (C23646 + C23647) * C152894 +
            (C6615 * C152747 + C6614 * C152845) * C152893) *
               C4361) *
              C152920 +
          (((C6615 * C152845 + C6616 * C152747) * C152893 +
            (C23648 + C23649) * C152894 + C23657 * C23411) *
               C4361 -
           ((C25627 + C25628) * C23411 + (C25629 + C25630) * C152894 +
            (C8234 * C152747 + C7577 * C152845) * C152893) *
               C152617) *
              C152906 +
          (((C8234 * C152845 + C8950 * C152747) * C152893 +
            (C7579 * C152845 + C8740 * C152747) * C152894 +
            (C7580 * C152845 +
             (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                 C152747) *
                C23411) *
               C152617 -
           ((C25333 + C25334) * C23411 + (C25335 + C25336) * C152894 +
            (C7957 * C152747 + C6616 * C152845) * C152893) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152845 +
              C6614 * C152747) *
                 C152893 +
             (C23413 + C23414) * C152894 + C23423 * C23411) *
                C4361 -
            (C23888 * C23411 + (C23878 + C23879) * C152894 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152845) *
                 C152893) *
                C152617) *
               C3355 +
           (((C7578 * C152845 + C7577 * C152747) * C152893 +
             (C24574 + C24575) * C152894 + C24580 * C23411) *
                C152617 -
            (C23656 * C23411 + (C23646 + C23647) * C152894 +
             (C6615 * C152747 + C6614 * C152845) * C152893) *
                C4361) *
               C152575) *
              C152914 +
          ((((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
             C24281 * C23411) *
                C152617 -
            (C23424 * C23411 + (C23416 + C23415) * C152894 +
             (C23414 + C23413) * C152893) *
                C4361) *
               C3355 +
           (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
             C24084 * C23411) *
                C4361 -
            ((C24578 + C24579) * C23411 + (C24577 + C24576) * C152894 +
             (C24575 + C24574) * C152893) *
                C152617) *
               C152575) *
              C152897 +
          (((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
                C4361 -
            ((C24282 + C24283) * C23411 + (C23885 + C23884) * C152894 +
             C23888 * C152893) *
                C152617) *
               C3355 +
           ((C24580 * C152893 + (C24579 + C24578) * C152894 +
             (C1279 * C152845 +
              (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                  C152747) *
                 C23411) *
                C152617 -
            ((C24085 + C24086) * C23411 + (C23653 + C23652) * C152894 +
             C23656 * C152893) *
                C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152925 -
           (C23888 * C23411 + (C23878 + C23879) * C152894 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152845) *
                C152893) *
               C152922 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152845 +
             C8232 * C152747) *
                C152893 +
            (C23880 + C23881) * C152894 + C23889 * C23411) *
               C152909 -
           ((C26881 + C26875) * C23411 + (C26876 + C26877) * C152894 +
            (C10260 * C152747 +
             (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                 C152845) *
                C152893) *
               C152886) *
              C3355 +
          (((C7578 * C152845 + C7577 * C152747) * C152893 +
            (C24574 + C24575) * C152894 + C24580 * C23411) *
               C152922 -
           (C23656 * C23411 + (C23646 + C23647) * C152894 +
            (C6615 * C152747 + C6614 * C152845) * C152893) *
               C152925 -
           ((C26673 + C26674) * C23411 + (C26675 + C26676) * C152894 +
            (C8233 * C152747 + C8232 * C152845) * C152893) *
               C152909 +
           ((C10260 * C152845 + C10259 * C152747) * C152893 +
            (C10042 * C152845 + C10041 * C152747) * C152894 +
            (C26880 * C152845 + (C134 * C10024 - C135 * C10023 - C134 * C10025 +
                                 C152711 * C10026) *
                                    C152747) *
                C23411) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152845 +
              C6614 * C152747) *
                 C152893 +
             (C23413 + C23414) * C152894 + C23423 * C23411) *
                C152613 -
            (C23888 * C23411 + (C23878 + C23879) * C152894 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152845) *
                 C152893) *
                C152620 +
            (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                  C152845 +
              C8232 * C152747) *
                 C152893 +
             (C23880 + C23881) * C152894 + C23889 * C23411) *
                C5033) *
               C3355 +
           (((C7578 * C152845 + C7577 * C152747) * C152893 +
             (C24574 + C24575) * C152894 + C24580 * C23411) *
                C152620 -
            (C23656 * C23411 + (C23646 + C23647) * C152894 +
             (C6615 * C152747 + C6614 * C152845) * C152893) *
                C152613 -
            ((C26673 + C26674) * C23411 + (C26675 + C26676) * C152894 +
             (C8233 * C152747 + C8232 * C152845) * C152893) *
                C5033) *
               C152575) *
              C152814 +
          ((((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
             C24281 * C23411) *
                C152620 -
            (C23424 * C23411 + (C23416 + C23415) * C152894 +
             (C23414 + C23413) * C152893) *
                C152613 -
            ((C23886 + C23887) * C23411 + (C23883 + C23882) * C152894 +
             (C23881 + C23880) * C152893) *
                C5033) *
               C3355 +
           (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
             C24084 * C23411) *
                C152613 -
            ((C24578 + C24579) * C23411 + (C24577 + C24576) * C152894 +
             (C24575 + C24574) * C152893) *
                C152620 +
            ((C26676 + C26675) * C152893 + (C26674 + C26673) * C152894 +
             (C2912 * C152845 +
              (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                  C152747) *
                 C23411) *
                C5033) *
               C152575) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152845 +
              C6614 * C152747) *
                 C152893 +
             (C23413 + C23414) * C152894 + C23423 * C23411) *
                C4361 -
            (C23888 * C23411 + (C23878 + C23879) * C152894 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152845) *
                 C152893) *
                C152617) *
               C3355 +
           (((C7578 * C152845 + C7577 * C152747) * C152893 +
             (C24574 + C24575) * C152894 + C24580 * C23411) *
                C152617 -
            (C23656 * C23411 + (C23646 + C23647) * C152894 +
             (C6615 * C152747 + C6614 * C152845) * C152893) *
                C4361) *
               C152575) *
              C152914 +
          ((((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
             C24281 * C23411) *
                C152617 -
            (C23424 * C23411 + (C23416 + C23415) * C152894 +
             (C23414 + C23413) * C152893) *
                C4361) *
               C3355 +
           (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
             C24084 * C23411) *
                C4361 -
            ((C24578 + C24579) * C23411 + (C24577 + C24576) * C152894 +
             (C24575 + C24574) * C152893) *
                C152617) *
               C152575) *
              C152897 +
          (((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
                C4361 -
            ((C24282 + C24283) * C23411 + (C23885 + C23884) * C152894 +
             C23888 * C152893) *
                C152617) *
               C3355 +
           ((C24580 * C152893 + (C24579 + C24578) * C152894 +
             (C1279 * C152845 +
              (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                  C152747) *
                 C23411) *
                C152617 -
            ((C24085 + C24086) * C23411 + (C23653 + C23652) * C152894 +
             C23656 * C152893) *
                C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C4361 -
           (C23888 * C23411 + (C23878 + C23879) * C152894 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152845) *
                C152893) *
               C152617) *
              C152924 +
          (((C7578 * C152845 + C7577 * C152747) * C152893 +
            (C24574 + C24575) * C152894 + C24580 * C23411) *
               C152617 -
           (C23656 * C23411 + (C23646 + C23647) * C152894 +
            (C6615 * C152747 + C6614 * C152845) * C152893) *
               C4361) *
              C152920 +
          (((C6615 * C152845 + C6616 * C152747) * C152893 +
            (C23648 + C23649) * C152894 + C23657 * C23411) *
               C4361 -
           ((C25627 + C25628) * C23411 + (C25629 + C25630) * C152894 +
            (C8234 * C152747 + C7577 * C152845) * C152893) *
               C152617) *
              C152906 +
          (((C8234 * C152845 + C8950 * C152747) * C152893 +
            (C7579 * C152845 + C8740 * C152747) * C152894 +
            (C7580 * C152845 +
             (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                 C152747) *
                C23411) *
               C152617 -
           ((C25333 + C25334) * C23411 + (C25335 + C25336) * C152894 +
            (C7957 * C152747 + C6616 * C152845) * C152893) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152530 * C1879 -
           (C23656 * C23411 + (C23646 + C23647) * C152894 +
            (C6615 * C152747 + C6614 * C152845) * C152893) *
               C152530 * C1880 +
           ((C6615 * C152845 + C6616 * C152747) * C152893 +
            (C23648 + C23649) * C152894 + C23657 * C23411) *
               C152530 * C1881 -
           ((C25333 + C25334) * C23411 + (C25335 + C25336) * C152894 +
            (C7957 * C152747 + C6616 * C152845) * C152893) *
               C152530 * C152880) *
              C152814 +
          (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
            C24084 * C23411) *
               C152530 * C1880 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C152530 * C1879 -
           ((C23654 + C23655) * C23411 + (C23651 + C23650) * C152894 +
            (C23649 + C23648) * C152893) *
               C152530 * C1881 +
           ((C25336 + C25335) * C152893 + (C25334 + C25333) * C152894 +
            (C1908 * C152845 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C152747) *
                C23411) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152530 * C152828 -
           (C23656 * C23411 + (C23646 + C23647) * C152894 +
            (C6615 * C152747 + C6614 * C152845) * C152893) *
               C152530 * C152575) *
              C873 +
          (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
            C24084 * C23411) *
               C152530 * C152575 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C152530 * C152828) *
              C874 +
          ((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
               C152530 * C152828 -
           ((C24085 + C24086) * C23411 + (C23653 + C23652) * C152894 +
            C23656 * C152893) *
               C152530 * C152575) *
              C875 +
          ((C24084 * C152893 + (C24086 + C24085) * C152894 +
            (C888 * C152845 +
             (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                 C152747) *
                C23411) *
               C152530 * C152575 -
           ((C23421 + C23422) * C23411 + (C23420 + C23419) * C152894 +
            C23424 * C152893) *
               C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152845 +
              C6614 * C152747) *
                 C152893 +
             (C23413 + C23414) * C152894 + C23423 * C23411) *
                C2427 -
            (C23888 * C23411 + (C23878 + C23879) * C152894 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152845) *
                 C152893) *
                C2428 +
            (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                  C152845 +
              C8232 * C152747) *
                 C152893 +
             (C23880 + C23881) * C152894 + C23889 * C23411) *
                C152873) *
               C152828 +
           (((C7578 * C152845 + C7577 * C152747) * C152893 +
             (C24574 + C24575) * C152894 + C24580 * C23411) *
                C2428 -
            (C23656 * C23411 + (C23646 + C23647) * C152894 +
             (C6615 * C152747 + C6614 * C152845) * C152893) *
                C2427 -
            ((C26673 + C26674) * C23411 + (C26675 + C26676) * C152894 +
             (C8233 * C152747 + C8232 * C152845) * C152893) *
                C152873) *
               C152575) *
              C152814 +
          ((((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
             C24281 * C23411) *
                C2428 -
            (C23424 * C23411 + (C23416 + C23415) * C152894 +
             (C23414 + C23413) * C152893) *
                C2427 -
            ((C23886 + C23887) * C23411 + (C23883 + C23882) * C152894 +
             (C23881 + C23880) * C152893) *
                C152873) *
               C152828 +
           (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
             C24084 * C23411) *
                C2427 -
            ((C24578 + C24579) * C23411 + (C24577 + C24576) * C152894 +
             (C24575 + C24574) * C152893) *
                C2428 +
            ((C26676 + C26675) * C152893 + (C26674 + C26673) * C152894 +
             (C2912 * C152845 +
              (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                  C152747) *
                 C23411) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152829 -
           (C23888 * C23411 + (C23878 + C23879) * C152894 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152845) *
                C152893) *
               C152617) *
              C1879 +
          (((C7578 * C152845 + C7577 * C152747) * C152893 +
            (C24574 + C24575) * C152894 + C24580 * C23411) *
               C152617 -
           (C23656 * C23411 + (C23646 + C23647) * C152894 +
            (C6615 * C152747 + C6614 * C152845) * C152893) *
               C152829) *
              C1880 +
          (((C6615 * C152845 + C6616 * C152747) * C152893 +
            (C23648 + C23649) * C152894 + C23657 * C23411) *
               C152829 -
           ((C25627 + C25628) * C23411 + (C25629 + C25630) * C152894 +
            (C8234 * C152747 + C7577 * C152845) * C152893) *
               C152617) *
              C1881 +
          (((C8234 * C152845 + C8950 * C152747) * C152893 +
            (C7579 * C152845 + C8740 * C152747) * C152894 +
            (C7580 * C152845 +
             (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                 C152747) *
                C23411) *
               C152617 -
           ((C25333 + C25334) * C23411 + (C25335 + C25336) * C152894 +
            (C7957 * C152747 + C6616 * C152845) * C152893) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152845 +
              C6614 * C152747) *
                 C152893 +
             (C23413 + C23414) * C152894 + C23423 * C23411) *
                C152829 -
            (C23888 * C23411 + (C23878 + C23879) * C152894 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152845) *
                 C152893) *
                C152617) *
               C152828 +
           (((C7578 * C152845 + C7577 * C152747) * C152893 +
             (C24574 + C24575) * C152894 + C24580 * C23411) *
                C152617 -
            (C23656 * C23411 + (C23646 + C23647) * C152894 +
             (C6615 * C152747 + C6614 * C152845) * C152893) *
                C152829) *
               C152575) *
              C365 +
          ((((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
             C24281 * C23411) *
                C152617 -
            (C23424 * C23411 + (C23416 + C23415) * C152894 +
             (C23414 + C23413) * C152893) *
                C152829) *
               C152828 +
           (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
             C24084 * C23411) *
                C152829 -
            ((C24578 + C24579) * C23411 + (C24577 + C24576) * C152894 +
             (C24575 + C24574) * C152893) *
                C152617) *
               C152575) *
              C366 +
          (((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
                C152829 -
            ((C24282 + C24283) * C23411 + (C23885 + C23884) * C152894 +
             C23888 * C152893) *
                C152617) *
               C152828 +
           ((C24580 * C152893 + (C24579 + C24578) * C152894 +
             (C1279 * C152845 +
              (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                  C152747) *
                 C23411) *
                C152617 -
            ((C24085 + C24086) * C23411 + (C23653 + C23652) * C152894 +
             C23656 * C152893) *
                C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C3047 -
           (C23888 * C23411 + (C23878 + C23879) * C152894 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152845) *
                C152893) *
               C3048 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152845 +
             C8232 * C152747) *
                C152893 +
            (C23880 + C23881) * C152894 + C23889 * C23411) *
               C3049 -
           ((C26881 + C26875) * C23411 + (C26876 + C26877) * C152894 +
            (C10260 * C152747 +
             (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                 C152845) *
                C152893) *
               C152886) *
              C152828 +
          (((C7578 * C152845 + C7577 * C152747) * C152893 +
            (C24574 + C24575) * C152894 + C24580 * C23411) *
               C3048 -
           (C23656 * C23411 + (C23646 + C23647) * C152894 +
            (C6615 * C152747 + C6614 * C152845) * C152893) *
               C3047 -
           ((C26673 + C26674) * C23411 + (C26675 + C26676) * C152894 +
            (C8233 * C152747 + C8232 * C152845) * C152893) *
               C3049 +
           ((C10260 * C152845 + C10259 * C152747) * C152893 +
            (C10042 * C152845 + C10041 * C152747) * C152894 +
            (C26880 * C152845 + (C134 * C10024 - C135 * C10023 - C134 * C10025 +
                                 C152711 * C10026) *
                                    C152747) *
                C23411) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                    C152845 +
                C6614 * C152747) *
                   C152893 +
               (C23413 + C23414) * C152894 + C23423 * C23411) *
                  C152530 * C152512 * C129 -
              (C23424 * C23411 + (C23416 + C23415) * C152894 +
               (C23414 + C23413) * C152893) *
                  C152530 * C152512 * C130 +
              (C23423 * C152893 + (C23418 + C23417) * C152894 +
               C23425 * C23411) *
                  C152530 * C152512 * C131 -
              ((C23421 + C23422) * C23411 + (C23420 + C23419) * C152894 +
               C23424 * C152893) *
                  C152530 * C152512 * C132 +
              (C23425 * C152893 + (C23422 + C23421) * C152894 +
               (C210 * C152845 +
                (C134 * C878 - C135 * C877 - C134 * C879 + C152711 * C880) *
                    C152747) *
                   C23411) *
                  C152530 * C152512 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                     C152845 +
                 C6614 * C152747) *
                    C152893 +
                (C23413 + C23414) * C152894 + C23423 * C23411) *
                   C152530 * C152917 -
               (C23656 * C23411 + (C23646 + C23647) * C152894 +
                (C6615 * C152747 + C6614 * C152845) * C152893) *
                   C152530 * C152901 +
               ((C6615 * C152845 + C6616 * C152747) * C152893 +
                (C23648 + C23649) * C152894 + C23657 * C23411) *
                   C152530 * C152870) *
                  C365 +
              (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
                (C23652 + C23653) * C23411) *
                   C152530 * C152901 -
               (C23424 * C23411 + (C23416 + C23415) * C152894 +
                (C23414 + C23413) * C152893) *
                   C152530 * C152917 -
               ((C23654 + C23655) * C23411 + (C23651 + C23650) * C152894 +
                (C23649 + C23648) * C152893) *
                   C152530 * C152870) *
                  C366 +
              ((C23423 * C152893 + (C23418 + C23417) * C152894 +
                C23425 * C23411) *
                   C152530 * C152917 -
               ((C472 * C152747 + C471 * C152845) * C23411 +
                (C23653 + C23652) * C152894 + C23656 * C152893) *
                   C152530 * C152901 +
               (C23657 * C152893 + (C23655 + C23654) * C152894 +
                (C472 * C152845 + (C134 * C1886 - C135 * C1885 - C134 * C1887 +
                                   C152711 * C1888) *
                                      C152747) *
                    C23411) *
                   C152530 * C152870) *
                  C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152918 -
           (C23888 * C23411 + (C23878 + C23879) * C152894 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152845) *
                C152893) *
               C152903 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152845 +
             C8232 * C152747) *
                C152893 +
            (C23880 + C23881) * C152894 + C23889 * C23411) *
               C152873) *
              C152512 * C365 +
          (((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
            (C23884 + C23885) * C23411) *
               C152903 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C152918 -
           ((C23886 + C23887) * C23411 + (C23883 + C23882) * C152894 +
            (C23881 + C23880) * C152893) *
               C152873) *
              C152512 * C366 +
          ((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
               C152918 -
           ((C1279 * C152747 + C732 * C152845) * C23411 +
            (C23885 + C23884) * C152894 + C23888 * C152893) *
               C152903 +
           (C23889 * C152893 + (C23887 + C23886) * C152894 +
            (C733 * C152845 +
             (C134 * C2890 - C135 * C2889 - C134 * C2891 + C152711 * C2892) *
                 C152747) *
                C23411) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152530 * C1429 -
           (C23656 * C23411 + (C23646 + C23647) * C152894 +
            (C6615 * C152747 + C6614 * C152845) * C152893) *
               C152530 * C1430 +
           ((C6615 * C152845 + C6616 * C152747) * C152893 +
            (C23648 + C23649) * C152894 + C23657 * C23411) *
               C152530 * C152870) *
              C152914 +
          (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
            C24084 * C23411) *
               C152530 * C1430 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C152530 * C1429 -
           ((C23654 + C23655) * C23411 + (C23651 + C23650) * C152894 +
            (C23649 + C23648) * C152893) *
               C152530 * C152870) *
              C152897 +
          ((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
               C152530 * C1429 -
           ((C24085 + C24086) * C23411 + (C23653 + C23652) * C152894 +
            C23656 * C152893) *
               C152530 * C1430 +
           (C23657 * C152893 + (C23655 + C23654) * C152894 +
            (C472 * C152845 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C152747) *
                C23411) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152845 +
            C6614 * C152747) *
               C152893 +
           (C23413 + C23414) * C152894 + C23423 * C23411) *
              C152530 * C1517 -
          (C23656 * C23411 + (C23646 + C23647) * C152894 +
           (C6615 * C152747 + C6614 * C152845) * C152893) *
              C152530 * C1518 +
          ((C6615 * C152845 + C6616 * C152747) * C152893 +
           (C23648 + C23649) * C152894 + C23657 * C23411) *
              C152530 * C1519 -
          ((C6618 * C152747 + C1909 * C152845) * C23411 +
           (C6617 * C152747 + C1910 * C152845) * C152894 +
           (C7957 * C152747 + C6616 * C152845) * C152893) *
              C152530 * C1520 +
          ((C7957 * C152845 + C7959 * C152747) * C152893 +
           (C6617 * C152845 + C7958 * C152747) * C152894 +
           (C6618 * C152845 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C152747) *
               C23411) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152918 -
           (C23888 * C23411 + (C23878 + C23879) * C152894 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152845) *
                C152893) *
               C152903 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152845 +
             C8232 * C152747) *
                C152893 +
            (C23880 + C23881) * C152894 + C23889 * C23411) *
               C152873) *
              C1429 +
          (((C7578 * C152845 + C7577 * C152747) * C152893 +
            (C24574 + C24575) * C152894 + C24580 * C23411) *
               C152903 -
           (C23656 * C23411 + (C23646 + C23647) * C152894 +
            (C6615 * C152747 + C6614 * C152845) * C152893) *
               C152918 -
           ((C6862 * C152747 + C2913 * C152845) * C23411 +
            (C6861 * C152747 + C2914 * C152845) * C152894 +
            (C8233 * C152747 + C8232 * C152845) * C152893) *
               C152873) *
              C1430 +
          (((C6615 * C152845 + C6616 * C152747) * C152893 +
            (C23648 + C23649) * C152894 + C23657 * C23411) *
               C152918 -
           ((C7580 * C152747 + C2131 * C152845) * C23411 +
            (C7579 * C152747 + C2132 * C152845) * C152894 +
            (C8234 * C152747 + C7577 * C152845) * C152893) *
               C152903 +
           ((C8233 * C152845 + C8236 * C152747) * C152893 +
            (C6861 * C152845 + C8235 * C152747) * C152894 +
            (C6862 * C152845 +
             (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                 C152747) *
                C23411) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C2427 -
           (C23888 * C23411 + (C23878 + C23879) * C152894 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152845) *
                C152893) *
               C2428 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152845 +
             C8232 * C152747) *
                C152893 +
            (C23880 + C23881) * C152894 + C23889 * C23411) *
               C152873) *
              C152512 * C152914 +
          (((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
            C24281 * C23411) *
               C2428 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C2427 -
           ((C23886 + C23887) * C23411 + (C23883 + C23882) * C152894 +
            (C23881 + C23880) * C152893) *
               C152873) *
              C152512 * C152897 +
          ((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
               C2427 -
           ((C24282 + C24283) * C23411 + (C23885 + C23884) * C152894 +
            C23888 * C152893) *
               C2428 +
           (C23889 * C152893 + (C23887 + C23886) * C152894 +
            (C733 * C152845 +
             (C134 * C2890 - C135 * C2889 - C134 * C2891 + C152711 * C2892) *
                 C152747) *
                C23411) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C2427 -
           (C23888 * C23411 + (C23878 + C23879) * C152894 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152845) *
                C152893) *
               C2428 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152845 +
             C8232 * C152747) *
                C152893 +
            (C23880 + C23881) * C152894 + C23889 * C23411) *
               C152873) *
              C152917 +
          (((C7578 * C152845 + C7577 * C152747) * C152893 +
            (C24574 + C24575) * C152894 + C24580 * C23411) *
               C2428 -
           (C23656 * C23411 + (C23646 + C23647) * C152894 +
            (C6615 * C152747 + C6614 * C152845) * C152893) *
               C2427 -
           ((C6862 * C152747 + C2913 * C152845) * C23411 +
            (C6861 * C152747 + C2914 * C152845) * C152894 +
            (C8233 * C152747 + C8232 * C152845) * C152893) *
               C152873) *
              C152901 +
          (((C6615 * C152845 + C6616 * C152747) * C152893 +
            (C23648 + C23649) * C152894 + C23657 * C23411) *
               C2427 -
           ((C25627 + C25628) * C23411 + (C25629 + C25630) * C152894 +
            (C8234 * C152747 + C7577 * C152845) * C152893) *
               C2428 +
           ((C8233 * C152845 + C8236 * C152747) * C152893 +
            (C6861 * C152845 + C8235 * C152747) * C152894 +
            (C6862 * C152845 +
             (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                 C152747) *
                C23411) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152845 +
            C6614 * C152747) *
               C152893 +
           (C23413 + C23414) * C152894 + C23423 * C23411) *
              C2658 -
          (C23888 * C23411 + (C23878 + C23879) * C152894 +
           (C7578 * C152747 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152845) *
               C152893) *
              C2659 +
          (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C152845 +
            C8232 * C152747) *
               C152893 +
           (C23880 + C23881) * C152894 + C23889 * C23411) *
              C2660 -
          (((C134 * C3217 - C135 * C3211 - C134 * C3218 + C152711 * C3223) *
                C152747 +
            C3075 * C152845) *
               C23411 +
           (C10042 * C152747 + C3076 * C152845) * C152894 +
           (C10260 * C152747 +
            (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                C152845) *
               C152893) *
              C2661 +
          (((C134 * C2679 - C135 * C2667 - C134 * C2680 + C152711 * C2691) *
                C152845 +
            (C134 * C9518 - C135 * C9510 - C134 * C9519 + C152711 * C9528) *
                C152747) *
               C152893 +
           ((C134 * C2681 - C135 * C2668 - C134 * C2682 + C152711 * C2692) *
                C152845 +
            (C134 * C9522 - C135 * C9512 - C134 * C9523 + C152711 * C9530) *
                C152747) *
               C152894 +
           ((C134 * C2683 - C135 * C2669 - C134 * C2684 + C152711 * C2693) *
                C152845 +
            (C134 * C18412 - C135 * C18411 - C134 * C18413 + C152711 * C18414) *
                C152747) *
               C23411) *
              C2662) *
         C152512 * C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152845 +
              C6614 * C152747) *
                 C152893 +
             (C23413 + C23414) * C152894 + C23423 * C23411) *
                C152829 -
            (C23888 * C23411 + (C23878 + C23879) * C152894 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152845) *
                 C152893) *
                C152617) *
               C1429 +
           (((C7578 * C152845 + C7577 * C152747) * C152893 +
             (C24574 + C24575) * C152894 + C24580 * C23411) *
                C152617 -
            (C23656 * C23411 + (C23646 + C23647) * C152894 +
             (C6615 * C152747 + C6614 * C152845) * C152893) *
                C152829) *
               C1430 +
           (((C6615 * C152845 + C6616 * C152747) * C152893 +
             (C23648 + C23649) * C152894 + C23657 * C23411) *
                C152829 -
            ((C25627 + C25628) * C23411 + (C25629 + C25630) * C152894 +
             (C8234 * C152747 + C7577 * C152845) * C152893) *
                C152617) *
               C152870) *
              C152814 +
          ((((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
             C24281 * C23411) *
                C152617 -
            (C23424 * C23411 + (C23416 + C23415) * C152894 +
             (C23414 + C23413) * C152893) *
                C152829) *
               C1429 +
           (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
             C24084 * C23411) *
                C152829 -
            ((C24578 + C24579) * C23411 + (C24577 + C24576) * C152894 +
             (C24575 + C24574) * C152893) *
                C152617) *
               C1430 +
           (((C25630 + C25629) * C152893 + (C25628 + C25627) * C152894 +
             (C2130 * C152845 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C152747) *
                 C23411) *
                C152617 -
            ((C23654 + C23655) * C23411 + (C23651 + C23650) * C152894 +
             (C23649 + C23648) * C152893) *
                C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152829 -
           (C23888 * C23411 + (C23878 + C23879) * C152894 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152845) *
                C152893) *
               C152617) *
              C152512 * C873 +
          (((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
            C24281 * C23411) *
               C152617 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C152829) *
              C152512 * C874 +
          ((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
               C152829 -
           ((C24282 + C24283) * C23411 + (C23885 + C23884) * C152894 +
            C23888 * C152893) *
               C152617) *
              C152512 * C875 +
          ((C24281 * C152893 + (C24283 + C24282) * C152894 +
            (C1032 * C152845 +
             (C134 * C1243 - C135 * C1232 - C134 * C1244 + C152711 * C1250) *
                 C152747) *
                C23411) *
               C152617 -
           ((C23421 + C23422) * C23411 + (C23420 + C23419) * C152894 +
            C23424 * C152893) *
               C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C3047 -
           (C23888 * C23411 + (C23878 + C23879) * C152894 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152845) *
                C152893) *
               C3048 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152845 +
             C8232 * C152747) *
                C152893 +
            (C23880 + C23881) * C152894 + C23889 * C23411) *
               C3049 -
           ((C26881 + C26875) * C23411 + (C26876 + C26877) * C152894 +
            (C10260 * C152747 +
             (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                 C152845) *
                C152893) *
               C152886) *
              C152512 * C152814 +
          (((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
            C24281 * C23411) *
               C3048 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C3047 -
           ((C23886 + C23887) * C23411 + (C23883 + C23882) * C152894 +
            (C23881 + C23880) * C152893) *
               C3049 +
           ((C26877 + C26876) * C152893 + (C26875 + C26881) * C152894 +
            (C3074 * C152845 +
             (C134 * C3219 - C135 * C3212 - C134 * C3220 + C152711 * C3224) *
                 C152747) *
                C23411) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152530 * C152917 -
           (C23656 * C23411 + (C23646 + C23647) * C152894 +
            (C6615 * C152747 + C6614 * C152845) * C152893) *
               C152530 * C152901 +
           ((C6615 * C152845 + C6616 * C152747) * C152893 +
            (C23648 + C23649) * C152894 + C23657 * C23411) *
               C152530 * C152870) *
              C365 +
          (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
            (C23652 + C23653) * C23411) *
               C152530 * C152901 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C152530 * C152917 -
           ((C23654 + C23655) * C23411 + (C23651 + C23650) * C152894 +
            (C23649 + C23648) * C152893) *
               C152530 * C152870) *
              C366 +
          ((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
               C152530 * C152917 -
           ((C472 * C152747 + C471 * C152845) * C23411 +
            (C23653 + C23652) * C152894 + C23656 * C152893) *
               C152530 * C152901 +
           (C23657 * C152893 + (C23655 + C23654) * C152894 +
            (C472 * C152845 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C152747) *
                C23411) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152845 +
            C6614 * C152747) *
               C152893 +
           (C23413 + C23414) * C152894 + C23423 * C23411) *
              C152530 * C152512 * C129 -
          (C23424 * C23411 + (C23416 + C23415) * C152894 +
           (C23414 + C23413) * C152893) *
              C152530 * C152512 * C130 +
          (C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
              C152530 * C152512 * C131 -
          ((C23421 + C23422) * C23411 + (C23420 + C23419) * C152894 +
           C23424 * C152893) *
              C152530 * C152512 * C132 +
          (C23425 * C152893 + (C23422 + C23421) * C152894 +
           (C210 * C152845 +
            (C134 * C878 - C135 * C877 - C134 * C879 + C152711 * C880) *
                C152747) *
               C23411) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152530 * C1429 -
           (C23656 * C23411 + (C23646 + C23647) * C152894 +
            (C6615 * C152747 + C6614 * C152845) * C152893) *
               C152530 * C1430 +
           ((C6615 * C152845 + C6616 * C152747) * C152893 +
            (C23648 + C23649) * C152894 + C23657 * C23411) *
               C152530 * C152870) *
              C152914 +
          (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
            C24084 * C23411) *
               C152530 * C1430 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C152530 * C1429 -
           ((C23654 + C23655) * C23411 + (C23651 + C23650) * C152894 +
            (C23649 + C23648) * C152893) *
               C152530 * C152870) *
              C152897 +
          ((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
               C152530 * C1429 -
           ((C24085 + C24086) * C23411 + (C23653 + C23652) * C152894 +
            C23656 * C152893) *
               C152530 * C1430 +
           (C23657 * C152893 + (C23655 + C23654) * C152894 +
            (C472 * C152845 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C152747) *
                C23411) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152845 +
            C6614 * C152747) *
               C152893 +
           (C23413 + C23414) * C152894 + C23423 * C23411) *
              C152530 * C1517 -
          (C23656 * C23411 + (C23646 + C23647) * C152894 +
           (C6615 * C152747 + C6614 * C152845) * C152893) *
              C152530 * C1518 +
          ((C6615 * C152845 + C6616 * C152747) * C152893 +
           (C23648 + C23649) * C152894 + C23657 * C23411) *
              C152530 * C1519 -
          ((C6618 * C152747 + C1909 * C152845) * C23411 +
           (C6617 * C152747 + C1910 * C152845) * C152894 +
           (C7957 * C152747 + C6616 * C152845) * C152893) *
              C152530 * C1520 +
          ((C7957 * C152845 + C7959 * C152747) * C152893 +
           (C6617 * C152845 + C7958 * C152747) * C152894 +
           (C6618 * C152845 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C152747) *
               C23411) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C2427 -
           (C23888 * C23411 + (C23878 + C23879) * C152894 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152845) *
                C152893) *
               C2428 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152845 +
             C8232 * C152747) *
                C152893 +
            (C23880 + C23881) * C152894 + C23889 * C23411) *
               C152873) *
              C152512 * C152914 +
          (((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
            C24281 * C23411) *
               C2428 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C2427 -
           ((C23886 + C23887) * C23411 + (C23883 + C23882) * C152894 +
            (C23881 + C23880) * C152893) *
               C152873) *
              C152512 * C152897 +
          ((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
               C2427 -
           ((C24282 + C24283) * C23411 + (C23885 + C23884) * C152894 +
            C23888 * C152893) *
               C2428 +
           (C23889 * C152893 + (C23887 + C23886) * C152894 +
            (C733 * C152845 +
             (C134 * C2890 - C135 * C2889 - C134 * C2891 + C152711 * C2892) *
                 C152747) *
                C23411) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C2427 -
           (C23888 * C23411 + (C23878 + C23879) * C152894 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152845) *
                C152893) *
               C2428 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152845 +
             C8232 * C152747) *
                C152893 +
            (C23880 + C23881) * C152894 + C23889 * C23411) *
               C152873) *
              C152917 +
          (((C7578 * C152845 + C7577 * C152747) * C152893 +
            (C24574 + C24575) * C152894 + C24580 * C23411) *
               C2428 -
           (C23656 * C23411 + (C23646 + C23647) * C152894 +
            (C6615 * C152747 + C6614 * C152845) * C152893) *
               C2427 -
           ((C6862 * C152747 + C2913 * C152845) * C23411 +
            (C6861 * C152747 + C2914 * C152845) * C152894 +
            (C8233 * C152747 + C8232 * C152845) * C152893) *
               C152873) *
              C152901 +
          (((C6615 * C152845 + C6616 * C152747) * C152893 +
            (C23648 + C23649) * C152894 + C23657 * C23411) *
               C2427 -
           ((C25627 + C25628) * C23411 + (C25629 + C25630) * C152894 +
            (C8234 * C152747 + C7577 * C152845) * C152893) *
               C2428 +
           ((C8233 * C152845 + C8236 * C152747) * C152893 +
            (C6861 * C152845 + C8235 * C152747) * C152894 +
            (C6862 * C152845 +
             (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                 C152747) *
                C23411) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152845 +
              C6614 * C152747) *
                 C152893 +
             (C23413 + C23414) * C152894 + C23423 * C23411) *
                C4361 -
            (C23888 * C23411 + (C23878 + C23879) * C152894 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152845) *
                 C152893) *
                C152617) *
               C152828 +
           (((C7578 * C152845 + C7577 * C152747) * C152893 +
             (C24574 + C24575) * C152894 + C24580 * C23411) *
                C152617 -
            (C23656 * C23411 + (C23646 + C23647) * C152894 +
             (C6615 * C152747 + C6614 * C152845) * C152893) *
                C4361) *
               C152575) *
              C152489 +
          ((((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
             C24281 * C23411) *
                C152617 -
            (C23424 * C23411 + (C23416 + C23415) * C152894 +
             (C23414 + C23413) * C152893) *
                C4361) *
               C152828 +
           (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
             C24084 * C23411) *
                C4361 -
            ((C24578 + C24579) * C23411 + (C24577 + C24576) * C152894 +
             (C24575 + C24574) * C152893) *
                C152617) *
               C152575) *
              C152498 +
          (((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
                C4361 -
            ((C24282 + C24283) * C23411 + (C23885 + C23884) * C152894 +
             C23888 * C152893) *
                C152617) *
               C152828 +
           ((C24580 * C152893 + (C24579 + C24578) * C152894 +
             (C1279 * C152845 +
              (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                  C152747) *
                 C23411) *
                C152617 -
            ((C24085 + C24086) * C23411 + (C23653 + C23652) * C152894 +
             C23656 * C152893) *
                C4361) *
               C152575) *
              C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152845 +
              C6614 * C152747) *
                 C152893 +
             (C23413 + C23414) * C152894 + C23423 * C23411) *
                C152613 -
            (C23888 * C23411 + (C23878 + C23879) * C152894 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152845) *
                 C152893) *
                C152620 +
            (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                  C152845 +
              C8232 * C152747) *
                 C152893 +
             (C23880 + C23881) * C152894 + C23889 * C23411) *
                C5033) *
               C152828 +
           (((C7578 * C152845 + C7577 * C152747) * C152893 +
             (C24574 + C24575) * C152894 + C24580 * C23411) *
                C152620 -
            (C23656 * C23411 + (C23646 + C23647) * C152894 +
             (C6615 * C152747 + C6614 * C152845) * C152893) *
                C152613 -
            ((C26673 + C26674) * C23411 + (C26675 + C26676) * C152894 +
             (C8233 * C152747 + C8232 * C152845) * C152893) *
                C5033) *
               C152575) *
              C3495 +
          ((((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
             C24281 * C23411) *
                C152620 -
            (C23424 * C23411 + (C23416 + C23415) * C152894 +
             (C23414 + C23413) * C152893) *
                C152613 -
            ((C23886 + C23887) * C23411 + (C23883 + C23882) * C152894 +
             (C23881 + C23880) * C152893) *
                C5033) *
               C152828 +
           (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
             C24084 * C23411) *
                C152613 -
            ((C24578 + C24579) * C23411 + (C24577 + C24576) * C152894 +
             (C24575 + C24574) * C152893) *
                C152620 +
            ((C26676 + C26675) * C152893 + (C26674 + C26673) * C152894 +
             (C2912 * C152845 +
              (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                  C152747) *
                 C23411) *
                C5033) *
               C152575) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152845 +
              C6614 * C152747) *
                 C152893 +
             (C23413 + C23414) * C152894 + C23423 * C23411) *
                C4361 -
            (C23888 * C23411 + (C23878 + C23879) * C152894 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152845) *
                 C152893) *
                C152617) *
               C152917 +
           (((C7578 * C152845 + C7577 * C152747) * C152893 +
             (C24574 + C24575) * C152894 + C24580 * C23411) *
                C152617 -
            (C23656 * C23411 + (C23646 + C23647) * C152894 +
             (C6615 * C152747 + C6614 * C152845) * C152893) *
                C4361) *
               C152901 +
           (((C6615 * C152845 + C6616 * C152747) * C152893 +
             (C23648 + C23649) * C152894 + C23657 * C23411) *
                C4361 -
            ((C25627 + C25628) * C23411 + (C25629 + C25630) * C152894 +
             (C8234 * C152747 + C7577 * C152845) * C152893) *
                C152617) *
               C152870) *
              C3495 +
          ((((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
             C24281 * C23411) *
                C152617 -
            (C23424 * C23411 + (C23416 + C23415) * C152894 +
             (C23414 + C23413) * C152893) *
                C4361) *
               C152917 +
           (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
             C24084 * C23411) *
                C4361 -
            ((C24578 + C24579) * C23411 + (C24577 + C24576) * C152894 +
             (C24575 + C24574) * C152893) *
                C152617) *
               C152901 +
           (((C25630 + C25629) * C152893 + (C25628 + C25627) * C152894 +
             (C2130 * C152845 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C152747) *
                 C23411) *
                C152617 -
            ((C23654 + C23655) * C23411 + (C23651 + C23650) * C152894 +
             (C23649 + C23648) * C152893) *
                C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C4361 -
           (C23888 * C23411 + (C23878 + C23879) * C152894 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152845) *
                C152893) *
               C152617) *
              C152512 * C152923 +
          (((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
            C24281 * C23411) *
               C152617 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C4361) *
              C152512 * C152916 +
          ((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
               C4361 -
           ((C24282 + C24283) * C23411 + (C23885 + C23884) * C152894 +
            C23888 * C152893) *
               C152617) *
              C152512 * C152899 +
          ((C24281 * C152893 + (C24283 + C24282) * C152894 +
            (C1032 * C152845 +
             (C134 * C1243 - C135 * C1232 - C134 * C1244 + C152711 * C1250) *
                 C152747) *
                C23411) *
               C152617 -
           ((C23421 + C23422) * C23411 + (C23420 + C23419) * C152894 +
            C23424 * C152893) *
               C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152925 -
           (C23888 * C23411 + (C23878 + C23879) * C152894 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152845) *
                C152893) *
               C152922 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152845 +
             C8232 * C152747) *
                C152893 +
            (C23880 + C23881) * C152894 + C23889 * C23411) *
               C152909 -
           ((C26881 + C26875) * C23411 + (C26876 + C26877) * C152894 +
            (C10260 * C152747 +
             (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                 C152845) *
                C152893) *
               C152886) *
              C152512 * C3495 +
          (((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
            C24281 * C23411) *
               C152922 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C152925 -
           ((C23886 + C23887) * C23411 + (C23883 + C23882) * C152894 +
            (C23881 + C23880) * C152893) *
               C152909 +
           ((C26877 + C26876) * C152893 + (C26875 + C26881) * C152894 +
            (C3074 * C152845 +
             (C134 * C3219 - C135 * C3212 - C134 * C3220 + C152711 * C3224) *
                 C152747) *
                C23411) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152613 -
           (C23888 * C23411 + (C23878 + C23879) * C152894 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152845) *
                C152893) *
               C152620 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152845 +
             C8232 * C152747) *
                C152893 +
            (C23880 + C23881) * C152894 + C23889 * C23411) *
               C5033) *
              C152512 * C152489 +
          (((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
            C24281 * C23411) *
               C152620 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C152613 -
           ((C23886 + C23887) * C23411 + (C23883 + C23882) * C152894 +
            (C23881 + C23880) * C152893) *
               C5033) *
              C152512 * C152498 +
          ((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
               C152613 -
           ((C24282 + C24283) * C23411 + (C23885 + C23884) * C152894 +
            C23888 * C152893) *
               C152620 +
           (C23889 * C152893 + (C23887 + C23886) * C152894 +
            (C733 * C152845 +
             (C134 * C2890 - C135 * C2889 - C134 * C2891 + C152711 * C2892) *
                 C152747) *
                C23411) *
               C5033) *
              C152512 * C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C4361 -
           (C23888 * C23411 + (C23878 + C23879) * C152894 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152845) *
                C152893) *
               C152617) *
              C152512 * C152923 +
          (((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
            C24281 * C23411) *
               C152617 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C4361) *
              C152512 * C152916 +
          ((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
               C4361 -
           ((C24282 + C24283) * C23411 + (C23885 + C23884) * C152894 +
            C23888 * C152893) *
               C152617) *
              C152512 * C152899 +
          ((C24281 * C152893 + (C24283 + C24282) * C152894 +
            (C1032 * C152845 +
             (C134 * C1243 - C135 * C1232 - C134 * C1244 + C152711 * C1250) *
                 C152747) *
                C23411) *
               C152617 -
           ((C23421 + C23422) * C23411 + (C23420 + C23419) * C152894 +
            C23424 * C152893) *
               C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152845 +
              C6614 * C152747) *
                 C152893 +
             (C23413 + C23414) * C152894 + C23423 * C23411) *
                C4361 -
            (C23888 * C23411 + (C23878 + C23879) * C152894 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152845) *
                 C152893) *
                C152617) *
               C152917 +
           (((C7578 * C152845 + C7577 * C152747) * C152893 +
             (C24574 + C24575) * C152894 + C24580 * C23411) *
                C152617 -
            (C23656 * C23411 + (C23646 + C23647) * C152894 +
             (C6615 * C152747 + C6614 * C152845) * C152893) *
                C4361) *
               C152901 +
           (((C6615 * C152845 + C6616 * C152747) * C152893 +
             (C23648 + C23649) * C152894 + C23657 * C23411) *
                C4361 -
            ((C25627 + C25628) * C23411 + (C25629 + C25630) * C152894 +
             (C8234 * C152747 + C7577 * C152845) * C152893) *
                C152617) *
               C152870) *
              C3495 +
          ((((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
             C24281 * C23411) *
                C152617 -
            (C23424 * C23411 + (C23416 + C23415) * C152894 +
             (C23414 + C23413) * C152893) *
                C4361) *
               C152917 +
           (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
             C24084 * C23411) *
                C4361 -
            ((C24578 + C24579) * C23411 + (C24577 + C24576) * C152894 +
             (C24575 + C24574) * C152893) *
                C152617) *
               C152901 +
           (((C25630 + C25629) * C152893 + (C25628 + C25627) * C152894 +
             (C2130 * C152845 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C152747) *
                 C23411) *
                C152617 -
            ((C23654 + C23655) * C23411 + (C23651 + C23650) * C152894 +
             (C23649 + C23648) * C152893) *
                C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152530 * C152828 -
           (C23656 * C23411 + (C23646 + C23647) * C152894 +
            (C6615 * C152747 + C6614 * C152845) * C152893) *
               C152530 * C152575) *
              C873 +
          (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
            C24084 * C23411) *
               C152530 * C152575 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C152530 * C152828) *
              C874 +
          ((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
               C152530 * C152828 -
           ((C24085 + C24086) * C23411 + (C23653 + C23652) * C152894 +
            C23656 * C152893) *
               C152530 * C152575) *
              C875 +
          ((C24084 * C152893 + (C24086 + C24085) * C152894 +
            (C888 * C152845 +
             (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                 C152747) *
                C23411) *
               C152530 * C152575 -
           ((C23421 + C23422) * C23411 + (C23420 + C23419) * C152894 +
            C23424 * C152893) *
               C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152530 * C1879 -
           (C23656 * C23411 + (C23646 + C23647) * C152894 +
            (C6615 * C152747 + C6614 * C152845) * C152893) *
               C152530 * C1880 +
           ((C6615 * C152845 + C6616 * C152747) * C152893 +
            (C23648 + C23649) * C152894 + C23657 * C23411) *
               C152530 * C1881 -
           ((C25333 + C25334) * C23411 + (C25335 + C25336) * C152894 +
            (C7957 * C152747 + C6616 * C152845) * C152893) *
               C152530 * C152880) *
              C152814 +
          (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
            C24084 * C23411) *
               C152530 * C1880 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C152530 * C1879 -
           ((C23654 + C23655) * C23411 + (C23651 + C23650) * C152894 +
            (C23649 + C23648) * C152893) *
               C152530 * C1881 +
           ((C25336 + C25335) * C152893 + (C25334 + C25333) * C152894 +
            (C1908 * C152845 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C152747) *
                C23411) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152845 +
              C6614 * C152747) *
                 C152893 +
             (C23413 + C23414) * C152894 + C23423 * C23411) *
                C152829 -
            (C23888 * C23411 + (C23878 + C23879) * C152894 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152845) *
                 C152893) *
                C152617) *
               C152828 +
           (((C7578 * C152845 + C7577 * C152747) * C152893 +
             (C24574 + C24575) * C152894 + C24580 * C23411) *
                C152617 -
            (C23656 * C23411 + (C23646 + C23647) * C152894 +
             (C6615 * C152747 + C6614 * C152845) * C152893) *
                C152829) *
               C152575) *
              C365 +
          ((((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
             C24281 * C23411) *
                C152617 -
            (C23424 * C23411 + (C23416 + C23415) * C152894 +
             (C23414 + C23413) * C152893) *
                C152829) *
               C152828 +
           (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
             C24084 * C23411) *
                C152829 -
            ((C24578 + C24579) * C23411 + (C24577 + C24576) * C152894 +
             (C24575 + C24574) * C152893) *
                C152617) *
               C152575) *
              C366 +
          (((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
                C152829 -
            ((C24282 + C24283) * C23411 + (C23885 + C23884) * C152894 +
             C23888 * C152893) *
                C152617) *
               C152828 +
           ((C24580 * C152893 + (C24579 + C24578) * C152894 +
             (C1279 * C152845 +
              (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                  C152747) *
                 C23411) *
                C152617 -
            ((C24085 + C24086) * C23411 + (C23653 + C23652) * C152894 +
             C23656 * C152893) *
                C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152829 -
           (C23888 * C23411 + (C23878 + C23879) * C152894 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152845) *
                C152893) *
               C152617) *
              C1879 +
          (((C7578 * C152845 + C7577 * C152747) * C152893 +
            (C24574 + C24575) * C152894 + C24580 * C23411) *
               C152617 -
           (C23656 * C23411 + (C23646 + C23647) * C152894 +
            (C6615 * C152747 + C6614 * C152845) * C152893) *
               C152829) *
              C1880 +
          (((C6615 * C152845 + C6616 * C152747) * C152893 +
            (C23648 + C23649) * C152894 + C23657 * C23411) *
               C152829 -
           ((C25627 + C25628) * C23411 + (C25629 + C25630) * C152894 +
            (C8234 * C152747 + C7577 * C152845) * C152893) *
               C152617) *
              C1881 +
          (((C8234 * C152845 + C8950 * C152747) * C152893 +
            (C7579 * C152845 + C8740 * C152747) * C152894 +
            (C7580 * C152845 +
             (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                 C152747) *
                C23411) *
               C152617 -
           ((C25333 + C25334) * C23411 + (C25335 + C25336) * C152894 +
            (C7957 * C152747 + C6616 * C152845) * C152893) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152530 * C152917 -
           (C23656 * C23411 + (C23646 + C23647) * C152894 +
            (C6615 * C152747 + C6614 * C152845) * C152893) *
               C152530 * C152901 +
           ((C6615 * C152845 + C6616 * C152747) * C152893 +
            (C23648 + C23649) * C152894 + C23657 * C23411) *
               C152530 * C152870) *
              C365 +
          (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
            (C23652 + C23653) * C23411) *
               C152530 * C152901 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C152530 * C152917 -
           ((C23654 + C23655) * C23411 + (C23651 + C23650) * C152894 +
            (C23649 + C23648) * C152893) *
               C152530 * C152870) *
              C366 +
          ((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
               C152530 * C152917 -
           ((C472 * C152747 + C471 * C152845) * C23411 +
            (C23653 + C23652) * C152894 + C23656 * C152893) *
               C152530 * C152901 +
           (C23657 * C152893 + (C23655 + C23654) * C152894 +
            (C472 * C152845 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C152747) *
                C23411) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152845 +
            C6614 * C152747) *
               C152893 +
           (C23413 + C23414) * C152894 + C23423 * C23411) *
              C152530 * C152512 * C129 -
          (C23424 * C23411 + (C23416 + C23415) * C152894 +
           (C23414 + C23413) * C152893) *
              C152530 * C152512 * C130 +
          (C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
              C152530 * C152512 * C131 -
          ((C23421 + C23422) * C23411 + (C23420 + C23419) * C152894 +
           C23424 * C152893) *
              C152530 * C152512 * C132 +
          (C23425 * C152893 + (C23422 + C23421) * C152894 +
           (C210 * C152845 +
            (C134 * C878 - C135 * C877 - C134 * C879 + C152711 * C880) *
                C152747) *
               C23411) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152918 -
           (C23888 * C23411 + (C23878 + C23879) * C152894 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152845) *
                C152893) *
               C152903 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152845 +
             C8232 * C152747) *
                C152893 +
            (C23880 + C23881) * C152894 + C23889 * C23411) *
               C152873) *
              C152512 * C365 +
          (((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
            (C23884 + C23885) * C23411) *
               C152903 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C152918 -
           ((C23886 + C23887) * C23411 + (C23883 + C23882) * C152894 +
            (C23881 + C23880) * C152893) *
               C152873) *
              C152512 * C366 +
          ((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
               C152918 -
           ((C1279 * C152747 + C732 * C152845) * C23411 +
            (C23885 + C23884) * C152894 + C23888 * C152893) *
               C152903 +
           (C23889 * C152893 + (C23887 + C23886) * C152894 +
            (C733 * C152845 +
             (C134 * C2890 - C135 * C2889 - C134 * C2891 + C152711 * C2892) *
                 C152747) *
                C23411) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152530 * C1429 -
           (C23656 * C23411 + (C23646 + C23647) * C152894 +
            (C6615 * C152747 + C6614 * C152845) * C152893) *
               C152530 * C1430 +
           ((C6615 * C152845 + C6616 * C152747) * C152893 +
            (C23648 + C23649) * C152894 + C23657 * C23411) *
               C152530 * C152870) *
              C152914 +
          (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
            C24084 * C23411) *
               C152530 * C1430 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C152530 * C1429 -
           ((C23654 + C23655) * C23411 + (C23651 + C23650) * C152894 +
            (C23649 + C23648) * C152893) *
               C152530 * C152870) *
              C152897 +
          ((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
               C152530 * C1429 -
           ((C24085 + C24086) * C23411 + (C23653 + C23652) * C152894 +
            C23656 * C152893) *
               C152530 * C1430 +
           (C23657 * C152893 + (C23655 + C23654) * C152894 +
            (C472 * C152845 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C152747) *
                C23411) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152845 +
            C6614 * C152747) *
               C152893 +
           (C23413 + C23414) * C152894 + C23423 * C23411) *
              C152530 * C1517 -
          (C23656 * C23411 + (C23646 + C23647) * C152894 +
           (C6615 * C152747 + C6614 * C152845) * C152893) *
              C152530 * C1518 +
          ((C6615 * C152845 + C6616 * C152747) * C152893 +
           (C23648 + C23649) * C152894 + C23657 * C23411) *
              C152530 * C1519 -
          ((C6618 * C152747 + C1909 * C152845) * C23411 +
           (C6617 * C152747 + C1910 * C152845) * C152894 +
           (C7957 * C152747 + C6616 * C152845) * C152893) *
              C152530 * C1520 +
          ((C7957 * C152845 + C7959 * C152747) * C152893 +
           (C6617 * C152845 + C7958 * C152747) * C152894 +
           (C6618 * C152845 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C152747) *
               C23411) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152918 -
           (C23888 * C23411 + (C23878 + C23879) * C152894 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152845) *
                C152893) *
               C152903 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152845 +
             C8232 * C152747) *
                C152893 +
            (C23880 + C23881) * C152894 + C23889 * C23411) *
               C152873) *
              C1429 +
          (((C7578 * C152845 + C7577 * C152747) * C152893 +
            (C24574 + C24575) * C152894 + C24580 * C23411) *
               C152903 -
           (C23656 * C23411 + (C23646 + C23647) * C152894 +
            (C6615 * C152747 + C6614 * C152845) * C152893) *
               C152918 -
           ((C6862 * C152747 + C2913 * C152845) * C23411 +
            (C6861 * C152747 + C2914 * C152845) * C152894 +
            (C8233 * C152747 + C8232 * C152845) * C152893) *
               C152873) *
              C1430 +
          (((C6615 * C152845 + C6616 * C152747) * C152893 +
            (C23648 + C23649) * C152894 + C23657 * C23411) *
               C152918 -
           ((C7580 * C152747 + C2131 * C152845) * C23411 +
            (C7579 * C152747 + C2132 * C152845) * C152894 +
            (C8234 * C152747 + C7577 * C152845) * C152893) *
               C152903 +
           ((C8233 * C152845 + C8236 * C152747) * C152893 +
            (C6861 * C152845 + C8235 * C152747) * C152894 +
            (C6862 * C152845 +
             (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                 C152747) *
                C23411) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152829 -
           (C23888 * C23411 + (C23878 + C23879) * C152894 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152845) *
                C152893) *
               C152617) *
              C152512 * C873 +
          (((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
            C24281 * C23411) *
               C152617 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C152829) *
              C152512 * C874 +
          ((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
               C152829 -
           ((C24282 + C24283) * C23411 + (C23885 + C23884) * C152894 +
            C23888 * C152893) *
               C152617) *
              C152512 * C875 +
          ((C24281 * C152893 + (C24283 + C24282) * C152894 +
            (C1032 * C152845 +
             (C134 * C1243 - C135 * C1232 - C134 * C1244 + C152711 * C1250) *
                 C152747) *
                C23411) *
               C152617 -
           ((C23421 + C23422) * C23411 + (C23420 + C23419) * C152894 +
            C23424 * C152893) *
               C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152845 +
              C6614 * C152747) *
                 C152893 +
             (C23413 + C23414) * C152894 + C23423 * C23411) *
                C152829 -
            (C23888 * C23411 + (C23878 + C23879) * C152894 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152845) *
                 C152893) *
                C152617) *
               C1429 +
           (((C7578 * C152845 + C7577 * C152747) * C152893 +
             (C24574 + C24575) * C152894 + C24580 * C23411) *
                C152617 -
            (C23656 * C23411 + (C23646 + C23647) * C152894 +
             (C6615 * C152747 + C6614 * C152845) * C152893) *
                C152829) *
               C1430 +
           (((C6615 * C152845 + C6616 * C152747) * C152893 +
             (C23648 + C23649) * C152894 + C23657 * C23411) *
                C152829 -
            ((C25627 + C25628) * C23411 + (C25629 + C25630) * C152894 +
             (C8234 * C152747 + C7577 * C152845) * C152893) *
                C152617) *
               C152870) *
              C152814 +
          ((((C23879 + C23878) * C152893 + (C23877 + C23876) * C152894 +
             C24281 * C23411) *
                C152617 -
            (C23424 * C23411 + (C23416 + C23415) * C152894 +
             (C23414 + C23413) * C152893) *
                C152829) *
               C1429 +
           (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
             C24084 * C23411) *
                C152829 -
            ((C24578 + C24579) * C23411 + (C24577 + C24576) * C152894 +
             (C24575 + C24574) * C152893) *
                C152617) *
               C1430 +
           (((C25630 + C25629) * C152893 + (C25628 + C25627) * C152894 +
             (C2130 * C152845 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C152747) *
                 C23411) *
                C152617 -
            ((C23654 + C23655) * C23411 + (C23651 + C23650) * C152894 +
             (C23649 + C23648) * C152893) *
                C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152845 +
            C6614 * C152747) *
               C152893 +
           (C23413 + C23414) * C152894 + C23423 * C23411) *
              C152530 * C152512 * C129 -
          (C23424 * C23411 + (C23416 + C23415) * C152894 +
           (C23414 + C23413) * C152893) *
              C152530 * C152512 * C130 +
          (C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
              C152530 * C152512 * C131 -
          ((C23421 + C23422) * C23411 + (C23420 + C23419) * C152894 +
           C23424 * C152893) *
              C152530 * C152512 * C132 +
          (C23425 * C152893 + (C23422 + C23421) * C152894 +
           (C210 * C152845 +
            (C134 * C878 - C135 * C877 - C134 * C879 + C152711 * C880) *
                C152747) *
               C23411) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152530 * C152917 -
           (C23656 * C23411 + (C23646 + C23647) * C152894 +
            (C6615 * C152747 + C6614 * C152845) * C152893) *
               C152530 * C152901 +
           ((C6615 * C152845 + C6616 * C152747) * C152893 +
            (C23648 + C23649) * C152894 + C23657 * C23411) *
               C152530 * C152870) *
              C365 +
          (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
            (C23652 + C23653) * C23411) *
               C152530 * C152901 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C152530 * C152917 -
           ((C23654 + C23655) * C23411 + (C23651 + C23650) * C152894 +
            (C23649 + C23648) * C152893) *
               C152530 * C152870) *
              C366 +
          ((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
               C152530 * C152917 -
           ((C472 * C152747 + C471 * C152845) * C23411 +
            (C23653 + C23652) * C152894 + C23656 * C152893) *
               C152530 * C152901 +
           (C23657 * C152893 + (C23655 + C23654) * C152894 +
            (C472 * C152845 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C152747) *
                C23411) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152845 +
             C6614 * C152747) *
                C152893 +
            (C23413 + C23414) * C152894 + C23423 * C23411) *
               C152530 * C1429 -
           (C23656 * C23411 + (C23646 + C23647) * C152894 +
            (C6615 * C152747 + C6614 * C152845) * C152893) *
               C152530 * C1430 +
           ((C6615 * C152845 + C6616 * C152747) * C152893 +
            (C23648 + C23649) * C152894 + C23657 * C23411) *
               C152530 * C152870) *
              C152914 +
          (((C23647 + C23646) * C152893 + (C23645 + C23644) * C152894 +
            C24084 * C23411) *
               C152530 * C1430 -
           (C23424 * C23411 + (C23416 + C23415) * C152894 +
            (C23414 + C23413) * C152893) *
               C152530 * C1429 -
           ((C23654 + C23655) * C23411 + (C23651 + C23650) * C152894 +
            (C23649 + C23648) * C152893) *
               C152530 * C152870) *
              C152897 +
          ((C23423 * C152893 + (C23418 + C23417) * C152894 + C23425 * C23411) *
               C152530 * C1429 -
           ((C24085 + C24086) * C23411 + (C23653 + C23652) * C152894 +
            C23656 * C152893) *
               C152530 * C1430 +
           (C23657 * C152893 + (C23655 + C23654) * C152894 +
            (C472 * C152845 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C152747) *
                C23411) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152845 +
            C6614 * C152747) *
               C152893 +
           (C23413 + C23414) * C152894 + C23423 * C23411) *
              C152530 * C1517 -
          (C23656 * C23411 + (C23646 + C23647) * C152894 +
           (C6615 * C152747 + C6614 * C152845) * C152893) *
              C152530 * C1518 +
          ((C6615 * C152845 + C6616 * C152747) * C152893 +
           (C23648 + C23649) * C152894 + C23657 * C23411) *
              C152530 * C1519 -
          ((C6618 * C152747 + C1909 * C152845) * C23411 +
           (C6617 * C152747 + C1910 * C152845) * C152894 +
           (C7957 * C152747 + C6616 * C152845) * C152893) *
              C152530 * C1520 +
          ((C7957 * C152845 + C7959 * C152747) * C152893 +
           (C6617 * C152845 + C7958 * C152747) * C152894 +
           (C6618 * C152845 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C152747) *
               C23411) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152530 * C152571 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C152530 * C152578 +
           (((C40571 + C40570) * C152845 + (C42270 + C42271) * C152747) *
                C6341 +
            (C40557 * C152845 + C42880 * C152747) * C152462) *
               C152530 * C3839) *
              C152489 +
          (((C40546 * C152845 + C40557 * C152747) * C6341 +
            (C40558 * C152845 + C32011 * C152747) * C152462) *
               C152530 * C152578 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C152530 * C152571 -
           (((C33850 + C33851) * C152747 + C40559 * C152845) * C152462 +
            (C42881 * C152747 + C40547 * C152845) * C6341) *
               C152530 * C3839) *
              C152498 +
          (((C31702 * C152845 + C40558 * C152747) * C6341 +
            ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
               C152530 * C152571 -
           (((C32008 + C32009) * C152747 + C41120 * C152845) * C152462 +
            (C40559 * C152747 + C32010 * C152845) * C6341) *
               C152530 * C152578 +
           ((C32011 * C152845 + (C33851 + C33850) * C152747) * C6341 +
            ((C32009 + C32008) * C152845 +
             (C31627 * C1531 - C31628 * C1523 - C31627 * C1532 +
              C152846 * C1547 + C31629 * C2275 - C31630 * C2268 -
              C31629 * C2276 + C152775 * C2280) *
                 C152747) *
                C152462) *
               C152530 * C3839) *
              C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C152845 +
              (C40568 + C40569) * C152747) *
                 C6341 +
             ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
                C152829 -
            ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C152845) *
                 C6341) *
                C152617) *
               C152571 +
           ((((C41781 + C41780) * C152845 + (C42616 + C42617) * C152747) *
                 C6341 +
             (C41774 * C152845 + C43268 * C152747) * C152462) *
                C152617 -
            ((C40547 * C152747 + C40548 * C152845) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                 C6341) *
                C152829) *
               C152578 +
           ((((C40571 + C40570) * C152845 + (C42270 + C42271) * C152747) *
                 C6341 +
             (C40557 * C152845 + C42880 * C152747) * C152462) *
                C152829 -
            (((C43282 + C43283) * C152747 + C43277 * C152845) * C152462 +
             ((C43554 + C43555) * C152747 + (C42617 + C42616) * C152845) *
                 C6341) *
                C152617) *
               C3839) *
              C3495 +
          (((((C32307 + C32306) * C152845 + C41774 * C152747) * C6341 +
             ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
                C152617 -
            ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
                C152829) *
               C152571 +
           (((C40546 * C152845 + C40557 * C152747) * C6341 +
             (C40558 * C152845 + C32011 * C152747) * C152462) *
                C152829 -
            (((C34168 + C34169) * C152747 + C41775 * C152845) * C152462 +
             (C43277 * C152747 + C41765 * C152845) * C6341) *
                C152617) *
               C152578 +
           (((C43268 * C152845 + (C43283 + C43282) * C152747) * C6341 +
             ((C34169 + C34168) * C152845 +
              (C31627 * C2273 - C31628 * C2267 - C31627 * C2274 +
               C152846 * C2279 + C31629 * C9823 - C31630 * C9822 -
               C31629 * C9824 + C152775 * C9825) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C33850 + C33851) * C152747 + C40559 * C152845) * C152462 +
             (C42881 * C152747 + C40547 * C152845) * C6341) *
                C152829) *
               C3839) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152530 * C152924 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C152530 * C152920 +
           (((C40571 + C40570) * C152845 + (C42270 + C42271) * C152747) *
                C6341 +
            (C40557 * C152845 + C42880 * C152747) * C152462) *
               C152530 * C152906 -
           (((C42272 + C42273) * C152747 + C42881 * C152845) * C152462 +
            ((C42274 + C42275) * C152747 + (C42271 + C42270) * C152845) *
                C6341) *
               C152530 * C152880) *
              C3495 +
          (((C40546 * C152845 + C40557 * C152747) * C6341 +
            (C40558 * C152845 + C32011 * C152747) * C152462) *
               C152530 * C152920 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C152530 * C152924 -
           (((C33850 + C33851) * C152747 + C40559 * C152845) * C152462 +
            (C42881 * C152747 + C40547 * C152845) * C6341) *
               C152530 * C152906 +
           ((C42880 * C152845 + (C42273 + C42272) * C152747) * C6341 +
            ((C33851 + C33850) * C152845 +
             (C31627 * C1543 - C31628 * C1529 - C31627 * C1544 +
              C152846 * C1553 + C31629 * C8728 - C31630 * C8727 -
              C31629 * C8729 + C152775 * C8730) *
                 C152747) *
                C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152530 * C3355 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C152530 * C152575) *
              C152923 +
          (((C40546 * C152845 + C40557 * C152747) * C6341 +
            (C40558 * C152845 + C32011 * C152747) * C152462) *
               C152530 * C152575 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C152530 * C3355) *
              C152916 +
          (((C31702 * C152845 + C40558 * C152747) * C6341 +
            ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
               C152530 * C3355 -
           (((C32008 + C32009) * C152747 + C41120 * C152845) * C152462 +
            (C40559 * C152747 + C32010 * C152845) * C6341) *
               C152530 * C152575) *
              C152899 +
          (((C32514 * C152845 + (C32009 + C32008) * C152747) * C6341 +
            ((C32529 + C32528) * C152845 +
             (C31627 * C398 - C31628 * C377 - C31627 * C399 + C152846 * C413 +
              C31629 * C2108 - C31630 * C2107 - C31629 * C2109 +
              C152775 * C2110) *
                 C152747) *
                C152462) *
               C152530 * C152575 -
           (((C32528 + C32529) * C152747 + (C31699 + C31698) * C152845) *
                C152462 +
            (C41120 * C152747 + C31703 * C152845) * C6341) *
               C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C152845 +
              (C40568 + C40569) * C152747) *
                 C6341 +
             ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
                C152918 -
            ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C152845) *
                 C6341) *
                C152903 +
            (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
               C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
               C152775 * C2690) *
                  C152845 +
              (C42614 + C42615) * C152747) *
                 C6341 +
             ((C32308 + C32309) * C152845 + C44684 * C152747) * C152462) *
                C152873) *
               C3355 +
           ((((C41781 + C41780) * C152845 + (C42616 + C42617) * C152747) *
                 C6341 +
             (C41774 * C152845 + C43268 * C152747) * C152462) *
                C152903 -
            ((C40547 * C152747 + C40548 * C152845) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                 C6341) *
                C152918 -
            (((C42618 + C42619) * C152747 + C44685 * C152845) * C152462 +
             ((C42620 + C42621) * C152747 + (C42615 + C42614) * C152845) *
                 C6341) *
                C152873) *
               C152575) *
              C3495 +
          (((((C32307 + C32306) * C152845 + C41774 * C152747) * C6341 +
             ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
                C152903 -
            ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
                C152918 -
            (((C35238 + C35239) * C152747 + (C32311 + C32310) * C152845) *
                 C152462 +
             (C44685 * C152747 + (C32309 + C32308) * C152845) * C6341) *
                C152873) *
               C3355 +
           (((C40546 * C152845 + C40557 * C152747) * C6341 +
             (C40558 * C152845 + C32011 * C152747) * C152462) *
                C152918 -
            (((C34168 + C34169) * C152747 + C41775 * C152845) * C152462 +
             (C43277 * C152747 + C41765 * C152845) * C6341) *
                C152903 +
            ((C44684 * C152845 + (C42619 + C42618) * C152747) * C6341 +
             ((C35239 + C35238) * C152845 +
              (C31627 * C1733 - C31628 * C1711 - C31627 * C1734 +
               C152846 * C1747 + C31629 * C10024 - C31630 * C10023 -
               C31629 * C10025 + C152775 * C10026) *
                  C152747) *
                 C152462) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C152845 +
              (C40568 + C40569) * C152747) *
                 C6341 +
             ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
                C152829 -
            ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C152845) *
                 C6341) *
                C152617) *
               C3355 +
           ((((C41781 + C41780) * C152845 + (C42616 + C42617) * C152747) *
                 C6341 +
             (C41774 * C152845 + C43268 * C152747) * C152462) *
                C152617 -
            ((C40547 * C152747 + C40548 * C152845) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                 C6341) *
                C152829) *
               C152575) *
              C152489 +
          (((((C32307 + C32306) * C152845 + C41774 * C152747) * C6341 +
             ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
                C152617 -
            ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
                C152829) *
               C3355 +
           (((C40546 * C152845 + C40557 * C152747) * C6341 +
             (C40558 * C152845 + C32011 * C152747) * C152462) *
                C152829 -
            (((C34168 + C34169) * C152747 + C41775 * C152845) * C152462 +
             (C43277 * C152747 + C41765 * C152845) * C6341) *
                C152617) *
               C152575) *
              C152498 +
          ((((C31702 * C152845 + C40558 * C152747) * C6341 +
             ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
                C152829 -
            (((C33070 + C33071) * C152747 + (C32313 + C32312) * C152845) *
                 C152462 +
             (C41775 * C152747 + C32316 * C152845) * C6341) *
                C152617) *
               C3355 +
           (((C33072 * C152845 + (C34169 + C34168) * C152747) * C6341 +
             ((C33071 + C33070) * C152845 +
              (C31627 * C1721 - C31628 * C1705 - C31627 * C1722 +
               C152846 * C1741 + C31629 * C1735 - C31630 * C1712 -
               C31629 * C1736 + C152775 * C1748) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C32008 + C32009) * C152747 + C41120 * C152845) * C152462 +
             (C40559 * C152747 + C32010 * C152845) * C6341) *
                C152829) *
               C152575) *
              C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152530 * C3355 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C152530 * C152575) *
              C152923 +
          (((C40546 * C152845 + C40557 * C152747) * C6341 +
            (C40558 * C152845 + C32011 * C152747) * C152462) *
               C152530 * C152575 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C152530 * C3355) *
              C152916 +
          (((C31702 * C152845 + C40558 * C152747) * C6341 +
            ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
               C152530 * C3355 -
           (((C32008 + C32009) * C152747 + C41120 * C152845) * C152462 +
            (C40559 * C152747 + C32010 * C152845) * C6341) *
               C152530 * C152575) *
              C152899 +
          (((C32514 * C152845 + (C32009 + C32008) * C152747) * C6341 +
            ((C32529 + C32528) * C152845 +
             (C31627 * C398 - C31628 * C377 - C31627 * C399 + C152846 * C413 +
              C31629 * C2108 - C31630 * C2107 - C31629 * C2109 +
              C152775 * C2110) *
                 C152747) *
                C152462) *
               C152530 * C152575 -
           (((C32528 + C32529) * C152747 + (C31699 + C31698) * C152845) *
                C152462 +
            (C41120 * C152747 + C31703 * C152845) * C6341) *
               C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152530 * C152924 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C152530 * C152920 +
           (((C40571 + C40570) * C152845 + (C42270 + C42271) * C152747) *
                C6341 +
            (C40557 * C152845 + C42880 * C152747) * C152462) *
               C152530 * C152906 -
           (((C42272 + C42273) * C152747 + C42881 * C152845) * C152462 +
            ((C42274 + C42275) * C152747 + (C42271 + C42270) * C152845) *
                C6341) *
               C152530 * C152880) *
              C3495 +
          (((C40546 * C152845 + C40557 * C152747) * C6341 +
            (C40558 * C152845 + C32011 * C152747) * C152462) *
               C152530 * C152920 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C152530 * C152924 -
           (((C33850 + C33851) * C152747 + C40559 * C152845) * C152462 +
            (C42881 * C152747 + C40547 * C152845) * C6341) *
               C152530 * C152906 +
           ((C42880 * C152845 + (C42273 + C42272) * C152747) * C6341 +
            ((C33851 + C33850) * C152845 +
             (C31627 * C1543 - C31628 * C1529 - C31627 * C1544 +
              C152846 * C1553 + C31629 * C8728 - C31630 * C8727 -
              C31629 * C8729 + C152775 * C8730) *
                 C152747) *
                C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C152845 +
              (C40568 + C40569) * C152747) *
                 C6341 +
             ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
                C4361 -
            ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C152845) *
                 C6341) *
                C152617) *
               C152571 +
           ((((C41781 + C41780) * C152845 + (C42616 + C42617) * C152747) *
                 C6341 +
             (C41774 * C152845 + C43268 * C152747) * C152462) *
                C152617 -
            ((C40547 * C152747 + C40548 * C152845) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                 C6341) *
                C4361) *
               C152578 +
           ((((C40571 + C40570) * C152845 + (C42270 + C42271) * C152747) *
                 C6341 +
             (C40557 * C152845 + C42880 * C152747) * C152462) *
                C4361 -
            (((C43282 + C43283) * C152747 + C43277 * C152845) * C152462 +
             ((C43554 + C43555) * C152747 + (C42617 + C42616) * C152845) *
                 C6341) *
                C152617) *
               C3839) *
              C152814 +
          (((((C32307 + C32306) * C152845 + C41774 * C152747) * C6341 +
             ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
                C152617 -
            ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
                C4361) *
               C152571 +
           (((C40546 * C152845 + C40557 * C152747) * C6341 +
             (C40558 * C152845 + C32011 * C152747) * C152462) *
                C4361 -
            (((C34168 + C34169) * C152747 + C41775 * C152845) * C152462 +
             (C43277 * C152747 + C41765 * C152845) * C6341) *
                C152617) *
               C152578 +
           (((C43268 * C152845 + (C43283 + C43282) * C152747) * C6341 +
             ((C34169 + C34168) * C152845 +
              (C31627 * C2273 - C31628 * C2267 - C31627 * C2274 +
               C152846 * C2279 + C31629 * C9823 - C31630 * C9822 -
               C31629 * C9824 + C152775 * C9825) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C33850 + C33851) * C152747 + C40559 * C152845) * C152462 +
             (C42881 * C152747 + C40547 * C152845) * C6341) *
                C4361) *
               C3839) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152613 -
           ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152845) *
                C6341) *
               C152620 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C152845 +
             (C42614 + C42615) * C152747) *
                C6341 +
            ((C32308 + C32309) * C152845 + C44684 * C152747) * C152462) *
               C5033) *
              C152571 +
          ((((C41781 + C41780) * C152845 + (C42616 + C42617) * C152747) *
                C6341 +
            (C41774 * C152845 + C43268 * C152747) * C152462) *
               C152620 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C152613 -
           (((C42618 + C42619) * C152747 + C44685 * C152845) * C152462 +
            ((C42620 + C42621) * C152747 + (C42615 + C42614) * C152845) *
                C6341) *
               C5033) *
              C152578 +
          ((((C40571 + C40570) * C152845 + (C42270 + C42271) * C152747) *
                C6341 +
            (C40557 * C152845 + C42880 * C152747) * C152462) *
               C152613 -
           (((C43282 + C43283) * C152747 + C43277 * C152845) * C152462 +
            ((C43554 + C43555) * C152747 + (C42617 + C42616) * C152845) *
                C6341) *
               C152620 +
           (((C42621 + C42620) * C152845 +
             (C31627 * C8185 - C31628 * C8178 - C31627 * C8186 +
              C152846 * C8196 + C31629 * C10240 - C31630 * C10238 -
              C31629 * C10241 + C152775 * C10244) *
                 C152747) *
                C6341 +
            ((C42619 + C42618) * C152845 +
             (C31627 * C8183 - C31628 * C8177 - C31627 * C8184 +
              C152846 * C8195 + C31629 * C10242 - C31630 * C10239 -
              C31629 * C10243 + C152775 * C10245) *
                 C152747) *
                C152462) *
               C5033) *
              C3839) *
         C152484) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C4361 -
           ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152845) *
                C6341) *
               C152617) *
              C152924 +
          ((((C41781 + C41780) * C152845 + (C42616 + C42617) * C152747) *
                C6341 +
            (C41774 * C152845 + C43268 * C152747) * C152462) *
               C152617 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C4361) *
              C152920 +
          ((((C40571 + C40570) * C152845 + (C42270 + C42271) * C152747) *
                C6341 +
            (C40557 * C152845 + C42880 * C152747) * C152462) *
               C4361 -
           (((C43282 + C43283) * C152747 + C43277 * C152845) * C152462 +
            ((C43554 + C43555) * C152747 + (C42617 + C42616) * C152845) *
                C6341) *
               C152617) *
              C152906 +
          ((((C43555 + C43554) * C152845 +
             (C31627 * C8189 - C31628 * C8180 - C31627 * C8190 +
              C152846 * C8198 + C31629 * C8191 - C31630 * C8181 -
              C31629 * C8192 + C152775 * C8199) *
                 C152747) *
                C6341 +
            ((C43283 + C43282) * C152845 +
             (C31627 * C8187 - C31628 * C8179 - C31627 * C8188 +
              C152846 * C8197 + C31629 * C8193 - C31630 * C8182 -
              C31629 * C8194 + C152775 * C8200) *
                 C152747) *
                C152462) *
               C152617 -
           (((C42272 + C42273) * C152747 + C42881 * C152845) * C152462 +
            ((C42274 + C42275) * C152747 + (C42271 + C42270) * C152845) *
                C6341) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C152845 +
              (C40568 + C40569) * C152747) *
                 C6341 +
             ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
                C4361 -
            ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C152845) *
                 C6341) *
                C152617) *
               C3355 +
           ((((C41781 + C41780) * C152845 + (C42616 + C42617) * C152747) *
                 C6341 +
             (C41774 * C152845 + C43268 * C152747) * C152462) *
                C152617 -
            ((C40547 * C152747 + C40548 * C152845) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                 C6341) *
                C4361) *
               C152575) *
              C152914 +
          (((((C32307 + C32306) * C152845 + C41774 * C152747) * C6341 +
             ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
                C152617 -
            ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
                C4361) *
               C3355 +
           (((C40546 * C152845 + C40557 * C152747) * C6341 +
             (C40558 * C152845 + C32011 * C152747) * C152462) *
                C4361 -
            (((C34168 + C34169) * C152747 + C41775 * C152845) * C152462 +
             (C43277 * C152747 + C41765 * C152845) * C6341) *
                C152617) *
               C152575) *
              C152897 +
          ((((C31702 * C152845 + C40558 * C152747) * C6341 +
             ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
                C4361 -
            (((C33070 + C33071) * C152747 + (C32313 + C32312) * C152845) *
                 C152462 +
             (C41775 * C152747 + C32316 * C152845) * C6341) *
                C152617) *
               C3355 +
           (((C33072 * C152845 + (C34169 + C34168) * C152747) * C6341 +
             ((C33071 + C33070) * C152845 +
              (C31627 * C1721 - C31628 * C1705 - C31627 * C1722 +
               C152846 * C1741 + C31629 * C1735 - C31630 * C1712 -
               C31629 * C1736 + C152775 * C1748) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C32008 + C32009) * C152747 + C41120 * C152845) * C152462 +
             (C40559 * C152747 + C32010 * C152845) * C6341) *
                C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152925 -
           ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152845) *
                C6341) *
               C152922 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C152845 +
             (C42614 + C42615) * C152747) *
                C6341 +
            ((C32308 + C32309) * C152845 + C44684 * C152747) * C152462) *
               C152909 -
           (((C44956 + C44957) * C152747 + (C35462 + C35463) * C152845) *
                C152462 +
            ((C45228 + C45229) * C152747 +
             (C31629 * C2679 - C31630 * C2667 - C31629 * C2680 +
              C152775 * C2691 + C31627 * C2677 - C31628 * C2666 -
              C31627 * C2678 + C152846 * C2690) *
                 C152845) *
                C6341) *
               C152886) *
              C3355 +
          ((((C41781 + C41780) * C152845 + (C42616 + C42617) * C152747) *
                C6341 +
            (C41774 * C152845 + C43268 * C152747) * C152462) *
               C152922 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C152925 -
           (((C42618 + C42619) * C152747 + C44685 * C152845) * C152462 +
            ((C42620 + C42621) * C152747 + (C42615 + C42614) * C152845) *
                C6341) *
               C152909 +
           (((C45229 + C45228) * C152845 +
             (C31627 * C9516 - C31628 * C9509 - C31627 * C9517 +
              C152846 * C9527 + C31629 * C9520 - C31630 * C9511 -
              C31629 * C9521 + C152775 * C9529) *
                 C152747) *
                C6341 +
            ((C44957 + C44956) * C152845 +
             (C31627 * C9514 - C31628 * C9508 - C31627 * C9515 +
              C152846 * C9526 + C31629 * C9524 - C31630 * C9513 -
              C31629 * C9525 + C152775 * C9531) *
                 C152747) *
                C152462) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C152845 +
              (C40568 + C40569) * C152747) *
                 C6341 +
             ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
                C152613 -
            ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C152845) *
                 C6341) *
                C152620 +
            (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
               C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
               C152775 * C2690) *
                  C152845 +
              (C42614 + C42615) * C152747) *
                 C6341 +
             ((C32308 + C32309) * C152845 + C44684 * C152747) * C152462) *
                C5033) *
               C3355 +
           ((((C41781 + C41780) * C152845 + (C42616 + C42617) * C152747) *
                 C6341 +
             (C41774 * C152845 + C43268 * C152747) * C152462) *
                C152620 -
            ((C40547 * C152747 + C40548 * C152845) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                 C6341) *
                C152613 -
            (((C42618 + C42619) * C152747 + C44685 * C152845) * C152462 +
             ((C42620 + C42621) * C152747 + (C42615 + C42614) * C152845) *
                 C6341) *
                C5033) *
               C152575) *
              C152814 +
          (((((C32307 + C32306) * C152845 + C41774 * C152747) * C6341 +
             ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
                C152620 -
            ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
                C152613 -
            (((C35238 + C35239) * C152747 + (C32311 + C32310) * C152845) *
                 C152462 +
             (C44685 * C152747 + (C32309 + C32308) * C152845) * C6341) *
                C5033) *
               C3355 +
           (((C40546 * C152845 + C40557 * C152747) * C6341 +
             (C40558 * C152845 + C32011 * C152747) * C152462) *
                C152613 -
            (((C34168 + C34169) * C152747 + C41775 * C152845) * C152462 +
             (C43277 * C152747 + C41765 * C152845) * C6341) *
                C152620 +
            ((C44684 * C152845 + (C42619 + C42618) * C152747) * C6341 +
             ((C35239 + C35238) * C152845 +
              (C31627 * C1733 - C31628 * C1711 - C31627 * C1734 +
               C152846 * C1747 + C31629 * C10024 - C31630 * C10023 -
               C31629 * C10025 + C152775 * C10026) *
                  C152747) *
                 C152462) *
                C5033) *
               C152575) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C152845 +
              (C40568 + C40569) * C152747) *
                 C6341 +
             ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
                C4361 -
            ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C152845) *
                 C6341) *
                C152617) *
               C3355 +
           ((((C41781 + C41780) * C152845 + (C42616 + C42617) * C152747) *
                 C6341 +
             (C41774 * C152845 + C43268 * C152747) * C152462) *
                C152617 -
            ((C40547 * C152747 + C40548 * C152845) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                 C6341) *
                C4361) *
               C152575) *
              C152914 +
          (((((C32307 + C32306) * C152845 + C41774 * C152747) * C6341 +
             ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
                C152617 -
            ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
                C4361) *
               C3355 +
           (((C40546 * C152845 + C40557 * C152747) * C6341 +
             (C40558 * C152845 + C32011 * C152747) * C152462) *
                C4361 -
            (((C34168 + C34169) * C152747 + C41775 * C152845) * C152462 +
             (C43277 * C152747 + C41765 * C152845) * C6341) *
                C152617) *
               C152575) *
              C152897 +
          ((((C31702 * C152845 + C40558 * C152747) * C6341 +
             ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
                C4361 -
            (((C33070 + C33071) * C152747 + (C32313 + C32312) * C152845) *
                 C152462 +
             (C41775 * C152747 + C32316 * C152845) * C6341) *
                C152617) *
               C3355 +
           (((C33072 * C152845 + (C34169 + C34168) * C152747) * C6341 +
             ((C33071 + C33070) * C152845 +
              (C31627 * C1721 - C31628 * C1705 - C31627 * C1722 +
               C152846 * C1741 + C31629 * C1735 - C31630 * C1712 -
               C31629 * C1736 + C152775 * C1748) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C32008 + C32009) * C152747 + C41120 * C152845) * C152462 +
             (C40559 * C152747 + C32010 * C152845) * C6341) *
                C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C4361 -
           ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152845) *
                C6341) *
               C152617) *
              C152924 +
          ((((C41781 + C41780) * C152845 + (C42616 + C42617) * C152747) *
                C6341 +
            (C41774 * C152845 + C43268 * C152747) * C152462) *
               C152617 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C4361) *
              C152920 +
          ((((C40571 + C40570) * C152845 + (C42270 + C42271) * C152747) *
                C6341 +
            (C40557 * C152845 + C42880 * C152747) * C152462) *
               C4361 -
           (((C43282 + C43283) * C152747 + C43277 * C152845) * C152462 +
            ((C43554 + C43555) * C152747 + (C42617 + C42616) * C152845) *
                C6341) *
               C152617) *
              C152906 +
          ((((C43555 + C43554) * C152845 +
             (C31627 * C8189 - C31628 * C8180 - C31627 * C8190 +
              C152846 * C8198 + C31629 * C8191 - C31630 * C8181 -
              C31629 * C8192 + C152775 * C8199) *
                 C152747) *
                C6341 +
            ((C43283 + C43282) * C152845 +
             (C31627 * C8187 - C31628 * C8179 - C31627 * C8188 +
              C152846 * C8197 + C31629 * C8193 - C31630 * C8182 -
              C31629 * C8194 + C152775 * C8200) *
                 C152747) *
                C152462) *
               C152617 -
           (((C42272 + C42273) * C152747 + C42881 * C152845) * C152462 +
            ((C42274 + C42275) * C152747 + (C42271 + C42270) * C152845) *
                C6341) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152530 * C1879 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C152530 * C1880 +
           (((C40571 + C40570) * C152845 + (C42270 + C42271) * C152747) *
                C6341 +
            (C40557 * C152845 + C42880 * C152747) * C152462) *
               C152530 * C1881 -
           (((C42272 + C42273) * C152747 + C42881 * C152845) * C152462 +
            ((C42274 + C42275) * C152747 + (C42271 + C42270) * C152845) *
                C6341) *
               C152530 * C152880) *
              C152814 +
          (((C40546 * C152845 + C40557 * C152747) * C6341 +
            (C40558 * C152845 + C32011 * C152747) * C152462) *
               C152530 * C1880 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C152530 * C1879 -
           (((C33850 + C33851) * C152747 + C40559 * C152845) * C152462 +
            (C42881 * C152747 + C40547 * C152845) * C6341) *
               C152530 * C1881 +
           ((C42880 * C152845 + (C42273 + C42272) * C152747) * C6341 +
            ((C33851 + C33850) * C152845 +
             (C31627 * C1543 - C31628 * C1529 - C31627 * C1544 +
              C152846 * C1553 + C31629 * C8728 - C31630 * C8727 -
              C31629 * C8729 + C152775 * C8730) *
                 C152747) *
                C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152530 * C152828 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C152530 * C152575) *
              C873 +
          (((C40546 * C152845 + C40557 * C152747) * C6341 +
            (C40558 * C152845 + C32011 * C152747) * C152462) *
               C152530 * C152575 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C152530 * C152828) *
              C874 +
          (((C31702 * C152845 + C40558 * C152747) * C6341 +
            ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
               C152530 * C152828 -
           (((C32008 + C32009) * C152747 + C41120 * C152845) * C152462 +
            (C40559 * C152747 + C32010 * C152845) * C6341) *
               C152530 * C152575) *
              C875 +
          (((C32514 * C152845 + (C32009 + C32008) * C152747) * C6341 +
            ((C32529 + C32528) * C152845 +
             (C31627 * C398 - C31628 * C377 - C31627 * C399 + C152846 * C413 +
              C31629 * C2108 - C31630 * C2107 - C31629 * C2109 +
              C152775 * C2110) *
                 C152747) *
                C152462) *
               C152530 * C152575 -
           (((C32528 + C32529) * C152747 + (C31699 + C31698) * C152845) *
                C152462 +
            (C41120 * C152747 + C31703 * C152845) * C6341) *
               C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C152845 +
              (C40568 + C40569) * C152747) *
                 C6341 +
             ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
                C2427 -
            ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C152845) *
                 C6341) *
                C2428 +
            (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
               C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
               C152775 * C2690) *
                  C152845 +
              (C42614 + C42615) * C152747) *
                 C6341 +
             ((C32308 + C32309) * C152845 + C44684 * C152747) * C152462) *
                C152873) *
               C152828 +
           ((((C41781 + C41780) * C152845 + (C42616 + C42617) * C152747) *
                 C6341 +
             (C41774 * C152845 + C43268 * C152747) * C152462) *
                C2428 -
            ((C40547 * C152747 + C40548 * C152845) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                 C6341) *
                C2427 -
            (((C42618 + C42619) * C152747 + C44685 * C152845) * C152462 +
             ((C42620 + C42621) * C152747 + (C42615 + C42614) * C152845) *
                 C6341) *
                C152873) *
               C152575) *
              C152814 +
          (((((C32307 + C32306) * C152845 + C41774 * C152747) * C6341 +
             ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
                C2428 -
            ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
                C2427 -
            (((C35238 + C35239) * C152747 + (C32311 + C32310) * C152845) *
                 C152462 +
             (C44685 * C152747 + (C32309 + C32308) * C152845) * C6341) *
                C152873) *
               C152828 +
           (((C40546 * C152845 + C40557 * C152747) * C6341 +
             (C40558 * C152845 + C32011 * C152747) * C152462) *
                C2427 -
            (((C34168 + C34169) * C152747 + C41775 * C152845) * C152462 +
             (C43277 * C152747 + C41765 * C152845) * C6341) *
                C2428 +
            ((C44684 * C152845 + (C42619 + C42618) * C152747) * C6341 +
             ((C35239 + C35238) * C152845 +
              (C31627 * C1733 - C31628 * C1711 - C31627 * C1734 +
               C152846 * C1747 + C31629 * C10024 - C31630 * C10023 -
               C31629 * C10025 + C152775 * C10026) *
                  C152747) *
                 C152462) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152829 -
           ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152845) *
                C6341) *
               C152617) *
              C1879 +
          ((((C41781 + C41780) * C152845 + (C42616 + C42617) * C152747) *
                C6341 +
            (C41774 * C152845 + C43268 * C152747) * C152462) *
               C152617 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C152829) *
              C1880 +
          ((((C40571 + C40570) * C152845 + (C42270 + C42271) * C152747) *
                C6341 +
            (C40557 * C152845 + C42880 * C152747) * C152462) *
               C152829 -
           (((C43282 + C43283) * C152747 + C43277 * C152845) * C152462 +
            ((C43554 + C43555) * C152747 + (C42617 + C42616) * C152845) *
                C6341) *
               C152617) *
              C1881 +
          ((((C43555 + C43554) * C152845 +
             (C31627 * C8189 - C31628 * C8180 - C31627 * C8190 +
              C152846 * C8198 + C31629 * C8191 - C31630 * C8181 -
              C31629 * C8192 + C152775 * C8199) *
                 C152747) *
                C6341 +
            ((C43283 + C43282) * C152845 +
             (C31627 * C8187 - C31628 * C8179 - C31627 * C8188 +
              C152846 * C8197 + C31629 * C8193 - C31630 * C8182 -
              C31629 * C8194 + C152775 * C8200) *
                 C152747) *
                C152462) *
               C152617 -
           (((C42272 + C42273) * C152747 + C42881 * C152845) * C152462 +
            ((C42274 + C42275) * C152747 + (C42271 + C42270) * C152845) *
                C6341) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C152845 +
              (C40568 + C40569) * C152747) *
                 C6341 +
             ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
                C152829 -
            ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C152845) *
                 C6341) *
                C152617) *
               C152828 +
           ((((C41781 + C41780) * C152845 +
              (C31627 * C1727 - C31628 * C1708 - C31627 * C1728 +
               C152846 * C1744 + C31629 * C1729 - C31630 * C1709 -
               C31629 * C1730 + C152775 * C1745) *
                  C152747) *
                 C6341 +
             (C41774 * C152845 + (C34171 + C34170) * C152747) * C152462) *
                C152617 -
            ((C40547 * C152747 + C40548 * C152845) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                 C6341) *
                C152829) *
               C152575) *
              C365 +
          (((((C32307 + C32306) * C152845 + C41774 * C152747) * C6341 +
             ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
                C152617 -
            ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
                C152829) *
               C152828 +
           (((C40546 * C152845 + C40557 * C152747) * C6341 +
             (C40558 * C152845 + C32011 * C152747) * C152462) *
                C152829 -
            (((C34168 + C34169) * C152747 + C41775 * C152845) * C152462 +
             ((C34170 + C34171) * C152747 + C41765 * C152845) * C6341) *
                C152617) *
               C152575) *
              C366 +
          ((((C31702 * C152845 + C40558 * C152747) * C6341 +
             ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
                C152829 -
            (((C33070 + C33071) * C152747 + (C32313 + C32312) * C152845) *
                 C152462 +
             (C41775 * C152747 + C32316 * C152845) * C6341) *
                C152617) *
               C152828 +
           (((C33072 * C152845 + (C34169 + C34168) * C152747) * C6341 +
             ((C33071 + C33070) * C152845 +
              (C31627 * C1721 - C31628 * C1705 - C31627 * C1722 +
               C152846 * C1741 + C31629 * C1735 - C31630 * C1712 -
               C31629 * C1736 + C152775 * C1748) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C32008 + C32009) * C152747 + C41120 * C152845) * C152462 +
             (C40559 * C152747 + C32010 * C152845) * C6341) *
                C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C3047 -
           ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152845) *
                C6341) *
               C3048 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C152845 +
             (C42614 + C42615) * C152747) *
                C6341 +
            ((C32308 + C32309) * C152845 + C44684 * C152747) * C152462) *
               C3049 -
           (((C44956 + C44957) * C152747 + (C35462 + C35463) * C152845) *
                C152462 +
            ((C45228 + C45229) * C152747 +
             (C31629 * C2679 - C31630 * C2667 - C31629 * C2680 +
              C152775 * C2691 + C31627 * C2677 - C31628 * C2666 -
              C31627 * C2678 + C152846 * C2690) *
                 C152845) *
                C6341) *
               C152886) *
              C152828 +
          ((((C41781 + C41780) * C152845 + (C42616 + C42617) * C152747) *
                C6341 +
            (C41774 * C152845 + C43268 * C152747) * C152462) *
               C3048 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C3047 -
           (((C42618 + C42619) * C152747 + C44685 * C152845) * C152462 +
            ((C42620 + C42621) * C152747 + (C42615 + C42614) * C152845) *
                C6341) *
               C3049 +
           (((C45229 + C45228) * C152845 +
             (C31627 * C9516 - C31628 * C9509 - C31627 * C9517 +
              C152846 * C9527 + C31629 * C9520 - C31630 * C9511 -
              C31629 * C9521 + C152775 * C9529) *
                 C152747) *
                C6341 +
            ((C44957 + C44956) * C152845 +
             (C31627 * C9514 - C31628 * C9508 - C31627 * C9515 +
              C152846 * C9526 + C31629 * C9524 - C31630 * C9513 -
              C31629 * C9525 + C152775 * C9531) *
                 C152747) *
                C152462) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C31627 * C144 - C31628 * C136 - C31627 * C145 +
                 C152846 * C160 + C31629 * C647 - C31630 * C632 -
                 C31629 * C648 + C152775 * C668) *
                    C152845 +
                (C31627 * C386 - C31628 * C371 - C31627 * C387 +
                 C152846 * C407 + C31629 * C1233 - C31630 * C1227 -
                 C31629 * C1234 + C152775 * C1245) *
                    C152747) *
                   C6341 +
               ((C31692 + C31693) * C152845 + (C32001 + C32000) * C152747) *
                   C152462) *
                  C152530 * C152512 * C129 -
              ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
               ((C32000 + C32001) * C152747 + (C31693 + C31692) * C152845) *
                   C6341) *
                  C152530 * C152512 * C130 +
              ((C31702 * C152845 + (C31999 + C31998) * C152747) * C6341 +
               ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
                  C152530 * C152512 * C131 -
              (((C32528 + C32529) * C152747 + (C31699 + C31698) * C152845) *
                   C152462 +
               ((C32007 + C32006) * C152747 + C31703 * C152845) * C6341) *
                  C152530 * C152512 * C132 +
              ((C31704 * C152845 + (C32529 + C32528) * C152747) * C6341 +
               ((C31701 + C31700) * C152845 +
                (C31627 * C400 - C31628 * C378 - C31627 * C401 +
                 C152846 * C414 + C31629 * C1243 - C31630 * C1232 -
                 C31629 * C1244 + C152775 * C1250) *
                    C152747) *
                   C152462) *
                  C152530 * C152512 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C31627 * C144 - C31628 * C136 - C31627 * C145 +
                  C152846 * C160 + C31629 * C647 - C31630 * C632 -
                  C31629 * C648 + C152775 * C668) *
                     C152845 +
                 (C40568 + C40569) * C152747) *
                    C6341 +
                ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
                   C152530 * C152917 -
               ((C40547 * C152747 + C40548 * C152845) * C152462 +
                ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                    C6341) *
                   C152530 * C152901 +
               (((C40571 + C40570) * C152845 +
                 (C31627 * C1537 - C31628 * C1526 - C31627 * C1538 +
                  C152846 * C1550 + C31629 * C2269 - C31630 * C2265 -
                  C31629 * C2270 + C152775 * C2277) *
                     C152747) *
                    C6341 +
                (C40557 * C152845 + (C33853 + C33852) * C152747) * C152462) *
                   C152530 * C152870) *
                  C365 +
              (((C40546 * C152845 + C40557 * C152747) * C6341 +
                (C40558 * C152845 + C32011 * C152747) * C152462) *
                   C152530 * C152901 -
               ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
                (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
                   C152530 * C152917 -
               (((C33850 + C33851) * C152747 + C40559 * C152845) * C152462 +
                ((C33852 + C33853) * C152747 + C40547 * C152845) * C6341) *
                   C152530 * C152870) *
                  C366 +
              (((C31702 * C152845 + C40558 * C152747) * C6341 +
                ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
                   C152530 * C152917 -
               (((C32008 + C32009) * C152747 + (C32007 + C32006) * C152845) *
                    C152462 +
                (C40559 * C152747 + C32010 * C152845) * C6341) *
                   C152530 * C152901 +
               ((C32011 * C152845 + (C33851 + C33850) * C152747) * C6341 +
                ((C32009 + C32008) * C152845 +
                 (C31627 * C1531 - C31628 * C1523 - C31627 * C1532 +
                  C152846 * C1547 + C31629 * C2275 - C31630 * C2268 -
                  C31629 * C2276 + C152775 * C2280) *
                     C152747) *
                    C152462) *
                   C152530 * C152870) *
                  C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152918 -
           (((C33067 + C33066) * C152747 + (C32306 + C32307) * C152845) *
                C152462 +
            ((C31629 * C1719 - C31630 * C1704 - C31629 * C1720 +
              C152775 * C1740 + C31627 * C1233 - C31628 * C1227 -
              C31627 * C1234 + C152846 * C1245) *
                 C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152845) *
                C6341) *
               C152903 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C152845 +
             (C31627 * C1719 - C31628 * C1704 - C31627 * C1720 +
              C152846 * C1740 + C31629 * C3213 - C31630 * C3209 -
              C31629 * C3214 + C152775 * C3221) *
                 C152747) *
                C6341 +
            ((C32308 + C32309) * C152845 + (C35241 + C35240) * C152747) *
                C152462) *
               C152873) *
              C152512 * C365 +
          ((((C32307 + C32306) * C152845 + (C33066 + C33067) * C152747) *
                C6341 +
            ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
               C152903 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C152918 -
           (((C35238 + C35239) * C152747 + (C32311 + C32310) * C152845) *
                C152462 +
            ((C35240 + C35241) * C152747 + (C32309 + C32308) * C152845) *
                C6341) *
               C152873) *
              C152512 * C366 +
          (((C31702 * C152845 + C40558 * C152747) * C6341 +
            ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
               C152918 -
           (((C33070 + C33071) * C152747 + (C32313 + C32312) * C152845) *
                C152462 +
            ((C33069 + C33068) * C152747 + C32316 * C152845) * C6341) *
               C152903 +
           ((C32317 * C152845 + (C35239 + C35238) * C152747) * C6341 +
            ((C32315 + C32314) * C152845 +
             (C31627 * C1713 - C31628 * C1701 - C31627 * C1714 +
              C152846 * C1737 + C31629 * C3219 - C31630 * C3212 -
              C31629 * C3220 + C152775 * C3224) *
                 C152747) *
                C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152530 * C1429 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C152530 * C1430 +
           (((C40571 + C40570) * C152845 +
             (C31627 * C1537 - C31628 * C1526 - C31627 * C1538 +
              C152846 * C1550 + C31629 * C2269 - C31630 * C2265 -
              C31629 * C2270 + C152775 * C2277) *
                 C152747) *
                C6341 +
            (C40557 * C152845 + (C33853 + C33852) * C152747) * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C40546 * C152845 + C40557 * C152747) * C6341 +
            (C40558 * C152845 + C32011 * C152747) * C152462) *
               C152530 * C1430 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C152530 * C1429 -
           (((C33850 + C33851) * C152747 + C40559 * C152845) * C152462 +
            ((C33852 + C33853) * C152747 + C40547 * C152845) * C6341) *
               C152530 * C152870) *
              C152897 +
          (((C31702 * C152845 + C40558 * C152747) * C6341 +
            ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
               C152530 * C1429 -
           (((C32008 + C32009) * C152747 + C41120 * C152845) * C152462 +
            (C40559 * C152747 + C32010 * C152845) * C6341) *
               C152530 * C1430 +
           ((C32011 * C152845 + (C33851 + C33850) * C152747) * C6341 +
            ((C32009 + C32008) * C152845 +
             (C31627 * C1531 - C31628 * C1523 - C31627 * C1532 +
              C152846 * C1547 + C31629 * C2275 - C31630 * C2268 -
              C31629 * C2276 + C152775 * C2280) *
                 C152747) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152845 +
            (C40568 + C40569) * C152747) *
               C6341 +
           ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
              C152530 * C1517 -
          ((C40547 * C152747 + C40548 * C152845) * C152462 +
           ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
               C6341) *
              C152530 * C1518 +
          (((C40571 + C40570) * C152845 + (C42270 + C42271) * C152747) * C6341 +
           (C40557 * C152845 + (C33853 + C33852) * C152747) * C152462) *
              C152530 * C1519 -
          (((C42272 + C42273) * C152747 + (C33852 + C33853) * C152845) *
               C152462 +
           ((C42274 + C42275) * C152747 + (C42271 + C42270) * C152845) *
               C6341) *
              C152530 * C1520 +
          (((C42275 + C42274) * C152845 +
            (C31627 * C7928 - C31628 * C7923 - C31627 * C7929 +
             C152846 * C7935 + C31629 * C8937 - C31630 * C8935 -
             C31629 * C8938 + C152775 * C8941) *
                C152747) *
               C6341 +
           ((C42273 + C42272) * C152845 +
            (C31627 * C7926 - C31628 * C7922 - C31627 * C7927 +
             C152846 * C7934 + C31629 * C8939 - C31630 * C8936 -
             C31629 * C8940 + C152775 * C8942) *
                C152747) *
               C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152918 -
           ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152845) *
                C6341) *
               C152903 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C152845 +
             (C42614 + C42615) * C152747) *
                C6341 +
            ((C32308 + C32309) * C152845 + (C35241 + C35240) * C152747) *
                C152462) *
               C152873) *
              C1429 +
          ((((C41781 + C41780) * C152845 + (C42616 + C42617) * C152747) *
                C6341 +
            (C41774 * C152845 + (C34171 + C34170) * C152747) * C152462) *
               C152903 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C152918 -
           (((C42618 + C42619) * C152747 + (C35240 + C35241) * C152845) *
                C152462 +
            ((C42620 + C42621) * C152747 + (C42615 + C42614) * C152845) *
                C6341) *
               C152873) *
              C1430 +
          ((((C40571 + C40570) * C152845 + (C42270 + C42271) * C152747) *
                C6341 +
            (C40557 * C152845 + (C33853 + C33852) * C152747) * C152462) *
               C152918 -
           (((C31629 * C8183 - C31630 * C8177 - C31629 * C8184 +
              C152775 * C8195 + C31627 * C2271 - C31628 * C2266 -
              C31627 * C2272 + C152846 * C2278) *
                 C152747 +
             (C34170 + C34171) * C152845) *
                C152462 +
            ((C31629 * C8185 - C31630 * C8178 - C31629 * C8186 +
              C152775 * C8196 + C31627 * C2269 - C31628 * C2265 -
              C31627 * C2270 + C152846 * C2277) *
                 C152747 +
             (C42617 + C42616) * C152845) *
                C6341) *
               C152903 +
           (((C42621 + C42620) * C152845 +
             (C31627 * C8185 - C31628 * C8178 - C31627 * C8186 +
              C152846 * C8196 + C31629 * C10240 - C31630 * C10238 -
              C31629 * C10241 + C152775 * C10244) *
                 C152747) *
                C6341 +
            ((C42619 + C42618) * C152845 +
             (C31627 * C8183 - C31628 * C8177 - C31627 * C8184 +
              C152846 * C8195 + C31629 * C10242 - C31630 * C10239 -
              C31629 * C10243 + C152775 * C10245) *
                 C152747) *
                C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C2427 -
           ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152845) *
                C6341) *
               C2428 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C152845 +
             (C42614 + C42615) * C152747) *
                C6341 +
            ((C32308 + C32309) * C152845 + (C35241 + C35240) * C152747) *
                C152462) *
               C152873) *
              C152512 * C152914 +
          ((((C32307 + C32306) * C152845 + C41774 * C152747) * C6341 +
            ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
               C2428 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C2427 -
           (((C35238 + C35239) * C152747 + (C32311 + C32310) * C152845) *
                C152462 +
            ((C35240 + C35241) * C152747 + (C32309 + C32308) * C152845) *
                C6341) *
               C152873) *
              C152512 * C152897 +
          (((C31702 * C152845 + C40558 * C152747) * C6341 +
            ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
               C2427 -
           (((C33070 + C33071) * C152747 + (C32313 + C32312) * C152845) *
                C152462 +
            (C41775 * C152747 + C32316 * C152845) * C6341) *
               C2428 +
           ((C32317 * C152845 + (C35239 + C35238) * C152747) * C6341 +
            ((C32315 + C32314) * C152845 +
             (C31627 * C1713 - C31628 * C1701 - C31627 * C1714 +
              C152846 * C1737 + C31629 * C3219 - C31630 * C3212 -
              C31629 * C3220 + C152775 * C3224) *
                 C152747) *
                C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C2427 -
           ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152845) *
                C6341) *
               C2428 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C152845 +
             (C42614 + C42615) * C152747) *
                C6341 +
            ((C32308 + C32309) * C152845 + (C35241 + C35240) * C152747) *
                C152462) *
               C152873) *
              C152917 +
          ((((C41781 + C41780) * C152845 + (C42616 + C42617) * C152747) *
                C6341 +
            (C41774 * C152845 + C43268 * C152747) * C152462) *
               C2428 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C2427 -
           (((C42618 + C42619) * C152747 + (C35240 + C35241) * C152845) *
                C152462 +
            ((C42620 + C42621) * C152747 + (C42615 + C42614) * C152845) *
                C6341) *
               C152873) *
              C152901 +
          ((((C40571 + C40570) * C152845 + (C42270 + C42271) * C152747) *
                C6341 +
            (C40557 * C152845 + C42880 * C152747) * C152462) *
               C2427 -
           (((C43282 + C43283) * C152747 + C43277 * C152845) * C152462 +
            ((C43554 + C43555) * C152747 + (C42617 + C42616) * C152845) *
                C6341) *
               C2428 +
           (((C42621 + C42620) * C152845 +
             (C31627 * C8185 - C31628 * C8178 - C31627 * C8186 +
              C152846 * C8196 + C31629 * C10240 - C31630 * C10238 -
              C31629 * C10241 + C152775 * C10244) *
                 C152747) *
                C6341 +
            ((C42619 + C42618) * C152845 +
             (C31627 * C8183 - C31628 * C8177 - C31627 * C8184 +
              C152846 * C8195 + C31629 * C10242 - C31630 * C10239 -
              C31629 * C10243 + C152775 * C10245) *
                 C152747) *
                C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152845 +
            (C40568 + C40569) * C152747) *
               C6341 +
           ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
              C2658 -
          ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
           ((C41780 + C41781) * C152747 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152845) *
               C6341) *
              C2659 +
          (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152845 +
            (C42614 + C42615) * C152747) *
               C6341 +
           ((C32308 + C32309) * C152845 + (C35241 + C35240) * C152747) *
               C152462) *
              C2660 -
          (((C31629 * C9522 - C31630 * C9512 - C31629 * C9523 +
             C152775 * C9530 + C31627 * C3215 - C31628 * C3210 -
             C31627 * C3216 + C152846 * C3222) *
                C152747 +
            (C35462 + C35463) * C152845) *
               C152462 +
           ((C31629 * C9518 - C31630 * C9510 - C31629 * C9519 +
             C152775 * C9528 + C31627 * C3213 - C31628 * C3209 -
             C31627 * C3214 + C152846 * C3221) *
                C152747 +
            (C31629 * C2679 - C31630 * C2667 - C31629 * C2680 +
             C152775 * C2691 + C31627 * C2677 - C31628 * C2666 -
             C31627 * C2678 + C152846 * C2690) *
                C152845) *
               C6341) *
              C2661 +
          (((C31627 * C2679 - C31628 * C2667 - C31627 * C2680 +
             C152846 * C2691 + C31629 * C18111 - C31630 * C18106 -
             C31629 * C18112 + C152775 * C18118) *
                C152845 +
            (C31627 * C9518 - C31628 * C9510 - C31627 * C9519 +
             C152846 * C9528 + C31629 * C18851 - C31630 * C18849 -
             C31629 * C18852 + C152775 * C18855) *
                C152747) *
               C6341 +
           ((C31627 * C2681 - C31628 * C2668 - C31627 * C2682 +
             C152846 * C2692 + C31629 * C18109 - C31630 * C18105 -
             C31629 * C18110 + C152775 * C18117) *
                C152845 +
            (C31627 * C9522 - C31628 * C9512 - C31627 * C9523 +
             C152846 * C9530 + C31629 * C18853 - C31630 * C18850 -
             C31629 * C18854 + C152775 * C18856) *
                C152747) *
               C152462) *
              C2662) *
         C152512 * C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C152845 +
              (C40568 + C40569) * C152747) *
                 C6341 +
             ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
                C152829 -
            ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C152845) *
                 C6341) *
                C152617) *
               C1429 +
           ((((C41781 + C41780) * C152845 + (C42616 + C42617) * C152747) *
                 C6341 +
             (C41774 * C152845 + C43268 * C152747) * C152462) *
                C152617 -
            ((C40547 * C152747 + C40548 * C152845) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                 C6341) *
                C152829) *
               C1430 +
           ((((C40571 + C40570) * C152845 + (C42270 + C42271) * C152747) *
                 C6341 +
             (C40557 * C152845 + C42880 * C152747) * C152462) *
                C152829 -
            (((C43282 + C43283) * C152747 + C43277 * C152845) * C152462 +
             ((C31629 * C8185 - C31630 * C8178 - C31629 * C8186 +
               C152775 * C8196 + C31627 * C2269 - C31628 * C2265 -
               C31627 * C2270 + C152846 * C2277) *
                  C152747 +
              (C42617 + C42616) * C152845) *
                 C6341) *
                C152617) *
               C152870) *
              C152814 +
          (((((C32307 + C32306) * C152845 + C41774 * C152747) * C6341 +
             ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
                C152617 -
            ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
                C152829) *
               C1429 +
           (((C40546 * C152845 + C40557 * C152747) * C6341 +
             (C40558 * C152845 + C32011 * C152747) * C152462) *
                C152829 -
            (((C34168 + C34169) * C152747 + C41775 * C152845) * C152462 +
             (C43277 * C152747 + C41765 * C152845) * C6341) *
                C152617) *
               C1430 +
           (((C43268 * C152845 + (C43283 + C43282) * C152747) * C6341 +
             ((C34169 + C34168) * C152845 +
              (C31627 * C2273 - C31628 * C2267 - C31627 * C2274 +
               C152846 * C2279 + C31629 * C9823 - C31630 * C9822 -
               C31629 * C9824 + C152775 * C9825) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C33850 + C33851) * C152747 + C40559 * C152845) * C152462 +
             (C42881 * C152747 + C40547 * C152845) * C6341) *
                C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152829 -
           (((C33067 + C33066) * C152747 + (C32306 + C32307) * C152845) *
                C152462 +
            ((C31629 * C1719 - C31630 * C1704 - C31629 * C1720 +
              C152775 * C1740 + C31627 * C1233 - C31628 * C1227 -
              C31627 * C1234 + C152846 * C1245) *
                 C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152845) *
                C6341) *
               C152617) *
              C152512 * C873 +
          ((((C32307 + C32306) * C152845 + (C33066 + C33067) * C152747) *
                C6341 +
            ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
               C152617 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C152829) *
              C152512 * C874 +
          (((C31702 * C152845 + C40558 * C152747) * C6341 +
            ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
               C152829 -
           (((C33070 + C33071) * C152747 + (C32313 + C32312) * C152845) *
                C152462 +
            ((C33069 + C33068) * C152747 + C32316 * C152845) * C6341) *
               C152617) *
              C152512 * C875 +
          (((C32724 * C152845 + (C33071 + C33070) * C152747) * C6341 +
            ((C32739 + C32738) * C152845 +
             (C31627 * C1241 - C31628 * C1231 - C31627 * C1242 +
              C152846 * C1249 + C31629 * C2890 - C31630 * C2889 -
              C31629 * C2891 + C152775 * C2892) *
                 C152747) *
                C152462) *
               C152617 -
           (((C32528 + C32529) * C152747 + (C31699 + C31698) * C152845) *
                C152462 +
            (C41120 * C152747 + C31703 * C152845) * C6341) *
               C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C3047 -
           ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152845) *
                C6341) *
               C3048 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C152845 +
             (C42614 + C42615) * C152747) *
                C6341 +
            ((C32308 + C32309) * C152845 + C44684 * C152747) * C152462) *
               C3049 -
           (((C44956 + C44957) * C152747 + (C35462 + C35463) * C152845) *
                C152462 +
            ((C31629 * C9518 - C31630 * C9510 - C31629 * C9519 +
              C152775 * C9528 + C31627 * C3213 - C31628 * C3209 -
              C31627 * C3214 + C152846 * C3221) *
                 C152747 +
             (C31629 * C2679 - C31630 * C2667 - C31629 * C2680 +
              C152775 * C2691 + C31627 * C2677 - C31628 * C2666 -
              C31627 * C2678 + C152846 * C2690) *
                 C152845) *
                C6341) *
               C152886) *
              C152512 * C152814 +
          ((((C32307 + C32306) * C152845 + C41774 * C152747) * C6341 +
            ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
               C3048 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C3047 -
           (((C35238 + C35239) * C152747 + (C32311 + C32310) * C152845) *
                C152462 +
            (C44685 * C152747 + (C32309 + C32308) * C152845) * C6341) *
               C3049 +
           (((C35463 + C35462) * C152845 + (C44957 + C44956) * C152747) *
                C6341 +
            ((C35461 + C35460) * C152845 +
             (C31627 * C3217 - C31628 * C3211 - C31627 * C3218 +
              C152846 * C3223 + C31629 * C18412 - C31630 * C18411 -
              C31629 * C18413 + C152775 * C18414) *
                 C152747) *
                C152462) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152530 * C152917 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C152530 * C152901 +
           (((C40571 + C40570) * C152845 +
             (C31627 * C1537 - C31628 * C1526 - C31627 * C1538 +
              C152846 * C1550 + C31629 * C2269 - C31630 * C2265 -
              C31629 * C2270 + C152775 * C2277) *
                 C152747) *
                C6341 +
            (C40557 * C152845 + (C33853 + C33852) * C152747) * C152462) *
               C152530 * C152870) *
              C365 +
          (((C40546 * C152845 + C40557 * C152747) * C6341 +
            (C40558 * C152845 + C32011 * C152747) * C152462) *
               C152530 * C152901 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C152530 * C152917 -
           (((C33850 + C33851) * C152747 + C40559 * C152845) * C152462 +
            ((C33852 + C33853) * C152747 + C40547 * C152845) * C6341) *
               C152530 * C152870) *
              C366 +
          (((C31702 * C152845 + C40558 * C152747) * C6341 +
            ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
               C152530 * C152917 -
           (((C32008 + C32009) * C152747 + (C32007 + C32006) * C152845) *
                C152462 +
            (C40559 * C152747 + C32010 * C152845) * C6341) *
               C152530 * C152901 +
           ((C32011 * C152845 + (C33851 + C33850) * C152747) * C6341 +
            ((C32009 + C32008) * C152845 +
             (C31627 * C1531 - C31628 * C1523 - C31627 * C1532 +
              C152846 * C1547 + C31629 * C2275 - C31630 * C2268 -
              C31629 * C2276 + C152775 * C2280) *
                 C152747) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152845 +
            (C31627 * C386 - C31628 * C371 - C31627 * C387 + C152846 * C407 +
             C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245) *
                C152747) *
               C6341 +
           ((C31692 + C31693) * C152845 + (C32001 + C32000) * C152747) *
               C152462) *
              C152530 * C152512 * C129 -
          ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
           ((C32000 + C32001) * C152747 + (C31693 + C31692) * C152845) *
               C6341) *
              C152530 * C152512 * C130 +
          ((C31702 * C152845 + (C31999 + C31998) * C152747) * C6341 +
           ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
              C152530 * C152512 * C131 -
          (((C32528 + C32529) * C152747 + (C31699 + C31698) * C152845) *
               C152462 +
           ((C32007 + C32006) * C152747 + C31703 * C152845) * C6341) *
              C152530 * C152512 * C132 +
          ((C31704 * C152845 + (C32529 + C32528) * C152747) * C6341 +
           ((C31701 + C31700) * C152845 +
            (C31627 * C400 - C31628 * C378 - C31627 * C401 + C152846 * C414 +
             C31629 * C1243 - C31630 * C1232 - C31629 * C1244 +
             C152775 * C1250) *
                C152747) *
               C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152530 * C1429 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C152530 * C1430 +
           (((C40571 + C40570) * C152845 +
             (C31627 * C1537 - C31628 * C1526 - C31627 * C1538 +
              C152846 * C1550 + C31629 * C2269 - C31630 * C2265 -
              C31629 * C2270 + C152775 * C2277) *
                 C152747) *
                C6341 +
            (C40557 * C152845 + (C33853 + C33852) * C152747) * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C40546 * C152845 + C40557 * C152747) * C6341 +
            (C40558 * C152845 + C32011 * C152747) * C152462) *
               C152530 * C1430 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C152530 * C1429 -
           (((C33850 + C33851) * C152747 + C40559 * C152845) * C152462 +
            ((C33852 + C33853) * C152747 + C40547 * C152845) * C6341) *
               C152530 * C152870) *
              C152897 +
          (((C31702 * C152845 + C40558 * C152747) * C6341 +
            ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
               C152530 * C1429 -
           (((C32008 + C32009) * C152747 + C41120 * C152845) * C152462 +
            (C40559 * C152747 + C32010 * C152845) * C6341) *
               C152530 * C1430 +
           ((C32011 * C152845 + (C33851 + C33850) * C152747) * C6341 +
            ((C32009 + C32008) * C152845 +
             (C31627 * C1531 - C31628 * C1523 - C31627 * C1532 +
              C152846 * C1547 + C31629 * C2275 - C31630 * C2268 -
              C31629 * C2276 + C152775 * C2280) *
                 C152747) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152845 +
            (C40568 + C40569) * C152747) *
               C6341 +
           ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
              C152530 * C1517 -
          ((C40547 * C152747 + C40548 * C152845) * C152462 +
           ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
               C6341) *
              C152530 * C1518 +
          (((C40571 + C40570) * C152845 + (C42270 + C42271) * C152747) * C6341 +
           (C40557 * C152845 + (C33853 + C33852) * C152747) * C152462) *
              C152530 * C1519 -
          (((C42272 + C42273) * C152747 + (C33852 + C33853) * C152845) *
               C152462 +
           ((C42274 + C42275) * C152747 + (C42271 + C42270) * C152845) *
               C6341) *
              C152530 * C1520 +
          (((C42275 + C42274) * C152845 +
            (C31627 * C7928 - C31628 * C7923 - C31627 * C7929 +
             C152846 * C7935 + C31629 * C8937 - C31630 * C8935 -
             C31629 * C8938 + C152775 * C8941) *
                C152747) *
               C6341 +
           ((C42273 + C42272) * C152845 +
            (C31627 * C7926 - C31628 * C7922 - C31627 * C7927 +
             C152846 * C7934 + C31629 * C8939 - C31630 * C8936 -
             C31629 * C8940 + C152775 * C8942) *
                C152747) *
               C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C2427 -
           ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152845) *
                C6341) *
               C2428 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C152845 +
             (C42614 + C42615) * C152747) *
                C6341 +
            ((C32308 + C32309) * C152845 + (C35241 + C35240) * C152747) *
                C152462) *
               C152873) *
              C152512 * C152914 +
          ((((C32307 + C32306) * C152845 + C41774 * C152747) * C6341 +
            ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
               C2428 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C2427 -
           (((C35238 + C35239) * C152747 + (C32311 + C32310) * C152845) *
                C152462 +
            ((C35240 + C35241) * C152747 + (C32309 + C32308) * C152845) *
                C6341) *
               C152873) *
              C152512 * C152897 +
          (((C31702 * C152845 + C40558 * C152747) * C6341 +
            ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
               C2427 -
           (((C33070 + C33071) * C152747 + (C32313 + C32312) * C152845) *
                C152462 +
            (C41775 * C152747 + C32316 * C152845) * C6341) *
               C2428 +
           ((C32317 * C152845 + (C35239 + C35238) * C152747) * C6341 +
            ((C32315 + C32314) * C152845 +
             (C31627 * C1713 - C31628 * C1701 - C31627 * C1714 +
              C152846 * C1737 + C31629 * C3219 - C31630 * C3212 -
              C31629 * C3220 + C152775 * C3224) *
                 C152747) *
                C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C2427 -
           ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152845) *
                C6341) *
               C2428 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C152845 +
             (C42614 + C42615) * C152747) *
                C6341 +
            ((C32308 + C32309) * C152845 + (C35241 + C35240) * C152747) *
                C152462) *
               C152873) *
              C152917 +
          ((((C41781 + C41780) * C152845 + (C42616 + C42617) * C152747) *
                C6341 +
            (C41774 * C152845 + C43268 * C152747) * C152462) *
               C2428 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C2427 -
           (((C42618 + C42619) * C152747 + (C35240 + C35241) * C152845) *
                C152462 +
            ((C42620 + C42621) * C152747 + (C42615 + C42614) * C152845) *
                C6341) *
               C152873) *
              C152901 +
          ((((C40571 + C40570) * C152845 + (C42270 + C42271) * C152747) *
                C6341 +
            (C40557 * C152845 + C42880 * C152747) * C152462) *
               C2427 -
           (((C43282 + C43283) * C152747 + C43277 * C152845) * C152462 +
            ((C43554 + C43555) * C152747 + (C42617 + C42616) * C152845) *
                C6341) *
               C2428 +
           (((C42621 + C42620) * C152845 +
             (C31627 * C8185 - C31628 * C8178 - C31627 * C8186 +
              C152846 * C8196 + C31629 * C10240 - C31630 * C10238 -
              C31629 * C10241 + C152775 * C10244) *
                 C152747) *
                C6341 +
            ((C42619 + C42618) * C152845 +
             (C31627 * C8183 - C31628 * C8177 - C31627 * C8184 +
              C152846 * C8195 + C31629 * C10242 - C31630 * C10239 -
              C31629 * C10243 + C152775 * C10245) *
                 C152747) *
                C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C152845 +
              (C40568 + C40569) * C152747) *
                 C6341 +
             ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
                C4361 -
            ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C152845) *
                 C6341) *
                C152617) *
               C152828 +
           ((((C41781 + C41780) * C152845 + (C42616 + C42617) * C152747) *
                 C6341 +
             (C41774 * C152845 + C43268 * C152747) * C152462) *
                C152617 -
            ((C40547 * C152747 + C40548 * C152845) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                 C6341) *
                C4361) *
               C152575) *
              C152489 +
          (((((C32307 + C32306) * C152845 + C41774 * C152747) * C6341 +
             ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
                C152617 -
            ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
                C4361) *
               C152828 +
           (((C40546 * C152845 + C40557 * C152747) * C6341 +
             (C40558 * C152845 + C32011 * C152747) * C152462) *
                C4361 -
            (((C34168 + C34169) * C152747 + C41775 * C152845) * C152462 +
             (C43277 * C152747 + C41765 * C152845) * C6341) *
                C152617) *
               C152575) *
              C152498 +
          ((((C31702 * C152845 + C40558 * C152747) * C6341 +
             ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
                C4361 -
            (((C33070 + C33071) * C152747 + (C32313 + C32312) * C152845) *
                 C152462 +
             (C41775 * C152747 + C32316 * C152845) * C6341) *
                C152617) *
               C152828 +
           (((C33072 * C152845 + (C34169 + C34168) * C152747) * C6341 +
             ((C33071 + C33070) * C152845 +
              (C31627 * C1721 - C31628 * C1705 - C31627 * C1722 +
               C152846 * C1741 + C31629 * C1735 - C31630 * C1712 -
               C31629 * C1736 + C152775 * C1748) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C32008 + C32009) * C152747 + C41120 * C152845) * C152462 +
             (C40559 * C152747 + C32010 * C152845) * C6341) *
                C4361) *
               C152575) *
              C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C152845 +
              (C40568 + C40569) * C152747) *
                 C6341 +
             ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
                C152613 -
            ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C152845) *
                 C6341) *
                C152620 +
            (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
               C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
               C152775 * C2690) *
                  C152845 +
              (C42614 + C42615) * C152747) *
                 C6341 +
             ((C32308 + C32309) * C152845 + C44684 * C152747) * C152462) *
                C5033) *
               C152828 +
           ((((C41781 + C41780) * C152845 + (C42616 + C42617) * C152747) *
                 C6341 +
             (C41774 * C152845 + C43268 * C152747) * C152462) *
                C152620 -
            ((C40547 * C152747 + C40548 * C152845) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                 C6341) *
                C152613 -
            (((C42618 + C42619) * C152747 + C44685 * C152845) * C152462 +
             ((C42620 + C42621) * C152747 + (C42615 + C42614) * C152845) *
                 C6341) *
                C5033) *
               C152575) *
              C3495 +
          (((((C32307 + C32306) * C152845 + C41774 * C152747) * C6341 +
             ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
                C152620 -
            ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
                C152613 -
            (((C35238 + C35239) * C152747 + (C32311 + C32310) * C152845) *
                 C152462 +
             (C44685 * C152747 + (C32309 + C32308) * C152845) * C6341) *
                C5033) *
               C152828 +
           (((C40546 * C152845 + C40557 * C152747) * C6341 +
             (C40558 * C152845 + C32011 * C152747) * C152462) *
                C152613 -
            (((C34168 + C34169) * C152747 + C41775 * C152845) * C152462 +
             (C43277 * C152747 + C41765 * C152845) * C6341) *
                C152620 +
            ((C44684 * C152845 + (C42619 + C42618) * C152747) * C6341 +
             ((C35239 + C35238) * C152845 +
              (C31627 * C1733 - C31628 * C1711 - C31627 * C1734 +
               C152846 * C1747 + C31629 * C10024 - C31630 * C10023 -
               C31629 * C10025 + C152775 * C10026) *
                  C152747) *
                 C152462) *
                C5033) *
               C152575) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C152845 +
              (C40568 + C40569) * C152747) *
                 C6341 +
             ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
                C4361 -
            ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C152845) *
                 C6341) *
                C152617) *
               C152917 +
           ((((C41781 + C41780) * C152845 + (C42616 + C42617) * C152747) *
                 C6341 +
             (C41774 * C152845 + C43268 * C152747) * C152462) *
                C152617 -
            ((C40547 * C152747 + C40548 * C152845) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                 C6341) *
                C4361) *
               C152901 +
           ((((C40571 + C40570) * C152845 + (C42270 + C42271) * C152747) *
                 C6341 +
             (C40557 * C152845 + C42880 * C152747) * C152462) *
                C4361 -
            (((C43282 + C43283) * C152747 + C43277 * C152845) * C152462 +
             ((C43554 + C43555) * C152747 + (C42617 + C42616) * C152845) *
                 C6341) *
                C152617) *
               C152870) *
              C3495 +
          (((((C32307 + C32306) * C152845 + C41774 * C152747) * C6341 +
             ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
                C152617 -
            ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
                C4361) *
               C152917 +
           (((C40546 * C152845 + C40557 * C152747) * C6341 +
             (C40558 * C152845 + C32011 * C152747) * C152462) *
                C4361 -
            (((C34168 + C34169) * C152747 + C41775 * C152845) * C152462 +
             (C43277 * C152747 + C41765 * C152845) * C6341) *
                C152617) *
               C152901 +
           (((C43268 * C152845 + (C43283 + C43282) * C152747) * C6341 +
             ((C34169 + C34168) * C152845 +
              (C31627 * C2273 - C31628 * C2267 - C31627 * C2274 +
               C152846 * C2279 + C31629 * C9823 - C31630 * C9822 -
               C31629 * C9824 + C152775 * C9825) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C33850 + C33851) * C152747 + C40559 * C152845) * C152462 +
             (C42881 * C152747 + C40547 * C152845) * C6341) *
                C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C4361 -
           ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152845) *
                C6341) *
               C152617) *
              C152512 * C152923 +
          ((((C32307 + C32306) * C152845 + C41774 * C152747) * C6341 +
            ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
               C152617 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C4361) *
              C152512 * C152916 +
          (((C31702 * C152845 + C40558 * C152747) * C6341 +
            ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
               C4361 -
           (((C33070 + C33071) * C152747 + (C32313 + C32312) * C152845) *
                C152462 +
            (C41775 * C152747 + C32316 * C152845) * C6341) *
               C152617) *
              C152512 * C152899 +
          (((C32724 * C152845 + (C33071 + C33070) * C152747) * C6341 +
            ((C32739 + C32738) * C152845 +
             (C31627 * C1241 - C31628 * C1231 - C31627 * C1242 +
              C152846 * C1249 + C31629 * C2890 - C31630 * C2889 -
              C31629 * C2891 + C152775 * C2892) *
                 C152747) *
                C152462) *
               C152617 -
           (((C32528 + C32529) * C152747 + (C31699 + C31698) * C152845) *
                C152462 +
            (C41120 * C152747 + C31703 * C152845) * C6341) *
               C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152925 -
           ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152845) *
                C6341) *
               C152922 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C152845 +
             (C42614 + C42615) * C152747) *
                C6341 +
            ((C32308 + C32309) * C152845 + C44684 * C152747) * C152462) *
               C152909 -
           (((C44956 + C44957) * C152747 + (C35462 + C35463) * C152845) *
                C152462 +
            ((C45228 + C45229) * C152747 +
             (C31629 * C2679 - C31630 * C2667 - C31629 * C2680 +
              C152775 * C2691 + C31627 * C2677 - C31628 * C2666 -
              C31627 * C2678 + C152846 * C2690) *
                 C152845) *
                C6341) *
               C152886) *
              C152512 * C3495 +
          ((((C32307 + C32306) * C152845 + C41774 * C152747) * C6341 +
            ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
               C152922 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C152925 -
           (((C35238 + C35239) * C152747 + (C32311 + C32310) * C152845) *
                C152462 +
            (C44685 * C152747 + (C32309 + C32308) * C152845) * C6341) *
               C152909 +
           (((C35463 + C35462) * C152845 + (C44957 + C44956) * C152747) *
                C6341 +
            ((C35461 + C35460) * C152845 +
             (C31627 * C3217 - C31628 * C3211 - C31627 * C3218 +
              C152846 * C3223 + C31629 * C18412 - C31630 * C18411 -
              C31629 * C18413 + C152775 * C18414) *
                 C152747) *
                C152462) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152613 -
           ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152845) *
                C6341) *
               C152620 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C152845 +
             (C42614 + C42615) * C152747) *
                C6341 +
            ((C32308 + C32309) * C152845 + C44684 * C152747) * C152462) *
               C5033) *
              C152512 * C152489 +
          ((((C32307 + C32306) * C152845 + C41774 * C152747) * C6341 +
            ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
               C152620 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C152613 -
           (((C35238 + C35239) * C152747 + (C32311 + C32310) * C152845) *
                C152462 +
            (C44685 * C152747 + (C32309 + C32308) * C152845) * C6341) *
               C5033) *
              C152512 * C152498 +
          (((C31702 * C152845 + C40558 * C152747) * C6341 +
            ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
               C152613 -
           (((C33070 + C33071) * C152747 + (C32313 + C32312) * C152845) *
                C152462 +
            (C41775 * C152747 + C32316 * C152845) * C6341) *
               C152620 +
           ((C32317 * C152845 + (C35239 + C35238) * C152747) * C6341 +
            ((C32315 + C32314) * C152845 +
             (C31627 * C1713 - C31628 * C1701 - C31627 * C1714 +
              C152846 * C1737 + C31629 * C3219 - C31630 * C3212 -
              C31629 * C3220 + C152775 * C3224) *
                 C152747) *
                C152462) *
               C5033) *
              C152512 * C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C4361 -
           ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152845) *
                C6341) *
               C152617) *
              C152512 * C152923 +
          ((((C32307 + C32306) * C152845 + C41774 * C152747) * C6341 +
            ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
               C152617 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C4361) *
              C152512 * C152916 +
          (((C31702 * C152845 + C40558 * C152747) * C6341 +
            ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
               C4361 -
           (((C33070 + C33071) * C152747 + (C32313 + C32312) * C152845) *
                C152462 +
            (C41775 * C152747 + C32316 * C152845) * C6341) *
               C152617) *
              C152512 * C152899 +
          (((C32724 * C152845 + (C33071 + C33070) * C152747) * C6341 +
            ((C32739 + C32738) * C152845 +
             (C31627 * C1241 - C31628 * C1231 - C31627 * C1242 +
              C152846 * C1249 + C31629 * C2890 - C31630 * C2889 -
              C31629 * C2891 + C152775 * C2892) *
                 C152747) *
                C152462) *
               C152617 -
           (((C32528 + C32529) * C152747 + (C31699 + C31698) * C152845) *
                C152462 +
            (C41120 * C152747 + C31703 * C152845) * C6341) *
               C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C152845 +
              (C40568 + C40569) * C152747) *
                 C6341 +
             ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
                C4361 -
            ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C152845) *
                 C6341) *
                C152617) *
               C152917 +
           ((((C41781 + C41780) * C152845 + (C42616 + C42617) * C152747) *
                 C6341 +
             (C41774 * C152845 + C43268 * C152747) * C152462) *
                C152617 -
            ((C40547 * C152747 + C40548 * C152845) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                 C6341) *
                C4361) *
               C152901 +
           ((((C40571 + C40570) * C152845 + (C42270 + C42271) * C152747) *
                 C6341 +
             (C40557 * C152845 + C42880 * C152747) * C152462) *
                C4361 -
            (((C43282 + C43283) * C152747 + C43277 * C152845) * C152462 +
             ((C43554 + C43555) * C152747 + (C42617 + C42616) * C152845) *
                 C6341) *
                C152617) *
               C152870) *
              C3495 +
          (((((C32307 + C32306) * C152845 + C41774 * C152747) * C6341 +
             ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
                C152617 -
            ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
                C4361) *
               C152917 +
           (((C40546 * C152845 + C40557 * C152747) * C6341 +
             (C40558 * C152845 + C32011 * C152747) * C152462) *
                C4361 -
            (((C34168 + C34169) * C152747 + C41775 * C152845) * C152462 +
             (C43277 * C152747 + C41765 * C152845) * C6341) *
                C152617) *
               C152901 +
           (((C43268 * C152845 + (C43283 + C43282) * C152747) * C6341 +
             ((C34169 + C34168) * C152845 +
              (C31627 * C2273 - C31628 * C2267 - C31627 * C2274 +
               C152846 * C2279 + C31629 * C9823 - C31630 * C9822 -
               C31629 * C9824 + C152775 * C9825) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C33850 + C33851) * C152747 + C40559 * C152845) * C152462 +
             (C42881 * C152747 + C40547 * C152845) * C6341) *
                C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152530 * C152828 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C152530 * C152575) *
              C873 +
          (((C40546 * C152845 + C40557 * C152747) * C6341 +
            (C40558 * C152845 + C32011 * C152747) * C152462) *
               C152530 * C152575 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C152530 * C152828) *
              C874 +
          (((C31702 * C152845 + C40558 * C152747) * C6341 +
            ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
               C152530 * C152828 -
           (((C32008 + C32009) * C152747 + C41120 * C152845) * C152462 +
            (C40559 * C152747 + C32010 * C152845) * C6341) *
               C152530 * C152575) *
              C875 +
          (((C32514 * C152845 + (C32009 + C32008) * C152747) * C6341 +
            ((C32529 + C32528) * C152845 +
             (C31627 * C398 - C31628 * C377 - C31627 * C399 + C152846 * C413 +
              C31629 * C2108 - C31630 * C2107 - C31629 * C2109 +
              C152775 * C2110) *
                 C152747) *
                C152462) *
               C152530 * C152575 -
           (((C32528 + C32529) * C152747 + (C31699 + C31698) * C152845) *
                C152462 +
            (C41120 * C152747 + C31703 * C152845) * C6341) *
               C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152530 * C1879 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C152530 * C1880 +
           (((C40571 + C40570) * C152845 + (C42270 + C42271) * C152747) *
                C6341 +
            (C40557 * C152845 + C42880 * C152747) * C152462) *
               C152530 * C1881 -
           (((C42272 + C42273) * C152747 + C42881 * C152845) * C152462 +
            ((C42274 + C42275) * C152747 + (C42271 + C42270) * C152845) *
                C6341) *
               C152530 * C152880) *
              C152814 +
          (((C40546 * C152845 + C40557 * C152747) * C6341 +
            (C40558 * C152845 + C32011 * C152747) * C152462) *
               C152530 * C1880 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C152530 * C1879 -
           (((C33850 + C33851) * C152747 + C40559 * C152845) * C152462 +
            (C42881 * C152747 + C40547 * C152845) * C6341) *
               C152530 * C1881 +
           ((C42880 * C152845 + (C42273 + C42272) * C152747) * C6341 +
            ((C33851 + C33850) * C152845 +
             (C31627 * C1543 - C31628 * C1529 - C31627 * C1544 +
              C152846 * C1553 + C31629 * C8728 - C31630 * C8727 -
              C31629 * C8729 + C152775 * C8730) *
                 C152747) *
                C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C152845 +
              (C40568 + C40569) * C152747) *
                 C6341 +
             ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
                C152829 -
            ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C152845) *
                 C6341) *
                C152617) *
               C152828 +
           ((((C41781 + C41780) * C152845 +
              (C31627 * C1727 - C31628 * C1708 - C31627 * C1728 +
               C152846 * C1744 + C31629 * C1729 - C31630 * C1709 -
               C31629 * C1730 + C152775 * C1745) *
                  C152747) *
                 C6341 +
             (C41774 * C152845 + (C34171 + C34170) * C152747) * C152462) *
                C152617 -
            ((C40547 * C152747 + C40548 * C152845) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                 C6341) *
                C152829) *
               C152575) *
              C365 +
          (((((C32307 + C32306) * C152845 + C41774 * C152747) * C6341 +
             ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
                C152617 -
            ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
                C152829) *
               C152828 +
           (((C40546 * C152845 + C40557 * C152747) * C6341 +
             (C40558 * C152845 + C32011 * C152747) * C152462) *
                C152829 -
            (((C34168 + C34169) * C152747 + C41775 * C152845) * C152462 +
             ((C34170 + C34171) * C152747 + C41765 * C152845) * C6341) *
                C152617) *
               C152575) *
              C366 +
          ((((C31702 * C152845 + C40558 * C152747) * C6341 +
             ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
                C152829 -
            (((C33070 + C33071) * C152747 + (C32313 + C32312) * C152845) *
                 C152462 +
             (C41775 * C152747 + C32316 * C152845) * C6341) *
                C152617) *
               C152828 +
           (((C33072 * C152845 + (C34169 + C34168) * C152747) * C6341 +
             ((C33071 + C33070) * C152845 +
              (C31627 * C1721 - C31628 * C1705 - C31627 * C1722 +
               C152846 * C1741 + C31629 * C1735 - C31630 * C1712 -
               C31629 * C1736 + C152775 * C1748) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C32008 + C32009) * C152747 + C41120 * C152845) * C152462 +
             (C40559 * C152747 + C32010 * C152845) * C6341) *
                C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152829 -
           ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152845) *
                C6341) *
               C152617) *
              C1879 +
          ((((C41781 + C41780) * C152845 + (C42616 + C42617) * C152747) *
                C6341 +
            (C41774 * C152845 + C43268 * C152747) * C152462) *
               C152617 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C152829) *
              C1880 +
          ((((C40571 + C40570) * C152845 + (C42270 + C42271) * C152747) *
                C6341 +
            (C40557 * C152845 + C42880 * C152747) * C152462) *
               C152829 -
           (((C43282 + C43283) * C152747 + C43277 * C152845) * C152462 +
            ((C43554 + C43555) * C152747 + (C42617 + C42616) * C152845) *
                C6341) *
               C152617) *
              C1881 +
          ((((C43555 + C43554) * C152845 +
             (C31627 * C8189 - C31628 * C8180 - C31627 * C8190 +
              C152846 * C8198 + C31629 * C8191 - C31630 * C8181 -
              C31629 * C8192 + C152775 * C8199) *
                 C152747) *
                C6341 +
            ((C43283 + C43282) * C152845 +
             (C31627 * C8187 - C31628 * C8179 - C31627 * C8188 +
              C152846 * C8197 + C31629 * C8193 - C31630 * C8182 -
              C31629 * C8194 + C152775 * C8200) *
                 C152747) *
                C152462) *
               C152617 -
           (((C42272 + C42273) * C152747 + C42881 * C152845) * C152462 +
            ((C42274 + C42275) * C152747 + (C42271 + C42270) * C152845) *
                C6341) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152530 * C152917 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C152530 * C152901 +
           (((C40571 + C40570) * C152845 +
             (C31627 * C1537 - C31628 * C1526 - C31627 * C1538 +
              C152846 * C1550 + C31629 * C2269 - C31630 * C2265 -
              C31629 * C2270 + C152775 * C2277) *
                 C152747) *
                C6341 +
            (C40557 * C152845 + (C33853 + C33852) * C152747) * C152462) *
               C152530 * C152870) *
              C365 +
          (((C40546 * C152845 + C40557 * C152747) * C6341 +
            (C40558 * C152845 + C32011 * C152747) * C152462) *
               C152530 * C152901 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C152530 * C152917 -
           (((C33850 + C33851) * C152747 + C40559 * C152845) * C152462 +
            ((C33852 + C33853) * C152747 + C40547 * C152845) * C6341) *
               C152530 * C152870) *
              C366 +
          (((C31702 * C152845 + C40558 * C152747) * C6341 +
            ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
               C152530 * C152917 -
           (((C32008 + C32009) * C152747 + (C32007 + C32006) * C152845) *
                C152462 +
            (C40559 * C152747 + C32010 * C152845) * C6341) *
               C152530 * C152901 +
           ((C32011 * C152845 + (C33851 + C33850) * C152747) * C6341 +
            ((C32009 + C32008) * C152845 +
             (C31627 * C1531 - C31628 * C1523 - C31627 * C1532 +
              C152846 * C1547 + C31629 * C2275 - C31630 * C2268 -
              C31629 * C2276 + C152775 * C2280) *
                 C152747) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152845 +
            (C31627 * C386 - C31628 * C371 - C31627 * C387 + C152846 * C407 +
             C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245) *
                C152747) *
               C6341 +
           ((C31692 + C31693) * C152845 + (C32001 + C32000) * C152747) *
               C152462) *
              C152530 * C152512 * C129 -
          ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
           ((C32000 + C32001) * C152747 + (C31693 + C31692) * C152845) *
               C6341) *
              C152530 * C152512 * C130 +
          ((C31702 * C152845 + (C31999 + C31998) * C152747) * C6341 +
           ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
              C152530 * C152512 * C131 -
          (((C32528 + C32529) * C152747 + (C31699 + C31698) * C152845) *
               C152462 +
           ((C32007 + C32006) * C152747 + C31703 * C152845) * C6341) *
              C152530 * C152512 * C132 +
          ((C31704 * C152845 + (C32529 + C32528) * C152747) * C6341 +
           ((C31701 + C31700) * C152845 +
            (C31627 * C400 - C31628 * C378 - C31627 * C401 + C152846 * C414 +
             C31629 * C1243 - C31630 * C1232 - C31629 * C1244 +
             C152775 * C1250) *
                C152747) *
               C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152918 -
           (((C33067 + C33066) * C152747 + (C32306 + C32307) * C152845) *
                C152462 +
            ((C31629 * C1719 - C31630 * C1704 - C31629 * C1720 +
              C152775 * C1740 + C31627 * C1233 - C31628 * C1227 -
              C31627 * C1234 + C152846 * C1245) *
                 C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152845) *
                C6341) *
               C152903 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C152845 +
             (C31627 * C1719 - C31628 * C1704 - C31627 * C1720 +
              C152846 * C1740 + C31629 * C3213 - C31630 * C3209 -
              C31629 * C3214 + C152775 * C3221) *
                 C152747) *
                C6341 +
            ((C32308 + C32309) * C152845 + (C35241 + C35240) * C152747) *
                C152462) *
               C152873) *
              C152512 * C365 +
          ((((C32307 + C32306) * C152845 + (C33066 + C33067) * C152747) *
                C6341 +
            ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
               C152903 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C152918 -
           (((C35238 + C35239) * C152747 + (C32311 + C32310) * C152845) *
                C152462 +
            ((C35240 + C35241) * C152747 + (C32309 + C32308) * C152845) *
                C6341) *
               C152873) *
              C152512 * C366 +
          (((C31702 * C152845 + C40558 * C152747) * C6341 +
            ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
               C152918 -
           (((C33070 + C33071) * C152747 + (C32313 + C32312) * C152845) *
                C152462 +
            ((C33069 + C33068) * C152747 + C32316 * C152845) * C6341) *
               C152903 +
           ((C32317 * C152845 + (C35239 + C35238) * C152747) * C6341 +
            ((C32315 + C32314) * C152845 +
             (C31627 * C1713 - C31628 * C1701 - C31627 * C1714 +
              C152846 * C1737 + C31629 * C3219 - C31630 * C3212 -
              C31629 * C3220 + C152775 * C3224) *
                 C152747) *
                C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152530 * C1429 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C152530 * C1430 +
           (((C40571 + C40570) * C152845 +
             (C31627 * C1537 - C31628 * C1526 - C31627 * C1538 +
              C152846 * C1550 + C31629 * C2269 - C31630 * C2265 -
              C31629 * C2270 + C152775 * C2277) *
                 C152747) *
                C6341 +
            (C40557 * C152845 + (C33853 + C33852) * C152747) * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C40546 * C152845 + C40557 * C152747) * C6341 +
            (C40558 * C152845 + C32011 * C152747) * C152462) *
               C152530 * C1430 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C152530 * C1429 -
           (((C33850 + C33851) * C152747 + C40559 * C152845) * C152462 +
            ((C33852 + C33853) * C152747 + C40547 * C152845) * C6341) *
               C152530 * C152870) *
              C152897 +
          (((C31702 * C152845 + C40558 * C152747) * C6341 +
            ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
               C152530 * C1429 -
           (((C32008 + C32009) * C152747 + C41120 * C152845) * C152462 +
            (C40559 * C152747 + C32010 * C152845) * C6341) *
               C152530 * C1430 +
           ((C32011 * C152845 + (C33851 + C33850) * C152747) * C6341 +
            ((C32009 + C32008) * C152845 +
             (C31627 * C1531 - C31628 * C1523 - C31627 * C1532 +
              C152846 * C1547 + C31629 * C2275 - C31630 * C2268 -
              C31629 * C2276 + C152775 * C2280) *
                 C152747) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152845 +
            (C40568 + C40569) * C152747) *
               C6341 +
           ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
              C152530 * C1517 -
          ((C40547 * C152747 + C40548 * C152845) * C152462 +
           ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
               C6341) *
              C152530 * C1518 +
          (((C40571 + C40570) * C152845 + (C42270 + C42271) * C152747) * C6341 +
           (C40557 * C152845 + (C33853 + C33852) * C152747) * C152462) *
              C152530 * C1519 -
          (((C42272 + C42273) * C152747 + (C33852 + C33853) * C152845) *
               C152462 +
           ((C42274 + C42275) * C152747 + (C42271 + C42270) * C152845) *
               C6341) *
              C152530 * C1520 +
          (((C42275 + C42274) * C152845 +
            (C31627 * C7928 - C31628 * C7923 - C31627 * C7929 +
             C152846 * C7935 + C31629 * C8937 - C31630 * C8935 -
             C31629 * C8938 + C152775 * C8941) *
                C152747) *
               C6341 +
           ((C42273 + C42272) * C152845 +
            (C31627 * C7926 - C31628 * C7922 - C31627 * C7927 +
             C152846 * C7934 + C31629 * C8939 - C31630 * C8936 -
             C31629 * C8940 + C152775 * C8942) *
                C152747) *
               C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152918 -
           ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152845) *
                C6341) *
               C152903 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C152845 +
             (C42614 + C42615) * C152747) *
                C6341 +
            ((C32308 + C32309) * C152845 + (C35241 + C35240) * C152747) *
                C152462) *
               C152873) *
              C1429 +
          ((((C41781 + C41780) * C152845 + (C42616 + C42617) * C152747) *
                C6341 +
            (C41774 * C152845 + (C34171 + C34170) * C152747) * C152462) *
               C152903 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C152918 -
           (((C42618 + C42619) * C152747 + (C35240 + C35241) * C152845) *
                C152462 +
            ((C42620 + C42621) * C152747 + (C42615 + C42614) * C152845) *
                C6341) *
               C152873) *
              C1430 +
          ((((C40571 + C40570) * C152845 + (C42270 + C42271) * C152747) *
                C6341 +
            (C40557 * C152845 + (C33853 + C33852) * C152747) * C152462) *
               C152918 -
           (((C31629 * C8183 - C31630 * C8177 - C31629 * C8184 +
              C152775 * C8195 + C31627 * C2271 - C31628 * C2266 -
              C31627 * C2272 + C152846 * C2278) *
                 C152747 +
             (C34170 + C34171) * C152845) *
                C152462 +
            ((C31629 * C8185 - C31630 * C8178 - C31629 * C8186 +
              C152775 * C8196 + C31627 * C2269 - C31628 * C2265 -
              C31627 * C2270 + C152846 * C2277) *
                 C152747 +
             (C42617 + C42616) * C152845) *
                C6341) *
               C152903 +
           (((C42621 + C42620) * C152845 +
             (C31627 * C8185 - C31628 * C8178 - C31627 * C8186 +
              C152846 * C8196 + C31629 * C10240 - C31630 * C10238 -
              C31629 * C10241 + C152775 * C10244) *
                 C152747) *
                C6341 +
            ((C42619 + C42618) * C152845 +
             (C31627 * C8183 - C31628 * C8177 - C31627 * C8184 +
              C152846 * C8195 + C31629 * C10242 - C31630 * C10239 -
              C31629 * C10243 + C152775 * C10245) *
                 C152747) *
                C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152829 -
           (((C33067 + C33066) * C152747 + (C32306 + C32307) * C152845) *
                C152462 +
            ((C31629 * C1719 - C31630 * C1704 - C31629 * C1720 +
              C152775 * C1740 + C31627 * C1233 - C31628 * C1227 -
              C31627 * C1234 + C152846 * C1245) *
                 C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152845) *
                C6341) *
               C152617) *
              C152512 * C873 +
          ((((C32307 + C32306) * C152845 + (C33066 + C33067) * C152747) *
                C6341 +
            ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
               C152617 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C152829) *
              C152512 * C874 +
          (((C31702 * C152845 + C40558 * C152747) * C6341 +
            ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
               C152829 -
           (((C33070 + C33071) * C152747 + (C32313 + C32312) * C152845) *
                C152462 +
            ((C33069 + C33068) * C152747 + C32316 * C152845) * C6341) *
               C152617) *
              C152512 * C875 +
          (((C32724 * C152845 + (C33071 + C33070) * C152747) * C6341 +
            ((C32739 + C32738) * C152845 +
             (C31627 * C1241 - C31628 * C1231 - C31627 * C1242 +
              C152846 * C1249 + C31629 * C2890 - C31630 * C2889 -
              C31629 * C2891 + C152775 * C2892) *
                 C152747) *
                C152462) *
               C152617 -
           (((C32528 + C32529) * C152747 + (C31699 + C31698) * C152845) *
                C152462 +
            (C41120 * C152747 + C31703 * C152845) * C6341) *
               C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C152845 +
              (C40568 + C40569) * C152747) *
                 C6341 +
             ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
                C152829 -
            ((C41765 * C152747 + (C32306 + C32307) * C152845) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C152845) *
                 C6341) *
                C152617) *
               C1429 +
           ((((C41781 + C41780) * C152845 + (C42616 + C42617) * C152747) *
                 C6341 +
             (C41774 * C152845 + C43268 * C152747) * C152462) *
                C152617 -
            ((C40547 * C152747 + C40548 * C152845) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                 C6341) *
                C152829) *
               C1430 +
           ((((C40571 + C40570) * C152845 + (C42270 + C42271) * C152747) *
                 C6341 +
             (C40557 * C152845 + C42880 * C152747) * C152462) *
                C152829 -
            (((C43282 + C43283) * C152747 + C43277 * C152845) * C152462 +
             ((C31629 * C8185 - C31630 * C8178 - C31629 * C8186 +
               C152775 * C8196 + C31627 * C2269 - C31628 * C2265 -
               C31627 * C2270 + C152846 * C2277) *
                  C152747 +
              (C42617 + C42616) * C152845) *
                 C6341) *
                C152617) *
               C152870) *
              C152814 +
          (((((C32307 + C32306) * C152845 + C41774 * C152747) * C6341 +
             ((C32305 + C32304) * C152845 + C33072 * C152747) * C152462) *
                C152617 -
            ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
                C152829) *
               C1429 +
           (((C40546 * C152845 + C40557 * C152747) * C6341 +
             (C40558 * C152845 + C32011 * C152747) * C152462) *
                C152829 -
            (((C34168 + C34169) * C152747 + C41775 * C152845) * C152462 +
             (C43277 * C152747 + C41765 * C152845) * C6341) *
                C152617) *
               C1430 +
           (((C43268 * C152845 + (C43283 + C43282) * C152747) * C6341 +
             ((C34169 + C34168) * C152845 +
              (C31627 * C2273 - C31628 * C2267 - C31627 * C2274 +
               C152846 * C2279 + C31629 * C9823 - C31630 * C9822 -
               C31629 * C9824 + C152775 * C9825) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C33850 + C33851) * C152747 + C40559 * C152845) * C152462 +
             (C42881 * C152747 + C40547 * C152845) * C6341) *
                C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152845 +
            (C31627 * C386 - C31628 * C371 - C31627 * C387 + C152846 * C407 +
             C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245) *
                C152747) *
               C6341 +
           ((C31692 + C31693) * C152845 + (C32001 + C32000) * C152747) *
               C152462) *
              C152530 * C152512 * C129 -
          ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
           ((C32000 + C32001) * C152747 + (C31693 + C31692) * C152845) *
               C6341) *
              C152530 * C152512 * C130 +
          ((C31702 * C152845 + (C31999 + C31998) * C152747) * C6341 +
           ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
              C152530 * C152512 * C131 -
          (((C32528 + C32529) * C152747 + (C31699 + C31698) * C152845) *
               C152462 +
           ((C32007 + C32006) * C152747 + C31703 * C152845) * C6341) *
              C152530 * C152512 * C132 +
          ((C31704 * C152845 + (C32529 + C32528) * C152747) * C6341 +
           ((C31701 + C31700) * C152845 +
            (C31627 * C400 - C31628 * C378 - C31627 * C401 + C152846 * C414 +
             C31629 * C1243 - C31630 * C1232 - C31629 * C1244 +
             C152775 * C1250) *
                C152747) *
               C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152530 * C152917 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C152530 * C152901 +
           (((C40571 + C40570) * C152845 +
             (C31627 * C1537 - C31628 * C1526 - C31627 * C1538 +
              C152846 * C1550 + C31629 * C2269 - C31630 * C2265 -
              C31629 * C2270 + C152775 * C2277) *
                 C152747) *
                C6341 +
            (C40557 * C152845 + (C33853 + C33852) * C152747) * C152462) *
               C152530 * C152870) *
              C365 +
          (((C40546 * C152845 + C40557 * C152747) * C6341 +
            (C40558 * C152845 + C32011 * C152747) * C152462) *
               C152530 * C152901 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C152530 * C152917 -
           (((C33850 + C33851) * C152747 + C40559 * C152845) * C152462 +
            ((C33852 + C33853) * C152747 + C40547 * C152845) * C6341) *
               C152530 * C152870) *
              C366 +
          (((C31702 * C152845 + C40558 * C152747) * C6341 +
            ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
               C152530 * C152917 -
           (((C32008 + C32009) * C152747 + (C32007 + C32006) * C152845) *
                C152462 +
            (C40559 * C152747 + C32010 * C152845) * C6341) *
               C152530 * C152901 +
           ((C32011 * C152845 + (C33851 + C33850) * C152747) * C6341 +
            ((C32009 + C32008) * C152845 +
             (C31627 * C1531 - C31628 * C1523 - C31627 * C1532 +
              C152846 * C1547 + C31629 * C2275 - C31630 * C2268 -
              C31629 * C2276 + C152775 * C2280) *
                 C152747) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152845 +
             (C40568 + C40569) * C152747) *
                C6341 +
            ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
               C152530 * C1429 -
           ((C40547 * C152747 + C40548 * C152845) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
                C6341) *
               C152530 * C1430 +
           (((C40571 + C40570) * C152845 +
             (C31627 * C1537 - C31628 * C1526 - C31627 * C1538 +
              C152846 * C1550 + C31629 * C2269 - C31630 * C2265 -
              C31629 * C2270 + C152775 * C2277) *
                 C152747) *
                C6341 +
            (C40557 * C152845 + (C33853 + C33852) * C152747) * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C40546 * C152845 + C40557 * C152747) * C6341 +
            (C40558 * C152845 + C32011 * C152747) * C152462) *
               C152530 * C1430 -
           ((C32010 * C152747 + (C31695 + C31694) * C152845) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C152845) * C6341) *
               C152530 * C1429 -
           (((C33850 + C33851) * C152747 + C40559 * C152845) * C152462 +
            ((C33852 + C33853) * C152747 + C40547 * C152845) * C6341) *
               C152530 * C152870) *
              C152897 +
          (((C31702 * C152845 + C40558 * C152747) * C6341 +
            ((C31697 + C31696) * C152845 + C32514 * C152747) * C152462) *
               C152530 * C1429 -
           (((C32008 + C32009) * C152747 + C41120 * C152845) * C152462 +
            (C40559 * C152747 + C32010 * C152845) * C6341) *
               C152530 * C1430 +
           ((C32011 * C152845 + (C33851 + C33850) * C152747) * C6341 +
            ((C32009 + C32008) * C152845 +
             (C31627 * C1531 - C31628 * C1523 - C31627 * C1532 +
              C152846 * C1547 + C31629 * C2275 - C31630 * C2268 -
              C31629 * C2276 + C152775 * C2280) *
                 C152747) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152845 +
            (C40568 + C40569) * C152747) *
               C6341 +
           ((C31692 + C31693) * C152845 + C40546 * C152747) * C152462) *
              C152530 * C1517 -
          ((C40547 * C152747 + C40548 * C152845) * C152462 +
           ((C40570 + C40571) * C152747 + (C40569 + C40568) * C152845) *
               C6341) *
              C152530 * C1518 +
          (((C40571 + C40570) * C152845 + (C42270 + C42271) * C152747) * C6341 +
           (C40557 * C152845 + (C33853 + C33852) * C152747) * C152462) *
              C152530 * C1519 -
          (((C42272 + C42273) * C152747 + (C33852 + C33853) * C152845) *
               C152462 +
           ((C42274 + C42275) * C152747 + (C42271 + C42270) * C152845) *
               C6341) *
              C152530 * C1520 +
          (((C42275 + C42274) * C152845 +
            (C31627 * C7928 - C31628 * C7923 - C31627 * C7929 +
             C152846 * C7935 + C31629 * C8937 - C31630 * C8935 -
             C31629 * C8938 + C152775 * C8941) *
                C152747) *
               C6341 +
           ((C42273 + C42272) * C152845 +
            (C31627 * C7926 - C31628 * C7922 - C31627 * C7927 +
             C152846 * C7934 + C31629 * C8939 - C31630 * C8936 -
             C31629 * C8940 + C152775 * C8942) *
                C152747) *
               C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C152571 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C152578 +
           ((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152530 * C3839) *
              C152489 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C152578 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C152571 -
           ((C6620 + C6602 + C6603) * C152462 +
            (C6619 + C6590 + C6589) * C6341) *
               C152530 * C3839) *
              C152498 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152530 * C152571 -
           ((C7059 + C7060 + C7061) * C152462 +
            (C6597 + C6596 + C6595) * C6341) *
               C152530 * C152578 +
           ((C6603 + C6602 + C6620) * C6341 +
            (C470 * C6338 + C1908 * C6339 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C6340) *
                C152462) *
               C152530 * C3839) *
              C3842)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152530 * C152571 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152530 * C152578 +
           ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152530 * C3839) *
              C152489 +
          ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152530 *
               C152578 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
               C152571 -
           (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C152530 *
               C3839) *
              C152498 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152530 *
               C152571 -
           (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) * C152530 *
               C152578 +
           (C477 * C123 + C478 * C124 + C480 * C125 +
            (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                C152696 * C126) *
               C152530 * C3839) *
              C3842)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152530 * C152571 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C152530 * C152578 +
           ((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
             C14815 * C1727 - C14816 * C1708 - C14815 * C1728 + C14811 * C1744 +
             C14817 * C1729 - C14818 * C1709 - C14817 * C1730 +
             C14812 * C1745) *
                C152696 * C6341 +
            (C15197 + C15198 + C15199) * C152696 * C152462) *
               C152530 * C3839) *
              C152489 +
          (((C15196 + C15195 + C15194) * C152696 * C6341 +
            (C15200 + C15201 + C15202) * C152696 * C152462) *
               C152530 * C152578 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C152530 * C152571 -
           ((C15203 + C15204 + C15205) * C152696 * C152462 +
            (C15199 + C15198 + C15197) * C152696 * C6341) *
               C152530 * C3839) *
              C152498 +
          (((C14897 + C14896 + C14895) * C152696 * C6341 +
            (C14898 + C14899 + C14900) * C152696 * C152462) *
               C152530 * C152571 -
           ((C15720 + C15721 + C15722) * C152696 * C152462 +
            (C15202 + C15201 + C15200) * C152696 * C6341) *
               C152530 * C152578 +
           ((C15205 + C15204 + C15203) * C152696 * C6341 +
            (C14813 * C394 - C14814 * C375 - C14813 * C395 + C14810 * C411 +
             C14815 * C1721 - C14816 * C1705 - C14815 * C1722 + C14811 * C1741 +
             C14817 * C1735 - C14818 * C1712 - C14817 * C1736 +
             C14812 * C1748) *
                C152696 * C152462) *
               C152530 * C3839) *
              C3842)) /
            (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C152829 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152617) *
               C152571 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152617 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C152829) *
               C152578 +
           (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
             (C6589 + C6590 + C6619) * C152462) *
                C152829 -
            ((C8741 + C8736 + C8737) * C152462 +
             (C8950 * C6340 + C8234 * C6339 + C7577 * C6338) * C6341) *
                C152617) *
               C3839) *
              C3495 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152617 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C152829) *
               C152571 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C152829 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152617) *
               C152578 +
           (((C8737 + C8736 + C8741) * C6341 +
             (C2131 * C6338 + C7580 * C6339 +
              (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                  C6340) *
                 C152462) *
                C152617 -
            ((C6620 + C6602 + C6603) * C152462 +
             (C6619 + C6590 + C6589) * C6341) *
                C152829) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C152829 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C152617) *
               C152571 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C152617 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C152829) *
               C152578 +
           (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                 C152696 * C123 +
             C476 * C124 + C477 * C125 + C478 * C126) *
                C152829 -
            (C2133 * C126 + C2134 * C125 + C2135 * C124 +
             (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                 C152696 * C123) *
                C152617) *
               C3839) *
              C3495 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152617 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152829) *
               C152571 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152829 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C152617) *
               C152578 +
           ((C2135 * C123 + C2134 * C124 + C2133 * C125 +
             (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                 C152696 * C126) *
                C152617 -
            (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C152829) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C152696 * C6341 +
             (C14892 + C14893 + C14894) * C152696 * C152462) *
                C152829 -
            ((C15496 + C15497 + C15498) * C152696 * C152462 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C152696 * C6341) *
                C152617) *
               C152571 +
           (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 +
              C14810 * C1245 + C14815 * C1719 - C14816 * C1704 -
              C14815 * C1720 + C14811 * C1740 + C14817 * C3213 -
              C14818 * C3209 - C14817 * C3214 + C14812 * C3221) *
                 C152696 * C6341 +
             (C16264 + C16265 + C16266) * C152696 * C152462) *
                C152617 -
            ((C15194 + C15195 + C15196) * C152696 * C152462 +
             (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 +
              C14812 * C1740 + C14815 * C1233 - C14816 * C1227 -
              C14815 * C1234 + C14811 * C1245 + C14813 * C386 - C14814 * C371 -
              C14813 * C387 + C14810 * C407) *
                 C152696 * C6341) *
                C152829) *
               C152578 +
           (((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
              C14815 * C1727 - C14816 * C1708 - C14815 * C1728 +
              C14811 * C1744 + C14817 * C1729 - C14818 * C1709 -
              C14817 * C1730 + C14812 * C1745) *
                 C152696 * C6341 +
             (C15197 + C15198 + C15199) * C152696 * C152462) *
                C152829 -
            ((C17351 + C17352 + C17353) * C152696 * C152462 +
             (C14817 * C9516 - C14818 * C9509 - C14817 * C9517 +
              C14812 * C9527 + C14815 * C1729 - C14816 * C1709 -
              C14815 * C1730 + C14811 * C1745 + C14813 * C1727 -
              C14814 * C1708 - C14813 * C1728 + C14810 * C1744) *
                 C152696 * C6341) *
                C152617) *
               C3839) *
              C3495 +
          ((((C15498 + C15497 + C15496) * C152696 * C6341 +
             (C15502 + C15503 + C15504) * C152696 * C152462) *
                C152617 -
            ((C14895 + C14896 + C14897) * C152696 * C152462 +
             (C14894 + C14893 + C14892) * C152696 * C6341) *
                C152829) *
               C152571 +
           (((C15196 + C15195 + C15194) * C152696 * C6341 +
             (C15200 + C15201 + C15202) * C152696 * C152462) *
                C152829 -
            ((C16267 + C16268 + C16269) * C152696 * C152462 +
             (C16266 + C16265 + C16264) * C152696 * C6341) *
                C152617) *
               C152578 +
           (((C17353 + C17352 + C17351) * C152696 * C6341 +
             (C14813 * C1723 - C14814 * C1706 - C14813 * C1724 +
              C14810 * C1742 + C14815 * C1733 - C14816 * C1711 -
              C14815 * C1734 + C14811 * C1747 + C14817 * C10024 -
              C14818 * C10023 - C14817 * C10025 + C14812 * C10026) *
                 C152696 * C152462) *
                C152617 -
            ((C15203 + C15204 + C15205) * C152696 * C152462 +
             (C15199 + C15198 + C15197) * C152696 * C6341) *
                C152829) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                    C152696 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126) *
                   C152530 * C3355 -
               (C473 * C126 + C474 * C125 + C475 * C124 +
                (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                    C152696 * C123) *
                   C152530 * C152575) *
                  C152923 +
              ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) *
                   C152530 * C152575 -
               (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) *
                   C152530 * C3355) *
                  C152916 +
              ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) *
                   C152530 * C3355 -
               (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) *
                   C152530 * C152575) *
                  C152899 +
              ((C473 * C123 + C479 * C124 + C889 * C125 +
                (C134 * C878 - C135 * C877 - C134 * C879 + C152711 * C880) *
                    C152696 * C126) *
                   C152530 * C152575 -
               (C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) *
                   C152530 * C3355) *
                  C152874) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                    C152696 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126) *
                   C152530 * C152924 -
               (C473 * C126 + C474 * C125 + C475 * C124 +
                (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                    C152696 * C123) *
                   C152530 * C152920 +
               ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                    C152696 * C123 +
                C476 * C124 + C477 * C125 + C478 * C126) *
                   C152530 * C152906 -
               (C1911 * C126 + C1912 * C125 + C1913 * C124 +
                (C134 * C1537 - C135 * C1526 - C134 * C1538 + C152711 * C1550) *
                    C152696 * C123) *
                   C152530 * C152880) *
                  C3495 +
              ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) *
                   C152530 * C152920 -
               (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) *
                   C152530 * C152924 -
               (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) *
                   C152530 * C152906 +
               (C1913 * C123 + C1912 * C124 + C1911 * C125 +
                (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                    C152696 * C126) *
                   C152530 * C152880) *
                  C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C152918 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C152903 +
            ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152696 * C123 +
             C737 * C124 + C738 * C125 + C739 * C126) *
                C152873) *
               C3355 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C152903 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C152918 -
            (C2915 * C126 + C2916 * C125 + C2917 * C124 +
             (C134 * C1719 - C135 * C1704 - C134 * C1720 + C152711 * C1740) *
                 C152696 * C123) *
                C152873) *
               C152575) *
              C3495 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152903 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152918 -
            (C741 * C126 + C739 * C125 + C738 * C124 + C737 * C123) * C152873) *
               C3355 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152918 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C152903 +
            (C2917 * C123 + C2916 * C124 + C2915 * C125 +
             (C134 * C2890 - C135 * C2889 - C134 * C2891 + C152711 * C2892) *
                 C152696 * C126) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C3355 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C152575) *
              C152923 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C152575 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C3355) *
              C152916 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152530 * C3355 -
           ((C7059 + C7060 + C7061) * C152462 +
            (C6597 + C6596 + C6595) * C6341) *
               C152530 * C152575) *
              C152899 +
          (((C7061 + C7060 + C7059) * C6341 +
            (C471 * C6338 + C472 * C6339 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C6340) *
                C152462) *
               C152530 * C152575 -
           ((C6353 + C6354 + C6355) * C152462 +
            (C6352 + C6351 + C6350) * C6341) *
               C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C152924 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C152920 +
           ((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152530 * C152906 -
           ((C8435 + C8436 + C8437) * C152462 +
            (C7959 * C6340 + C7957 * C6339 + C6616 * C6338) * C6341) *
               C152530 * C152880) *
              C3495 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C152920 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C152924 -
           ((C6620 + C6602 + C6603) * C152462 +
            (C6619 + C6590 + C6589) * C6341) *
               C152530 * C152906 +
           ((C8437 + C8436 + C8435) * C6341 +
            (C1909 * C6338 + C6618 * C6339 +
             (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                 C6340) *
                C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C152918 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152903 +
            (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                  C6338 +
              C8232 * C6339 + C8233 * C6340) *
                 C6341 +
             (C6842 + C6843 + C6863) * C152462) *
                C152873) *
               C3355 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152903 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C152918 -
            ((C9827 + C9828 + C9829) * C152462 +
             (C8236 * C6340 + C8233 * C6339 + C8232 * C6338) * C6341) *
                C152873) *
               C152575) *
              C3495 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152903 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C152918 -
            ((C6864 + C6855 + C6856) * C152462 +
             (C6863 + C6843 + C6842) * C6341) *
                C152873) *
               C3355 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C152918 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152903 +
            ((C9829 + C9828 + C9827) * C6341 +
             (C2913 * C6338 + C6862 * C6339 +
              (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                  C6340) *
                 C152462) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152530 * C3355 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C152530 * C152575) *
              C152923 +
          (((C15196 + C15195 + C15194) * C152696 * C6341 +
            (C15200 + C15201 + C15202) * C152696 * C152462) *
               C152530 * C152575 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C152530 * C3355) *
              C152916 +
          (((C14897 + C14896 + C14895) * C152696 * C6341 +
            (C14898 + C14899 + C14900) * C152696 * C152462) *
               C152530 * C3355 -
           ((C15720 + C15721 + C15722) * C152696 * C152462 +
            (C15202 + C15201 + C15200) * C152696 * C6341) *
               C152530 * C152575) *
              C152899 +
          (((C15722 + C15721 + C15720) * C152696 * C6341 +
            (C14813 * C396 - C14814 * C376 - C14813 * C397 + C14810 * C412 +
             C14815 * C1241 - C14816 * C1231 - C14815 * C1242 + C14811 * C1249 +
             C14817 * C2890 - C14818 * C2889 - C14817 * C2891 +
             C14812 * C2892) *
                C152696 * C152462) *
               C152530 * C152575 -
           ((C14901 + C14902 + C14903) * C152696 * C152462 +
            (C14900 + C14899 + C14898) * C152696 * C6341) *
               C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152530 * C152924 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C152530 * C152920 +
           ((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
             C14815 * C1727 - C14816 * C1708 - C14815 * C1728 + C14811 * C1744 +
             C14817 * C1729 - C14818 * C1709 - C14817 * C1730 +
             C14812 * C1745) *
                C152696 * C6341 +
            (C15197 + C15198 + C15199) * C152696 * C152462) *
               C152530 * C152906 -
           ((C17040 + C17041 + C17042) * C152696 * C152462 +
            (C14817 * C8185 - C14818 * C8178 - C14817 * C8186 + C14812 * C8196 +
             C14815 * C2269 - C14816 * C2265 - C14815 * C2270 + C14811 * C2277 +
             C14813 * C1537 - C14814 * C1526 - C14813 * C1538 +
             C14810 * C1550) *
                C152696 * C6341) *
               C152530 * C152880) *
              C3495 +
          (((C15196 + C15195 + C15194) * C152696 * C6341 +
            (C15200 + C15201 + C15202) * C152696 * C152462) *
               C152530 * C152920 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C152530 * C152924 -
           ((C15203 + C15204 + C15205) * C152696 * C152462 +
            (C15199 + C15198 + C15197) * C152696 * C6341) *
               C152530 * C152906 +
           ((C17042 + C17041 + C17040) * C152696 * C6341 +
            (C14813 * C1533 - C14814 * C1524 - C14813 * C1534 + C14810 * C1548 +
             C14815 * C2273 - C14816 * C2267 - C14815 * C2274 + C14811 * C2279 +
             C14817 * C9823 - C14818 * C9822 - C14817 * C9824 +
             C14812 * C9825) *
                C152696 * C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C152696 * C6341 +
             (C14892 + C14893 + C14894) * C152696 * C152462) *
                C152918 -
            ((C15496 + C15497 + C15498) * C152696 * C152462 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C152696 * C6341) *
                C152903 +
            ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
              C14815 * C2677 - C14816 * C2666 - C14815 * C2678 +
              C14811 * C2690 + C14817 * C2679 - C14818 * C2667 -
              C14817 * C2680 + C14812 * C2691) *
                 C152696 * C6341 +
             (C15499 + C15500 + C15501) * C152696 * C152462) *
                C152873) *
               C3355 +
           (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 +
              C14810 * C1245 + C14815 * C1719 - C14816 * C1704 -
              C14815 * C1720 + C14811 * C1740 + C14817 * C3213 -
              C14818 * C3209 - C14817 * C3214 + C14812 * C3221) *
                 C152696 * C6341 +
             (C16264 + C16265 + C16266) * C152696 * C152462) *
                C152903 -
            ((C15194 + C15195 + C15196) * C152696 * C152462 +
             (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 +
              C14812 * C1740 + C14815 * C1233 - C14816 * C1227 -
              C14815 * C1234 + C14811 * C1245 + C14813 * C386 - C14814 * C371 -
              C14813 * C387 + C14810 * C407) *
                 C152696 * C6341) *
                C152918 -
            ((C18434 + C18435 + C18436) * C152696 * C152462 +
             (C14817 * C9518 - C14818 * C9510 - C14817 * C9519 +
              C14812 * C9528 + C14815 * C3213 - C14816 * C3209 -
              C14815 * C3214 + C14811 * C3221 + C14813 * C1719 -
              C14814 * C1704 - C14813 * C1720 + C14810 * C1740) *
                 C152696 * C6341) *
                C152873) *
               C152575) *
              C3495 +
          ((((C15498 + C15497 + C15496) * C152696 * C6341 +
             (C15502 + C15503 + C15504) * C152696 * C152462) *
                C152903 -
            ((C14895 + C14896 + C14897) * C152696 * C152462 +
             (C14894 + C14893 + C14892) * C152696 * C6341) *
                C152918 -
            ((C15505 + C15506 + C15507) * C152696 * C152462 +
             (C15501 + C15500 + C15499) * C152696 * C6341) *
                C152873) *
               C3355 +
           (((C15196 + C15195 + C15194) * C152696 * C6341 +
             (C15200 + C15201 + C15202) * C152696 * C152462) *
                C152918 -
            ((C16267 + C16268 + C16269) * C152696 * C152462 +
             (C16266 + C16265 + C16264) * C152696 * C6341) *
                C152903 +
            ((C18436 + C18435 + C18434) * C152696 * C6341 +
             (C14813 * C1715 - C14814 * C1702 - C14813 * C1716 +
              C14810 * C1738 + C14815 * C3217 - C14816 * C3211 -
              C14815 * C3218 + C14811 * C3223 + C14817 * C18412 -
              C14818 * C18411 - C14817 * C18413 + C14812 * C18414) *
                 C152696 * C152462) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C152829 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152617) *
               C3355 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152617 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C152829) *
               C152575) *
              C152489 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152617 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C152829) *
               C3355 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C152829 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152617) *
               C152575) *
              C152498 +
          ((((C6349 + C6348 + C6347) * C6341 +
             (C6350 + C6351 + C6352) * C152462) *
                C152829 -
            ((C7256 + C7257 + C7258) * C152462 +
             (C6850 + C6849 + C6848) * C6341) *
                C152617) *
               C3355 +
           (((C7568 + C7567 + C7582) * C6341 +
             (C1278 * C6338 + C2130 * C6339 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C6340) *
                 C152462) *
                C152617 -
            ((C7059 + C7060 + C7061) * C152462 +
             (C6597 + C6596 + C6595) * C6341) *
                C152829) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C152829 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C152617) *
               C3355 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C152617 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C152829) *
               C152575) *
              C152489 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152617 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152829) *
               C3355 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152829 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C152617) *
               C152575) *
              C152498 +
          (((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152829 -
            (C1033 * C126 + C740 * C125 + C734 * C124 + C735 * C123) *
                C152617) *
               C3355 +
           ((C1281 * C123 + C1282 * C124 + C1283 * C125 +
             (C134 * C1243 - C135 * C1232 - C134 * C1244 + C152711 * C1250) *
                 C152696 * C126) *
                C152617 -
            (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) * C152829) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C152696 * C6341 +
             (C14892 + C14893 + C14894) * C152696 * C152462) *
                C152829 -
            ((C15496 + C15497 + C15498) * C152696 * C152462 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C152696 * C6341) *
                C152617) *
               C3355 +
           (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 +
              C14810 * C1245 + C14815 * C1719 - C14816 * C1704 -
              C14815 * C1720 + C14811 * C1740 + C14817 * C3213 -
              C14818 * C3209 - C14817 * C3214 + C14812 * C3221) *
                 C152696 * C6341 +
             (C16264 + C16265 + C16266) * C152696 * C152462) *
                C152617 -
            ((C15194 + C15195 + C15196) * C152696 * C152462 +
             (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 +
              C14812 * C1740 + C14815 * C1233 - C14816 * C1227 -
              C14815 * C1234 + C14811 * C1245 + C14813 * C386 - C14814 * C371 -
              C14813 * C387 + C14810 * C407) *
                 C152696 * C6341) *
                C152829) *
               C152575) *
              C152489 +
          ((((C15498 + C15497 + C15496) * C152696 * C6341 +
             (C15502 + C15503 + C15504) * C152696 * C152462) *
                C152617 -
            ((C14895 + C14896 + C14897) * C152696 * C152462 +
             (C14894 + C14893 + C14892) * C152696 * C6341) *
                C152829) *
               C3355 +
           (((C15196 + C15195 + C15194) * C152696 * C6341 +
             (C15200 + C15201 + C15202) * C152696 * C152462) *
                C152829 -
            ((C16267 + C16268 + C16269) * C152696 * C152462 +
             (C16266 + C16265 + C16264) * C152696 * C6341) *
                C152617) *
               C152575) *
              C152498 +
          ((((C14897 + C14896 + C14895) * C152696 * C6341 +
             (C14898 + C14899 + C14900) * C152696 * C152462) *
                C152829 -
            ((C15935 + C15936 + C15937) * C152696 * C152462 +
             (C15504 + C15503 + C15502) * C152696 * C6341) *
                C152617) *
               C3355 +
           (((C16269 + C16268 + C16267) * C152696 * C6341 +
             (C14813 * C1239 - C14814 * C1230 - C14813 * C1240 +
              C14810 * C1248 + C14815 * C1713 - C14816 * C1701 -
              C14815 * C1714 + C14811 * C1737 + C14817 * C3219 -
              C14818 * C3212 - C14817 * C3220 + C14812 * C3224) *
                 C152696 * C152462) *
                C152617 -
            ((C15720 + C15721 + C15722) * C152696 * C152462 +
             (C15202 + C15201 + C15200) * C152696 * C6341) *
                C152829) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152530 * C152924 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152530 * C152920 +
           ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152530 * C152906 -
           (C1911 * C126 + C1912 * C125 + C1913 * C124 +
            (C134 * C1537 - C135 * C1526 - C134 * C1538 + C152711 * C1550) *
                C152696 * C123) *
               C152530 * C152880) *
              C3495 +
          ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152530 *
               C152920 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
               C152924 -
           (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C152530 *
               C152906 +
           (C1913 * C123 + C1912 * C124 + C1911 * C125 +
            (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                C152696 * C126) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152530 * C3355 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152530 * C152575) *
              C152923 +
          ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152530 *
               C152575 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
               C3355) *
              C152916 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152530 *
               C3355 -
           (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) * C152530 *
               C152575) *
              C152899 +
          ((C473 * C123 + C479 * C124 + C889 * C125 +
            (C134 * C878 - C135 * C877 - C134 * C879 + C152711 * C880) *
                C152696 * C126) *
               C152530 * C152575 -
           (C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) * C152530 *
               C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C3355 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C152575) *
              C152923 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C152575 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C3355) *
              C152916 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152530 * C3355 -
           ((C7059 + C7060 + C7061) * C152462 +
            (C6597 + C6596 + C6595) * C6341) *
               C152530 * C152575) *
              C152899 +
          (((C7061 + C7060 + C7059) * C6341 +
            (C471 * C6338 + C472 * C6339 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C6340) *
                C152462) *
               C152530 * C152575 -
           ((C6353 + C6354 + C6355) * C152462 +
            (C6352 + C6351 + C6350) * C6341) *
               C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C152924 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C152920 +
           ((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152530 * C152906 -
           ((C8435 + C8436 + C8437) * C152462 +
            (C7959 * C6340 + C7957 * C6339 + C6616 * C6338) * C6341) *
               C152530 * C152880) *
              C3495 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C152920 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C152924 -
           ((C6620 + C6602 + C6603) * C152462 +
            (C6619 + C6590 + C6589) * C6341) *
               C152530 * C152906 +
           ((C8437 + C8436 + C8435) * C6341 +
            (C1909 * C6338 + C6618 * C6339 +
             (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                 C6340) *
                C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152530 * C3355 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C152530 * C152575) *
              C152923 +
          (((C15196 + C15195 + C15194) * C152696 * C6341 +
            (C15200 + C15201 + C15202) * C152696 * C152462) *
               C152530 * C152575 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C152530 * C3355) *
              C152916 +
          (((C14897 + C14896 + C14895) * C152696 * C6341 +
            (C14898 + C14899 + C14900) * C152696 * C152462) *
               C152530 * C3355 -
           ((C15720 + C15721 + C15722) * C152696 * C152462 +
            (C15202 + C15201 + C15200) * C152696 * C6341) *
               C152530 * C152575) *
              C152899 +
          (((C15722 + C15721 + C15720) * C152696 * C6341 +
            (C14813 * C396 - C14814 * C376 - C14813 * C397 + C14810 * C412 +
             C14815 * C1241 - C14816 * C1231 - C14815 * C1242 + C14811 * C1249 +
             C14817 * C2890 - C14818 * C2889 - C14817 * C2891 +
             C14812 * C2892) *
                C152696 * C152462) *
               C152530 * C152575 -
           ((C14901 + C14902 + C14903) * C152696 * C152462 +
            (C14900 + C14899 + C14898) * C152696 * C6341) *
               C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152530 * C152924 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C152530 * C152920 +
           ((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
             C14815 * C1727 - C14816 * C1708 - C14815 * C1728 + C14811 * C1744 +
             C14817 * C1729 - C14818 * C1709 - C14817 * C1730 +
             C14812 * C1745) *
                C152696 * C6341 +
            (C15197 + C15198 + C15199) * C152696 * C152462) *
               C152530 * C152906 -
           ((C17040 + C17041 + C17042) * C152696 * C152462 +
            (C14817 * C8185 - C14818 * C8178 - C14817 * C8186 + C14812 * C8196 +
             C14815 * C2269 - C14816 * C2265 - C14815 * C2270 + C14811 * C2277 +
             C14813 * C1537 - C14814 * C1526 - C14813 * C1538 +
             C14810 * C1550) *
                C152696 * C6341) *
               C152530 * C152880) *
              C3495 +
          (((C15196 + C15195 + C15194) * C152696 * C6341 +
            (C15200 + C15201 + C15202) * C152696 * C152462) *
               C152530 * C152920 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C152530 * C152924 -
           ((C15203 + C15204 + C15205) * C152696 * C152462 +
            (C15199 + C15198 + C15197) * C152696 * C6341) *
               C152530 * C152906 +
           ((C17042 + C17041 + C17040) * C152696 * C6341 +
            (C14813 * C1533 - C14814 * C1524 - C14813 * C1534 + C14810 * C1548 +
             C14815 * C2273 - C14816 * C2267 - C14815 * C2274 + C14811 * C2279 +
             C14817 * C9823 - C14818 * C9822 - C14817 * C9824 +
             C14812 * C9825) *
                C152696 * C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C4361 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152617) *
               C152571 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152617 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C4361) *
               C152578 +
           (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
             (C6589 + C6590 + C6619) * C152462) *
                C4361 -
            ((C8741 + C8736 + C8737) * C152462 +
             (C8950 * C6340 + C8234 * C6339 + C7577 * C6338) * C6341) *
                C152617) *
               C3839) *
              C152814 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152617 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C4361) *
               C152571 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C4361 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152617) *
               C152578 +
           (((C8737 + C8736 + C8741) * C6341 +
             (C2131 * C6338 + C7580 * C6339 +
              (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                  C6340) *
                 C152462) *
                C152617 -
            ((C6620 + C6602 + C6603) * C152462 +
             (C6619 + C6590 + C6589) * C6341) *
                C4361) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C4361 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C152617) *
               C152571 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C152617 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C4361) *
               C152578 +
           (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                 C152696 * C123 +
             C476 * C124 + C477 * C125 + C478 * C126) *
                C4361 -
            (C2133 * C126 + C2134 * C125 + C2135 * C124 +
             (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                 C152696 * C123) *
                C152617) *
               C3839) *
              C152814 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152617 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C4361) *
               C152571 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C4361 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C152617) *
               C152578 +
           ((C2135 * C123 + C2134 * C124 + C2133 * C125 +
             (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                 C152696 * C126) *
                C152617 -
            (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C4361) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C152696 * C6341 +
             (C14892 + C14893 + C14894) * C152696 * C152462) *
                C4361 -
            ((C15496 + C15497 + C15498) * C152696 * C152462 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C152696 * C6341) *
                C152617) *
               C152571 +
           (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 +
              C14810 * C1245 + C14815 * C1719 - C14816 * C1704 -
              C14815 * C1720 + C14811 * C1740 + C14817 * C3213 -
              C14818 * C3209 - C14817 * C3214 + C14812 * C3221) *
                 C152696 * C6341 +
             (C16264 + C16265 + C16266) * C152696 * C152462) *
                C152617 -
            ((C15194 + C15195 + C15196) * C152696 * C152462 +
             (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 +
              C14812 * C1740 + C14815 * C1233 - C14816 * C1227 -
              C14815 * C1234 + C14811 * C1245 + C14813 * C386 - C14814 * C371 -
              C14813 * C387 + C14810 * C407) *
                 C152696 * C6341) *
                C4361) *
               C152578 +
           (((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
              C14815 * C1727 - C14816 * C1708 - C14815 * C1728 +
              C14811 * C1744 + C14817 * C1729 - C14818 * C1709 -
              C14817 * C1730 + C14812 * C1745) *
                 C152696 * C6341 +
             (C15197 + C15198 + C15199) * C152696 * C152462) *
                C4361 -
            ((C17351 + C17352 + C17353) * C152696 * C152462 +
             (C14817 * C9516 - C14818 * C9509 - C14817 * C9517 +
              C14812 * C9527 + C14815 * C1729 - C14816 * C1709 -
              C14815 * C1730 + C14811 * C1745 + C14813 * C1727 -
              C14814 * C1708 - C14813 * C1728 + C14810 * C1744) *
                 C152696 * C6341) *
                C152617) *
               C3839) *
              C152814 +
          ((((C15498 + C15497 + C15496) * C152696 * C6341 +
             (C15502 + C15503 + C15504) * C152696 * C152462) *
                C152617 -
            ((C14895 + C14896 + C14897) * C152696 * C152462 +
             (C14894 + C14893 + C14892) * C152696 * C6341) *
                C4361) *
               C152571 +
           (((C15196 + C15195 + C15194) * C152696 * C6341 +
             (C15200 + C15201 + C15202) * C152696 * C152462) *
                C4361 -
            ((C16267 + C16268 + C16269) * C152696 * C152462 +
             (C16266 + C16265 + C16264) * C152696 * C6341) *
                C152617) *
               C152578 +
           (((C17353 + C17352 + C17351) * C152696 * C6341 +
             (C14813 * C1723 - C14814 * C1706 - C14813 * C1724 +
              C14810 * C1742 + C14815 * C1733 - C14816 * C1711 -
              C14815 * C1734 + C14811 * C1747 + C14817 * C10024 -
              C14818 * C10023 - C14817 * C10025 + C14812 * C10026) *
                 C152696 * C152462) *
                C152617 -
            ((C15203 + C15204 + C15205) * C152696 * C152462 +
             (C15199 + C15198 + C15197) * C152696 * C6341) *
                C4361) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152613 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152620 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             C8232 * C6339 + C8233 * C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C5033) *
              C152571 +
          (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
            (C7557 + C7558 + C7581) * C152462) *
               C152620 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152613 -
           ((C9827 + C9828 + C9829) * C152462 +
            (C8236 * C6340 + C8233 * C6339 + C8232 * C6338) * C6341) *
               C5033) *
              C152578 +
          (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152613 -
           ((C8741 + C8736 + C8737) * C152462 +
            (C8950 * C6340 + C8234 * C6339 + C7577 * C6338) * C6341) *
               C152620 +
           ((C8233 * C6338 + C8236 * C6339 +
             (C134 * C8191 - C135 * C8181 - C134 * C8192 + C152711 * C8199) *
                 C6340) *
                C6341 +
            (C6861 * C6338 + C8235 * C6339 +
             (C134 * C8193 - C135 * C8182 - C134 * C8194 + C152711 * C8200) *
                 C6340) *
                C152462) *
               C5033) *
              C3839) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152613 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C152620 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C152696 * C123 +
            C737 * C124 + C738 * C125 + C739 * C126) *
               C5033) *
              C152571 +
          (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                C152696 * C123 +
            C1280 * C124 + C1281 * C125 + C1282 * C126) *
               C152620 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152613 -
           (C2915 * C126 + C2916 * C125 + C2917 * C124 +
            (C134 * C1719 - C135 * C1704 - C134 * C1720 + C152711 * C1740) *
                C152696 * C123) *
               C5033) *
              C152578 +
          (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152613 -
           (C2133 * C126 + C2134 * C125 + C2135 * C124 +
            (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                C152696 * C123) *
               C152620 +
           ((C134 * C1729 - C135 * C1709 - C134 * C1730 + C152711 * C1745) *
                C152696 * C123 +
            (C134 * C1731 - C135 * C1710 - C134 * C1732 + C152711 * C1746) *
                C152696 * C124 +
            (C134 * C1733 - C135 * C1711 - C134 * C1734 + C152711 * C1747) *
                C152696 * C125 +
            (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                C152696 * C126) *
               C5033) *
              C3839) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152613 -
           ((C15496 + C15497 + C15498) * C152696 * C152462 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C152696 * C6341) *
               C152620 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C152696 * C6341 +
            (C15499 + C15500 + C15501) * C152696 * C152462) *
               C5033) *
              C152571 +
          (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 + C14810 * C1245 +
             C14815 * C1719 - C14816 * C1704 - C14815 * C1720 + C14811 * C1740 +
             C14817 * C3213 - C14818 * C3209 - C14817 * C3214 +
             C14812 * C3221) *
                C152696 * C6341 +
            (C16264 + C16265 + C16266) * C152696 * C152462) *
               C152620 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C152613 -
           ((C18434 + C18435 + C18436) * C152696 * C152462 +
            (C14817 * C9518 - C14818 * C9510 - C14817 * C9519 + C14812 * C9528 +
             C14815 * C3213 - C14816 * C3209 - C14815 * C3214 + C14811 * C3221 +
             C14813 * C1719 - C14814 * C1704 - C14813 * C1720 +
             C14810 * C1740) *
                C152696 * C6341) *
               C5033) *
              C152578 +
          (((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
             C14815 * C1727 - C14816 * C1708 - C14815 * C1728 + C14811 * C1744 +
             C14817 * C1729 - C14818 * C1709 - C14817 * C1730 +
             C14812 * C1745) *
                C152696 * C6341 +
            (C15197 + C15198 + C15199) * C152696 * C152462) *
               C152613 -
           ((C17351 + C17352 + C17353) * C152696 * C152462 +
            (C14817 * C9516 - C14818 * C9509 - C14817 * C9517 + C14812 * C9527 +
             C14815 * C1729 - C14816 * C1709 - C14815 * C1730 + C14811 * C1745 +
             C14813 * C1727 - C14814 * C1708 - C14813 * C1728 +
             C14810 * C1744) *
                C152696 * C6341) *
               C152620 +
           ((C14813 * C1729 - C14814 * C1709 - C14813 * C1730 + C14810 * C1745 +
             C14815 * C9516 - C14816 * C9509 - C14815 * C9517 + C14811 * C9527 +
             C14817 * C9520 - C14818 * C9511 - C14817 * C9521 +
             C14812 * C9529) *
                C152696 * C6341 +
            (C14813 * C1731 - C14814 * C1710 - C14813 * C1732 + C14810 * C1746 +
             C14815 * C9514 - C14816 * C9508 - C14815 * C9515 + C14811 * C9526 +
             C14817 * C9524 - C14818 * C9513 - C14817 * C9525 +
             C14812 * C9531) *
                C152696 * C152462) *
               C5033) *
              C3839) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                     C152696 * C123 +
                 C211 * C124 + C212 * C125 + C213 * C126) *
                    C4361 -
                (C734 * C126 + C735 * C125 + C736 * C124 +
                 (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                     C152696 * C123) *
                    C152617) *
                   C3355 +
               (((C134 * C1233 - C135 * C1227 - C134 * C1234 +
                  C152711 * C1245) *
                     C152696 * C123 +
                 C1280 * C124 + C1281 * C125 + C1282 * C126) *
                    C152617 -
                (C473 * C126 + C474 * C125 + C475 * C124 +
                 (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                     C152696 * C123) *
                    C4361) *
                   C152575) *
                  C152914 +
              (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) *
                    C152617 -
                (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) *
                    C4361) *
                   C3355 +
               ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) *
                    C4361 -
                (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                    C152617) *
                   C152575) *
                  C152897 +
              (((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) *
                    C4361 -
                (C1033 * C126 + C740 * C125 + C734 * C124 + C735 * C123) *
                    C152617) *
                   C3355 +
               ((C1281 * C123 + C1282 * C124 + C1283 * C125 +
                 (C134 * C1243 - C135 * C1232 - C134 * C1244 +
                  C152711 * C1250) *
                     C152696 * C126) *
                    C152617 -
                (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) *
                    C4361) *
                   C152575) *
                  C152864) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                    C152696 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126) *
                   C4361 -
               (C734 * C126 + C735 * C125 + C736 * C124 +
                (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                    C152696 * C123) *
                   C152617) *
                  C152924 +
              (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                    C152696 * C123 +
                C1280 * C124 + C1281 * C125 + C1282 * C126) *
                   C152617 -
               (C473 * C126 + C474 * C125 + C475 * C124 +
                (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                    C152696 * C123) *
                   C4361) *
                  C152920 +
              (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                    C152696 * C123 +
                C476 * C124 + C477 * C125 + C478 * C126) *
                   C4361 -
               (C2133 * C126 + C2134 * C125 + C2135 * C124 +
                (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                    C152696 * C123) *
                   C152617) *
                  C152906 +
              (((C134 * C2269 - C135 * C2265 - C134 * C2270 + C152711 * C2277) *
                    C152696 * C123 +
                (C134 * C2271 - C135 * C2266 - C134 * C2272 + C152711 * C2278) *
                    C152696 * C124 +
                (C134 * C2273 - C135 * C2267 - C134 * C2274 + C152711 * C2279) *
                    C152696 * C125 +
                (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                    C152696 * C126) *
                   C152617 -
               (C1911 * C126 + C1912 * C125 + C1913 * C124 +
                (C134 * C1537 - C135 * C1526 - C134 * C1538 + C152711 * C1550) *
                    C152696 * C123) *
                   C4361) *
                  C152880) *
             C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152925 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C152922 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C152696 * C123 +
            C737 * C124 + C738 * C125 + C739 * C126) *
               C152909 -
           (C3077 * C126 + C3078 * C125 + C3079 * C124 +
            (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                C152696 * C123) *
               C152886) *
              C3355 +
          (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                C152696 * C123 +
            C1280 * C124 + C1281 * C125 + C1282 * C126) *
               C152922 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152925 -
           (C2915 * C126 + C2916 * C125 + C2917 * C124 +
            (C134 * C1719 - C135 * C1704 - C134 * C1720 + C152711 * C1740) *
                C152696 * C123) *
               C152909 +
           ((C134 * C3213 - C135 * C3209 - C134 * C3214 + C152711 * C3221) *
                C152696 * C123 +
            (C134 * C3215 - C135 * C3210 - C134 * C3216 + C152711 * C3222) *
                C152696 * C124 +
            (C134 * C3217 - C135 * C3211 - C134 * C3218 + C152711 * C3223) *
                C152696 * C125 +
            (C134 * C3219 - C135 * C3212 - C134 * C3220 + C152711 * C3224) *
                C152696 * C126) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C4361 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152617) *
               C3355 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152617 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C4361) *
               C152575) *
              C152914 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152617 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C4361) *
               C3355 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C4361 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152617) *
               C152575) *
              C152897 +
          ((((C6349 + C6348 + C6347) * C6341 +
             (C6350 + C6351 + C6352) * C152462) *
                C4361 -
            ((C7256 + C7257 + C7258) * C152462 +
             (C6850 + C6849 + C6848) * C6341) *
                C152617) *
               C3355 +
           (((C7568 + C7567 + C7582) * C6341 +
             (C1278 * C6338 + C2130 * C6339 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C6340) *
                 C152462) *
                C152617 -
            ((C7059 + C7060 + C7061) * C152462 +
             (C6597 + C6596 + C6595) * C6341) *
                C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C4361 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152617) *
              C152924 +
          (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
            (C7557 + C7558 + C7581) * C152462) *
               C152617 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C4361) *
              C152920 +
          (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C4361 -
           ((C8741 + C8736 + C8737) * C152462 +
            (C8950 * C6340 + C8234 * C6339 + C7577 * C6338) * C6341) *
               C152617) *
              C152906 +
          (((C8234 * C6338 + C8950 * C6339 +
             (C134 * C8937 - C135 * C8935 - C134 * C8938 + C152711 * C8941) *
                 C6340) *
                C6341 +
            (C7579 * C6338 + C8740 * C6339 +
             (C134 * C8939 - C135 * C8936 - C134 * C8940 + C152711 * C8942) *
                 C6340) *
                C152462) *
               C152617 -
           ((C8435 + C8436 + C8437) * C152462 +
            (C7959 * C6340 + C7957 * C6339 + C6616 * C6338) * C6341) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152925 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152922 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             C8232 * C6339 + C8233 * C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C152909 -
           ((C10043 + C10044 + C10036) * C152462 +
            (C10259 * C6340 + C10260 * C6339 +
             (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                 C6338) *
                C6341) *
               C152886) *
              C3355 +
          (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
            (C7557 + C7558 + C7581) * C152462) *
               C152922 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152925 -
           ((C9827 + C9828 + C9829) * C152462 +
            (C8236 * C6340 + C8233 * C6339 + C8232 * C6338) * C6341) *
               C152909 +
           ((C10260 * C6338 + C10259 * C6339 +
             (C134 * C10240 - C135 * C10238 - C134 * C10241 +
              C152711 * C10244) *
                 C6340) *
                C6341 +
            (C10042 * C6338 + C10041 * C6339 +
             (C134 * C10242 - C135 * C10239 - C134 * C10243 +
              C152711 * C10245) *
                 C6340) *
                C152462) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C152696 * C6341 +
             (C14892 + C14893 + C14894) * C152696 * C152462) *
                C4361 -
            ((C15496 + C15497 + C15498) * C152696 * C152462 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C152696 * C6341) *
                C152617) *
               C3355 +
           (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 +
              C14810 * C1245 + C14815 * C1719 - C14816 * C1704 -
              C14815 * C1720 + C14811 * C1740 + C14817 * C3213 -
              C14818 * C3209 - C14817 * C3214 + C14812 * C3221) *
                 C152696 * C6341 +
             (C16264 + C16265 + C16266) * C152696 * C152462) *
                C152617 -
            ((C15194 + C15195 + C15196) * C152696 * C152462 +
             (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 +
              C14812 * C1740 + C14815 * C1233 - C14816 * C1227 -
              C14815 * C1234 + C14811 * C1245 + C14813 * C386 - C14814 * C371 -
              C14813 * C387 + C14810 * C407) *
                 C152696 * C6341) *
                C4361) *
               C152575) *
              C152914 +
          ((((C15498 + C15497 + C15496) * C152696 * C6341 +
             (C15502 + C15503 + C15504) * C152696 * C152462) *
                C152617 -
            ((C14895 + C14896 + C14897) * C152696 * C152462 +
             (C14894 + C14893 + C14892) * C152696 * C6341) *
                C4361) *
               C3355 +
           (((C15196 + C15195 + C15194) * C152696 * C6341 +
             (C15200 + C15201 + C15202) * C152696 * C152462) *
                C4361 -
            ((C16267 + C16268 + C16269) * C152696 * C152462 +
             (C16266 + C16265 + C16264) * C152696 * C6341) *
                C152617) *
               C152575) *
              C152897 +
          ((((C14897 + C14896 + C14895) * C152696 * C6341 +
             (C14898 + C14899 + C14900) * C152696 * C152462) *
                C4361 -
            ((C15935 + C15936 + C15937) * C152696 * C152462 +
             (C15504 + C15503 + C15502) * C152696 * C6341) *
                C152617) *
               C3355 +
           (((C16269 + C16268 + C16267) * C152696 * C6341 +
             (C14813 * C1239 - C14814 * C1230 - C14813 * C1240 +
              C14810 * C1248 + C14815 * C1713 - C14816 * C1701 -
              C14815 * C1714 + C14811 * C1737 + C14817 * C3219 -
              C14818 * C3212 - C14817 * C3220 + C14812 * C3224) *
                 C152696 * C152462) *
                C152617 -
            ((C15720 + C15721 + C15722) * C152696 * C152462 +
             (C15202 + C15201 + C15200) * C152696 * C6341) *
                C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C4361 -
           ((C15496 + C15497 + C15498) * C152696 * C152462 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C152696 * C6341) *
               C152617) *
              C152924 +
          (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 + C14810 * C1245 +
             C14815 * C1719 - C14816 * C1704 - C14815 * C1720 + C14811 * C1740 +
             C14817 * C3213 - C14818 * C3209 - C14817 * C3214 +
             C14812 * C3221) *
                C152696 * C6341 +
            (C16264 + C16265 + C16266) * C152696 * C152462) *
               C152617 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C4361) *
              C152920 +
          (((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
             C14815 * C1727 - C14816 * C1708 - C14815 * C1728 + C14811 * C1744 +
             C14817 * C1729 - C14818 * C1709 - C14817 * C1730 +
             C14812 * C1745) *
                C152696 * C6341 +
            (C15197 + C15198 + C15199) * C152696 * C152462) *
               C4361 -
           ((C17351 + C17352 + C17353) * C152696 * C152462 +
            (C14817 * C9516 - C14818 * C9509 - C14817 * C9517 + C14812 * C9527 +
             C14815 * C1729 - C14816 * C1709 - C14815 * C1730 + C14811 * C1745 +
             C14813 * C1727 - C14814 * C1708 - C14813 * C1728 +
             C14810 * C1744) *
                C152696 * C6341) *
               C152617) *
              C152906 +
          (((C14813 * C2269 - C14814 * C2265 - C14813 * C2270 + C14810 * C2277 +
             C14815 * C8185 - C14816 * C8178 - C14815 * C8186 + C14811 * C8196 +
             C14817 * C10240 - C14818 * C10238 - C14817 * C10241 +
             C14812 * C10244) *
                C152696 * C6341 +
            (C14813 * C2271 - C14814 * C2266 - C14813 * C2272 + C14810 * C2278 +
             C14815 * C8183 - C14816 * C8177 - C14815 * C8184 + C14811 * C8195 +
             C14817 * C10242 - C14818 * C10239 - C14817 * C10243 +
             C14812 * C10245) *
                C152696 * C152462) *
               C152617 -
           ((C17040 + C17041 + C17042) * C152696 * C152462 +
            (C14817 * C8185 - C14818 * C8178 - C14817 * C8186 + C14812 * C8196 +
             C14815 * C2269 - C14816 * C2265 - C14815 * C2270 + C14811 * C2277 +
             C14813 * C1537 - C14814 * C1526 - C14813 * C1538 +
             C14810 * C1550) *
                C152696 * C6341) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152925 -
           ((C15496 + C15497 + C15498) * C152696 * C152462 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C152696 * C6341) *
               C152922 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C152696 * C6341 +
            (C15499 + C15500 + C15501) * C152696 * C152462) *
               C152909 -
           ((C18653 + C18654 + C18655) * C152696 * C152462 +
            (C14817 * C18111 - C14818 * C18106 - C14817 * C18112 +
             C14812 * C18118 + C14815 * C2679 - C14816 * C2667 -
             C14815 * C2680 + C14811 * C2691 + C14813 * C2677 - C14814 * C2666 -
             C14813 * C2678 + C14810 * C2690) *
                C152696 * C6341) *
               C152886) *
              C3355 +
          (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 + C14810 * C1245 +
             C14815 * C1719 - C14816 * C1704 - C14815 * C1720 + C14811 * C1740 +
             C14817 * C3213 - C14818 * C3209 - C14817 * C3214 +
             C14812 * C3221) *
                C152696 * C6341 +
            (C16264 + C16265 + C16266) * C152696 * C152462) *
               C152922 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C152925 -
           ((C18434 + C18435 + C18436) * C152696 * C152462 +
            (C14817 * C9518 - C14818 * C9510 - C14817 * C9519 + C14812 * C9528 +
             C14815 * C3213 - C14816 * C3209 - C14815 * C3214 + C14811 * C3221 +
             C14813 * C1719 - C14814 * C1704 - C14813 * C1720 +
             C14810 * C1740) *
                C152696 * C6341) *
               C152909 +
           ((C14813 * C3213 - C14814 * C3209 - C14813 * C3214 + C14810 * C3221 +
             C14815 * C9518 - C14816 * C9510 - C14815 * C9519 + C14811 * C9528 +
             C14817 * C18851 - C14818 * C18849 - C14817 * C18852 +
             C14812 * C18855) *
                C152696 * C6341 +
            (C14813 * C3215 - C14814 * C3210 - C14813 * C3216 + C14810 * C3222 +
             C14815 * C9522 - C14816 * C9512 - C14815 * C9523 + C14811 * C9530 +
             C14817 * C18853 - C14818 * C18850 - C14817 * C18854 +
             C14812 * C18856) *
                C152696 * C152462) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C152613 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152620 +
            (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                  C6338 +
              C8232 * C6339 + C8233 * C6340) *
                 C6341 +
             (C6842 + C6843 + C6863) * C152462) *
                C5033) *
               C3355 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152620 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C152613 -
            ((C9827 + C9828 + C9829) * C152462 +
             (C8236 * C6340 + C8233 * C6339 + C8232 * C6338) * C6341) *
                C5033) *
               C152575) *
              C152814 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152620 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C152613 -
            ((C6864 + C6855 + C6856) * C152462 +
             (C6863 + C6843 + C6842) * C6341) *
                C5033) *
               C3355 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C152613 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152620 +
            ((C9829 + C9828 + C9827) * C6341 +
             (C2913 * C6338 + C6862 * C6339 +
              (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                  C6340) *
                 C152462) *
                C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C152613 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C152620 +
            ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152696 * C123 +
             C737 * C124 + C738 * C125 + C739 * C126) *
                C5033) *
               C3355 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C152620 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C152613 -
            (C2915 * C126 + C2916 * C125 + C2917 * C124 +
             (C134 * C1719 - C135 * C1704 - C134 * C1720 + C152711 * C1740) *
                 C152696 * C123) *
                C5033) *
               C152575) *
              C152814 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152620 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152613 -
            (C741 * C126 + C739 * C125 + C738 * C124 + C737 * C123) * C5033) *
               C3355 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152613 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C152620 +
            (C2917 * C123 + C2916 * C124 + C2915 * C125 +
             (C134 * C2890 - C135 * C2889 - C134 * C2891 + C152711 * C2892) *
                 C152696 * C126) *
                C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C152696 * C6341 +
             (C14892 + C14893 + C14894) * C152696 * C152462) *
                C152613 -
            ((C15496 + C15497 + C15498) * C152696 * C152462 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C152696 * C6341) *
                C152620 +
            ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
              C14815 * C2677 - C14816 * C2666 - C14815 * C2678 +
              C14811 * C2690 + C14817 * C2679 - C14818 * C2667 -
              C14817 * C2680 + C14812 * C2691) *
                 C152696 * C6341 +
             (C15499 + C15500 + C15501) * C152696 * C152462) *
                C5033) *
               C3355 +
           (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 +
              C14810 * C1245 + C14815 * C1719 - C14816 * C1704 -
              C14815 * C1720 + C14811 * C1740 + C14817 * C3213 -
              C14818 * C3209 - C14817 * C3214 + C14812 * C3221) *
                 C152696 * C6341 +
             (C16264 + C16265 + C16266) * C152696 * C152462) *
                C152620 -
            ((C15194 + C15195 + C15196) * C152696 * C152462 +
             (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 +
              C14812 * C1740 + C14815 * C1233 - C14816 * C1227 -
              C14815 * C1234 + C14811 * C1245 + C14813 * C386 - C14814 * C371 -
              C14813 * C387 + C14810 * C407) *
                 C152696 * C6341) *
                C152613 -
            ((C18434 + C18435 + C18436) * C152696 * C152462 +
             (C14817 * C9518 - C14818 * C9510 - C14817 * C9519 +
              C14812 * C9528 + C14815 * C3213 - C14816 * C3209 -
              C14815 * C3214 + C14811 * C3221 + C14813 * C1719 -
              C14814 * C1704 - C14813 * C1720 + C14810 * C1740) *
                 C152696 * C6341) *
                C5033) *
               C152575) *
              C152814 +
          ((((C15498 + C15497 + C15496) * C152696 * C6341 +
             (C15502 + C15503 + C15504) * C152696 * C152462) *
                C152620 -
            ((C14895 + C14896 + C14897) * C152696 * C152462 +
             (C14894 + C14893 + C14892) * C152696 * C6341) *
                C152613 -
            ((C15505 + C15506 + C15507) * C152696 * C152462 +
             (C15501 + C15500 + C15499) * C152696 * C6341) *
                C5033) *
               C3355 +
           (((C15196 + C15195 + C15194) * C152696 * C6341 +
             (C15200 + C15201 + C15202) * C152696 * C152462) *
                C152613 -
            ((C16267 + C16268 + C16269) * C152696 * C152462 +
             (C16266 + C16265 + C16264) * C152696 * C6341) *
                C152620 +
            ((C18436 + C18435 + C18434) * C152696 * C6341 +
             (C14813 * C1715 - C14814 * C1702 - C14813 * C1716 +
              C14810 * C1738 + C14815 * C3217 - C14816 * C3211 -
              C14815 * C3218 + C14811 * C3223 + C14817 * C18412 -
              C14818 * C18411 - C14817 * C18413 + C14812 * C18414) *
                 C152696 * C152462) *
                C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C4361 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C152617) *
              C152924 +
          (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                C152696 * C123 +
            C1280 * C124 + C1281 * C125 + C1282 * C126) *
               C152617 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C4361) *
              C152920 +
          (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C4361 -
           (C2133 * C126 + C2134 * C125 + C2135 * C124 +
            (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                C152696 * C123) *
               C152617) *
              C152906 +
          (((C134 * C2269 - C135 * C2265 - C134 * C2270 + C152711 * C2277) *
                C152696 * C123 +
            (C134 * C2271 - C135 * C2266 - C134 * C2272 + C152711 * C2278) *
                C152696 * C124 +
            (C134 * C2273 - C135 * C2267 - C134 * C2274 + C152711 * C2279) *
                C152696 * C125 +
            (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                C152696 * C126) *
               C152617 -
           (C1911 * C126 + C1912 * C125 + C1913 * C124 +
            (C134 * C1537 - C135 * C1526 - C134 * C1538 + C152711 * C1550) *
                C152696 * C123) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C4361 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C152617) *
               C3355 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C152617 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C4361) *
               C152575) *
              C152914 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152617 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C4361) *
               C3355 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C4361 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C152617) *
               C152575) *
              C152897 +
          (((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C4361 -
            (C1033 * C126 + C740 * C125 + C734 * C124 + C735 * C123) *
                C152617) *
               C3355 +
           ((C1281 * C123 + C1282 * C124 + C1283 * C125 +
             (C134 * C1243 - C135 * C1232 - C134 * C1244 + C152711 * C1250) *
                 C152696 * C126) *
                C152617 -
            (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) * C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C4361 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152617) *
               C3355 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152617 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C4361) *
               C152575) *
              C152914 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152617 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C4361) *
               C3355 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C4361 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152617) *
               C152575) *
              C152897 +
          ((((C6349 + C6348 + C6347) * C6341 +
             (C6350 + C6351 + C6352) * C152462) *
                C4361 -
            ((C7256 + C7257 + C7258) * C152462 +
             (C6850 + C6849 + C6848) * C6341) *
                C152617) *
               C3355 +
           (((C7568 + C7567 + C7582) * C6341 +
             (C1278 * C6338 + C2130 * C6339 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C6340) *
                 C152462) *
                C152617 -
            ((C7059 + C7060 + C7061) * C152462 +
             (C6597 + C6596 + C6595) * C6341) *
                C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C4361 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152617) *
              C152924 +
          (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
            (C7557 + C7558 + C7581) * C152462) *
               C152617 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C4361) *
              C152920 +
          (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C4361 -
           ((C8741 + C8736 + C8737) * C152462 +
            (C8950 * C6340 + C8234 * C6339 + C7577 * C6338) * C6341) *
               C152617) *
              C152906 +
          (((C8234 * C6338 + C8950 * C6339 +
             (C134 * C8937 - C135 * C8935 - C134 * C8938 + C152711 * C8941) *
                 C6340) *
                C6341 +
            (C7579 * C6338 + C8740 * C6339 +
             (C134 * C8939 - C135 * C8936 - C134 * C8940 + C152711 * C8942) *
                 C6340) *
                C152462) *
               C152617 -
           ((C8435 + C8436 + C8437) * C152462 +
            (C7959 * C6340 + C7957 * C6339 + C6616 * C6338) * C6341) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C152696 * C6341 +
             (C14892 + C14893 + C14894) * C152696 * C152462) *
                C4361 -
            ((C15496 + C15497 + C15498) * C152696 * C152462 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C152696 * C6341) *
                C152617) *
               C3355 +
           (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 +
              C14810 * C1245 + C14815 * C1719 - C14816 * C1704 -
              C14815 * C1720 + C14811 * C1740 + C14817 * C3213 -
              C14818 * C3209 - C14817 * C3214 + C14812 * C3221) *
                 C152696 * C6341 +
             (C16264 + C16265 + C16266) * C152696 * C152462) *
                C152617 -
            ((C15194 + C15195 + C15196) * C152696 * C152462 +
             (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 +
              C14812 * C1740 + C14815 * C1233 - C14816 * C1227 -
              C14815 * C1234 + C14811 * C1245 + C14813 * C386 - C14814 * C371 -
              C14813 * C387 + C14810 * C407) *
                 C152696 * C6341) *
                C4361) *
               C152575) *
              C152914 +
          ((((C15498 + C15497 + C15496) * C152696 * C6341 +
             (C15502 + C15503 + C15504) * C152696 * C152462) *
                C152617 -
            ((C14895 + C14896 + C14897) * C152696 * C152462 +
             (C14894 + C14893 + C14892) * C152696 * C6341) *
                C4361) *
               C3355 +
           (((C15196 + C15195 + C15194) * C152696 * C6341 +
             (C15200 + C15201 + C15202) * C152696 * C152462) *
                C4361 -
            ((C16267 + C16268 + C16269) * C152696 * C152462 +
             (C16266 + C16265 + C16264) * C152696 * C6341) *
                C152617) *
               C152575) *
              C152897 +
          ((((C14897 + C14896 + C14895) * C152696 * C6341 +
             (C14898 + C14899 + C14900) * C152696 * C152462) *
                C4361 -
            ((C15935 + C15936 + C15937) * C152696 * C152462 +
             (C15504 + C15503 + C15502) * C152696 * C6341) *
                C152617) *
               C3355 +
           (((C16269 + C16268 + C16267) * C152696 * C6341 +
             (C14813 * C1239 - C14814 * C1230 - C14813 * C1240 +
              C14810 * C1248 + C14815 * C1713 - C14816 * C1701 -
              C14815 * C1714 + C14811 * C1737 + C14817 * C3219 -
              C14818 * C3212 - C14817 * C3220 + C14812 * C3224) *
                 C152696 * C152462) *
                C152617 -
            ((C15720 + C15721 + C15722) * C152696 * C152462 +
             (C15202 + C15201 + C15200) * C152696 * C6341) *
                C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C4361 -
           ((C15496 + C15497 + C15498) * C152696 * C152462 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C152696 * C6341) *
               C152617) *
              C152924 +
          (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 + C14810 * C1245 +
             C14815 * C1719 - C14816 * C1704 - C14815 * C1720 + C14811 * C1740 +
             C14817 * C3213 - C14818 * C3209 - C14817 * C3214 +
             C14812 * C3221) *
                C152696 * C6341 +
            (C16264 + C16265 + C16266) * C152696 * C152462) *
               C152617 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C4361) *
              C152920 +
          (((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
             C14815 * C1727 - C14816 * C1708 - C14815 * C1728 + C14811 * C1744 +
             C14817 * C1729 - C14818 * C1709 - C14817 * C1730 +
             C14812 * C1745) *
                C152696 * C6341 +
            (C15197 + C15198 + C15199) * C152696 * C152462) *
               C4361 -
           ((C17351 + C17352 + C17353) * C152696 * C152462 +
            (C14817 * C9516 - C14818 * C9509 - C14817 * C9517 + C14812 * C9527 +
             C14815 * C1729 - C14816 * C1709 - C14815 * C1730 + C14811 * C1745 +
             C14813 * C1727 - C14814 * C1708 - C14813 * C1728 +
             C14810 * C1744) *
                C152696 * C6341) *
               C152617) *
              C152906 +
          (((C14813 * C2269 - C14814 * C2265 - C14813 * C2270 + C14810 * C2277 +
             C14815 * C8185 - C14816 * C8178 - C14815 * C8186 + C14811 * C8196 +
             C14817 * C10240 - C14818 * C10238 - C14817 * C10241 +
             C14812 * C10244) *
                C152696 * C6341 +
            (C14813 * C2271 - C14814 * C2266 - C14813 * C2272 + C14810 * C2278 +
             C14815 * C8183 - C14816 * C8177 - C14815 * C8184 + C14811 * C8195 +
             C14817 * C10242 - C14818 * C10239 - C14817 * C10243 +
             C14812 * C10245) *
                C152696 * C152462) *
               C152617 -
           ((C17040 + C17041 + C17042) * C152696 * C152462 +
            (C14817 * C8185 - C14818 * C8178 - C14817 * C8186 + C14812 * C8196 +
             C14815 * C2269 - C14816 * C2265 - C14815 * C2270 + C14811 * C2277 +
             C14813 * C1537 - C14814 * C1526 - C14813 * C1538 +
             C14810 * C1550) *
                C152696 * C6341) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                    C152696 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126) *
                   C152530 * C152828 -
               (C473 * C126 + C474 * C125 + C475 * C124 +
                (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                    C152696 * C123) *
                   C152530 * C152575) *
                  C873 +
              ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) *
                   C152530 * C152575 -
               (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) *
                   C152530 * C152828) *
                  C874 +
              ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) *
                   C152530 * C152828 -
               (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) *
                   C152530 * C152575) *
                  C875 +
              ((C473 * C123 + C479 * C124 + C889 * C125 +
                (C134 * C878 - C135 * C877 - C134 * C879 + C152711 * C880) *
                    C152696 * C126) *
                   C152530 * C152575 -
               (C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) *
                   C152530 * C152828) *
                  C152874) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                    C152696 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126) *
                   C152530 * C1879 -
               (C473 * C126 + C474 * C125 + C475 * C124 +
                (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                    C152696 * C123) *
                   C152530 * C1880 +
               ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                    C152696 * C123 +
                C476 * C124 + C477 * C125 + C478 * C126) *
                   C152530 * C1881 -
               (C1911 * C126 + C1912 * C125 + C1913 * C124 +
                (C134 * C1537 - C135 * C1526 - C134 * C1538 + C152711 * C1550) *
                    C152696 * C123) *
                   C152530 * C152880) *
                  C152814 +
              ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) *
                   C152530 * C1880 -
               (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) *
                   C152530 * C1879 -
               (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) *
                   C152530 * C1881 +
               (C1913 * C123 + C1912 * C124 + C1911 * C125 +
                (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                    C152696 * C126) *
                   C152530 * C152880) *
                  C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C2427 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C2428 +
            ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152696 * C123 +
             C737 * C124 + C738 * C125 + C739 * C126) *
                C152873) *
               C152828 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C2428 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C2427 -
            (C2915 * C126 + C2916 * C125 + C2917 * C124 +
             (C134 * C1719 - C135 * C1704 - C134 * C1720 + C152711 * C1740) *
                 C152696 * C123) *
                C152873) *
               C152575) *
              C152814 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C2428 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C2427 -
            (C741 * C126 + C739 * C125 + C738 * C124 + C737 * C123) * C152873) *
               C152828 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C2427 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C2428 +
            (C2917 * C123 + C2916 * C124 + C2915 * C125 +
             (C134 * C2890 - C135 * C2889 - C134 * C2891 + C152711 * C2892) *
                 C152696 * C126) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C152828 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C152575) *
              C873 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C152575 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C152828) *
              C874 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152530 * C152828 -
           ((C7059 + C7060 + C7061) * C152462 +
            (C6597 + C6596 + C6595) * C6341) *
               C152530 * C152575) *
              C875 +
          (((C7061 + C7060 + C7059) * C6341 +
            (C471 * C6338 + C472 * C6339 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C6340) *
                C152462) *
               C152530 * C152575 -
           ((C6353 + C6354 + C6355) * C152462 +
            (C6352 + C6351 + C6350) * C6341) *
               C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C1879 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C1880 +
           ((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152530 * C1881 -
           ((C8435 + C8436 + C8437) * C152462 +
            (C7959 * C6340 + C7957 * C6339 + C6616 * C6338) * C6341) *
               C152530 * C152880) *
              C152814 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C1880 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C1879 -
           ((C6620 + C6602 + C6603) * C152462 +
            (C6619 + C6590 + C6589) * C6341) *
               C152530 * C1881 +
           ((C8437 + C8436 + C8435) * C6341 +
            (C1909 * C6338 + C6618 * C6339 +
             (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                 C6340) *
                C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C2427 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C2428 +
            (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                  C6338 +
              C8232 * C6339 + C8233 * C6340) *
                 C6341 +
             (C6842 + C6843 + C6863) * C152462) *
                C152873) *
               C152828 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C2428 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C2427 -
            ((C9827 + C9828 + C9829) * C152462 +
             (C8236 * C6340 + C8233 * C6339 + C8232 * C6338) * C6341) *
                C152873) *
               C152575) *
              C152814 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C2428 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C2427 -
            ((C6864 + C6855 + C6856) * C152462 +
             (C6863 + C6843 + C6842) * C6341) *
                C152873) *
               C152828 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C2427 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C2428 +
            ((C9829 + C9828 + C9827) * C6341 +
             (C2913 * C6338 + C6862 * C6339 +
              (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                  C6340) *
                 C152462) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152530 * C152828 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C152530 * C152575) *
              C873 +
          (((C15196 + C15195 + C15194) * C152696 * C6341 +
            (C15200 + C15201 + C15202) * C152696 * C152462) *
               C152530 * C152575 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C152530 * C152828) *
              C874 +
          (((C14897 + C14896 + C14895) * C152696 * C6341 +
            (C14898 + C14899 + C14900) * C152696 * C152462) *
               C152530 * C152828 -
           ((C15720 + C15721 + C15722) * C152696 * C152462 +
            (C15202 + C15201 + C15200) * C152696 * C6341) *
               C152530 * C152575) *
              C875 +
          (((C15722 + C15721 + C15720) * C152696 * C6341 +
            (C14813 * C396 - C14814 * C376 - C14813 * C397 + C14810 * C412 +
             C14815 * C1241 - C14816 * C1231 - C14815 * C1242 + C14811 * C1249 +
             C14817 * C2890 - C14818 * C2889 - C14817 * C2891 +
             C14812 * C2892) *
                C152696 * C152462) *
               C152530 * C152575 -
           ((C14901 + C14902 + C14903) * C152696 * C152462 +
            (C14900 + C14899 + C14898) * C152696 * C6341) *
               C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152530 * C1879 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C152530 * C1880 +
           ((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
             C14815 * C1727 - C14816 * C1708 - C14815 * C1728 + C14811 * C1744 +
             C14817 * C1729 - C14818 * C1709 - C14817 * C1730 +
             C14812 * C1745) *
                C152696 * C6341 +
            (C15197 + C15198 + C15199) * C152696 * C152462) *
               C152530 * C1881 -
           ((C17040 + C17041 + C17042) * C152696 * C152462 +
            (C14817 * C8185 - C14818 * C8178 - C14817 * C8186 + C14812 * C8196 +
             C14815 * C2269 - C14816 * C2265 - C14815 * C2270 + C14811 * C2277 +
             C14813 * C1537 - C14814 * C1526 - C14813 * C1538 +
             C14810 * C1550) *
                C152696 * C6341) *
               C152530 * C152880) *
              C152814 +
          (((C15196 + C15195 + C15194) * C152696 * C6341 +
            (C15200 + C15201 + C15202) * C152696 * C152462) *
               C152530 * C1880 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C152530 * C1879 -
           ((C15203 + C15204 + C15205) * C152696 * C152462 +
            (C15199 + C15198 + C15197) * C152696 * C6341) *
               C152530 * C1881 +
           ((C17042 + C17041 + C17040) * C152696 * C6341 +
            (C14813 * C1533 - C14814 * C1524 - C14813 * C1534 + C14810 * C1548 +
             C14815 * C2273 - C14816 * C2267 - C14815 * C2274 + C14811 * C2279 +
             C14817 * C9823 - C14818 * C9822 - C14817 * C9824 +
             C14812 * C9825) *
                C152696 * C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C152696 * C6341 +
             (C14892 + C14893 + C14894) * C152696 * C152462) *
                C2427 -
            ((C15496 + C15497 + C15498) * C152696 * C152462 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C152696 * C6341) *
                C2428 +
            ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
              C14815 * C2677 - C14816 * C2666 - C14815 * C2678 +
              C14811 * C2690 + C14817 * C2679 - C14818 * C2667 -
              C14817 * C2680 + C14812 * C2691) *
                 C152696 * C6341 +
             (C15499 + C15500 + C15501) * C152696 * C152462) *
                C152873) *
               C152828 +
           (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 +
              C14810 * C1245 + C14815 * C1719 - C14816 * C1704 -
              C14815 * C1720 + C14811 * C1740 + C14817 * C3213 -
              C14818 * C3209 - C14817 * C3214 + C14812 * C3221) *
                 C152696 * C6341 +
             (C16264 + C16265 + C16266) * C152696 * C152462) *
                C2428 -
            ((C15194 + C15195 + C15196) * C152696 * C152462 +
             (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 +
              C14812 * C1740 + C14815 * C1233 - C14816 * C1227 -
              C14815 * C1234 + C14811 * C1245 + C14813 * C386 - C14814 * C371 -
              C14813 * C387 + C14810 * C407) *
                 C152696 * C6341) *
                C2427 -
            ((C18434 + C18435 + C18436) * C152696 * C152462 +
             (C14817 * C9518 - C14818 * C9510 - C14817 * C9519 +
              C14812 * C9528 + C14815 * C3213 - C14816 * C3209 -
              C14815 * C3214 + C14811 * C3221 + C14813 * C1719 -
              C14814 * C1704 - C14813 * C1720 + C14810 * C1740) *
                 C152696 * C6341) *
                C152873) *
               C152575) *
              C152814 +
          ((((C15498 + C15497 + C15496) * C152696 * C6341 +
             (C15502 + C15503 + C15504) * C152696 * C152462) *
                C2428 -
            ((C14895 + C14896 + C14897) * C152696 * C152462 +
             (C14894 + C14893 + C14892) * C152696 * C6341) *
                C2427 -
            ((C15505 + C15506 + C15507) * C152696 * C152462 +
             (C15501 + C15500 + C15499) * C152696 * C6341) *
                C152873) *
               C152828 +
           (((C15196 + C15195 + C15194) * C152696 * C6341 +
             (C15200 + C15201 + C15202) * C152696 * C152462) *
                C2427 -
            ((C16267 + C16268 + C16269) * C152696 * C152462 +
             (C16266 + C16265 + C16264) * C152696 * C6341) *
                C2428 +
            ((C18436 + C18435 + C18434) * C152696 * C6341 +
             (C14813 * C1715 - C14814 * C1702 - C14813 * C1716 +
              C14810 * C1738 + C14815 * C3217 - C14816 * C3211 -
              C14815 * C3218 + C14811 * C3223 + C14817 * C18412 -
              C14818 * C18411 - C14817 * C18413 + C14812 * C18414) *
                 C152696 * C152462) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                     C152696 * C123 +
                 C211 * C124 + C212 * C125 + C213 * C126) *
                    C152829 -
                (C734 * C126 + C735 * C125 + C736 * C124 +
                 (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                     C152696 * C123) *
                    C152617) *
                   C152828 +
               (((C134 * C1233 - C135 * C1227 - C134 * C1234 +
                  C152711 * C1245) *
                     C152696 * C123 +
                 C1280 * C124 + C1281 * C125 + C1282 * C126) *
                    C152617 -
                (C473 * C126 + C474 * C125 + C475 * C124 +
                 (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                     C152696 * C123) *
                    C152829) *
                   C152575) *
                  C365 +
              (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) *
                    C152617 -
                (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) *
                    C152829) *
                   C152828 +
               ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) *
                    C152829 -
                (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                    C152617) *
                   C152575) *
                  C366 +
              (((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) *
                    C152829 -
                (C1033 * C126 + C740 * C125 + C734 * C124 + C735 * C123) *
                    C152617) *
                   C152828 +
               ((C1281 * C123 + C1282 * C124 + C1283 * C125 +
                 (C134 * C1243 - C135 * C1232 - C134 * C1244 +
                  C152711 * C1250) *
                     C152696 * C126) *
                    C152617 -
                (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) *
                    C152829) *
                   C152575) *
                  C152864) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                    C152696 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126) *
                   C152829 -
               (C734 * C126 + C735 * C125 + C736 * C124 +
                (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                    C152696 * C123) *
                   C152617) *
                  C1879 +
              (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                    C152696 * C123 +
                C1280 * C124 + C1281 * C125 + C1282 * C126) *
                   C152617 -
               (C473 * C126 + C474 * C125 + C475 * C124 +
                (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                    C152696 * C123) *
                   C152829) *
                  C1880 +
              (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                    C152696 * C123 +
                C476 * C124 + C477 * C125 + C478 * C126) *
                   C152829 -
               (C2133 * C126 + C2134 * C125 + C2135 * C124 +
                (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                    C152696 * C123) *
                   C152617) *
                  C1881 +
              (((C134 * C2269 - C135 * C2265 - C134 * C2270 + C152711 * C2277) *
                    C152696 * C123 +
                (C134 * C2271 - C135 * C2266 - C134 * C2272 + C152711 * C2278) *
                    C152696 * C124 +
                (C134 * C2273 - C135 * C2267 - C134 * C2274 + C152711 * C2279) *
                    C152696 * C125 +
                (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                    C152696 * C126) *
                   C152617 -
               (C1911 * C126 + C1912 * C125 + C1913 * C124 +
                (C134 * C1537 - C135 * C1526 - C134 * C1538 + C152711 * C1550) *
                    C152696 * C123) *
                   C152829) *
                  C152880) *
             C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C3047 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C3048 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C152696 * C123 +
            C737 * C124 + C738 * C125 + C739 * C126) *
               C3049 -
           (C3077 * C126 + C3078 * C125 + C3079 * C124 +
            (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                C152696 * C123) *
               C152886) *
              C152828 +
          (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                C152696 * C123 +
            C1280 * C124 + C1281 * C125 + C1282 * C126) *
               C3048 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C3047 -
           (C2915 * C126 + C2916 * C125 + C2917 * C124 +
            (C134 * C1719 - C135 * C1704 - C134 * C1720 + C152711 * C1740) *
                C152696 * C123) *
               C3049 +
           ((C134 * C3213 - C135 * C3209 - C134 * C3214 + C152711 * C3221) *
                C152696 * C123 +
            (C134 * C3215 - C135 * C3210 - C134 * C3216 + C152711 * C3222) *
                C152696 * C124 +
            (C134 * C3217 - C135 * C3211 - C134 * C3218 + C152711 * C3223) *
                C152696 * C125 +
            (C134 * C3219 - C135 * C3212 - C134 * C3220 + C152711 * C3224) *
                C152696 * C126) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C152829 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152617) *
               C152828 +
           (((C7578 * C6338 + C7577 * C6339 +
              (C134 * C2269 - C135 * C2265 - C134 * C2270 + C152711 * C2277) *
                  C6340) *
                 C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152617 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C152829) *
               C152575) *
              C365 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152617 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C152829) *
               C152828 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C152829 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152617) *
               C152575) *
              C366 +
          ((((C6349 + C6348 + C6347) * C6341 +
             (C6350 + C6351 + C6352) * C152462) *
                C152829 -
            ((C7256 + C7257 + C7258) * C152462 +
             (C6850 + C6849 + C6848) * C6341) *
                C152617) *
               C152828 +
           (((C7568 + C7567 + C7582) * C6341 +
             (C1278 * C6338 + C2130 * C6339 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C6340) *
                 C152462) *
                C152617 -
            ((C7059 + C7060 + C7061) * C152462 +
             (C6597 + C6596 + C6595) * C6341) *
                C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152829 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152617) *
              C1879 +
          (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
            (C7557 + C7558 + C7581) * C152462) *
               C152617 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152829) *
              C1880 +
          (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152829 -
           ((C8741 + C8736 + C8737) * C152462 +
            (C8950 * C6340 + C8234 * C6339 + C7577 * C6338) * C6341) *
               C152617) *
              C1881 +
          (((C8234 * C6338 + C8950 * C6339 +
             (C134 * C8937 - C135 * C8935 - C134 * C8938 + C152711 * C8941) *
                 C6340) *
                C6341 +
            (C7579 * C6338 + C8740 * C6339 +
             (C134 * C8939 - C135 * C8936 - C134 * C8940 + C152711 * C8942) *
                 C6340) *
                C152462) *
               C152617 -
           ((C8435 + C8436 + C8437) * C152462 +
            (C7959 * C6340 + C7957 * C6339 + C6616 * C6338) * C6341) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C3047 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C3048 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             C8232 * C6339 + C8233 * C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C3049 -
           ((C10043 + C10044 + C10036) * C152462 +
            (C10259 * C6340 + C10260 * C6339 +
             (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                 C6338) *
                C6341) *
               C152886) *
              C152828 +
          (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
            (C7557 + C7558 + C7581) * C152462) *
               C3048 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C3047 -
           ((C9827 + C9828 + C9829) * C152462 +
            (C8236 * C6340 + C8233 * C6339 + C8232 * C6338) * C6341) *
               C3049 +
           ((C10260 * C6338 + C10259 * C6339 +
             (C134 * C10240 - C135 * C10238 - C134 * C10241 +
              C152711 * C10244) *
                 C6340) *
                C6341 +
            (C10042 * C6338 + C10041 * C6339 +
             (C134 * C10242 - C135 * C10239 - C134 * C10243 +
              C152711 * C10245) *
                 C6340) *
                C152462) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C152696 * C6341 +
             (C14892 + C14893 + C14894) * C152696 * C152462) *
                C152829 -
            ((C15496 + C15497 + C15498) * C152696 * C152462 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C152696 * C6341) *
                C152617) *
               C152828 +
           (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 +
              C14810 * C1245 + C14815 * C1719 - C14816 * C1704 -
              C14815 * C1720 + C14811 * C1740 + C14817 * C3213 -
              C14818 * C3209 - C14817 * C3214 + C14812 * C3221) *
                 C152696 * C6341 +
             (C16264 + C16265 + C16266) * C152696 * C152462) *
                C152617 -
            ((C15194 + C15195 + C15196) * C152696 * C152462 +
             (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 +
              C14812 * C1740 + C14815 * C1233 - C14816 * C1227 -
              C14815 * C1234 + C14811 * C1245 + C14813 * C386 - C14814 * C371 -
              C14813 * C387 + C14810 * C407) *
                 C152696 * C6341) *
                C152829) *
               C152575) *
              C365 +
          ((((C15498 + C15497 + C15496) * C152696 * C6341 +
             (C15502 + C15503 + C15504) * C152696 * C152462) *
                C152617 -
            ((C14895 + C14896 + C14897) * C152696 * C152462 +
             (C14894 + C14893 + C14892) * C152696 * C6341) *
                C152829) *
               C152828 +
           (((C15196 + C15195 + C15194) * C152696 * C6341 +
             (C15200 + C15201 + C15202) * C152696 * C152462) *
                C152829 -
            ((C16267 + C16268 + C16269) * C152696 * C152462 +
             (C16266 + C16265 + C16264) * C152696 * C6341) *
                C152617) *
               C152575) *
              C366 +
          ((((C14897 + C14896 + C14895) * C152696 * C6341 +
             (C14898 + C14899 + C14900) * C152696 * C152462) *
                C152829 -
            ((C15935 + C15936 + C15937) * C152696 * C152462 +
             (C15504 + C15503 + C15502) * C152696 * C6341) *
                C152617) *
               C152828 +
           (((C16269 + C16268 + C16267) * C152696 * C6341 +
             (C14813 * C1239 - C14814 * C1230 - C14813 * C1240 +
              C14810 * C1248 + C14815 * C1713 - C14816 * C1701 -
              C14815 * C1714 + C14811 * C1737 + C14817 * C3219 -
              C14818 * C3212 - C14817 * C3220 + C14812 * C3224) *
                 C152696 * C152462) *
                C152617 -
            ((C15720 + C15721 + C15722) * C152696 * C152462 +
             (C15202 + C15201 + C15200) * C152696 * C6341) *
                C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152829 -
           ((C15496 + C15497 + C15498) * C152696 * C152462 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C152696 * C6341) *
               C152617) *
              C1879 +
          (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 + C14810 * C1245 +
             C14815 * C1719 - C14816 * C1704 - C14815 * C1720 + C14811 * C1740 +
             C14817 * C3213 - C14818 * C3209 - C14817 * C3214 +
             C14812 * C3221) *
                C152696 * C6341 +
            (C16264 + C16265 + C16266) * C152696 * C152462) *
               C152617 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C152829) *
              C1880 +
          (((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
             C14815 * C1727 - C14816 * C1708 - C14815 * C1728 + C14811 * C1744 +
             C14817 * C1729 - C14818 * C1709 - C14817 * C1730 +
             C14812 * C1745) *
                C152696 * C6341 +
            (C15197 + C15198 + C15199) * C152696 * C152462) *
               C152829 -
           ((C17351 + C17352 + C17353) * C152696 * C152462 +
            (C14817 * C9516 - C14818 * C9509 - C14817 * C9517 + C14812 * C9527 +
             C14815 * C1729 - C14816 * C1709 - C14815 * C1730 + C14811 * C1745 +
             C14813 * C1727 - C14814 * C1708 - C14813 * C1728 +
             C14810 * C1744) *
                C152696 * C6341) *
               C152617) *
              C1881 +
          (((C14813 * C2269 - C14814 * C2265 - C14813 * C2270 + C14810 * C2277 +
             C14815 * C8185 - C14816 * C8178 - C14815 * C8186 + C14811 * C8196 +
             C14817 * C10240 - C14818 * C10238 - C14817 * C10241 +
             C14812 * C10244) *
                C152696 * C6341 +
            (C14813 * C2271 - C14814 * C2266 - C14813 * C2272 + C14810 * C2278 +
             C14815 * C8183 - C14816 * C8177 - C14815 * C8184 + C14811 * C8195 +
             C14817 * C10242 - C14818 * C10239 - C14817 * C10243 +
             C14812 * C10245) *
                C152696 * C152462) *
               C152617 -
           ((C17040 + C17041 + C17042) * C152696 * C152462 +
            (C14817 * C8185 - C14818 * C8178 - C14817 * C8186 + C14812 * C8196 +
             C14815 * C2269 - C14816 * C2265 - C14815 * C2270 + C14811 * C2277 +
             C14813 * C1537 - C14814 * C1526 - C14813 * C1538 +
             C14810 * C1550) *
                C152696 * C6341) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C3047 -
           ((C15496 + C15497 + C15498) * C152696 * C152462 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C152696 * C6341) *
               C3048 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C152696 * C6341 +
            (C15499 + C15500 + C15501) * C152696 * C152462) *
               C3049 -
           ((C18653 + C18654 + C18655) * C152696 * C152462 +
            (C14817 * C18111 - C14818 * C18106 - C14817 * C18112 +
             C14812 * C18118 + C14815 * C2679 - C14816 * C2667 -
             C14815 * C2680 + C14811 * C2691 + C14813 * C2677 - C14814 * C2666 -
             C14813 * C2678 + C14810 * C2690) *
                C152696 * C6341) *
               C152886) *
              C152828 +
          (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 + C14810 * C1245 +
             C14815 * C1719 - C14816 * C1704 - C14815 * C1720 + C14811 * C1740 +
             C14817 * C3213 - C14818 * C3209 - C14817 * C3214 +
             C14812 * C3221) *
                C152696 * C6341 +
            (C16264 + C16265 + C16266) * C152696 * C152462) *
               C3048 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C3047 -
           ((C18434 + C18435 + C18436) * C152696 * C152462 +
            (C14817 * C9518 - C14818 * C9510 - C14817 * C9519 + C14812 * C9528 +
             C14815 * C3213 - C14816 * C3209 - C14815 * C3214 + C14811 * C3221 +
             C14813 * C1719 - C14814 * C1704 - C14813 * C1720 +
             C14810 * C1740) *
                C152696 * C6341) *
               C3049 +
           ((C14813 * C3213 - C14814 * C3209 - C14813 * C3214 + C14810 * C3221 +
             C14815 * C9518 - C14816 * C9510 - C14815 * C9519 + C14811 * C9528 +
             C14817 * C18851 - C14818 * C18849 - C14817 * C18852 +
             C14812 * C18855) *
                C152696 * C6341 +
            (C14813 * C3215 - C14814 * C3210 - C14813 * C3216 + C14810 * C3222 +
             C14815 * C9522 - C14816 * C9512 - C14815 * C9523 + C14811 * C9530 +
             C14817 * C18853 - C14818 * C18850 - C14817 * C18854 +
             C14812 * C18856) *
                C152696 * C152462) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                   C152696 * C123 +
               C211 * C124 + C212 * C125 + C213 * C126) *
                  C152530 * C152512 * C129 -
              (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) *
                  C152530 * C152512 * C130 +
              (C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) *
                  C152530 * C152512 * C131 -
              (C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) *
                  C152530 * C152512 * C132 +
              (C214 * C123 + C215 * C124 + C216 * C125 +
               (C134 * C158 - C135 * C143 - C134 * C159 + C152711 * C167) *
                   C152696 * C126) *
                  C152530 * C152512 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                    C152696 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126) *
                   C152530 * C152917 -
               (C473 * C126 + C474 * C125 + C475 * C124 +
                (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                    C152696 * C123) *
                   C152530 * C152901 +
               ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                    C152696 * C123 +
                C476 * C124 + C477 * C125 + C478 * C126) *
                   C152530 * C152870) *
                  C365 +
              ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) *
                   C152530 * C152901 -
               (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) *
                   C152530 * C152917 -
               (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) *
                   C152530 * C152870) *
                  C366 +
              ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) *
                   C152530 * C152917 -
               ((C134 * C400 - C135 * C378 - C134 * C401 + C152711 * C414) *
                    C152696 * C126 +
                C479 * C125 + C473 * C124 + C474 * C123) *
                   C152530 * C152901 +
               (C477 * C123 + C478 * C124 + C480 * C125 +
                (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                    C152696 * C126) *
                   C152530 * C152870) *
                  C152864) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                    C152696 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126) *
                   C152918 -
               (C734 * C126 + C735 * C125 + C736 * C124 +
                (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                    C152696 * C123) *
                   C152903 +
               ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                    C152696 * C123 +
                C737 * C124 + C738 * C125 + C739 * C126) *
                   C152873) *
                  C152512 * C365 +
              ((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) *
                   C152903 -
               (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) *
                   C152918 -
               (C741 * C126 + C739 * C125 + C738 * C124 + C737 * C123) *
                   C152873) *
                  C152512 * C366 +
              ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) *
                   C152918 -
               ((C134 * C661 - C135 * C639 - C134 * C662 + C152711 * C675) *
                    C152696 * C126 +
                C740 * C125 + C734 * C124 + C735 * C123) *
                   C152903 +
               (C738 * C123 + C739 * C124 + C741 * C125 +
                (C134 * C663 - C135 * C640 - C134 * C664 + C152711 * C676) *
                    C152696 * C126) *
                   C152873) *
                  C152512 * C152864) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                    C152696 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126) *
                   C152530 * C1429 -
               (C473 * C126 + C474 * C125 + C475 * C124 +
                (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                    C152696 * C123) *
                   C152530 * C1430 +
               ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                    C152696 * C123 +
                C476 * C124 + C477 * C125 + C478 * C126) *
                   C152530 * C152870) *
                  C152914 +
              ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) *
                   C152530 * C1430 -
               (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) *
                   C152530 * C1429 -
               (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) *
                   C152530 * C152870) *
                  C152897 +
              ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) *
                   C152530 * C1429 -
               (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) *
                   C152530 * C1430 +
               (C477 * C123 + C478 * C124 + C480 * C125 +
                (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                    C152696 * C126) *
                   C152530 * C152870) *
                  C152864) -
         0.25 * std::pow(Pi, 2.5) *
             (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                   C152696 * C123 +
               C211 * C124 + C212 * C125 + C213 * C126) *
                  C152530 * C1517 -
              (C473 * C126 + C474 * C125 + C475 * C124 +
               (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                   C152696 * C123) *
                  C152530 * C1518 +
              ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                   C152696 * C123 +
               C476 * C124 + C477 * C125 + C478 * C126) *
                  C152530 * C1519 -
              ((C134 * C1531 - C135 * C1523 - C134 * C1532 + C152711 * C1547) *
                   C152696 * C126 +
               (C134 * C1533 - C135 * C1524 - C134 * C1534 + C152711 * C1548) *
                   C152696 * C125 +
               (C134 * C1535 - C135 * C1525 - C134 * C1536 + C152711 * C1549) *
                   C152696 * C124 +
               (C134 * C1537 - C135 * C1526 - C134 * C1538 + C152711 * C1550) *
                   C152696 * C123) *
                  C152530 * C1520 +
              ((C134 * C1539 - C135 * C1527 - C134 * C1540 + C152711 * C1551) *
                   C152696 * C123 +
               (C134 * C1541 - C135 * C1528 - C134 * C1542 + C152711 * C1552) *
                   C152696 * C124 +
               (C134 * C1543 - C135 * C1529 - C134 * C1544 + C152711 * C1553) *
                   C152696 * C125 +
               (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                   C152696 * C126) *
                  C152530 * C1521) *
             C152484 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                    C152696 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126) *
                   C152918 -
               (C734 * C126 + C735 * C125 + C736 * C124 +
                (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                    C152696 * C123) *
                   C152903 +
               ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                    C152696 * C123 +
                C737 * C124 + C738 * C125 + C739 * C126) *
                   C152873) *
                  C1429 +
              (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                    C152696 * C123 +
                C1280 * C124 + C1281 * C125 + C1282 * C126) *
                   C152903 -
               (C473 * C126 + C474 * C125 + C475 * C124 +
                (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                    C152696 * C123) *
                   C152918 -
               ((C134 * C1713 - C135 * C1701 - C134 * C1714 + C152711 * C1737) *
                    C152696 * C126 +
                (C134 * C1715 - C135 * C1702 - C134 * C1716 + C152711 * C1738) *
                    C152696 * C125 +
                (C134 * C1717 - C135 * C1703 - C134 * C1718 + C152711 * C1739) *
                    C152696 * C124 +
                (C134 * C1719 - C135 * C1704 - C134 * C1720 + C152711 * C1740) *
                    C152696 * C123) *
                   C152873) *
                  C1430 +
              (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                    C152696 * C123 +
                C476 * C124 + C477 * C125 + C478 * C126) *
                   C152918 -
               ((C134 * C1721 - C135 * C1705 - C134 * C1722 + C152711 * C1741) *
                    C152696 * C126 +
                (C134 * C1723 - C135 * C1706 - C134 * C1724 + C152711 * C1742) *
                    C152696 * C125 +
                (C134 * C1725 - C135 * C1707 - C134 * C1726 + C152711 * C1743) *
                    C152696 * C124 +
                (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                    C152696 * C123) *
                   C152903 +
               ((C134 * C1729 - C135 * C1709 - C134 * C1730 + C152711 * C1745) *
                    C152696 * C123 +
                (C134 * C1731 - C135 * C1710 - C134 * C1732 + C152711 * C1746) *
                    C152696 * C124 +
                (C134 * C1733 - C135 * C1711 - C134 * C1734 + C152711 * C1747) *
                    C152696 * C125 +
                (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                    C152696 * C126) *
                   C152873) *
                  C152870) *
             C152484 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                    C152696 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126) *
                   C2427 -
               (C734 * C126 + C735 * C125 + C736 * C124 +
                (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                    C152696 * C123) *
                   C2428 +
               ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                    C152696 * C123 +
                C737 * C124 + C738 * C125 + C739 * C126) *
                   C152873) *
                  C152512 * C152914 +
              ((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C2428 -
               (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C2427 -
               (C741 * C126 + C739 * C125 + C738 * C124 + C737 * C123) *
                   C152873) *
                  C152512 * C152897 +
              ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C2427 -
               (C1033 * C126 + C740 * C125 + C734 * C124 + C735 * C123) *
                   C2428 +
               (C738 * C123 + C739 * C124 + C741 * C125 +
                (C134 * C663 - C135 * C640 - C134 * C664 + C152711 * C676) *
                    C152696 * C126) *
                   C152873) *
                  C152512 * C152864) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                    C152696 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126) *
                   C2427 -
               (C734 * C126 + C735 * C125 + C736 * C124 +
                (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                    C152696 * C123) *
                   C2428 +
               ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                    C152696 * C123 +
                C737 * C124 + C738 * C125 + C739 * C126) *
                   C152873) *
                  C152917 +
              (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                    C152696 * C123 +
                C1280 * C124 + C1281 * C125 + C1282 * C126) *
                   C2428 -
               (C473 * C126 + C474 * C125 + C475 * C124 +
                (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                    C152696 * C123) *
                   C2427 -
               ((C134 * C1713 - C135 * C1701 - C134 * C1714 + C152711 * C1737) *
                    C152696 * C126 +
                (C134 * C1715 - C135 * C1702 - C134 * C1716 + C152711 * C1738) *
                    C152696 * C125 +
                (C134 * C1717 - C135 * C1703 - C134 * C1718 + C152711 * C1739) *
                    C152696 * C124 +
                (C134 * C1719 - C135 * C1704 - C134 * C1720 + C152711 * C1740) *
                    C152696 * C123) *
                   C152873) *
                  C152901 +
              (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                    C152696 * C123 +
                C476 * C124 + C477 * C125 + C478 * C126) *
                   C2427 -
               (C2133 * C126 + C2134 * C125 + C2135 * C124 +
                (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                    C152696 * C123) *
                   C2428 +
               ((C134 * C1729 - C135 * C1709 - C134 * C1730 + C152711 * C1745) *
                    C152696 * C123 +
                (C134 * C1731 - C135 * C1710 - C134 * C1732 + C152711 * C1746) *
                    C152696 * C124 +
                (C134 * C1733 - C135 * C1711 - C134 * C1734 + C152711 * C1747) *
                    C152696 * C125 +
                (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                    C152696 * C126) *
                   C152873) *
                  C152870) *
             C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
               C152696 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126) *
              C2658 -
          (C734 * C126 + C735 * C125 + C736 * C124 +
           (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
               C152696 * C123) *
              C2659 +
          ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
               C152696 * C123 +
           C737 * C124 + C738 * C125 + C739 * C126) *
              C2660 -
          ((C134 * C2671 - C135 * C2663 - C134 * C2672 + C152711 * C2687) *
               C152696 * C126 +
           (C134 * C2673 - C135 * C2664 - C134 * C2674 + C152711 * C2688) *
               C152696 * C125 +
           (C134 * C2675 - C135 * C2665 - C134 * C2676 + C152711 * C2689) *
               C152696 * C124 +
           (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
               C152696 * C123) *
              C2661 +
          ((C134 * C2679 - C135 * C2667 - C134 * C2680 + C152711 * C2691) *
               C152696 * C123 +
           (C134 * C2681 - C135 * C2668 - C134 * C2682 + C152711 * C2692) *
               C152696 * C124 +
           (C134 * C2683 - C135 * C2669 - C134 * C2684 + C152711 * C2693) *
               C152696 * C125 +
           (C134 * C2685 - C135 * C2670 - C134 * C2686 + C152711 * C2694) *
               C152696 * C126) *
              C2662) *
         C152512 * C152484) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C6338 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) * C6339 +
            (C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C6340) *
               C6341 +
           (C6344 + C6345 + C6346) * C152462) *
              C152530 * C152512 * C129 -
          ((C6347 + C6348 + C6349) * C152462 +
           (C6346 + C6345 + C6344) * C6341) *
              C152530 * C152512 * C130 +
          ((C6349 + C6348 + C6347) * C6341 +
           (C6350 + C6351 + C6352) * C152462) *
              C152530 * C152512 * C131 -
          ((C6353 + C6354 + C6355) * C152462 +
           (C6352 + C6351 + C6350) * C6341) *
              C152530 * C152512 * C132 +
          ((C6355 + C6354 + C6353) * C6341 +
           (C209 * C6338 + C888 * C6339 +
            (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                C6340) *
               C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C152917 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C152901 +
           ((C6615 * C6338 + C6616 * C6339 +
             (C134 * C1539 - C135 * C1527 - C134 * C1540 + C152711 * C1551) *
                 C6340) *
                C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152530 * C152870) *
              C365 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C152901 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C152917 -
           ((C6620 + C6602 + C6603) * C152462 +
            (C6619 + C6590 + C6589) * C6341) *
               C152530 * C152870) *
              C366 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152530 * C152917 -
           ((C1908 * C6340 + C470 * C6339 + C465 * C6338) * C152462 +
            (C6597 + C6596 + C6595) * C6341) *
               C152530 * C152901 +
           ((C6603 + C6602 + C6620) * C6341 +
            (C470 * C6338 + C1908 * C6339 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C6340) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152918 -
           ((C6839 + C6840 + C6841) * C152462 +
            ((C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                 C6340 +
             (C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152903 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             (C134 * C1719 - C135 * C1704 - C134 * C1720 + C152711 * C1740) *
                 C6339 +
             (C134 * C1729 - C135 * C1709 - C134 * C1730 + C152711 * C1745) *
                 C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C152873) *
              C152512 * C365 +
          (((C6841 + C6840 + C6839) * C6341 +
            (C6848 + C6849 + C6850) * C152462) *
               C152903 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152918 -
           ((C6864 + C6855 + C6856) * C152462 +
            (C6863 + C6843 + C6842) * C6341) *
               C152873) *
              C152512 * C366 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152918 -
           ((C2130 * C6340 + C1278 * C6339 + C726 * C6338) * C152462 +
            (C6850 + C6849 + C6848) * C6341) *
               C152903 +
           ((C6856 + C6855 + C6864) * C6341 +
            (C731 * C6338 + C2912 * C6339 +
             (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                 C6340) *
                C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C1429 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C1430 +
           ((C6615 * C6338 + C6616 * C6339 +
             (C134 * C1539 - C135 * C1527 - C134 * C1540 + C152711 * C1551) *
                 C6340) *
                C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C1430 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C1429 -
           ((C6620 + C6602 + C6603) * C152462 +
            (C6619 + C6590 + C6589) * C6341) *
               C152530 * C152870) *
              C152897 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152530 * C1429 -
           ((C7059 + C7060 + C7061) * C152462 +
            (C6597 + C6596 + C6595) * C6341) *
               C152530 * C1430 +
           ((C6603 + C6602 + C6620) * C6341 +
            (C470 * C6338 + C1908 * C6339 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C6340) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C6338 +
            C6614 * C6339 + C6615 * C6340) *
               C6341 +
           (C6344 + C6345 + C6346) * C152462) *
              C152530 * C1517 -
          ((C6582 + C6583 + C6584) * C152462 +
           (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
              C152530 * C1518 +
          ((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
           (C6589 + C6590 + C6619) * C152462) *
              C152530 * C1519 -
          ((C7958 * C6340 + C6617 * C6339 + C1910 * C6338) * C152462 +
           (C7959 * C6340 + C7957 * C6339 + C6616 * C6338) * C6341) *
              C152530 * C1520 +
          ((C7957 * C6338 + C7959 * C6339 +
            (C134 * C7930 - C135 * C7924 - C134 * C7931 + C152711 * C7936) *
                C6340) *
               C6341 +
           (C6617 * C6338 + C7958 * C6339 +
            (C134 * C7932 - C135 * C7925 - C134 * C7933 + C152711 * C7937) *
                C6340) *
               C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152918 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152903 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             C8232 * C6339 + C8233 * C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C152873) *
              C1429 +
          (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
            (C7557 + C7558 + C7581) * C152462) *
               C152903 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152918 -
           ((C8235 * C6340 + C6861 * C6339 + C2914 * C6338) * C152462 +
            (C8236 * C6340 + C8233 * C6339 + C8232 * C6338) * C6341) *
               C152873) *
              C1430 +
          (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152918 -
           (((C134 * C8187 - C135 * C8179 - C134 * C8188 + C152711 * C8197) *
                 C6340 +
             C7579 * C6339 + C2132 * C6338) *
                C152462 +
            ((C134 * C8189 - C135 * C8180 - C134 * C8190 + C152711 * C8198) *
                 C6340 +
             C8234 * C6339 + C7577 * C6338) *
                C6341) *
               C152903 +
           ((C8233 * C6338 + C8236 * C6339 +
             (C134 * C8191 - C135 * C8181 - C134 * C8192 + C152711 * C8199) *
                 C6340) *
                C6341 +
            (C6861 * C6338 + C8235 * C6339 +
             (C134 * C8193 - C135 * C8182 - C134 * C8194 + C152711 * C8200) *
                 C6340) *
                C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C2427 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C2428 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             C8232 * C6339 + C8233 * C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C152873) *
              C152512 * C152914 +
          (((C6841 + C6840 + C6839) * C6341 +
            (C6848 + C6849 + C6850) * C152462) *
               C2428 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C2427 -
           ((C6864 + C6855 + C6856) * C152462 +
            (C6863 + C6843 + C6842) * C6341) *
               C152873) *
              C152512 * C152897 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C2427 -
           ((C7256 + C7257 + C7258) * C152462 +
            (C6850 + C6849 + C6848) * C6341) *
               C2428 +
           ((C6856 + C6855 + C6864) * C6341 +
            (C731 * C6338 + C2912 * C6339 +
             (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                 C6340) *
                C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C2427 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C2428 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             C8232 * C6339 + C8233 * C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C152873) *
              C152917 +
          (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
            (C7557 + C7558 + C7581) * C152462) *
               C2428 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C2427 -
           ((C8235 * C6340 + C6861 * C6339 + C2914 * C6338) * C152462 +
            (C8236 * C6340 + C8233 * C6339 + C8232 * C6338) * C6341) *
               C152873) *
              C152901 +
          (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C2427 -
           ((C8741 + C8736 + C8737) * C152462 +
            (C8950 * C6340 + C8234 * C6339 + C7577 * C6338) * C6341) *
               C2428 +
           ((C8233 * C6338 + C8236 * C6339 +
             (C134 * C8191 - C135 * C8181 - C134 * C8192 + C152711 * C8199) *
                 C6340) *
                C6341 +
            (C6861 * C6338 + C8235 * C6339 +
             (C134 * C8193 - C135 * C8182 - C134 * C8194 + C152711 * C8200) *
                 C6340) *
                C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C6338 +
            C6614 * C6339 + C6615 * C6340) *
               C6341 +
           (C6344 + C6345 + C6346) * C152462) *
              C2658 -
          ((C6839 + C6840 + C6841) * C152462 +
           (C7577 * C6340 + C7578 * C6339 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C6338) *
               C6341) *
              C2659 +
          (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) * C6338 +
            C8232 * C6339 + C8233 * C6340) *
               C6341 +
           (C6842 + C6843 + C6863) * C152462) *
              C2660 -
          (((C134 * C9514 - C135 * C9508 - C134 * C9515 + C152711 * C9526) *
                C6340 +
            (C134 * C3215 - C135 * C3210 - C134 * C3216 + C152711 * C3222) *
                C6339 +
            C3076 * C6338) *
               C152462 +
           ((C134 * C9516 - C135 * C9509 - C134 * C9517 + C152711 * C9527) *
                C6340 +
            (C134 * C3213 - C135 * C3209 - C134 * C3214 + C152711 * C3221) *
                C6339 +
            (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                C6338) *
               C6341) *
              C2661 +
          (((C134 * C2679 - C135 * C2667 - C134 * C2680 + C152711 * C2691) *
                C6338 +
            (C134 * C9518 - C135 * C9510 - C134 * C9519 + C152711 * C9528) *
                C6339 +
            (C134 * C9520 - C135 * C9511 - C134 * C9521 + C152711 * C9529) *
                C6340) *
               C6341 +
           ((C134 * C2681 - C135 * C2668 - C134 * C2682 + C152711 * C2692) *
                C6338 +
            (C134 * C9522 - C135 * C9512 - C134 * C9523 + C152711 * C9530) *
                C6339 +
            (C134 * C9524 - C135 * C9513 - C134 * C9525 + C152711 * C9531) *
                C6340) *
               C152462) *
              C2662) *
         C152512 * C152484) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
            C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
            C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
               C152696 * C6341 +
           (C14892 + C14893 + C14894) * C152696 * C152462) *
              C152530 * C152512 * C129 -
          ((C14895 + C14896 + C14897) * C152696 * C152462 +
           (C14894 + C14893 + C14892) * C152696 * C6341) *
              C152530 * C152512 * C130 +
          ((C14897 + C14896 + C14895) * C152696 * C6341 +
           (C14898 + C14899 + C14900) * C152696 * C152462) *
              C152530 * C152512 * C131 -
          ((C14901 + C14902 + C14903) * C152696 * C152462 +
           (C14900 + C14899 + C14898) * C152696 * C6341) *
              C152530 * C152512 * C132 +
          ((C14903 + C14902 + C14901) * C152696 * C6341 +
           (C14813 * C154 - C14814 * C141 - C14813 * C155 + C14810 * C165 +
            C14815 * C661 - C14816 * C639 - C14815 * C662 + C14811 * C675 +
            C14817 * C663 - C14818 * C640 - C14817 * C664 + C14812 * C676) *
               C152696 * C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152530 * C152917 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C152530 * C152901 +
           ((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
             C14815 * C1727 - C14816 * C1708 - C14815 * C1728 + C14811 * C1744 +
             C14817 * C1729 - C14818 * C1709 - C14817 * C1730 +
             C14812 * C1745) *
                C152696 * C6341 +
            (C15197 + C15198 + C15199) * C152696 * C152462) *
               C152530 * C152870) *
              C365 +
          (((C15196 + C15195 + C15194) * C152696 * C6341 +
            (C15200 + C15201 + C15202) * C152696 * C152462) *
               C152530 * C152901 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C152530 * C152917 -
           ((C15203 + C15204 + C15205) * C152696 * C152462 +
            (C15199 + C15198 + C15197) * C152696 * C6341) *
               C152530 * C152870) *
              C366 +
          (((C14897 + C14896 + C14895) * C152696 * C6341 +
            (C14898 + C14899 + C14900) * C152696 * C152462) *
               C152530 * C152917 -
           ((C14817 * C1713 - C14818 * C1701 - C14817 * C1714 + C14812 * C1737 +
             C14815 * C1239 - C14816 * C1230 - C14815 * C1240 + C14811 * C1248 +
             C14813 * C380 - C14814 * C368 - C14813 * C381 + C14810 * C404) *
                C152696 * C152462 +
            (C15202 + C15201 + C15200) * C152696 * C6341) *
               C152530 * C152901 +
           ((C15205 + C15204 + C15203) * C152696 * C6341 +
            (C14813 * C394 - C14814 * C375 - C14813 * C395 + C14810 * C411 +
             C14815 * C1721 - C14816 * C1705 - C14815 * C1722 + C14811 * C1741 +
             C14817 * C1735 - C14818 * C1712 - C14817 * C1736 +
             C14812 * C1748) *
                C152696 * C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152918 -
           ((C15496 + C15497 + C15498) * C152696 * C152462 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C152696 * C6341) *
               C152903 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C152696 * C6341 +
            (C15499 + C15500 + C15501) * C152696 * C152462) *
               C152873) *
              C152512 * C365 +
          (((C15498 + C15497 + C15496) * C152696 * C6341 +
            (C15502 + C15503 + C15504) * C152696 * C152462) *
               C152903 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C152918 -
           ((C15505 + C15506 + C15507) * C152696 * C152462 +
            (C15501 + C15500 + C15499) * C152696 * C6341) *
               C152873) *
              C152512 * C366 +
          (((C14897 + C14896 + C14895) * C152696 * C6341 +
            (C14898 + C14899 + C14900) * C152696 * C152462) *
               C152918 -
           ((C14817 * C2671 - C14818 * C2663 - C14817 * C2672 + C14812 * C2687 +
             C14815 * C655 - C14816 * C636 - C14815 * C656 + C14811 * C672 +
             C14813 * C641 - C14814 * C629 - C14813 * C642 + C14810 * C665) *
                C152696 * C152462 +
            (C15504 + C15503 + C15502) * C152696 * C6341) *
               C152903 +
           ((C15507 + C15506 + C15505) * C152696 * C6341 +
            (C14813 * C655 - C14814 * C636 - C14813 * C656 + C14810 * C672 +
             C14815 * C2671 - C14816 * C2663 - C14815 * C2672 + C14811 * C2687 +
             C14817 * C2685 - C14818 * C2670 - C14817 * C2686 +
             C14812 * C2694) *
                C152696 * C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152530 * C1429 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C152530 * C1430 +
           ((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
             C14815 * C1727 - C14816 * C1708 - C14815 * C1728 + C14811 * C1744 +
             C14817 * C1729 - C14818 * C1709 - C14817 * C1730 +
             C14812 * C1745) *
                C152696 * C6341 +
            (C15197 + C15198 + C15199) * C152696 * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C15196 + C15195 + C15194) * C152696 * C6341 +
            (C15200 + C15201 + C15202) * C152696 * C152462) *
               C152530 * C1430 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C152530 * C1429 -
           ((C15203 + C15204 + C15205) * C152696 * C152462 +
            (C15199 + C15198 + C15197) * C152696 * C6341) *
               C152530 * C152870) *
              C152897 +
          (((C14897 + C14896 + C14895) * C152696 * C6341 +
            (C14898 + C14899 + C14900) * C152696 * C152462) *
               C152530 * C1429 -
           ((C15720 + C15721 + C15722) * C152696 * C152462 +
            (C15202 + C15201 + C15200) * C152696 * C6341) *
               C152530 * C1430 +
           ((C15205 + C15204 + C15203) * C152696 * C6341 +
            (C14813 * C394 - C14814 * C375 - C14813 * C395 + C14810 * C411 +
             C14815 * C1721 - C14816 * C1705 - C14815 * C1722 + C14811 * C1741 +
             C14817 * C1735 - C14818 * C1712 - C14817 * C1736 +
             C14812 * C1748) *
                C152696 * C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
            C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
            C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
               C152696 * C6341 +
           (C14892 + C14893 + C14894) * C152696 * C152462) *
              C152530 * C1517 -
          ((C15194 + C15195 + C15196) * C152696 * C152462 +
           (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
            C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
            C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
               C152696 * C6341) *
              C152530 * C1518 +
          ((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
            C14815 * C1727 - C14816 * C1708 - C14815 * C1728 + C14811 * C1744 +
            C14817 * C1729 - C14818 * C1709 - C14817 * C1730 + C14812 * C1745) *
               C152696 * C6341 +
           (C15197 + C15198 + C15199) * C152696 * C152462) *
              C152530 * C1519 -
          ((C14817 * C8183 - C14818 * C8177 - C14817 * C8184 + C14812 * C8195 +
            C14815 * C2271 - C14816 * C2266 - C14815 * C2272 + C14811 * C2278 +
            C14813 * C1535 - C14814 * C1525 - C14813 * C1536 + C14810 * C1549) *
               C152696 * C152462 +
           (C14817 * C8185 - C14818 * C8178 - C14817 * C8186 + C14812 * C8196 +
            C14815 * C2269 - C14816 * C2265 - C14815 * C2270 + C14811 * C2277 +
            C14813 * C1537 - C14814 * C1526 - C14813 * C1538 + C14810 * C1550) *
               C152696 * C6341) *
              C152530 * C1520 +
          ((C14813 * C1539 - C14814 * C1527 - C14813 * C1540 + C14810 * C1551 +
            C14815 * C8189 - C14816 * C8180 - C14815 * C8190 + C14811 * C8198 +
            C14817 * C8191 - C14818 * C8181 - C14817 * C8192 + C14812 * C8199) *
               C152696 * C6341 +
           (C14813 * C1541 - C14814 * C1528 - C14813 * C1542 + C14810 * C1552 +
            C14815 * C8187 - C14816 * C8179 - C14815 * C8188 + C14811 * C8197 +
            C14817 * C8193 - C14818 * C8182 - C14817 * C8194 + C14812 * C8200) *
               C152696 * C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152918 -
           ((C15496 + C15497 + C15498) * C152696 * C152462 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C152696 * C6341) *
               C152903 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C152696 * C6341 +
            (C15499 + C15500 + C15501) * C152696 * C152462) *
               C152873) *
              C1429 +
          (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 + C14810 * C1245 +
             C14815 * C1719 - C14816 * C1704 - C14815 * C1720 + C14811 * C1740 +
             C14817 * C3213 - C14818 * C3209 - C14817 * C3214 +
             C14812 * C3221) *
                C152696 * C6341 +
            (C16264 + C16265 + C16266) * C152696 * C152462) *
               C152903 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C152918 -
           ((C14817 * C9522 - C14818 * C9512 - C14817 * C9523 + C14812 * C9530 +
             C14815 * C3215 - C14816 * C3210 - C14815 * C3216 + C14811 * C3222 +
             C14813 * C1717 - C14814 * C1703 - C14813 * C1718 +
             C14810 * C1739) *
                C152696 * C152462 +
            (C14817 * C9518 - C14818 * C9510 - C14817 * C9519 + C14812 * C9528 +
             C14815 * C3213 - C14816 * C3209 - C14815 * C3214 + C14811 * C3221 +
             C14813 * C1719 - C14814 * C1704 - C14813 * C1720 +
             C14810 * C1740) *
                C152696 * C6341) *
               C152873) *
              C1430 +
          (((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
             C14815 * C1727 - C14816 * C1708 - C14815 * C1728 + C14811 * C1744 +
             C14817 * C1729 - C14818 * C1709 - C14817 * C1730 +
             C14812 * C1745) *
                C152696 * C6341 +
            (C15197 + C15198 + C15199) * C152696 * C152462) *
               C152918 -
           ((C14817 * C9514 - C14818 * C9508 - C14817 * C9515 + C14812 * C9526 +
             C14815 * C1731 - C14816 * C1710 - C14815 * C1732 + C14811 * C1746 +
             C14813 * C1725 - C14814 * C1707 - C14813 * C1726 +
             C14810 * C1743) *
                C152696 * C152462 +
            (C14817 * C9516 - C14818 * C9509 - C14817 * C9517 + C14812 * C9527 +
             C14815 * C1729 - C14816 * C1709 - C14815 * C1730 + C14811 * C1745 +
             C14813 * C1727 - C14814 * C1708 - C14813 * C1728 +
             C14810 * C1744) *
                C152696 * C6341) *
               C152903 +
           ((C14813 * C1729 - C14814 * C1709 - C14813 * C1730 + C14810 * C1745 +
             C14815 * C9516 - C14816 * C9509 - C14815 * C9517 + C14811 * C9527 +
             C14817 * C9520 - C14818 * C9511 - C14817 * C9521 +
             C14812 * C9529) *
                C152696 * C6341 +
            (C14813 * C1731 - C14814 * C1710 - C14813 * C1732 + C14810 * C1746 +
             C14815 * C9514 - C14816 * C9508 - C14815 * C9515 + C14811 * C9526 +
             C14817 * C9524 - C14818 * C9513 - C14817 * C9525 +
             C14812 * C9531) *
                C152696 * C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C2427 -
           ((C15496 + C15497 + C15498) * C152696 * C152462 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C152696 * C6341) *
               C2428 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C152696 * C6341 +
            (C15499 + C15500 + C15501) * C152696 * C152462) *
               C152873) *
              C152512 * C152914 +
          (((C15498 + C15497 + C15496) * C152696 * C6341 +
            (C15502 + C15503 + C15504) * C152696 * C152462) *
               C2428 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C2427 -
           ((C15505 + C15506 + C15507) * C152696 * C152462 +
            (C15501 + C15500 + C15499) * C152696 * C6341) *
               C152873) *
              C152512 * C152897 +
          (((C14897 + C14896 + C14895) * C152696 * C6341 +
            (C14898 + C14899 + C14900) * C152696 * C152462) *
               C2427 -
           ((C15935 + C15936 + C15937) * C152696 * C152462 +
            (C15504 + C15503 + C15502) * C152696 * C6341) *
               C2428 +
           ((C15507 + C15506 + C15505) * C152696 * C6341 +
            (C14813 * C655 - C14814 * C636 - C14813 * C656 + C14810 * C672 +
             C14815 * C2671 - C14816 * C2663 - C14815 * C2672 + C14811 * C2687 +
             C14817 * C2685 - C14818 * C2670 - C14817 * C2686 +
             C14812 * C2694) *
                C152696 * C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C2427 -
           ((C15496 + C15497 + C15498) * C152696 * C152462 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C152696 * C6341) *
               C2428 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C152696 * C6341 +
            (C15499 + C15500 + C15501) * C152696 * C152462) *
               C152873) *
              C152917 +
          (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 + C14810 * C1245 +
             C14815 * C1719 - C14816 * C1704 - C14815 * C1720 + C14811 * C1740 +
             C14817 * C3213 - C14818 * C3209 - C14817 * C3214 +
             C14812 * C3221) *
                C152696 * C6341 +
            (C16264 + C16265 + C16266) * C152696 * C152462) *
               C2428 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C2427 -
           ((C14817 * C9522 - C14818 * C9512 - C14817 * C9523 + C14812 * C9530 +
             C14815 * C3215 - C14816 * C3210 - C14815 * C3216 + C14811 * C3222 +
             C14813 * C1717 - C14814 * C1703 - C14813 * C1718 +
             C14810 * C1739) *
                C152696 * C152462 +
            (C14817 * C9518 - C14818 * C9510 - C14817 * C9519 + C14812 * C9528 +
             C14815 * C3213 - C14816 * C3209 - C14815 * C3214 + C14811 * C3221 +
             C14813 * C1719 - C14814 * C1704 - C14813 * C1720 +
             C14810 * C1740) *
                C152696 * C6341) *
               C152873) *
              C152901 +
          (((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
             C14815 * C1727 - C14816 * C1708 - C14815 * C1728 + C14811 * C1744 +
             C14817 * C1729 - C14818 * C1709 - C14817 * C1730 +
             C14812 * C1745) *
                C152696 * C6341 +
            (C15197 + C15198 + C15199) * C152696 * C152462) *
               C2427 -
           ((C17351 + C17352 + C17353) * C152696 * C152462 +
            (C14817 * C9516 - C14818 * C9509 - C14817 * C9517 + C14812 * C9527 +
             C14815 * C1729 - C14816 * C1709 - C14815 * C1730 + C14811 * C1745 +
             C14813 * C1727 - C14814 * C1708 - C14813 * C1728 +
             C14810 * C1744) *
                C152696 * C6341) *
               C2428 +
           ((C14813 * C1729 - C14814 * C1709 - C14813 * C1730 + C14810 * C1745 +
             C14815 * C9516 - C14816 * C9509 - C14815 * C9517 + C14811 * C9527 +
             C14817 * C9520 - C14818 * C9511 - C14817 * C9521 +
             C14812 * C9529) *
                C152696 * C6341 +
            (C14813 * C1731 - C14814 * C1710 - C14813 * C1732 + C14810 * C1746 +
             C14815 * C9514 - C14816 * C9508 - C14815 * C9515 + C14811 * C9526 +
             C14817 * C9524 - C14818 * C9513 - C14817 * C9525 +
             C14812 * C9531) *
                C152696 * C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
            C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
            C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
               C152696 * C6341 +
           (C14892 + C14893 + C14894) * C152696 * C152462) *
              C2658 -
          ((C15496 + C15497 + C15498) * C152696 * C152462 +
           (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
            C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
            C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
               C152696 * C6341) *
              C2659 +
          ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
            C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
            C14817 * C2679 - C14818 * C2667 - C14817 * C2680 + C14812 * C2691) *
               C152696 * C6341 +
           (C15499 + C15500 + C15501) * C152696 * C152462) *
              C2660 -
          ((C14817 * C18109 - C14818 * C18105 - C14817 * C18110 +
            C14812 * C18117 + C14815 * C2681 - C14816 * C2668 - C14815 * C2682 +
            C14811 * C2692 + C14813 * C2675 - C14814 * C2665 - C14813 * C2676 +
            C14810 * C2689) *
               C152696 * C152462 +
           (C14817 * C18111 - C14818 * C18106 - C14817 * C18112 +
            C14812 * C18118 + C14815 * C2679 - C14816 * C2667 - C14815 * C2680 +
            C14811 * C2691 + C14813 * C2677 - C14814 * C2666 - C14813 * C2678 +
            C14810 * C2690) *
               C152696 * C6341) *
              C2661 +
          ((C14813 * C2679 - C14814 * C2667 - C14813 * C2680 + C14810 * C2691 +
            C14815 * C18111 - C14816 * C18106 - C14815 * C18112 +
            C14811 * C18118 + C14817 * C18113 - C14818 * C18107 -
            C14817 * C18114 + C14812 * C18119) *
               C152696 * C6341 +
           (C14813 * C2681 - C14814 * C2668 - C14813 * C2682 + C14810 * C2692 +
            C14815 * C18109 - C14816 * C18105 - C14815 * C18110 +
            C14811 * C18117 + C14817 * C18115 - C14818 * C18108 -
            C14817 * C18116 + C14812 * C18120) *
               C152696 * C152462) *
              C2662) *
         C152512 * C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                    C152696 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126) *
                   C152829 -
               (C734 * C126 + C735 * C125 + C736 * C124 +
                (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                    C152696 * C123) *
                   C152617) *
                  C152512 * C873 +
              ((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) *
                   C152617 -
               (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) *
                   C152829) *
                  C152512 * C874 +
              ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) *
                   C152829 -
               (C1033 * C126 + C740 * C125 + C734 * C124 + C735 * C123) *
                   C152617) *
                  C152512 * C875 +
              ((C734 * C123 + C740 * C124 + C1033 * C125 +
                (C134 * C1022 - C135 * C1021 - C134 * C1023 + C152711 * C1024) *
                    C152696 * C126) *
                   C152617 -
               (C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) *
                   C152829) *
                  C152512 * C152874) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                     C152696 * C123 +
                 C211 * C124 + C212 * C125 + C213 * C126) *
                    C152829 -
                (C734 * C126 + C735 * C125 + C736 * C124 +
                 (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                     C152696 * C123) *
                    C152617) *
                   C1429 +
               (((C134 * C1233 - C135 * C1227 - C134 * C1234 +
                  C152711 * C1245) *
                     C152696 * C123 +
                 C1280 * C124 + C1281 * C125 + C1282 * C126) *
                    C152617 -
                (C473 * C126 + C474 * C125 + C475 * C124 +
                 (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                     C152696 * C123) *
                    C152829) *
                   C1430 +
               (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                     C152696 * C123 +
                 C476 * C124 + C477 * C125 + C478 * C126) *
                    C152829 -
                (C2133 * C126 + C2134 * C125 + C2135 * C124 +
                 (C134 * C1727 - C135 * C1708 - C134 * C1728 +
                  C152711 * C1744) *
                     C152696 * C123) *
                    C152617) *
                   C152870) *
                  C152814 +
              (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) *
                    C152617 -
                (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) *
                    C152829) *
                   C1429 +
               ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) *
                    C152829 -
                (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                    C152617) *
                   C1430 +
               ((C2135 * C123 + C2134 * C124 + C2133 * C125 +
                 (C134 * C2108 - C135 * C2107 - C134 * C2109 +
                  C152711 * C2110) *
                     C152696 * C126) *
                    C152617 -
                (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) *
                    C152829) *
                   C152870) *
                  C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C3047 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C3048 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C152696 * C123 +
            C737 * C124 + C738 * C125 + C739 * C126) *
               C3049 -
           (C3077 * C126 + C3078 * C125 + C3079 * C124 +
            (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                C152696 * C123) *
               C152886) *
              C152512 * C152814 +
          ((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C3048 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C3047 -
           (C741 * C126 + C739 * C125 + C738 * C124 + C737 * C123) * C3049 +
           (C3079 * C123 + C3078 * C124 + C3077 * C125 +
            (C134 * C3052 - C135 * C3051 - C134 * C3053 + C152711 * C3054) *
                C152696 * C126) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152829 -
           ((C6839 + C6840 + C6841) * C152462 +
            ((C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                 C6340 +
             (C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152617) *
              C152512 * C873 +
          (((C6841 + C6840 + C6839) * C6341 +
            (C6848 + C6849 + C6850) * C152462) *
               C152617 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152829) *
              C152512 * C874 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152829 -
           ((C7256 + C7257 + C7258) * C152462 +
            (C6850 + C6849 + C6848) * C6341) *
               C152617) *
              C152512 * C875 +
          (((C7258 + C7257 + C7256) * C6341 +
            (C732 * C6338 + C1279 * C6339 +
             (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                 C6340) *
                C152462) *
               C152617 -
           ((C6353 + C6354 + C6355) * C152462 +
            (C6352 + C6351 + C6350) * C6341) *
               C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C152829 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152617) *
               C1429 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152617 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C152829) *
               C1430 +
           (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
             (C6589 + C6590 + C6619) * C152462) *
                C152829 -
            ((C8741 + C8736 + C8737) * C152462 +
             ((C134 * C8189 - C135 * C8180 - C134 * C8190 + C152711 * C8198) *
                  C6340 +
              C8234 * C6339 + C7577 * C6338) *
                 C6341) *
                C152617) *
               C152870) *
              C152814 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152617 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C152829) *
               C1429 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C152829 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152617) *
               C1430 +
           (((C8737 + C8736 + C8741) * C6341 +
             (C2131 * C6338 + C7580 * C6339 +
              (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                  C6340) *
                 C152462) *
                C152617 -
            ((C6620 + C6602 + C6603) * C152462 +
             (C6619 + C6590 + C6589) * C6341) *
                C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C3047 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C3048 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             C8232 * C6339 + C8233 * C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C3049 -
           ((C10043 + C10044 + C10036) * C152462 +
            ((C134 * C9516 - C135 * C9509 - C134 * C9517 + C152711 * C9527) *
                 C6340 +
             (C134 * C3213 - C135 * C3209 - C134 * C3214 + C152711 * C3221) *
                 C6339 +
             (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                 C6338) *
                C6341) *
               C152886) *
              C152512 * C152814 +
          (((C6841 + C6840 + C6839) * C6341 +
            (C6848 + C6849 + C6850) * C152462) *
               C3048 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C3047 -
           ((C6864 + C6855 + C6856) * C152462 +
            (C6863 + C6843 + C6842) * C6341) *
               C3049 +
           ((C10036 + C10044 + C10043) * C6341 +
            (C3075 * C6338 +
             (C134 * C3217 - C135 * C3211 - C134 * C3218 + C152711 * C3223) *
                 C6339 +
             (C134 * C10024 - C135 * C10023 - C134 * C10025 +
              C152711 * C10026) *
                 C6340) *
                C152462) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152829 -
           ((C15496 + C15497 + C15498) * C152696 * C152462 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C152696 * C6341) *
               C152617) *
              C152512 * C873 +
          (((C15498 + C15497 + C15496) * C152696 * C6341 +
            (C15502 + C15503 + C15504) * C152696 * C152462) *
               C152617 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C152829) *
              C152512 * C874 +
          (((C14897 + C14896 + C14895) * C152696 * C6341 +
            (C14898 + C14899 + C14900) * C152696 * C152462) *
               C152829 -
           ((C15935 + C15936 + C15937) * C152696 * C152462 +
            (C15504 + C15503 + C15502) * C152696 * C6341) *
               C152617) *
              C152512 * C875 +
          (((C15937 + C15936 + C15935) * C152696 * C6341 +
            (C14813 * C657 - C14814 * C637 - C14813 * C658 + C14810 * C673 +
             C14815 * C659 - C14816 * C638 - C14815 * C660 + C14811 * C674 +
             C14817 * C3052 - C14818 * C3051 - C14817 * C3053 +
             C14812 * C3054) *
                C152696 * C152462) *
               C152617 -
           ((C14901 + C14902 + C14903) * C152696 * C152462 +
            (C14900 + C14899 + C14898) * C152696 * C6341) *
               C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C152696 * C6341 +
             (C14892 + C14893 + C14894) * C152696 * C152462) *
                C152829 -
            ((C15496 + C15497 + C15498) * C152696 * C152462 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C152696 * C6341) *
                C152617) *
               C1429 +
           (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 +
              C14810 * C1245 + C14815 * C1719 - C14816 * C1704 -
              C14815 * C1720 + C14811 * C1740 + C14817 * C3213 -
              C14818 * C3209 - C14817 * C3214 + C14812 * C3221) *
                 C152696 * C6341 +
             (C16264 + C16265 + C16266) * C152696 * C152462) *
                C152617 -
            ((C15194 + C15195 + C15196) * C152696 * C152462 +
             (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 +
              C14812 * C1740 + C14815 * C1233 - C14816 * C1227 -
              C14815 * C1234 + C14811 * C1245 + C14813 * C386 - C14814 * C371 -
              C14813 * C387 + C14810 * C407) *
                 C152696 * C6341) *
                C152829) *
               C1430 +
           (((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
              C14815 * C1727 - C14816 * C1708 - C14815 * C1728 +
              C14811 * C1744 + C14817 * C1729 - C14818 * C1709 -
              C14817 * C1730 + C14812 * C1745) *
                 C152696 * C6341 +
             (C15197 + C15198 + C15199) * C152696 * C152462) *
                C152829 -
            ((C17351 + C17352 + C17353) * C152696 * C152462 +
             (C14817 * C9516 - C14818 * C9509 - C14817 * C9517 +
              C14812 * C9527 + C14815 * C1729 - C14816 * C1709 -
              C14815 * C1730 + C14811 * C1745 + C14813 * C1727 -
              C14814 * C1708 - C14813 * C1728 + C14810 * C1744) *
                 C152696 * C6341) *
                C152617) *
               C152870) *
              C152814 +
          ((((C15498 + C15497 + C15496) * C152696 * C6341 +
             (C15502 + C15503 + C15504) * C152696 * C152462) *
                C152617 -
            ((C14895 + C14896 + C14897) * C152696 * C152462 +
             (C14894 + C14893 + C14892) * C152696 * C6341) *
                C152829) *
               C1429 +
           (((C15196 + C15195 + C15194) * C152696 * C6341 +
             (C15200 + C15201 + C15202) * C152696 * C152462) *
                C152829 -
            ((C16267 + C16268 + C16269) * C152696 * C152462 +
             (C16266 + C16265 + C16264) * C152696 * C6341) *
                C152617) *
               C1430 +
           (((C17353 + C17352 + C17351) * C152696 * C6341 +
             (C14813 * C1723 - C14814 * C1706 - C14813 * C1724 +
              C14810 * C1742 + C14815 * C1733 - C14816 * C1711 -
              C14815 * C1734 + C14811 * C1747 + C14817 * C10024 -
              C14818 * C10023 - C14817 * C10025 + C14812 * C10026) *
                 C152696 * C152462) *
                C152617 -
            ((C15203 + C15204 + C15205) * C152696 * C152462 +
             (C15199 + C15198 + C15197) * C152696 * C6341) *
                C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C3047 -
           ((C15496 + C15497 + C15498) * C152696 * C152462 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C152696 * C6341) *
               C3048 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C152696 * C6341 +
            (C15499 + C15500 + C15501) * C152696 * C152462) *
               C3049 -
           ((C18653 + C18654 + C18655) * C152696 * C152462 +
            (C14817 * C18111 - C14818 * C18106 - C14817 * C18112 +
             C14812 * C18118 + C14815 * C2679 - C14816 * C2667 -
             C14815 * C2680 + C14811 * C2691 + C14813 * C2677 - C14814 * C2666 -
             C14813 * C2678 + C14810 * C2690) *
                C152696 * C6341) *
               C152886) *
              C152512 * C152814 +
          (((C15498 + C15497 + C15496) * C152696 * C6341 +
            (C15502 + C15503 + C15504) * C152696 * C152462) *
               C3048 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C3047 -
           ((C15505 + C15506 + C15507) * C152696 * C152462 +
            (C15501 + C15500 + C15499) * C152696 * C6341) *
               C3049 +
           ((C18655 + C18654 + C18653) * C152696 * C6341 +
            (C14813 * C2673 - C14814 * C2664 - C14813 * C2674 + C14810 * C2688 +
             C14815 * C2683 - C14816 * C2669 - C14815 * C2684 + C14811 * C2693 +
             C14817 * C18631 - C14818 * C18630 - C14817 * C18632 +
             C14812 * C18633) *
                C152696 * C152462) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
               C152696 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126) *
              C152530 * C152512 * C129 -
          (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
              C152512 * C130 +
          (C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152530 *
              C152512 * C131 -
          (C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) * C152530 *
              C152512 * C132 +
          (C214 * C123 + C215 * C124 + C216 * C125 +
           (C134 * C158 - C135 * C143 - C134 * C159 + C152711 * C167) *
               C152696 * C126) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152530 * C152917 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152530 * C152901 +
           ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152530 * C152870) *
              C365 +
          ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152530 *
               C152901 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
               C152917 -
           (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C152530 *
               C152870) *
              C366 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152530 *
               C152917 -
           ((C134 * C400 - C135 * C378 - C134 * C401 + C152711 * C414) *
                C152696 * C126 +
            C479 * C125 + C473 * C124 + C474 * C123) *
               C152530 * C152901 +
           (C477 * C123 + C478 * C124 + C480 * C125 +
            (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                C152696 * C126) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152530 * C1429 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152530 * C1430 +
           ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152530 * C152870) *
              C152914 +
          ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152530 *
               C1430 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
               C1429 -
           (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C152530 *
               C152870) *
              C152897 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152530 *
               C1429 -
           (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) * C152530 *
               C1430 +
           (C477 * C123 + C478 * C124 + C480 * C125 +
            (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                C152696 * C126) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
               C152696 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126) *
              C152530 * C1517 -
          (C473 * C126 + C474 * C125 + C475 * C124 +
           (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
               C152696 * C123) *
              C152530 * C1518 +
          ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
               C152696 * C123 +
           C476 * C124 + C477 * C125 + C478 * C126) *
              C152530 * C1519 -
          ((C134 * C1531 - C135 * C1523 - C134 * C1532 + C152711 * C1547) *
               C152696 * C126 +
           (C134 * C1533 - C135 * C1524 - C134 * C1534 + C152711 * C1548) *
               C152696 * C125 +
           (C134 * C1535 - C135 * C1525 - C134 * C1536 + C152711 * C1549) *
               C152696 * C124 +
           (C134 * C1537 - C135 * C1526 - C134 * C1538 + C152711 * C1550) *
               C152696 * C123) *
              C152530 * C1520 +
          ((C134 * C1539 - C135 * C1527 - C134 * C1540 + C152711 * C1551) *
               C152696 * C123 +
           (C134 * C1541 - C135 * C1528 - C134 * C1542 + C152711 * C1552) *
               C152696 * C124 +
           (C134 * C1543 - C135 * C1529 - C134 * C1544 + C152711 * C1553) *
               C152696 * C125 +
           (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
               C152696 * C126) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C2427 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C2428 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C152696 * C123 +
            C737 * C124 + C738 * C125 + C739 * C126) *
               C152873) *
              C152512 * C152914 +
          ((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C2428 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C2427 -
           (C741 * C126 + C739 * C125 + C738 * C124 + C737 * C123) * C152873) *
              C152512 * C152897 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C2427 -
           (C1033 * C126 + C740 * C125 + C734 * C124 + C735 * C123) * C2428 +
           (C738 * C123 + C739 * C124 + C741 * C125 +
            (C134 * C663 - C135 * C640 - C134 * C664 + C152711 * C676) *
                C152696 * C126) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C2427 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C2428 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C152696 * C123 +
            C737 * C124 + C738 * C125 + C739 * C126) *
               C152873) *
              C152917 +
          (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                C152696 * C123 +
            C1280 * C124 + C1281 * C125 + C1282 * C126) *
               C2428 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C2427 -
           ((C134 * C1713 - C135 * C1701 - C134 * C1714 + C152711 * C1737) *
                C152696 * C126 +
            (C134 * C1715 - C135 * C1702 - C134 * C1716 + C152711 * C1738) *
                C152696 * C125 +
            (C134 * C1717 - C135 * C1703 - C134 * C1718 + C152711 * C1739) *
                C152696 * C124 +
            (C134 * C1719 - C135 * C1704 - C134 * C1720 + C152711 * C1740) *
                C152696 * C123) *
               C152873) *
              C152901 +
          (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C2427 -
           (C2133 * C126 + C2134 * C125 + C2135 * C124 +
            (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                C152696 * C123) *
               C2428 +
           ((C134 * C1729 - C135 * C1709 - C134 * C1730 + C152711 * C1745) *
                C152696 * C123 +
            (C134 * C1731 - C135 * C1710 - C134 * C1732 + C152711 * C1746) *
                C152696 * C124 +
            (C134 * C1733 - C135 * C1711 - C134 * C1734 + C152711 * C1747) *
                C152696 * C125 +
            (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                C152696 * C126) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C6338 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) * C6339 +
            (C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C6340) *
               C6341 +
           (C6344 + C6345 + C6346) * C152462) *
              C152530 * C152512 * C129 -
          ((C6347 + C6348 + C6349) * C152462 +
           (C6346 + C6345 + C6344) * C6341) *
              C152530 * C152512 * C130 +
          ((C6349 + C6348 + C6347) * C6341 +
           (C6350 + C6351 + C6352) * C152462) *
              C152530 * C152512 * C131 -
          ((C6353 + C6354 + C6355) * C152462 +
           (C6352 + C6351 + C6350) * C6341) *
              C152530 * C152512 * C132 +
          ((C6355 + C6354 + C6353) * C6341 +
           (C209 * C6338 + C888 * C6339 +
            (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                C6340) *
               C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C152917 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C152901 +
           ((C6615 * C6338 + C6616 * C6339 +
             (C134 * C1539 - C135 * C1527 - C134 * C1540 + C152711 * C1551) *
                 C6340) *
                C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152530 * C152870) *
              C365 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C152901 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C152917 -
           ((C6620 + C6602 + C6603) * C152462 +
            (C6619 + C6590 + C6589) * C6341) *
               C152530 * C152870) *
              C366 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152530 * C152917 -
           ((C1908 * C6340 + C470 * C6339 + C465 * C6338) * C152462 +
            (C6597 + C6596 + C6595) * C6341) *
               C152530 * C152901 +
           ((C6603 + C6602 + C6620) * C6341 +
            (C470 * C6338 + C1908 * C6339 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C6340) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C1429 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C1430 +
           ((C6615 * C6338 + C6616 * C6339 +
             (C134 * C1539 - C135 * C1527 - C134 * C1540 + C152711 * C1551) *
                 C6340) *
                C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C1430 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C1429 -
           ((C6620 + C6602 + C6603) * C152462 +
            (C6619 + C6590 + C6589) * C6341) *
               C152530 * C152870) *
              C152897 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152530 * C1429 -
           ((C7059 + C7060 + C7061) * C152462 +
            (C6597 + C6596 + C6595) * C6341) *
               C152530 * C1430 +
           ((C6603 + C6602 + C6620) * C6341 +
            (C470 * C6338 + C1908 * C6339 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C6340) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C6338 +
            C6614 * C6339 + C6615 * C6340) *
               C6341 +
           (C6344 + C6345 + C6346) * C152462) *
              C152530 * C1517 -
          ((C6582 + C6583 + C6584) * C152462 +
           (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
              C152530 * C1518 +
          ((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
           (C6589 + C6590 + C6619) * C152462) *
              C152530 * C1519 -
          ((C7958 * C6340 + C6617 * C6339 + C1910 * C6338) * C152462 +
           (C7959 * C6340 + C7957 * C6339 + C6616 * C6338) * C6341) *
              C152530 * C1520 +
          ((C7957 * C6338 + C7959 * C6339 +
            (C134 * C7930 - C135 * C7924 - C134 * C7931 + C152711 * C7936) *
                C6340) *
               C6341 +
           (C6617 * C6338 + C7958 * C6339 +
            (C134 * C7932 - C135 * C7925 - C134 * C7933 + C152711 * C7937) *
                C6340) *
               C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C2427 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C2428 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             C8232 * C6339 + C8233 * C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C152873) *
              C152512 * C152914 +
          (((C6841 + C6840 + C6839) * C6341 +
            (C6848 + C6849 + C6850) * C152462) *
               C2428 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C2427 -
           ((C6864 + C6855 + C6856) * C152462 +
            (C6863 + C6843 + C6842) * C6341) *
               C152873) *
              C152512 * C152897 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C2427 -
           ((C7256 + C7257 + C7258) * C152462 +
            (C6850 + C6849 + C6848) * C6341) *
               C2428 +
           ((C6856 + C6855 + C6864) * C6341 +
            (C731 * C6338 + C2912 * C6339 +
             (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                 C6340) *
                C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C2427 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C2428 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             C8232 * C6339 + C8233 * C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C152873) *
              C152917 +
          (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
            (C7557 + C7558 + C7581) * C152462) *
               C2428 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C2427 -
           ((C8235 * C6340 + C6861 * C6339 + C2914 * C6338) * C152462 +
            (C8236 * C6340 + C8233 * C6339 + C8232 * C6338) * C6341) *
               C152873) *
              C152901 +
          (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C2427 -
           ((C8741 + C8736 + C8737) * C152462 +
            (C8950 * C6340 + C8234 * C6339 + C7577 * C6338) * C6341) *
               C2428 +
           ((C8233 * C6338 + C8236 * C6339 +
             (C134 * C8191 - C135 * C8181 - C134 * C8192 + C152711 * C8199) *
                 C6340) *
                C6341 +
            (C6861 * C6338 + C8235 * C6339 +
             (C134 * C8193 - C135 * C8182 - C134 * C8194 + C152711 * C8200) *
                 C6340) *
                C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
            C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
            C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
               C152696 * C6341 +
           (C14892 + C14893 + C14894) * C152696 * C152462) *
              C152530 * C152512 * C129 -
          ((C14895 + C14896 + C14897) * C152696 * C152462 +
           (C14894 + C14893 + C14892) * C152696 * C6341) *
              C152530 * C152512 * C130 +
          ((C14897 + C14896 + C14895) * C152696 * C6341 +
           (C14898 + C14899 + C14900) * C152696 * C152462) *
              C152530 * C152512 * C131 -
          ((C14901 + C14902 + C14903) * C152696 * C152462 +
           (C14900 + C14899 + C14898) * C152696 * C6341) *
              C152530 * C152512 * C132 +
          ((C14903 + C14902 + C14901) * C152696 * C6341 +
           (C14813 * C154 - C14814 * C141 - C14813 * C155 + C14810 * C165 +
            C14815 * C661 - C14816 * C639 - C14815 * C662 + C14811 * C675 +
            C14817 * C663 - C14818 * C640 - C14817 * C664 + C14812 * C676) *
               C152696 * C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152530 * C152917 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C152530 * C152901 +
           ((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
             C14815 * C1727 - C14816 * C1708 - C14815 * C1728 + C14811 * C1744 +
             C14817 * C1729 - C14818 * C1709 - C14817 * C1730 +
             C14812 * C1745) *
                C152696 * C6341 +
            (C15197 + C15198 + C15199) * C152696 * C152462) *
               C152530 * C152870) *
              C365 +
          (((C15196 + C15195 + C15194) * C152696 * C6341 +
            (C15200 + C15201 + C15202) * C152696 * C152462) *
               C152530 * C152901 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C152530 * C152917 -
           ((C15203 + C15204 + C15205) * C152696 * C152462 +
            (C15199 + C15198 + C15197) * C152696 * C6341) *
               C152530 * C152870) *
              C366 +
          (((C14897 + C14896 + C14895) * C152696 * C6341 +
            (C14898 + C14899 + C14900) * C152696 * C152462) *
               C152530 * C152917 -
           ((C14817 * C1713 - C14818 * C1701 - C14817 * C1714 + C14812 * C1737 +
             C14815 * C1239 - C14816 * C1230 - C14815 * C1240 + C14811 * C1248 +
             C14813 * C380 - C14814 * C368 - C14813 * C381 + C14810 * C404) *
                C152696 * C152462 +
            (C15202 + C15201 + C15200) * C152696 * C6341) *
               C152530 * C152901 +
           ((C15205 + C15204 + C15203) * C152696 * C6341 +
            (C14813 * C394 - C14814 * C375 - C14813 * C395 + C14810 * C411 +
             C14815 * C1721 - C14816 * C1705 - C14815 * C1722 + C14811 * C1741 +
             C14817 * C1735 - C14818 * C1712 - C14817 * C1736 +
             C14812 * C1748) *
                C152696 * C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152530 * C1429 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C152530 * C1430 +
           ((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
             C14815 * C1727 - C14816 * C1708 - C14815 * C1728 + C14811 * C1744 +
             C14817 * C1729 - C14818 * C1709 - C14817 * C1730 +
             C14812 * C1745) *
                C152696 * C6341 +
            (C15197 + C15198 + C15199) * C152696 * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C15196 + C15195 + C15194) * C152696 * C6341 +
            (C15200 + C15201 + C15202) * C152696 * C152462) *
               C152530 * C1430 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C152530 * C1429 -
           ((C15203 + C15204 + C15205) * C152696 * C152462 +
            (C15199 + C15198 + C15197) * C152696 * C6341) *
               C152530 * C152870) *
              C152897 +
          (((C14897 + C14896 + C14895) * C152696 * C6341 +
            (C14898 + C14899 + C14900) * C152696 * C152462) *
               C152530 * C1429 -
           ((C15720 + C15721 + C15722) * C152696 * C152462 +
            (C15202 + C15201 + C15200) * C152696 * C6341) *
               C152530 * C1430 +
           ((C15205 + C15204 + C15203) * C152696 * C6341 +
            (C14813 * C394 - C14814 * C375 - C14813 * C395 + C14810 * C411 +
             C14815 * C1721 - C14816 * C1705 - C14815 * C1722 + C14811 * C1741 +
             C14817 * C1735 - C14818 * C1712 - C14817 * C1736 +
             C14812 * C1748) *
                C152696 * C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
            C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
            C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
               C152696 * C6341 +
           (C14892 + C14893 + C14894) * C152696 * C152462) *
              C152530 * C1517 -
          ((C15194 + C15195 + C15196) * C152696 * C152462 +
           (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
            C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
            C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
               C152696 * C6341) *
              C152530 * C1518 +
          ((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
            C14815 * C1727 - C14816 * C1708 - C14815 * C1728 + C14811 * C1744 +
            C14817 * C1729 - C14818 * C1709 - C14817 * C1730 + C14812 * C1745) *
               C152696 * C6341 +
           (C15197 + C15198 + C15199) * C152696 * C152462) *
              C152530 * C1519 -
          ((C14817 * C8183 - C14818 * C8177 - C14817 * C8184 + C14812 * C8195 +
            C14815 * C2271 - C14816 * C2266 - C14815 * C2272 + C14811 * C2278 +
            C14813 * C1535 - C14814 * C1525 - C14813 * C1536 + C14810 * C1549) *
               C152696 * C152462 +
           (C14817 * C8185 - C14818 * C8178 - C14817 * C8186 + C14812 * C8196 +
            C14815 * C2269 - C14816 * C2265 - C14815 * C2270 + C14811 * C2277 +
            C14813 * C1537 - C14814 * C1526 - C14813 * C1538 + C14810 * C1550) *
               C152696 * C6341) *
              C152530 * C1520 +
          ((C14813 * C1539 - C14814 * C1527 - C14813 * C1540 + C14810 * C1551 +
            C14815 * C8189 - C14816 * C8180 - C14815 * C8190 + C14811 * C8198 +
            C14817 * C8191 - C14818 * C8181 - C14817 * C8192 + C14812 * C8199) *
               C152696 * C6341 +
           (C14813 * C1541 - C14814 * C1528 - C14813 * C1542 + C14810 * C1552 +
            C14815 * C8187 - C14816 * C8179 - C14815 * C8188 + C14811 * C8197 +
            C14817 * C8193 - C14818 * C8182 - C14817 * C8194 + C14812 * C8200) *
               C152696 * C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C2427 -
           ((C15496 + C15497 + C15498) * C152696 * C152462 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C152696 * C6341) *
               C2428 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C152696 * C6341 +
            (C15499 + C15500 + C15501) * C152696 * C152462) *
               C152873) *
              C152512 * C152914 +
          (((C15498 + C15497 + C15496) * C152696 * C6341 +
            (C15502 + C15503 + C15504) * C152696 * C152462) *
               C2428 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C2427 -
           ((C15505 + C15506 + C15507) * C152696 * C152462 +
            (C15501 + C15500 + C15499) * C152696 * C6341) *
               C152873) *
              C152512 * C152897 +
          (((C14897 + C14896 + C14895) * C152696 * C6341 +
            (C14898 + C14899 + C14900) * C152696 * C152462) *
               C2427 -
           ((C15935 + C15936 + C15937) * C152696 * C152462 +
            (C15504 + C15503 + C15502) * C152696 * C6341) *
               C2428 +
           ((C15507 + C15506 + C15505) * C152696 * C6341 +
            (C14813 * C655 - C14814 * C636 - C14813 * C656 + C14810 * C672 +
             C14815 * C2671 - C14816 * C2663 - C14815 * C2672 + C14811 * C2687 +
             C14817 * C2685 - C14818 * C2670 - C14817 * C2686 +
             C14812 * C2694) *
                C152696 * C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C2427 -
           ((C15496 + C15497 + C15498) * C152696 * C152462 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C152696 * C6341) *
               C2428 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C152696 * C6341 +
            (C15499 + C15500 + C15501) * C152696 * C152462) *
               C152873) *
              C152917 +
          (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 + C14810 * C1245 +
             C14815 * C1719 - C14816 * C1704 - C14815 * C1720 + C14811 * C1740 +
             C14817 * C3213 - C14818 * C3209 - C14817 * C3214 +
             C14812 * C3221) *
                C152696 * C6341 +
            (C16264 + C16265 + C16266) * C152696 * C152462) *
               C2428 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C2427 -
           ((C14817 * C9522 - C14818 * C9512 - C14817 * C9523 + C14812 * C9530 +
             C14815 * C3215 - C14816 * C3210 - C14815 * C3216 + C14811 * C3222 +
             C14813 * C1717 - C14814 * C1703 - C14813 * C1718 +
             C14810 * C1739) *
                C152696 * C152462 +
            (C14817 * C9518 - C14818 * C9510 - C14817 * C9519 + C14812 * C9528 +
             C14815 * C3213 - C14816 * C3209 - C14815 * C3214 + C14811 * C3221 +
             C14813 * C1719 - C14814 * C1704 - C14813 * C1720 +
             C14810 * C1740) *
                C152696 * C6341) *
               C152873) *
              C152901 +
          (((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
             C14815 * C1727 - C14816 * C1708 - C14815 * C1728 + C14811 * C1744 +
             C14817 * C1729 - C14818 * C1709 - C14817 * C1730 +
             C14812 * C1745) *
                C152696 * C6341 +
            (C15197 + C15198 + C15199) * C152696 * C152462) *
               C2427 -
           ((C17351 + C17352 + C17353) * C152696 * C152462 +
            (C14817 * C9516 - C14818 * C9509 - C14817 * C9517 + C14812 * C9527 +
             C14815 * C1729 - C14816 * C1709 - C14815 * C1730 + C14811 * C1745 +
             C14813 * C1727 - C14814 * C1708 - C14813 * C1728 +
             C14810 * C1744) *
                C152696 * C6341) *
               C2428 +
           ((C14813 * C1729 - C14814 * C1709 - C14813 * C1730 + C14810 * C1745 +
             C14815 * C9516 - C14816 * C9509 - C14815 * C9517 + C14811 * C9527 +
             C14817 * C9520 - C14818 * C9511 - C14817 * C9521 +
             C14812 * C9529) *
                C152696 * C6341 +
            (C14813 * C1731 - C14814 * C1710 - C14813 * C1732 + C14810 * C1746 +
             C14815 * C9514 - C14816 * C9508 - C14815 * C9515 + C14811 * C9526 +
             C14817 * C9524 - C14818 * C9513 - C14817 * C9525 +
             C14812 * C9531) *
                C152696 * C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C4361 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152617) *
               C152828 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152617 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C4361) *
               C152575) *
              C152489 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152617 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C4361) *
               C152828 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C4361 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152617) *
               C152575) *
              C152498 +
          ((((C6349 + C6348 + C6347) * C6341 +
             (C6350 + C6351 + C6352) * C152462) *
                C4361 -
            ((C7256 + C7257 + C7258) * C152462 +
             (C6850 + C6849 + C6848) * C6341) *
                C152617) *
               C152828 +
           (((C7568 + C7567 + C7582) * C6341 +
             (C1278 * C6338 + C2130 * C6339 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C6340) *
                 C152462) *
                C152617 -
            ((C7059 + C7060 + C7061) * C152462 +
             (C6597 + C6596 + C6595) * C6341) *
                C4361) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C4361 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C152617) *
               C152828 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C152617 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C4361) *
               C152575) *
              C152489 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152617 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C4361) *
               C152828 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C4361 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C152617) *
               C152575) *
              C152498 +
          (((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C4361 -
            (C1033 * C126 + C740 * C125 + C734 * C124 + C735 * C123) *
                C152617) *
               C152828 +
           ((C1281 * C123 + C1282 * C124 + C1283 * C125 +
             (C134 * C1243 - C135 * C1232 - C134 * C1244 + C152711 * C1250) *
                 C152696 * C126) *
                C152617 -
            (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) * C4361) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C152696 * C6341 +
             (C14892 + C14893 + C14894) * C152696 * C152462) *
                C4361 -
            ((C15496 + C15497 + C15498) * C152696 * C152462 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C152696 * C6341) *
                C152617) *
               C152828 +
           (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 +
              C14810 * C1245 + C14815 * C1719 - C14816 * C1704 -
              C14815 * C1720 + C14811 * C1740 + C14817 * C3213 -
              C14818 * C3209 - C14817 * C3214 + C14812 * C3221) *
                 C152696 * C6341 +
             (C16264 + C16265 + C16266) * C152696 * C152462) *
                C152617 -
            ((C15194 + C15195 + C15196) * C152696 * C152462 +
             (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 +
              C14812 * C1740 + C14815 * C1233 - C14816 * C1227 -
              C14815 * C1234 + C14811 * C1245 + C14813 * C386 - C14814 * C371 -
              C14813 * C387 + C14810 * C407) *
                 C152696 * C6341) *
                C4361) *
               C152575) *
              C152489 +
          ((((C15498 + C15497 + C15496) * C152696 * C6341 +
             (C15502 + C15503 + C15504) * C152696 * C152462) *
                C152617 -
            ((C14895 + C14896 + C14897) * C152696 * C152462 +
             (C14894 + C14893 + C14892) * C152696 * C6341) *
                C4361) *
               C152828 +
           (((C15196 + C15195 + C15194) * C152696 * C6341 +
             (C15200 + C15201 + C15202) * C152696 * C152462) *
                C4361 -
            ((C16267 + C16268 + C16269) * C152696 * C152462 +
             (C16266 + C16265 + C16264) * C152696 * C6341) *
                C152617) *
               C152575) *
              C152498 +
          ((((C14897 + C14896 + C14895) * C152696 * C6341 +
             (C14898 + C14899 + C14900) * C152696 * C152462) *
                C4361 -
            ((C15935 + C15936 + C15937) * C152696 * C152462 +
             (C15504 + C15503 + C15502) * C152696 * C6341) *
                C152617) *
               C152828 +
           (((C16269 + C16268 + C16267) * C152696 * C6341 +
             (C14813 * C1239 - C14814 * C1230 - C14813 * C1240 +
              C14810 * C1248 + C14815 * C1713 - C14816 * C1701 -
              C14815 * C1714 + C14811 * C1737 + C14817 * C3219 -
              C14818 * C3212 - C14817 * C3220 + C14812 * C3224) *
                 C152696 * C152462) *
                C152617 -
            ((C15720 + C15721 + C15722) * C152696 * C152462 +
             (C15202 + C15201 + C15200) * C152696 * C6341) *
                C4361) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C152613 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152620 +
            (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                  C6338 +
              C8232 * C6339 + C8233 * C6340) *
                 C6341 +
             (C6842 + C6843 + C6863) * C152462) *
                C5033) *
               C152828 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152620 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C152613 -
            ((C9827 + C9828 + C9829) * C152462 +
             (C8236 * C6340 + C8233 * C6339 + C8232 * C6338) * C6341) *
                C5033) *
               C152575) *
              C3495 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152620 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C152613 -
            ((C6864 + C6855 + C6856) * C152462 +
             (C6863 + C6843 + C6842) * C6341) *
                C5033) *
               C152828 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C152613 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152620 +
            ((C9829 + C9828 + C9827) * C6341 +
             (C2913 * C6338 + C6862 * C6339 +
              (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                  C6340) *
                 C152462) *
                C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C152613 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C152620 +
            ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152696 * C123 +
             C737 * C124 + C738 * C125 + C739 * C126) *
                C5033) *
               C152828 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C152620 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C152613 -
            (C2915 * C126 + C2916 * C125 + C2917 * C124 +
             (C134 * C1719 - C135 * C1704 - C134 * C1720 + C152711 * C1740) *
                 C152696 * C123) *
                C5033) *
               C152575) *
              C3495 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152620 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152613 -
            (C741 * C126 + C739 * C125 + C738 * C124 + C737 * C123) * C5033) *
               C152828 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152613 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C152620 +
            (C2917 * C123 + C2916 * C124 + C2915 * C125 +
             (C134 * C2890 - C135 * C2889 - C134 * C2891 + C152711 * C2892) *
                 C152696 * C126) *
                C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C152696 * C6341 +
             (C14892 + C14893 + C14894) * C152696 * C152462) *
                C152613 -
            ((C15496 + C15497 + C15498) * C152696 * C152462 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C152696 * C6341) *
                C152620 +
            ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
              C14815 * C2677 - C14816 * C2666 - C14815 * C2678 +
              C14811 * C2690 + C14817 * C2679 - C14818 * C2667 -
              C14817 * C2680 + C14812 * C2691) *
                 C152696 * C6341 +
             (C15499 + C15500 + C15501) * C152696 * C152462) *
                C5033) *
               C152828 +
           (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 +
              C14810 * C1245 + C14815 * C1719 - C14816 * C1704 -
              C14815 * C1720 + C14811 * C1740 + C14817 * C3213 -
              C14818 * C3209 - C14817 * C3214 + C14812 * C3221) *
                 C152696 * C6341 +
             (C16264 + C16265 + C16266) * C152696 * C152462) *
                C152620 -
            ((C15194 + C15195 + C15196) * C152696 * C152462 +
             (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 +
              C14812 * C1740 + C14815 * C1233 - C14816 * C1227 -
              C14815 * C1234 + C14811 * C1245 + C14813 * C386 - C14814 * C371 -
              C14813 * C387 + C14810 * C407) *
                 C152696 * C6341) *
                C152613 -
            ((C18434 + C18435 + C18436) * C152696 * C152462 +
             (C14817 * C9518 - C14818 * C9510 - C14817 * C9519 +
              C14812 * C9528 + C14815 * C3213 - C14816 * C3209 -
              C14815 * C3214 + C14811 * C3221 + C14813 * C1719 -
              C14814 * C1704 - C14813 * C1720 + C14810 * C1740) *
                 C152696 * C6341) *
                C5033) *
               C152575) *
              C3495 +
          ((((C15498 + C15497 + C15496) * C152696 * C6341 +
             (C15502 + C15503 + C15504) * C152696 * C152462) *
                C152620 -
            ((C14895 + C14896 + C14897) * C152696 * C152462 +
             (C14894 + C14893 + C14892) * C152696 * C6341) *
                C152613 -
            ((C15505 + C15506 + C15507) * C152696 * C152462 +
             (C15501 + C15500 + C15499) * C152696 * C6341) *
                C5033) *
               C152828 +
           (((C15196 + C15195 + C15194) * C152696 * C6341 +
             (C15200 + C15201 + C15202) * C152696 * C152462) *
                C152613 -
            ((C16267 + C16268 + C16269) * C152696 * C152462 +
             (C16266 + C16265 + C16264) * C152696 * C6341) *
                C152620 +
            ((C18436 + C18435 + C18434) * C152696 * C6341 +
             (C14813 * C1715 - C14814 * C1702 - C14813 * C1716 +
              C14810 * C1738 + C14815 * C3217 - C14816 * C3211 -
              C14815 * C3218 + C14811 * C3223 + C14817 * C18412 -
              C14818 * C18411 - C14817 * C18413 + C14812 * C18414) *
                 C152696 * C152462) *
                C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                    C152696 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126) *
                   C4361 -
               (C734 * C126 + C735 * C125 + C736 * C124 +
                (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                    C152696 * C123) *
                   C152617) *
                  C152512 * C152923 +
              ((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) *
                   C152617 -
               (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) *
                   C4361) *
                  C152512 * C152916 +
              ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C4361 -
               (C1033 * C126 + C740 * C125 + C734 * C124 + C735 * C123) *
                   C152617) *
                  C152512 * C152899 +
              ((C734 * C123 + C740 * C124 + C1033 * C125 +
                (C134 * C1022 - C135 * C1021 - C134 * C1023 + C152711 * C1024) *
                    C152696 * C126) *
                   C152617 -
               (C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) *
                   C4361) *
                  C152512 * C152874) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                     C152696 * C123 +
                 C211 * C124 + C212 * C125 + C213 * C126) *
                    C4361 -
                (C734 * C126 + C735 * C125 + C736 * C124 +
                 (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                     C152696 * C123) *
                    C152617) *
                   C152917 +
               (((C134 * C1233 - C135 * C1227 - C134 * C1234 +
                  C152711 * C1245) *
                     C152696 * C123 +
                 C1280 * C124 + C1281 * C125 + C1282 * C126) *
                    C152617 -
                (C473 * C126 + C474 * C125 + C475 * C124 +
                 (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                     C152696 * C123) *
                    C4361) *
                   C152901 +
               (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                     C152696 * C123 +
                 C476 * C124 + C477 * C125 + C478 * C126) *
                    C4361 -
                (C2133 * C126 + C2134 * C125 + C2135 * C124 +
                 (C134 * C1727 - C135 * C1708 - C134 * C1728 +
                  C152711 * C1744) *
                     C152696 * C123) *
                    C152617) *
                   C152870) *
                  C3495 +
              (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) *
                    C152617 -
                (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) *
                    C4361) *
                   C152917 +
               ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) *
                    C4361 -
                (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                    C152617) *
                   C152901 +
               ((C2135 * C123 + C2134 * C124 + C2133 * C125 +
                 (C134 * C2108 - C135 * C2107 - C134 * C2109 +
                  C152711 * C2110) *
                     C152696 * C126) *
                    C152617 -
                (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) *
                    C4361) *
                   C152870) *
                  C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152925 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C152922 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C152696 * C123 +
            C737 * C124 + C738 * C125 + C739 * C126) *
               C152909 -
           (C3077 * C126 + C3078 * C125 + C3079 * C124 +
            (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                C152696 * C123) *
               C152886) *
              C152512 * C3495 +
          ((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152922 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152925 -
           (C741 * C126 + C739 * C125 + C738 * C124 + C737 * C123) * C152909 +
           (C3079 * C123 + C3078 * C124 + C3077 * C125 +
            (C134 * C3052 - C135 * C3051 - C134 * C3053 + C152711 * C3054) *
                C152696 * C126) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C4361 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152617) *
              C152512 * C152923 +
          (((C6841 + C6840 + C6839) * C6341 +
            (C6848 + C6849 + C6850) * C152462) *
               C152617 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C4361) *
              C152512 * C152916 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C4361 -
           ((C7256 + C7257 + C7258) * C152462 +
            (C6850 + C6849 + C6848) * C6341) *
               C152617) *
              C152512 * C152899 +
          (((C7258 + C7257 + C7256) * C6341 +
            (C732 * C6338 + C1279 * C6339 +
             (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                 C6340) *
                C152462) *
               C152617 -
           ((C6353 + C6354 + C6355) * C152462 +
            (C6352 + C6351 + C6350) * C6341) *
               C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C4361 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152617) *
               C152917 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152617 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C4361) *
               C152901 +
           (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
             (C6589 + C6590 + C6619) * C152462) *
                C4361 -
            ((C8741 + C8736 + C8737) * C152462 +
             (C8950 * C6340 + C8234 * C6339 + C7577 * C6338) * C6341) *
                C152617) *
               C152870) *
              C3495 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152617 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C4361) *
               C152917 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C4361 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152617) *
               C152901 +
           (((C8737 + C8736 + C8741) * C6341 +
             (C2131 * C6338 + C7580 * C6339 +
              (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                  C6340) *
                 C152462) *
                C152617 -
            ((C6620 + C6602 + C6603) * C152462 +
             (C6619 + C6590 + C6589) * C6341) *
                C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152925 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152922 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             C8232 * C6339 + C8233 * C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C152909 -
           ((C10043 + C10044 + C10036) * C152462 +
            (C10259 * C6340 + C10260 * C6339 +
             (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                 C6338) *
                C6341) *
               C152886) *
              C152512 * C3495 +
          (((C6841 + C6840 + C6839) * C6341 +
            (C6848 + C6849 + C6850) * C152462) *
               C152922 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152925 -
           ((C6864 + C6855 + C6856) * C152462 +
            (C6863 + C6843 + C6842) * C6341) *
               C152909 +
           ((C10036 + C10044 + C10043) * C6341 +
            (C3075 * C6338 +
             (C134 * C3217 - C135 * C3211 - C134 * C3218 + C152711 * C3223) *
                 C6339 +
             (C134 * C10024 - C135 * C10023 - C134 * C10025 +
              C152711 * C10026) *
                 C6340) *
                C152462) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C4361 -
           ((C15496 + C15497 + C15498) * C152696 * C152462 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C152696 * C6341) *
               C152617) *
              C152512 * C152923 +
          (((C15498 + C15497 + C15496) * C152696 * C6341 +
            (C15502 + C15503 + C15504) * C152696 * C152462) *
               C152617 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C4361) *
              C152512 * C152916 +
          (((C14897 + C14896 + C14895) * C152696 * C6341 +
            (C14898 + C14899 + C14900) * C152696 * C152462) *
               C4361 -
           ((C15935 + C15936 + C15937) * C152696 * C152462 +
            (C15504 + C15503 + C15502) * C152696 * C6341) *
               C152617) *
              C152512 * C152899 +
          (((C15937 + C15936 + C15935) * C152696 * C6341 +
            (C14813 * C657 - C14814 * C637 - C14813 * C658 + C14810 * C673 +
             C14815 * C659 - C14816 * C638 - C14815 * C660 + C14811 * C674 +
             C14817 * C3052 - C14818 * C3051 - C14817 * C3053 +
             C14812 * C3054) *
                C152696 * C152462) *
               C152617 -
           ((C14901 + C14902 + C14903) * C152696 * C152462 +
            (C14900 + C14899 + C14898) * C152696 * C6341) *
               C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C152696 * C6341 +
             (C14892 + C14893 + C14894) * C152696 * C152462) *
                C4361 -
            ((C15496 + C15497 + C15498) * C152696 * C152462 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C152696 * C6341) *
                C152617) *
               C152917 +
           (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 +
              C14810 * C1245 + C14815 * C1719 - C14816 * C1704 -
              C14815 * C1720 + C14811 * C1740 + C14817 * C3213 -
              C14818 * C3209 - C14817 * C3214 + C14812 * C3221) *
                 C152696 * C6341 +
             (C16264 + C16265 + C16266) * C152696 * C152462) *
                C152617 -
            ((C15194 + C15195 + C15196) * C152696 * C152462 +
             (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 +
              C14812 * C1740 + C14815 * C1233 - C14816 * C1227 -
              C14815 * C1234 + C14811 * C1245 + C14813 * C386 - C14814 * C371 -
              C14813 * C387 + C14810 * C407) *
                 C152696 * C6341) *
                C4361) *
               C152901 +
           (((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
              C14815 * C1727 - C14816 * C1708 - C14815 * C1728 +
              C14811 * C1744 + C14817 * C1729 - C14818 * C1709 -
              C14817 * C1730 + C14812 * C1745) *
                 C152696 * C6341 +
             (C15197 + C15198 + C15199) * C152696 * C152462) *
                C4361 -
            ((C17351 + C17352 + C17353) * C152696 * C152462 +
             (C14817 * C9516 - C14818 * C9509 - C14817 * C9517 +
              C14812 * C9527 + C14815 * C1729 - C14816 * C1709 -
              C14815 * C1730 + C14811 * C1745 + C14813 * C1727 -
              C14814 * C1708 - C14813 * C1728 + C14810 * C1744) *
                 C152696 * C6341) *
                C152617) *
               C152870) *
              C3495 +
          ((((C15498 + C15497 + C15496) * C152696 * C6341 +
             (C15502 + C15503 + C15504) * C152696 * C152462) *
                C152617 -
            ((C14895 + C14896 + C14897) * C152696 * C152462 +
             (C14894 + C14893 + C14892) * C152696 * C6341) *
                C4361) *
               C152917 +
           (((C15196 + C15195 + C15194) * C152696 * C6341 +
             (C15200 + C15201 + C15202) * C152696 * C152462) *
                C4361 -
            ((C16267 + C16268 + C16269) * C152696 * C152462 +
             (C16266 + C16265 + C16264) * C152696 * C6341) *
                C152617) *
               C152901 +
           (((C17353 + C17352 + C17351) * C152696 * C6341 +
             (C14813 * C1723 - C14814 * C1706 - C14813 * C1724 +
              C14810 * C1742 + C14815 * C1733 - C14816 * C1711 -
              C14815 * C1734 + C14811 * C1747 + C14817 * C10024 -
              C14818 * C10023 - C14817 * C10025 + C14812 * C10026) *
                 C152696 * C152462) *
                C152617 -
            ((C15203 + C15204 + C15205) * C152696 * C152462 +
             (C15199 + C15198 + C15197) * C152696 * C6341) *
                C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152925 -
           ((C15496 + C15497 + C15498) * C152696 * C152462 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C152696 * C6341) *
               C152922 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C152696 * C6341 +
            (C15499 + C15500 + C15501) * C152696 * C152462) *
               C152909 -
           ((C18653 + C18654 + C18655) * C152696 * C152462 +
            (C14817 * C18111 - C14818 * C18106 - C14817 * C18112 +
             C14812 * C18118 + C14815 * C2679 - C14816 * C2667 -
             C14815 * C2680 + C14811 * C2691 + C14813 * C2677 - C14814 * C2666 -
             C14813 * C2678 + C14810 * C2690) *
                C152696 * C6341) *
               C152886) *
              C152512 * C3495 +
          (((C15498 + C15497 + C15496) * C152696 * C6341 +
            (C15502 + C15503 + C15504) * C152696 * C152462) *
               C152922 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C152925 -
           ((C15505 + C15506 + C15507) * C152696 * C152462 +
            (C15501 + C15500 + C15499) * C152696 * C6341) *
               C152909 +
           ((C18655 + C18654 + C18653) * C152696 * C6341 +
            (C14813 * C2673 - C14814 * C2664 - C14813 * C2674 + C14810 * C2688 +
             C14815 * C2683 - C14816 * C2669 - C14815 * C2684 + C14811 * C2693 +
             C14817 * C18631 - C14818 * C18630 - C14817 * C18632 +
             C14812 * C18633) *
                C152696 * C152462) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152613 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152620 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             C8232 * C6339 + C8233 * C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C5033) *
              C152512 * C152489 +
          (((C6841 + C6840 + C6839) * C6341 +
            (C6848 + C6849 + C6850) * C152462) *
               C152620 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152613 -
           ((C6864 + C6855 + C6856) * C152462 +
            (C6863 + C6843 + C6842) * C6341) *
               C5033) *
              C152512 * C152498 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152613 -
           ((C7256 + C7257 + C7258) * C152462 +
            (C6850 + C6849 + C6848) * C6341) *
               C152620 +
           ((C6856 + C6855 + C6864) * C6341 +
            (C731 * C6338 + C2912 * C6339 +
             (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                 C6340) *
                C152462) *
               C5033) *
              C152512 * C3842)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152613 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C152620 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C152696 * C123 +
            C737 * C124 + C738 * C125 + C739 * C126) *
               C5033) *
              C152512 * C152489 +
          ((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152620 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152613 -
           (C741 * C126 + C739 * C125 + C738 * C124 + C737 * C123) * C5033) *
              C152512 * C152498 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152613 -
           (C1033 * C126 + C740 * C125 + C734 * C124 + C735 * C123) * C152620 +
           (C738 * C123 + C739 * C124 + C741 * C125 +
            (C134 * C663 - C135 * C640 - C134 * C664 + C152711 * C676) *
                C152696 * C126) *
               C5033) *
              C152512 * C3842)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152613 -
           ((C15496 + C15497 + C15498) * C152696 * C152462 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C152696 * C6341) *
               C152620 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C152696 * C6341 +
            (C15499 + C15500 + C15501) * C152696 * C152462) *
               C5033) *
              C152512 * C152489 +
          (((C15498 + C15497 + C15496) * C152696 * C6341 +
            (C15502 + C15503 + C15504) * C152696 * C152462) *
               C152620 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C152613 -
           ((C15505 + C15506 + C15507) * C152696 * C152462 +
            (C15501 + C15500 + C15499) * C152696 * C6341) *
               C5033) *
              C152512 * C152498 +
          (((C14897 + C14896 + C14895) * C152696 * C6341 +
            (C14898 + C14899 + C14900) * C152696 * C152462) *
               C152613 -
           ((C15935 + C15936 + C15937) * C152696 * C152462 +
            (C15504 + C15503 + C15502) * C152696 * C6341) *
               C152620 +
           ((C15507 + C15506 + C15505) * C152696 * C6341 +
            (C14813 * C655 - C14814 * C636 - C14813 * C656 + C14810 * C672 +
             C14815 * C2671 - C14816 * C2663 - C14815 * C2672 + C14811 * C2687 +
             C14817 * C2685 - C14818 * C2670 - C14817 * C2686 +
             C14812 * C2694) *
                C152696 * C152462) *
               C5033) *
              C152512 * C3842)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C4361 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C152617) *
               C152917 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C152617 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C4361) *
               C152901 +
           (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                 C152696 * C123 +
             C476 * C124 + C477 * C125 + C478 * C126) *
                C4361 -
            (C2133 * C126 + C2134 * C125 + C2135 * C124 +
             (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                 C152696 * C123) *
                C152617) *
               C152870) *
              C3495 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152617 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C4361) *
               C152917 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C4361 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C152617) *
               C152901 +
           ((C2135 * C123 + C2134 * C124 + C2133 * C125 +
             (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                 C152696 * C126) *
                C152617 -
            (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C4361 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C152617) *
              C152512 * C152923 +
          ((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152617 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C4361) *
              C152512 * C152916 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C4361 -
           (C1033 * C126 + C740 * C125 + C734 * C124 + C735 * C123) * C152617) *
              C152512 * C152899 +
          ((C734 * C123 + C740 * C124 + C1033 * C125 +
            (C134 * C1022 - C135 * C1021 - C134 * C1023 + C152711 * C1024) *
                C152696 * C126) *
               C152617 -
           (C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) * C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C4361 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152617) *
              C152512 * C152923 +
          (((C6841 + C6840 + C6839) * C6341 +
            (C6848 + C6849 + C6850) * C152462) *
               C152617 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C4361) *
              C152512 * C152916 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C4361 -
           ((C7256 + C7257 + C7258) * C152462 +
            (C6850 + C6849 + C6848) * C6341) *
               C152617) *
              C152512 * C152899 +
          (((C7258 + C7257 + C7256) * C6341 +
            (C732 * C6338 + C1279 * C6339 +
             (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                 C6340) *
                C152462) *
               C152617 -
           ((C6353 + C6354 + C6355) * C152462 +
            (C6352 + C6351 + C6350) * C6341) *
               C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C4361 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152617) *
               C152917 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152617 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C4361) *
               C152901 +
           (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
             (C6589 + C6590 + C6619) * C152462) *
                C4361 -
            ((C8741 + C8736 + C8737) * C152462 +
             (C8950 * C6340 + C8234 * C6339 + C7577 * C6338) * C6341) *
                C152617) *
               C152870) *
              C3495 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152617 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C4361) *
               C152917 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C4361 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152617) *
               C152901 +
           (((C8737 + C8736 + C8741) * C6341 +
             (C2131 * C6338 + C7580 * C6339 +
              (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                  C6340) *
                 C152462) *
                C152617 -
            ((C6620 + C6602 + C6603) * C152462 +
             (C6619 + C6590 + C6589) * C6341) *
                C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C4361 -
           ((C15496 + C15497 + C15498) * C152696 * C152462 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C152696 * C6341) *
               C152617) *
              C152512 * C152923 +
          (((C15498 + C15497 + C15496) * C152696 * C6341 +
            (C15502 + C15503 + C15504) * C152696 * C152462) *
               C152617 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C4361) *
              C152512 * C152916 +
          (((C14897 + C14896 + C14895) * C152696 * C6341 +
            (C14898 + C14899 + C14900) * C152696 * C152462) *
               C4361 -
           ((C15935 + C15936 + C15937) * C152696 * C152462 +
            (C15504 + C15503 + C15502) * C152696 * C6341) *
               C152617) *
              C152512 * C152899 +
          (((C15937 + C15936 + C15935) * C152696 * C6341 +
            (C14813 * C657 - C14814 * C637 - C14813 * C658 + C14810 * C673 +
             C14815 * C659 - C14816 * C638 - C14815 * C660 + C14811 * C674 +
             C14817 * C3052 - C14818 * C3051 - C14817 * C3053 +
             C14812 * C3054) *
                C152696 * C152462) *
               C152617 -
           ((C14901 + C14902 + C14903) * C152696 * C152462 +
            (C14900 + C14899 + C14898) * C152696 * C6341) *
               C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C152696 * C6341 +
             (C14892 + C14893 + C14894) * C152696 * C152462) *
                C4361 -
            ((C15496 + C15497 + C15498) * C152696 * C152462 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C152696 * C6341) *
                C152617) *
               C152917 +
           (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 +
              C14810 * C1245 + C14815 * C1719 - C14816 * C1704 -
              C14815 * C1720 + C14811 * C1740 + C14817 * C3213 -
              C14818 * C3209 - C14817 * C3214 + C14812 * C3221) *
                 C152696 * C6341 +
             (C16264 + C16265 + C16266) * C152696 * C152462) *
                C152617 -
            ((C15194 + C15195 + C15196) * C152696 * C152462 +
             (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 +
              C14812 * C1740 + C14815 * C1233 - C14816 * C1227 -
              C14815 * C1234 + C14811 * C1245 + C14813 * C386 - C14814 * C371 -
              C14813 * C387 + C14810 * C407) *
                 C152696 * C6341) *
                C4361) *
               C152901 +
           (((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
              C14815 * C1727 - C14816 * C1708 - C14815 * C1728 +
              C14811 * C1744 + C14817 * C1729 - C14818 * C1709 -
              C14817 * C1730 + C14812 * C1745) *
                 C152696 * C6341 +
             (C15197 + C15198 + C15199) * C152696 * C152462) *
                C4361 -
            ((C17351 + C17352 + C17353) * C152696 * C152462 +
             (C14817 * C9516 - C14818 * C9509 - C14817 * C9517 +
              C14812 * C9527 + C14815 * C1729 - C14816 * C1709 -
              C14815 * C1730 + C14811 * C1745 + C14813 * C1727 -
              C14814 * C1708 - C14813 * C1728 + C14810 * C1744) *
                 C152696 * C6341) *
                C152617) *
               C152870) *
              C3495 +
          ((((C15498 + C15497 + C15496) * C152696 * C6341 +
             (C15502 + C15503 + C15504) * C152696 * C152462) *
                C152617 -
            ((C14895 + C14896 + C14897) * C152696 * C152462 +
             (C14894 + C14893 + C14892) * C152696 * C6341) *
                C4361) *
               C152917 +
           (((C15196 + C15195 + C15194) * C152696 * C6341 +
             (C15200 + C15201 + C15202) * C152696 * C152462) *
                C4361 -
            ((C16267 + C16268 + C16269) * C152696 * C152462 +
             (C16266 + C16265 + C16264) * C152696 * C6341) *
                C152617) *
               C152901 +
           (((C17353 + C17352 + C17351) * C152696 * C6341 +
             (C14813 * C1723 - C14814 * C1706 - C14813 * C1724 +
              C14810 * C1742 + C14815 * C1733 - C14816 * C1711 -
              C14815 * C1734 + C14811 * C1747 + C14817 * C10024 -
              C14818 * C10023 - C14817 * C10025 + C14812 * C10026) *
                 C152696 * C152462) *
                C152617 -
            ((C15203 + C15204 + C15205) * C152696 * C152462 +
             (C15199 + C15198 + C15197) * C152696 * C6341) *
                C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152530 * C1879 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152530 * C1880 +
           ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152530 * C1881 -
           (C1911 * C126 + C1912 * C125 + C1913 * C124 +
            (C134 * C1537 - C135 * C1526 - C134 * C1538 + C152711 * C1550) *
                C152696 * C123) *
               C152530 * C152880) *
              C152814 +
          ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152530 *
               C1880 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
               C1879 -
           (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C152530 *
               C1881 +
           (C1913 * C123 + C1912 * C124 + C1911 * C125 +
            (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                C152696 * C126) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152530 * C152828 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152530 * C152575) *
              C873 +
          ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152530 *
               C152575 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
               C152828) *
              C874 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152530 *
               C152828 -
           (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) * C152530 *
               C152575) *
              C875 +
          ((C473 * C123 + C479 * C124 + C889 * C125 +
            (C134 * C878 - C135 * C877 - C134 * C879 + C152711 * C880) *
                C152696 * C126) *
               C152530 * C152575 -
           (C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) * C152530 *
               C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C152828 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C152575) *
              C873 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C152575 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C152828) *
              C874 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152530 * C152828 -
           ((C7059 + C7060 + C7061) * C152462 +
            (C6597 + C6596 + C6595) * C6341) *
               C152530 * C152575) *
              C875 +
          (((C7061 + C7060 + C7059) * C6341 +
            (C471 * C6338 + C472 * C6339 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C6340) *
                C152462) *
               C152530 * C152575 -
           ((C6353 + C6354 + C6355) * C152462 +
            (C6352 + C6351 + C6350) * C6341) *
               C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C1879 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C1880 +
           ((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152530 * C1881 -
           ((C8435 + C8436 + C8437) * C152462 +
            (C7959 * C6340 + C7957 * C6339 + C6616 * C6338) * C6341) *
               C152530 * C152880) *
              C152814 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C1880 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C1879 -
           ((C6620 + C6602 + C6603) * C152462 +
            (C6619 + C6590 + C6589) * C6341) *
               C152530 * C1881 +
           ((C8437 + C8436 + C8435) * C6341 +
            (C1909 * C6338 + C6618 * C6339 +
             (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                 C6340) *
                C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152530 * C152828 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C152530 * C152575) *
              C873 +
          (((C15196 + C15195 + C15194) * C152696 * C6341 +
            (C15200 + C15201 + C15202) * C152696 * C152462) *
               C152530 * C152575 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C152530 * C152828) *
              C874 +
          (((C14897 + C14896 + C14895) * C152696 * C6341 +
            (C14898 + C14899 + C14900) * C152696 * C152462) *
               C152530 * C152828 -
           ((C15720 + C15721 + C15722) * C152696 * C152462 +
            (C15202 + C15201 + C15200) * C152696 * C6341) *
               C152530 * C152575) *
              C875 +
          (((C15722 + C15721 + C15720) * C152696 * C6341 +
            (C14813 * C396 - C14814 * C376 - C14813 * C397 + C14810 * C412 +
             C14815 * C1241 - C14816 * C1231 - C14815 * C1242 + C14811 * C1249 +
             C14817 * C2890 - C14818 * C2889 - C14817 * C2891 +
             C14812 * C2892) *
                C152696 * C152462) *
               C152530 * C152575 -
           ((C14901 + C14902 + C14903) * C152696 * C152462 +
            (C14900 + C14899 + C14898) * C152696 * C6341) *
               C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152530 * C1879 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C152530 * C1880 +
           ((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
             C14815 * C1727 - C14816 * C1708 - C14815 * C1728 + C14811 * C1744 +
             C14817 * C1729 - C14818 * C1709 - C14817 * C1730 +
             C14812 * C1745) *
                C152696 * C6341 +
            (C15197 + C15198 + C15199) * C152696 * C152462) *
               C152530 * C1881 -
           ((C17040 + C17041 + C17042) * C152696 * C152462 +
            (C14817 * C8185 - C14818 * C8178 - C14817 * C8186 + C14812 * C8196 +
             C14815 * C2269 - C14816 * C2265 - C14815 * C2270 + C14811 * C2277 +
             C14813 * C1537 - C14814 * C1526 - C14813 * C1538 +
             C14810 * C1550) *
                C152696 * C6341) *
               C152530 * C152880) *
              C152814 +
          (((C15196 + C15195 + C15194) * C152696 * C6341 +
            (C15200 + C15201 + C15202) * C152696 * C152462) *
               C152530 * C1880 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C152530 * C1879 -
           ((C15203 + C15204 + C15205) * C152696 * C152462 +
            (C15199 + C15198 + C15197) * C152696 * C6341) *
               C152530 * C1881 +
           ((C17042 + C17041 + C17040) * C152696 * C6341 +
            (C14813 * C1533 - C14814 * C1524 - C14813 * C1534 + C14810 * C1548 +
             C14815 * C2273 - C14816 * C2267 - C14815 * C2274 + C14811 * C2279 +
             C14817 * C9823 - C14818 * C9822 - C14817 * C9824 +
             C14812 * C9825) *
                C152696 * C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152829 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C152617) *
              C1879 +
          (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                C152696 * C123 +
            C1280 * C124 + C1281 * C125 + C1282 * C126) *
               C152617 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152829) *
              C1880 +
          (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152829 -
           (C2133 * C126 + C2134 * C125 + C2135 * C124 +
            (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                C152696 * C123) *
               C152617) *
              C1881 +
          (((C134 * C2269 - C135 * C2265 - C134 * C2270 + C152711 * C2277) *
                C152696 * C123 +
            (C134 * C2271 - C135 * C2266 - C134 * C2272 + C152711 * C2278) *
                C152696 * C124 +
            (C134 * C2273 - C135 * C2267 - C134 * C2274 + C152711 * C2279) *
                C152696 * C125 +
            (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                C152696 * C126) *
               C152617 -
           (C1911 * C126 + C1912 * C125 + C1913 * C124 +
            (C134 * C1537 - C135 * C1526 - C134 * C1538 + C152711 * C1550) *
                C152696 * C123) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C152829 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C152617) *
               C152828 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C152617 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C152829) *
               C152575) *
              C365 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152617 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152829) *
               C152828 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152829 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C152617) *
               C152575) *
              C366 +
          (((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152829 -
            (C1033 * C126 + C740 * C125 + C734 * C124 + C735 * C123) *
                C152617) *
               C152828 +
           ((C1281 * C123 + C1282 * C124 + C1283 * C125 +
             (C134 * C1243 - C135 * C1232 - C134 * C1244 + C152711 * C1250) *
                 C152696 * C126) *
                C152617 -
            (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) * C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C152829 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152617) *
               C152828 +
           (((C7578 * C6338 + C7577 * C6339 +
              (C134 * C2269 - C135 * C2265 - C134 * C2270 + C152711 * C2277) *
                  C6340) *
                 C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152617 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C152829) *
               C152575) *
              C365 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152617 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C152829) *
               C152828 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C152829 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152617) *
               C152575) *
              C366 +
          ((((C6349 + C6348 + C6347) * C6341 +
             (C6350 + C6351 + C6352) * C152462) *
                C152829 -
            ((C7256 + C7257 + C7258) * C152462 +
             (C6850 + C6849 + C6848) * C6341) *
                C152617) *
               C152828 +
           (((C7568 + C7567 + C7582) * C6341 +
             (C1278 * C6338 + C2130 * C6339 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C6340) *
                 C152462) *
                C152617 -
            ((C7059 + C7060 + C7061) * C152462 +
             (C6597 + C6596 + C6595) * C6341) *
                C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152829 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152617) *
              C1879 +
          (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
            (C7557 + C7558 + C7581) * C152462) *
               C152617 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152829) *
              C1880 +
          (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152829 -
           ((C8741 + C8736 + C8737) * C152462 +
            (C8950 * C6340 + C8234 * C6339 + C7577 * C6338) * C6341) *
               C152617) *
              C1881 +
          (((C8234 * C6338 + C8950 * C6339 +
             (C134 * C8937 - C135 * C8935 - C134 * C8938 + C152711 * C8941) *
                 C6340) *
                C6341 +
            (C7579 * C6338 + C8740 * C6339 +
             (C134 * C8939 - C135 * C8936 - C134 * C8940 + C152711 * C8942) *
                 C6340) *
                C152462) *
               C152617 -
           ((C8435 + C8436 + C8437) * C152462 +
            (C7959 * C6340 + C7957 * C6339 + C6616 * C6338) * C6341) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C152696 * C6341 +
             (C14892 + C14893 + C14894) * C152696 * C152462) *
                C152829 -
            ((C15496 + C15497 + C15498) * C152696 * C152462 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C152696 * C6341) *
                C152617) *
               C152828 +
           (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 +
              C14810 * C1245 + C14815 * C1719 - C14816 * C1704 -
              C14815 * C1720 + C14811 * C1740 + C14817 * C3213 -
              C14818 * C3209 - C14817 * C3214 + C14812 * C3221) *
                 C152696 * C6341 +
             (C16264 + C16265 + C16266) * C152696 * C152462) *
                C152617 -
            ((C15194 + C15195 + C15196) * C152696 * C152462 +
             (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 +
              C14812 * C1740 + C14815 * C1233 - C14816 * C1227 -
              C14815 * C1234 + C14811 * C1245 + C14813 * C386 - C14814 * C371 -
              C14813 * C387 + C14810 * C407) *
                 C152696 * C6341) *
                C152829) *
               C152575) *
              C365 +
          ((((C15498 + C15497 + C15496) * C152696 * C6341 +
             (C15502 + C15503 + C15504) * C152696 * C152462) *
                C152617 -
            ((C14895 + C14896 + C14897) * C152696 * C152462 +
             (C14894 + C14893 + C14892) * C152696 * C6341) *
                C152829) *
               C152828 +
           (((C15196 + C15195 + C15194) * C152696 * C6341 +
             (C15200 + C15201 + C15202) * C152696 * C152462) *
                C152829 -
            ((C16267 + C16268 + C16269) * C152696 * C152462 +
             (C16266 + C16265 + C16264) * C152696 * C6341) *
                C152617) *
               C152575) *
              C366 +
          ((((C14897 + C14896 + C14895) * C152696 * C6341 +
             (C14898 + C14899 + C14900) * C152696 * C152462) *
                C152829 -
            ((C15935 + C15936 + C15937) * C152696 * C152462 +
             (C15504 + C15503 + C15502) * C152696 * C6341) *
                C152617) *
               C152828 +
           (((C16269 + C16268 + C16267) * C152696 * C6341 +
             (C14813 * C1239 - C14814 * C1230 - C14813 * C1240 +
              C14810 * C1248 + C14815 * C1713 - C14816 * C1701 -
              C14815 * C1714 + C14811 * C1737 + C14817 * C3219 -
              C14818 * C3212 - C14817 * C3220 + C14812 * C3224) *
                 C152696 * C152462) *
                C152617 -
            ((C15720 + C15721 + C15722) * C152696 * C152462 +
             (C15202 + C15201 + C15200) * C152696 * C6341) *
                C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152829 -
           ((C15496 + C15497 + C15498) * C152696 * C152462 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C152696 * C6341) *
               C152617) *
              C1879 +
          (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 + C14810 * C1245 +
             C14815 * C1719 - C14816 * C1704 - C14815 * C1720 + C14811 * C1740 +
             C14817 * C3213 - C14818 * C3209 - C14817 * C3214 +
             C14812 * C3221) *
                C152696 * C6341 +
            (C16264 + C16265 + C16266) * C152696 * C152462) *
               C152617 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C152829) *
              C1880 +
          (((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
             C14815 * C1727 - C14816 * C1708 - C14815 * C1728 + C14811 * C1744 +
             C14817 * C1729 - C14818 * C1709 - C14817 * C1730 +
             C14812 * C1745) *
                C152696 * C6341 +
            (C15197 + C15198 + C15199) * C152696 * C152462) *
               C152829 -
           ((C17351 + C17352 + C17353) * C152696 * C152462 +
            (C14817 * C9516 - C14818 * C9509 - C14817 * C9517 + C14812 * C9527 +
             C14815 * C1729 - C14816 * C1709 - C14815 * C1730 + C14811 * C1745 +
             C14813 * C1727 - C14814 * C1708 - C14813 * C1728 +
             C14810 * C1744) *
                C152696 * C6341) *
               C152617) *
              C1881 +
          (((C14813 * C2269 - C14814 * C2265 - C14813 * C2270 + C14810 * C2277 +
             C14815 * C8185 - C14816 * C8178 - C14815 * C8186 + C14811 * C8196 +
             C14817 * C10240 - C14818 * C10238 - C14817 * C10241 +
             C14812 * C10244) *
                C152696 * C6341 +
            (C14813 * C2271 - C14814 * C2266 - C14813 * C2272 + C14810 * C2278 +
             C14815 * C8183 - C14816 * C8177 - C14815 * C8184 + C14811 * C8195 +
             C14817 * C10242 - C14818 * C10239 - C14817 * C10243 +
             C14812 * C10245) *
                C152696 * C152462) *
               C152617 -
           ((C17040 + C17041 + C17042) * C152696 * C152462 +
            (C14817 * C8185 - C14818 * C8178 - C14817 * C8186 + C14812 * C8196 +
             C14815 * C2269 - C14816 * C2265 - C14815 * C2270 + C14811 * C2277 +
             C14813 * C1537 - C14814 * C1526 - C14813 * C1538 +
             C14810 * C1550) *
                C152696 * C6341) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                   C152696 * C123 +
               C211 * C124 + C212 * C125 + C213 * C126) *
                  C152530 * C152512 * C129 -
              (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) *
                  C152530 * C152512 * C130 +
              (C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) *
                  C152530 * C152512 * C131 -
              (C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) *
                  C152530 * C152512 * C132 +
              (C214 * C123 + C215 * C124 + C216 * C125 +
               (C134 * C158 - C135 * C143 - C134 * C159 + C152711 * C167) *
                   C152696 * C126) *
                  C152530 * C152512 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                    C152696 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126) *
                   C152530 * C152917 -
               (C473 * C126 + C474 * C125 + C475 * C124 +
                (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                    C152696 * C123) *
                   C152530 * C152901 +
               ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                    C152696 * C123 +
                C476 * C124 + C477 * C125 + C478 * C126) *
                   C152530 * C152870) *
                  C365 +
              ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) *
                   C152530 * C152901 -
               (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) *
                   C152530 * C152917 -
               (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) *
                   C152530 * C152870) *
                  C366 +
              ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) *
                   C152530 * C152917 -
               ((C134 * C400 - C135 * C378 - C134 * C401 + C152711 * C414) *
                    C152696 * C126 +
                C479 * C125 + C473 * C124 + C474 * C123) *
                   C152530 * C152901 +
               (C477 * C123 + C478 * C124 + C480 * C125 +
                (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                    C152696 * C126) *
                   C152530 * C152870) *
                  C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152918 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C152903 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C152696 * C123 +
            C737 * C124 + C738 * C125 + C739 * C126) *
               C152873) *
              C152512 * C365 +
          ((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152903 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152918 -
           (C741 * C126 + C739 * C125 + C738 * C124 + C737 * C123) * C152873) *
              C152512 * C366 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152918 -
           ((C134 * C661 - C135 * C639 - C134 * C662 + C152711 * C675) *
                C152696 * C126 +
            C740 * C125 + C734 * C124 + C735 * C123) *
               C152903 +
           (C738 * C123 + C739 * C124 + C741 * C125 +
            (C134 * C663 - C135 * C640 - C134 * C664 + C152711 * C676) *
                C152696 * C126) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152530 * C1429 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152530 * C1430 +
           ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152530 * C152870) *
              C152914 +
          ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152530 *
               C1430 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
               C1429 -
           (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C152530 *
               C152870) *
              C152897 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152530 *
               C1429 -
           (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) * C152530 *
               C1430 +
           (C477 * C123 + C478 * C124 + C480 * C125 +
            (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                C152696 * C126) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
               C152696 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126) *
              C152530 * C1517 -
          (C473 * C126 + C474 * C125 + C475 * C124 +
           (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
               C152696 * C123) *
              C152530 * C1518 +
          ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
               C152696 * C123 +
           C476 * C124 + C477 * C125 + C478 * C126) *
              C152530 * C1519 -
          ((C134 * C1531 - C135 * C1523 - C134 * C1532 + C152711 * C1547) *
               C152696 * C126 +
           (C134 * C1533 - C135 * C1524 - C134 * C1534 + C152711 * C1548) *
               C152696 * C125 +
           (C134 * C1535 - C135 * C1525 - C134 * C1536 + C152711 * C1549) *
               C152696 * C124 +
           (C134 * C1537 - C135 * C1526 - C134 * C1538 + C152711 * C1550) *
               C152696 * C123) *
              C152530 * C1520 +
          ((C134 * C1539 - C135 * C1527 - C134 * C1540 + C152711 * C1551) *
               C152696 * C123 +
           (C134 * C1541 - C135 * C1528 - C134 * C1542 + C152711 * C1552) *
               C152696 * C124 +
           (C134 * C1543 - C135 * C1529 - C134 * C1544 + C152711 * C1553) *
               C152696 * C125 +
           (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
               C152696 * C126) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152918 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C152903 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C152696 * C123 +
            C737 * C124 + C738 * C125 + C739 * C126) *
               C152873) *
              C1429 +
          (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                C152696 * C123 +
            C1280 * C124 + C1281 * C125 + C1282 * C126) *
               C152903 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152918 -
           ((C134 * C1713 - C135 * C1701 - C134 * C1714 + C152711 * C1737) *
                C152696 * C126 +
            (C134 * C1715 - C135 * C1702 - C134 * C1716 + C152711 * C1738) *
                C152696 * C125 +
            (C134 * C1717 - C135 * C1703 - C134 * C1718 + C152711 * C1739) *
                C152696 * C124 +
            (C134 * C1719 - C135 * C1704 - C134 * C1720 + C152711 * C1740) *
                C152696 * C123) *
               C152873) *
              C1430 +
          (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152918 -
           ((C134 * C1721 - C135 * C1705 - C134 * C1722 + C152711 * C1741) *
                C152696 * C126 +
            (C134 * C1723 - C135 * C1706 - C134 * C1724 + C152711 * C1742) *
                C152696 * C125 +
            (C134 * C1725 - C135 * C1707 - C134 * C1726 + C152711 * C1743) *
                C152696 * C124 +
            (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                C152696 * C123) *
               C152903 +
           ((C134 * C1729 - C135 * C1709 - C134 * C1730 + C152711 * C1745) *
                C152696 * C123 +
            (C134 * C1731 - C135 * C1710 - C134 * C1732 + C152711 * C1746) *
                C152696 * C124 +
            (C134 * C1733 - C135 * C1711 - C134 * C1734 + C152711 * C1747) *
                C152696 * C125 +
            (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                C152696 * C126) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C6338 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) * C6339 +
            (C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C6340) *
               C6341 +
           (C6344 + C6345 + C6346) * C152462) *
              C152530 * C152512 * C129 -
          ((C6347 + C6348 + C6349) * C152462 +
           (C6346 + C6345 + C6344) * C6341) *
              C152530 * C152512 * C130 +
          ((C6349 + C6348 + C6347) * C6341 +
           (C6350 + C6351 + C6352) * C152462) *
              C152530 * C152512 * C131 -
          ((C6353 + C6354 + C6355) * C152462 +
           (C6352 + C6351 + C6350) * C6341) *
              C152530 * C152512 * C132 +
          ((C6355 + C6354 + C6353) * C6341 +
           (C209 * C6338 + C888 * C6339 +
            (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                C6340) *
               C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C152917 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C152901 +
           ((C6615 * C6338 + C6616 * C6339 +
             (C134 * C1539 - C135 * C1527 - C134 * C1540 + C152711 * C1551) *
                 C6340) *
                C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152530 * C152870) *
              C365 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C152901 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C152917 -
           ((C6620 + C6602 + C6603) * C152462 +
            (C6619 + C6590 + C6589) * C6341) *
               C152530 * C152870) *
              C366 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152530 * C152917 -
           ((C1908 * C6340 + C470 * C6339 + C465 * C6338) * C152462 +
            (C6597 + C6596 + C6595) * C6341) *
               C152530 * C152901 +
           ((C6603 + C6602 + C6620) * C6341 +
            (C470 * C6338 + C1908 * C6339 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C6340) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152918 -
           ((C6839 + C6840 + C6841) * C152462 +
            ((C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                 C6340 +
             (C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152903 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             (C134 * C1719 - C135 * C1704 - C134 * C1720 + C152711 * C1740) *
                 C6339 +
             (C134 * C1729 - C135 * C1709 - C134 * C1730 + C152711 * C1745) *
                 C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C152873) *
              C152512 * C365 +
          (((C6841 + C6840 + C6839) * C6341 +
            (C6848 + C6849 + C6850) * C152462) *
               C152903 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152918 -
           ((C6864 + C6855 + C6856) * C152462 +
            (C6863 + C6843 + C6842) * C6341) *
               C152873) *
              C152512 * C366 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152918 -
           ((C2130 * C6340 + C1278 * C6339 + C726 * C6338) * C152462 +
            (C6850 + C6849 + C6848) * C6341) *
               C152903 +
           ((C6856 + C6855 + C6864) * C6341 +
            (C731 * C6338 + C2912 * C6339 +
             (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                 C6340) *
                C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C1429 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C1430 +
           ((C6615 * C6338 + C6616 * C6339 +
             (C134 * C1539 - C135 * C1527 - C134 * C1540 + C152711 * C1551) *
                 C6340) *
                C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C1430 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C1429 -
           ((C6620 + C6602 + C6603) * C152462 +
            (C6619 + C6590 + C6589) * C6341) *
               C152530 * C152870) *
              C152897 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152530 * C1429 -
           ((C7059 + C7060 + C7061) * C152462 +
            (C6597 + C6596 + C6595) * C6341) *
               C152530 * C1430 +
           ((C6603 + C6602 + C6620) * C6341 +
            (C470 * C6338 + C1908 * C6339 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C6340) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C6338 +
            C6614 * C6339 + C6615 * C6340) *
               C6341 +
           (C6344 + C6345 + C6346) * C152462) *
              C152530 * C1517 -
          ((C6582 + C6583 + C6584) * C152462 +
           (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
              C152530 * C1518 +
          ((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
           (C6589 + C6590 + C6619) * C152462) *
              C152530 * C1519 -
          ((C7958 * C6340 + C6617 * C6339 + C1910 * C6338) * C152462 +
           (C7959 * C6340 + C7957 * C6339 + C6616 * C6338) * C6341) *
              C152530 * C1520 +
          ((C7957 * C6338 + C7959 * C6339 +
            (C134 * C7930 - C135 * C7924 - C134 * C7931 + C152711 * C7936) *
                C6340) *
               C6341 +
           (C6617 * C6338 + C7958 * C6339 +
            (C134 * C7932 - C135 * C7925 - C134 * C7933 + C152711 * C7937) *
                C6340) *
               C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152918 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152903 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             C8232 * C6339 + C8233 * C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C152873) *
              C1429 +
          (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
            (C7557 + C7558 + C7581) * C152462) *
               C152903 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152918 -
           ((C8235 * C6340 + C6861 * C6339 + C2914 * C6338) * C152462 +
            (C8236 * C6340 + C8233 * C6339 + C8232 * C6338) * C6341) *
               C152873) *
              C1430 +
          (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152918 -
           (((C134 * C8187 - C135 * C8179 - C134 * C8188 + C152711 * C8197) *
                 C6340 +
             C7579 * C6339 + C2132 * C6338) *
                C152462 +
            ((C134 * C8189 - C135 * C8180 - C134 * C8190 + C152711 * C8198) *
                 C6340 +
             C8234 * C6339 + C7577 * C6338) *
                C6341) *
               C152903 +
           ((C8233 * C6338 + C8236 * C6339 +
             (C134 * C8191 - C135 * C8181 - C134 * C8192 + C152711 * C8199) *
                 C6340) *
                C6341 +
            (C6861 * C6338 + C8235 * C6339 +
             (C134 * C8193 - C135 * C8182 - C134 * C8194 + C152711 * C8200) *
                 C6340) *
                C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
            C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
            C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
               C152696 * C6341 +
           (C14892 + C14893 + C14894) * C152696 * C152462) *
              C152530 * C152512 * C129 -
          ((C14895 + C14896 + C14897) * C152696 * C152462 +
           (C14894 + C14893 + C14892) * C152696 * C6341) *
              C152530 * C152512 * C130 +
          ((C14897 + C14896 + C14895) * C152696 * C6341 +
           (C14898 + C14899 + C14900) * C152696 * C152462) *
              C152530 * C152512 * C131 -
          ((C14901 + C14902 + C14903) * C152696 * C152462 +
           (C14900 + C14899 + C14898) * C152696 * C6341) *
              C152530 * C152512 * C132 +
          ((C14903 + C14902 + C14901) * C152696 * C6341 +
           (C14813 * C154 - C14814 * C141 - C14813 * C155 + C14810 * C165 +
            C14815 * C661 - C14816 * C639 - C14815 * C662 + C14811 * C675 +
            C14817 * C663 - C14818 * C640 - C14817 * C664 + C14812 * C676) *
               C152696 * C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152530 * C152917 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C152530 * C152901 +
           ((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
             C14815 * C1727 - C14816 * C1708 - C14815 * C1728 + C14811 * C1744 +
             C14817 * C1729 - C14818 * C1709 - C14817 * C1730 +
             C14812 * C1745) *
                C152696 * C6341 +
            (C15197 + C15198 + C15199) * C152696 * C152462) *
               C152530 * C152870) *
              C365 +
          (((C15196 + C15195 + C15194) * C152696 * C6341 +
            (C15200 + C15201 + C15202) * C152696 * C152462) *
               C152530 * C152901 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C152530 * C152917 -
           ((C15203 + C15204 + C15205) * C152696 * C152462 +
            (C15199 + C15198 + C15197) * C152696 * C6341) *
               C152530 * C152870) *
              C366 +
          (((C14897 + C14896 + C14895) * C152696 * C6341 +
            (C14898 + C14899 + C14900) * C152696 * C152462) *
               C152530 * C152917 -
           ((C14817 * C1713 - C14818 * C1701 - C14817 * C1714 + C14812 * C1737 +
             C14815 * C1239 - C14816 * C1230 - C14815 * C1240 + C14811 * C1248 +
             C14813 * C380 - C14814 * C368 - C14813 * C381 + C14810 * C404) *
                C152696 * C152462 +
            (C15202 + C15201 + C15200) * C152696 * C6341) *
               C152530 * C152901 +
           ((C15205 + C15204 + C15203) * C152696 * C6341 +
            (C14813 * C394 - C14814 * C375 - C14813 * C395 + C14810 * C411 +
             C14815 * C1721 - C14816 * C1705 - C14815 * C1722 + C14811 * C1741 +
             C14817 * C1735 - C14818 * C1712 - C14817 * C1736 +
             C14812 * C1748) *
                C152696 * C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152918 -
           ((C15496 + C15497 + C15498) * C152696 * C152462 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C152696 * C6341) *
               C152903 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C152696 * C6341 +
            (C15499 + C15500 + C15501) * C152696 * C152462) *
               C152873) *
              C152512 * C365 +
          (((C15498 + C15497 + C15496) * C152696 * C6341 +
            (C15502 + C15503 + C15504) * C152696 * C152462) *
               C152903 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C152918 -
           ((C15505 + C15506 + C15507) * C152696 * C152462 +
            (C15501 + C15500 + C15499) * C152696 * C6341) *
               C152873) *
              C152512 * C366 +
          (((C14897 + C14896 + C14895) * C152696 * C6341 +
            (C14898 + C14899 + C14900) * C152696 * C152462) *
               C152918 -
           ((C14817 * C2671 - C14818 * C2663 - C14817 * C2672 + C14812 * C2687 +
             C14815 * C655 - C14816 * C636 - C14815 * C656 + C14811 * C672 +
             C14813 * C641 - C14814 * C629 - C14813 * C642 + C14810 * C665) *
                C152696 * C152462 +
            (C15504 + C15503 + C15502) * C152696 * C6341) *
               C152903 +
           ((C15507 + C15506 + C15505) * C152696 * C6341 +
            (C14813 * C655 - C14814 * C636 - C14813 * C656 + C14810 * C672 +
             C14815 * C2671 - C14816 * C2663 - C14815 * C2672 + C14811 * C2687 +
             C14817 * C2685 - C14818 * C2670 - C14817 * C2686 +
             C14812 * C2694) *
                C152696 * C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152530 * C1429 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C152530 * C1430 +
           ((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
             C14815 * C1727 - C14816 * C1708 - C14815 * C1728 + C14811 * C1744 +
             C14817 * C1729 - C14818 * C1709 - C14817 * C1730 +
             C14812 * C1745) *
                C152696 * C6341 +
            (C15197 + C15198 + C15199) * C152696 * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C15196 + C15195 + C15194) * C152696 * C6341 +
            (C15200 + C15201 + C15202) * C152696 * C152462) *
               C152530 * C1430 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C152530 * C1429 -
           ((C15203 + C15204 + C15205) * C152696 * C152462 +
            (C15199 + C15198 + C15197) * C152696 * C6341) *
               C152530 * C152870) *
              C152897 +
          (((C14897 + C14896 + C14895) * C152696 * C6341 +
            (C14898 + C14899 + C14900) * C152696 * C152462) *
               C152530 * C1429 -
           ((C15720 + C15721 + C15722) * C152696 * C152462 +
            (C15202 + C15201 + C15200) * C152696 * C6341) *
               C152530 * C1430 +
           ((C15205 + C15204 + C15203) * C152696 * C6341 +
            (C14813 * C394 - C14814 * C375 - C14813 * C395 + C14810 * C411 +
             C14815 * C1721 - C14816 * C1705 - C14815 * C1722 + C14811 * C1741 +
             C14817 * C1735 - C14818 * C1712 - C14817 * C1736 +
             C14812 * C1748) *
                C152696 * C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
            C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
            C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
               C152696 * C6341 +
           (C14892 + C14893 + C14894) * C152696 * C152462) *
              C152530 * C1517 -
          ((C15194 + C15195 + C15196) * C152696 * C152462 +
           (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
            C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
            C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
               C152696 * C6341) *
              C152530 * C1518 +
          ((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
            C14815 * C1727 - C14816 * C1708 - C14815 * C1728 + C14811 * C1744 +
            C14817 * C1729 - C14818 * C1709 - C14817 * C1730 + C14812 * C1745) *
               C152696 * C6341 +
           (C15197 + C15198 + C15199) * C152696 * C152462) *
              C152530 * C1519 -
          ((C14817 * C8183 - C14818 * C8177 - C14817 * C8184 + C14812 * C8195 +
            C14815 * C2271 - C14816 * C2266 - C14815 * C2272 + C14811 * C2278 +
            C14813 * C1535 - C14814 * C1525 - C14813 * C1536 + C14810 * C1549) *
               C152696 * C152462 +
           (C14817 * C8185 - C14818 * C8178 - C14817 * C8186 + C14812 * C8196 +
            C14815 * C2269 - C14816 * C2265 - C14815 * C2270 + C14811 * C2277 +
            C14813 * C1537 - C14814 * C1526 - C14813 * C1538 + C14810 * C1550) *
               C152696 * C6341) *
              C152530 * C1520 +
          ((C14813 * C1539 - C14814 * C1527 - C14813 * C1540 + C14810 * C1551 +
            C14815 * C8189 - C14816 * C8180 - C14815 * C8190 + C14811 * C8198 +
            C14817 * C8191 - C14818 * C8181 - C14817 * C8192 + C14812 * C8199) *
               C152696 * C6341 +
           (C14813 * C1541 - C14814 * C1528 - C14813 * C1542 + C14810 * C1552 +
            C14815 * C8187 - C14816 * C8179 - C14815 * C8188 + C14811 * C8197 +
            C14817 * C8193 - C14818 * C8182 - C14817 * C8194 + C14812 * C8200) *
               C152696 * C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152918 -
           ((C15496 + C15497 + C15498) * C152696 * C152462 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C152696 * C6341) *
               C152903 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C152696 * C6341 +
            (C15499 + C15500 + C15501) * C152696 * C152462) *
               C152873) *
              C1429 +
          (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 + C14810 * C1245 +
             C14815 * C1719 - C14816 * C1704 - C14815 * C1720 + C14811 * C1740 +
             C14817 * C3213 - C14818 * C3209 - C14817 * C3214 +
             C14812 * C3221) *
                C152696 * C6341 +
            (C16264 + C16265 + C16266) * C152696 * C152462) *
               C152903 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C152918 -
           ((C14817 * C9522 - C14818 * C9512 - C14817 * C9523 + C14812 * C9530 +
             C14815 * C3215 - C14816 * C3210 - C14815 * C3216 + C14811 * C3222 +
             C14813 * C1717 - C14814 * C1703 - C14813 * C1718 +
             C14810 * C1739) *
                C152696 * C152462 +
            (C14817 * C9518 - C14818 * C9510 - C14817 * C9519 + C14812 * C9528 +
             C14815 * C3213 - C14816 * C3209 - C14815 * C3214 + C14811 * C3221 +
             C14813 * C1719 - C14814 * C1704 - C14813 * C1720 +
             C14810 * C1740) *
                C152696 * C6341) *
               C152873) *
              C1430 +
          (((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
             C14815 * C1727 - C14816 * C1708 - C14815 * C1728 + C14811 * C1744 +
             C14817 * C1729 - C14818 * C1709 - C14817 * C1730 +
             C14812 * C1745) *
                C152696 * C6341 +
            (C15197 + C15198 + C15199) * C152696 * C152462) *
               C152918 -
           ((C14817 * C9514 - C14818 * C9508 - C14817 * C9515 + C14812 * C9526 +
             C14815 * C1731 - C14816 * C1710 - C14815 * C1732 + C14811 * C1746 +
             C14813 * C1725 - C14814 * C1707 - C14813 * C1726 +
             C14810 * C1743) *
                C152696 * C152462 +
            (C14817 * C9516 - C14818 * C9509 - C14817 * C9517 + C14812 * C9527 +
             C14815 * C1729 - C14816 * C1709 - C14815 * C1730 + C14811 * C1745 +
             C14813 * C1727 - C14814 * C1708 - C14813 * C1728 +
             C14810 * C1744) *
                C152696 * C6341) *
               C152903 +
           ((C14813 * C1729 - C14814 * C1709 - C14813 * C1730 + C14810 * C1745 +
             C14815 * C9516 - C14816 * C9509 - C14815 * C9517 + C14811 * C9527 +
             C14817 * C9520 - C14818 * C9511 - C14817 * C9521 +
             C14812 * C9529) *
                C152696 * C6341 +
            (C14813 * C1731 - C14814 * C1710 - C14813 * C1732 + C14810 * C1746 +
             C14815 * C9514 - C14816 * C9508 - C14815 * C9515 + C14811 * C9526 +
             C14817 * C9524 - C14818 * C9513 - C14817 * C9525 +
             C14812 * C9531) *
                C152696 * C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C152829 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C152617) *
               C1429 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C152617 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C152829) *
               C1430 +
           (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                 C152696 * C123 +
             C476 * C124 + C477 * C125 + C478 * C126) *
                C152829 -
            (C2133 * C126 + C2134 * C125 + C2135 * C124 +
             (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                 C152696 * C123) *
                C152617) *
               C152870) *
              C152814 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152617 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152829) *
               C1429 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152829 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C152617) *
               C1430 +
           ((C2135 * C123 + C2134 * C124 + C2133 * C125 +
             (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                 C152696 * C126) *
                C152617 -
            (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152829 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C152617) *
              C152512 * C873 +
          ((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152617 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152829) *
              C152512 * C874 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152829 -
           (C1033 * C126 + C740 * C125 + C734 * C124 + C735 * C123) * C152617) *
              C152512 * C875 +
          ((C734 * C123 + C740 * C124 + C1033 * C125 +
            (C134 * C1022 - C135 * C1021 - C134 * C1023 + C152711 * C1024) *
                C152696 * C126) *
               C152617 -
           (C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) * C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152829 -
           ((C6839 + C6840 + C6841) * C152462 +
            ((C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                 C6340 +
             (C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152617) *
              C152512 * C873 +
          (((C6841 + C6840 + C6839) * C6341 +
            (C6848 + C6849 + C6850) * C152462) *
               C152617 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152829) *
              C152512 * C874 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152829 -
           ((C7256 + C7257 + C7258) * C152462 +
            (C6850 + C6849 + C6848) * C6341) *
               C152617) *
              C152512 * C875 +
          (((C7258 + C7257 + C7256) * C6341 +
            (C732 * C6338 + C1279 * C6339 +
             (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                 C6340) *
                C152462) *
               C152617 -
           ((C6353 + C6354 + C6355) * C152462 +
            (C6352 + C6351 + C6350) * C6341) *
               C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C152829 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152617) *
               C1429 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152617 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C152829) *
               C1430 +
           (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
             (C6589 + C6590 + C6619) * C152462) *
                C152829 -
            ((C8741 + C8736 + C8737) * C152462 +
             ((C134 * C8189 - C135 * C8180 - C134 * C8190 + C152711 * C8198) *
                  C6340 +
              C8234 * C6339 + C7577 * C6338) *
                 C6341) *
                C152617) *
               C152870) *
              C152814 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152617 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C152829) *
               C1429 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C152829 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152617) *
               C1430 +
           (((C8737 + C8736 + C8741) * C6341 +
             (C2131 * C6338 + C7580 * C6339 +
              (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                  C6340) *
                 C152462) *
                C152617 -
            ((C6620 + C6602 + C6603) * C152462 +
             (C6619 + C6590 + C6589) * C6341) *
                C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152829 -
           ((C15496 + C15497 + C15498) * C152696 * C152462 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C152696 * C6341) *
               C152617) *
              C152512 * C873 +
          (((C15498 + C15497 + C15496) * C152696 * C6341 +
            (C15502 + C15503 + C15504) * C152696 * C152462) *
               C152617 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C152829) *
              C152512 * C874 +
          (((C14897 + C14896 + C14895) * C152696 * C6341 +
            (C14898 + C14899 + C14900) * C152696 * C152462) *
               C152829 -
           ((C15935 + C15936 + C15937) * C152696 * C152462 +
            (C15504 + C15503 + C15502) * C152696 * C6341) *
               C152617) *
              C152512 * C875 +
          (((C15937 + C15936 + C15935) * C152696 * C6341 +
            (C14813 * C657 - C14814 * C637 - C14813 * C658 + C14810 * C673 +
             C14815 * C659 - C14816 * C638 - C14815 * C660 + C14811 * C674 +
             C14817 * C3052 - C14818 * C3051 - C14817 * C3053 +
             C14812 * C3054) *
                C152696 * C152462) *
               C152617 -
           ((C14901 + C14902 + C14903) * C152696 * C152462 +
            (C14900 + C14899 + C14898) * C152696 * C6341) *
               C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C152696 * C6341 +
             (C14892 + C14893 + C14894) * C152696 * C152462) *
                C152829 -
            ((C15496 + C15497 + C15498) * C152696 * C152462 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C152696 * C6341) *
                C152617) *
               C1429 +
           (((C14813 * C1233 - C14814 * C1227 - C14813 * C1234 +
              C14810 * C1245 + C14815 * C1719 - C14816 * C1704 -
              C14815 * C1720 + C14811 * C1740 + C14817 * C3213 -
              C14818 * C3209 - C14817 * C3214 + C14812 * C3221) *
                 C152696 * C6341 +
             (C16264 + C16265 + C16266) * C152696 * C152462) *
                C152617 -
            ((C15194 + C15195 + C15196) * C152696 * C152462 +
             (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 +
              C14812 * C1740 + C14815 * C1233 - C14816 * C1227 -
              C14815 * C1234 + C14811 * C1245 + C14813 * C386 - C14814 * C371 -
              C14813 * C387 + C14810 * C407) *
                 C152696 * C6341) *
                C152829) *
               C1430 +
           (((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
              C14815 * C1727 - C14816 * C1708 - C14815 * C1728 +
              C14811 * C1744 + C14817 * C1729 - C14818 * C1709 -
              C14817 * C1730 + C14812 * C1745) *
                 C152696 * C6341 +
             (C15197 + C15198 + C15199) * C152696 * C152462) *
                C152829 -
            ((C17351 + C17352 + C17353) * C152696 * C152462 +
             (C14817 * C9516 - C14818 * C9509 - C14817 * C9517 +
              C14812 * C9527 + C14815 * C1729 - C14816 * C1709 -
              C14815 * C1730 + C14811 * C1745 + C14813 * C1727 -
              C14814 * C1708 - C14813 * C1728 + C14810 * C1744) *
                 C152696 * C6341) *
                C152617) *
               C152870) *
              C152814 +
          ((((C15498 + C15497 + C15496) * C152696 * C6341 +
             (C15502 + C15503 + C15504) * C152696 * C152462) *
                C152617 -
            ((C14895 + C14896 + C14897) * C152696 * C152462 +
             (C14894 + C14893 + C14892) * C152696 * C6341) *
                C152829) *
               C1429 +
           (((C15196 + C15195 + C15194) * C152696 * C6341 +
             (C15200 + C15201 + C15202) * C152696 * C152462) *
                C152829 -
            ((C16267 + C16268 + C16269) * C152696 * C152462 +
             (C16266 + C16265 + C16264) * C152696 * C6341) *
                C152617) *
               C1430 +
           (((C17353 + C17352 + C17351) * C152696 * C6341 +
             (C14813 * C1723 - C14814 * C1706 - C14813 * C1724 +
              C14810 * C1742 + C14815 * C1733 - C14816 * C1711 -
              C14815 * C1734 + C14811 * C1747 + C14817 * C10024 -
              C14818 * C10023 - C14817 * C10025 + C14812 * C10026) *
                 C152696 * C152462) *
                C152617 -
            ((C15203 + C15204 + C15205) * C152696 * C152462 +
             (C15199 + C15198 + C15197) * C152696 * C6341) *
                C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152530 * C152917 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152530 * C152901 +
           ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152530 * C152870) *
              C365 +
          ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152530 *
               C152901 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
               C152917 -
           (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C152530 *
               C152870) *
              C366 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152530 *
               C152917 -
           ((C134 * C400 - C135 * C378 - C134 * C401 + C152711 * C414) *
                C152696 * C126 +
            C479 * C125 + C473 * C124 + C474 * C123) *
               C152530 * C152901 +
           (C477 * C123 + C478 * C124 + C480 * C125 +
            (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                C152696 * C126) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
               C152696 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126) *
              C152530 * C152512 * C129 -
          (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
              C152512 * C130 +
          (C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152530 *
              C152512 * C131 -
          (C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) * C152530 *
              C152512 * C132 +
          (C214 * C123 + C215 * C124 + C216 * C125 +
           (C134 * C158 - C135 * C143 - C134 * C159 + C152711 * C167) *
               C152696 * C126) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152530 * C1429 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152530 * C1430 +
           ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152530 * C152870) *
              C152914 +
          ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152530 *
               C1430 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
               C1429 -
           (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C152530 *
               C152870) *
              C152897 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152530 *
               C1429 -
           (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) * C152530 *
               C1430 +
           (C477 * C123 + C478 * C124 + C480 * C125 +
            (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                C152696 * C126) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
               C152696 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126) *
              C152530 * C1517 -
          (C473 * C126 + C474 * C125 + C475 * C124 +
           (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
               C152696 * C123) *
              C152530 * C1518 +
          ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
               C152696 * C123 +
           C476 * C124 + C477 * C125 + C478 * C126) *
              C152530 * C1519 -
          ((C134 * C1531 - C135 * C1523 - C134 * C1532 + C152711 * C1547) *
               C152696 * C126 +
           (C134 * C1533 - C135 * C1524 - C134 * C1534 + C152711 * C1548) *
               C152696 * C125 +
           (C134 * C1535 - C135 * C1525 - C134 * C1536 + C152711 * C1549) *
               C152696 * C124 +
           (C134 * C1537 - C135 * C1526 - C134 * C1538 + C152711 * C1550) *
               C152696 * C123) *
              C152530 * C1520 +
          ((C134 * C1539 - C135 * C1527 - C134 * C1540 + C152711 * C1551) *
               C152696 * C123 +
           (C134 * C1541 - C135 * C1528 - C134 * C1542 + C152711 * C1552) *
               C152696 * C124 +
           (C134 * C1543 - C135 * C1529 - C134 * C1544 + C152711 * C1553) *
               C152696 * C125 +
           (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
               C152696 * C126) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C6338 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) * C6339 +
            (C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C6340) *
               C6341 +
           (C6344 + C6345 + C6346) * C152462) *
              C152530 * C152512 * C129 -
          ((C6347 + C6348 + C6349) * C152462 +
           (C6346 + C6345 + C6344) * C6341) *
              C152530 * C152512 * C130 +
          ((C6349 + C6348 + C6347) * C6341 +
           (C6350 + C6351 + C6352) * C152462) *
              C152530 * C152512 * C131 -
          ((C6353 + C6354 + C6355) * C152462 +
           (C6352 + C6351 + C6350) * C6341) *
              C152530 * C152512 * C132 +
          ((C6355 + C6354 + C6353) * C6341 +
           (C209 * C6338 + C888 * C6339 +
            (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                C6340) *
               C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C152917 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C152901 +
           ((C6615 * C6338 + C6616 * C6339 +
             (C134 * C1539 - C135 * C1527 - C134 * C1540 + C152711 * C1551) *
                 C6340) *
                C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152530 * C152870) *
              C365 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C152901 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C152917 -
           ((C6620 + C6602 + C6603) * C152462 +
            (C6619 + C6590 + C6589) * C6341) *
               C152530 * C152870) *
              C366 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152530 * C152917 -
           ((C1908 * C6340 + C470 * C6339 + C465 * C6338) * C152462 +
            (C6597 + C6596 + C6595) * C6341) *
               C152530 * C152901 +
           ((C6603 + C6602 + C6620) * C6341 +
            (C470 * C6338 + C1908 * C6339 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C6340) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C1429 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C1430 +
           ((C6615 * C6338 + C6616 * C6339 +
             (C134 * C1539 - C135 * C1527 - C134 * C1540 + C152711 * C1551) *
                 C6340) *
                C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C1430 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C1429 -
           ((C6620 + C6602 + C6603) * C152462 +
            (C6619 + C6590 + C6589) * C6341) *
               C152530 * C152870) *
              C152897 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152530 * C1429 -
           ((C7059 + C7060 + C7061) * C152462 +
            (C6597 + C6596 + C6595) * C6341) *
               C152530 * C1430 +
           ((C6603 + C6602 + C6620) * C6341 +
            (C470 * C6338 + C1908 * C6339 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C6340) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C6338 +
            C6614 * C6339 + C6615 * C6340) *
               C6341 +
           (C6344 + C6345 + C6346) * C152462) *
              C152530 * C1517 -
          ((C6582 + C6583 + C6584) * C152462 +
           (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
              C152530 * C1518 +
          ((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
           (C6589 + C6590 + C6619) * C152462) *
              C152530 * C1519 -
          ((C7958 * C6340 + C6617 * C6339 + C1910 * C6338) * C152462 +
           (C7959 * C6340 + C7957 * C6339 + C6616 * C6338) * C6341) *
              C152530 * C1520 +
          ((C7957 * C6338 + C7959 * C6339 +
            (C134 * C7930 - C135 * C7924 - C134 * C7931 + C152711 * C7936) *
                C6340) *
               C6341 +
           (C6617 * C6338 + C7958 * C6339 +
            (C134 * C7932 - C135 * C7925 - C134 * C7933 + C152711 * C7937) *
                C6340) *
               C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
            C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
            C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
               C152696 * C6341 +
           (C14892 + C14893 + C14894) * C152696 * C152462) *
              C152530 * C152512 * C129 -
          ((C14895 + C14896 + C14897) * C152696 * C152462 +
           (C14894 + C14893 + C14892) * C152696 * C6341) *
              C152530 * C152512 * C130 +
          ((C14897 + C14896 + C14895) * C152696 * C6341 +
           (C14898 + C14899 + C14900) * C152696 * C152462) *
              C152530 * C152512 * C131 -
          ((C14901 + C14902 + C14903) * C152696 * C152462 +
           (C14900 + C14899 + C14898) * C152696 * C6341) *
              C152530 * C152512 * C132 +
          ((C14903 + C14902 + C14901) * C152696 * C6341 +
           (C14813 * C154 - C14814 * C141 - C14813 * C155 + C14810 * C165 +
            C14815 * C661 - C14816 * C639 - C14815 * C662 + C14811 * C675 +
            C14817 * C663 - C14818 * C640 - C14817 * C664 + C14812 * C676) *
               C152696 * C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152530 * C152917 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C152530 * C152901 +
           ((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
             C14815 * C1727 - C14816 * C1708 - C14815 * C1728 + C14811 * C1744 +
             C14817 * C1729 - C14818 * C1709 - C14817 * C1730 +
             C14812 * C1745) *
                C152696 * C6341 +
            (C15197 + C15198 + C15199) * C152696 * C152462) *
               C152530 * C152870) *
              C365 +
          (((C15196 + C15195 + C15194) * C152696 * C6341 +
            (C15200 + C15201 + C15202) * C152696 * C152462) *
               C152530 * C152901 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C152530 * C152917 -
           ((C15203 + C15204 + C15205) * C152696 * C152462 +
            (C15199 + C15198 + C15197) * C152696 * C6341) *
               C152530 * C152870) *
              C366 +
          (((C14897 + C14896 + C14895) * C152696 * C6341 +
            (C14898 + C14899 + C14900) * C152696 * C152462) *
               C152530 * C152917 -
           ((C14817 * C1713 - C14818 * C1701 - C14817 * C1714 + C14812 * C1737 +
             C14815 * C1239 - C14816 * C1230 - C14815 * C1240 + C14811 * C1248 +
             C14813 * C380 - C14814 * C368 - C14813 * C381 + C14810 * C404) *
                C152696 * C152462 +
            (C15202 + C15201 + C15200) * C152696 * C6341) *
               C152530 * C152901 +
           ((C15205 + C15204 + C15203) * C152696 * C6341 +
            (C14813 * C394 - C14814 * C375 - C14813 * C395 + C14810 * C411 +
             C14815 * C1721 - C14816 * C1705 - C14815 * C1722 + C14811 * C1741 +
             C14817 * C1735 - C14818 * C1712 - C14817 * C1736 +
             C14812 * C1748) *
                C152696 * C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C152696 * C6341 +
            (C14892 + C14893 + C14894) * C152696 * C152462) *
               C152530 * C1429 -
           ((C15194 + C15195 + C15196) * C152696 * C152462 +
            (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
             C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
             C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
                C152696 * C6341) *
               C152530 * C1430 +
           ((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
             C14815 * C1727 - C14816 * C1708 - C14815 * C1728 + C14811 * C1744 +
             C14817 * C1729 - C14818 * C1709 - C14817 * C1730 +
             C14812 * C1745) *
                C152696 * C6341 +
            (C15197 + C15198 + C15199) * C152696 * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C15196 + C15195 + C15194) * C152696 * C6341 +
            (C15200 + C15201 + C15202) * C152696 * C152462) *
               C152530 * C1430 -
           ((C14895 + C14896 + C14897) * C152696 * C152462 +
            (C14894 + C14893 + C14892) * C152696 * C6341) *
               C152530 * C1429 -
           ((C15203 + C15204 + C15205) * C152696 * C152462 +
            (C15199 + C15198 + C15197) * C152696 * C6341) *
               C152530 * C152870) *
              C152897 +
          (((C14897 + C14896 + C14895) * C152696 * C6341 +
            (C14898 + C14899 + C14900) * C152696 * C152462) *
               C152530 * C1429 -
           ((C15720 + C15721 + C15722) * C152696 * C152462 +
            (C15202 + C15201 + C15200) * C152696 * C6341) *
               C152530 * C1430 +
           ((C15205 + C15204 + C15203) * C152696 * C6341 +
            (C14813 * C394 - C14814 * C375 - C14813 * C395 + C14810 * C411 +
             C14815 * C1721 - C14816 * C1705 - C14815 * C1722 + C14811 * C1741 +
             C14817 * C1735 - C14818 * C1712 - C14817 * C1736 +
             C14812 * C1748) *
                C152696 * C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
            C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
            C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
               C152696 * C6341 +
           (C14892 + C14893 + C14894) * C152696 * C152462) *
              C152530 * C1517 -
          ((C15194 + C15195 + C15196) * C152696 * C152462 +
           (C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740 +
            C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
            C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407) *
               C152696 * C6341) *
              C152530 * C1518 +
          ((C14813 * C388 - C14814 * C372 - C14813 * C389 + C14810 * C408 +
            C14815 * C1727 - C14816 * C1708 - C14815 * C1728 + C14811 * C1744 +
            C14817 * C1729 - C14818 * C1709 - C14817 * C1730 + C14812 * C1745) *
               C152696 * C6341 +
           (C15197 + C15198 + C15199) * C152696 * C152462) *
              C152530 * C1519 -
          ((C14817 * C8183 - C14818 * C8177 - C14817 * C8184 + C14812 * C8195 +
            C14815 * C2271 - C14816 * C2266 - C14815 * C2272 + C14811 * C2278 +
            C14813 * C1535 - C14814 * C1525 - C14813 * C1536 + C14810 * C1549) *
               C152696 * C152462 +
           (C14817 * C8185 - C14818 * C8178 - C14817 * C8186 + C14812 * C8196 +
            C14815 * C2269 - C14816 * C2265 - C14815 * C2270 + C14811 * C2277 +
            C14813 * C1537 - C14814 * C1526 - C14813 * C1538 + C14810 * C1550) *
               C152696 * C6341) *
              C152530 * C1520 +
          ((C14813 * C1539 - C14814 * C1527 - C14813 * C1540 + C14810 * C1551 +
            C14815 * C8189 - C14816 * C8180 - C14815 * C8190 + C14811 * C8198 +
            C14817 * C8191 - C14818 * C8181 - C14817 * C8192 + C14812 * C8199) *
               C152696 * C6341 +
           (C14813 * C1541 - C14814 * C1528 - C14813 * C1542 + C14810 * C1552 +
            C14815 * C8187 - C14816 * C8179 - C14815 * C8188 + C14811 * C8197 +
            C14817 * C8193 - C14818 * C8182 - C14817 * C8194 + C14812 * C8200) *
               C152696 * C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152530 * C152571 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C152530 * C152578 +
           ((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
             C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
             C152775 * C1744) *
                C152696 * C152893 +
            (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
               C152530 * C3839) *
              C152489 +
          (((C32001 + C32000) * C152696 * C152893 +
            (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
               C152530 * C152578 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C152530 * C152571 -
           ((C32008 + C32009) * C152696 * C23411 +
            (C32005 + C32004) * C152696 * C152894 +
            (C32003 + C32002) * C152696 * C152893) *
               C152530 * C3839) *
              C152498 +
          ((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
            C31707 * C23411) *
               C152530 * C152571 -
           ((C32528 + C32529) * C152696 * C23411 +
            (C32007 + C32006) * C152696 * C152894 + C32012 * C152893) *
               C152530 * C152578 +
           (C32013 * C152893 + (C32009 + C32008) * C152696 * C152894 +
            (C31627 * C398 - C31628 * C377 - C31627 * C399 + C152846 * C413 +
             C31629 * C2108 - C31630 * C2107 - C31629 * C2109 +
             C152775 * C2110) *
                C152696 * C23411) *
               C152530 * C3839) *
              C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152696 * C152893 +
             (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
                C152829 -
            (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152696 * C152893) *
                C152617) *
               C152571 +
           (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
              C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
              C31629 * C1720 + C152775 * C1740) *
                 C152696 * C152893 +
             (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
                C152617 -
            (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
             (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
              C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
              C152846 * C407) *
                 C152696 * C152893) *
                C152829) *
               C152578 +
           (((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
              C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
              C152775 * C1744) *
                 C152696 * C152893 +
             (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
                C152829 -
            ((C34168 + C34169) * C152696 * C23411 +
             (C34170 + C34171) * C152696 * C152894 +
             (C31629 * C1729 - C31630 * C1709 - C31629 * C1730 +
              C152775 * C1745 + C31627 * C1727 - C31628 * C1708 -
              C31627 * C1728 + C152846 * C1744) *
                 C152696 * C152893) *
                C152617) *
               C3839) *
              C3495 +
          ((((C32307 + C32306) * C152696 * C152893 +
             (C32305 + C32304) * C152696 * C152894 + C32733 * C23411) *
                C152617 -
            (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
             (C31693 + C31692) * C152696 * C152893) *
                C152829) *
               C152571 +
           (((C32001 + C32000) * C152696 * C152893 +
             (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
                C152829 -
            ((C33070 + C33071) * C152696 * C23411 +
             (C33069 + C33068) * C152696 * C152894 +
             (C33067 + C33066) * C152696 * C152893) *
                C152617) *
               C152578 +
           (((C34171 + C34170) * C152696 * C152893 +
             (C34169 + C34168) * C152696 * C152894 +
             (C31627 * C1721 - C31628 * C1705 - C31627 * C1722 +
              C152846 * C1741 + C31629 * C1735 - C31630 * C1712 -
              C31629 * C1736 + C152775 * C1748) *
                 C152696 * C23411) *
                C152617 -
            ((C32008 + C32009) * C152696 * C23411 +
             (C32005 + C32004) * C152696 * C152894 +
             (C32003 + C32002) * C152696 * C152893) *
                C152829) *
               C3839) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152530 * C152924 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C152530 * C152920 +
           ((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
             C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
             C152775 * C1744) *
                C152696 * C152893 +
            (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
               C152530 * C152906 -
           ((C33850 + C33851) * C152696 * C23411 +
            (C33852 + C33853) * C152696 * C152894 +
            (C31629 * C2269 - C31630 * C2265 - C31629 * C2270 +
             C152775 * C2277 + C31627 * C1537 - C31628 * C1526 -
             C31627 * C1538 + C152846 * C1550) *
                C152696 * C152893) *
               C152530 * C152880) *
              C3495 +
          (((C32001 + C32000) * C152696 * C152893 +
            (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
               C152530 * C152920 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C152530 * C152924 -
           ((C32008 + C32009) * C152696 * C23411 +
            (C32005 + C32004) * C152696 * C152894 +
            (C32003 + C32002) * C152696 * C152893) *
               C152530 * C152906 +
           ((C33853 + C33852) * C152696 * C152893 +
            (C33851 + C33850) * C152696 * C152894 +
            (C31627 * C1531 - C31628 * C1523 - C31627 * C1532 +
             C152846 * C1547 + C31629 * C2275 - C31630 * C2268 -
             C31629 * C2276 + C152775 * C2280) *
                C152696 * C23411) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152530 * C3355 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C152530 * C152575) *
              C152923 +
          (((C32001 + C32000) * C152696 * C152893 +
            (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
               C152530 * C152575 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C152530 * C3355) *
              C152916 +
          ((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
            C31707 * C23411) *
               C152530 * C3355 -
           ((C32528 + C32529) * C152696 * C23411 +
            (C32007 + C32006) * C152696 * C152894 + C32012 * C152893) *
               C152530 * C152575) *
              C152899 +
          ((C32523 * C152893 + (C32529 + C32528) * C152696 * C152894 +
            (C31627 * C400 - C31628 * C378 - C31627 * C401 + C152846 * C414 +
             C31629 * C1243 - C31630 * C1232 - C31629 * C1244 +
             C152775 * C1250) *
                C152696 * C23411) *
               C152530 * C152575 -
           ((C31700 + C31701) * C152696 * C23411 +
            (C31699 + C31698) * C152696 * C152894 + C31706 * C152893) *
               C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152696 * C152893 +
             (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
                C152918 -
            (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152696 * C152893) *
                C152903 +
            ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C152696 * C152893 +
             (C32308 + C32309) * C152696 * C152894 + C32319 * C23411) *
                C152873) *
               C3355 +
           (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
              C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
              C31629 * C1720 + C152775 * C1740) *
                 C152696 * C152893 +
             (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
                C152903 -
            (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
             (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
              C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
              C152846 * C407) *
                 C152696 * C152893) *
                C152918 -
            ((C35238 + C35239) * C152696 * C23411 +
             (C35240 + C35241) * C152696 * C152894 +
             (C31629 * C3213 - C31630 * C3209 - C31629 * C3214 +
              C152775 * C3221 + C31627 * C1719 - C31628 * C1704 -
              C31627 * C1720 + C152846 * C1740) *
                 C152696 * C152893) *
                C152873) *
               C152575) *
              C3495 +
          ((((C32307 + C32306) * C152696 * C152893 +
             (C32305 + C32304) * C152696 * C152894 + C32733 * C23411) *
                C152903 -
            (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
             (C31693 + C31692) * C152696 * C152893) *
                C152918 -
            ((C32314 + C32315) * C152696 * C23411 +
             (C32311 + C32310) * C152696 * C152894 +
             (C32309 + C32308) * C152696 * C152893) *
                C152873) *
               C3355 +
           (((C32001 + C32000) * C152696 * C152893 +
             (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
                C152918 -
            ((C33070 + C33071) * C152696 * C23411 +
             (C33069 + C33068) * C152696 * C152894 +
             (C33067 + C33066) * C152696 * C152893) *
                C152903 +
            ((C35241 + C35240) * C152696 * C152893 +
             (C35239 + C35238) * C152696 * C152894 +
             (C31627 * C1713 - C31628 * C1701 - C31627 * C1714 +
              C152846 * C1737 + C31629 * C3219 - C31630 * C3212 -
              C31629 * C3220 + C152775 * C3224) *
                 C152696 * C23411) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152696 * C152893 +
             (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
                C152829 -
            (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152696 * C152893) *
                C152617) *
               C3355 +
           (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
              C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
              C31629 * C1720 + C152775 * C1740) *
                 C152696 * C152893 +
             (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
                C152617 -
            (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
             (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
              C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
              C152846 * C407) *
                 C152696 * C152893) *
                C152829) *
               C152575) *
              C152489 +
          ((((C32307 + C32306) * C152696 * C152893 +
             (C32305 + C32304) * C152696 * C152894 + C32733 * C23411) *
                C152617 -
            (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
             (C31693 + C31692) * C152696 * C152893) *
                C152829) *
               C3355 +
           (((C32001 + C32000) * C152696 * C152893 +
             (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
                C152829 -
            ((C33070 + C33071) * C152696 * C23411 +
             (C33069 + C33068) * C152696 * C152894 +
             (C33067 + C33066) * C152696 * C152893) *
                C152617) *
               C152575) *
              C152498 +
          (((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
             C31707 * C23411) *
                C152829 -
            ((C32738 + C32739) * C152696 * C23411 +
             (C32313 + C32312) * C152696 * C152894 + C32318 * C152893) *
                C152617) *
               C3355 +
           ((C33073 * C152893 + (C33071 + C33070) * C152696 * C152894 +
             (C31627 * C1241 - C31628 * C1231 - C31627 * C1242 +
              C152846 * C1249 + C31629 * C2890 - C31630 * C2889 -
              C31629 * C2891 + C152775 * C2892) *
                 C152696 * C23411) *
                C152617 -
            ((C32528 + C32529) * C152696 * C23411 +
             (C32007 + C32006) * C152696 * C152894 + C32012 * C152893) *
                C152829) *
               C152575) *
              C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152530 * C3355 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C152530 * C152575) *
              C152923 +
          (((C32001 + C32000) * C152696 * C152893 +
            (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
               C152530 * C152575 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C152530 * C3355) *
              C152916 +
          ((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
            C31707 * C23411) *
               C152530 * C3355 -
           ((C32528 + C32529) * C152696 * C23411 +
            (C32007 + C32006) * C152696 * C152894 + C32012 * C152893) *
               C152530 * C152575) *
              C152899 +
          ((C32523 * C152893 + (C32529 + C32528) * C152696 * C152894 +
            (C31627 * C400 - C31628 * C378 - C31627 * C401 + C152846 * C414 +
             C31629 * C1243 - C31630 * C1232 - C31629 * C1244 +
             C152775 * C1250) *
                C152696 * C23411) *
               C152530 * C152575 -
           ((C31700 + C31701) * C152696 * C23411 +
            (C31699 + C31698) * C152696 * C152894 + C31706 * C152893) *
               C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152530 * C152924 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C152530 * C152920 +
           ((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
             C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
             C152775 * C1744) *
                C152696 * C152893 +
            (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
               C152530 * C152906 -
           ((C33850 + C33851) * C152696 * C23411 +
            (C33852 + C33853) * C152696 * C152894 +
            (C31629 * C2269 - C31630 * C2265 - C31629 * C2270 +
             C152775 * C2277 + C31627 * C1537 - C31628 * C1526 -
             C31627 * C1538 + C152846 * C1550) *
                C152696 * C152893) *
               C152530 * C152880) *
              C3495 +
          (((C32001 + C32000) * C152696 * C152893 +
            (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
               C152530 * C152920 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C152530 * C152924 -
           ((C32008 + C32009) * C152696 * C23411 +
            (C32005 + C32004) * C152696 * C152894 +
            (C32003 + C32002) * C152696 * C152893) *
               C152530 * C152906 +
           ((C33853 + C33852) * C152696 * C152893 +
            (C33851 + C33850) * C152696 * C152894 +
            (C31627 * C1531 - C31628 * C1523 - C31627 * C1532 +
             C152846 * C1547 + C31629 * C2275 - C31630 * C2268 -
             C31629 * C2276 + C152775 * C2280) *
                C152696 * C23411) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152696 * C152893 +
             (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
                C4361 -
            (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152696 * C152893) *
                C152617) *
               C152571 +
           (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
              C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
              C31629 * C1720 + C152775 * C1740) *
                 C152696 * C152893 +
             (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
                C152617 -
            (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
             (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
              C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
              C152846 * C407) *
                 C152696 * C152893) *
                C4361) *
               C152578 +
           (((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
              C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
              C152775 * C1744) *
                 C152696 * C152893 +
             (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
                C4361 -
            ((C34168 + C34169) * C152696 * C23411 +
             (C34170 + C34171) * C152696 * C152894 +
             (C31629 * C1729 - C31630 * C1709 - C31629 * C1730 +
              C152775 * C1745 + C31627 * C1727 - C31628 * C1708 -
              C31627 * C1728 + C152846 * C1744) *
                 C152696 * C152893) *
                C152617) *
               C3839) *
              C152814 +
          ((((C32307 + C32306) * C152696 * C152893 +
             (C32305 + C32304) * C152696 * C152894 + C32733 * C23411) *
                C152617 -
            (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
             (C31693 + C31692) * C152696 * C152893) *
                C4361) *
               C152571 +
           (((C32001 + C32000) * C152696 * C152893 +
             (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
                C4361 -
            ((C33070 + C33071) * C152696 * C23411 +
             (C33069 + C33068) * C152696 * C152894 +
             (C33067 + C33066) * C152696 * C152893) *
                C152617) *
               C152578 +
           (((C34171 + C34170) * C152696 * C152893 +
             (C34169 + C34168) * C152696 * C152894 +
             (C31627 * C1721 - C31628 * C1705 - C31627 * C1722 +
              C152846 * C1741 + C31629 * C1735 - C31630 * C1712 -
              C31629 * C1736 + C152775 * C1748) *
                 C152696 * C23411) *
                C152617 -
            ((C32008 + C32009) * C152696 * C23411 +
             (C32005 + C32004) * C152696 * C152894 +
             (C32003 + C32002) * C152696 * C152893) *
                C4361) *
               C3839) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152613 -
           (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152696 * C152893) *
               C152620 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152696 * C152893 +
            (C32308 + C32309) * C152696 * C152894 + C32319 * C23411) *
               C5033) *
              C152571 +
          (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
             C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
             C31629 * C1720 + C152775 * C1740) *
                C152696 * C152893 +
            (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
               C152620 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C152613 -
           ((C35238 + C35239) * C152696 * C23411 +
            (C35240 + C35241) * C152696 * C152894 +
            (C31629 * C3213 - C31630 * C3209 - C31629 * C3214 +
             C152775 * C3221 + C31627 * C1719 - C31628 * C1704 -
             C31627 * C1720 + C152846 * C1740) *
                C152696 * C152893) *
               C5033) *
              C152578 +
          (((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
             C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
             C152775 * C1744) *
                C152696 * C152893 +
            (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
               C152613 -
           ((C34168 + C34169) * C152696 * C23411 +
            (C34170 + C34171) * C152696 * C152894 +
            (C31629 * C1729 - C31630 * C1709 - C31629 * C1730 +
             C152775 * C1745 + C31627 * C1727 - C31628 * C1708 -
             C31627 * C1728 + C152846 * C1744) *
                C152696 * C152893) *
               C152620 +
           ((C31627 * C1729 - C31628 * C1709 - C31627 * C1730 +
             C152846 * C1745 + C31629 * C9516 - C31630 * C9509 -
             C31629 * C9517 + C152775 * C9527) *
                C152696 * C152893 +
            (C31627 * C1731 - C31628 * C1710 - C31627 * C1732 +
             C152846 * C1746 + C31629 * C9514 - C31630 * C9508 -
             C31629 * C9515 + C152775 * C9526) *
                C152696 * C152894 +
            (C31627 * C1733 - C31628 * C1711 - C31627 * C1734 +
             C152846 * C1747 + C31629 * C10024 - C31630 * C10023 -
             C31629 * C10025 + C152775 * C10026) *
                C152696 * C23411) *
               C5033) *
              C3839) *
         C152484) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C4361 -
           (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152696 * C152893) *
               C152617) *
              C152924 +
          (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
             C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
             C31629 * C1720 + C152775 * C1740) *
                C152696 * C152893 +
            (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
               C152617 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C4361) *
              C152920 +
          (((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
             C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
             C152775 * C1744) *
                C152696 * C152893 +
            (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
               C4361 -
           ((C34168 + C34169) * C152696 * C23411 +
            (C34170 + C34171) * C152696 * C152894 +
            (C31629 * C1729 - C31630 * C1709 - C31629 * C1730 +
             C152775 * C1745 + C31627 * C1727 - C31628 * C1708 -
             C31627 * C1728 + C152846 * C1744) *
                C152696 * C152893) *
               C152617) *
              C152906 +
          (((C31627 * C2269 - C31628 * C2265 - C31627 * C2270 +
             C152846 * C2277 + C31629 * C8185 - C31630 * C8178 -
             C31629 * C8186 + C152775 * C8196) *
                C152696 * C152893 +
            (C31627 * C2271 - C31628 * C2266 - C31627 * C2272 +
             C152846 * C2278 + C31629 * C8183 - C31630 * C8177 -
             C31629 * C8184 + C152775 * C8195) *
                C152696 * C152894 +
            (C31627 * C2273 - C31628 * C2267 - C31627 * C2274 +
             C152846 * C2279 + C31629 * C9823 - C31630 * C9822 -
             C31629 * C9824 + C152775 * C9825) *
                C152696 * C23411) *
               C152617 -
           ((C33850 + C33851) * C152696 * C23411 +
            (C33852 + C33853) * C152696 * C152894 +
            (C31629 * C2269 - C31630 * C2265 - C31629 * C2270 +
             C152775 * C2277 + C31627 * C1537 - C31628 * C1526 -
             C31627 * C1538 + C152846 * C1550) *
                C152696 * C152893) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152696 * C152893 +
             (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
                C4361 -
            (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152696 * C152893) *
                C152617) *
               C3355 +
           (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
              C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
              C31629 * C1720 + C152775 * C1740) *
                 C152696 * C152893 +
             (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
                C152617 -
            (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
             (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
              C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
              C152846 * C407) *
                 C152696 * C152893) *
                C4361) *
               C152575) *
              C152914 +
          ((((C32307 + C32306) * C152696 * C152893 +
             (C32305 + C32304) * C152696 * C152894 + C32733 * C23411) *
                C152617 -
            (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
             (C31693 + C31692) * C152696 * C152893) *
                C4361) *
               C3355 +
           (((C32001 + C32000) * C152696 * C152893 +
             (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
                C4361 -
            ((C33070 + C33071) * C152696 * C23411 +
             (C33069 + C33068) * C152696 * C152894 +
             (C33067 + C33066) * C152696 * C152893) *
                C152617) *
               C152575) *
              C152897 +
          (((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
             C31707 * C23411) *
                C4361 -
            ((C32738 + C32739) * C152696 * C23411 +
             (C32313 + C32312) * C152696 * C152894 + C32318 * C152893) *
                C152617) *
               C3355 +
           ((C33073 * C152893 + (C33071 + C33070) * C152696 * C152894 +
             (C31627 * C1241 - C31628 * C1231 - C31627 * C1242 +
              C152846 * C1249 + C31629 * C2890 - C31630 * C2889 -
              C31629 * C2891 + C152775 * C2892) *
                 C152696 * C23411) *
                C152617 -
            ((C32528 + C32529) * C152696 * C23411 +
             (C32007 + C32006) * C152696 * C152894 + C32012 * C152893) *
                C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152925 -
           (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152696 * C152893) *
               C152922 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152696 * C152893 +
            (C32308 + C32309) * C152696 * C152894 + C32319 * C23411) *
               C152909 -
           ((C35460 + C35461) * C152696 * C23411 +
            (C35462 + C35463) * C152696 * C152894 +
            (C31629 * C2679 - C31630 * C2667 - C31629 * C2680 +
             C152775 * C2691 + C31627 * C2677 - C31628 * C2666 -
             C31627 * C2678 + C152846 * C2690) *
                C152696 * C152893) *
               C152886) *
              C3355 +
          (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
             C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
             C31629 * C1720 + C152775 * C1740) *
                C152696 * C152893 +
            (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
               C152922 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C152925 -
           ((C35238 + C35239) * C152696 * C23411 +
            (C35240 + C35241) * C152696 * C152894 +
            (C31629 * C3213 - C31630 * C3209 - C31629 * C3214 +
             C152775 * C3221 + C31627 * C1719 - C31628 * C1704 -
             C31627 * C1720 + C152846 * C1740) *
                C152696 * C152893) *
               C152909 +
           ((C31627 * C3213 - C31628 * C3209 - C31627 * C3214 +
             C152846 * C3221 + C31629 * C9518 - C31630 * C9510 -
             C31629 * C9519 + C152775 * C9528) *
                C152696 * C152893 +
            (C31627 * C3215 - C31628 * C3210 - C31627 * C3216 +
             C152846 * C3222 + C31629 * C9522 - C31630 * C9512 -
             C31629 * C9523 + C152775 * C9530) *
                C152696 * C152894 +
            (C31627 * C3217 - C31628 * C3211 - C31627 * C3218 +
             C152846 * C3223 + C31629 * C18412 - C31630 * C18411 -
             C31629 * C18413 + C152775 * C18414) *
                C152696 * C23411) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152696 * C152893 +
             (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
                C152613 -
            (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152696 * C152893) *
                C152620 +
            ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C152696 * C152893 +
             (C32308 + C32309) * C152696 * C152894 + C32319 * C23411) *
                C5033) *
               C3355 +
           (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
              C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
              C31629 * C1720 + C152775 * C1740) *
                 C152696 * C152893 +
             (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
                C152620 -
            (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
             (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
              C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
              C152846 * C407) *
                 C152696 * C152893) *
                C152613 -
            ((C35238 + C35239) * C152696 * C23411 +
             (C35240 + C35241) * C152696 * C152894 +
             (C31629 * C3213 - C31630 * C3209 - C31629 * C3214 +
              C152775 * C3221 + C31627 * C1719 - C31628 * C1704 -
              C31627 * C1720 + C152846 * C1740) *
                 C152696 * C152893) *
                C5033) *
               C152575) *
              C152814 +
          ((((C32307 + C32306) * C152696 * C152893 +
             (C32305 + C32304) * C152696 * C152894 + C32733 * C23411) *
                C152620 -
            (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
             (C31693 + C31692) * C152696 * C152893) *
                C152613 -
            ((C32314 + C32315) * C152696 * C23411 +
             (C32311 + C32310) * C152696 * C152894 +
             (C32309 + C32308) * C152696 * C152893) *
                C5033) *
               C3355 +
           (((C32001 + C32000) * C152696 * C152893 +
             (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
                C152613 -
            ((C33070 + C33071) * C152696 * C23411 +
             (C33069 + C33068) * C152696 * C152894 +
             (C33067 + C33066) * C152696 * C152893) *
                C152620 +
            ((C35241 + C35240) * C152696 * C152893 +
             (C35239 + C35238) * C152696 * C152894 +
             (C31627 * C1713 - C31628 * C1701 - C31627 * C1714 +
              C152846 * C1737 + C31629 * C3219 - C31630 * C3212 -
              C31629 * C3220 + C152775 * C3224) *
                 C152696 * C23411) *
                C5033) *
               C152575) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152696 * C152893 +
             (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
                C4361 -
            (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152696 * C152893) *
                C152617) *
               C3355 +
           (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
              C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
              C31629 * C1720 + C152775 * C1740) *
                 C152696 * C152893 +
             (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
                C152617 -
            (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
             (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
              C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
              C152846 * C407) *
                 C152696 * C152893) *
                C4361) *
               C152575) *
              C152914 +
          ((((C32307 + C32306) * C152696 * C152893 +
             (C32305 + C32304) * C152696 * C152894 + C32733 * C23411) *
                C152617 -
            (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
             (C31693 + C31692) * C152696 * C152893) *
                C4361) *
               C3355 +
           (((C32001 + C32000) * C152696 * C152893 +
             (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
                C4361 -
            ((C33070 + C33071) * C152696 * C23411 +
             (C33069 + C33068) * C152696 * C152894 +
             (C33067 + C33066) * C152696 * C152893) *
                C152617) *
               C152575) *
              C152897 +
          (((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
             C31707 * C23411) *
                C4361 -
            ((C32738 + C32739) * C152696 * C23411 +
             (C32313 + C32312) * C152696 * C152894 + C32318 * C152893) *
                C152617) *
               C3355 +
           ((C33073 * C152893 + (C33071 + C33070) * C152696 * C152894 +
             (C31627 * C1241 - C31628 * C1231 - C31627 * C1242 +
              C152846 * C1249 + C31629 * C2890 - C31630 * C2889 -
              C31629 * C2891 + C152775 * C2892) *
                 C152696 * C23411) *
                C152617 -
            ((C32528 + C32529) * C152696 * C23411 +
             (C32007 + C32006) * C152696 * C152894 + C32012 * C152893) *
                C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C4361 -
           (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152696 * C152893) *
               C152617) *
              C152924 +
          (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
             C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
             C31629 * C1720 + C152775 * C1740) *
                C152696 * C152893 +
            (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
               C152617 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C4361) *
              C152920 +
          (((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
             C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
             C152775 * C1744) *
                C152696 * C152893 +
            (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
               C4361 -
           ((C34168 + C34169) * C152696 * C23411 +
            (C34170 + C34171) * C152696 * C152894 +
            (C31629 * C1729 - C31630 * C1709 - C31629 * C1730 +
             C152775 * C1745 + C31627 * C1727 - C31628 * C1708 -
             C31627 * C1728 + C152846 * C1744) *
                C152696 * C152893) *
               C152617) *
              C152906 +
          (((C31627 * C2269 - C31628 * C2265 - C31627 * C2270 +
             C152846 * C2277 + C31629 * C8185 - C31630 * C8178 -
             C31629 * C8186 + C152775 * C8196) *
                C152696 * C152893 +
            (C31627 * C2271 - C31628 * C2266 - C31627 * C2272 +
             C152846 * C2278 + C31629 * C8183 - C31630 * C8177 -
             C31629 * C8184 + C152775 * C8195) *
                C152696 * C152894 +
            (C31627 * C2273 - C31628 * C2267 - C31627 * C2274 +
             C152846 * C2279 + C31629 * C9823 - C31630 * C9822 -
             C31629 * C9824 + C152775 * C9825) *
                C152696 * C23411) *
               C152617 -
           ((C33850 + C33851) * C152696 * C23411 +
            (C33852 + C33853) * C152696 * C152894 +
            (C31629 * C2269 - C31630 * C2265 - C31629 * C2270 +
             C152775 * C2277 + C31627 * C1537 - C31628 * C1526 -
             C31627 * C1538 + C152846 * C1550) *
                C152696 * C152893) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152530 * C1879 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C152530 * C1880 +
           ((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
             C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
             C152775 * C1744) *
                C152696 * C152893 +
            (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
               C152530 * C1881 -
           ((C33850 + C33851) * C152696 * C23411 +
            (C33852 + C33853) * C152696 * C152894 +
            (C31629 * C2269 - C31630 * C2265 - C31629 * C2270 +
             C152775 * C2277 + C31627 * C1537 - C31628 * C1526 -
             C31627 * C1538 + C152846 * C1550) *
                C152696 * C152893) *
               C152530 * C152880) *
              C152814 +
          (((C32001 + C32000) * C152696 * C152893 +
            (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
               C152530 * C1880 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C152530 * C1879 -
           ((C32008 + C32009) * C152696 * C23411 +
            (C32005 + C32004) * C152696 * C152894 +
            (C32003 + C32002) * C152696 * C152893) *
               C152530 * C1881 +
           ((C33853 + C33852) * C152696 * C152893 +
            (C33851 + C33850) * C152696 * C152894 +
            (C31627 * C1531 - C31628 * C1523 - C31627 * C1532 +
             C152846 * C1547 + C31629 * C2275 - C31630 * C2268 -
             C31629 * C2276 + C152775 * C2280) *
                C152696 * C23411) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152530 * C152828 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C152530 * C152575) *
              C873 +
          (((C32001 + C32000) * C152696 * C152893 +
            (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
               C152530 * C152575 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C152530 * C152828) *
              C874 +
          ((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
            C31707 * C23411) *
               C152530 * C152828 -
           ((C32528 + C32529) * C152696 * C23411 +
            (C32007 + C32006) * C152696 * C152894 + C32012 * C152893) *
               C152530 * C152575) *
              C875 +
          ((C32523 * C152893 + (C32529 + C32528) * C152696 * C152894 +
            (C31627 * C400 - C31628 * C378 - C31627 * C401 + C152846 * C414 +
             C31629 * C1243 - C31630 * C1232 - C31629 * C1244 +
             C152775 * C1250) *
                C152696 * C23411) *
               C152530 * C152575 -
           ((C31700 + C31701) * C152696 * C23411 +
            (C31699 + C31698) * C152696 * C152894 + C31706 * C152893) *
               C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152696 * C152893 +
             (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
                C2427 -
            (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152696 * C152893) *
                C2428 +
            ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C152696 * C152893 +
             (C32308 + C32309) * C152696 * C152894 + C32319 * C23411) *
                C152873) *
               C152828 +
           (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
              C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
              C31629 * C1720 + C152775 * C1740) *
                 C152696 * C152893 +
             (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
                C2428 -
            (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
             (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
              C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
              C152846 * C407) *
                 C152696 * C152893) *
                C2427 -
            ((C35238 + C35239) * C152696 * C23411 +
             (C35240 + C35241) * C152696 * C152894 +
             (C31629 * C3213 - C31630 * C3209 - C31629 * C3214 +
              C152775 * C3221 + C31627 * C1719 - C31628 * C1704 -
              C31627 * C1720 + C152846 * C1740) *
                 C152696 * C152893) *
                C152873) *
               C152575) *
              C152814 +
          ((((C32307 + C32306) * C152696 * C152893 +
             (C32305 + C32304) * C152696 * C152894 + C32733 * C23411) *
                C2428 -
            (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
             (C31693 + C31692) * C152696 * C152893) *
                C2427 -
            ((C32314 + C32315) * C152696 * C23411 +
             (C32311 + C32310) * C152696 * C152894 +
             (C32309 + C32308) * C152696 * C152893) *
                C152873) *
               C152828 +
           (((C32001 + C32000) * C152696 * C152893 +
             (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
                C2427 -
            ((C33070 + C33071) * C152696 * C23411 +
             (C33069 + C33068) * C152696 * C152894 +
             (C33067 + C33066) * C152696 * C152893) *
                C2428 +
            ((C35241 + C35240) * C152696 * C152893 +
             (C35239 + C35238) * C152696 * C152894 +
             (C31627 * C1713 - C31628 * C1701 - C31627 * C1714 +
              C152846 * C1737 + C31629 * C3219 - C31630 * C3212 -
              C31629 * C3220 + C152775 * C3224) *
                 C152696 * C23411) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152829 -
           (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152696 * C152893) *
               C152617) *
              C1879 +
          (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
             C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
             C31629 * C1720 + C152775 * C1740) *
                C152696 * C152893 +
            (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
               C152617 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C152829) *
              C1880 +
          (((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
             C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
             C152775 * C1744) *
                C152696 * C152893 +
            (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
               C152829 -
           ((C34168 + C34169) * C152696 * C23411 +
            (C34170 + C34171) * C152696 * C152894 +
            (C31629 * C1729 - C31630 * C1709 - C31629 * C1730 +
             C152775 * C1745 + C31627 * C1727 - C31628 * C1708 -
             C31627 * C1728 + C152846 * C1744) *
                C152696 * C152893) *
               C152617) *
              C1881 +
          (((C31627 * C2269 - C31628 * C2265 - C31627 * C2270 +
             C152846 * C2277 + C31629 * C8185 - C31630 * C8178 -
             C31629 * C8186 + C152775 * C8196) *
                C152696 * C152893 +
            (C31627 * C2271 - C31628 * C2266 - C31627 * C2272 +
             C152846 * C2278 + C31629 * C8183 - C31630 * C8177 -
             C31629 * C8184 + C152775 * C8195) *
                C152696 * C152894 +
            (C31627 * C2273 - C31628 * C2267 - C31627 * C2274 +
             C152846 * C2279 + C31629 * C9823 - C31630 * C9822 -
             C31629 * C9824 + C152775 * C9825) *
                C152696 * C23411) *
               C152617 -
           ((C33850 + C33851) * C152696 * C23411 +
            (C33852 + C33853) * C152696 * C152894 +
            (C31629 * C2269 - C31630 * C2265 - C31629 * C2270 +
             C152775 * C2277 + C31627 * C1537 - C31628 * C1526 -
             C31627 * C1538 + C152846 * C1550) *
                C152696 * C152893) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152696 * C152893 +
             (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
                C152829 -
            (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152696 * C152893) *
                C152617) *
               C152828 +
           (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
              C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
              C31629 * C1720 + C152775 * C1740) *
                 C152696 * C152893 +
             (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
                C152617 -
            (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
             (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
              C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
              C152846 * C407) *
                 C152696 * C152893) *
                C152829) *
               C152575) *
              C365 +
          ((((C32307 + C32306) * C152696 * C152893 +
             (C32305 + C32304) * C152696 * C152894 + C32733 * C23411) *
                C152617 -
            (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
             (C31693 + C31692) * C152696 * C152893) *
                C152829) *
               C152828 +
           (((C32001 + C32000) * C152696 * C152893 +
             (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
                C152829 -
            ((C33070 + C33071) * C152696 * C23411 +
             (C33069 + C33068) * C152696 * C152894 +
             (C33067 + C33066) * C152696 * C152893) *
                C152617) *
               C152575) *
              C366 +
          (((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
             C31707 * C23411) *
                C152829 -
            ((C32738 + C32739) * C152696 * C23411 +
             (C32313 + C32312) * C152696 * C152894 + C32318 * C152893) *
                C152617) *
               C152828 +
           ((C33073 * C152893 + (C33071 + C33070) * C152696 * C152894 +
             (C31627 * C1241 - C31628 * C1231 - C31627 * C1242 +
              C152846 * C1249 + C31629 * C2890 - C31630 * C2889 -
              C31629 * C2891 + C152775 * C2892) *
                 C152696 * C23411) *
                C152617 -
            ((C32528 + C32529) * C152696 * C23411 +
             (C32007 + C32006) * C152696 * C152894 + C32012 * C152893) *
                C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C3047 -
           (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152696 * C152893) *
               C3048 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152696 * C152893 +
            (C32308 + C32309) * C152696 * C152894 + C32319 * C23411) *
               C3049 -
           ((C35460 + C35461) * C152696 * C23411 +
            (C35462 + C35463) * C152696 * C152894 +
            (C31629 * C2679 - C31630 * C2667 - C31629 * C2680 +
             C152775 * C2691 + C31627 * C2677 - C31628 * C2666 -
             C31627 * C2678 + C152846 * C2690) *
                C152696 * C152893) *
               C152886) *
              C152828 +
          (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
             C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
             C31629 * C1720 + C152775 * C1740) *
                C152696 * C152893 +
            (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
               C3048 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C3047 -
           ((C35238 + C35239) * C152696 * C23411 +
            (C35240 + C35241) * C152696 * C152894 +
            (C31629 * C3213 - C31630 * C3209 - C31629 * C3214 +
             C152775 * C3221 + C31627 * C1719 - C31628 * C1704 -
             C31627 * C1720 + C152846 * C1740) *
                C152696 * C152893) *
               C3049 +
           ((C31627 * C3213 - C31628 * C3209 - C31627 * C3214 +
             C152846 * C3221 + C31629 * C9518 - C31630 * C9510 -
             C31629 * C9519 + C152775 * C9528) *
                C152696 * C152893 +
            (C31627 * C3215 - C31628 * C3210 - C31627 * C3216 +
             C152846 * C3222 + C31629 * C9522 - C31630 * C9512 -
             C31629 * C9523 + C152775 * C9530) *
                C152696 * C152894 +
            (C31627 * C3217 - C31628 * C3211 - C31627 * C3218 +
             C152846 * C3223 + C31629 * C18412 - C31630 * C18411 -
             C31629 * C18413 + C152775 * C18414) *
                C152696 * C23411) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
                C31629 * C647 - C31630 * C632 - C31629 * C648 +
                C152775 * C668) *
                   C152696 * C152893 +
               (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
                  C152530 * C152512 * C129 -
              (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
               (C31693 + C31692) * C152696 * C152893) *
                  C152530 * C152512 * C130 +
              (C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
               C31707 * C23411) *
                  C152530 * C152512 * C131 -
              ((C31700 + C31701) * C152696 * C23411 +
               (C31699 + C31698) * C152696 * C152894 + C31706 * C152893) *
                  C152530 * C152512 * C132 +
              (C31707 * C152893 + (C31701 + C31700) * C152696 * C152894 +
               (C31627 * C156 - C31628 * C142 - C31627 * C157 + C152846 * C166 +
                C31629 * C1022 - C31630 * C1021 - C31629 * C1023 +
                C152775 * C1024) *
                   C152696 * C23411) *
                  C152530 * C152512 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C31627 * C144 - C31628 * C136 - C31627 * C145 +
                 C152846 * C160 + C31629 * C647 - C31630 * C632 -
                 C31629 * C648 + C152775 * C668) *
                    C152696 * C152893 +
                (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
                   C152530 * C152917 -
               (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
                (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
                 C152775 * C1245 + C31627 * C386 - C31628 * C371 -
                 C31627 * C387 + C152846 * C407) *
                    C152696 * C152893) *
                   C152530 * C152901 +
               ((C31627 * C388 - C31628 * C372 - C31627 * C389 +
                 C152846 * C408 + C31629 * C1727 - C31630 * C1708 -
                 C31629 * C1728 + C152775 * C1744) *
                    C152696 * C152893 +
                (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
                   C152530 * C152870) *
                  C365 +
              (((C32001 + C32000) * C152696 * C152893 +
                (C31999 + C31998) * C152696 * C152894 +
                (C32006 + C32007) * C152696 * C23411) *
                   C152530 * C152901 -
               (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
                (C31693 + C31692) * C152696 * C152893) *
                   C152530 * C152917 -
               ((C32008 + C32009) * C152696 * C23411 +
                (C32005 + C32004) * C152696 * C152894 +
                (C32003 + C32002) * C152696 * C152893) *
                   C152530 * C152870) *
                  C366 +
              ((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
                C31707 * C23411) *
                   C152530 * C152917 -
               ((C31629 * C1241 - C31630 * C1231 - C31629 * C1242 +
                 C152775 * C1249 + C31627 * C396 - C31628 * C376 -
                 C31627 * C397 + C152846 * C412) *
                    C152696 * C23411 +
                (C32007 + C32006) * C152696 * C152894 + C32012 * C152893) *
                   C152530 * C152901 +
               (C32013 * C152893 + (C32009 + C32008) * C152696 * C152894 +
                (C31627 * C398 - C31628 * C377 - C31627 * C399 +
                 C152846 * C413 + C31629 * C2108 - C31630 * C2107 -
                 C31629 * C2109 + C152775 * C2110) *
                    C152696 * C23411) *
                   C152530 * C152870) *
                  C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152918 -
           (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152696 * C152893) *
               C152903 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152696 * C152893 +
            (C32308 + C32309) * C152696 * C152894 + C32319 * C23411) *
               C152873) *
              C152512 * C365 +
          (((C32307 + C32306) * C152696 * C152893 +
            (C32305 + C32304) * C152696 * C152894 +
            (C32312 + C32313) * C152696 * C23411) *
               C152903 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C152918 -
           ((C32314 + C32315) * C152696 * C23411 +
            (C32311 + C32310) * C152696 * C152894 +
            (C32309 + C32308) * C152696 * C152893) *
               C152873) *
              C152512 * C366 +
          ((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
            C31707 * C23411) *
               C152918 -
           ((C31629 * C659 - C31630 * C638 - C31629 * C660 + C152775 * C674 +
             C31627 * C657 - C31628 * C637 - C31627 * C658 + C152846 * C673) *
                C152696 * C23411 +
            (C32313 + C32312) * C152696 * C152894 + C32318 * C152893) *
               C152903 +
           (C32319 * C152893 + (C32315 + C32314) * C152696 * C152894 +
            (C31627 * C659 - C31628 * C638 - C31627 * C660 + C152846 * C674 +
             C31629 * C3052 - C31630 * C3051 - C31629 * C3053 +
             C152775 * C3054) *
                C152696 * C23411) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152530 * C1429 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C152530 * C1430 +
           ((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
             C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
             C152775 * C1744) *
                C152696 * C152893 +
            (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
               C152530 * C152870) *
              C152914 +
          (((C32001 + C32000) * C152696 * C152893 +
            (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
               C152530 * C1430 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C152530 * C1429 -
           ((C32008 + C32009) * C152696 * C23411 +
            (C32005 + C32004) * C152696 * C152894 +
            (C32003 + C32002) * C152696 * C152893) *
               C152530 * C152870) *
              C152897 +
          ((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
            C31707 * C23411) *
               C152530 * C1429 -
           ((C32528 + C32529) * C152696 * C23411 +
            (C32007 + C32006) * C152696 * C152894 + C32012 * C152893) *
               C152530 * C1430 +
           (C32013 * C152893 + (C32009 + C32008) * C152696 * C152894 +
            (C31627 * C398 - C31628 * C377 - C31627 * C399 + C152846 * C413 +
             C31629 * C2108 - C31630 * C2107 - C31629 * C2109 +
             C152775 * C2110) *
                C152696 * C23411) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
            C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
               C152696 * C152893 +
           (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
              C152530 * C1517 -
          (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
           (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 + C152775 * C1245 +
            C31627 * C386 - C31628 * C371 - C31627 * C387 + C152846 * C407) *
               C152696 * C152893) *
              C152530 * C1518 +
          ((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
            C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
            C152775 * C1744) *
               C152696 * C152893 +
           (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
              C152530 * C1519 -
          ((C31629 * C2273 - C31630 * C2267 - C31629 * C2274 + C152775 * C2279 +
            C31627 * C1533 - C31628 * C1524 - C31627 * C1534 +
            C152846 * C1548) *
               C152696 * C23411 +
           (C31629 * C2271 - C31630 * C2266 - C31629 * C2272 + C152775 * C2278 +
            C31627 * C1535 - C31628 * C1525 - C31627 * C1536 +
            C152846 * C1549) *
               C152696 * C152894 +
           (C31629 * C2269 - C31630 * C2265 - C31629 * C2270 + C152775 * C2277 +
            C31627 * C1537 - C31628 * C1526 - C31627 * C1538 +
            C152846 * C1550) *
               C152696 * C152893) *
              C152530 * C1520 +
          ((C31627 * C1539 - C31628 * C1527 - C31627 * C1540 + C152846 * C1551 +
            C31629 * C8189 - C31630 * C8180 - C31629 * C8190 +
            C152775 * C8198) *
               C152696 * C152893 +
           (C31627 * C1541 - C31628 * C1528 - C31627 * C1542 + C152846 * C1552 +
            C31629 * C8187 - C31630 * C8179 - C31629 * C8188 +
            C152775 * C8197) *
               C152696 * C152894 +
           (C31627 * C1543 - C31628 * C1529 - C31627 * C1544 + C152846 * C1553 +
            C31629 * C8728 - C31630 * C8727 - C31629 * C8729 +
            C152775 * C8730) *
               C152696 * C23411) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152918 -
           (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152696 * C152893) *
               C152903 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152696 * C152893 +
            (C32308 + C32309) * C152696 * C152894 + C32319 * C23411) *
               C152873) *
              C1429 +
          (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
             C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
             C31629 * C1720 + C152775 * C1740) *
                C152696 * C152893 +
            (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
               C152903 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C152918 -
           ((C31629 * C3217 - C31630 * C3211 - C31629 * C3218 +
             C152775 * C3223 + C31627 * C1715 - C31628 * C1702 -
             C31627 * C1716 + C152846 * C1738) *
                C152696 * C23411 +
            (C31629 * C3215 - C31630 * C3210 - C31629 * C3216 +
             C152775 * C3222 + C31627 * C1717 - C31628 * C1703 -
             C31627 * C1718 + C152846 * C1739) *
                C152696 * C152894 +
            (C31629 * C3213 - C31630 * C3209 - C31629 * C3214 +
             C152775 * C3221 + C31627 * C1719 - C31628 * C1704 -
             C31627 * C1720 + C152846 * C1740) *
                C152696 * C152893) *
               C152873) *
              C1430 +
          (((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
             C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
             C152775 * C1744) *
                C152696 * C152893 +
            (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
               C152918 -
           ((C31629 * C1733 - C31630 * C1711 - C31629 * C1734 +
             C152775 * C1747 + C31627 * C1723 - C31628 * C1706 -
             C31627 * C1724 + C152846 * C1742) *
                C152696 * C23411 +
            (C31629 * C1731 - C31630 * C1710 - C31629 * C1732 +
             C152775 * C1746 + C31627 * C1725 - C31628 * C1707 -
             C31627 * C1726 + C152846 * C1743) *
                C152696 * C152894 +
            (C31629 * C1729 - C31630 * C1709 - C31629 * C1730 +
             C152775 * C1745 + C31627 * C1727 - C31628 * C1708 -
             C31627 * C1728 + C152846 * C1744) *
                C152696 * C152893) *
               C152903 +
           ((C31627 * C1729 - C31628 * C1709 - C31627 * C1730 +
             C152846 * C1745 + C31629 * C9516 - C31630 * C9509 -
             C31629 * C9517 + C152775 * C9527) *
                C152696 * C152893 +
            (C31627 * C1731 - C31628 * C1710 - C31627 * C1732 +
             C152846 * C1746 + C31629 * C9514 - C31630 * C9508 -
             C31629 * C9515 + C152775 * C9526) *
                C152696 * C152894 +
            (C31627 * C1733 - C31628 * C1711 - C31627 * C1734 +
             C152846 * C1747 + C31629 * C10024 - C31630 * C10023 -
             C31629 * C10025 + C152775 * C10026) *
                C152696 * C23411) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C2427 -
           (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152696 * C152893) *
               C2428 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152696 * C152893 +
            (C32308 + C32309) * C152696 * C152894 + C32319 * C23411) *
               C152873) *
              C152512 * C152914 +
          (((C32307 + C32306) * C152696 * C152893 +
            (C32305 + C32304) * C152696 * C152894 + C32733 * C23411) *
               C2428 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C2427 -
           ((C32314 + C32315) * C152696 * C23411 +
            (C32311 + C32310) * C152696 * C152894 +
            (C32309 + C32308) * C152696 * C152893) *
               C152873) *
              C152512 * C152897 +
          ((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
            C31707 * C23411) *
               C2427 -
           ((C32738 + C32739) * C152696 * C23411 +
            (C32313 + C32312) * C152696 * C152894 + C32318 * C152893) *
               C2428 +
           (C32319 * C152893 + (C32315 + C32314) * C152696 * C152894 +
            (C31627 * C659 - C31628 * C638 - C31627 * C660 + C152846 * C674 +
             C31629 * C3052 - C31630 * C3051 - C31629 * C3053 +
             C152775 * C3054) *
                C152696 * C23411) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C2427 -
           (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152696 * C152893) *
               C2428 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152696 * C152893 +
            (C32308 + C32309) * C152696 * C152894 + C32319 * C23411) *
               C152873) *
              C152917 +
          (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
             C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
             C31629 * C1720 + C152775 * C1740) *
                C152696 * C152893 +
            (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
               C2428 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C2427 -
           ((C31629 * C3217 - C31630 * C3211 - C31629 * C3218 +
             C152775 * C3223 + C31627 * C1715 - C31628 * C1702 -
             C31627 * C1716 + C152846 * C1738) *
                C152696 * C23411 +
            (C31629 * C3215 - C31630 * C3210 - C31629 * C3216 +
             C152775 * C3222 + C31627 * C1717 - C31628 * C1703 -
             C31627 * C1718 + C152846 * C1739) *
                C152696 * C152894 +
            (C31629 * C3213 - C31630 * C3209 - C31629 * C3214 +
             C152775 * C3221 + C31627 * C1719 - C31628 * C1704 -
             C31627 * C1720 + C152846 * C1740) *
                C152696 * C152893) *
               C152873) *
              C152901 +
          (((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
             C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
             C152775 * C1744) *
                C152696 * C152893 +
            (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
               C2427 -
           ((C34168 + C34169) * C152696 * C23411 +
            (C34170 + C34171) * C152696 * C152894 +
            (C31629 * C1729 - C31630 * C1709 - C31629 * C1730 +
             C152775 * C1745 + C31627 * C1727 - C31628 * C1708 -
             C31627 * C1728 + C152846 * C1744) *
                C152696 * C152893) *
               C2428 +
           ((C31627 * C1729 - C31628 * C1709 - C31627 * C1730 +
             C152846 * C1745 + C31629 * C9516 - C31630 * C9509 -
             C31629 * C9517 + C152775 * C9527) *
                C152696 * C152893 +
            (C31627 * C1731 - C31628 * C1710 - C31627 * C1732 +
             C152846 * C1746 + C31629 * C9514 - C31630 * C9508 -
             C31629 * C9515 + C152775 * C9526) *
                C152696 * C152894 +
            (C31627 * C1733 - C31628 * C1711 - C31627 * C1734 +
             C152846 * C1747 + C31629 * C10024 - C31630 * C10023 -
             C31629 * C10025 + C152775 * C10026) *
                C152696 * C23411) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
            C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
               C152696 * C152893 +
           (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
              C2658 -
          (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
           (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
            C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
               C152696 * C152893) *
              C2659 +
          ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
            C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
            C152775 * C2690) *
               C152696 * C152893 +
           (C32308 + C32309) * C152696 * C152894 + C32319 * C23411) *
              C2660 -
          ((C31629 * C2683 - C31630 * C2669 - C31629 * C2684 + C152775 * C2693 +
            C31627 * C2673 - C31628 * C2664 - C31627 * C2674 +
            C152846 * C2688) *
               C152696 * C23411 +
           (C31629 * C2681 - C31630 * C2668 - C31629 * C2682 + C152775 * C2692 +
            C31627 * C2675 - C31628 * C2665 - C31627 * C2676 +
            C152846 * C2689) *
               C152696 * C152894 +
           (C31629 * C2679 - C31630 * C2667 - C31629 * C2680 + C152775 * C2691 +
            C31627 * C2677 - C31628 * C2666 - C31627 * C2678 +
            C152846 * C2690) *
               C152696 * C152893) *
              C2661 +
          ((C31627 * C2679 - C31628 * C2667 - C31627 * C2680 + C152846 * C2691 +
            C31629 * C18111 - C31630 * C18106 - C31629 * C18112 +
            C152775 * C18118) *
               C152696 * C152893 +
           (C31627 * C2681 - C31628 * C2668 - C31627 * C2682 + C152846 * C2692 +
            C31629 * C18109 - C31630 * C18105 - C31629 * C18110 +
            C152775 * C18117) *
               C152696 * C152894 +
           (C31627 * C2683 - C31628 * C2669 - C31627 * C2684 + C152846 * C2693 +
            C31629 * C18631 - C31630 * C18630 - C31629 * C18632 +
            C152775 * C18633) *
               C152696 * C23411) *
              C2662) *
         C152512 * C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152696 * C152893 +
             (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
                C152829 -
            (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152696 * C152893) *
                C152617) *
               C1429 +
           (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
              C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
              C31629 * C1720 + C152775 * C1740) *
                 C152696 * C152893 +
             (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
                C152617 -
            (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
             (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
              C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
              C152846 * C407) *
                 C152696 * C152893) *
                C152829) *
               C1430 +
           (((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
              C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
              C152775 * C1744) *
                 C152696 * C152893 +
             (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
                C152829 -
            ((C34168 + C34169) * C152696 * C23411 +
             (C34170 + C34171) * C152696 * C152894 +
             (C31629 * C1729 - C31630 * C1709 - C31629 * C1730 +
              C152775 * C1745 + C31627 * C1727 - C31628 * C1708 -
              C31627 * C1728 + C152846 * C1744) *
                 C152696 * C152893) *
                C152617) *
               C152870) *
              C152814 +
          ((((C32307 + C32306) * C152696 * C152893 +
             (C32305 + C32304) * C152696 * C152894 + C32733 * C23411) *
                C152617 -
            (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
             (C31693 + C31692) * C152696 * C152893) *
                C152829) *
               C1429 +
           (((C32001 + C32000) * C152696 * C152893 +
             (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
                C152829 -
            ((C33070 + C33071) * C152696 * C23411 +
             (C33069 + C33068) * C152696 * C152894 +
             (C33067 + C33066) * C152696 * C152893) *
                C152617) *
               C1430 +
           (((C34171 + C34170) * C152696 * C152893 +
             (C34169 + C34168) * C152696 * C152894 +
             (C31627 * C1721 - C31628 * C1705 - C31627 * C1722 +
              C152846 * C1741 + C31629 * C1735 - C31630 * C1712 -
              C31629 * C1736 + C152775 * C1748) *
                 C152696 * C23411) *
                C152617 -
            ((C32008 + C32009) * C152696 * C23411 +
             (C32005 + C32004) * C152696 * C152894 +
             (C32003 + C32002) * C152696 * C152893) *
                C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152829 -
           (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152696 * C152893) *
               C152617) *
              C152512 * C873 +
          (((C32307 + C32306) * C152696 * C152893 +
            (C32305 + C32304) * C152696 * C152894 + C32733 * C23411) *
               C152617 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C152829) *
              C152512 * C874 +
          ((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
            C31707 * C23411) *
               C152829 -
           ((C32738 + C32739) * C152696 * C23411 +
            (C32313 + C32312) * C152696 * C152894 + C32318 * C152893) *
               C152617) *
              C152512 * C875 +
          ((C32733 * C152893 + (C32739 + C32738) * C152696 * C152894 +
            (C31627 * C661 - C31628 * C639 - C31627 * C662 + C152846 * C675 +
             C31629 * C663 - C31630 * C640 - C31629 * C664 + C152775 * C676) *
                C152696 * C23411) *
               C152617 -
           ((C31700 + C31701) * C152696 * C23411 +
            (C31699 + C31698) * C152696 * C152894 + C31706 * C152893) *
               C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C3047 -
           (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152696 * C152893) *
               C3048 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152696 * C152893 +
            (C32308 + C32309) * C152696 * C152894 + C32319 * C23411) *
               C3049 -
           ((C35460 + C35461) * C152696 * C23411 +
            (C35462 + C35463) * C152696 * C152894 +
            (C31629 * C2679 - C31630 * C2667 - C31629 * C2680 +
             C152775 * C2691 + C31627 * C2677 - C31628 * C2666 -
             C31627 * C2678 + C152846 * C2690) *
                C152696 * C152893) *
               C152886) *
              C152512 * C152814 +
          (((C32307 + C32306) * C152696 * C152893 +
            (C32305 + C32304) * C152696 * C152894 + C32733 * C23411) *
               C3048 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C3047 -
           ((C32314 + C32315) * C152696 * C23411 +
            (C32311 + C32310) * C152696 * C152894 +
            (C32309 + C32308) * C152696 * C152893) *
               C3049 +
           ((C35463 + C35462) * C152696 * C152893 +
            (C35461 + C35460) * C152696 * C152894 +
            (C31627 * C2671 - C31628 * C2663 - C31627 * C2672 +
             C152846 * C2687 + C31629 * C2685 - C31630 * C2670 -
             C31629 * C2686 + C152775 * C2694) *
                C152696 * C23411) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152530 * C152917 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C152530 * C152901 +
           ((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
             C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
             C152775 * C1744) *
                C152696 * C152893 +
            (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
               C152530 * C152870) *
              C365 +
          (((C32001 + C32000) * C152696 * C152893 +
            (C31999 + C31998) * C152696 * C152894 +
            (C32006 + C32007) * C152696 * C23411) *
               C152530 * C152901 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C152530 * C152917 -
           ((C32008 + C32009) * C152696 * C23411 +
            (C32005 + C32004) * C152696 * C152894 +
            (C32003 + C32002) * C152696 * C152893) *
               C152530 * C152870) *
              C366 +
          ((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
            C31707 * C23411) *
               C152530 * C152917 -
           ((C31629 * C1241 - C31630 * C1231 - C31629 * C1242 +
             C152775 * C1249 + C31627 * C396 - C31628 * C376 - C31627 * C397 +
             C152846 * C412) *
                C152696 * C23411 +
            (C32007 + C32006) * C152696 * C152894 + C32012 * C152893) *
               C152530 * C152901 +
           (C32013 * C152893 + (C32009 + C32008) * C152696 * C152894 +
            (C31627 * C398 - C31628 * C377 - C31627 * C399 + C152846 * C413 +
             C31629 * C2108 - C31630 * C2107 - C31629 * C2109 +
             C152775 * C2110) *
                C152696 * C23411) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
            C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
               C152696 * C152893 +
           (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
              C152530 * C152512 * C129 -
          (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
           (C31693 + C31692) * C152696 * C152893) *
              C152530 * C152512 * C130 +
          (C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
           C31707 * C23411) *
              C152530 * C152512 * C131 -
          ((C31700 + C31701) * C152696 * C23411 +
           (C31699 + C31698) * C152696 * C152894 + C31706 * C152893) *
              C152530 * C152512 * C132 +
          (C31707 * C152893 + (C31701 + C31700) * C152696 * C152894 +
           (C31627 * C156 - C31628 * C142 - C31627 * C157 + C152846 * C166 +
            C31629 * C1022 - C31630 * C1021 - C31629 * C1023 +
            C152775 * C1024) *
               C152696 * C23411) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152530 * C1429 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C152530 * C1430 +
           ((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
             C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
             C152775 * C1744) *
                C152696 * C152893 +
            (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
               C152530 * C152870) *
              C152914 +
          (((C32001 + C32000) * C152696 * C152893 +
            (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
               C152530 * C1430 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C152530 * C1429 -
           ((C32008 + C32009) * C152696 * C23411 +
            (C32005 + C32004) * C152696 * C152894 +
            (C32003 + C32002) * C152696 * C152893) *
               C152530 * C152870) *
              C152897 +
          ((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
            C31707 * C23411) *
               C152530 * C1429 -
           ((C32528 + C32529) * C152696 * C23411 +
            (C32007 + C32006) * C152696 * C152894 + C32012 * C152893) *
               C152530 * C1430 +
           (C32013 * C152893 + (C32009 + C32008) * C152696 * C152894 +
            (C31627 * C398 - C31628 * C377 - C31627 * C399 + C152846 * C413 +
             C31629 * C2108 - C31630 * C2107 - C31629 * C2109 +
             C152775 * C2110) *
                C152696 * C23411) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
            C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
               C152696 * C152893 +
           (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
              C152530 * C1517 -
          (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
           (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 + C152775 * C1245 +
            C31627 * C386 - C31628 * C371 - C31627 * C387 + C152846 * C407) *
               C152696 * C152893) *
              C152530 * C1518 +
          ((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
            C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
            C152775 * C1744) *
               C152696 * C152893 +
           (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
              C152530 * C1519 -
          ((C31629 * C2273 - C31630 * C2267 - C31629 * C2274 + C152775 * C2279 +
            C31627 * C1533 - C31628 * C1524 - C31627 * C1534 +
            C152846 * C1548) *
               C152696 * C23411 +
           (C31629 * C2271 - C31630 * C2266 - C31629 * C2272 + C152775 * C2278 +
            C31627 * C1535 - C31628 * C1525 - C31627 * C1536 +
            C152846 * C1549) *
               C152696 * C152894 +
           (C31629 * C2269 - C31630 * C2265 - C31629 * C2270 + C152775 * C2277 +
            C31627 * C1537 - C31628 * C1526 - C31627 * C1538 +
            C152846 * C1550) *
               C152696 * C152893) *
              C152530 * C1520 +
          ((C31627 * C1539 - C31628 * C1527 - C31627 * C1540 + C152846 * C1551 +
            C31629 * C8189 - C31630 * C8180 - C31629 * C8190 +
            C152775 * C8198) *
               C152696 * C152893 +
           (C31627 * C1541 - C31628 * C1528 - C31627 * C1542 + C152846 * C1552 +
            C31629 * C8187 - C31630 * C8179 - C31629 * C8188 +
            C152775 * C8197) *
               C152696 * C152894 +
           (C31627 * C1543 - C31628 * C1529 - C31627 * C1544 + C152846 * C1553 +
            C31629 * C8728 - C31630 * C8727 - C31629 * C8729 +
            C152775 * C8730) *
               C152696 * C23411) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C2427 -
           (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152696 * C152893) *
               C2428 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152696 * C152893 +
            (C32308 + C32309) * C152696 * C152894 + C32319 * C23411) *
               C152873) *
              C152512 * C152914 +
          (((C32307 + C32306) * C152696 * C152893 +
            (C32305 + C32304) * C152696 * C152894 + C32733 * C23411) *
               C2428 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C2427 -
           ((C32314 + C32315) * C152696 * C23411 +
            (C32311 + C32310) * C152696 * C152894 +
            (C32309 + C32308) * C152696 * C152893) *
               C152873) *
              C152512 * C152897 +
          ((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
            C31707 * C23411) *
               C2427 -
           ((C32738 + C32739) * C152696 * C23411 +
            (C32313 + C32312) * C152696 * C152894 + C32318 * C152893) *
               C2428 +
           (C32319 * C152893 + (C32315 + C32314) * C152696 * C152894 +
            (C31627 * C659 - C31628 * C638 - C31627 * C660 + C152846 * C674 +
             C31629 * C3052 - C31630 * C3051 - C31629 * C3053 +
             C152775 * C3054) *
                C152696 * C23411) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C2427 -
           (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152696 * C152893) *
               C2428 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152696 * C152893 +
            (C32308 + C32309) * C152696 * C152894 + C32319 * C23411) *
               C152873) *
              C152917 +
          (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
             C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
             C31629 * C1720 + C152775 * C1740) *
                C152696 * C152893 +
            (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
               C2428 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C2427 -
           ((C31629 * C3217 - C31630 * C3211 - C31629 * C3218 +
             C152775 * C3223 + C31627 * C1715 - C31628 * C1702 -
             C31627 * C1716 + C152846 * C1738) *
                C152696 * C23411 +
            (C31629 * C3215 - C31630 * C3210 - C31629 * C3216 +
             C152775 * C3222 + C31627 * C1717 - C31628 * C1703 -
             C31627 * C1718 + C152846 * C1739) *
                C152696 * C152894 +
            (C31629 * C3213 - C31630 * C3209 - C31629 * C3214 +
             C152775 * C3221 + C31627 * C1719 - C31628 * C1704 -
             C31627 * C1720 + C152846 * C1740) *
                C152696 * C152893) *
               C152873) *
              C152901 +
          (((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
             C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
             C152775 * C1744) *
                C152696 * C152893 +
            (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
               C2427 -
           ((C34168 + C34169) * C152696 * C23411 +
            (C34170 + C34171) * C152696 * C152894 +
            (C31629 * C1729 - C31630 * C1709 - C31629 * C1730 +
             C152775 * C1745 + C31627 * C1727 - C31628 * C1708 -
             C31627 * C1728 + C152846 * C1744) *
                C152696 * C152893) *
               C2428 +
           ((C31627 * C1729 - C31628 * C1709 - C31627 * C1730 +
             C152846 * C1745 + C31629 * C9516 - C31630 * C9509 -
             C31629 * C9517 + C152775 * C9527) *
                C152696 * C152893 +
            (C31627 * C1731 - C31628 * C1710 - C31627 * C1732 +
             C152846 * C1746 + C31629 * C9514 - C31630 * C9508 -
             C31629 * C9515 + C152775 * C9526) *
                C152696 * C152894 +
            (C31627 * C1733 - C31628 * C1711 - C31627 * C1734 +
             C152846 * C1747 + C31629 * C10024 - C31630 * C10023 -
             C31629 * C10025 + C152775 * C10026) *
                C152696 * C23411) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152696 * C152893 +
             (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
                C4361 -
            (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152696 * C152893) *
                C152617) *
               C152828 +
           (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
              C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
              C31629 * C1720 + C152775 * C1740) *
                 C152696 * C152893 +
             (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
                C152617 -
            (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
             (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
              C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
              C152846 * C407) *
                 C152696 * C152893) *
                C4361) *
               C152575) *
              C152489 +
          ((((C32307 + C32306) * C152696 * C152893 +
             (C32305 + C32304) * C152696 * C152894 + C32733 * C23411) *
                C152617 -
            (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
             (C31693 + C31692) * C152696 * C152893) *
                C4361) *
               C152828 +
           (((C32001 + C32000) * C152696 * C152893 +
             (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
                C4361 -
            ((C33070 + C33071) * C152696 * C23411 +
             (C33069 + C33068) * C152696 * C152894 +
             (C33067 + C33066) * C152696 * C152893) *
                C152617) *
               C152575) *
              C152498 +
          (((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
             C31707 * C23411) *
                C4361 -
            ((C32738 + C32739) * C152696 * C23411 +
             (C32313 + C32312) * C152696 * C152894 + C32318 * C152893) *
                C152617) *
               C152828 +
           ((C33073 * C152893 + (C33071 + C33070) * C152696 * C152894 +
             (C31627 * C1241 - C31628 * C1231 - C31627 * C1242 +
              C152846 * C1249 + C31629 * C2890 - C31630 * C2889 -
              C31629 * C2891 + C152775 * C2892) *
                 C152696 * C23411) *
                C152617 -
            ((C32528 + C32529) * C152696 * C23411 +
             (C32007 + C32006) * C152696 * C152894 + C32012 * C152893) *
                C4361) *
               C152575) *
              C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152696 * C152893 +
             (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
                C152613 -
            (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152696 * C152893) *
                C152620 +
            ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C152696 * C152893 +
             (C32308 + C32309) * C152696 * C152894 + C32319 * C23411) *
                C5033) *
               C152828 +
           (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
              C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
              C31629 * C1720 + C152775 * C1740) *
                 C152696 * C152893 +
             (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
                C152620 -
            (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
             (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
              C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
              C152846 * C407) *
                 C152696 * C152893) *
                C152613 -
            ((C35238 + C35239) * C152696 * C23411 +
             (C35240 + C35241) * C152696 * C152894 +
             (C31629 * C3213 - C31630 * C3209 - C31629 * C3214 +
              C152775 * C3221 + C31627 * C1719 - C31628 * C1704 -
              C31627 * C1720 + C152846 * C1740) *
                 C152696 * C152893) *
                C5033) *
               C152575) *
              C3495 +
          ((((C32307 + C32306) * C152696 * C152893 +
             (C32305 + C32304) * C152696 * C152894 + C32733 * C23411) *
                C152620 -
            (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
             (C31693 + C31692) * C152696 * C152893) *
                C152613 -
            ((C32314 + C32315) * C152696 * C23411 +
             (C32311 + C32310) * C152696 * C152894 +
             (C32309 + C32308) * C152696 * C152893) *
                C5033) *
               C152828 +
           (((C32001 + C32000) * C152696 * C152893 +
             (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
                C152613 -
            ((C33070 + C33071) * C152696 * C23411 +
             (C33069 + C33068) * C152696 * C152894 +
             (C33067 + C33066) * C152696 * C152893) *
                C152620 +
            ((C35241 + C35240) * C152696 * C152893 +
             (C35239 + C35238) * C152696 * C152894 +
             (C31627 * C1713 - C31628 * C1701 - C31627 * C1714 +
              C152846 * C1737 + C31629 * C3219 - C31630 * C3212 -
              C31629 * C3220 + C152775 * C3224) *
                 C152696 * C23411) *
                C5033) *
               C152575) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152696 * C152893 +
             (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
                C4361 -
            (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152696 * C152893) *
                C152617) *
               C152917 +
           (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
              C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
              C31629 * C1720 + C152775 * C1740) *
                 C152696 * C152893 +
             (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
                C152617 -
            (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
             (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
              C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
              C152846 * C407) *
                 C152696 * C152893) *
                C4361) *
               C152901 +
           (((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
              C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
              C152775 * C1744) *
                 C152696 * C152893 +
             (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
                C4361 -
            ((C34168 + C34169) * C152696 * C23411 +
             (C34170 + C34171) * C152696 * C152894 +
             (C31629 * C1729 - C31630 * C1709 - C31629 * C1730 +
              C152775 * C1745 + C31627 * C1727 - C31628 * C1708 -
              C31627 * C1728 + C152846 * C1744) *
                 C152696 * C152893) *
                C152617) *
               C152870) *
              C3495 +
          ((((C32307 + C32306) * C152696 * C152893 +
             (C32305 + C32304) * C152696 * C152894 + C32733 * C23411) *
                C152617 -
            (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
             (C31693 + C31692) * C152696 * C152893) *
                C4361) *
               C152917 +
           (((C32001 + C32000) * C152696 * C152893 +
             (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
                C4361 -
            ((C33070 + C33071) * C152696 * C23411 +
             (C33069 + C33068) * C152696 * C152894 +
             (C33067 + C33066) * C152696 * C152893) *
                C152617) *
               C152901 +
           (((C34171 + C34170) * C152696 * C152893 +
             (C34169 + C34168) * C152696 * C152894 +
             (C31627 * C1721 - C31628 * C1705 - C31627 * C1722 +
              C152846 * C1741 + C31629 * C1735 - C31630 * C1712 -
              C31629 * C1736 + C152775 * C1748) *
                 C152696 * C23411) *
                C152617 -
            ((C32008 + C32009) * C152696 * C23411 +
             (C32005 + C32004) * C152696 * C152894 +
             (C32003 + C32002) * C152696 * C152893) *
                C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C4361 -
           (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152696 * C152893) *
               C152617) *
              C152512 * C152923 +
          (((C32307 + C32306) * C152696 * C152893 +
            (C32305 + C32304) * C152696 * C152894 + C32733 * C23411) *
               C152617 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C4361) *
              C152512 * C152916 +
          ((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
            C31707 * C23411) *
               C4361 -
           ((C32738 + C32739) * C152696 * C23411 +
            (C32313 + C32312) * C152696 * C152894 + C32318 * C152893) *
               C152617) *
              C152512 * C152899 +
          ((C32733 * C152893 + (C32739 + C32738) * C152696 * C152894 +
            (C31627 * C661 - C31628 * C639 - C31627 * C662 + C152846 * C675 +
             C31629 * C663 - C31630 * C640 - C31629 * C664 + C152775 * C676) *
                C152696 * C23411) *
               C152617 -
           ((C31700 + C31701) * C152696 * C23411 +
            (C31699 + C31698) * C152696 * C152894 + C31706 * C152893) *
               C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152925 -
           (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152696 * C152893) *
               C152922 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152696 * C152893 +
            (C32308 + C32309) * C152696 * C152894 + C32319 * C23411) *
               C152909 -
           ((C35460 + C35461) * C152696 * C23411 +
            (C35462 + C35463) * C152696 * C152894 +
            (C31629 * C2679 - C31630 * C2667 - C31629 * C2680 +
             C152775 * C2691 + C31627 * C2677 - C31628 * C2666 -
             C31627 * C2678 + C152846 * C2690) *
                C152696 * C152893) *
               C152886) *
              C152512 * C3495 +
          (((C32307 + C32306) * C152696 * C152893 +
            (C32305 + C32304) * C152696 * C152894 + C32733 * C23411) *
               C152922 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C152925 -
           ((C32314 + C32315) * C152696 * C23411 +
            (C32311 + C32310) * C152696 * C152894 +
            (C32309 + C32308) * C152696 * C152893) *
               C152909 +
           ((C35463 + C35462) * C152696 * C152893 +
            (C35461 + C35460) * C152696 * C152894 +
            (C31627 * C2671 - C31628 * C2663 - C31627 * C2672 +
             C152846 * C2687 + C31629 * C2685 - C31630 * C2670 -
             C31629 * C2686 + C152775 * C2694) *
                C152696 * C23411) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152613 -
           (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152696 * C152893) *
               C152620 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152696 * C152893 +
            (C32308 + C32309) * C152696 * C152894 + C32319 * C23411) *
               C5033) *
              C152512 * C152489 +
          (((C32307 + C32306) * C152696 * C152893 +
            (C32305 + C32304) * C152696 * C152894 + C32733 * C23411) *
               C152620 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C152613 -
           ((C32314 + C32315) * C152696 * C23411 +
            (C32311 + C32310) * C152696 * C152894 +
            (C32309 + C32308) * C152696 * C152893) *
               C5033) *
              C152512 * C152498 +
          ((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
            C31707 * C23411) *
               C152613 -
           ((C32738 + C32739) * C152696 * C23411 +
            (C32313 + C32312) * C152696 * C152894 + C32318 * C152893) *
               C152620 +
           (C32319 * C152893 + (C32315 + C32314) * C152696 * C152894 +
            (C31627 * C659 - C31628 * C638 - C31627 * C660 + C152846 * C674 +
             C31629 * C3052 - C31630 * C3051 - C31629 * C3053 +
             C152775 * C3054) *
                C152696 * C23411) *
               C5033) *
              C152512 * C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C4361 -
           (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152696 * C152893) *
               C152617) *
              C152512 * C152923 +
          (((C32307 + C32306) * C152696 * C152893 +
            (C32305 + C32304) * C152696 * C152894 + C32733 * C23411) *
               C152617 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C4361) *
              C152512 * C152916 +
          ((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
            C31707 * C23411) *
               C4361 -
           ((C32738 + C32739) * C152696 * C23411 +
            (C32313 + C32312) * C152696 * C152894 + C32318 * C152893) *
               C152617) *
              C152512 * C152899 +
          ((C32733 * C152893 + (C32739 + C32738) * C152696 * C152894 +
            (C31627 * C661 - C31628 * C639 - C31627 * C662 + C152846 * C675 +
             C31629 * C663 - C31630 * C640 - C31629 * C664 + C152775 * C676) *
                C152696 * C23411) *
               C152617 -
           ((C31700 + C31701) * C152696 * C23411 +
            (C31699 + C31698) * C152696 * C152894 + C31706 * C152893) *
               C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152696 * C152893 +
             (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
                C4361 -
            (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152696 * C152893) *
                C152617) *
               C152917 +
           (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
              C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
              C31629 * C1720 + C152775 * C1740) *
                 C152696 * C152893 +
             (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
                C152617 -
            (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
             (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
              C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
              C152846 * C407) *
                 C152696 * C152893) *
                C4361) *
               C152901 +
           (((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
              C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
              C152775 * C1744) *
                 C152696 * C152893 +
             (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
                C4361 -
            ((C34168 + C34169) * C152696 * C23411 +
             (C34170 + C34171) * C152696 * C152894 +
             (C31629 * C1729 - C31630 * C1709 - C31629 * C1730 +
              C152775 * C1745 + C31627 * C1727 - C31628 * C1708 -
              C31627 * C1728 + C152846 * C1744) *
                 C152696 * C152893) *
                C152617) *
               C152870) *
              C3495 +
          ((((C32307 + C32306) * C152696 * C152893 +
             (C32305 + C32304) * C152696 * C152894 + C32733 * C23411) *
                C152617 -
            (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
             (C31693 + C31692) * C152696 * C152893) *
                C4361) *
               C152917 +
           (((C32001 + C32000) * C152696 * C152893 +
             (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
                C4361 -
            ((C33070 + C33071) * C152696 * C23411 +
             (C33069 + C33068) * C152696 * C152894 +
             (C33067 + C33066) * C152696 * C152893) *
                C152617) *
               C152901 +
           (((C34171 + C34170) * C152696 * C152893 +
             (C34169 + C34168) * C152696 * C152894 +
             (C31627 * C1721 - C31628 * C1705 - C31627 * C1722 +
              C152846 * C1741 + C31629 * C1735 - C31630 * C1712 -
              C31629 * C1736 + C152775 * C1748) *
                 C152696 * C23411) *
                C152617 -
            ((C32008 + C32009) * C152696 * C23411 +
             (C32005 + C32004) * C152696 * C152894 +
             (C32003 + C32002) * C152696 * C152893) *
                C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152530 * C152828 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C152530 * C152575) *
              C873 +
          (((C32001 + C32000) * C152696 * C152893 +
            (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
               C152530 * C152575 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C152530 * C152828) *
              C874 +
          ((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
            C31707 * C23411) *
               C152530 * C152828 -
           ((C32528 + C32529) * C152696 * C23411 +
            (C32007 + C32006) * C152696 * C152894 + C32012 * C152893) *
               C152530 * C152575) *
              C875 +
          ((C32523 * C152893 + (C32529 + C32528) * C152696 * C152894 +
            (C31627 * C400 - C31628 * C378 - C31627 * C401 + C152846 * C414 +
             C31629 * C1243 - C31630 * C1232 - C31629 * C1244 +
             C152775 * C1250) *
                C152696 * C23411) *
               C152530 * C152575 -
           ((C31700 + C31701) * C152696 * C23411 +
            (C31699 + C31698) * C152696 * C152894 + C31706 * C152893) *
               C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152530 * C1879 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C152530 * C1880 +
           ((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
             C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
             C152775 * C1744) *
                C152696 * C152893 +
            (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
               C152530 * C1881 -
           ((C33850 + C33851) * C152696 * C23411 +
            (C33852 + C33853) * C152696 * C152894 +
            (C31629 * C2269 - C31630 * C2265 - C31629 * C2270 +
             C152775 * C2277 + C31627 * C1537 - C31628 * C1526 -
             C31627 * C1538 + C152846 * C1550) *
                C152696 * C152893) *
               C152530 * C152880) *
              C152814 +
          (((C32001 + C32000) * C152696 * C152893 +
            (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
               C152530 * C1880 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C152530 * C1879 -
           ((C32008 + C32009) * C152696 * C23411 +
            (C32005 + C32004) * C152696 * C152894 +
            (C32003 + C32002) * C152696 * C152893) *
               C152530 * C1881 +
           ((C33853 + C33852) * C152696 * C152893 +
            (C33851 + C33850) * C152696 * C152894 +
            (C31627 * C1531 - C31628 * C1523 - C31627 * C1532 +
             C152846 * C1547 + C31629 * C2275 - C31630 * C2268 -
             C31629 * C2276 + C152775 * C2280) *
                C152696 * C23411) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152696 * C152893 +
             (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
                C152829 -
            (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152696 * C152893) *
                C152617) *
               C152828 +
           (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
              C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
              C31629 * C1720 + C152775 * C1740) *
                 C152696 * C152893 +
             (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
                C152617 -
            (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
             (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
              C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
              C152846 * C407) *
                 C152696 * C152893) *
                C152829) *
               C152575) *
              C365 +
          ((((C32307 + C32306) * C152696 * C152893 +
             (C32305 + C32304) * C152696 * C152894 + C32733 * C23411) *
                C152617 -
            (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
             (C31693 + C31692) * C152696 * C152893) *
                C152829) *
               C152828 +
           (((C32001 + C32000) * C152696 * C152893 +
             (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
                C152829 -
            ((C33070 + C33071) * C152696 * C23411 +
             (C33069 + C33068) * C152696 * C152894 +
             (C33067 + C33066) * C152696 * C152893) *
                C152617) *
               C152575) *
              C366 +
          (((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
             C31707 * C23411) *
                C152829 -
            ((C32738 + C32739) * C152696 * C23411 +
             (C32313 + C32312) * C152696 * C152894 + C32318 * C152893) *
                C152617) *
               C152828 +
           ((C33073 * C152893 + (C33071 + C33070) * C152696 * C152894 +
             (C31627 * C1241 - C31628 * C1231 - C31627 * C1242 +
              C152846 * C1249 + C31629 * C2890 - C31630 * C2889 -
              C31629 * C2891 + C152775 * C2892) *
                 C152696 * C23411) *
                C152617 -
            ((C32528 + C32529) * C152696 * C23411 +
             (C32007 + C32006) * C152696 * C152894 + C32012 * C152893) *
                C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152829 -
           (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152696 * C152893) *
               C152617) *
              C1879 +
          (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
             C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
             C31629 * C1720 + C152775 * C1740) *
                C152696 * C152893 +
            (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
               C152617 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C152829) *
              C1880 +
          (((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
             C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
             C152775 * C1744) *
                C152696 * C152893 +
            (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
               C152829 -
           ((C34168 + C34169) * C152696 * C23411 +
            (C34170 + C34171) * C152696 * C152894 +
            (C31629 * C1729 - C31630 * C1709 - C31629 * C1730 +
             C152775 * C1745 + C31627 * C1727 - C31628 * C1708 -
             C31627 * C1728 + C152846 * C1744) *
                C152696 * C152893) *
               C152617) *
              C1881 +
          (((C31627 * C2269 - C31628 * C2265 - C31627 * C2270 +
             C152846 * C2277 + C31629 * C8185 - C31630 * C8178 -
             C31629 * C8186 + C152775 * C8196) *
                C152696 * C152893 +
            (C31627 * C2271 - C31628 * C2266 - C31627 * C2272 +
             C152846 * C2278 + C31629 * C8183 - C31630 * C8177 -
             C31629 * C8184 + C152775 * C8195) *
                C152696 * C152894 +
            (C31627 * C2273 - C31628 * C2267 - C31627 * C2274 +
             C152846 * C2279 + C31629 * C9823 - C31630 * C9822 -
             C31629 * C9824 + C152775 * C9825) *
                C152696 * C23411) *
               C152617 -
           ((C33850 + C33851) * C152696 * C23411 +
            (C33852 + C33853) * C152696 * C152894 +
            (C31629 * C2269 - C31630 * C2265 - C31629 * C2270 +
             C152775 * C2277 + C31627 * C1537 - C31628 * C1526 -
             C31627 * C1538 + C152846 * C1550) *
                C152696 * C152893) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152530 * C152917 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C152530 * C152901 +
           ((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
             C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
             C152775 * C1744) *
                C152696 * C152893 +
            (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
               C152530 * C152870) *
              C365 +
          (((C32001 + C32000) * C152696 * C152893 +
            (C31999 + C31998) * C152696 * C152894 +
            (C32006 + C32007) * C152696 * C23411) *
               C152530 * C152901 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C152530 * C152917 -
           ((C32008 + C32009) * C152696 * C23411 +
            (C32005 + C32004) * C152696 * C152894 +
            (C32003 + C32002) * C152696 * C152893) *
               C152530 * C152870) *
              C366 +
          ((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
            C31707 * C23411) *
               C152530 * C152917 -
           ((C31629 * C1241 - C31630 * C1231 - C31629 * C1242 +
             C152775 * C1249 + C31627 * C396 - C31628 * C376 - C31627 * C397 +
             C152846 * C412) *
                C152696 * C23411 +
            (C32007 + C32006) * C152696 * C152894 + C32012 * C152893) *
               C152530 * C152901 +
           (C32013 * C152893 + (C32009 + C32008) * C152696 * C152894 +
            (C31627 * C398 - C31628 * C377 - C31627 * C399 + C152846 * C413 +
             C31629 * C2108 - C31630 * C2107 - C31629 * C2109 +
             C152775 * C2110) *
                C152696 * C23411) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
            C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
               C152696 * C152893 +
           (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
              C152530 * C152512 * C129 -
          (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
           (C31693 + C31692) * C152696 * C152893) *
              C152530 * C152512 * C130 +
          (C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
           C31707 * C23411) *
              C152530 * C152512 * C131 -
          ((C31700 + C31701) * C152696 * C23411 +
           (C31699 + C31698) * C152696 * C152894 + C31706 * C152893) *
              C152530 * C152512 * C132 +
          (C31707 * C152893 + (C31701 + C31700) * C152696 * C152894 +
           (C31627 * C156 - C31628 * C142 - C31627 * C157 + C152846 * C166 +
            C31629 * C1022 - C31630 * C1021 - C31629 * C1023 +
            C152775 * C1024) *
               C152696 * C23411) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152918 -
           (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152696 * C152893) *
               C152903 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152696 * C152893 +
            (C32308 + C32309) * C152696 * C152894 + C32319 * C23411) *
               C152873) *
              C152512 * C365 +
          (((C32307 + C32306) * C152696 * C152893 +
            (C32305 + C32304) * C152696 * C152894 +
            (C32312 + C32313) * C152696 * C23411) *
               C152903 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C152918 -
           ((C32314 + C32315) * C152696 * C23411 +
            (C32311 + C32310) * C152696 * C152894 +
            (C32309 + C32308) * C152696 * C152893) *
               C152873) *
              C152512 * C366 +
          ((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
            C31707 * C23411) *
               C152918 -
           ((C31629 * C659 - C31630 * C638 - C31629 * C660 + C152775 * C674 +
             C31627 * C657 - C31628 * C637 - C31627 * C658 + C152846 * C673) *
                C152696 * C23411 +
            (C32313 + C32312) * C152696 * C152894 + C32318 * C152893) *
               C152903 +
           (C32319 * C152893 + (C32315 + C32314) * C152696 * C152894 +
            (C31627 * C659 - C31628 * C638 - C31627 * C660 + C152846 * C674 +
             C31629 * C3052 - C31630 * C3051 - C31629 * C3053 +
             C152775 * C3054) *
                C152696 * C23411) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152530 * C1429 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C152530 * C1430 +
           ((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
             C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
             C152775 * C1744) *
                C152696 * C152893 +
            (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
               C152530 * C152870) *
              C152914 +
          (((C32001 + C32000) * C152696 * C152893 +
            (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
               C152530 * C1430 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C152530 * C1429 -
           ((C32008 + C32009) * C152696 * C23411 +
            (C32005 + C32004) * C152696 * C152894 +
            (C32003 + C32002) * C152696 * C152893) *
               C152530 * C152870) *
              C152897 +
          ((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
            C31707 * C23411) *
               C152530 * C1429 -
           ((C32528 + C32529) * C152696 * C23411 +
            (C32007 + C32006) * C152696 * C152894 + C32012 * C152893) *
               C152530 * C1430 +
           (C32013 * C152893 + (C32009 + C32008) * C152696 * C152894 +
            (C31627 * C398 - C31628 * C377 - C31627 * C399 + C152846 * C413 +
             C31629 * C2108 - C31630 * C2107 - C31629 * C2109 +
             C152775 * C2110) *
                C152696 * C23411) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
            C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
               C152696 * C152893 +
           (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
              C152530 * C1517 -
          (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
           (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 + C152775 * C1245 +
            C31627 * C386 - C31628 * C371 - C31627 * C387 + C152846 * C407) *
               C152696 * C152893) *
              C152530 * C1518 +
          ((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
            C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
            C152775 * C1744) *
               C152696 * C152893 +
           (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
              C152530 * C1519 -
          ((C31629 * C2273 - C31630 * C2267 - C31629 * C2274 + C152775 * C2279 +
            C31627 * C1533 - C31628 * C1524 - C31627 * C1534 +
            C152846 * C1548) *
               C152696 * C23411 +
           (C31629 * C2271 - C31630 * C2266 - C31629 * C2272 + C152775 * C2278 +
            C31627 * C1535 - C31628 * C1525 - C31627 * C1536 +
            C152846 * C1549) *
               C152696 * C152894 +
           (C31629 * C2269 - C31630 * C2265 - C31629 * C2270 + C152775 * C2277 +
            C31627 * C1537 - C31628 * C1526 - C31627 * C1538 +
            C152846 * C1550) *
               C152696 * C152893) *
              C152530 * C1520 +
          ((C31627 * C1539 - C31628 * C1527 - C31627 * C1540 + C152846 * C1551 +
            C31629 * C8189 - C31630 * C8180 - C31629 * C8190 +
            C152775 * C8198) *
               C152696 * C152893 +
           (C31627 * C1541 - C31628 * C1528 - C31627 * C1542 + C152846 * C1552 +
            C31629 * C8187 - C31630 * C8179 - C31629 * C8188 +
            C152775 * C8197) *
               C152696 * C152894 +
           (C31627 * C1543 - C31628 * C1529 - C31627 * C1544 + C152846 * C1553 +
            C31629 * C8728 - C31630 * C8727 - C31629 * C8729 +
            C152775 * C8730) *
               C152696 * C23411) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152918 -
           (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152696 * C152893) *
               C152903 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152696 * C152893 +
            (C32308 + C32309) * C152696 * C152894 + C32319 * C23411) *
               C152873) *
              C1429 +
          (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
             C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
             C31629 * C1720 + C152775 * C1740) *
                C152696 * C152893 +
            (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
               C152903 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C152918 -
           ((C31629 * C3217 - C31630 * C3211 - C31629 * C3218 +
             C152775 * C3223 + C31627 * C1715 - C31628 * C1702 -
             C31627 * C1716 + C152846 * C1738) *
                C152696 * C23411 +
            (C31629 * C3215 - C31630 * C3210 - C31629 * C3216 +
             C152775 * C3222 + C31627 * C1717 - C31628 * C1703 -
             C31627 * C1718 + C152846 * C1739) *
                C152696 * C152894 +
            (C31629 * C3213 - C31630 * C3209 - C31629 * C3214 +
             C152775 * C3221 + C31627 * C1719 - C31628 * C1704 -
             C31627 * C1720 + C152846 * C1740) *
                C152696 * C152893) *
               C152873) *
              C1430 +
          (((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
             C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
             C152775 * C1744) *
                C152696 * C152893 +
            (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
               C152918 -
           ((C31629 * C1733 - C31630 * C1711 - C31629 * C1734 +
             C152775 * C1747 + C31627 * C1723 - C31628 * C1706 -
             C31627 * C1724 + C152846 * C1742) *
                C152696 * C23411 +
            (C31629 * C1731 - C31630 * C1710 - C31629 * C1732 +
             C152775 * C1746 + C31627 * C1725 - C31628 * C1707 -
             C31627 * C1726 + C152846 * C1743) *
                C152696 * C152894 +
            (C31629 * C1729 - C31630 * C1709 - C31629 * C1730 +
             C152775 * C1745 + C31627 * C1727 - C31628 * C1708 -
             C31627 * C1728 + C152846 * C1744) *
                C152696 * C152893) *
               C152903 +
           ((C31627 * C1729 - C31628 * C1709 - C31627 * C1730 +
             C152846 * C1745 + C31629 * C9516 - C31630 * C9509 -
             C31629 * C9517 + C152775 * C9527) *
                C152696 * C152893 +
            (C31627 * C1731 - C31628 * C1710 - C31627 * C1732 +
             C152846 * C1746 + C31629 * C9514 - C31630 * C9508 -
             C31629 * C9515 + C152775 * C9526) *
                C152696 * C152894 +
            (C31627 * C1733 - C31628 * C1711 - C31627 * C1734 +
             C152846 * C1747 + C31629 * C10024 - C31630 * C10023 -
             C31629 * C10025 + C152775 * C10026) *
                C152696 * C23411) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152829 -
           (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152696 * C152893) *
               C152617) *
              C152512 * C873 +
          (((C32307 + C32306) * C152696 * C152893 +
            (C32305 + C32304) * C152696 * C152894 + C32733 * C23411) *
               C152617 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C152829) *
              C152512 * C874 +
          ((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
            C31707 * C23411) *
               C152829 -
           ((C32738 + C32739) * C152696 * C23411 +
            (C32313 + C32312) * C152696 * C152894 + C32318 * C152893) *
               C152617) *
              C152512 * C875 +
          ((C32733 * C152893 + (C32739 + C32738) * C152696 * C152894 +
            (C31627 * C661 - C31628 * C639 - C31627 * C662 + C152846 * C675 +
             C31629 * C663 - C31630 * C640 - C31629 * C664 + C152775 * C676) *
                C152696 * C23411) *
               C152617 -
           ((C31700 + C31701) * C152696 * C23411 +
            (C31699 + C31698) * C152696 * C152894 + C31706 * C152893) *
               C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152696 * C152893 +
             (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
                C152829 -
            (C32318 * C23411 + (C32306 + C32307) * C152696 * C152894 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152696 * C152893) *
                C152617) *
               C1429 +
           (((C31627 * C1233 - C31628 * C1227 - C31627 * C1234 +
              C152846 * C1245 + C31629 * C1719 - C31630 * C1704 -
              C31629 * C1720 + C152775 * C1740) *
                 C152696 * C152893 +
             (C33066 + C33067) * C152696 * C152894 + C33073 * C23411) *
                C152617 -
            (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
             (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
              C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
              C152846 * C407) *
                 C152696 * C152893) *
                C152829) *
               C1430 +
           (((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
              C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
              C152775 * C1744) *
                 C152696 * C152893 +
             (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
                C152829 -
            ((C34168 + C34169) * C152696 * C23411 +
             (C34170 + C34171) * C152696 * C152894 +
             (C31629 * C1729 - C31630 * C1709 - C31629 * C1730 +
              C152775 * C1745 + C31627 * C1727 - C31628 * C1708 -
              C31627 * C1728 + C152846 * C1744) *
                 C152696 * C152893) *
                C152617) *
               C152870) *
              C152814 +
          ((((C32307 + C32306) * C152696 * C152893 +
             (C32305 + C32304) * C152696 * C152894 + C32733 * C23411) *
                C152617 -
            (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
             (C31693 + C31692) * C152696 * C152893) *
                C152829) *
               C1429 +
           (((C32001 + C32000) * C152696 * C152893 +
             (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
                C152829 -
            ((C33070 + C33071) * C152696 * C23411 +
             (C33069 + C33068) * C152696 * C152894 +
             (C33067 + C33066) * C152696 * C152893) *
                C152617) *
               C1430 +
           (((C34171 + C34170) * C152696 * C152893 +
             (C34169 + C34168) * C152696 * C152894 +
             (C31627 * C1721 - C31628 * C1705 - C31627 * C1722 +
              C152846 * C1741 + C31629 * C1735 - C31630 * C1712 -
              C31629 * C1736 + C152775 * C1748) *
                 C152696 * C23411) *
                C152617 -
            ((C32008 + C32009) * C152696 * C23411 +
             (C32005 + C32004) * C152696 * C152894 +
             (C32003 + C32002) * C152696 * C152893) *
                C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
            C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
               C152696 * C152893 +
           (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
              C152530 * C152512 * C129 -
          (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
           (C31693 + C31692) * C152696 * C152893) *
              C152530 * C152512 * C130 +
          (C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
           C31707 * C23411) *
              C152530 * C152512 * C131 -
          ((C31700 + C31701) * C152696 * C23411 +
           (C31699 + C31698) * C152696 * C152894 + C31706 * C152893) *
              C152530 * C152512 * C132 +
          (C31707 * C152893 + (C31701 + C31700) * C152696 * C152894 +
           (C31627 * C156 - C31628 * C142 - C31627 * C157 + C152846 * C166 +
            C31629 * C1022 - C31630 * C1021 - C31629 * C1023 +
            C152775 * C1024) *
               C152696 * C23411) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152530 * C152917 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C152530 * C152901 +
           ((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
             C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
             C152775 * C1744) *
                C152696 * C152893 +
            (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
               C152530 * C152870) *
              C365 +
          (((C32001 + C32000) * C152696 * C152893 +
            (C31999 + C31998) * C152696 * C152894 +
            (C32006 + C32007) * C152696 * C23411) *
               C152530 * C152901 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C152530 * C152917 -
           ((C32008 + C32009) * C152696 * C23411 +
            (C32005 + C32004) * C152696 * C152894 +
            (C32003 + C32002) * C152696 * C152893) *
               C152530 * C152870) *
              C366 +
          ((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
            C31707 * C23411) *
               C152530 * C152917 -
           ((C31629 * C1241 - C31630 * C1231 - C31629 * C1242 +
             C152775 * C1249 + C31627 * C396 - C31628 * C376 - C31627 * C397 +
             C152846 * C412) *
                C152696 * C23411 +
            (C32007 + C32006) * C152696 * C152894 + C32012 * C152893) *
               C152530 * C152901 +
           (C32013 * C152893 + (C32009 + C32008) * C152696 * C152894 +
            (C31627 * C398 - C31628 * C377 - C31627 * C399 + C152846 * C413 +
             C31629 * C2108 - C31630 * C2107 - C31629 * C2109 +
             C152775 * C2110) *
                C152696 * C23411) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152696 * C152893 +
            (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
               C152530 * C1429 -
           (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
            (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 +
             C152775 * C1245 + C31627 * C386 - C31628 * C371 - C31627 * C387 +
             C152846 * C407) *
                C152696 * C152893) *
               C152530 * C1430 +
           ((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
             C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
             C152775 * C1744) *
                C152696 * C152893 +
            (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
               C152530 * C152870) *
              C152914 +
          (((C32001 + C32000) * C152696 * C152893 +
            (C31999 + C31998) * C152696 * C152894 + C32523 * C23411) *
               C152530 * C1430 -
           (C31706 * C23411 + (C31695 + C31694) * C152696 * C152894 +
            (C31693 + C31692) * C152696 * C152893) *
               C152530 * C1429 -
           ((C32008 + C32009) * C152696 * C23411 +
            (C32005 + C32004) * C152696 * C152894 +
            (C32003 + C32002) * C152696 * C152893) *
               C152530 * C152870) *
              C152897 +
          ((C31705 * C152893 + (C31697 + C31696) * C152696 * C152894 +
            C31707 * C23411) *
               C152530 * C1429 -
           ((C32528 + C32529) * C152696 * C23411 +
            (C32007 + C32006) * C152696 * C152894 + C32012 * C152893) *
               C152530 * C1430 +
           (C32013 * C152893 + (C32009 + C32008) * C152696 * C152894 +
            (C31627 * C398 - C31628 * C377 - C31627 * C399 + C152846 * C413 +
             C31629 * C2108 - C31630 * C2107 - C31629 * C2109 +
             C152775 * C2110) *
                C152696 * C23411) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
            C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
               C152696 * C152893 +
           (C31692 + C31693) * C152696 * C152894 + C31705 * C23411) *
              C152530 * C1517 -
          (C32012 * C23411 + (C32000 + C32001) * C152696 * C152894 +
           (C31629 * C1233 - C31630 * C1227 - C31629 * C1234 + C152775 * C1245 +
            C31627 * C386 - C31628 * C371 - C31627 * C387 + C152846 * C407) *
               C152696 * C152893) *
              C152530 * C1518 +
          ((C31627 * C388 - C31628 * C372 - C31627 * C389 + C152846 * C408 +
            C31629 * C1727 - C31630 * C1708 - C31629 * C1728 +
            C152775 * C1744) *
               C152696 * C152893 +
           (C32002 + C32003) * C152696 * C152894 + C32013 * C23411) *
              C152530 * C1519 -
          ((C31629 * C2273 - C31630 * C2267 - C31629 * C2274 + C152775 * C2279 +
            C31627 * C1533 - C31628 * C1524 - C31627 * C1534 +
            C152846 * C1548) *
               C152696 * C23411 +
           (C31629 * C2271 - C31630 * C2266 - C31629 * C2272 + C152775 * C2278 +
            C31627 * C1535 - C31628 * C1525 - C31627 * C1536 +
            C152846 * C1549) *
               C152696 * C152894 +
           (C31629 * C2269 - C31630 * C2265 - C31629 * C2270 + C152775 * C2277 +
            C31627 * C1537 - C31628 * C1526 - C31627 * C1538 +
            C152846 * C1550) *
               C152696 * C152893) *
              C152530 * C1520 +
          ((C31627 * C1539 - C31628 * C1527 - C31627 * C1540 + C152846 * C1551 +
            C31629 * C8189 - C31630 * C8180 - C31629 * C8190 +
            C152775 * C8198) *
               C152696 * C152893 +
           (C31627 * C1541 - C31628 * C1528 - C31627 * C1542 + C152846 * C1552 +
            C31629 * C8187 - C31630 * C8179 - C31629 * C8188 +
            C152775 * C8197) *
               C152696 * C152894 +
           (C31627 * C1543 - C31628 * C1529 - C31627 * C1544 + C152846 * C1553 +
            C31629 * C8728 - C31630 * C8727 - C31629 * C8729 +
            C152775 * C8730) *
               C152696 * C23411) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152530 * C152571 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152530 * C152578 +
           ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152530 * C3839) *
              C152489 +
          ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152530 *
               C152578 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
               C152571 -
           (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C152530 *
               C3839) *
              C152498 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152530 *
               C152571 -
           (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) * C152530 *
               C152578 +
           (C477 * C123 + C478 * C124 + C480 * C125 +
            (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                C152696 * C126) *
               C152530 * C3839) *
              C3842)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C152571 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C152578 +
           ((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152530 * C3839) *
              C152489 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C152578 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C152571 -
           ((C6620 + C6602 + C6603) * C152462 +
            (C6619 + C6590 + C6589) * C6341) *
               C152530 * C3839) *
              C152498 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152530 * C152571 -
           ((C7059 + C7060 + C7061) * C152462 +
            (C6597 + C6596 + C6595) * C6341) *
               C152530 * C152578 +
           ((C6603 + C6602 + C6620) * C6341 +
            (C470 * C6338 + C1908 * C6339 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C6340) *
                C152462) *
               C152530 * C3839) *
              C3842)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C152829 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C152617) *
               C152571 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C152617 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C152829) *
               C152578 +
           (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                 C152696 * C123 +
             C476 * C124 + C477 * C125 + C478 * C126) *
                C152829 -
            (C2133 * C126 + C2134 * C125 + C2135 * C124 +
             (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                 C152696 * C123) *
                C152617) *
               C3839) *
              C3495 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152617 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152829) *
               C152571 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152829 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C152617) *
               C152578 +
           ((C2135 * C123 + C2134 * C124 + C2133 * C125 +
             (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                 C152696 * C126) *
                C152617 -
            (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C152829) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C152829 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152617) *
               C152571 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152617 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C152829) *
               C152578 +
           (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
             (C6589 + C6590 + C6619) * C152462) *
                C152829 -
            ((C8741 + C8736 + C8737) * C152462 +
             (C8950 * C6340 + C8234 * C6339 + C7577 * C6338) * C6341) *
                C152617) *
               C3839) *
              C3495 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152617 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C152829) *
               C152571 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C152829 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152617) *
               C152578 +
           (((C8737 + C8736 + C8741) * C6341 +
             (C2131 * C6338 + C7580 * C6339 +
              (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                  C6340) *
                 C152462) *
                C152617 -
            ((C6620 + C6602 + C6603) * C152462 +
             (C6619 + C6590 + C6589) * C6341) *
                C152829) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152530 * C152924 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152530 * C152920 +
           ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152530 * C152906 -
           (C1911 * C126 + C1912 * C125 + C1913 * C124 +
            (C134 * C1537 - C135 * C1526 - C134 * C1538 + C152711 * C1550) *
                C152696 * C123) *
               C152530 * C152880) *
              C3495 +
          ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152530 *
               C152920 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
               C152924 -
           (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C152530 *
               C152906 +
           (C1913 * C123 + C1912 * C124 + C1911 * C125 +
            (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                C152696 * C126) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152530 * C3355 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152530 * C152575) *
              C152923 +
          ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152530 *
               C152575 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
               C3355) *
              C152916 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152530 *
               C3355 -
           (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) * C152530 *
               C152575) *
              C152899 +
          ((C473 * C123 + C479 * C124 + C889 * C125 +
            (C134 * C878 - C135 * C877 - C134 * C879 + C152711 * C880) *
                C152696 * C126) *
               C152530 * C152575 -
           (C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) * C152530 *
               C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C152918 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C152903 +
            ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152696 * C123 +
             C737 * C124 + C738 * C125 + C739 * C126) *
                C152873) *
               C3355 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C152903 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C152918 -
            (C2915 * C126 + C2916 * C125 + C2917 * C124 +
             (C134 * C1719 - C135 * C1704 - C134 * C1720 + C152711 * C1740) *
                 C152696 * C123) *
                C152873) *
               C152575) *
              C3495 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152903 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152918 -
            (C741 * C126 + C739 * C125 + C738 * C124 + C737 * C123) * C152873) *
               C3355 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152918 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C152903 +
            (C2917 * C123 + C2916 * C124 + C2915 * C125 +
             (C134 * C2890 - C135 * C2889 - C134 * C2891 + C152711 * C2892) *
                 C152696 * C126) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C3355 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C152575) *
              C152923 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C152575 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C3355) *
              C152916 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152530 * C3355 -
           ((C7059 + C7060 + C7061) * C152462 +
            (C6597 + C6596 + C6595) * C6341) *
               C152530 * C152575) *
              C152899 +
          (((C7061 + C7060 + C7059) * C6341 +
            (C471 * C6338 + C472 * C6339 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C6340) *
                C152462) *
               C152530 * C152575 -
           ((C6353 + C6354 + C6355) * C152462 +
            (C6352 + C6351 + C6350) * C6341) *
               C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C152924 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C152920 +
           ((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152530 * C152906 -
           ((C8435 + C8436 + C8437) * C152462 +
            (C7959 * C6340 + C7957 * C6339 + C6616 * C6338) * C6341) *
               C152530 * C152880) *
              C3495 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C152920 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C152924 -
           ((C6620 + C6602 + C6603) * C152462 +
            (C6619 + C6590 + C6589) * C6341) *
               C152530 * C152906 +
           ((C8437 + C8436 + C8435) * C6341 +
            (C1909 * C6338 + C6618 * C6339 +
             (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                 C6340) *
                C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C152918 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152903 +
            (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                  C6338 +
              C8232 * C6339 + C8233 * C6340) *
                 C6341 +
             (C6842 + C6843 + C6863) * C152462) *
                C152873) *
               C3355 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152903 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C152918 -
            ((C9827 + C9828 + C9829) * C152462 +
             (C8236 * C6340 + C8233 * C6339 + C8232 * C6338) * C6341) *
                C152873) *
               C152575) *
              C3495 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152903 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C152918 -
            ((C6864 + C6855 + C6856) * C152462 +
             (C6863 + C6843 + C6842) * C6341) *
                C152873) *
               C3355 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C152918 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152903 +
            ((C9829 + C9828 + C9827) * C6341 +
             (C2913 * C6338 + C6862 * C6339 +
              (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                  C6340) *
                 C152462) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C152829 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C152617) *
               C3355 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C152617 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C152829) *
               C152575) *
              C152489 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152617 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152829) *
               C3355 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152829 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C152617) *
               C152575) *
              C152498 +
          (((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152829 -
            (C1033 * C126 + C740 * C125 + C734 * C124 + C735 * C123) *
                C152617) *
               C3355 +
           ((C1281 * C123 + C1282 * C124 + C1283 * C125 +
             (C134 * C1243 - C135 * C1232 - C134 * C1244 + C152711 * C1250) *
                 C152696 * C126) *
                C152617 -
            (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) * C152829) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C152829 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152617) *
               C3355 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152617 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C152829) *
               C152575) *
              C152489 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152617 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C152829) *
               C3355 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C152829 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152617) *
               C152575) *
              C152498 +
          ((((C6349 + C6348 + C6347) * C6341 +
             (C6350 + C6351 + C6352) * C152462) *
                C152829 -
            ((C7256 + C7257 + C7258) * C152462 +
             (C6850 + C6849 + C6848) * C6341) *
                C152617) *
               C3355 +
           (((C7568 + C7567 + C7582) * C6341 +
             (C1278 * C6338 + C2130 * C6339 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C6340) *
                 C152462) *
                C152617 -
            ((C7059 + C7060 + C7061) * C152462 +
             (C6597 + C6596 + C6595) * C6341) *
                C152829) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152530 * C3355 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152530 * C152575) *
              C152923 +
          ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152530 *
               C152575 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
               C3355) *
              C152916 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152530 *
               C3355 -
           (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) * C152530 *
               C152575) *
              C152899 +
          ((C473 * C123 + C479 * C124 + C889 * C125 +
            (C134 * C878 - C135 * C877 - C134 * C879 + C152711 * C880) *
                C152696 * C126) *
               C152530 * C152575 -
           (C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) * C152530 *
               C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152530 * C152924 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152530 * C152920 +
           ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152530 * C152906 -
           (C1911 * C126 + C1912 * C125 + C1913 * C124 +
            (C134 * C1537 - C135 * C1526 - C134 * C1538 + C152711 * C1550) *
                C152696 * C123) *
               C152530 * C152880) *
              C3495 +
          ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152530 *
               C152920 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
               C152924 -
           (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C152530 *
               C152906 +
           (C1913 * C123 + C1912 * C124 + C1911 * C125 +
            (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                C152696 * C126) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C3355 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C152575) *
              C152923 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C152575 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C3355) *
              C152916 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152530 * C3355 -
           ((C7059 + C7060 + C7061) * C152462 +
            (C6597 + C6596 + C6595) * C6341) *
               C152530 * C152575) *
              C152899 +
          (((C7061 + C7060 + C7059) * C6341 +
            (C471 * C6338 + C472 * C6339 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C6340) *
                C152462) *
               C152530 * C152575 -
           ((C6353 + C6354 + C6355) * C152462 +
            (C6352 + C6351 + C6350) * C6341) *
               C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C152924 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C152920 +
           ((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152530 * C152906 -
           ((C8435 + C8436 + C8437) * C152462 +
            (C7959 * C6340 + C7957 * C6339 + C6616 * C6338) * C6341) *
               C152530 * C152880) *
              C3495 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C152920 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C152924 -
           ((C6620 + C6602 + C6603) * C152462 +
            (C6619 + C6590 + C6589) * C6341) *
               C152530 * C152906 +
           ((C8437 + C8436 + C8435) * C6341 +
            (C1909 * C6338 + C6618 * C6339 +
             (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                 C6340) *
                C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C4361 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C152617) *
               C152571 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C152617 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C4361) *
               C152578 +
           (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                 C152696 * C123 +
             C476 * C124 + C477 * C125 + C478 * C126) *
                C4361 -
            (C2133 * C126 + C2134 * C125 + C2135 * C124 +
             (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                 C152696 * C123) *
                C152617) *
               C3839) *
              C152814 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152617 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C4361) *
               C152571 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C4361 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C152617) *
               C152578 +
           ((C2135 * C123 + C2134 * C124 + C2133 * C125 +
             (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                 C152696 * C126) *
                C152617 -
            (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C4361) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C4361 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152617) *
               C152571 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152617 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C4361) *
               C152578 +
           (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
             (C6589 + C6590 + C6619) * C152462) *
                C4361 -
            ((C8741 + C8736 + C8737) * C152462 +
             (C8950 * C6340 + C8234 * C6339 + C7577 * C6338) * C6341) *
                C152617) *
               C3839) *
              C152814 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152617 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C4361) *
               C152571 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C4361 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152617) *
               C152578 +
           (((C8737 + C8736 + C8741) * C6341 +
             (C2131 * C6338 + C7580 * C6339 +
              (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                  C6340) *
                 C152462) *
                C152617 -
            ((C6620 + C6602 + C6603) * C152462 +
             (C6619 + C6590 + C6589) * C6341) *
                C4361) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152613 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C152620 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C152696 * C123 +
            C737 * C124 + C738 * C125 + C739 * C126) *
               C5033) *
              C152571 +
          (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                C152696 * C123 +
            C1280 * C124 + C1281 * C125 + C1282 * C126) *
               C152620 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152613 -
           (C2915 * C126 + C2916 * C125 + C2917 * C124 +
            (C134 * C1719 - C135 * C1704 - C134 * C1720 + C152711 * C1740) *
                C152696 * C123) *
               C5033) *
              C152578 +
          (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152613 -
           (C2133 * C126 + C2134 * C125 + C2135 * C124 +
            (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                C152696 * C123) *
               C152620 +
           ((C134 * C1729 - C135 * C1709 - C134 * C1730 + C152711 * C1745) *
                C152696 * C123 +
            (C134 * C1731 - C135 * C1710 - C134 * C1732 + C152711 * C1746) *
                C152696 * C124 +
            (C134 * C1733 - C135 * C1711 - C134 * C1734 + C152711 * C1747) *
                C152696 * C125 +
            (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                C152696 * C126) *
               C5033) *
              C3839) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152613 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152620 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             C8232 * C6339 + C8233 * C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C5033) *
              C152571 +
          (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
            (C7557 + C7558 + C7581) * C152462) *
               C152620 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152613 -
           ((C9827 + C9828 + C9829) * C152462 +
            (C8236 * C6340 + C8233 * C6339 + C8232 * C6338) * C6341) *
               C5033) *
              C152578 +
          (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152613 -
           ((C8741 + C8736 + C8737) * C152462 +
            (C8950 * C6340 + C8234 * C6339 + C7577 * C6338) * C6341) *
               C152620 +
           ((C8233 * C6338 + C8236 * C6339 +
             (C134 * C8191 - C135 * C8181 - C134 * C8192 + C152711 * C8199) *
                 C6340) *
                C6341 +
            (C6861 * C6338 + C8235 * C6339 +
             (C134 * C8193 - C135 * C8182 - C134 * C8194 + C152711 * C8200) *
                 C6340) *
                C152462) *
               C5033) *
              C3839) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C4361 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C152617) *
              C152924 +
          (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                C152696 * C123 +
            C1280 * C124 + C1281 * C125 + C1282 * C126) *
               C152617 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C4361) *
              C152920 +
          (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C4361 -
           (C2133 * C126 + C2134 * C125 + C2135 * C124 +
            (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                C152696 * C123) *
               C152617) *
              C152906 +
          (((C134 * C2269 - C135 * C2265 - C134 * C2270 + C152711 * C2277) *
                C152696 * C123 +
            (C134 * C2271 - C135 * C2266 - C134 * C2272 + C152711 * C2278) *
                C152696 * C124 +
            (C134 * C2273 - C135 * C2267 - C134 * C2274 + C152711 * C2279) *
                C152696 * C125 +
            (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                C152696 * C126) *
               C152617 -
           (C1911 * C126 + C1912 * C125 + C1913 * C124 +
            (C134 * C1537 - C135 * C1526 - C134 * C1538 + C152711 * C1550) *
                C152696 * C123) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C4361 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C152617) *
               C3355 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C152617 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C4361) *
               C152575) *
              C152914 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152617 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C4361) *
               C3355 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C4361 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C152617) *
               C152575) *
              C152897 +
          (((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C4361 -
            (C1033 * C126 + C740 * C125 + C734 * C124 + C735 * C123) *
                C152617) *
               C3355 +
           ((C1281 * C123 + C1282 * C124 + C1283 * C125 +
             (C134 * C1243 - C135 * C1232 - C134 * C1244 + C152711 * C1250) *
                 C152696 * C126) *
                C152617 -
            (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) * C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152925 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C152922 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C152696 * C123 +
            C737 * C124 + C738 * C125 + C739 * C126) *
               C152909 -
           (C3077 * C126 + C3078 * C125 + C3079 * C124 +
            (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                C152696 * C123) *
               C152886) *
              C3355 +
          (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                C152696 * C123 +
            C1280 * C124 + C1281 * C125 + C1282 * C126) *
               C152922 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152925 -
           (C2915 * C126 + C2916 * C125 + C2917 * C124 +
            (C134 * C1719 - C135 * C1704 - C134 * C1720 + C152711 * C1740) *
                C152696 * C123) *
               C152909 +
           ((C134 * C3213 - C135 * C3209 - C134 * C3214 + C152711 * C3221) *
                C152696 * C123 +
            (C134 * C3215 - C135 * C3210 - C134 * C3216 + C152711 * C3222) *
                C152696 * C124 +
            (C134 * C3217 - C135 * C3211 - C134 * C3218 + C152711 * C3223) *
                C152696 * C125 +
            (C134 * C3219 - C135 * C3212 - C134 * C3220 + C152711 * C3224) *
                C152696 * C126) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C4361 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152617) *
               C3355 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152617 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C4361) *
               C152575) *
              C152914 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152617 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C4361) *
               C3355 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C4361 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152617) *
               C152575) *
              C152897 +
          ((((C6349 + C6348 + C6347) * C6341 +
             (C6350 + C6351 + C6352) * C152462) *
                C4361 -
            ((C7256 + C7257 + C7258) * C152462 +
             (C6850 + C6849 + C6848) * C6341) *
                C152617) *
               C3355 +
           (((C7568 + C7567 + C7582) * C6341 +
             (C1278 * C6338 + C2130 * C6339 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C6340) *
                 C152462) *
                C152617 -
            ((C7059 + C7060 + C7061) * C152462 +
             (C6597 + C6596 + C6595) * C6341) *
                C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C4361 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152617) *
              C152924 +
          (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
            (C7557 + C7558 + C7581) * C152462) *
               C152617 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C4361) *
              C152920 +
          (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C4361 -
           ((C8741 + C8736 + C8737) * C152462 +
            (C8950 * C6340 + C8234 * C6339 + C7577 * C6338) * C6341) *
               C152617) *
              C152906 +
          (((C8234 * C6338 + C8950 * C6339 +
             (C134 * C8937 - C135 * C8935 - C134 * C8938 + C152711 * C8941) *
                 C6340) *
                C6341 +
            (C7579 * C6338 + C8740 * C6339 +
             (C134 * C8939 - C135 * C8936 - C134 * C8940 + C152711 * C8942) *
                 C6340) *
                C152462) *
               C152617 -
           ((C8435 + C8436 + C8437) * C152462 +
            (C7959 * C6340 + C7957 * C6339 + C6616 * C6338) * C6341) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152925 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152922 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             C8232 * C6339 + C8233 * C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C152909 -
           ((C10043 + C10044 + C10036) * C152462 +
            (C10259 * C6340 + C10260 * C6339 +
             (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                 C6338) *
                C6341) *
               C152886) *
              C3355 +
          (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
            (C7557 + C7558 + C7581) * C152462) *
               C152922 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152925 -
           ((C9827 + C9828 + C9829) * C152462 +
            (C8236 * C6340 + C8233 * C6339 + C8232 * C6338) * C6341) *
               C152909 +
           ((C10260 * C6338 + C10259 * C6339 +
             (C134 * C10240 - C135 * C10238 - C134 * C10241 +
              C152711 * C10244) *
                 C6340) *
                C6341 +
            (C10042 * C6338 + C10041 * C6339 +
             (C134 * C10242 - C135 * C10239 - C134 * C10243 +
              C152711 * C10245) *
                 C6340) *
                C152462) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C152613 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C152620 +
            ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152696 * C123 +
             C737 * C124 + C738 * C125 + C739 * C126) *
                C5033) *
               C3355 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C152620 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C152613 -
            (C2915 * C126 + C2916 * C125 + C2917 * C124 +
             (C134 * C1719 - C135 * C1704 - C134 * C1720 + C152711 * C1740) *
                 C152696 * C123) *
                C5033) *
               C152575) *
              C152814 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152620 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152613 -
            (C741 * C126 + C739 * C125 + C738 * C124 + C737 * C123) * C5033) *
               C3355 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152613 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C152620 +
            (C2917 * C123 + C2916 * C124 + C2915 * C125 +
             (C134 * C2890 - C135 * C2889 - C134 * C2891 + C152711 * C2892) *
                 C152696 * C126) *
                C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C152613 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152620 +
            (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                  C6338 +
              C8232 * C6339 + C8233 * C6340) *
                 C6341 +
             (C6842 + C6843 + C6863) * C152462) *
                C5033) *
               C3355 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152620 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C152613 -
            ((C9827 + C9828 + C9829) * C152462 +
             (C8236 * C6340 + C8233 * C6339 + C8232 * C6338) * C6341) *
                C5033) *
               C152575) *
              C152814 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152620 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C152613 -
            ((C6864 + C6855 + C6856) * C152462 +
             (C6863 + C6843 + C6842) * C6341) *
                C5033) *
               C3355 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C152613 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152620 +
            ((C9829 + C9828 + C9827) * C6341 +
             (C2913 * C6338 + C6862 * C6339 +
              (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                  C6340) *
                 C152462) *
                C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C4361 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C152617) *
               C3355 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C152617 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C4361) *
               C152575) *
              C152914 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152617 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C4361) *
               C3355 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C4361 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C152617) *
               C152575) *
              C152897 +
          (((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C4361 -
            (C1033 * C126 + C740 * C125 + C734 * C124 + C735 * C123) *
                C152617) *
               C3355 +
           ((C1281 * C123 + C1282 * C124 + C1283 * C125 +
             (C134 * C1243 - C135 * C1232 - C134 * C1244 + C152711 * C1250) *
                 C152696 * C126) *
                C152617 -
            (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) * C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C4361 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C152617) *
              C152924 +
          (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                C152696 * C123 +
            C1280 * C124 + C1281 * C125 + C1282 * C126) *
               C152617 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C4361) *
              C152920 +
          (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C4361 -
           (C2133 * C126 + C2134 * C125 + C2135 * C124 +
            (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                C152696 * C123) *
               C152617) *
              C152906 +
          (((C134 * C2269 - C135 * C2265 - C134 * C2270 + C152711 * C2277) *
                C152696 * C123 +
            (C134 * C2271 - C135 * C2266 - C134 * C2272 + C152711 * C2278) *
                C152696 * C124 +
            (C134 * C2273 - C135 * C2267 - C134 * C2274 + C152711 * C2279) *
                C152696 * C125 +
            (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                C152696 * C126) *
               C152617 -
           (C1911 * C126 + C1912 * C125 + C1913 * C124 +
            (C134 * C1537 - C135 * C1526 - C134 * C1538 + C152711 * C1550) *
                C152696 * C123) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C4361 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152617) *
               C3355 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152617 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C4361) *
               C152575) *
              C152914 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152617 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C4361) *
               C3355 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C4361 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152617) *
               C152575) *
              C152897 +
          ((((C6349 + C6348 + C6347) * C6341 +
             (C6350 + C6351 + C6352) * C152462) *
                C4361 -
            ((C7256 + C7257 + C7258) * C152462 +
             (C6850 + C6849 + C6848) * C6341) *
                C152617) *
               C3355 +
           (((C7568 + C7567 + C7582) * C6341 +
             (C1278 * C6338 + C2130 * C6339 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C6340) *
                 C152462) *
                C152617 -
            ((C7059 + C7060 + C7061) * C152462 +
             (C6597 + C6596 + C6595) * C6341) *
                C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C4361 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152617) *
              C152924 +
          (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
            (C7557 + C7558 + C7581) * C152462) *
               C152617 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C4361) *
              C152920 +
          (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C4361 -
           ((C8741 + C8736 + C8737) * C152462 +
            (C8950 * C6340 + C8234 * C6339 + C7577 * C6338) * C6341) *
               C152617) *
              C152906 +
          (((C8234 * C6338 + C8950 * C6339 +
             (C134 * C8937 - C135 * C8935 - C134 * C8938 + C152711 * C8941) *
                 C6340) *
                C6341 +
            (C7579 * C6338 + C8740 * C6339 +
             (C134 * C8939 - C135 * C8936 - C134 * C8940 + C152711 * C8942) *
                 C6340) *
                C152462) *
               C152617 -
           ((C8435 + C8436 + C8437) * C152462 +
            (C7959 * C6340 + C7957 * C6339 + C6616 * C6338) * C6341) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152530 * C1879 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152530 * C1880 +
           ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152530 * C1881 -
           (C1911 * C126 + C1912 * C125 + C1913 * C124 +
            (C134 * C1537 - C135 * C1526 - C134 * C1538 + C152711 * C1550) *
                C152696 * C123) *
               C152530 * C152880) *
              C152814 +
          ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152530 *
               C1880 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
               C1879 -
           (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C152530 *
               C1881 +
           (C1913 * C123 + C1912 * C124 + C1911 * C125 +
            (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                C152696 * C126) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152530 * C152828 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152530 * C152575) *
              C873 +
          ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152530 *
               C152575 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
               C152828) *
              C874 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152530 *
               C152828 -
           (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) * C152530 *
               C152575) *
              C875 +
          ((C473 * C123 + C479 * C124 + C889 * C125 +
            (C134 * C878 - C135 * C877 - C134 * C879 + C152711 * C880) *
                C152696 * C126) *
               C152530 * C152575 -
           (C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) * C152530 *
               C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C2427 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C2428 +
            ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152696 * C123 +
             C737 * C124 + C738 * C125 + C739 * C126) *
                C152873) *
               C152828 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C2428 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C2427 -
            (C2915 * C126 + C2916 * C125 + C2917 * C124 +
             (C134 * C1719 - C135 * C1704 - C134 * C1720 + C152711 * C1740) *
                 C152696 * C123) *
                C152873) *
               C152575) *
              C152814 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C2428 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C2427 -
            (C741 * C126 + C739 * C125 + C738 * C124 + C737 * C123) * C152873) *
               C152828 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C2427 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C2428 +
            (C2917 * C123 + C2916 * C124 + C2915 * C125 +
             (C134 * C2890 - C135 * C2889 - C134 * C2891 + C152711 * C2892) *
                 C152696 * C126) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C152828 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C152575) *
              C873 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C152575 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C152828) *
              C874 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152530 * C152828 -
           ((C7059 + C7060 + C7061) * C152462 +
            (C6597 + C6596 + C6595) * C6341) *
               C152530 * C152575) *
              C875 +
          (((C7061 + C7060 + C7059) * C6341 +
            (C471 * C6338 + C472 * C6339 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C6340) *
                C152462) *
               C152530 * C152575 -
           ((C6353 + C6354 + C6355) * C152462 +
            (C6352 + C6351 + C6350) * C6341) *
               C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C1879 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C1880 +
           ((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152530 * C1881 -
           ((C8435 + C8436 + C8437) * C152462 +
            (C7959 * C6340 + C7957 * C6339 + C6616 * C6338) * C6341) *
               C152530 * C152880) *
              C152814 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C1880 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C1879 -
           ((C6620 + C6602 + C6603) * C152462 +
            (C6619 + C6590 + C6589) * C6341) *
               C152530 * C1881 +
           ((C8437 + C8436 + C8435) * C6341 +
            (C1909 * C6338 + C6618 * C6339 +
             (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                 C6340) *
                C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C2427 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C2428 +
            (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                  C6338 +
              C8232 * C6339 + C8233 * C6340) *
                 C6341 +
             (C6842 + C6843 + C6863) * C152462) *
                C152873) *
               C152828 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C2428 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C2427 -
            ((C9827 + C9828 + C9829) * C152462 +
             (C8236 * C6340 + C8233 * C6339 + C8232 * C6338) * C6341) *
                C152873) *
               C152575) *
              C152814 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C2428 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C2427 -
            ((C6864 + C6855 + C6856) * C152462 +
             (C6863 + C6843 + C6842) * C6341) *
                C152873) *
               C152828 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C2427 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C2428 +
            ((C9829 + C9828 + C9827) * C6341 +
             (C2913 * C6338 + C6862 * C6339 +
              (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                  C6340) *
                 C152462) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152829 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C152617) *
              C1879 +
          (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                C152696 * C123 +
            C1280 * C124 + C1281 * C125 + C1282 * C126) *
               C152617 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152829) *
              C1880 +
          (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152829 -
           (C2133 * C126 + C2134 * C125 + C2135 * C124 +
            (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                C152696 * C123) *
               C152617) *
              C1881 +
          (((C134 * C2269 - C135 * C2265 - C134 * C2270 + C152711 * C2277) *
                C152696 * C123 +
            (C134 * C2271 - C135 * C2266 - C134 * C2272 + C152711 * C2278) *
                C152696 * C124 +
            (C134 * C2273 - C135 * C2267 - C134 * C2274 + C152711 * C2279) *
                C152696 * C125 +
            (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                C152696 * C126) *
               C152617 -
           (C1911 * C126 + C1912 * C125 + C1913 * C124 +
            (C134 * C1537 - C135 * C1526 - C134 * C1538 + C152711 * C1550) *
                C152696 * C123) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C152829 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C152617) *
               C152828 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C152617 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C152829) *
               C152575) *
              C365 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152617 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152829) *
               C152828 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152829 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C152617) *
               C152575) *
              C366 +
          (((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152829 -
            (C1033 * C126 + C740 * C125 + C734 * C124 + C735 * C123) *
                C152617) *
               C152828 +
           ((C1281 * C123 + C1282 * C124 + C1283 * C125 +
             (C134 * C1243 - C135 * C1232 - C134 * C1244 + C152711 * C1250) *
                 C152696 * C126) *
                C152617 -
            (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) * C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C3047 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C3048 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C152696 * C123 +
            C737 * C124 + C738 * C125 + C739 * C126) *
               C3049 -
           (C3077 * C126 + C3078 * C125 + C3079 * C124 +
            (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                C152696 * C123) *
               C152886) *
              C152828 +
          (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                C152696 * C123 +
            C1280 * C124 + C1281 * C125 + C1282 * C126) *
               C3048 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C3047 -
           (C2915 * C126 + C2916 * C125 + C2917 * C124 +
            (C134 * C1719 - C135 * C1704 - C134 * C1720 + C152711 * C1740) *
                C152696 * C123) *
               C3049 +
           ((C134 * C3213 - C135 * C3209 - C134 * C3214 + C152711 * C3221) *
                C152696 * C123 +
            (C134 * C3215 - C135 * C3210 - C134 * C3216 + C152711 * C3222) *
                C152696 * C124 +
            (C134 * C3217 - C135 * C3211 - C134 * C3218 + C152711 * C3223) *
                C152696 * C125 +
            (C134 * C3219 - C135 * C3212 - C134 * C3220 + C152711 * C3224) *
                C152696 * C126) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C152829 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152617) *
               C152828 +
           (((C7578 * C6338 + C7577 * C6339 +
              (C134 * C2269 - C135 * C2265 - C134 * C2270 + C152711 * C2277) *
                  C6340) *
                 C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152617 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C152829) *
               C152575) *
              C365 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152617 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C152829) *
               C152828 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C152829 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152617) *
               C152575) *
              C366 +
          ((((C6349 + C6348 + C6347) * C6341 +
             (C6350 + C6351 + C6352) * C152462) *
                C152829 -
            ((C7256 + C7257 + C7258) * C152462 +
             (C6850 + C6849 + C6848) * C6341) *
                C152617) *
               C152828 +
           (((C7568 + C7567 + C7582) * C6341 +
             (C1278 * C6338 + C2130 * C6339 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C6340) *
                 C152462) *
                C152617 -
            ((C7059 + C7060 + C7061) * C152462 +
             (C6597 + C6596 + C6595) * C6341) *
                C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152829 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152617) *
              C1879 +
          (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
            (C7557 + C7558 + C7581) * C152462) *
               C152617 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152829) *
              C1880 +
          (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152829 -
           ((C8741 + C8736 + C8737) * C152462 +
            (C8950 * C6340 + C8234 * C6339 + C7577 * C6338) * C6341) *
               C152617) *
              C1881 +
          (((C8234 * C6338 + C8950 * C6339 +
             (C134 * C8937 - C135 * C8935 - C134 * C8938 + C152711 * C8941) *
                 C6340) *
                C6341 +
            (C7579 * C6338 + C8740 * C6339 +
             (C134 * C8939 - C135 * C8936 - C134 * C8940 + C152711 * C8942) *
                 C6340) *
                C152462) *
               C152617 -
           ((C8435 + C8436 + C8437) * C152462 +
            (C7959 * C6340 + C7957 * C6339 + C6616 * C6338) * C6341) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C3047 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C3048 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             C8232 * C6339 + C8233 * C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C3049 -
           ((C10043 + C10044 + C10036) * C152462 +
            (C10259 * C6340 + C10260 * C6339 +
             (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                 C6338) *
                C6341) *
               C152886) *
              C152828 +
          (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
            (C7557 + C7558 + C7581) * C152462) *
               C3048 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C3047 -
           ((C9827 + C9828 + C9829) * C152462 +
            (C8236 * C6340 + C8233 * C6339 + C8232 * C6338) * C6341) *
               C3049 +
           ((C10260 * C6338 + C10259 * C6339 +
             (C134 * C10240 - C135 * C10238 - C134 * C10241 +
              C152711 * C10244) *
                 C6340) *
                C6341 +
            (C10042 * C6338 + C10041 * C6339 +
             (C134 * C10242 - C135 * C10239 - C134 * C10243 +
              C152711 * C10245) *
                 C6340) *
                C152462) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                   C152696 * C123 +
               C211 * C124 + C212 * C125 + C213 * C126) *
                  C152530 * C152512 * C129 -
              (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) *
                  C152530 * C152512 * C130 +
              (C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) *
                  C152530 * C152512 * C131 -
              (C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) *
                  C152530 * C152512 * C132 +
              (C214 * C123 + C215 * C124 + C216 * C125 +
               (C134 * C158 - C135 * C143 - C134 * C159 + C152711 * C167) *
                   C152696 * C126) *
                  C152530 * C152512 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                    C152696 * C123 +
                C211 * C124 + C212 * C125 + C213 * C126) *
                   C152530 * C152917 -
               (C473 * C126 + C474 * C125 + C475 * C124 +
                (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                    C152696 * C123) *
                   C152530 * C152901 +
               ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                    C152696 * C123 +
                C476 * C124 + C477 * C125 + C478 * C126) *
                   C152530 * C152870) *
                  C365 +
              ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) *
                   C152530 * C152901 -
               (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) *
                   C152530 * C152917 -
               (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) *
                   C152530 * C152870) *
                  C366 +
              ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) *
                   C152530 * C152917 -
               ((C134 * C400 - C135 * C378 - C134 * C401 + C152711 * C414) *
                    C152696 * C126 +
                C479 * C125 + C473 * C124 + C474 * C123) *
                   C152530 * C152901 +
               (C477 * C123 + C478 * C124 + C480 * C125 +
                (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                    C152696 * C126) *
                   C152530 * C152870) *
                  C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152918 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C152903 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C152696 * C123 +
            C737 * C124 + C738 * C125 + C739 * C126) *
               C152873) *
              C152512 * C365 +
          ((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152903 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152918 -
           (C741 * C126 + C739 * C125 + C738 * C124 + C737 * C123) * C152873) *
              C152512 * C366 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152918 -
           ((C134 * C661 - C135 * C639 - C134 * C662 + C152711 * C675) *
                C152696 * C126 +
            C740 * C125 + C734 * C124 + C735 * C123) *
               C152903 +
           (C738 * C123 + C739 * C124 + C741 * C125 +
            (C134 * C663 - C135 * C640 - C134 * C664 + C152711 * C676) *
                C152696 * C126) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152530 * C1429 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152530 * C1430 +
           ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152530 * C152870) *
              C152914 +
          ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152530 *
               C1430 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
               C1429 -
           (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C152530 *
               C152870) *
              C152897 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152530 *
               C1429 -
           (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) * C152530 *
               C1430 +
           (C477 * C123 + C478 * C124 + C480 * C125 +
            (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                C152696 * C126) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
               C152696 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126) *
              C152530 * C1517 -
          (C473 * C126 + C474 * C125 + C475 * C124 +
           (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
               C152696 * C123) *
              C152530 * C1518 +
          ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
               C152696 * C123 +
           C476 * C124 + C477 * C125 + C478 * C126) *
              C152530 * C1519 -
          ((C134 * C1531 - C135 * C1523 - C134 * C1532 + C152711 * C1547) *
               C152696 * C126 +
           (C134 * C1533 - C135 * C1524 - C134 * C1534 + C152711 * C1548) *
               C152696 * C125 +
           (C134 * C1535 - C135 * C1525 - C134 * C1536 + C152711 * C1549) *
               C152696 * C124 +
           (C134 * C1537 - C135 * C1526 - C134 * C1538 + C152711 * C1550) *
               C152696 * C123) *
              C152530 * C1520 +
          ((C134 * C1539 - C135 * C1527 - C134 * C1540 + C152711 * C1551) *
               C152696 * C123 +
           (C134 * C1541 - C135 * C1528 - C134 * C1542 + C152711 * C1552) *
               C152696 * C124 +
           (C134 * C1543 - C135 * C1529 - C134 * C1544 + C152711 * C1553) *
               C152696 * C125 +
           (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
               C152696 * C126) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152918 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C152903 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C152696 * C123 +
            C737 * C124 + C738 * C125 + C739 * C126) *
               C152873) *
              C1429 +
          (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                C152696 * C123 +
            C1280 * C124 + C1281 * C125 + C1282 * C126) *
               C152903 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152918 -
           ((C134 * C1713 - C135 * C1701 - C134 * C1714 + C152711 * C1737) *
                C152696 * C126 +
            (C134 * C1715 - C135 * C1702 - C134 * C1716 + C152711 * C1738) *
                C152696 * C125 +
            (C134 * C1717 - C135 * C1703 - C134 * C1718 + C152711 * C1739) *
                C152696 * C124 +
            (C134 * C1719 - C135 * C1704 - C134 * C1720 + C152711 * C1740) *
                C152696 * C123) *
               C152873) *
              C1430 +
          (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152918 -
           ((C134 * C1721 - C135 * C1705 - C134 * C1722 + C152711 * C1741) *
                C152696 * C126 +
            (C134 * C1723 - C135 * C1706 - C134 * C1724 + C152711 * C1742) *
                C152696 * C125 +
            (C134 * C1725 - C135 * C1707 - C134 * C1726 + C152711 * C1743) *
                C152696 * C124 +
            (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                C152696 * C123) *
               C152903 +
           ((C134 * C1729 - C135 * C1709 - C134 * C1730 + C152711 * C1745) *
                C152696 * C123 +
            (C134 * C1731 - C135 * C1710 - C134 * C1732 + C152711 * C1746) *
                C152696 * C124 +
            (C134 * C1733 - C135 * C1711 - C134 * C1734 + C152711 * C1747) *
                C152696 * C125 +
            (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                C152696 * C126) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C2427 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C2428 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C152696 * C123 +
            C737 * C124 + C738 * C125 + C739 * C126) *
               C152873) *
              C152512 * C152914 +
          ((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C2428 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C2427 -
           (C741 * C126 + C739 * C125 + C738 * C124 + C737 * C123) * C152873) *
              C152512 * C152897 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C2427 -
           (C1033 * C126 + C740 * C125 + C734 * C124 + C735 * C123) * C2428 +
           (C738 * C123 + C739 * C124 + C741 * C125 +
            (C134 * C663 - C135 * C640 - C134 * C664 + C152711 * C676) *
                C152696 * C126) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C2427 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C2428 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C152696 * C123 +
            C737 * C124 + C738 * C125 + C739 * C126) *
               C152873) *
              C152917 +
          (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                C152696 * C123 +
            C1280 * C124 + C1281 * C125 + C1282 * C126) *
               C2428 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C2427 -
           ((C134 * C1713 - C135 * C1701 - C134 * C1714 + C152711 * C1737) *
                C152696 * C126 +
            (C134 * C1715 - C135 * C1702 - C134 * C1716 + C152711 * C1738) *
                C152696 * C125 +
            (C134 * C1717 - C135 * C1703 - C134 * C1718 + C152711 * C1739) *
                C152696 * C124 +
            (C134 * C1719 - C135 * C1704 - C134 * C1720 + C152711 * C1740) *
                C152696 * C123) *
               C152873) *
              C152901 +
          (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C2427 -
           (C2133 * C126 + C2134 * C125 + C2135 * C124 +
            (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                C152696 * C123) *
               C2428 +
           ((C134 * C1729 - C135 * C1709 - C134 * C1730 + C152711 * C1745) *
                C152696 * C123 +
            (C134 * C1731 - C135 * C1710 - C134 * C1732 + C152711 * C1746) *
                C152696 * C124 +
            (C134 * C1733 - C135 * C1711 - C134 * C1734 + C152711 * C1747) *
                C152696 * C125 +
            (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                C152696 * C126) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
               C152696 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126) *
              C2658 -
          (C734 * C126 + C735 * C125 + C736 * C124 +
           (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
               C152696 * C123) *
              C2659 +
          ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
               C152696 * C123 +
           C737 * C124 + C738 * C125 + C739 * C126) *
              C2660 -
          ((C134 * C2671 - C135 * C2663 - C134 * C2672 + C152711 * C2687) *
               C152696 * C126 +
           (C134 * C2673 - C135 * C2664 - C134 * C2674 + C152711 * C2688) *
               C152696 * C125 +
           (C134 * C2675 - C135 * C2665 - C134 * C2676 + C152711 * C2689) *
               C152696 * C124 +
           (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
               C152696 * C123) *
              C2661 +
          ((C134 * C2679 - C135 * C2667 - C134 * C2680 + C152711 * C2691) *
               C152696 * C123 +
           (C134 * C2681 - C135 * C2668 - C134 * C2682 + C152711 * C2692) *
               C152696 * C124 +
           (C134 * C2683 - C135 * C2669 - C134 * C2684 + C152711 * C2693) *
               C152696 * C125 +
           (C134 * C2685 - C135 * C2670 - C134 * C2686 + C152711 * C2694) *
               C152696 * C126) *
              C2662) *
         C152512 * C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C6338 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) * C6339 +
            (C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C6340) *
               C6341 +
           (C6344 + C6345 + C6346) * C152462) *
              C152530 * C152512 * C129 -
          ((C6347 + C6348 + C6349) * C152462 +
           (C6346 + C6345 + C6344) * C6341) *
              C152530 * C152512 * C130 +
          ((C6349 + C6348 + C6347) * C6341 +
           (C6350 + C6351 + C6352) * C152462) *
              C152530 * C152512 * C131 -
          ((C6353 + C6354 + C6355) * C152462 +
           (C6352 + C6351 + C6350) * C6341) *
              C152530 * C152512 * C132 +
          ((C6355 + C6354 + C6353) * C6341 +
           (C209 * C6338 + C888 * C6339 +
            (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                C6340) *
               C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C152917 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C152901 +
           ((C6615 * C6338 + C6616 * C6339 +
             (C134 * C1539 - C135 * C1527 - C134 * C1540 + C152711 * C1551) *
                 C6340) *
                C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152530 * C152870) *
              C365 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C152901 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C152917 -
           ((C6620 + C6602 + C6603) * C152462 +
            (C6619 + C6590 + C6589) * C6341) *
               C152530 * C152870) *
              C366 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152530 * C152917 -
           ((C1908 * C6340 + C470 * C6339 + C465 * C6338) * C152462 +
            (C6597 + C6596 + C6595) * C6341) *
               C152530 * C152901 +
           ((C6603 + C6602 + C6620) * C6341 +
            (C470 * C6338 + C1908 * C6339 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C6340) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152918 -
           ((C6839 + C6840 + C6841) * C152462 +
            ((C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                 C6340 +
             (C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152903 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             (C134 * C1719 - C135 * C1704 - C134 * C1720 + C152711 * C1740) *
                 C6339 +
             (C134 * C1729 - C135 * C1709 - C134 * C1730 + C152711 * C1745) *
                 C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C152873) *
              C152512 * C365 +
          (((C6841 + C6840 + C6839) * C6341 +
            (C6848 + C6849 + C6850) * C152462) *
               C152903 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152918 -
           ((C6864 + C6855 + C6856) * C152462 +
            (C6863 + C6843 + C6842) * C6341) *
               C152873) *
              C152512 * C366 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152918 -
           ((C2130 * C6340 + C1278 * C6339 + C726 * C6338) * C152462 +
            (C6850 + C6849 + C6848) * C6341) *
               C152903 +
           ((C6856 + C6855 + C6864) * C6341 +
            (C731 * C6338 + C2912 * C6339 +
             (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                 C6340) *
                C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C1429 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C1430 +
           ((C6615 * C6338 + C6616 * C6339 +
             (C134 * C1539 - C135 * C1527 - C134 * C1540 + C152711 * C1551) *
                 C6340) *
                C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C1430 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C1429 -
           ((C6620 + C6602 + C6603) * C152462 +
            (C6619 + C6590 + C6589) * C6341) *
               C152530 * C152870) *
              C152897 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152530 * C1429 -
           ((C7059 + C7060 + C7061) * C152462 +
            (C6597 + C6596 + C6595) * C6341) *
               C152530 * C1430 +
           ((C6603 + C6602 + C6620) * C6341 +
            (C470 * C6338 + C1908 * C6339 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C6340) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C6338 +
            C6614 * C6339 + C6615 * C6340) *
               C6341 +
           (C6344 + C6345 + C6346) * C152462) *
              C152530 * C1517 -
          ((C6582 + C6583 + C6584) * C152462 +
           (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
              C152530 * C1518 +
          ((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
           (C6589 + C6590 + C6619) * C152462) *
              C152530 * C1519 -
          ((C7958 * C6340 + C6617 * C6339 + C1910 * C6338) * C152462 +
           (C7959 * C6340 + C7957 * C6339 + C6616 * C6338) * C6341) *
              C152530 * C1520 +
          ((C7957 * C6338 + C7959 * C6339 +
            (C134 * C7930 - C135 * C7924 - C134 * C7931 + C152711 * C7936) *
                C6340) *
               C6341 +
           (C6617 * C6338 + C7958 * C6339 +
            (C134 * C7932 - C135 * C7925 - C134 * C7933 + C152711 * C7937) *
                C6340) *
               C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152918 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152903 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             C8232 * C6339 + C8233 * C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C152873) *
              C1429 +
          (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
            (C7557 + C7558 + C7581) * C152462) *
               C152903 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152918 -
           ((C8235 * C6340 + C6861 * C6339 + C2914 * C6338) * C152462 +
            (C8236 * C6340 + C8233 * C6339 + C8232 * C6338) * C6341) *
               C152873) *
              C1430 +
          (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152918 -
           (((C134 * C8187 - C135 * C8179 - C134 * C8188 + C152711 * C8197) *
                 C6340 +
             C7579 * C6339 + C2132 * C6338) *
                C152462 +
            ((C134 * C8189 - C135 * C8180 - C134 * C8190 + C152711 * C8198) *
                 C6340 +
             C8234 * C6339 + C7577 * C6338) *
                C6341) *
               C152903 +
           ((C8233 * C6338 + C8236 * C6339 +
             (C134 * C8191 - C135 * C8181 - C134 * C8192 + C152711 * C8199) *
                 C6340) *
                C6341 +
            (C6861 * C6338 + C8235 * C6339 +
             (C134 * C8193 - C135 * C8182 - C134 * C8194 + C152711 * C8200) *
                 C6340) *
                C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C2427 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C2428 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             C8232 * C6339 + C8233 * C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C152873) *
              C152512 * C152914 +
          (((C6841 + C6840 + C6839) * C6341 +
            (C6848 + C6849 + C6850) * C152462) *
               C2428 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C2427 -
           ((C6864 + C6855 + C6856) * C152462 +
            (C6863 + C6843 + C6842) * C6341) *
               C152873) *
              C152512 * C152897 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C2427 -
           ((C7256 + C7257 + C7258) * C152462 +
            (C6850 + C6849 + C6848) * C6341) *
               C2428 +
           ((C6856 + C6855 + C6864) * C6341 +
            (C731 * C6338 + C2912 * C6339 +
             (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                 C6340) *
                C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C2427 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C2428 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             C8232 * C6339 + C8233 * C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C152873) *
              C152917 +
          (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
            (C7557 + C7558 + C7581) * C152462) *
               C2428 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C2427 -
           ((C8235 * C6340 + C6861 * C6339 + C2914 * C6338) * C152462 +
            (C8236 * C6340 + C8233 * C6339 + C8232 * C6338) * C6341) *
               C152873) *
              C152901 +
          (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C2427 -
           ((C8741 + C8736 + C8737) * C152462 +
            (C8950 * C6340 + C8234 * C6339 + C7577 * C6338) * C6341) *
               C2428 +
           ((C8233 * C6338 + C8236 * C6339 +
             (C134 * C8191 - C135 * C8181 - C134 * C8192 + C152711 * C8199) *
                 C6340) *
                C6341 +
            (C6861 * C6338 + C8235 * C6339 +
             (C134 * C8193 - C135 * C8182 - C134 * C8194 + C152711 * C8200) *
                 C6340) *
                C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C6338 +
            C6614 * C6339 + C6615 * C6340) *
               C6341 +
           (C6344 + C6345 + C6346) * C152462) *
              C2658 -
          ((C6839 + C6840 + C6841) * C152462 +
           (C7577 * C6340 + C7578 * C6339 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C6338) *
               C6341) *
              C2659 +
          (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) * C6338 +
            C8232 * C6339 + C8233 * C6340) *
               C6341 +
           (C6842 + C6843 + C6863) * C152462) *
              C2660 -
          (((C134 * C9514 - C135 * C9508 - C134 * C9515 + C152711 * C9526) *
                C6340 +
            (C134 * C3215 - C135 * C3210 - C134 * C3216 + C152711 * C3222) *
                C6339 +
            C3076 * C6338) *
               C152462 +
           ((C134 * C9516 - C135 * C9509 - C134 * C9517 + C152711 * C9527) *
                C6340 +
            (C134 * C3213 - C135 * C3209 - C134 * C3214 + C152711 * C3221) *
                C6339 +
            (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                C6338) *
               C6341) *
              C2661 +
          (((C134 * C2679 - C135 * C2667 - C134 * C2680 + C152711 * C2691) *
                C6338 +
            (C134 * C9518 - C135 * C9510 - C134 * C9519 + C152711 * C9528) *
                C6339 +
            (C134 * C9520 - C135 * C9511 - C134 * C9521 + C152711 * C9529) *
                C6340) *
               C6341 +
           ((C134 * C2681 - C135 * C2668 - C134 * C2682 + C152711 * C2692) *
                C6338 +
            (C134 * C9522 - C135 * C9512 - C134 * C9523 + C152711 * C9530) *
                C6339 +
            (C134 * C9524 - C135 * C9513 - C134 * C9525 + C152711 * C9531) *
                C6340) *
               C152462) *
              C2662) *
         C152512 * C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C152829 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C152617) *
               C1429 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C152617 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C152829) *
               C1430 +
           (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                 C152696 * C123 +
             C476 * C124 + C477 * C125 + C478 * C126) *
                C152829 -
            (C2133 * C126 + C2134 * C125 + C2135 * C124 +
             (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                 C152696 * C123) *
                C152617) *
               C152870) *
              C152814 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152617 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152829) *
               C1429 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152829 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C152617) *
               C1430 +
           ((C2135 * C123 + C2134 * C124 + C2133 * C125 +
             (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                 C152696 * C126) *
                C152617 -
            (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152829 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C152617) *
              C152512 * C873 +
          ((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152617 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152829) *
              C152512 * C874 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152829 -
           (C1033 * C126 + C740 * C125 + C734 * C124 + C735 * C123) * C152617) *
              C152512 * C875 +
          ((C734 * C123 + C740 * C124 + C1033 * C125 +
            (C134 * C1022 - C135 * C1021 - C134 * C1023 + C152711 * C1024) *
                C152696 * C126) *
               C152617 -
           (C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) * C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C3047 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C3048 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C152696 * C123 +
            C737 * C124 + C738 * C125 + C739 * C126) *
               C3049 -
           (C3077 * C126 + C3078 * C125 + C3079 * C124 +
            (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                C152696 * C123) *
               C152886) *
              C152512 * C152814 +
          ((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C3048 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C3047 -
           (C741 * C126 + C739 * C125 + C738 * C124 + C737 * C123) * C3049 +
           (C3079 * C123 + C3078 * C124 + C3077 * C125 +
            (C134 * C3052 - C135 * C3051 - C134 * C3053 + C152711 * C3054) *
                C152696 * C126) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152829 -
           ((C6839 + C6840 + C6841) * C152462 +
            ((C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                 C6340 +
             (C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152617) *
              C152512 * C873 +
          (((C6841 + C6840 + C6839) * C6341 +
            (C6848 + C6849 + C6850) * C152462) *
               C152617 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152829) *
              C152512 * C874 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152829 -
           ((C7256 + C7257 + C7258) * C152462 +
            (C6850 + C6849 + C6848) * C6341) *
               C152617) *
              C152512 * C875 +
          (((C7258 + C7257 + C7256) * C6341 +
            (C732 * C6338 + C1279 * C6339 +
             (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                 C6340) *
                C152462) *
               C152617 -
           ((C6353 + C6354 + C6355) * C152462 +
            (C6352 + C6351 + C6350) * C6341) *
               C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C152829 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152617) *
               C1429 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152617 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C152829) *
               C1430 +
           (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
             (C6589 + C6590 + C6619) * C152462) *
                C152829 -
            ((C8741 + C8736 + C8737) * C152462 +
             ((C134 * C8189 - C135 * C8180 - C134 * C8190 + C152711 * C8198) *
                  C6340 +
              C8234 * C6339 + C7577 * C6338) *
                 C6341) *
                C152617) *
               C152870) *
              C152814 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152617 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C152829) *
               C1429 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C152829 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152617) *
               C1430 +
           (((C8737 + C8736 + C8741) * C6341 +
             (C2131 * C6338 + C7580 * C6339 +
              (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                  C6340) *
                 C152462) *
                C152617 -
            ((C6620 + C6602 + C6603) * C152462 +
             (C6619 + C6590 + C6589) * C6341) *
                C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C3047 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C3048 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             C8232 * C6339 + C8233 * C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C3049 -
           ((C10043 + C10044 + C10036) * C152462 +
            ((C134 * C9516 - C135 * C9509 - C134 * C9517 + C152711 * C9527) *
                 C6340 +
             (C134 * C3213 - C135 * C3209 - C134 * C3214 + C152711 * C3221) *
                 C6339 +
             (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                 C6338) *
                C6341) *
               C152886) *
              C152512 * C152814 +
          (((C6841 + C6840 + C6839) * C6341 +
            (C6848 + C6849 + C6850) * C152462) *
               C3048 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C3047 -
           ((C6864 + C6855 + C6856) * C152462 +
            (C6863 + C6843 + C6842) * C6341) *
               C3049 +
           ((C10036 + C10044 + C10043) * C6341 +
            (C3075 * C6338 +
             (C134 * C3217 - C135 * C3211 - C134 * C3218 + C152711 * C3223) *
                 C6339 +
             (C134 * C10024 - C135 * C10023 - C134 * C10025 +
              C152711 * C10026) *
                 C6340) *
                C152462) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152530 * C152917 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152530 * C152901 +
           ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152530 * C152870) *
              C365 +
          ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152530 *
               C152901 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
               C152917 -
           (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C152530 *
               C152870) *
              C366 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152530 *
               C152917 -
           ((C134 * C400 - C135 * C378 - C134 * C401 + C152711 * C414) *
                C152696 * C126 +
            C479 * C125 + C473 * C124 + C474 * C123) *
               C152530 * C152901 +
           (C477 * C123 + C478 * C124 + C480 * C125 +
            (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                C152696 * C126) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
               C152696 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126) *
              C152530 * C152512 * C129 -
          (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
              C152512 * C130 +
          (C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152530 *
              C152512 * C131 -
          (C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) * C152530 *
              C152512 * C132 +
          (C214 * C123 + C215 * C124 + C216 * C125 +
           (C134 * C158 - C135 * C143 - C134 * C159 + C152711 * C167) *
               C152696 * C126) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152530 * C1429 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152530 * C1430 +
           ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152530 * C152870) *
              C152914 +
          ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152530 *
               C1430 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
               C1429 -
           (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C152530 *
               C152870) *
              C152897 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152530 *
               C1429 -
           (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) * C152530 *
               C1430 +
           (C477 * C123 + C478 * C124 + C480 * C125 +
            (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                C152696 * C126) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
               C152696 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126) *
              C152530 * C1517 -
          (C473 * C126 + C474 * C125 + C475 * C124 +
           (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
               C152696 * C123) *
              C152530 * C1518 +
          ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
               C152696 * C123 +
           C476 * C124 + C477 * C125 + C478 * C126) *
              C152530 * C1519 -
          ((C134 * C1531 - C135 * C1523 - C134 * C1532 + C152711 * C1547) *
               C152696 * C126 +
           (C134 * C1533 - C135 * C1524 - C134 * C1534 + C152711 * C1548) *
               C152696 * C125 +
           (C134 * C1535 - C135 * C1525 - C134 * C1536 + C152711 * C1549) *
               C152696 * C124 +
           (C134 * C1537 - C135 * C1526 - C134 * C1538 + C152711 * C1550) *
               C152696 * C123) *
              C152530 * C1520 +
          ((C134 * C1539 - C135 * C1527 - C134 * C1540 + C152711 * C1551) *
               C152696 * C123 +
           (C134 * C1541 - C135 * C1528 - C134 * C1542 + C152711 * C1552) *
               C152696 * C124 +
           (C134 * C1543 - C135 * C1529 - C134 * C1544 + C152711 * C1553) *
               C152696 * C125 +
           (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
               C152696 * C126) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C2427 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C2428 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C152696 * C123 +
            C737 * C124 + C738 * C125 + C739 * C126) *
               C152873) *
              C152512 * C152914 +
          ((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C2428 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C2427 -
           (C741 * C126 + C739 * C125 + C738 * C124 + C737 * C123) * C152873) *
              C152512 * C152897 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C2427 -
           (C1033 * C126 + C740 * C125 + C734 * C124 + C735 * C123) * C2428 +
           (C738 * C123 + C739 * C124 + C741 * C125 +
            (C134 * C663 - C135 * C640 - C134 * C664 + C152711 * C676) *
                C152696 * C126) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C2427 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C2428 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C152696 * C123 +
            C737 * C124 + C738 * C125 + C739 * C126) *
               C152873) *
              C152917 +
          (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                C152696 * C123 +
            C1280 * C124 + C1281 * C125 + C1282 * C126) *
               C2428 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C2427 -
           ((C134 * C1713 - C135 * C1701 - C134 * C1714 + C152711 * C1737) *
                C152696 * C126 +
            (C134 * C1715 - C135 * C1702 - C134 * C1716 + C152711 * C1738) *
                C152696 * C125 +
            (C134 * C1717 - C135 * C1703 - C134 * C1718 + C152711 * C1739) *
                C152696 * C124 +
            (C134 * C1719 - C135 * C1704 - C134 * C1720 + C152711 * C1740) *
                C152696 * C123) *
               C152873) *
              C152901 +
          (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C2427 -
           (C2133 * C126 + C2134 * C125 + C2135 * C124 +
            (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                C152696 * C123) *
               C2428 +
           ((C134 * C1729 - C135 * C1709 - C134 * C1730 + C152711 * C1745) *
                C152696 * C123 +
            (C134 * C1731 - C135 * C1710 - C134 * C1732 + C152711 * C1746) *
                C152696 * C124 +
            (C134 * C1733 - C135 * C1711 - C134 * C1734 + C152711 * C1747) *
                C152696 * C125 +
            (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                C152696 * C126) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C6338 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) * C6339 +
            (C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C6340) *
               C6341 +
           (C6344 + C6345 + C6346) * C152462) *
              C152530 * C152512 * C129 -
          ((C6347 + C6348 + C6349) * C152462 +
           (C6346 + C6345 + C6344) * C6341) *
              C152530 * C152512 * C130 +
          ((C6349 + C6348 + C6347) * C6341 +
           (C6350 + C6351 + C6352) * C152462) *
              C152530 * C152512 * C131 -
          ((C6353 + C6354 + C6355) * C152462 +
           (C6352 + C6351 + C6350) * C6341) *
              C152530 * C152512 * C132 +
          ((C6355 + C6354 + C6353) * C6341 +
           (C209 * C6338 + C888 * C6339 +
            (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                C6340) *
               C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C152917 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C152901 +
           ((C6615 * C6338 + C6616 * C6339 +
             (C134 * C1539 - C135 * C1527 - C134 * C1540 + C152711 * C1551) *
                 C6340) *
                C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152530 * C152870) *
              C365 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C152901 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C152917 -
           ((C6620 + C6602 + C6603) * C152462 +
            (C6619 + C6590 + C6589) * C6341) *
               C152530 * C152870) *
              C366 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152530 * C152917 -
           ((C1908 * C6340 + C470 * C6339 + C465 * C6338) * C152462 +
            (C6597 + C6596 + C6595) * C6341) *
               C152530 * C152901 +
           ((C6603 + C6602 + C6620) * C6341 +
            (C470 * C6338 + C1908 * C6339 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C6340) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C1429 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C1430 +
           ((C6615 * C6338 + C6616 * C6339 +
             (C134 * C1539 - C135 * C1527 - C134 * C1540 + C152711 * C1551) *
                 C6340) *
                C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C1430 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C1429 -
           ((C6620 + C6602 + C6603) * C152462 +
            (C6619 + C6590 + C6589) * C6341) *
               C152530 * C152870) *
              C152897 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152530 * C1429 -
           ((C7059 + C7060 + C7061) * C152462 +
            (C6597 + C6596 + C6595) * C6341) *
               C152530 * C1430 +
           ((C6603 + C6602 + C6620) * C6341 +
            (C470 * C6338 + C1908 * C6339 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C6340) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C6338 +
            C6614 * C6339 + C6615 * C6340) *
               C6341 +
           (C6344 + C6345 + C6346) * C152462) *
              C152530 * C1517 -
          ((C6582 + C6583 + C6584) * C152462 +
           (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
              C152530 * C1518 +
          ((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
           (C6589 + C6590 + C6619) * C152462) *
              C152530 * C1519 -
          ((C7958 * C6340 + C6617 * C6339 + C1910 * C6338) * C152462 +
           (C7959 * C6340 + C7957 * C6339 + C6616 * C6338) * C6341) *
              C152530 * C1520 +
          ((C7957 * C6338 + C7959 * C6339 +
            (C134 * C7930 - C135 * C7924 - C134 * C7931 + C152711 * C7936) *
                C6340) *
               C6341 +
           (C6617 * C6338 + C7958 * C6339 +
            (C134 * C7932 - C135 * C7925 - C134 * C7933 + C152711 * C7937) *
                C6340) *
               C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C2427 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C2428 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             C8232 * C6339 + C8233 * C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C152873) *
              C152512 * C152914 +
          (((C6841 + C6840 + C6839) * C6341 +
            (C6848 + C6849 + C6850) * C152462) *
               C2428 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C2427 -
           ((C6864 + C6855 + C6856) * C152462 +
            (C6863 + C6843 + C6842) * C6341) *
               C152873) *
              C152512 * C152897 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C2427 -
           ((C7256 + C7257 + C7258) * C152462 +
            (C6850 + C6849 + C6848) * C6341) *
               C2428 +
           ((C6856 + C6855 + C6864) * C6341 +
            (C731 * C6338 + C2912 * C6339 +
             (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                 C6340) *
                C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C2427 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C2428 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             C8232 * C6339 + C8233 * C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C152873) *
              C152917 +
          (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
            (C7557 + C7558 + C7581) * C152462) *
               C2428 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C2427 -
           ((C8235 * C6340 + C6861 * C6339 + C2914 * C6338) * C152462 +
            (C8236 * C6340 + C8233 * C6339 + C8232 * C6338) * C6341) *
               C152873) *
              C152901 +
          (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C2427 -
           ((C8741 + C8736 + C8737) * C152462 +
            (C8950 * C6340 + C8234 * C6339 + C7577 * C6338) * C6341) *
               C2428 +
           ((C8233 * C6338 + C8236 * C6339 +
             (C134 * C8191 - C135 * C8181 - C134 * C8192 + C152711 * C8199) *
                 C6340) *
                C6341 +
            (C6861 * C6338 + C8235 * C6339 +
             (C134 * C8193 - C135 * C8182 - C134 * C8194 + C152711 * C8200) *
                 C6340) *
                C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C4361 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C152617) *
               C152828 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C152617 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C4361) *
               C152575) *
              C152489 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152617 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C4361) *
               C152828 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C4361 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C152617) *
               C152575) *
              C152498 +
          (((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C4361 -
            (C1033 * C126 + C740 * C125 + C734 * C124 + C735 * C123) *
                C152617) *
               C152828 +
           ((C1281 * C123 + C1282 * C124 + C1283 * C125 +
             (C134 * C1243 - C135 * C1232 - C134 * C1244 + C152711 * C1250) *
                 C152696 * C126) *
                C152617 -
            (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) * C4361) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C4361 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152617) *
               C152828 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152617 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C4361) *
               C152575) *
              C152489 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152617 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C4361) *
               C152828 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C4361 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152617) *
               C152575) *
              C152498 +
          ((((C6349 + C6348 + C6347) * C6341 +
             (C6350 + C6351 + C6352) * C152462) *
                C4361 -
            ((C7256 + C7257 + C7258) * C152462 +
             (C6850 + C6849 + C6848) * C6341) *
                C152617) *
               C152828 +
           (((C7568 + C7567 + C7582) * C6341 +
             (C1278 * C6338 + C2130 * C6339 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C6340) *
                 C152462) *
                C152617 -
            ((C7059 + C7060 + C7061) * C152462 +
             (C6597 + C6596 + C6595) * C6341) *
                C4361) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C152613 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C152620 +
            ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152696 * C123 +
             C737 * C124 + C738 * C125 + C739 * C126) *
                C5033) *
               C152828 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C152620 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C152613 -
            (C2915 * C126 + C2916 * C125 + C2917 * C124 +
             (C134 * C1719 - C135 * C1704 - C134 * C1720 + C152711 * C1740) *
                 C152696 * C123) *
                C5033) *
               C152575) *
              C3495 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152620 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152613 -
            (C741 * C126 + C739 * C125 + C738 * C124 + C737 * C123) * C5033) *
               C152828 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152613 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C152620 +
            (C2917 * C123 + C2916 * C124 + C2915 * C125 +
             (C134 * C2890 - C135 * C2889 - C134 * C2891 + C152711 * C2892) *
                 C152696 * C126) *
                C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C152613 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152620 +
            (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                  C6338 +
              C8232 * C6339 + C8233 * C6340) *
                 C6341 +
             (C6842 + C6843 + C6863) * C152462) *
                C5033) *
               C152828 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152620 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C152613 -
            ((C9827 + C9828 + C9829) * C152462 +
             (C8236 * C6340 + C8233 * C6339 + C8232 * C6338) * C6341) *
                C5033) *
               C152575) *
              C3495 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152620 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C152613 -
            ((C6864 + C6855 + C6856) * C152462 +
             (C6863 + C6843 + C6842) * C6341) *
                C5033) *
               C152828 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C152613 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152620 +
            ((C9829 + C9828 + C9827) * C6341 +
             (C2913 * C6338 + C6862 * C6339 +
              (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                  C6340) *
                 C152462) *
                C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C4361 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C152617) *
               C152917 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C152617 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C4361) *
               C152901 +
           (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                 C152696 * C123 +
             C476 * C124 + C477 * C125 + C478 * C126) *
                C4361 -
            (C2133 * C126 + C2134 * C125 + C2135 * C124 +
             (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                 C152696 * C123) *
                C152617) *
               C152870) *
              C3495 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152617 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C4361) *
               C152917 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C4361 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C152617) *
               C152901 +
           ((C2135 * C123 + C2134 * C124 + C2133 * C125 +
             (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                 C152696 * C126) *
                C152617 -
            (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C4361 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C152617) *
              C152512 * C152923 +
          ((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152617 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C4361) *
              C152512 * C152916 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C4361 -
           (C1033 * C126 + C740 * C125 + C734 * C124 + C735 * C123) * C152617) *
              C152512 * C152899 +
          ((C734 * C123 + C740 * C124 + C1033 * C125 +
            (C134 * C1022 - C135 * C1021 - C134 * C1023 + C152711 * C1024) *
                C152696 * C126) *
               C152617 -
           (C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) * C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152925 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C152922 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C152696 * C123 +
            C737 * C124 + C738 * C125 + C739 * C126) *
               C152909 -
           (C3077 * C126 + C3078 * C125 + C3079 * C124 +
            (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                C152696 * C123) *
               C152886) *
              C152512 * C3495 +
          ((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152922 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152925 -
           (C741 * C126 + C739 * C125 + C738 * C124 + C737 * C123) * C152909 +
           (C3079 * C123 + C3078 * C124 + C3077 * C125 +
            (C134 * C3052 - C135 * C3051 - C134 * C3053 + C152711 * C3054) *
                C152696 * C126) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C4361 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152617) *
              C152512 * C152923 +
          (((C6841 + C6840 + C6839) * C6341 +
            (C6848 + C6849 + C6850) * C152462) *
               C152617 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C4361) *
              C152512 * C152916 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C4361 -
           ((C7256 + C7257 + C7258) * C152462 +
            (C6850 + C6849 + C6848) * C6341) *
               C152617) *
              C152512 * C152899 +
          (((C7258 + C7257 + C7256) * C6341 +
            (C732 * C6338 + C1279 * C6339 +
             (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                 C6340) *
                C152462) *
               C152617 -
           ((C6353 + C6354 + C6355) * C152462 +
            (C6352 + C6351 + C6350) * C6341) *
               C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C4361 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152617) *
               C152917 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152617 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C4361) *
               C152901 +
           (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
             (C6589 + C6590 + C6619) * C152462) *
                C4361 -
            ((C8741 + C8736 + C8737) * C152462 +
             (C8950 * C6340 + C8234 * C6339 + C7577 * C6338) * C6341) *
                C152617) *
               C152870) *
              C3495 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152617 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C4361) *
               C152917 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C4361 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152617) *
               C152901 +
           (((C8737 + C8736 + C8741) * C6341 +
             (C2131 * C6338 + C7580 * C6339 +
              (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                  C6340) *
                 C152462) *
                C152617 -
            ((C6620 + C6602 + C6603) * C152462 +
             (C6619 + C6590 + C6589) * C6341) *
                C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152925 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152922 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             C8232 * C6339 + C8233 * C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C152909 -
           ((C10043 + C10044 + C10036) * C152462 +
            (C10259 * C6340 + C10260 * C6339 +
             (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                 C6338) *
                C6341) *
               C152886) *
              C152512 * C3495 +
          (((C6841 + C6840 + C6839) * C6341 +
            (C6848 + C6849 + C6850) * C152462) *
               C152922 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152925 -
           ((C6864 + C6855 + C6856) * C152462 +
            (C6863 + C6843 + C6842) * C6341) *
               C152909 +
           ((C10036 + C10044 + C10043) * C6341 +
            (C3075 * C6338 +
             (C134 * C3217 - C135 * C3211 - C134 * C3218 + C152711 * C3223) *
                 C6339 +
             (C134 * C10024 - C135 * C10023 - C134 * C10025 +
              C152711 * C10026) *
                 C6340) *
                C152462) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152613 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C152620 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C152696 * C123 +
            C737 * C124 + C738 * C125 + C739 * C126) *
               C5033) *
              C152512 * C152489 +
          ((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152620 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152613 -
           (C741 * C126 + C739 * C125 + C738 * C124 + C737 * C123) * C5033) *
              C152512 * C152498 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152613 -
           (C1033 * C126 + C740 * C125 + C734 * C124 + C735 * C123) * C152620 +
           (C738 * C123 + C739 * C124 + C741 * C125 +
            (C134 * C663 - C135 * C640 - C134 * C664 + C152711 * C676) *
                C152696 * C126) *
               C5033) *
              C152512 * C3842)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152613 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152620 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             C8232 * C6339 + C8233 * C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C5033) *
              C152512 * C152489 +
          (((C6841 + C6840 + C6839) * C6341 +
            (C6848 + C6849 + C6850) * C152462) *
               C152620 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152613 -
           ((C6864 + C6855 + C6856) * C152462 +
            (C6863 + C6843 + C6842) * C6341) *
               C5033) *
              C152512 * C152498 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152613 -
           ((C7256 + C7257 + C7258) * C152462 +
            (C6850 + C6849 + C6848) * C6341) *
               C152620 +
           ((C6856 + C6855 + C6864) * C6341 +
            (C731 * C6338 + C2912 * C6339 +
             (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                 C6340) *
                C152462) *
               C5033) *
              C152512 * C3842)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C4361 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C152617) *
              C152512 * C152923 +
          ((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152617 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C4361) *
              C152512 * C152916 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C4361 -
           (C1033 * C126 + C740 * C125 + C734 * C124 + C735 * C123) * C152617) *
              C152512 * C152899 +
          ((C734 * C123 + C740 * C124 + C1033 * C125 +
            (C134 * C1022 - C135 * C1021 - C134 * C1023 + C152711 * C1024) *
                C152696 * C126) *
               C152617 -
           (C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) * C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C4361 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C152617) *
               C152917 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C152617 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C4361) *
               C152901 +
           (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                 C152696 * C123 +
             C476 * C124 + C477 * C125 + C478 * C126) *
                C4361 -
            (C2133 * C126 + C2134 * C125 + C2135 * C124 +
             (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                 C152696 * C123) *
                C152617) *
               C152870) *
              C3495 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152617 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C4361) *
               C152917 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C4361 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C152617) *
               C152901 +
           ((C2135 * C123 + C2134 * C124 + C2133 * C125 +
             (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                 C152696 * C126) *
                C152617 -
            (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C4361 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152617) *
              C152512 * C152923 +
          (((C6841 + C6840 + C6839) * C6341 +
            (C6848 + C6849 + C6850) * C152462) *
               C152617 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C4361) *
              C152512 * C152916 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C4361 -
           ((C7256 + C7257 + C7258) * C152462 +
            (C6850 + C6849 + C6848) * C6341) *
               C152617) *
              C152512 * C152899 +
          (((C7258 + C7257 + C7256) * C6341 +
            (C732 * C6338 + C1279 * C6339 +
             (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                 C6340) *
                C152462) *
               C152617 -
           ((C6353 + C6354 + C6355) * C152462 +
            (C6352 + C6351 + C6350) * C6341) *
               C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C4361 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152617) *
               C152917 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152617 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C4361) *
               C152901 +
           (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
             (C6589 + C6590 + C6619) * C152462) *
                C4361 -
            ((C8741 + C8736 + C8737) * C152462 +
             (C8950 * C6340 + C8234 * C6339 + C7577 * C6338) * C6341) *
                C152617) *
               C152870) *
              C3495 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152617 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C4361) *
               C152917 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C4361 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152617) *
               C152901 +
           (((C8737 + C8736 + C8741) * C6341 +
             (C2131 * C6338 + C7580 * C6339 +
              (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                  C6340) *
                 C152462) *
                C152617 -
            ((C6620 + C6602 + C6603) * C152462 +
             (C6619 + C6590 + C6589) * C6341) *
                C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152530 * C152828 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152530 * C152575) *
              C873 +
          ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152530 *
               C152575 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
               C152828) *
              C874 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152530 *
               C152828 -
           (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) * C152530 *
               C152575) *
              C875 +
          ((C473 * C123 + C479 * C124 + C889 * C125 +
            (C134 * C878 - C135 * C877 - C134 * C879 + C152711 * C880) *
                C152696 * C126) *
               C152530 * C152575 -
           (C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) * C152530 *
               C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152530 * C1879 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152530 * C1880 +
           ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152530 * C1881 -
           (C1911 * C126 + C1912 * C125 + C1913 * C124 +
            (C134 * C1537 - C135 * C1526 - C134 * C1538 + C152711 * C1550) *
                C152696 * C123) *
               C152530 * C152880) *
              C152814 +
          ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152530 *
               C1880 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
               C1879 -
           (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C152530 *
               C1881 +
           (C1913 * C123 + C1912 * C124 + C1911 * C125 +
            (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                C152696 * C126) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C152828 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C152575) *
              C873 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C152575 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C152828) *
              C874 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152530 * C152828 -
           ((C7059 + C7060 + C7061) * C152462 +
            (C6597 + C6596 + C6595) * C6341) *
               C152530 * C152575) *
              C875 +
          (((C7061 + C7060 + C7059) * C6341 +
            (C471 * C6338 + C472 * C6339 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C6340) *
                C152462) *
               C152530 * C152575 -
           ((C6353 + C6354 + C6355) * C152462 +
            (C6352 + C6351 + C6350) * C6341) *
               C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C1879 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C1880 +
           ((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152530 * C1881 -
           ((C8435 + C8436 + C8437) * C152462 +
            (C7959 * C6340 + C7957 * C6339 + C6616 * C6338) * C6341) *
               C152530 * C152880) *
              C152814 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C1880 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C1879 -
           ((C6620 + C6602 + C6603) * C152462 +
            (C6619 + C6590 + C6589) * C6341) *
               C152530 * C1881 +
           ((C8437 + C8436 + C8435) * C6341 +
            (C1909 * C6338 + C6618 * C6339 +
             (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                 C6340) *
                C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C152829 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C152617) *
               C152828 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C152617 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C152829) *
               C152575) *
              C365 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152617 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152829) *
               C152828 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152829 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C152617) *
               C152575) *
              C366 +
          (((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152829 -
            (C1033 * C126 + C740 * C125 + C734 * C124 + C735 * C123) *
                C152617) *
               C152828 +
           ((C1281 * C123 + C1282 * C124 + C1283 * C125 +
             (C134 * C1243 - C135 * C1232 - C134 * C1244 + C152711 * C1250) *
                 C152696 * C126) *
                C152617 -
            (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) * C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152829 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C152617) *
              C1879 +
          (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                C152696 * C123 +
            C1280 * C124 + C1281 * C125 + C1282 * C126) *
               C152617 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152829) *
              C1880 +
          (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152829 -
           (C2133 * C126 + C2134 * C125 + C2135 * C124 +
            (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                C152696 * C123) *
               C152617) *
              C1881 +
          (((C134 * C2269 - C135 * C2265 - C134 * C2270 + C152711 * C2277) *
                C152696 * C123 +
            (C134 * C2271 - C135 * C2266 - C134 * C2272 + C152711 * C2278) *
                C152696 * C124 +
            (C134 * C2273 - C135 * C2267 - C134 * C2274 + C152711 * C2279) *
                C152696 * C125 +
            (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                C152696 * C126) *
               C152617 -
           (C1911 * C126 + C1912 * C125 + C1913 * C124 +
            (C134 * C1537 - C135 * C1526 - C134 * C1538 + C152711 * C1550) *
                C152696 * C123) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C152829 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152617) *
               C152828 +
           (((C7578 * C6338 + C7577 * C6339 +
              (C134 * C2269 - C135 * C2265 - C134 * C2270 + C152711 * C2277) *
                  C6340) *
                 C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152617 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C152829) *
               C152575) *
              C365 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152617 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C152829) *
               C152828 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C152829 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152617) *
               C152575) *
              C366 +
          ((((C6349 + C6348 + C6347) * C6341 +
             (C6350 + C6351 + C6352) * C152462) *
                C152829 -
            ((C7256 + C7257 + C7258) * C152462 +
             (C6850 + C6849 + C6848) * C6341) *
                C152617) *
               C152828 +
           (((C7568 + C7567 + C7582) * C6341 +
             (C1278 * C6338 + C2130 * C6339 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C6340) *
                 C152462) *
                C152617 -
            ((C7059 + C7060 + C7061) * C152462 +
             (C6597 + C6596 + C6595) * C6341) *
                C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152829 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152617) *
              C1879 +
          (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
            (C7557 + C7558 + C7581) * C152462) *
               C152617 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152829) *
              C1880 +
          (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152829 -
           ((C8741 + C8736 + C8737) * C152462 +
            (C8950 * C6340 + C8234 * C6339 + C7577 * C6338) * C6341) *
               C152617) *
              C1881 +
          (((C8234 * C6338 + C8950 * C6339 +
             (C134 * C8937 - C135 * C8935 - C134 * C8938 + C152711 * C8941) *
                 C6340) *
                C6341 +
            (C7579 * C6338 + C8740 * C6339 +
             (C134 * C8939 - C135 * C8936 - C134 * C8940 + C152711 * C8942) *
                 C6340) *
                C152462) *
               C152617 -
           ((C8435 + C8436 + C8437) * C152462 +
            (C7959 * C6340 + C7957 * C6339 + C6616 * C6338) * C6341) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152530 * C152917 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152530 * C152901 +
           ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152530 * C152870) *
              C365 +
          ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152530 *
               C152901 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
               C152917 -
           (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C152530 *
               C152870) *
              C366 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152530 *
               C152917 -
           ((C134 * C400 - C135 * C378 - C134 * C401 + C152711 * C414) *
                C152696 * C126 +
            C479 * C125 + C473 * C124 + C474 * C123) *
               C152530 * C152901 +
           (C477 * C123 + C478 * C124 + C480 * C125 +
            (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                C152696 * C126) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
               C152696 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126) *
              C152530 * C152512 * C129 -
          (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
              C152512 * C130 +
          (C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152530 *
              C152512 * C131 -
          (C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) * C152530 *
              C152512 * C132 +
          (C214 * C123 + C215 * C124 + C216 * C125 +
           (C134 * C158 - C135 * C143 - C134 * C159 + C152711 * C167) *
               C152696 * C126) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152918 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C152903 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C152696 * C123 +
            C737 * C124 + C738 * C125 + C739 * C126) *
               C152873) *
              C152512 * C365 +
          ((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152903 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152918 -
           (C741 * C126 + C739 * C125 + C738 * C124 + C737 * C123) * C152873) *
              C152512 * C366 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152918 -
           ((C134 * C661 - C135 * C639 - C134 * C662 + C152711 * C675) *
                C152696 * C126 +
            C740 * C125 + C734 * C124 + C735 * C123) *
               C152903 +
           (C738 * C123 + C739 * C124 + C741 * C125 +
            (C134 * C663 - C135 * C640 - C134 * C664 + C152711 * C676) *
                C152696 * C126) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152530 * C1429 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152530 * C1430 +
           ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152530 * C152870) *
              C152914 +
          ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152530 *
               C1430 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
               C1429 -
           (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C152530 *
               C152870) *
              C152897 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152530 *
               C1429 -
           (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) * C152530 *
               C1430 +
           (C477 * C123 + C478 * C124 + C480 * C125 +
            (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                C152696 * C126) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
               C152696 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126) *
              C152530 * C1517 -
          (C473 * C126 + C474 * C125 + C475 * C124 +
           (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
               C152696 * C123) *
              C152530 * C1518 +
          ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
               C152696 * C123 +
           C476 * C124 + C477 * C125 + C478 * C126) *
              C152530 * C1519 -
          ((C134 * C1531 - C135 * C1523 - C134 * C1532 + C152711 * C1547) *
               C152696 * C126 +
           (C134 * C1533 - C135 * C1524 - C134 * C1534 + C152711 * C1548) *
               C152696 * C125 +
           (C134 * C1535 - C135 * C1525 - C134 * C1536 + C152711 * C1549) *
               C152696 * C124 +
           (C134 * C1537 - C135 * C1526 - C134 * C1538 + C152711 * C1550) *
               C152696 * C123) *
              C152530 * C1520 +
          ((C134 * C1539 - C135 * C1527 - C134 * C1540 + C152711 * C1551) *
               C152696 * C123 +
           (C134 * C1541 - C135 * C1528 - C134 * C1542 + C152711 * C1552) *
               C152696 * C124 +
           (C134 * C1543 - C135 * C1529 - C134 * C1544 + C152711 * C1553) *
               C152696 * C125 +
           (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
               C152696 * C126) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152918 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C152903 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C152696 * C123 +
            C737 * C124 + C738 * C125 + C739 * C126) *
               C152873) *
              C1429 +
          (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                C152696 * C123 +
            C1280 * C124 + C1281 * C125 + C1282 * C126) *
               C152903 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152918 -
           ((C134 * C1713 - C135 * C1701 - C134 * C1714 + C152711 * C1737) *
                C152696 * C126 +
            (C134 * C1715 - C135 * C1702 - C134 * C1716 + C152711 * C1738) *
                C152696 * C125 +
            (C134 * C1717 - C135 * C1703 - C134 * C1718 + C152711 * C1739) *
                C152696 * C124 +
            (C134 * C1719 - C135 * C1704 - C134 * C1720 + C152711 * C1740) *
                C152696 * C123) *
               C152873) *
              C1430 +
          (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152918 -
           ((C134 * C1721 - C135 * C1705 - C134 * C1722 + C152711 * C1741) *
                C152696 * C126 +
            (C134 * C1723 - C135 * C1706 - C134 * C1724 + C152711 * C1742) *
                C152696 * C125 +
            (C134 * C1725 - C135 * C1707 - C134 * C1726 + C152711 * C1743) *
                C152696 * C124 +
            (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                C152696 * C123) *
               C152903 +
           ((C134 * C1729 - C135 * C1709 - C134 * C1730 + C152711 * C1745) *
                C152696 * C123 +
            (C134 * C1731 - C135 * C1710 - C134 * C1732 + C152711 * C1746) *
                C152696 * C124 +
            (C134 * C1733 - C135 * C1711 - C134 * C1734 + C152711 * C1747) *
                C152696 * C125 +
            (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                C152696 * C126) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C6338 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) * C6339 +
            (C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C6340) *
               C6341 +
           (C6344 + C6345 + C6346) * C152462) *
              C152530 * C152512 * C129 -
          ((C6347 + C6348 + C6349) * C152462 +
           (C6346 + C6345 + C6344) * C6341) *
              C152530 * C152512 * C130 +
          ((C6349 + C6348 + C6347) * C6341 +
           (C6350 + C6351 + C6352) * C152462) *
              C152530 * C152512 * C131 -
          ((C6353 + C6354 + C6355) * C152462 +
           (C6352 + C6351 + C6350) * C6341) *
              C152530 * C152512 * C132 +
          ((C6355 + C6354 + C6353) * C6341 +
           (C209 * C6338 + C888 * C6339 +
            (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                C6340) *
               C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C152917 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C152901 +
           ((C6615 * C6338 + C6616 * C6339 +
             (C134 * C1539 - C135 * C1527 - C134 * C1540 + C152711 * C1551) *
                 C6340) *
                C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152530 * C152870) *
              C365 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C152901 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C152917 -
           ((C6620 + C6602 + C6603) * C152462 +
            (C6619 + C6590 + C6589) * C6341) *
               C152530 * C152870) *
              C366 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152530 * C152917 -
           ((C1908 * C6340 + C470 * C6339 + C465 * C6338) * C152462 +
            (C6597 + C6596 + C6595) * C6341) *
               C152530 * C152901 +
           ((C6603 + C6602 + C6620) * C6341 +
            (C470 * C6338 + C1908 * C6339 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C6340) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152918 -
           ((C6839 + C6840 + C6841) * C152462 +
            ((C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                 C6340 +
             (C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152903 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             (C134 * C1719 - C135 * C1704 - C134 * C1720 + C152711 * C1740) *
                 C6339 +
             (C134 * C1729 - C135 * C1709 - C134 * C1730 + C152711 * C1745) *
                 C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C152873) *
              C152512 * C365 +
          (((C6841 + C6840 + C6839) * C6341 +
            (C6848 + C6849 + C6850) * C152462) *
               C152903 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152918 -
           ((C6864 + C6855 + C6856) * C152462 +
            (C6863 + C6843 + C6842) * C6341) *
               C152873) *
              C152512 * C366 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152918 -
           ((C2130 * C6340 + C1278 * C6339 + C726 * C6338) * C152462 +
            (C6850 + C6849 + C6848) * C6341) *
               C152903 +
           ((C6856 + C6855 + C6864) * C6341 +
            (C731 * C6338 + C2912 * C6339 +
             (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                 C6340) *
                C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C1429 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C1430 +
           ((C6615 * C6338 + C6616 * C6339 +
             (C134 * C1539 - C135 * C1527 - C134 * C1540 + C152711 * C1551) *
                 C6340) *
                C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C1430 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C1429 -
           ((C6620 + C6602 + C6603) * C152462 +
            (C6619 + C6590 + C6589) * C6341) *
               C152530 * C152870) *
              C152897 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152530 * C1429 -
           ((C7059 + C7060 + C7061) * C152462 +
            (C6597 + C6596 + C6595) * C6341) *
               C152530 * C1430 +
           ((C6603 + C6602 + C6620) * C6341 +
            (C470 * C6338 + C1908 * C6339 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C6340) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C6338 +
            C6614 * C6339 + C6615 * C6340) *
               C6341 +
           (C6344 + C6345 + C6346) * C152462) *
              C152530 * C1517 -
          ((C6582 + C6583 + C6584) * C152462 +
           (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
              C152530 * C1518 +
          ((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
           (C6589 + C6590 + C6619) * C152462) *
              C152530 * C1519 -
          ((C7958 * C6340 + C6617 * C6339 + C1910 * C6338) * C152462 +
           (C7959 * C6340 + C7957 * C6339 + C6616 * C6338) * C6341) *
              C152530 * C1520 +
          ((C7957 * C6338 + C7959 * C6339 +
            (C134 * C7930 - C135 * C7924 - C134 * C7931 + C152711 * C7936) *
                C6340) *
               C6341 +
           (C6617 * C6338 + C7958 * C6339 +
            (C134 * C7932 - C135 * C7925 - C134 * C7933 + C152711 * C7937) *
                C6340) *
               C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152918 -
           ((C6839 + C6840 + C6841) * C152462 +
            (C7577 * C6340 + C7578 * C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152903 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C6338 +
             C8232 * C6339 + C8233 * C6340) *
                C6341 +
            (C6842 + C6843 + C6863) * C152462) *
               C152873) *
              C1429 +
          (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
            (C7557 + C7558 + C7581) * C152462) *
               C152903 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152918 -
           ((C8235 * C6340 + C6861 * C6339 + C2914 * C6338) * C152462 +
            (C8236 * C6340 + C8233 * C6339 + C8232 * C6338) * C6341) *
               C152873) *
              C1430 +
          (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152918 -
           (((C134 * C8187 - C135 * C8179 - C134 * C8188 + C152711 * C8197) *
                 C6340 +
             C7579 * C6339 + C2132 * C6338) *
                C152462 +
            ((C134 * C8189 - C135 * C8180 - C134 * C8190 + C152711 * C8198) *
                 C6340 +
             C8234 * C6339 + C7577 * C6338) *
                C6341) *
               C152903 +
           ((C8233 * C6338 + C8236 * C6339 +
             (C134 * C8191 - C135 * C8181 - C134 * C8192 + C152711 * C8199) *
                 C6340) *
                C6341 +
            (C6861 * C6338 + C8235 * C6339 +
             (C134 * C8193 - C135 * C8182 - C134 * C8194 + C152711 * C8200) *
                 C6340) *
                C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152829 -
           (C734 * C126 + C735 * C125 + C736 * C124 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152696 * C123) *
               C152617) *
              C152512 * C873 +
          ((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152617 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152829) *
              C152512 * C874 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152829 -
           (C1033 * C126 + C740 * C125 + C734 * C124 + C735 * C123) * C152617) *
              C152512 * C875 +
          ((C734 * C123 + C740 * C124 + C1033 * C125 +
            (C134 * C1022 - C135 * C1021 - C134 * C1023 + C152711 * C1024) *
                C152696 * C126) *
               C152617 -
           (C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) * C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152696 * C123 +
             C211 * C124 + C212 * C125 + C213 * C126) *
                C152829 -
            (C734 * C126 + C735 * C125 + C736 * C124 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152696 * C123) *
                C152617) *
               C1429 +
           (((C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C152696 * C123 +
             C1280 * C124 + C1281 * C125 + C1282 * C126) *
                C152617 -
            (C473 * C126 + C474 * C125 + C475 * C124 +
             (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                 C152696 * C123) *
                C152829) *
               C1430 +
           (((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                 C152696 * C123 +
             C476 * C124 + C477 * C125 + C478 * C126) *
                C152829 -
            (C2133 * C126 + C2134 * C125 + C2135 * C124 +
             (C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                 C152696 * C123) *
                C152617) *
               C152870) *
              C152814 +
          (((C736 * C123 + C735 * C124 + C734 * C125 + C740 * C126) * C152617 -
            (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152829) *
               C1429 +
           ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152829 -
            (C1283 * C126 + C1282 * C125 + C1281 * C124 + C1280 * C123) *
                C152617) *
               C1430 +
           ((C2135 * C123 + C2134 * C124 + C2133 * C125 +
             (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                 C152696 * C126) *
                C152617 -
            (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152829 -
           ((C6839 + C6840 + C6841) * C152462 +
            ((C134 * C1727 - C135 * C1708 - C134 * C1728 + C152711 * C1744) *
                 C6340 +
             (C134 * C1233 - C135 * C1227 - C134 * C1234 + C152711 * C1245) *
                 C6339 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C6338) *
                C6341) *
               C152617) *
              C152512 * C873 +
          (((C6841 + C6840 + C6839) * C6341 +
            (C6848 + C6849 + C6850) * C152462) *
               C152617 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152829) *
              C152512 * C874 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152829 -
           ((C7256 + C7257 + C7258) * C152462 +
            (C6850 + C6849 + C6848) * C6341) *
               C152617) *
              C152512 * C875 +
          (((C7258 + C7257 + C7256) * C6341 +
            (C732 * C6338 + C1279 * C6339 +
             (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                 C6340) *
                C152462) *
               C152617 -
           ((C6353 + C6354 + C6355) * C152462 +
            (C6352 + C6351 + C6350) * C6341) *
               C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C6338 +
              C6614 * C6339 + C6615 * C6340) *
                 C6341 +
             (C6344 + C6345 + C6346) * C152462) *
                C152829 -
            ((C6839 + C6840 + C6841) * C152462 +
             (C7577 * C6340 + C7578 * C6339 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C6338) *
                 C6341) *
                C152617) *
               C1429 +
           (((C7578 * C6338 + C7577 * C6339 + C8234 * C6340) * C6341 +
             (C7557 + C7558 + C7581) * C152462) *
                C152617 -
            ((C6582 + C6583 + C6584) * C152462 +
             (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
                C152829) *
               C1430 +
           (((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
             (C6589 + C6590 + C6619) * C152462) *
                C152829 -
            ((C8741 + C8736 + C8737) * C152462 +
             ((C134 * C8189 - C135 * C8180 - C134 * C8190 + C152711 * C8198) *
                  C6340 +
              C8234 * C6339 + C7577 * C6338) *
                 C6341) *
                C152617) *
               C152870) *
              C152814 +
          ((((C6841 + C6840 + C6839) * C6341 +
             (C6848 + C6849 + C6850) * C152462) *
                C152617 -
            ((C6347 + C6348 + C6349) * C152462 +
             (C6346 + C6345 + C6344) * C6341) *
                C152829) *
               C1429 +
           (((C6584 + C6583 + C6582) * C6341 +
             (C6595 + C6596 + C6597) * C152462) *
                C152829 -
            ((C7582 + C7567 + C7568) * C152462 +
             (C7581 + C7558 + C7557) * C6341) *
                C152617) *
               C1430 +
           (((C8737 + C8736 + C8741) * C6341 +
             (C2131 * C6338 + C7580 * C6339 +
              (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                  C6340) *
                 C152462) *
                C152617 -
            ((C6620 + C6602 + C6603) * C152462 +
             (C6619 + C6590 + C6589) * C6341) *
                C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
               C152696 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126) *
              C152530 * C152512 * C129 -
          (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
              C152512 * C130 +
          (C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152530 *
              C152512 * C131 -
          (C216 * C126 + C215 * C125 + C214 * C124 + C213 * C123) * C152530 *
              C152512 * C132 +
          (C214 * C123 + C215 * C124 + C216 * C125 +
           (C134 * C158 - C135 * C143 - C134 * C159 + C152711 * C167) *
               C152696 * C126) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152530 * C152917 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152530 * C152901 +
           ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152530 * C152870) *
              C365 +
          ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152530 *
               C152901 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
               C152917 -
           (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C152530 *
               C152870) *
              C366 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152530 *
               C152917 -
           ((C134 * C400 - C135 * C378 - C134 * C401 + C152711 * C414) *
                C152696 * C126 +
            C479 * C125 + C473 * C124 + C474 * C123) *
               C152530 * C152901 +
           (C477 * C123 + C478 * C124 + C480 * C125 +
            (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                C152696 * C126) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152696 * C123 +
            C211 * C124 + C212 * C125 + C213 * C126) *
               C152530 * C1429 -
           (C473 * C126 + C474 * C125 + C475 * C124 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
                C152696 * C123) *
               C152530 * C1430 +
           ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C152696 * C123 +
            C476 * C124 + C477 * C125 + C478 * C126) *
               C152530 * C152870) *
              C152914 +
          ((C475 * C123 + C474 * C124 + C473 * C125 + C479 * C126) * C152530 *
               C1430 -
           (C214 * C126 + C213 * C125 + C212 * C124 + C211 * C123) * C152530 *
               C1429 -
           (C480 * C126 + C478 * C125 + C477 * C124 + C476 * C123) * C152530 *
               C152870) *
              C152897 +
          ((C212 * C123 + C213 * C124 + C214 * C125 + C215 * C126) * C152530 *
               C1429 -
           (C889 * C126 + C479 * C125 + C473 * C124 + C474 * C123) * C152530 *
               C1430 +
           (C477 * C123 + C478 * C124 + C480 * C125 +
            (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                C152696 * C126) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
               C152696 * C123 +
           C211 * C124 + C212 * C125 + C213 * C126) *
              C152530 * C1517 -
          (C473 * C126 + C474 * C125 + C475 * C124 +
           (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) *
               C152696 * C123) *
              C152530 * C1518 +
          ((C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
               C152696 * C123 +
           C476 * C124 + C477 * C125 + C478 * C126) *
              C152530 * C1519 -
          ((C134 * C1531 - C135 * C1523 - C134 * C1532 + C152711 * C1547) *
               C152696 * C126 +
           (C134 * C1533 - C135 * C1524 - C134 * C1534 + C152711 * C1548) *
               C152696 * C125 +
           (C134 * C1535 - C135 * C1525 - C134 * C1536 + C152711 * C1549) *
               C152696 * C124 +
           (C134 * C1537 - C135 * C1526 - C134 * C1538 + C152711 * C1550) *
               C152696 * C123) *
              C152530 * C1520 +
          ((C134 * C1539 - C135 * C1527 - C134 * C1540 + C152711 * C1551) *
               C152696 * C123 +
           (C134 * C1541 - C135 * C1528 - C134 * C1542 + C152711 * C1552) *
               C152696 * C124 +
           (C134 * C1543 - C135 * C1529 - C134 * C1544 + C152711 * C1553) *
               C152696 * C125 +
           (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
               C152696 * C126) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C6338 +
            (C134 * C386 - C135 * C371 - C134 * C387 + C152711 * C407) * C6339 +
            (C134 * C388 - C135 * C372 - C134 * C389 + C152711 * C408) *
                C6340) *
               C6341 +
           (C6344 + C6345 + C6346) * C152462) *
              C152530 * C152512 * C129 -
          ((C6347 + C6348 + C6349) * C152462 +
           (C6346 + C6345 + C6344) * C6341) *
              C152530 * C152512 * C130 +
          ((C6349 + C6348 + C6347) * C6341 +
           (C6350 + C6351 + C6352) * C152462) *
              C152530 * C152512 * C131 -
          ((C6353 + C6354 + C6355) * C152462 +
           (C6352 + C6351 + C6350) * C6341) *
              C152530 * C152512 * C132 +
          ((C6355 + C6354 + C6353) * C6341 +
           (C209 * C6338 + C888 * C6339 +
            (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                C6340) *
               C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C152917 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C152901 +
           ((C6615 * C6338 + C6616 * C6339 +
             (C134 * C1539 - C135 * C1527 - C134 * C1540 + C152711 * C1551) *
                 C6340) *
                C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152530 * C152870) *
              C365 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C152901 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C152917 -
           ((C6620 + C6602 + C6603) * C152462 +
            (C6619 + C6590 + C6589) * C6341) *
               C152530 * C152870) *
              C366 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152530 * C152917 -
           ((C1908 * C6340 + C470 * C6339 + C465 * C6338) * C152462 +
            (C6597 + C6596 + C6595) * C6341) *
               C152530 * C152901 +
           ((C6603 + C6602 + C6620) * C6341 +
            (C470 * C6338 + C1908 * C6339 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C6340) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C6338 +
             C6614 * C6339 + C6615 * C6340) *
                C6341 +
            (C6344 + C6345 + C6346) * C152462) *
               C152530 * C1429 -
           ((C6582 + C6583 + C6584) * C152462 +
            (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
               C152530 * C1430 +
           ((C6615 * C6338 + C6616 * C6339 +
             (C134 * C1539 - C135 * C1527 - C134 * C1540 + C152711 * C1551) *
                 C6340) *
                C6341 +
            (C6589 + C6590 + C6619) * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C6584 + C6583 + C6582) * C6341 +
            (C6595 + C6596 + C6597) * C152462) *
               C152530 * C1430 -
           ((C6347 + C6348 + C6349) * C152462 +
            (C6346 + C6345 + C6344) * C6341) *
               C152530 * C1429 -
           ((C6620 + C6602 + C6603) * C152462 +
            (C6619 + C6590 + C6589) * C6341) *
               C152530 * C152870) *
              C152897 +
          (((C6349 + C6348 + C6347) * C6341 +
            (C6350 + C6351 + C6352) * C152462) *
               C152530 * C1429 -
           ((C7059 + C7060 + C7061) * C152462 +
            (C6597 + C6596 + C6595) * C6341) *
               C152530 * C1430 +
           ((C6603 + C6602 + C6620) * C6341 +
            (C470 * C6338 + C1908 * C6339 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C6340) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C6338 +
            C6614 * C6339 + C6615 * C6340) *
               C6341 +
           (C6344 + C6345 + C6346) * C152462) *
              C152530 * C1517 -
          ((C6582 + C6583 + C6584) * C152462 +
           (C6616 * C6340 + C6615 * C6339 + C6614 * C6338) * C6341) *
              C152530 * C1518 +
          ((C6615 * C6338 + C6616 * C6339 + C7957 * C6340) * C6341 +
           (C6589 + C6590 + C6619) * C152462) *
              C152530 * C1519 -
          ((C7958 * C6340 + C6617 * C6339 + C1910 * C6338) * C152462 +
           (C7959 * C6340 + C7957 * C6339 + C6616 * C6338) * C6341) *
              C152530 * C1520 +
          ((C7957 * C6338 + C7959 * C6339 +
            (C134 * C7930 - C135 * C7924 - C134 * C7931 + C152711 * C7936) *
                C6340) *
               C6341 +
           (C6617 * C6338 + C7958 * C6339 +
            (C134 * C7932 - C135 * C7925 - C134 * C7933 + C152711 * C7937) *
                C6340) *
               C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152530 * C152571 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C152530 * C152578 +
           ((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
            (C73548 + C73549 + C73550) * C152462) *
               C152530 * C3839) *
              C152489 +
          (((C73547 + C73546 + C73545) * C152807 +
            (C73551 + C73552 + C73553) * C152462) *
               C152530 * C152578 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C152530 * C152571 -
           ((C73554 + C73555 + C73556) * C152462 +
            (C73550 + C73549 + C73548) * C152807) *
               C152530 * C3839) *
              C152498 +
          (((C73320 + C73319 + C73318) * C152807 +
            (C73321 + C73322 + C73323) * C152462) *
               C152530 * C152571 -
           ((C73981 + C73982 + C73983) * C152462 +
            (C73553 + C73552 + C73551) * C152807) *
               C152530 * C152578 +
           ((C73556 + C73555 + C73554) * C152807 +
            (C470 * C152910 + C1908 * C152911 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C73311) *
                C152462) *
               C152530 * C3839) *
              C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152910 +
              C6614 * C152911 + C6615 * C73311) *
                 C152807 +
             (C73315 + C73316 + C73317) * C152462) *
                C152829 -
            ((C73775 + C73776 + C73777) * C152462 +
             (C7577 * C73311 + C7578 * C152911 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152910) *
                 C152807) *
                C152617) *
               C152571 +
           (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
             (C74471 + C74472 + C74473) * C152462) *
                C152617 -
            ((C73545 + C73546 + C73547) * C152462 +
             (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
                C152829) *
               C152578 +
           (((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
             (C73548 + C73549 + C73550) * C152462) *
                C152829 -
            ((C75522 + C75523 + C75524) * C152462 +
             (C8950 * C73311 + C8234 * C152911 + C7577 * C152910) * C152807) *
                C152617) *
               C3839) *
              C3495 +
          ((((C73777 + C73776 + C73775) * C152807 +
             (C73781 + C73782 + C73783) * C152462) *
                C152617 -
            ((C73318 + C73319 + C73320) * C152462 +
             (C73317 + C73316 + C73315) * C152807) *
                C152829) *
               C152571 +
           (((C73547 + C73546 + C73545) * C152807 +
             (C73551 + C73552 + C73553) * C152462) *
                C152829 -
            ((C74474 + C74475 + C74476) * C152462 +
             (C74473 + C74472 + C74471) * C152807) *
                C152617) *
               C152578 +
           (((C75524 + C75523 + C75522) * C152807 +
             (C2131 * C152910 + C7580 * C152911 +
              (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                  C73311) *
                 C152462) *
                C152617 -
            ((C73554 + C73555 + C73556) * C152462 +
             (C73550 + C73549 + C73548) * C152807) *
                C152829) *
               C3839) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152530 * C152924 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C152530 * C152920 +
           ((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
            (C73548 + C73549 + C73550) * C152462) *
               C152530 * C152906 -
           ((C75229 + C75230 + C75231) * C152462 +
            (C7959 * C73311 + C7957 * C152911 + C6616 * C152910) * C152807) *
               C152530 * C152880) *
              C3495 +
          (((C73547 + C73546 + C73545) * C152807 +
            (C73551 + C73552 + C73553) * C152462) *
               C152530 * C152920 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C152530 * C152924 -
           ((C73554 + C73555 + C73556) * C152462 +
            (C73550 + C73549 + C73548) * C152807) *
               C152530 * C152906 +
           ((C75231 + C75230 + C75229) * C152807 +
            (C1909 * C152910 + C6618 * C152911 +
             (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                 C73311) *
                C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152530 * C3355 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C152530 * C152575) *
              C152923 +
          (((C73547 + C73546 + C73545) * C152807 +
            (C73551 + C73552 + C73553) * C152462) *
               C152530 * C152575 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C152530 * C3355) *
              C152916 +
          (((C73320 + C73319 + C73318) * C152807 +
            (C73321 + C73322 + C73323) * C152462) *
               C152530 * C3355 -
           ((C73981 + C73982 + C73983) * C152462 +
            (C73553 + C73552 + C73551) * C152807) *
               C152530 * C152575) *
              C152899 +
          (((C73983 + C73982 + C73981) * C152807 +
            (C471 * C152910 + C472 * C152911 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C73311) *
                C152462) *
               C152530 * C152575 -
           ((C73324 + C73325 + C73326) * C152462 +
            (C73323 + C73322 + C73321) * C152807) *
               C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152910 +
              C6614 * C152911 + C6615 * C73311) *
                 C152807 +
             (C73315 + C73316 + C73317) * C152462) *
                C152918 -
            ((C73775 + C73776 + C73777) * C152462 +
             (C7577 * C73311 + C7578 * C152911 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152910) *
                 C152807) *
                C152903 +
            (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                  C152910 +
              C8232 * C152911 + C8233 * C73311) *
                 C152807 +
             (C73778 + C73779 + C73780) * C152462) *
                C152873) *
               C3355 +
           (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
             (C74471 + C74472 + C74473) * C152462) *
                C152903 -
            ((C73545 + C73546 + C73547) * C152462 +
             (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
                C152918 -
            ((C76567 + C76568 + C76569) * C152462 +
             (C8236 * C73311 + C8233 * C152911 + C8232 * C152910) * C152807) *
                C152873) *
               C152575) *
              C3495 +
          ((((C73777 + C73776 + C73775) * C152807 +
             (C73781 + C73782 + C73783) * C152462) *
                C152903 -
            ((C73318 + C73319 + C73320) * C152462 +
             (C73317 + C73316 + C73315) * C152807) *
                C152918 -
            ((C73784 + C73785 + C73786) * C152462 +
             (C73780 + C73779 + C73778) * C152807) *
                C152873) *
               C3355 +
           (((C73547 + C73546 + C73545) * C152807 +
             (C73551 + C73552 + C73553) * C152462) *
                C152918 -
            ((C74474 + C74475 + C74476) * C152462 +
             (C74473 + C74472 + C74471) * C152807) *
                C152903 +
            ((C76569 + C76568 + C76567) * C152807 +
             (C2913 * C152910 + C6862 * C152911 +
              (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                  C73311) *
                 C152462) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152910 +
              C6614 * C152911 + C6615 * C73311) *
                 C152807 +
             (C73315 + C73316 + C73317) * C152462) *
                C152829 -
            ((C73775 + C73776 + C73777) * C152462 +
             (C7577 * C73311 + C7578 * C152911 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152910) *
                 C152807) *
                C152617) *
               C3355 +
           (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
             (C74471 + C74472 + C74473) * C152462) *
                C152617 -
            ((C73545 + C73546 + C73547) * C152462 +
             (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
                C152829) *
               C152575) *
              C152489 +
          ((((C73777 + C73776 + C73775) * C152807 +
             (C73781 + C73782 + C73783) * C152462) *
                C152617 -
            ((C73318 + C73319 + C73320) * C152462 +
             (C73317 + C73316 + C73315) * C152807) *
                C152829) *
               C3355 +
           (((C73547 + C73546 + C73545) * C152807 +
             (C73551 + C73552 + C73553) * C152462) *
                C152829 -
            ((C74474 + C74475 + C74476) * C152462 +
             (C74473 + C74472 + C74471) * C152807) *
                C152617) *
               C152575) *
              C152498 +
          ((((C73320 + C73319 + C73318) * C152807 +
             (C73321 + C73322 + C73323) * C152462) *
                C152829 -
            ((C74178 + C74179 + C74180) * C152462 +
             (C73783 + C73782 + C73781) * C152807) *
                C152617) *
               C3355 +
           (((C74476 + C74475 + C74474) * C152807 +
             (C1278 * C152910 + C2130 * C152911 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C73311) *
                 C152462) *
                C152617 -
            ((C73981 + C73982 + C73983) * C152462 +
             (C73553 + C73552 + C73551) * C152807) *
                C152829) *
               C152575) *
              C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152530 * C3355 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C152530 * C152575) *
              C152923 +
          (((C73547 + C73546 + C73545) * C152807 +
            (C73551 + C73552 + C73553) * C152462) *
               C152530 * C152575 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C152530 * C3355) *
              C152916 +
          (((C73320 + C73319 + C73318) * C152807 +
            (C73321 + C73322 + C73323) * C152462) *
               C152530 * C3355 -
           ((C73981 + C73982 + C73983) * C152462 +
            (C73553 + C73552 + C73551) * C152807) *
               C152530 * C152575) *
              C152899 +
          (((C73983 + C73982 + C73981) * C152807 +
            (C471 * C152910 + C472 * C152911 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C73311) *
                C152462) *
               C152530 * C152575 -
           ((C73324 + C73325 + C73326) * C152462 +
            (C73323 + C73322 + C73321) * C152807) *
               C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152530 * C152924 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C152530 * C152920 +
           ((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
            (C73548 + C73549 + C73550) * C152462) *
               C152530 * C152906 -
           ((C75229 + C75230 + C75231) * C152462 +
            (C7959 * C73311 + C7957 * C152911 + C6616 * C152910) * C152807) *
               C152530 * C152880) *
              C3495 +
          (((C73547 + C73546 + C73545) * C152807 +
            (C73551 + C73552 + C73553) * C152462) *
               C152530 * C152920 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C152530 * C152924 -
           ((C73554 + C73555 + C73556) * C152462 +
            (C73550 + C73549 + C73548) * C152807) *
               C152530 * C152906 +
           ((C75231 + C75230 + C75229) * C152807 +
            (C1909 * C152910 + C6618 * C152911 +
             (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                 C73311) *
                C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152910 +
              C6614 * C152911 + C6615 * C73311) *
                 C152807 +
             (C73315 + C73316 + C73317) * C152462) *
                C4361 -
            ((C73775 + C73776 + C73777) * C152462 +
             (C7577 * C73311 + C7578 * C152911 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152910) *
                 C152807) *
                C152617) *
               C152571 +
           (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
             (C74471 + C74472 + C74473) * C152462) *
                C152617 -
            ((C73545 + C73546 + C73547) * C152462 +
             (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
                C4361) *
               C152578 +
           (((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
             (C73548 + C73549 + C73550) * C152462) *
                C4361 -
            ((C75522 + C75523 + C75524) * C152462 +
             (C8950 * C73311 + C8234 * C152911 + C7577 * C152910) * C152807) *
                C152617) *
               C3839) *
              C152814 +
          ((((C73777 + C73776 + C73775) * C152807 +
             (C73781 + C73782 + C73783) * C152462) *
                C152617 -
            ((C73318 + C73319 + C73320) * C152462 +
             (C73317 + C73316 + C73315) * C152807) *
                C4361) *
               C152571 +
           (((C73547 + C73546 + C73545) * C152807 +
             (C73551 + C73552 + C73553) * C152462) *
                C4361 -
            ((C74474 + C74475 + C74476) * C152462 +
             (C74473 + C74472 + C74471) * C152807) *
                C152617) *
               C152578 +
           (((C75524 + C75523 + C75522) * C152807 +
             (C2131 * C152910 + C7580 * C152911 +
              (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                  C73311) *
                 C152462) *
                C152617 -
            ((C73554 + C73555 + C73556) * C152462 +
             (C73550 + C73549 + C73548) * C152807) *
                C4361) *
               C3839) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152613 -
           ((C73775 + C73776 + C73777) * C152462 +
            (C7577 * C73311 + C7578 * C152911 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152910) *
                C152807) *
               C152620 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152910 +
             C8232 * C152911 + C8233 * C73311) *
                C152807 +
            (C73778 + C73779 + C73780) * C152462) *
               C5033) *
              C152571 +
          (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
            (C74471 + C74472 + C74473) * C152462) *
               C152620 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C152613 -
           ((C76567 + C76568 + C76569) * C152462 +
            (C8236 * C73311 + C8233 * C152911 + C8232 * C152910) * C152807) *
               C5033) *
              C152578 +
          (((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
            (C73548 + C73549 + C73550) * C152462) *
               C152613 -
           ((C75522 + C75523 + C75524) * C152462 +
            (C8950 * C73311 + C8234 * C152911 + C7577 * C152910) * C152807) *
               C152620 +
           ((C8233 * C152910 + C8236 * C152911 + C60561 * C73311) * C152807 +
            (C6861 * C152910 + C8235 * C152911 +
             (C134 * C8193 - C135 * C8182 - C134 * C8194 + C152711 * C8200) *
                 C73311) *
                C152462) *
               C5033) *
              C3839) *
         C152484) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C4361 -
           ((C73775 + C73776 + C73777) * C152462 +
            (C7577 * C73311 + C7578 * C152911 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152910) *
                C152807) *
               C152617) *
              C152924 +
          (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
            (C74471 + C74472 + C74473) * C152462) *
               C152617 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C4361) *
              C152920 +
          (((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
            (C73548 + C73549 + C73550) * C152462) *
               C4361 -
           ((C75522 + C75523 + C75524) * C152462 +
            (C8950 * C73311 + C8234 * C152911 + C7577 * C152910) * C152807) *
               C152617) *
              C152906 +
          (((C8234 * C152910 + C8950 * C152911 + C61026 * C73311) * C152807 +
            (C7579 * C152910 + C8740 * C152911 +
             (C134 * C8939 - C135 * C8936 - C134 * C8940 + C152711 * C8942) *
                 C73311) *
                C152462) *
               C152617 -
           ((C75229 + C75230 + C75231) * C152462 +
            (C7959 * C73311 + C7957 * C152911 + C6616 * C152910) * C152807) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152910 +
              C6614 * C152911 + C6615 * C73311) *
                 C152807 +
             (C73315 + C73316 + C73317) * C152462) *
                C4361 -
            ((C73775 + C73776 + C73777) * C152462 +
             (C7577 * C73311 + C7578 * C152911 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152910) *
                 C152807) *
                C152617) *
               C3355 +
           (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
             (C74471 + C74472 + C74473) * C152462) *
                C152617 -
            ((C73545 + C73546 + C73547) * C152462 +
             (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
                C4361) *
               C152575) *
              C152914 +
          ((((C73777 + C73776 + C73775) * C152807 +
             (C73781 + C73782 + C73783) * C152462) *
                C152617 -
            ((C73318 + C73319 + C73320) * C152462 +
             (C73317 + C73316 + C73315) * C152807) *
                C4361) *
               C3355 +
           (((C73547 + C73546 + C73545) * C152807 +
             (C73551 + C73552 + C73553) * C152462) *
                C4361 -
            ((C74474 + C74475 + C74476) * C152462 +
             (C74473 + C74472 + C74471) * C152807) *
                C152617) *
               C152575) *
              C152897 +
          ((((C73320 + C73319 + C73318) * C152807 +
             (C73321 + C73322 + C73323) * C152462) *
                C4361 -
            ((C74178 + C74179 + C74180) * C152462 +
             (C73783 + C73782 + C73781) * C152807) *
                C152617) *
               C3355 +
           (((C74476 + C74475 + C74474) * C152807 +
             (C1278 * C152910 + C2130 * C152911 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C73311) *
                 C152462) *
                C152617 -
            ((C73981 + C73982 + C73983) * C152462 +
             (C73553 + C73552 + C73551) * C152807) *
                C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152925 -
           ((C73775 + C73776 + C73777) * C152462 +
            (C7577 * C73311 + C7578 * C152911 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152910) *
                C152807) *
               C152922 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152910 +
             C8232 * C152911 + C8233 * C73311) *
                C152807 +
            (C73778 + C73779 + C73780) * C152462) *
               C152909 -
           ((C76764 + C76765 + C76766) * C152462 +
            (C10259 * C73311 + C10260 * C152911 +
             (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                 C152910) *
                C152807) *
               C152886) *
              C3355 +
          (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
            (C74471 + C74472 + C74473) * C152462) *
               C152922 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C152925 -
           ((C76567 + C76568 + C76569) * C152462 +
            (C8236 * C73311 + C8233 * C152911 + C8232 * C152910) * C152807) *
               C152909 +
           ((C10260 * C152910 + C10259 * C152911 + C61869 * C73311) * C152807 +
            (C10042 * C152910 + C10041 * C152911 +
             (C134 * C10242 - C135 * C10239 - C134 * C10243 +
              C152711 * C10245) *
                 C73311) *
                C152462) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152910 +
              C6614 * C152911 + C6615 * C73311) *
                 C152807 +
             (C73315 + C73316 + C73317) * C152462) *
                C152613 -
            ((C73775 + C73776 + C73777) * C152462 +
             (C7577 * C73311 + C7578 * C152911 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152910) *
                 C152807) *
                C152620 +
            (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                  C152910 +
              C8232 * C152911 + C8233 * C73311) *
                 C152807 +
             (C73778 + C73779 + C73780) * C152462) *
                C5033) *
               C3355 +
           (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
             (C74471 + C74472 + C74473) * C152462) *
                C152620 -
            ((C73545 + C73546 + C73547) * C152462 +
             (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
                C152613 -
            ((C76567 + C76568 + C76569) * C152462 +
             (C8236 * C73311 + C8233 * C152911 + C8232 * C152910) * C152807) *
                C5033) *
               C152575) *
              C152814 +
          ((((C73777 + C73776 + C73775) * C152807 +
             (C73781 + C73782 + C73783) * C152462) *
                C152620 -
            ((C73318 + C73319 + C73320) * C152462 +
             (C73317 + C73316 + C73315) * C152807) *
                C152613 -
            ((C73784 + C73785 + C73786) * C152462 +
             (C73780 + C73779 + C73778) * C152807) *
                C5033) *
               C3355 +
           (((C73547 + C73546 + C73545) * C152807 +
             (C73551 + C73552 + C73553) * C152462) *
                C152613 -
            ((C74474 + C74475 + C74476) * C152462 +
             (C74473 + C74472 + C74471) * C152807) *
                C152620 +
            ((C76569 + C76568 + C76567) * C152807 +
             (C2913 * C152910 + C6862 * C152911 +
              (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                  C73311) *
                 C152462) *
                C5033) *
               C152575) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152910 +
              C6614 * C152911 + C6615 * C73311) *
                 C152807 +
             (C73315 + C73316 + C73317) * C152462) *
                C4361 -
            ((C73775 + C73776 + C73777) * C152462 +
             (C7577 * C73311 + C7578 * C152911 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152910) *
                 C152807) *
                C152617) *
               C3355 +
           (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
             (C74471 + C74472 + C74473) * C152462) *
                C152617 -
            ((C73545 + C73546 + C73547) * C152462 +
             (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
                C4361) *
               C152575) *
              C152914 +
          ((((C73777 + C73776 + C73775) * C152807 +
             (C73781 + C73782 + C73783) * C152462) *
                C152617 -
            ((C73318 + C73319 + C73320) * C152462 +
             (C73317 + C73316 + C73315) * C152807) *
                C4361) *
               C3355 +
           (((C73547 + C73546 + C73545) * C152807 +
             (C73551 + C73552 + C73553) * C152462) *
                C4361 -
            ((C74474 + C74475 + C74476) * C152462 +
             (C74473 + C74472 + C74471) * C152807) *
                C152617) *
               C152575) *
              C152897 +
          ((((C73320 + C73319 + C73318) * C152807 +
             (C73321 + C73322 + C73323) * C152462) *
                C4361 -
            ((C74178 + C74179 + C74180) * C152462 +
             (C73783 + C73782 + C73781) * C152807) *
                C152617) *
               C3355 +
           (((C74476 + C74475 + C74474) * C152807 +
             (C1278 * C152910 + C2130 * C152911 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C73311) *
                 C152462) *
                C152617 -
            ((C73981 + C73982 + C73983) * C152462 +
             (C73553 + C73552 + C73551) * C152807) *
                C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C4361 -
           ((C73775 + C73776 + C73777) * C152462 +
            (C7577 * C73311 + C7578 * C152911 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152910) *
                C152807) *
               C152617) *
              C152924 +
          (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
            (C74471 + C74472 + C74473) * C152462) *
               C152617 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C4361) *
              C152920 +
          (((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
            (C73548 + C73549 + C73550) * C152462) *
               C4361 -
           ((C75522 + C75523 + C75524) * C152462 +
            (C8950 * C73311 + C8234 * C152911 + C7577 * C152910) * C152807) *
               C152617) *
              C152906 +
          (((C8234 * C152910 + C8950 * C152911 + C61026 * C73311) * C152807 +
            (C7579 * C152910 + C8740 * C152911 +
             (C134 * C8939 - C135 * C8936 - C134 * C8940 + C152711 * C8942) *
                 C73311) *
                C152462) *
               C152617 -
           ((C75229 + C75230 + C75231) * C152462 +
            (C7959 * C73311 + C7957 * C152911 + C6616 * C152910) * C152807) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152530 * C1879 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C152530 * C1880 +
           ((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
            (C73548 + C73549 + C73550) * C152462) *
               C152530 * C1881 -
           ((C75229 + C75230 + C75231) * C152462 +
            (C7959 * C73311 + C7957 * C152911 + C6616 * C152910) * C152807) *
               C152530 * C152880) *
              C152814 +
          (((C73547 + C73546 + C73545) * C152807 +
            (C73551 + C73552 + C73553) * C152462) *
               C152530 * C1880 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C152530 * C1879 -
           ((C73554 + C73555 + C73556) * C152462 +
            (C73550 + C73549 + C73548) * C152807) *
               C152530 * C1881 +
           ((C75231 + C75230 + C75229) * C152807 +
            (C1909 * C152910 + C6618 * C152911 +
             (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                 C73311) *
                C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152530 * C152828 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C152530 * C152575) *
              C873 +
          (((C73547 + C73546 + C73545) * C152807 +
            (C73551 + C73552 + C73553) * C152462) *
               C152530 * C152575 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C152530 * C152828) *
              C874 +
          (((C73320 + C73319 + C73318) * C152807 +
            (C73321 + C73322 + C73323) * C152462) *
               C152530 * C152828 -
           ((C73981 + C73982 + C73983) * C152462 +
            (C73553 + C73552 + C73551) * C152807) *
               C152530 * C152575) *
              C875 +
          (((C73983 + C73982 + C73981) * C152807 +
            (C471 * C152910 + C472 * C152911 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C73311) *
                C152462) *
               C152530 * C152575 -
           ((C73324 + C73325 + C73326) * C152462 +
            (C73323 + C73322 + C73321) * C152807) *
               C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152910 +
              C6614 * C152911 + C6615 * C73311) *
                 C152807 +
             (C73315 + C73316 + C73317) * C152462) *
                C2427 -
            ((C73775 + C73776 + C73777) * C152462 +
             (C7577 * C73311 + C7578 * C152911 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152910) *
                 C152807) *
                C2428 +
            (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                  C152910 +
              C8232 * C152911 + C8233 * C73311) *
                 C152807 +
             (C73778 + C73779 + C73780) * C152462) *
                C152873) *
               C152828 +
           (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
             (C74471 + C74472 + C74473) * C152462) *
                C2428 -
            ((C73545 + C73546 + C73547) * C152462 +
             (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
                C2427 -
            ((C76567 + C76568 + C76569) * C152462 +
             (C8236 * C73311 + C8233 * C152911 + C8232 * C152910) * C152807) *
                C152873) *
               C152575) *
              C152814 +
          ((((C73777 + C73776 + C73775) * C152807 +
             (C73781 + C73782 + C73783) * C152462) *
                C2428 -
            ((C73318 + C73319 + C73320) * C152462 +
             (C73317 + C73316 + C73315) * C152807) *
                C2427 -
            ((C73784 + C73785 + C73786) * C152462 +
             (C73780 + C73779 + C73778) * C152807) *
                C152873) *
               C152828 +
           (((C73547 + C73546 + C73545) * C152807 +
             (C73551 + C73552 + C73553) * C152462) *
                C2427 -
            ((C74474 + C74475 + C74476) * C152462 +
             (C74473 + C74472 + C74471) * C152807) *
                C2428 +
            ((C76569 + C76568 + C76567) * C152807 +
             (C2913 * C152910 + C6862 * C152911 +
              (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                  C73311) *
                 C152462) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152829 -
           ((C73775 + C73776 + C73777) * C152462 +
            (C7577 * C73311 + C7578 * C152911 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152910) *
                C152807) *
               C152617) *
              C1879 +
          (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
            (C74471 + C74472 + C74473) * C152462) *
               C152617 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C152829) *
              C1880 +
          (((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
            (C73548 + C73549 + C73550) * C152462) *
               C152829 -
           ((C75522 + C75523 + C75524) * C152462 +
            (C8950 * C73311 + C8234 * C152911 + C7577 * C152910) * C152807) *
               C152617) *
              C1881 +
          (((C8234 * C152910 + C8950 * C152911 + C61026 * C73311) * C152807 +
            (C7579 * C152910 + C8740 * C152911 +
             (C134 * C8939 - C135 * C8936 - C134 * C8940 + C152711 * C8942) *
                 C73311) *
                C152462) *
               C152617 -
           ((C75229 + C75230 + C75231) * C152462 +
            (C7959 * C73311 + C7957 * C152911 + C6616 * C152910) * C152807) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152910 +
              C6614 * C152911 + C6615 * C73311) *
                 C152807 +
             (C73315 + C73316 + C73317) * C152462) *
                C152829 -
            ((C73775 + C73776 + C73777) * C152462 +
             (C7577 * C73311 + C7578 * C152911 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152910) *
                 C152807) *
                C152617) *
               C152828 +
           (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
             (C74471 + C74472 + C74473) * C152462) *
                C152617 -
            ((C73545 + C73546 + C73547) * C152462 +
             (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
                C152829) *
               C152575) *
              C365 +
          ((((C73777 + C73776 + C73775) * C152807 +
             (C73781 + C73782 + C73783) * C152462) *
                C152617 -
            ((C73318 + C73319 + C73320) * C152462 +
             (C73317 + C73316 + C73315) * C152807) *
                C152829) *
               C152828 +
           (((C73547 + C73546 + C73545) * C152807 +
             (C73551 + C73552 + C73553) * C152462) *
                C152829 -
            ((C74474 + C74475 + C74476) * C152462 +
             (C74473 + C74472 + C74471) * C152807) *
                C152617) *
               C152575) *
              C366 +
          ((((C73320 + C73319 + C73318) * C152807 +
             (C73321 + C73322 + C73323) * C152462) *
                C152829 -
            ((C74178 + C74179 + C74180) * C152462 +
             (C73783 + C73782 + C73781) * C152807) *
                C152617) *
               C152828 +
           (((C74476 + C74475 + C74474) * C152807 +
             (C1278 * C152910 + C2130 * C152911 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C73311) *
                 C152462) *
                C152617 -
            ((C73981 + C73982 + C73983) * C152462 +
             (C73553 + C73552 + C73551) * C152807) *
                C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C3047 -
           ((C73775 + C73776 + C73777) * C152462 +
            (C7577 * C73311 + C7578 * C152911 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152910) *
                C152807) *
               C3048 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152910 +
             C8232 * C152911 + C8233 * C73311) *
                C152807 +
            (C73778 + C73779 + C73780) * C152462) *
               C3049 -
           ((C76764 + C76765 + C76766) * C152462 +
            (C10259 * C73311 + C10260 * C152911 +
             (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                 C152910) *
                C152807) *
               C152886) *
              C152828 +
          (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
            (C74471 + C74472 + C74473) * C152462) *
               C3048 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C3047 -
           ((C76567 + C76568 + C76569) * C152462 +
            (C8236 * C73311 + C8233 * C152911 + C8232 * C152910) * C152807) *
               C3049 +
           ((C10260 * C152910 + C10259 * C152911 + C61869 * C73311) * C152807 +
            (C10042 * C152910 + C10041 * C152911 +
             (C134 * C10242 - C135 * C10239 - C134 * C10243 +
              C152711 * C10245) *
                 C73311) *
                C152462) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                    C152910 +
                C6614 * C152911 + C6615 * C73311) *
                   C152807 +
               (C73315 + C73316 + C73317) * C152462) *
                  C152530 * C152512 * C129 -
              ((C73318 + C73319 + C73320) * C152462 +
               (C73317 + C73316 + C73315) * C152807) *
                  C152530 * C152512 * C130 +
              ((C73320 + C73319 + C73318) * C152807 +
               (C73321 + C73322 + C73323) * C152462) *
                  C152530 * C152512 * C131 -
              ((C73324 + C73325 + C73326) * C152462 +
               (C73323 + C73322 + C73321) * C152807) *
                  C152530 * C152512 * C132 +
              ((C73326 + C73325 + C73324) * C152807 +
               (C209 * C152910 + C888 * C152911 +
                (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                    C73311) *
                   C152462) *
                  C152530 * C152512 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                     C152910 +
                 C6614 * C152911 + C6615 * C73311) *
                    C152807 +
                (C73315 + C73316 + C73317) * C152462) *
                   C152530 * C152917 -
               ((C73545 + C73546 + C73547) * C152462 +
                (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) *
                    C152807) *
                   C152530 * C152901 +
               ((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
                (C73548 + C73549 + C73550) * C152462) *
                   C152530 * C152870) *
                  C365 +
              (((C73547 + C73546 + C73545) * C152807 +
                (C73551 + C73552 + C73553) * C152462) *
                   C152530 * C152901 -
               ((C73318 + C73319 + C73320) * C152462 +
                (C73317 + C73316 + C73315) * C152807) *
                   C152530 * C152917 -
               ((C73554 + C73555 + C73556) * C152462 +
                (C73550 + C73549 + C73548) * C152807) *
                   C152530 * C152870) *
                  C366 +
              (((C73320 + C73319 + C73318) * C152807 +
                (C73321 + C73322 + C73323) * C152462) *
                   C152530 * C152917 -
               ((C1908 * C73311 + C470 * C152911 + C465 * C152910) * C152462 +
                (C73553 + C73552 + C73551) * C152807) *
                   C152530 * C152901 +
               ((C73556 + C73555 + C73554) * C152807 +
                (C470 * C152910 + C1908 * C152911 +
                 (C134 * C1545 - C135 * C1530 - C134 * C1546 +
                  C152711 * C1554) *
                     C73311) *
                    C152462) *
                   C152530 * C152870) *
                  C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152918 -
           ((C73775 + C73776 + C73777) * C152462 +
            (C7577 * C73311 + C7578 * C152911 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152910) *
                C152807) *
               C152903 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152910 +
             C8232 * C152911 + C8233 * C73311) *
                C152807 +
            (C73778 + C73779 + C73780) * C152462) *
               C152873) *
              C152512 * C365 +
          (((C73777 + C73776 + C73775) * C152807 +
            (C73781 + C73782 + C73783) * C152462) *
               C152903 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C152918 -
           ((C73784 + C73785 + C73786) * C152462 +
            (C73780 + C73779 + C73778) * C152807) *
               C152873) *
              C152512 * C366 +
          (((C73320 + C73319 + C73318) * C152807 +
            (C73321 + C73322 + C73323) * C152462) *
               C152918 -
           ((C2130 * C73311 + C1278 * C152911 + C726 * C152910) * C152462 +
            (C73783 + C73782 + C73781) * C152807) *
               C152903 +
           ((C73786 + C73785 + C73784) * C152807 +
            (C731 * C152910 + C2912 * C152911 +
             (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                 C73311) *
                C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152530 * C1429 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C152530 * C1430 +
           ((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
            (C73548 + C73549 + C73550) * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C73547 + C73546 + C73545) * C152807 +
            (C73551 + C73552 + C73553) * C152462) *
               C152530 * C1430 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C152530 * C1429 -
           ((C73554 + C73555 + C73556) * C152462 +
            (C73550 + C73549 + C73548) * C152807) *
               C152530 * C152870) *
              C152897 +
          (((C73320 + C73319 + C73318) * C152807 +
            (C73321 + C73322 + C73323) * C152462) *
               C152530 * C1429 -
           ((C73981 + C73982 + C73983) * C152462 +
            (C73553 + C73552 + C73551) * C152807) *
               C152530 * C1430 +
           ((C73556 + C73555 + C73554) * C152807 +
            (C470 * C152910 + C1908 * C152911 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C73311) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152910 +
            C6614 * C152911 + C6615 * C73311) *
               C152807 +
           (C73315 + C73316 + C73317) * C152462) *
              C152530 * C1517 -
          ((C73545 + C73546 + C73547) * C152462 +
           (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
              C152530 * C1518 +
          ((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
           (C73548 + C73549 + C73550) * C152462) *
              C152530 * C1519 -
          ((C7958 * C73311 + C6617 * C152911 + C1910 * C152910) * C152462 +
           (C7959 * C73311 + C7957 * C152911 + C6616 * C152910) * C152807) *
              C152530 * C1520 +
          ((C7957 * C152910 + C7959 * C152911 + C60404 * C73311) * C152807 +
           (C6617 * C152910 + C7958 * C152911 +
            (C134 * C7932 - C135 * C7925 - C134 * C7933 + C152711 * C7937) *
                C73311) *
               C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152918 -
           ((C73775 + C73776 + C73777) * C152462 +
            (C7577 * C73311 + C7578 * C152911 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152910) *
                C152807) *
               C152903 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152910 +
             C8232 * C152911 + C8233 * C73311) *
                C152807 +
            (C73778 + C73779 + C73780) * C152462) *
               C152873) *
              C1429 +
          (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
            (C74471 + C74472 + C74473) * C152462) *
               C152903 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C152918 -
           ((C8235 * C73311 + C6861 * C152911 + C2914 * C152910) * C152462 +
            (C8236 * C73311 + C8233 * C152911 + C8232 * C152910) * C152807) *
               C152873) *
              C1430 +
          (((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
            (C73548 + C73549 + C73550) * C152462) *
               C152918 -
           ((C8740 * C73311 + C7579 * C152911 + C2132 * C152910) * C152462 +
            (C8950 * C73311 + C8234 * C152911 + C7577 * C152910) * C152807) *
               C152903 +
           ((C8233 * C152910 + C8236 * C152911 + C60561 * C73311) * C152807 +
            (C6861 * C152910 + C8235 * C152911 +
             (C134 * C8193 - C135 * C8182 - C134 * C8194 + C152711 * C8200) *
                 C73311) *
                C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C2427 -
           ((C73775 + C73776 + C73777) * C152462 +
            (C7577 * C73311 + C7578 * C152911 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152910) *
                C152807) *
               C2428 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152910 +
             C8232 * C152911 + C8233 * C73311) *
                C152807 +
            (C73778 + C73779 + C73780) * C152462) *
               C152873) *
              C152512 * C152914 +
          (((C73777 + C73776 + C73775) * C152807 +
            (C73781 + C73782 + C73783) * C152462) *
               C2428 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C2427 -
           ((C73784 + C73785 + C73786) * C152462 +
            (C73780 + C73779 + C73778) * C152807) *
               C152873) *
              C152512 * C152897 +
          (((C73320 + C73319 + C73318) * C152807 +
            (C73321 + C73322 + C73323) * C152462) *
               C2427 -
           ((C74178 + C74179 + C74180) * C152462 +
            (C73783 + C73782 + C73781) * C152807) *
               C2428 +
           ((C73786 + C73785 + C73784) * C152807 +
            (C731 * C152910 + C2912 * C152911 +
             (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                 C73311) *
                C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C2427 -
           ((C73775 + C73776 + C73777) * C152462 +
            (C7577 * C73311 + C7578 * C152911 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152910) *
                C152807) *
               C2428 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152910 +
             C8232 * C152911 + C8233 * C73311) *
                C152807 +
            (C73778 + C73779 + C73780) * C152462) *
               C152873) *
              C152917 +
          (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
            (C74471 + C74472 + C74473) * C152462) *
               C2428 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C2427 -
           ((C8235 * C73311 + C6861 * C152911 + C2914 * C152910) * C152462 +
            (C8236 * C73311 + C8233 * C152911 + C8232 * C152910) * C152807) *
               C152873) *
              C152901 +
          (((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
            (C73548 + C73549 + C73550) * C152462) *
               C2427 -
           ((C75522 + C75523 + C75524) * C152462 +
            (C8950 * C73311 + C8234 * C152911 + C7577 * C152910) * C152807) *
               C2428 +
           ((C8233 * C152910 + C8236 * C152911 + C60561 * C73311) * C152807 +
            (C6861 * C152910 + C8235 * C152911 +
             (C134 * C8193 - C135 * C8182 - C134 * C8194 + C152711 * C8200) *
                 C73311) *
                C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152910 +
            C6614 * C152911 + C6615 * C73311) *
               C152807 +
           (C73315 + C73316 + C73317) * C152462) *
              C2658 -
          ((C73775 + C73776 + C73777) * C152462 +
           (C7577 * C73311 + C7578 * C152911 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C152910) *
               C152807) *
              C2659 +
          (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C152910 +
            C8232 * C152911 + C8233 * C73311) *
               C152807 +
           (C73778 + C73779 + C73780) * C152462) *
              C2660 -
          ((C10041 * C73311 + C10042 * C152911 + C3076 * C152910) * C152462 +
           (C10259 * C73311 + C10260 * C152911 +
            (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                C152910) *
               C152807) *
              C2661 +
          (((C134 * C2679 - C135 * C2667 - C134 * C2680 + C152711 * C2691) *
                C152910 +
            (C134 * C9518 - C135 * C9510 - C134 * C9519 + C152711 * C9528) *
                C152911 +
            (C134 * C9520 - C135 * C9511 - C134 * C9521 + C152711 * C9529) *
                C73311) *
               C152807 +
           ((C134 * C2681 - C135 * C2668 - C134 * C2682 + C152711 * C2692) *
                C152910 +
            (C134 * C9522 - C135 * C9512 - C134 * C9523 + C152711 * C9530) *
                C152911 +
            (C134 * C9524 - C135 * C9513 - C134 * C9525 + C152711 * C9531) *
                C73311) *
               C152462) *
              C2662) *
         C152512 * C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152910 +
              C6614 * C152911 + C6615 * C73311) *
                 C152807 +
             (C73315 + C73316 + C73317) * C152462) *
                C152829 -
            ((C73775 + C73776 + C73777) * C152462 +
             (C7577 * C73311 + C7578 * C152911 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152910) *
                 C152807) *
                C152617) *
               C1429 +
           (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
             (C74471 + C74472 + C74473) * C152462) *
                C152617 -
            ((C73545 + C73546 + C73547) * C152462 +
             (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
                C152829) *
               C1430 +
           (((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
             (C73548 + C73549 + C73550) * C152462) *
                C152829 -
            ((C75522 + C75523 + C75524) * C152462 +
             (C8950 * C73311 + C8234 * C152911 + C7577 * C152910) * C152807) *
                C152617) *
               C152870) *
              C152814 +
          ((((C73777 + C73776 + C73775) * C152807 +
             (C73781 + C73782 + C73783) * C152462) *
                C152617 -
            ((C73318 + C73319 + C73320) * C152462 +
             (C73317 + C73316 + C73315) * C152807) *
                C152829) *
               C1429 +
           (((C73547 + C73546 + C73545) * C152807 +
             (C73551 + C73552 + C73553) * C152462) *
                C152829 -
            ((C74474 + C74475 + C74476) * C152462 +
             (C74473 + C74472 + C74471) * C152807) *
                C152617) *
               C1430 +
           (((C75524 + C75523 + C75522) * C152807 +
             (C2131 * C152910 + C7580 * C152911 +
              (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                  C73311) *
                 C152462) *
                C152617 -
            ((C73554 + C73555 + C73556) * C152462 +
             (C73550 + C73549 + C73548) * C152807) *
                C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152829 -
           ((C73775 + C73776 + C73777) * C152462 +
            (C7577 * C73311 + C7578 * C152911 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152910) *
                C152807) *
               C152617) *
              C152512 * C873 +
          (((C73777 + C73776 + C73775) * C152807 +
            (C73781 + C73782 + C73783) * C152462) *
               C152617 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C152829) *
              C152512 * C874 +
          (((C73320 + C73319 + C73318) * C152807 +
            (C73321 + C73322 + C73323) * C152462) *
               C152829 -
           ((C74178 + C74179 + C74180) * C152462 +
            (C73783 + C73782 + C73781) * C152807) *
               C152617) *
              C152512 * C875 +
          (((C74180 + C74179 + C74178) * C152807 +
            (C732 * C152910 + C1279 * C152911 +
             (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                 C73311) *
                C152462) *
               C152617 -
           ((C73324 + C73325 + C73326) * C152462 +
            (C73323 + C73322 + C73321) * C152807) *
               C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C3047 -
           ((C73775 + C73776 + C73777) * C152462 +
            (C7577 * C73311 + C7578 * C152911 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152910) *
                C152807) *
               C3048 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152910 +
             C8232 * C152911 + C8233 * C73311) *
                C152807 +
            (C73778 + C73779 + C73780) * C152462) *
               C3049 -
           ((C76764 + C76765 + C76766) * C152462 +
            (C10259 * C73311 + C10260 * C152911 +
             (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                 C152910) *
                C152807) *
               C152886) *
              C152512 * C152814 +
          (((C73777 + C73776 + C73775) * C152807 +
            (C73781 + C73782 + C73783) * C152462) *
               C3048 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C3047 -
           ((C73784 + C73785 + C73786) * C152462 +
            (C73780 + C73779 + C73778) * C152807) *
               C3049 +
           ((C76766 + C76765 + C76764) * C152807 +
            (C3075 * C152910 + C26880 * C152911 +
             (C134 * C10024 - C135 * C10023 - C134 * C10025 +
              C152711 * C10026) *
                 C73311) *
                C152462) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152530 * C152917 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C152530 * C152901 +
           ((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
            (C73548 + C73549 + C73550) * C152462) *
               C152530 * C152870) *
              C365 +
          (((C73547 + C73546 + C73545) * C152807 +
            (C73551 + C73552 + C73553) * C152462) *
               C152530 * C152901 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C152530 * C152917 -
           ((C73554 + C73555 + C73556) * C152462 +
            (C73550 + C73549 + C73548) * C152807) *
               C152530 * C152870) *
              C366 +
          (((C73320 + C73319 + C73318) * C152807 +
            (C73321 + C73322 + C73323) * C152462) *
               C152530 * C152917 -
           ((C1908 * C73311 + C470 * C152911 + C465 * C152910) * C152462 +
            (C73553 + C73552 + C73551) * C152807) *
               C152530 * C152901 +
           ((C73556 + C73555 + C73554) * C152807 +
            (C470 * C152910 + C1908 * C152911 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C73311) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152910 +
            C6614 * C152911 + C6615 * C73311) *
               C152807 +
           (C73315 + C73316 + C73317) * C152462) *
              C152530 * C152512 * C129 -
          ((C73318 + C73319 + C73320) * C152462 +
           (C73317 + C73316 + C73315) * C152807) *
              C152530 * C152512 * C130 +
          ((C73320 + C73319 + C73318) * C152807 +
           (C73321 + C73322 + C73323) * C152462) *
              C152530 * C152512 * C131 -
          ((C73324 + C73325 + C73326) * C152462 +
           (C73323 + C73322 + C73321) * C152807) *
              C152530 * C152512 * C132 +
          ((C73326 + C73325 + C73324) * C152807 +
           (C209 * C152910 + C888 * C152911 +
            (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                C73311) *
               C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152530 * C1429 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C152530 * C1430 +
           ((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
            (C73548 + C73549 + C73550) * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C73547 + C73546 + C73545) * C152807 +
            (C73551 + C73552 + C73553) * C152462) *
               C152530 * C1430 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C152530 * C1429 -
           ((C73554 + C73555 + C73556) * C152462 +
            (C73550 + C73549 + C73548) * C152807) *
               C152530 * C152870) *
              C152897 +
          (((C73320 + C73319 + C73318) * C152807 +
            (C73321 + C73322 + C73323) * C152462) *
               C152530 * C1429 -
           ((C73981 + C73982 + C73983) * C152462 +
            (C73553 + C73552 + C73551) * C152807) *
               C152530 * C1430 +
           ((C73556 + C73555 + C73554) * C152807 +
            (C470 * C152910 + C1908 * C152911 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C73311) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152910 +
            C6614 * C152911 + C6615 * C73311) *
               C152807 +
           (C73315 + C73316 + C73317) * C152462) *
              C152530 * C1517 -
          ((C73545 + C73546 + C73547) * C152462 +
           (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
              C152530 * C1518 +
          ((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
           (C73548 + C73549 + C73550) * C152462) *
              C152530 * C1519 -
          ((C7958 * C73311 + C6617 * C152911 + C1910 * C152910) * C152462 +
           (C7959 * C73311 + C7957 * C152911 + C6616 * C152910) * C152807) *
              C152530 * C1520 +
          ((C7957 * C152910 + C7959 * C152911 + C60404 * C73311) * C152807 +
           (C6617 * C152910 + C7958 * C152911 +
            (C134 * C7932 - C135 * C7925 - C134 * C7933 + C152711 * C7937) *
                C73311) *
               C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C2427 -
           ((C73775 + C73776 + C73777) * C152462 +
            (C7577 * C73311 + C7578 * C152911 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152910) *
                C152807) *
               C2428 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152910 +
             C8232 * C152911 + C8233 * C73311) *
                C152807 +
            (C73778 + C73779 + C73780) * C152462) *
               C152873) *
              C152512 * C152914 +
          (((C73777 + C73776 + C73775) * C152807 +
            (C73781 + C73782 + C73783) * C152462) *
               C2428 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C2427 -
           ((C73784 + C73785 + C73786) * C152462 +
            (C73780 + C73779 + C73778) * C152807) *
               C152873) *
              C152512 * C152897 +
          (((C73320 + C73319 + C73318) * C152807 +
            (C73321 + C73322 + C73323) * C152462) *
               C2427 -
           ((C74178 + C74179 + C74180) * C152462 +
            (C73783 + C73782 + C73781) * C152807) *
               C2428 +
           ((C73786 + C73785 + C73784) * C152807 +
            (C731 * C152910 + C2912 * C152911 +
             (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                 C73311) *
                C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C2427 -
           ((C73775 + C73776 + C73777) * C152462 +
            (C7577 * C73311 + C7578 * C152911 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152910) *
                C152807) *
               C2428 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152910 +
             C8232 * C152911 + C8233 * C73311) *
                C152807 +
            (C73778 + C73779 + C73780) * C152462) *
               C152873) *
              C152917 +
          (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
            (C74471 + C74472 + C74473) * C152462) *
               C2428 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C2427 -
           ((C8235 * C73311 + C6861 * C152911 + C2914 * C152910) * C152462 +
            (C8236 * C73311 + C8233 * C152911 + C8232 * C152910) * C152807) *
               C152873) *
              C152901 +
          (((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
            (C73548 + C73549 + C73550) * C152462) *
               C2427 -
           ((C75522 + C75523 + C75524) * C152462 +
            (C8950 * C73311 + C8234 * C152911 + C7577 * C152910) * C152807) *
               C2428 +
           ((C8233 * C152910 + C8236 * C152911 + C60561 * C73311) * C152807 +
            (C6861 * C152910 + C8235 * C152911 +
             (C134 * C8193 - C135 * C8182 - C134 * C8194 + C152711 * C8200) *
                 C73311) *
                C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152910 +
              C6614 * C152911 + C6615 * C73311) *
                 C152807 +
             (C73315 + C73316 + C73317) * C152462) *
                C4361 -
            ((C73775 + C73776 + C73777) * C152462 +
             (C7577 * C73311 + C7578 * C152911 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152910) *
                 C152807) *
                C152617) *
               C152828 +
           (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
             (C74471 + C74472 + C74473) * C152462) *
                C152617 -
            ((C73545 + C73546 + C73547) * C152462 +
             (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
                C4361) *
               C152575) *
              C152489 +
          ((((C73777 + C73776 + C73775) * C152807 +
             (C73781 + C73782 + C73783) * C152462) *
                C152617 -
            ((C73318 + C73319 + C73320) * C152462 +
             (C73317 + C73316 + C73315) * C152807) *
                C4361) *
               C152828 +
           (((C73547 + C73546 + C73545) * C152807 +
             (C73551 + C73552 + C73553) * C152462) *
                C4361 -
            ((C74474 + C74475 + C74476) * C152462 +
             (C74473 + C74472 + C74471) * C152807) *
                C152617) *
               C152575) *
              C152498 +
          ((((C73320 + C73319 + C73318) * C152807 +
             (C73321 + C73322 + C73323) * C152462) *
                C4361 -
            ((C74178 + C74179 + C74180) * C152462 +
             (C73783 + C73782 + C73781) * C152807) *
                C152617) *
               C152828 +
           (((C74476 + C74475 + C74474) * C152807 +
             (C1278 * C152910 + C2130 * C152911 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C73311) *
                 C152462) *
                C152617 -
            ((C73981 + C73982 + C73983) * C152462 +
             (C73553 + C73552 + C73551) * C152807) *
                C4361) *
               C152575) *
              C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152910 +
              C6614 * C152911 + C6615 * C73311) *
                 C152807 +
             (C73315 + C73316 + C73317) * C152462) *
                C152613 -
            ((C73775 + C73776 + C73777) * C152462 +
             (C7577 * C73311 + C7578 * C152911 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152910) *
                 C152807) *
                C152620 +
            (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                  C152910 +
              C8232 * C152911 + C8233 * C73311) *
                 C152807 +
             (C73778 + C73779 + C73780) * C152462) *
                C5033) *
               C152828 +
           (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
             (C74471 + C74472 + C74473) * C152462) *
                C152620 -
            ((C73545 + C73546 + C73547) * C152462 +
             (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
                C152613 -
            ((C76567 + C76568 + C76569) * C152462 +
             (C8236 * C73311 + C8233 * C152911 + C8232 * C152910) * C152807) *
                C5033) *
               C152575) *
              C3495 +
          ((((C73777 + C73776 + C73775) * C152807 +
             (C73781 + C73782 + C73783) * C152462) *
                C152620 -
            ((C73318 + C73319 + C73320) * C152462 +
             (C73317 + C73316 + C73315) * C152807) *
                C152613 -
            ((C73784 + C73785 + C73786) * C152462 +
             (C73780 + C73779 + C73778) * C152807) *
                C5033) *
               C152828 +
           (((C73547 + C73546 + C73545) * C152807 +
             (C73551 + C73552 + C73553) * C152462) *
                C152613 -
            ((C74474 + C74475 + C74476) * C152462 +
             (C74473 + C74472 + C74471) * C152807) *
                C152620 +
            ((C76569 + C76568 + C76567) * C152807 +
             (C2913 * C152910 + C6862 * C152911 +
              (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                  C73311) *
                 C152462) *
                C5033) *
               C152575) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152910 +
              C6614 * C152911 + C6615 * C73311) *
                 C152807 +
             (C73315 + C73316 + C73317) * C152462) *
                C4361 -
            ((C73775 + C73776 + C73777) * C152462 +
             (C7577 * C73311 + C7578 * C152911 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152910) *
                 C152807) *
                C152617) *
               C152917 +
           (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
             (C74471 + C74472 + C74473) * C152462) *
                C152617 -
            ((C73545 + C73546 + C73547) * C152462 +
             (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
                C4361) *
               C152901 +
           (((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
             (C73548 + C73549 + C73550) * C152462) *
                C4361 -
            ((C75522 + C75523 + C75524) * C152462 +
             (C8950 * C73311 + C8234 * C152911 + C7577 * C152910) * C152807) *
                C152617) *
               C152870) *
              C3495 +
          ((((C73777 + C73776 + C73775) * C152807 +
             (C73781 + C73782 + C73783) * C152462) *
                C152617 -
            ((C73318 + C73319 + C73320) * C152462 +
             (C73317 + C73316 + C73315) * C152807) *
                C4361) *
               C152917 +
           (((C73547 + C73546 + C73545) * C152807 +
             (C73551 + C73552 + C73553) * C152462) *
                C4361 -
            ((C74474 + C74475 + C74476) * C152462 +
             (C74473 + C74472 + C74471) * C152807) *
                C152617) *
               C152901 +
           (((C75524 + C75523 + C75522) * C152807 +
             (C2131 * C152910 + C7580 * C152911 +
              (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                  C73311) *
                 C152462) *
                C152617 -
            ((C73554 + C73555 + C73556) * C152462 +
             (C73550 + C73549 + C73548) * C152807) *
                C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C4361 -
           ((C73775 + C73776 + C73777) * C152462 +
            (C7577 * C73311 + C7578 * C152911 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152910) *
                C152807) *
               C152617) *
              C152512 * C152923 +
          (((C73777 + C73776 + C73775) * C152807 +
            (C73781 + C73782 + C73783) * C152462) *
               C152617 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C4361) *
              C152512 * C152916 +
          (((C73320 + C73319 + C73318) * C152807 +
            (C73321 + C73322 + C73323) * C152462) *
               C4361 -
           ((C74178 + C74179 + C74180) * C152462 +
            (C73783 + C73782 + C73781) * C152807) *
               C152617) *
              C152512 * C152899 +
          (((C74180 + C74179 + C74178) * C152807 +
            (C732 * C152910 + C1279 * C152911 +
             (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                 C73311) *
                C152462) *
               C152617 -
           ((C73324 + C73325 + C73326) * C152462 +
            (C73323 + C73322 + C73321) * C152807) *
               C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152925 -
           ((C73775 + C73776 + C73777) * C152462 +
            (C7577 * C73311 + C7578 * C152911 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152910) *
                C152807) *
               C152922 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152910 +
             C8232 * C152911 + C8233 * C73311) *
                C152807 +
            (C73778 + C73779 + C73780) * C152462) *
               C152909 -
           ((C76764 + C76765 + C76766) * C152462 +
            (C10259 * C73311 + C10260 * C152911 +
             (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                 C152910) *
                C152807) *
               C152886) *
              C152512 * C3495 +
          (((C73777 + C73776 + C73775) * C152807 +
            (C73781 + C73782 + C73783) * C152462) *
               C152922 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C152925 -
           ((C73784 + C73785 + C73786) * C152462 +
            (C73780 + C73779 + C73778) * C152807) *
               C152909 +
           ((C76766 + C76765 + C76764) * C152807 +
            (C3075 * C152910 + C26880 * C152911 +
             (C134 * C10024 - C135 * C10023 - C134 * C10025 +
              C152711 * C10026) *
                 C73311) *
                C152462) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152613 -
           ((C73775 + C73776 + C73777) * C152462 +
            (C7577 * C73311 + C7578 * C152911 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152910) *
                C152807) *
               C152620 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152910 +
             C8232 * C152911 + C8233 * C73311) *
                C152807 +
            (C73778 + C73779 + C73780) * C152462) *
               C5033) *
              C152512 * C152489 +
          (((C73777 + C73776 + C73775) * C152807 +
            (C73781 + C73782 + C73783) * C152462) *
               C152620 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C152613 -
           ((C73784 + C73785 + C73786) * C152462 +
            (C73780 + C73779 + C73778) * C152807) *
               C5033) *
              C152512 * C152498 +
          (((C73320 + C73319 + C73318) * C152807 +
            (C73321 + C73322 + C73323) * C152462) *
               C152613 -
           ((C74178 + C74179 + C74180) * C152462 +
            (C73783 + C73782 + C73781) * C152807) *
               C152620 +
           ((C73786 + C73785 + C73784) * C152807 +
            (C731 * C152910 + C2912 * C152911 +
             (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                 C73311) *
                C152462) *
               C5033) *
              C152512 * C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C4361 -
           ((C73775 + C73776 + C73777) * C152462 +
            (C7577 * C73311 + C7578 * C152911 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152910) *
                C152807) *
               C152617) *
              C152512 * C152923 +
          (((C73777 + C73776 + C73775) * C152807 +
            (C73781 + C73782 + C73783) * C152462) *
               C152617 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C4361) *
              C152512 * C152916 +
          (((C73320 + C73319 + C73318) * C152807 +
            (C73321 + C73322 + C73323) * C152462) *
               C4361 -
           ((C74178 + C74179 + C74180) * C152462 +
            (C73783 + C73782 + C73781) * C152807) *
               C152617) *
              C152512 * C152899 +
          (((C74180 + C74179 + C74178) * C152807 +
            (C732 * C152910 + C1279 * C152911 +
             (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                 C73311) *
                C152462) *
               C152617 -
           ((C73324 + C73325 + C73326) * C152462 +
            (C73323 + C73322 + C73321) * C152807) *
               C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152910 +
              C6614 * C152911 + C6615 * C73311) *
                 C152807 +
             (C73315 + C73316 + C73317) * C152462) *
                C4361 -
            ((C73775 + C73776 + C73777) * C152462 +
             (C7577 * C73311 + C7578 * C152911 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152910) *
                 C152807) *
                C152617) *
               C152917 +
           (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
             (C74471 + C74472 + C74473) * C152462) *
                C152617 -
            ((C73545 + C73546 + C73547) * C152462 +
             (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
                C4361) *
               C152901 +
           (((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
             (C73548 + C73549 + C73550) * C152462) *
                C4361 -
            ((C75522 + C75523 + C75524) * C152462 +
             (C8950 * C73311 + C8234 * C152911 + C7577 * C152910) * C152807) *
                C152617) *
               C152870) *
              C3495 +
          ((((C73777 + C73776 + C73775) * C152807 +
             (C73781 + C73782 + C73783) * C152462) *
                C152617 -
            ((C73318 + C73319 + C73320) * C152462 +
             (C73317 + C73316 + C73315) * C152807) *
                C4361) *
               C152917 +
           (((C73547 + C73546 + C73545) * C152807 +
             (C73551 + C73552 + C73553) * C152462) *
                C4361 -
            ((C74474 + C74475 + C74476) * C152462 +
             (C74473 + C74472 + C74471) * C152807) *
                C152617) *
               C152901 +
           (((C75524 + C75523 + C75522) * C152807 +
             (C2131 * C152910 + C7580 * C152911 +
              (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                  C73311) *
                 C152462) *
                C152617 -
            ((C73554 + C73555 + C73556) * C152462 +
             (C73550 + C73549 + C73548) * C152807) *
                C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152530 * C152828 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C152530 * C152575) *
              C873 +
          (((C73547 + C73546 + C73545) * C152807 +
            (C73551 + C73552 + C73553) * C152462) *
               C152530 * C152575 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C152530 * C152828) *
              C874 +
          (((C73320 + C73319 + C73318) * C152807 +
            (C73321 + C73322 + C73323) * C152462) *
               C152530 * C152828 -
           ((C73981 + C73982 + C73983) * C152462 +
            (C73553 + C73552 + C73551) * C152807) *
               C152530 * C152575) *
              C875 +
          (((C73983 + C73982 + C73981) * C152807 +
            (C471 * C152910 + C472 * C152911 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C73311) *
                C152462) *
               C152530 * C152575 -
           ((C73324 + C73325 + C73326) * C152462 +
            (C73323 + C73322 + C73321) * C152807) *
               C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152530 * C1879 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C152530 * C1880 +
           ((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
            (C73548 + C73549 + C73550) * C152462) *
               C152530 * C1881 -
           ((C75229 + C75230 + C75231) * C152462 +
            (C7959 * C73311 + C7957 * C152911 + C6616 * C152910) * C152807) *
               C152530 * C152880) *
              C152814 +
          (((C73547 + C73546 + C73545) * C152807 +
            (C73551 + C73552 + C73553) * C152462) *
               C152530 * C1880 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C152530 * C1879 -
           ((C73554 + C73555 + C73556) * C152462 +
            (C73550 + C73549 + C73548) * C152807) *
               C152530 * C1881 +
           ((C75231 + C75230 + C75229) * C152807 +
            (C1909 * C152910 + C6618 * C152911 +
             (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                 C73311) *
                C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152910 +
              C6614 * C152911 + C6615 * C73311) *
                 C152807 +
             (C73315 + C73316 + C73317) * C152462) *
                C152829 -
            ((C73775 + C73776 + C73777) * C152462 +
             (C7577 * C73311 + C7578 * C152911 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152910) *
                 C152807) *
                C152617) *
               C152828 +
           (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
             (C74471 + C74472 + C74473) * C152462) *
                C152617 -
            ((C73545 + C73546 + C73547) * C152462 +
             (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
                C152829) *
               C152575) *
              C365 +
          ((((C73777 + C73776 + C73775) * C152807 +
             (C73781 + C73782 + C73783) * C152462) *
                C152617 -
            ((C73318 + C73319 + C73320) * C152462 +
             (C73317 + C73316 + C73315) * C152807) *
                C152829) *
               C152828 +
           (((C73547 + C73546 + C73545) * C152807 +
             (C73551 + C73552 + C73553) * C152462) *
                C152829 -
            ((C74474 + C74475 + C74476) * C152462 +
             (C74473 + C74472 + C74471) * C152807) *
                C152617) *
               C152575) *
              C366 +
          ((((C73320 + C73319 + C73318) * C152807 +
             (C73321 + C73322 + C73323) * C152462) *
                C152829 -
            ((C74178 + C74179 + C74180) * C152462 +
             (C73783 + C73782 + C73781) * C152807) *
                C152617) *
               C152828 +
           (((C74476 + C74475 + C74474) * C152807 +
             (C1278 * C152910 + C2130 * C152911 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C73311) *
                 C152462) *
                C152617 -
            ((C73981 + C73982 + C73983) * C152462 +
             (C73553 + C73552 + C73551) * C152807) *
                C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152829 -
           ((C73775 + C73776 + C73777) * C152462 +
            (C7577 * C73311 + C7578 * C152911 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152910) *
                C152807) *
               C152617) *
              C1879 +
          (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
            (C74471 + C74472 + C74473) * C152462) *
               C152617 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C152829) *
              C1880 +
          (((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
            (C73548 + C73549 + C73550) * C152462) *
               C152829 -
           ((C75522 + C75523 + C75524) * C152462 +
            (C8950 * C73311 + C8234 * C152911 + C7577 * C152910) * C152807) *
               C152617) *
              C1881 +
          (((C8234 * C152910 + C8950 * C152911 + C61026 * C73311) * C152807 +
            (C7579 * C152910 + C8740 * C152911 +
             (C134 * C8939 - C135 * C8936 - C134 * C8940 + C152711 * C8942) *
                 C73311) *
                C152462) *
               C152617 -
           ((C75229 + C75230 + C75231) * C152462 +
            (C7959 * C73311 + C7957 * C152911 + C6616 * C152910) * C152807) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152530 * C152917 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C152530 * C152901 +
           ((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
            (C73548 + C73549 + C73550) * C152462) *
               C152530 * C152870) *
              C365 +
          (((C73547 + C73546 + C73545) * C152807 +
            (C73551 + C73552 + C73553) * C152462) *
               C152530 * C152901 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C152530 * C152917 -
           ((C73554 + C73555 + C73556) * C152462 +
            (C73550 + C73549 + C73548) * C152807) *
               C152530 * C152870) *
              C366 +
          (((C73320 + C73319 + C73318) * C152807 +
            (C73321 + C73322 + C73323) * C152462) *
               C152530 * C152917 -
           ((C1908 * C73311 + C470 * C152911 + C465 * C152910) * C152462 +
            (C73553 + C73552 + C73551) * C152807) *
               C152530 * C152901 +
           ((C73556 + C73555 + C73554) * C152807 +
            (C470 * C152910 + C1908 * C152911 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C73311) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152910 +
            C6614 * C152911 + C6615 * C73311) *
               C152807 +
           (C73315 + C73316 + C73317) * C152462) *
              C152530 * C152512 * C129 -
          ((C73318 + C73319 + C73320) * C152462 +
           (C73317 + C73316 + C73315) * C152807) *
              C152530 * C152512 * C130 +
          ((C73320 + C73319 + C73318) * C152807 +
           (C73321 + C73322 + C73323) * C152462) *
              C152530 * C152512 * C131 -
          ((C73324 + C73325 + C73326) * C152462 +
           (C73323 + C73322 + C73321) * C152807) *
              C152530 * C152512 * C132 +
          ((C73326 + C73325 + C73324) * C152807 +
           (C209 * C152910 + C888 * C152911 +
            (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                C73311) *
               C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152918 -
           ((C73775 + C73776 + C73777) * C152462 +
            (C7577 * C73311 + C7578 * C152911 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152910) *
                C152807) *
               C152903 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152910 +
             C8232 * C152911 + C8233 * C73311) *
                C152807 +
            (C73778 + C73779 + C73780) * C152462) *
               C152873) *
              C152512 * C365 +
          (((C73777 + C73776 + C73775) * C152807 +
            (C73781 + C73782 + C73783) * C152462) *
               C152903 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C152918 -
           ((C73784 + C73785 + C73786) * C152462 +
            (C73780 + C73779 + C73778) * C152807) *
               C152873) *
              C152512 * C366 +
          (((C73320 + C73319 + C73318) * C152807 +
            (C73321 + C73322 + C73323) * C152462) *
               C152918 -
           ((C2130 * C73311 + C1278 * C152911 + C726 * C152910) * C152462 +
            (C73783 + C73782 + C73781) * C152807) *
               C152903 +
           ((C73786 + C73785 + C73784) * C152807 +
            (C731 * C152910 + C2912 * C152911 +
             (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                 C73311) *
                C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152530 * C1429 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C152530 * C1430 +
           ((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
            (C73548 + C73549 + C73550) * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C73547 + C73546 + C73545) * C152807 +
            (C73551 + C73552 + C73553) * C152462) *
               C152530 * C1430 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C152530 * C1429 -
           ((C73554 + C73555 + C73556) * C152462 +
            (C73550 + C73549 + C73548) * C152807) *
               C152530 * C152870) *
              C152897 +
          (((C73320 + C73319 + C73318) * C152807 +
            (C73321 + C73322 + C73323) * C152462) *
               C152530 * C1429 -
           ((C73981 + C73982 + C73983) * C152462 +
            (C73553 + C73552 + C73551) * C152807) *
               C152530 * C1430 +
           ((C73556 + C73555 + C73554) * C152807 +
            (C470 * C152910 + C1908 * C152911 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C73311) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152910 +
            C6614 * C152911 + C6615 * C73311) *
               C152807 +
           (C73315 + C73316 + C73317) * C152462) *
              C152530 * C1517 -
          ((C73545 + C73546 + C73547) * C152462 +
           (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
              C152530 * C1518 +
          ((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
           (C73548 + C73549 + C73550) * C152462) *
              C152530 * C1519 -
          ((C7958 * C73311 + C6617 * C152911 + C1910 * C152910) * C152462 +
           (C7959 * C73311 + C7957 * C152911 + C6616 * C152910) * C152807) *
              C152530 * C1520 +
          ((C7957 * C152910 + C7959 * C152911 + C60404 * C73311) * C152807 +
           (C6617 * C152910 + C7958 * C152911 +
            (C134 * C7932 - C135 * C7925 - C134 * C7933 + C152711 * C7937) *
                C73311) *
               C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152918 -
           ((C73775 + C73776 + C73777) * C152462 +
            (C7577 * C73311 + C7578 * C152911 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152910) *
                C152807) *
               C152903 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C152910 +
             C8232 * C152911 + C8233 * C73311) *
                C152807 +
            (C73778 + C73779 + C73780) * C152462) *
               C152873) *
              C1429 +
          (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
            (C74471 + C74472 + C74473) * C152462) *
               C152903 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C152918 -
           ((C8235 * C73311 + C6861 * C152911 + C2914 * C152910) * C152462 +
            (C8236 * C73311 + C8233 * C152911 + C8232 * C152910) * C152807) *
               C152873) *
              C1430 +
          (((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
            (C73548 + C73549 + C73550) * C152462) *
               C152918 -
           ((C8740 * C73311 + C7579 * C152911 + C2132 * C152910) * C152462 +
            (C8950 * C73311 + C8234 * C152911 + C7577 * C152910) * C152807) *
               C152903 +
           ((C8233 * C152910 + C8236 * C152911 + C60561 * C73311) * C152807 +
            (C6861 * C152910 + C8235 * C152911 +
             (C134 * C8193 - C135 * C8182 - C134 * C8194 + C152711 * C8200) *
                 C73311) *
                C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152829 -
           ((C73775 + C73776 + C73777) * C152462 +
            (C7577 * C73311 + C7578 * C152911 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C152910) *
                C152807) *
               C152617) *
              C152512 * C873 +
          (((C73777 + C73776 + C73775) * C152807 +
            (C73781 + C73782 + C73783) * C152462) *
               C152617 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C152829) *
              C152512 * C874 +
          (((C73320 + C73319 + C73318) * C152807 +
            (C73321 + C73322 + C73323) * C152462) *
               C152829 -
           ((C74178 + C74179 + C74180) * C152462 +
            (C73783 + C73782 + C73781) * C152807) *
               C152617) *
              C152512 * C875 +
          (((C74180 + C74179 + C74178) * C152807 +
            (C732 * C152910 + C1279 * C152911 +
             (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                 C73311) *
                C152462) *
               C152617 -
           ((C73324 + C73325 + C73326) * C152462 +
            (C73323 + C73322 + C73321) * C152807) *
               C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C152910 +
              C6614 * C152911 + C6615 * C73311) *
                 C152807 +
             (C73315 + C73316 + C73317) * C152462) *
                C152829 -
            ((C73775 + C73776 + C73777) * C152462 +
             (C7577 * C73311 + C7578 * C152911 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C152910) *
                 C152807) *
                C152617) *
               C1429 +
           (((C7578 * C152910 + C7577 * C152911 + C8234 * C73311) * C152807 +
             (C74471 + C74472 + C74473) * C152462) *
                C152617 -
            ((C73545 + C73546 + C73547) * C152462 +
             (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
                C152829) *
               C1430 +
           (((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
             (C73548 + C73549 + C73550) * C152462) *
                C152829 -
            ((C75522 + C75523 + C75524) * C152462 +
             (C8950 * C73311 + C8234 * C152911 + C7577 * C152910) * C152807) *
                C152617) *
               C152870) *
              C152814 +
          ((((C73777 + C73776 + C73775) * C152807 +
             (C73781 + C73782 + C73783) * C152462) *
                C152617 -
            ((C73318 + C73319 + C73320) * C152462 +
             (C73317 + C73316 + C73315) * C152807) *
                C152829) *
               C1429 +
           (((C73547 + C73546 + C73545) * C152807 +
             (C73551 + C73552 + C73553) * C152462) *
                C152829 -
            ((C74474 + C74475 + C74476) * C152462 +
             (C74473 + C74472 + C74471) * C152807) *
                C152617) *
               C1430 +
           (((C75524 + C75523 + C75522) * C152807 +
             (C2131 * C152910 + C7580 * C152911 +
              (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                  C73311) *
                 C152462) *
                C152617 -
            ((C73554 + C73555 + C73556) * C152462 +
             (C73550 + C73549 + C73548) * C152807) *
                C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152910 +
            C6614 * C152911 + C6615 * C73311) *
               C152807 +
           (C73315 + C73316 + C73317) * C152462) *
              C152530 * C152512 * C129 -
          ((C73318 + C73319 + C73320) * C152462 +
           (C73317 + C73316 + C73315) * C152807) *
              C152530 * C152512 * C130 +
          ((C73320 + C73319 + C73318) * C152807 +
           (C73321 + C73322 + C73323) * C152462) *
              C152530 * C152512 * C131 -
          ((C73324 + C73325 + C73326) * C152462 +
           (C73323 + C73322 + C73321) * C152807) *
              C152530 * C152512 * C132 +
          ((C73326 + C73325 + C73324) * C152807 +
           (C209 * C152910 + C888 * C152911 +
            (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                C73311) *
               C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152530 * C152917 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C152530 * C152901 +
           ((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
            (C73548 + C73549 + C73550) * C152462) *
               C152530 * C152870) *
              C365 +
          (((C73547 + C73546 + C73545) * C152807 +
            (C73551 + C73552 + C73553) * C152462) *
               C152530 * C152901 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C152530 * C152917 -
           ((C73554 + C73555 + C73556) * C152462 +
            (C73550 + C73549 + C73548) * C152807) *
               C152530 * C152870) *
              C366 +
          (((C73320 + C73319 + C73318) * C152807 +
            (C73321 + C73322 + C73323) * C152462) *
               C152530 * C152917 -
           ((C1908 * C73311 + C470 * C152911 + C465 * C152910) * C152462 +
            (C73553 + C73552 + C73551) * C152807) *
               C152530 * C152901 +
           ((C73556 + C73555 + C73554) * C152807 +
            (C470 * C152910 + C1908 * C152911 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C73311) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C152910 +
             C6614 * C152911 + C6615 * C73311) *
                C152807 +
            (C73315 + C73316 + C73317) * C152462) *
               C152530 * C1429 -
           ((C73545 + C73546 + C73547) * C152462 +
            (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
               C152530 * C1430 +
           ((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
            (C73548 + C73549 + C73550) * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C73547 + C73546 + C73545) * C152807 +
            (C73551 + C73552 + C73553) * C152462) *
               C152530 * C1430 -
           ((C73318 + C73319 + C73320) * C152462 +
            (C73317 + C73316 + C73315) * C152807) *
               C152530 * C1429 -
           ((C73554 + C73555 + C73556) * C152462 +
            (C73550 + C73549 + C73548) * C152807) *
               C152530 * C152870) *
              C152897 +
          (((C73320 + C73319 + C73318) * C152807 +
            (C73321 + C73322 + C73323) * C152462) *
               C152530 * C1429 -
           ((C73981 + C73982 + C73983) * C152462 +
            (C73553 + C73552 + C73551) * C152807) *
               C152530 * C1430 +
           ((C73556 + C73555 + C73554) * C152807 +
            (C470 * C152910 + C1908 * C152911 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C73311) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C152910 +
            C6614 * C152911 + C6615 * C73311) *
               C152807 +
           (C73315 + C73316 + C73317) * C152462) *
              C152530 * C1517 -
          ((C73545 + C73546 + C73547) * C152462 +
           (C6616 * C73311 + C6615 * C152911 + C6614 * C152910) * C152807) *
              C152530 * C1518 +
          ((C6615 * C152910 + C6616 * C152911 + C7957 * C73311) * C152807 +
           (C73548 + C73549 + C73550) * C152462) *
              C152530 * C1519 -
          ((C7958 * C73311 + C6617 * C152911 + C1910 * C152910) * C152462 +
           (C7959 * C73311 + C7957 * C152911 + C6616 * C152910) * C152807) *
              C152530 * C1520 +
          ((C7957 * C152910 + C7959 * C152911 + C60404 * C73311) * C152807 +
           (C6617 * C152910 + C7958 * C152911 +
            (C134 * C7932 - C135 * C7925 - C134 * C7933 + C152711 * C7937) *
                C73311) *
               C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152530 * C152571 -
           (C93790 * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C152530 * C152578 +
           (C92553 * C152910 + (C42270 + C42271) * C152911 + C93791 * C73311) *
               C152457 * C152530 * C3839) *
              C152489 +
          ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
               C152530 * C152578 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C152530 * C152571 -
           ((C42272 + C42273) * C73311 + C42881 * C152911 + C40547 * C152910) *
               C152457 * C152530 * C3839) *
              C152498 +
          ((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
               C152530 * C152571 -
           ((C33850 + C33851) * C73311 + C40559 * C152911 + C32010 * C152910) *
               C152457 * C152530 * C152578 +
           (C32011 * C152910 + (C33851 + C33850) * C152911 +
            (C31627 * C1543 - C31628 * C1529 - C31627 * C1544 +
             C152846 * C1553 + C31629 * C8728 - C31630 * C8727 -
             C31629 * C8729 + C152775 * C8730) *
                C73311) *
               C152457 * C152530 * C3839) *
              C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152910 +
             (C40568 + C40569) * C152911 + C92553 * C73311) *
                C152457 * C152829 -
            (C94024 * C73311 + (C41780 + C41781) * C152911 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152910) *
                C152457 * C152617) *
               C152571 +
           (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
             C94718 * C73311) *
                C152457 * C152617 -
            (C93790 * C73311 + (C40570 + C40571) * C152911 +
             (C40569 + C40568) * C152910) *
                C152457 * C152829) *
               C152578 +
           ((C92553 * C152910 + (C42270 + C42271) * C152911 + C93791 * C73311) *
                C152457 * C152829 -
            ((C94731 + C94732) * C73311 + (C43554 + C43555) * C152911 +
             C94024 * C152910) *
                C152457 * C152617) *
               C3839) *
              C3495 +
          ((((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
                C152457 * C152617 -
            (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
                C152457 * C152829) *
               C152571 +
           ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
                C152829 -
            ((C43282 + C43283) * C73311 + C43277 * C152911 + C41765 * C152910) *
                C152457 * C152617) *
               C152578 +
           ((C43268 * C152910 + (C43283 + C43282) * C152911 +
             (C31627 * C8187 - C31628 * C8179 - C31627 * C8188 +
              C152846 * C8197 + C31629 * C8193 - C31630 * C8182 -
              C31629 * C8194 + C152775 * C8200) *
                 C73311) *
                C152457 * C152617 -
            ((C42272 + C42273) * C73311 + C42881 * C152911 + C40547 * C152910) *
                C152457 * C152829) *
               C3839) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152530 * C152924 -
           (C93790 * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C152530 * C152920 +
           (C92553 * C152910 + (C42270 + C42271) * C152911 + C93791 * C73311) *
               C152457 * C152530 * C152906 -
           ((C93804 + C93805) * C73311 + (C42274 + C42275) * C152911 +
            C93790 * C152910) *
               C152457 * C152530 * C152880) *
              C3495 +
          ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
               C152530 * C152920 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C152530 * C152924 -
           ((C42272 + C42273) * C73311 + C42881 * C152911 + C40547 * C152910) *
               C152457 * C152530 * C152906 +
           (C42880 * C152910 + (C42273 + C42272) * C152911 +
            (C31627 * C7926 - C31628 * C7922 - C31627 * C7927 +
             C152846 * C7934 + C31629 * C8939 - C31630 * C8936 -
             C31629 * C8940 + C152775 * C8942) *
                C73311) *
               C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152530 * C3355 -
           (C93790 * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C152530 * C152575) *
              C152923 +
          ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
               C152530 * C152575 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C152530 * C3355) *
              C152916 +
          ((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
               C152530 * C3355 -
           ((C33850 + C33851) * C73311 + C40559 * C152911 + C32010 * C152910) *
               C152457 * C152530 * C152575) *
              C152899 +
          ((C32514 * C152910 + (C32009 + C32008) * C152911 +
            (C31627 * C1531 - C31628 * C1523 - C31627 * C1532 +
             C152846 * C1547 + C31629 * C2275 - C31630 * C2268 -
             C31629 * C2276 + C152775 * C2280) *
                C73311) *
               C152457 * C152530 * C152575 -
           ((C32008 + C32009) * C73311 + C41120 * C152911 + C31703 * C152910) *
               C152457 * C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152910 +
             (C40568 + C40569) * C152911 + C92553 * C73311) *
                C152457 * C152918 -
            (C94024 * C73311 + (C41780 + C41781) * C152911 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152910) *
                C152457 * C152903 +
            ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C152910 +
             (C42614 + C42615) * C152911 + C94025 * C73311) *
                C152457 * C152873) *
               C3355 +
           (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
             C94718 * C73311) *
                C152457 * C152903 -
            (C93790 * C73311 + (C40570 + C40571) * C152911 +
             (C40569 + C40568) * C152910) *
                C152457 * C152918 -
            ((C94038 + C94039) * C73311 + (C42620 + C42621) * C152911 +
             (C42615 + C42614) * C152910) *
                C152457 * C152873) *
               C152575) *
              C3495 +
          ((((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
                C152457 * C152903 -
            (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
                C152457 * C152918 -
            ((C42618 + C42619) * C73311 + C44685 * C152911 +
             (C32309 + C32308) * C152910) *
                C152457 * C152873) *
               C3355 +
           ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
                C152918 -
            ((C43282 + C43283) * C73311 + C43277 * C152911 + C41765 * C152910) *
                C152457 * C152903 +
            (C44684 * C152910 + (C42619 + C42618) * C152911 +
             (C31627 * C8183 - C31628 * C8177 - C31627 * C8184 +
              C152846 * C8195 + C31629 * C10242 - C31630 * C10239 -
              C31629 * C10243 + C152775 * C10245) *
                 C73311) *
                C152457 * C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152910 +
             (C40568 + C40569) * C152911 + C92553 * C73311) *
                C152457 * C152829 -
            (C94024 * C73311 + (C41780 + C41781) * C152911 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152910) *
                C152457 * C152617) *
               C3355 +
           (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
             C94718 * C73311) *
                C152457 * C152617 -
            (C93790 * C73311 + (C40570 + C40571) * C152911 +
             (C40569 + C40568) * C152910) *
                C152457 * C152829) *
               C152575) *
              C152489 +
          ((((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
                C152457 * C152617 -
            (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
                C152457 * C152829) *
               C3355 +
           ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
                C152829 -
            ((C43282 + C43283) * C73311 + C43277 * C152911 + C41765 * C152910) *
                C152457 * C152617) *
               C152575) *
              C152498 +
          (((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
                C152829 -
            ((C34168 + C34169) * C73311 + C41775 * C152911 + C32316 * C152910) *
                C152457 * C152617) *
               C3355 +
           ((C33072 * C152910 + (C34169 + C34168) * C152911 +
             (C31627 * C2273 - C31628 * C2267 - C31627 * C2274 +
              C152846 * C2279 + C31629 * C9823 - C31630 * C9822 -
              C31629 * C9824 + C152775 * C9825) *
                 C73311) *
                C152457 * C152617 -
            ((C33850 + C33851) * C73311 + C40559 * C152911 + C32010 * C152910) *
                C152457 * C152829) *
               C152575) *
              C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152530 * C3355 -
           (C93790 * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C152530 * C152575) *
              C152923 +
          ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
               C152530 * C152575 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C152530 * C3355) *
              C152916 +
          ((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
               C152530 * C3355 -
           ((C33850 + C33851) * C73311 + C40559 * C152911 + C32010 * C152910) *
               C152457 * C152530 * C152575) *
              C152899 +
          ((C32514 * C152910 + (C32009 + C32008) * C152911 +
            (C31627 * C1531 - C31628 * C1523 - C31627 * C1532 +
             C152846 * C1547 + C31629 * C2275 - C31630 * C2268 -
             C31629 * C2276 + C152775 * C2280) *
                C73311) *
               C152457 * C152530 * C152575 -
           ((C32008 + C32009) * C73311 + C41120 * C152911 + C31703 * C152910) *
               C152457 * C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152530 * C152924 -
           (C93790 * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C152530 * C152920 +
           (C92553 * C152910 + (C42270 + C42271) * C152911 + C93791 * C73311) *
               C152457 * C152530 * C152906 -
           ((C93804 + C93805) * C73311 + (C42274 + C42275) * C152911 +
            C93790 * C152910) *
               C152457 * C152530 * C152880) *
              C3495 +
          ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
               C152530 * C152920 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C152530 * C152924 -
           ((C42272 + C42273) * C73311 + C42881 * C152911 + C40547 * C152910) *
               C152457 * C152530 * C152906 +
           (C42880 * C152910 + (C42273 + C42272) * C152911 +
            (C31627 * C7926 - C31628 * C7922 - C31627 * C7927 +
             C152846 * C7934 + C31629 * C8939 - C31630 * C8936 -
             C31629 * C8940 + C152775 * C8942) *
                C73311) *
               C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152910 +
             (C40568 + C40569) * C152911 + C92553 * C73311) *
                C152457 * C4361 -
            (C94024 * C73311 + (C41780 + C41781) * C152911 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152910) *
                C152457 * C152617) *
               C152571 +
           (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
             C94718 * C73311) *
                C152457 * C152617 -
            (C93790 * C73311 + (C40570 + C40571) * C152911 +
             (C40569 + C40568) * C152910) *
                C152457 * C4361) *
               C152578 +
           ((C92553 * C152910 + (C42270 + C42271) * C152911 + C93791 * C73311) *
                C152457 * C4361 -
            ((C94731 + C94732) * C73311 + (C43554 + C43555) * C152911 +
             C94024 * C152910) *
                C152457 * C152617) *
               C3839) *
              C152814 +
          ((((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
                C152457 * C152617 -
            (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
                C152457 * C4361) *
               C152571 +
           ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
                C4361 -
            ((C43282 + C43283) * C73311 + C43277 * C152911 + C41765 * C152910) *
                C152457 * C152617) *
               C152578 +
           ((C43268 * C152910 + (C43283 + C43282) * C152911 +
             (C31627 * C8187 - C31628 * C8179 - C31627 * C8188 +
              C152846 * C8197 + C31629 * C8193 - C31630 * C8182 -
              C31629 * C8194 + C152775 * C8200) *
                 C73311) *
                C152457 * C152617 -
            ((C42272 + C42273) * C73311 + C42881 * C152911 + C40547 * C152910) *
                C152457 * C4361) *
               C3839) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152613 -
           (C94024 * C73311 + (C41780 + C41781) * C152911 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152910) *
               C152457 * C152620 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152910 +
            (C42614 + C42615) * C152911 + C94025 * C73311) *
               C152457 * C5033) *
              C152571 +
          (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
            C94718 * C73311) *
               C152457 * C152620 -
           (C93790 * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C152613 -
           ((C94038 + C94039) * C73311 + (C42620 + C42621) * C152911 +
            (C42615 + C42614) * C152910) *
               C152457 * C5033) *
              C152578 +
          ((C92553 * C152910 + (C42270 + C42271) * C152911 + C93791 * C73311) *
               C152457 * C152613 -
           ((C94731 + C94732) * C73311 + (C43554 + C43555) * C152911 +
            C94024 * C152910) *
               C152457 * C152620 +
           (C94025 * C152910 + (C94039 + C94038) * C152911 +
            (C31627 * C8191 - C31628 * C8181 - C31627 * C8192 +
             C152846 * C8199 + C31629 * C61859 - C31630 * C61858 -
             C31629 * C61860 + C152775 * C61861) *
                C73311) *
               C152457 * C5033) *
              C3839) *
         C152484) /
        (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C4361 -
           (C94024 * C73311 + (C41780 + C41781) * C152911 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152910) *
               C152457 * C152617) *
              C152924 +
          (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
            C94718 * C73311) *
               C152457 * C152617 -
           (C93790 * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C4361) *
              C152920 +
          ((C92553 * C152910 + (C42270 + C42271) * C152911 + C93791 * C73311) *
               C152457 * C4361 -
           ((C94731 + C94732) * C73311 + (C43554 + C43555) * C152911 +
            C94024 * C152910) *
               C152457 * C152617) *
              C152906 +
          ((C94718 * C152910 + (C94732 + C94731) * C152911 +
            (C31627 * C8937 - C31628 * C8935 - C31627 * C8938 +
             C152846 * C8941 + C31629 * C60551 - C31630 * C60550 -
             C31629 * C60552 + C152775 * C60553) *
                C73311) *
               C152457 * C152617 -
           ((C93804 + C93805) * C73311 + (C42274 + C42275) * C152911 +
            C93790 * C152910) *
               C152457 * C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152910 +
             (C40568 + C40569) * C152911 + C92553 * C73311) *
                C152457 * C4361 -
            (C94024 * C73311 + (C41780 + C41781) * C152911 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152910) *
                C152457 * C152617) *
               C3355 +
           (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
             C94718 * C73311) *
                C152457 * C152617 -
            (C93790 * C73311 + (C40570 + C40571) * C152911 +
             (C40569 + C40568) * C152910) *
                C152457 * C4361) *
               C152575) *
              C152914 +
          ((((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
                C152457 * C152617 -
            (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
                C152457 * C4361) *
               C3355 +
           ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
                C4361 -
            ((C43282 + C43283) * C73311 + C43277 * C152911 + C41765 * C152910) *
                C152457 * C152617) *
               C152575) *
              C152897 +
          (((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
                C4361 -
            ((C34168 + C34169) * C73311 + C41775 * C152911 + C32316 * C152910) *
                C152457 * C152617) *
               C3355 +
           ((C33072 * C152910 + (C34169 + C34168) * C152911 +
             (C31627 * C2273 - C31628 * C2267 - C31627 * C2274 +
              C152846 * C2279 + C31629 * C9823 - C31630 * C9822 -
              C31629 * C9824 + C152775 * C9825) *
                 C73311) *
                C152457 * C152617 -
            ((C33850 + C33851) * C73311 + C40559 * C152911 + C32010 * C152910) *
                C152457 * C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152925 -
           (C94024 * C73311 + (C41780 + C41781) * C152911 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152910) *
               C152457 * C152922 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152910 +
            (C42614 + C42615) * C152911 + C94025 * C73311) *
               C152457 * C152909 -
           ((C95981 + C95982) * C73311 + (C45228 + C45229) * C152911 +
            (C31629 * C2679 - C31630 * C2667 - C31629 * C2680 +
             C152775 * C2691 + C31627 * C2677 - C31628 * C2666 -
             C31627 * C2678 + C152846 * C2690) *
                C152910) *
               C152457 * C152886) *
              C3355 +
          (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
            C94718 * C73311) *
               C152457 * C152922 -
           (C93790 * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C152925 -
           ((C94038 + C94039) * C73311 + (C42620 + C42621) * C152911 +
            (C42615 + C42614) * C152910) *
               C152457 * C152909 +
           ((C45229 + C45228) * C152910 + (C95982 + C95981) * C152911 +
            (C31627 * C10240 - C31628 * C10238 - C31627 * C10241 +
             C152846 * C10244 + C31629 * C61401 - C31630 * C61400 -
             C31629 * C61402 + C152775 * C61403) *
                C73311) *
               C152457 * C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152910 +
             (C40568 + C40569) * C152911 + C92553 * C73311) *
                C152457 * C152613 -
            (C94024 * C73311 + (C41780 + C41781) * C152911 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152910) *
                C152457 * C152620 +
            ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C152910 +
             (C42614 + C42615) * C152911 + C94025 * C73311) *
                C152457 * C5033) *
               C3355 +
           (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
             C94718 * C73311) *
                C152457 * C152620 -
            (C93790 * C73311 + (C40570 + C40571) * C152911 +
             (C40569 + C40568) * C152910) *
                C152457 * C152613 -
            ((C94038 + C94039) * C73311 + (C42620 + C42621) * C152911 +
             (C42615 + C42614) * C152910) *
                C152457 * C5033) *
               C152575) *
              C152814 +
          ((((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
                C152457 * C152620 -
            (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
                C152457 * C152613 -
            ((C42618 + C42619) * C73311 + C44685 * C152911 +
             (C32309 + C32308) * C152910) *
                C152457 * C5033) *
               C3355 +
           ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
                C152613 -
            ((C43282 + C43283) * C73311 + C43277 * C152911 + C41765 * C152910) *
                C152457 * C152620 +
            (C44684 * C152910 + (C42619 + C42618) * C152911 +
             (C31627 * C8183 - C31628 * C8177 - C31627 * C8184 +
              C152846 * C8195 + C31629 * C10242 - C31630 * C10239 -
              C31629 * C10243 + C152775 * C10245) *
                 C73311) *
                C152457 * C5033) *
               C152575) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152910 +
             (C40568 + C40569) * C152911 + C92553 * C73311) *
                C152457 * C4361 -
            (C94024 * C73311 + (C41780 + C41781) * C152911 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152910) *
                C152457 * C152617) *
               C3355 +
           (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
             C94718 * C73311) *
                C152457 * C152617 -
            (C93790 * C73311 + (C40570 + C40571) * C152911 +
             (C40569 + C40568) * C152910) *
                C152457 * C4361) *
               C152575) *
              C152914 +
          ((((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
                C152457 * C152617 -
            (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
                C152457 * C4361) *
               C3355 +
           ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
                C4361 -
            ((C43282 + C43283) * C73311 + C43277 * C152911 + C41765 * C152910) *
                C152457 * C152617) *
               C152575) *
              C152897 +
          (((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
                C4361 -
            ((C34168 + C34169) * C73311 + C41775 * C152911 + C32316 * C152910) *
                C152457 * C152617) *
               C3355 +
           ((C33072 * C152910 + (C34169 + C34168) * C152911 +
             (C31627 * C2273 - C31628 * C2267 - C31627 * C2274 +
              C152846 * C2279 + C31629 * C9823 - C31630 * C9822 -
              C31629 * C9824 + C152775 * C9825) *
                 C73311) *
                C152457 * C152617 -
            ((C33850 + C33851) * C73311 + C40559 * C152911 + C32010 * C152910) *
                C152457 * C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C4361 -
           (C94024 * C73311 + (C41780 + C41781) * C152911 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152910) *
               C152457 * C152617) *
              C152924 +
          (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
            C94718 * C73311) *
               C152457 * C152617 -
           (C93790 * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C4361) *
              C152920 +
          ((C92553 * C152910 + (C42270 + C42271) * C152911 + C93791 * C73311) *
               C152457 * C4361 -
           ((C94731 + C94732) * C73311 + (C43554 + C43555) * C152911 +
            C94024 * C152910) *
               C152457 * C152617) *
              C152906 +
          ((C94718 * C152910 + (C94732 + C94731) * C152911 +
            (C31627 * C8937 - C31628 * C8935 - C31627 * C8938 +
             C152846 * C8941 + C31629 * C60551 - C31630 * C60550 -
             C31629 * C60552 + C152775 * C60553) *
                C73311) *
               C152457 * C152617 -
           ((C93804 + C93805) * C73311 + (C42274 + C42275) * C152911 +
            C93790 * C152910) *
               C152457 * C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152530 * C1879 -
           (C93790 * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C152530 * C1880 +
           (C92553 * C152910 + (C42270 + C42271) * C152911 + C93791 * C73311) *
               C152457 * C152530 * C1881 -
           ((C93804 + C93805) * C73311 + (C42274 + C42275) * C152911 +
            C93790 * C152910) *
               C152457 * C152530 * C152880) *
              C152814 +
          ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
               C152530 * C1880 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C152530 * C1879 -
           ((C42272 + C42273) * C73311 + C42881 * C152911 + C40547 * C152910) *
               C152457 * C152530 * C1881 +
           (C42880 * C152910 + (C42273 + C42272) * C152911 +
            (C31627 * C7926 - C31628 * C7922 - C31627 * C7927 +
             C152846 * C7934 + C31629 * C8939 - C31630 * C8936 -
             C31629 * C8940 + C152775 * C8942) *
                C73311) *
               C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152530 * C152828 -
           ((C42271 + C42270) * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C152530 * C152575) *
              C873 +
          ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
               C152530 * C152575 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C152530 * C152828) *
              C874 +
          ((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
               C152530 * C152828 -
           ((C33850 + C33851) * C73311 + C40559 * C152911 + C32010 * C152910) *
               C152457 * C152530 * C152575) *
              C875 +
          ((C32514 * C152910 + (C32009 + C32008) * C152911 +
            (C31627 * C1531 - C31628 * C1523 - C31627 * C1532 +
             C152846 * C1547 + C31629 * C2275 - C31630 * C2268 -
             C31629 * C2276 + C152775 * C2280) *
                C73311) *
               C152457 * C152530 * C152575 -
           ((C32008 + C32009) * C73311 + C41120 * C152911 + C31703 * C152910) *
               C152457 * C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152910 +
             (C40568 + C40569) * C152911 + C92553 * C73311) *
                C152457 * C2427 -
            (C94024 * C73311 + (C41780 + C41781) * C152911 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152910) *
                C152457 * C2428 +
            ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C152910 +
             (C42614 + C42615) * C152911 + C94025 * C73311) *
                C152457 * C152873) *
               C152828 +
           (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
             C94718 * C73311) *
                C152457 * C2428 -
            (C93790 * C73311 + (C40570 + C40571) * C152911 +
             (C40569 + C40568) * C152910) *
                C152457 * C2427 -
            ((C94038 + C94039) * C73311 + (C42620 + C42621) * C152911 +
             (C42615 + C42614) * C152910) *
                C152457 * C152873) *
               C152575) *
              C152814 +
          ((((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
                C152457 * C2428 -
            (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
                C152457 * C2427 -
            ((C42618 + C42619) * C73311 + C44685 * C152911 +
             (C32309 + C32308) * C152910) *
                C152457 * C152873) *
               C152828 +
           ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
                C2427 -
            ((C43282 + C43283) * C73311 + C43277 * C152911 + C41765 * C152910) *
                C152457 * C2428 +
            (C44684 * C152910 + (C42619 + C42618) * C152911 +
             (C31627 * C8183 - C31628 * C8177 - C31627 * C8184 +
              C152846 * C8195 + C31629 * C10242 - C31630 * C10239 -
              C31629 * C10243 + C152775 * C10245) *
                 C73311) *
                C152457 * C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152829 -
           (C94024 * C73311 + (C41780 + C41781) * C152911 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152910) *
               C152457 * C152617) *
              C1879 +
          (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
            C94718 * C73311) *
               C152457 * C152617 -
           (C93790 * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C152829) *
              C1880 +
          ((C92553 * C152910 + (C42270 + C42271) * C152911 + C93791 * C73311) *
               C152457 * C152829 -
           ((C94731 + C94732) * C73311 + (C43554 + C43555) * C152911 +
            C94024 * C152910) *
               C152457 * C152617) *
              C1881 +
          ((C94718 * C152910 + (C94732 + C94731) * C152911 +
            (C31627 * C8937 - C31628 * C8935 - C31627 * C8938 +
             C152846 * C8941 + C31629 * C60551 - C31630 * C60550 -
             C31629 * C60552 + C152775 * C60553) *
                C73311) *
               C152457 * C152617 -
           ((C93804 + C93805) * C73311 + (C42274 + C42275) * C152911 +
            C93790 * C152910) *
               C152457 * C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152910 +
             (C40568 + C40569) * C152911 + C92553 * C73311) *
                C152457 * C152829 -
            ((C42617 + C42616) * C73311 + (C41780 + C41781) * C152911 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152910) *
                C152457 * C152617) *
               C152828 +
           (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
             (C43555 + C43554) * C73311) *
                C152457 * C152617 -
            ((C42271 + C42270) * C73311 + (C40570 + C40571) * C152911 +
             (C40569 + C40568) * C152910) *
                C152457 * C152829) *
               C152575) *
              C365 +
          ((((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
                C152457 * C152617 -
            (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
                C152457 * C152829) *
               C152828 +
           ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
                C152829 -
            ((C43282 + C43283) * C73311 + C43277 * C152911 + C41765 * C152910) *
                C152457 * C152617) *
               C152575) *
              C366 +
          (((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
                C152829 -
            ((C34168 + C34169) * C73311 + C41775 * C152911 + C32316 * C152910) *
                C152457 * C152617) *
               C152828 +
           ((C33072 * C152910 + (C34169 + C34168) * C152911 +
             (C31627 * C2273 - C31628 * C2267 - C31627 * C2274 +
              C152846 * C2279 + C31629 * C9823 - C31630 * C9822 -
              C31629 * C9824 + C152775 * C9825) *
                 C73311) *
                C152457 * C152617 -
            ((C33850 + C33851) * C73311 + C40559 * C152911 + C32010 * C152910) *
                C152457 * C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C3047 -
           (C94024 * C73311 + (C41780 + C41781) * C152911 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152910) *
               C152457 * C3048 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152910 +
            (C42614 + C42615) * C152911 + C94025 * C73311) *
               C152457 * C3049 -
           ((C95981 + C95982) * C73311 + (C45228 + C45229) * C152911 +
            (C31629 * C2679 - C31630 * C2667 - C31629 * C2680 +
             C152775 * C2691 + C31627 * C2677 - C31628 * C2666 -
             C31627 * C2678 + C152846 * C2690) *
                C152910) *
               C152457 * C152886) *
              C152828 +
          (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
            C94718 * C73311) *
               C152457 * C3048 -
           (C93790 * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C3047 -
           ((C94038 + C94039) * C73311 + (C42620 + C42621) * C152911 +
            (C42615 + C42614) * C152910) *
               C152457 * C3049 +
           ((C45229 + C45228) * C152910 + (C95982 + C95981) * C152911 +
            (C31627 * C10240 - C31628 * C10238 - C31627 * C10241 +
             C152846 * C10244 + C31629 * C61401 - C31630 * C61400 -
             C31629 * C61402 + C152775 * C61403) *
                C73311) *
               C152457 * C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
                C31629 * C647 - C31630 * C632 - C31629 * C648 +
                C152775 * C668) *
                   C152910 +
               (C40568 + C40569) * C152911 + (C40571 + C40570) * C73311) *
                  C152457 * C152530 * C152512 * C129 -
              (C40547 * C73311 + C40548 * C152911 +
               (C31693 + C31692) * C152910) *
                  C152457 * C152530 * C152512 * C130 +
              (C31702 * C152910 + C40558 * C152911 + C32011 * C73311) *
                  C152457 * C152530 * C152512 * C131 -
              ((C32008 + C32009) * C73311 + C41120 * C152911 +
               C31703 * C152910) *
                  C152457 * C152530 * C152512 * C132 +
              (C31704 * C152910 + (C32529 + C32528) * C152911 +
               (C31627 * C398 - C31628 * C377 - C31627 * C399 + C152846 * C413 +
                C31629 * C2108 - C31630 * C2107 - C31629 * C2109 +
                C152775 * C2110) *
                   C73311) *
                  C152457 * C152530 * C152512 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C31627 * C144 - C31628 * C136 - C31627 * C145 +
                 C152846 * C160 + C31629 * C647 - C31630 * C632 -
                 C31629 * C648 + C152775 * C668) *
                    C152910 +
                (C40568 + C40569) * C152911 + C92553 * C73311) *
                   C152457 * C152530 * C152917 -
               ((C42271 + C42270) * C73311 + (C40570 + C40571) * C152911 +
                (C40569 + C40568) * C152910) *
                   C152457 * C152530 * C152901 +
               (C92553 * C152910 + (C42270 + C42271) * C152911 +
                (C42275 + C42274) * C73311) *
                   C152457 * C152530 * C152870) *
                  C365 +
              ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) *
                   C152457 * C152530 * C152901 -
               (C40547 * C73311 + C40548 * C152911 +
                (C31693 + C31692) * C152910) *
                   C152457 * C152530 * C152917 -
               ((C42272 + C42273) * C73311 + C42881 * C152911 +
                C40547 * C152910) *
                   C152457 * C152530 * C152870) *
                  C366 +
              ((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) *
                   C152457 * C152530 * C152917 -
               ((C33850 + C33851) * C73311 + C40559 * C152911 +
                C32010 * C152910) *
                   C152457 * C152530 * C152901 +
               (C32011 * C152910 + (C33851 + C33850) * C152911 +
                (C31627 * C1543 - C31628 * C1529 - C31627 * C1544 +
                 C152846 * C1553 + C31629 * C8728 - C31630 * C8727 -
                 C31629 * C8729 + C152775 * C8730) *
                    C73311) *
                   C152457 * C152530 * C152870) *
                  C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152918 -
           ((C42617 + C42616) * C73311 + (C41780 + C41781) * C152911 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152910) *
               C152457 * C152903 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152910 +
            (C42614 + C42615) * C152911 + (C42621 + C42620) * C73311) *
               C152457 * C152873) *
              C152512 * C365 +
          (((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
               C152457 * C152903 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C152918 -
           ((C42618 + C42619) * C73311 + C44685 * C152911 +
            (C32309 + C32308) * C152910) *
               C152457 * C152873) *
              C152512 * C366 +
          ((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
               C152918 -
           ((C34168 + C34169) * C73311 + C41775 * C152911 + C32316 * C152910) *
               C152457 * C152903 +
           (C32317 * C152910 + (C35239 + C35238) * C152911 +
            (C31627 * C1733 - C31628 * C1711 - C31627 * C1734 +
             C152846 * C1747 + C31629 * C10024 - C31630 * C10023 -
             C31629 * C10025 + C152775 * C10026) *
                C73311) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152530 * C1429 -
           ((C42271 + C42270) * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C152530 * C1430 +
           (C92553 * C152910 + (C42270 + C42271) * C152911 +
            (C42275 + C42274) * C73311) *
               C152457 * C152530 * C152870) *
              C152914 +
          ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
               C152530 * C1430 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C152530 * C1429 -
           ((C42272 + C42273) * C73311 + C42881 * C152911 + C40547 * C152910) *
               C152457 * C152530 * C152870) *
              C152897 +
          ((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
               C152530 * C1429 -
           ((C33850 + C33851) * C73311 + C40559 * C152911 + C32010 * C152910) *
               C152457 * C152530 * C1430 +
           (C32011 * C152910 + (C33851 + C33850) * C152911 +
            (C31627 * C1543 - C31628 * C1529 - C31627 * C1544 +
             C152846 * C1553 + C31629 * C8728 - C31630 * C8727 -
             C31629 * C8729 + C152775 * C8730) *
                C73311) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
            C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
               C152910 +
           (C40568 + C40569) * C152911 + C92553 * C73311) *
              C152457 * C152530 * C1517 -
          (C93790 * C73311 + (C40570 + C40571) * C152911 +
           (C40569 + C40568) * C152910) *
              C152457 * C152530 * C1518 +
          (C92553 * C152910 + (C42270 + C42271) * C152911 + C93791 * C73311) *
              C152457 * C152530 * C1519 -
          ((C93804 + C93805) * C73311 + (C42274 + C42275) * C152911 +
           C93790 * C152910) *
              C152457 * C152530 * C1520 +
          (C93791 * C152910 + (C93805 + C93804) * C152911 +
           (C31627 * C7930 - C31628 * C7924 - C31627 * C7931 + C152846 * C7936 +
            C31629 * C61016 - C31630 * C61015 - C31629 * C61017 +
            C152775 * C61018) *
               C73311) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152918 -
           (C94024 * C73311 + (C41780 + C41781) * C152911 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152910) *
               C152457 * C152903 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152910 +
            (C42614 + C42615) * C152911 + C94025 * C73311) *
               C152457 * C152873) *
              C1429 +
          (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
            (C43555 + C43554) * C73311) *
               C152457 * C152903 -
           (C93790 * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C152918 -
           ((C94038 + C94039) * C73311 + (C42620 + C42621) * C152911 +
            (C42615 + C42614) * C152910) *
               C152457 * C152873) *
              C1430 +
          ((C92553 * C152910 + (C42270 + C42271) * C152911 + C93791 * C73311) *
               C152457 * C152918 -
           ((C31629 * C8191 - C31630 * C8181 - C31629 * C8192 +
             C152775 * C8199 + C31627 * C8189 - C31628 * C8180 -
             C31627 * C8190 + C152846 * C8198) *
                C73311 +
            (C43554 + C43555) * C152911 + C94024 * C152910) *
               C152457 * C152903 +
           (C94025 * C152910 + (C94039 + C94038) * C152911 +
            (C31627 * C8191 - C31628 * C8181 - C31627 * C8192 +
             C152846 * C8199 + C31629 * C61859 - C31630 * C61858 -
             C31629 * C61860 + C152775 * C61861) *
                C73311) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C2427 -
           (C94024 * C73311 + (C41780 + C41781) * C152911 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152910) *
               C152457 * C2428 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152910 +
            (C42614 + C42615) * C152911 + C94025 * C73311) *
               C152457 * C152873) *
              C152512 * C152914 +
          (((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
               C152457 * C2428 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C2427 -
           ((C42618 + C42619) * C73311 + C44685 * C152911 +
            (C32309 + C32308) * C152910) *
               C152457 * C152873) *
              C152512 * C152897 +
          ((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
               C2427 -
           ((C34168 + C34169) * C73311 + C41775 * C152911 + C32316 * C152910) *
               C152457 * C2428 +
           (C32317 * C152910 + (C35239 + C35238) * C152911 +
            (C31627 * C1733 - C31628 * C1711 - C31627 * C1734 +
             C152846 * C1747 + C31629 * C10024 - C31630 * C10023 -
             C31629 * C10025 + C152775 * C10026) *
                C73311) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C2427 -
           (C94024 * C73311 + (C41780 + C41781) * C152911 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152910) *
               C152457 * C2428 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152910 +
            (C42614 + C42615) * C152911 + C94025 * C73311) *
               C152457 * C152873) *
              C152917 +
          (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
            C94718 * C73311) *
               C152457 * C2428 -
           (C93790 * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C2427 -
           ((C94038 + C94039) * C73311 + (C42620 + C42621) * C152911 +
            (C42615 + C42614) * C152910) *
               C152457 * C152873) *
              C152901 +
          ((C92553 * C152910 + (C42270 + C42271) * C152911 + C93791 * C73311) *
               C152457 * C2427 -
           ((C94731 + C94732) * C73311 + (C43554 + C43555) * C152911 +
            C94024 * C152910) *
               C152457 * C2428 +
           (C94025 * C152910 + (C94039 + C94038) * C152911 +
            (C31627 * C8191 - C31628 * C8181 - C31627 * C8192 +
             C152846 * C8199 + C31629 * C61859 - C31630 * C61858 -
             C31629 * C61860 + C152775 * C61861) *
                C73311) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
            C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
               C152910 +
           (C40568 + C40569) * C152911 + C92553 * C73311) *
              C152457 * C2658 -
          (C94024 * C73311 + (C41780 + C41781) * C152911 +
           (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
            C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
               C152910) *
              C152457 * C2659 +
          ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
            C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
            C152775 * C2690) *
               C152910 +
           (C42614 + C42615) * C152911 + C94025 * C73311) *
              C152457 * C2660 -
          ((C31629 * C9520 - C31630 * C9511 - C31629 * C9521 + C152775 * C9529 +
            C31627 * C9516 - C31628 * C9509 - C31627 * C9517 +
            C152846 * C9527) *
               C73311 +
           (C45228 + C45229) * C152911 +
           (C31629 * C2679 - C31630 * C2667 - C31629 * C2680 + C152775 * C2691 +
            C31627 * C2677 - C31628 * C2666 - C31627 * C2678 +
            C152846 * C2690) *
               C152910) *
              C152457 * C2661 +
          ((C31627 * C2679 - C31628 * C2667 - C31627 * C2680 + C152846 * C2691 +
            C31629 * C18111 - C31630 * C18106 - C31629 * C18112 +
            C152775 * C18118) *
               C152910 +
           (C31627 * C9518 - C31628 * C9510 - C31627 * C9519 + C152846 * C9528 +
            C31629 * C18851 - C31630 * C18849 - C31629 * C18852 +
            C152775 * C18855) *
               C152911 +
           (C31627 * C9520 - C31628 * C9511 - C31627 * C9521 + C152846 * C9529 +
            C31629 * C68735 - C31630 * C68734 - C31629 * C68736 +
            C152775 * C68737) *
               C73311) *
              C152457 * C2662) *
         C152512 * C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152910 +
             (C40568 + C40569) * C152911 + C92553 * C73311) *
                C152457 * C152829 -
            (C94024 * C73311 + (C41780 + C41781) * C152911 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152910) *
                C152457 * C152617) *
               C1429 +
           (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
             (C43555 + C43554) * C73311) *
                C152457 * C152617 -
            (C93790 * C73311 + (C40570 + C40571) * C152911 +
             (C40569 + C40568) * C152910) *
                C152457 * C152829) *
               C1430 +
           ((C92553 * C152910 + (C42270 + C42271) * C152911 + C93791 * C73311) *
                C152457 * C152829 -
            ((C31629 * C8191 - C31630 * C8181 - C31629 * C8192 +
              C152775 * C8199 + C31627 * C8189 - C31628 * C8180 -
              C31627 * C8190 + C152846 * C8198) *
                 C73311 +
             (C43554 + C43555) * C152911 + C94024 * C152910) *
                C152457 * C152617) *
               C152870) *
              C152814 +
          ((((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
                C152457 * C152617 -
            (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
                C152457 * C152829) *
               C1429 +
           ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
                C152829 -
            ((C43282 + C43283) * C73311 + C43277 * C152911 + C41765 * C152910) *
                C152457 * C152617) *
               C1430 +
           ((C43268 * C152910 + (C43283 + C43282) * C152911 +
             (C31627 * C8187 - C31628 * C8179 - C31627 * C8188 +
              C152846 * C8197 + C31629 * C8193 - C31630 * C8182 -
              C31629 * C8194 + C152775 * C8200) *
                 C73311) *
                C152457 * C152617 -
            ((C42272 + C42273) * C73311 + C42881 * C152911 + C40547 * C152910) *
                C152457 * C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152829 -
           ((C42617 + C42616) * C73311 + (C41780 + C41781) * C152911 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152910) *
               C152457 * C152617) *
              C152512 * C873 +
          (((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
               C152457 * C152617 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C152829) *
              C152512 * C874 +
          ((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
               C152829 -
           ((C34168 + C34169) * C73311 + C41775 * C152911 + C32316 * C152910) *
               C152457 * C152617) *
              C152512 * C875 +
          ((C32724 * C152910 + (C33071 + C33070) * C152911 +
            (C31627 * C1721 - C31628 * C1705 - C31627 * C1722 +
             C152846 * C1741 + C31629 * C1735 - C31630 * C1712 -
             C31629 * C1736 + C152775 * C1748) *
                C73311) *
               C152457 * C152617 -
           ((C32008 + C32009) * C73311 + C41120 * C152911 + C31703 * C152910) *
               C152457 * C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C3047 -
           (C94024 * C73311 + (C41780 + C41781) * C152911 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152910) *
               C152457 * C3048 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152910 +
            (C42614 + C42615) * C152911 + C94025 * C73311) *
               C152457 * C3049 -
           ((C31629 * C9520 - C31630 * C9511 - C31629 * C9521 +
             C152775 * C9529 + C31627 * C9516 - C31628 * C9509 -
             C31627 * C9517 + C152846 * C9527) *
                C73311 +
            (C45228 + C45229) * C152911 +
            (C31629 * C2679 - C31630 * C2667 - C31629 * C2680 +
             C152775 * C2691 + C31627 * C2677 - C31628 * C2666 -
             C31627 * C2678 + C152846 * C2690) *
                C152910) *
               C152457 * C152886) *
              C152512 * C152814 +
          (((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
               C152457 * C3048 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C3047 -
           ((C42618 + C42619) * C73311 + C44685 * C152911 +
            (C32309 + C32308) * C152910) *
               C152457 * C3049 +
           ((C35463 + C35462) * C152910 + (C44957 + C44956) * C152911 +
            (C31627 * C9514 - C31628 * C9508 - C31627 * C9515 +
             C152846 * C9526 + C31629 * C9524 - C31630 * C9513 -
             C31629 * C9525 + C152775 * C9531) *
                C73311) *
               C152457 * C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152530 * C152917 -
           ((C42271 + C42270) * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C152530 * C152901 +
           (C92553 * C152910 + (C42270 + C42271) * C152911 +
            (C42275 + C42274) * C73311) *
               C152457 * C152530 * C152870) *
              C365 +
          ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
               C152530 * C152901 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C152530 * C152917 -
           ((C42272 + C42273) * C73311 + C42881 * C152911 + C40547 * C152910) *
               C152457 * C152530 * C152870) *
              C366 +
          ((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
               C152530 * C152917 -
           ((C33850 + C33851) * C73311 + C40559 * C152911 + C32010 * C152910) *
               C152457 * C152530 * C152901 +
           (C32011 * C152910 + (C33851 + C33850) * C152911 +
            (C31627 * C1543 - C31628 * C1529 - C31627 * C1544 +
             C152846 * C1553 + C31629 * C8728 - C31630 * C8727 -
             C31629 * C8729 + C152775 * C8730) *
                C73311) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
            C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
               C152910 +
           (C40568 + C40569) * C152911 + (C40571 + C40570) * C73311) *
              C152457 * C152530 * C152512 * C129 -
          (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
              C152457 * C152530 * C152512 * C130 +
          (C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
              C152530 * C152512 * C131 -
          ((C32008 + C32009) * C73311 + C41120 * C152911 + C31703 * C152910) *
              C152457 * C152530 * C152512 * C132 +
          (C31704 * C152910 + (C32529 + C32528) * C152911 +
           (C31627 * C398 - C31628 * C377 - C31627 * C399 + C152846 * C413 +
            C31629 * C2108 - C31630 * C2107 - C31629 * C2109 +
            C152775 * C2110) *
               C73311) *
              C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152530 * C1429 -
           ((C42271 + C42270) * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C152530 * C1430 +
           (C92553 * C152910 + (C42270 + C42271) * C152911 +
            (C42275 + C42274) * C73311) *
               C152457 * C152530 * C152870) *
              C152914 +
          ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
               C152530 * C1430 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C152530 * C1429 -
           ((C42272 + C42273) * C73311 + C42881 * C152911 + C40547 * C152910) *
               C152457 * C152530 * C152870) *
              C152897 +
          ((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
               C152530 * C1429 -
           ((C33850 + C33851) * C73311 + C40559 * C152911 + C32010 * C152910) *
               C152457 * C152530 * C1430 +
           (C32011 * C152910 + (C33851 + C33850) * C152911 +
            (C31627 * C1543 - C31628 * C1529 - C31627 * C1544 +
             C152846 * C1553 + C31629 * C8728 - C31630 * C8727 -
             C31629 * C8729 + C152775 * C8730) *
                C73311) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
            C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
               C152910 +
           (C40568 + C40569) * C152911 + C92553 * C73311) *
              C152457 * C152530 * C1517 -
          (C93790 * C73311 + (C40570 + C40571) * C152911 +
           (C40569 + C40568) * C152910) *
              C152457 * C152530 * C1518 +
          (C92553 * C152910 + (C42270 + C42271) * C152911 + C93791 * C73311) *
              C152457 * C152530 * C1519 -
          ((C93804 + C93805) * C73311 + (C42274 + C42275) * C152911 +
           C93790 * C152910) *
              C152457 * C152530 * C1520 +
          (C93791 * C152910 + (C93805 + C93804) * C152911 +
           (C31627 * C7930 - C31628 * C7924 - C31627 * C7931 + C152846 * C7936 +
            C31629 * C61016 - C31630 * C61015 - C31629 * C61017 +
            C152775 * C61018) *
               C73311) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C2427 -
           (C94024 * C73311 + (C41780 + C41781) * C152911 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152910) *
               C152457 * C2428 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152910 +
            (C42614 + C42615) * C152911 + C94025 * C73311) *
               C152457 * C152873) *
              C152512 * C152914 +
          (((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
               C152457 * C2428 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C2427 -
           ((C42618 + C42619) * C73311 + C44685 * C152911 +
            (C32309 + C32308) * C152910) *
               C152457 * C152873) *
              C152512 * C152897 +
          ((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
               C2427 -
           ((C34168 + C34169) * C73311 + C41775 * C152911 + C32316 * C152910) *
               C152457 * C2428 +
           (C32317 * C152910 + (C35239 + C35238) * C152911 +
            (C31627 * C1733 - C31628 * C1711 - C31627 * C1734 +
             C152846 * C1747 + C31629 * C10024 - C31630 * C10023 -
             C31629 * C10025 + C152775 * C10026) *
                C73311) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C2427 -
           (C94024 * C73311 + (C41780 + C41781) * C152911 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152910) *
               C152457 * C2428 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152910 +
            (C42614 + C42615) * C152911 + C94025 * C73311) *
               C152457 * C152873) *
              C152917 +
          (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
            C94718 * C73311) *
               C152457 * C2428 -
           (C93790 * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C2427 -
           ((C94038 + C94039) * C73311 + (C42620 + C42621) * C152911 +
            (C42615 + C42614) * C152910) *
               C152457 * C152873) *
              C152901 +
          ((C92553 * C152910 + (C42270 + C42271) * C152911 + C93791 * C73311) *
               C152457 * C2427 -
           ((C94731 + C94732) * C73311 + (C43554 + C43555) * C152911 +
            C94024 * C152910) *
               C152457 * C2428 +
           (C94025 * C152910 + (C94039 + C94038) * C152911 +
            (C31627 * C8191 - C31628 * C8181 - C31627 * C8192 +
             C152846 * C8199 + C31629 * C61859 - C31630 * C61858 -
             C31629 * C61860 + C152775 * C61861) *
                C73311) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152910 +
             (C40568 + C40569) * C152911 + C92553 * C73311) *
                C152457 * C4361 -
            (C94024 * C73311 + (C41780 + C41781) * C152911 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152910) *
                C152457 * C152617) *
               C152828 +
           (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
             C94718 * C73311) *
                C152457 * C152617 -
            (C93790 * C73311 + (C40570 + C40571) * C152911 +
             (C40569 + C40568) * C152910) *
                C152457 * C4361) *
               C152575) *
              C152489 +
          ((((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
                C152457 * C152617 -
            (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
                C152457 * C4361) *
               C152828 +
           ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
                C4361 -
            ((C43282 + C43283) * C73311 + C43277 * C152911 + C41765 * C152910) *
                C152457 * C152617) *
               C152575) *
              C152498 +
          (((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
                C4361 -
            ((C34168 + C34169) * C73311 + C41775 * C152911 + C32316 * C152910) *
                C152457 * C152617) *
               C152828 +
           ((C33072 * C152910 + (C34169 + C34168) * C152911 +
             (C31627 * C2273 - C31628 * C2267 - C31627 * C2274 +
              C152846 * C2279 + C31629 * C9823 - C31630 * C9822 -
              C31629 * C9824 + C152775 * C9825) *
                 C73311) *
                C152457 * C152617 -
            ((C33850 + C33851) * C73311 + C40559 * C152911 + C32010 * C152910) *
                C152457 * C4361) *
               C152575) *
              C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152910 +
             (C40568 + C40569) * C152911 + C92553 * C73311) *
                C152457 * C152613 -
            (C94024 * C73311 + (C41780 + C41781) * C152911 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152910) *
                C152457 * C152620 +
            ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C152910 +
             (C42614 + C42615) * C152911 + C94025 * C73311) *
                C152457 * C5033) *
               C152828 +
           (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
             C94718 * C73311) *
                C152457 * C152620 -
            (C93790 * C73311 + (C40570 + C40571) * C152911 +
             (C40569 + C40568) * C152910) *
                C152457 * C152613 -
            ((C94038 + C94039) * C73311 + (C42620 + C42621) * C152911 +
             (C42615 + C42614) * C152910) *
                C152457 * C5033) *
               C152575) *
              C3495 +
          ((((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
                C152457 * C152620 -
            (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
                C152457 * C152613 -
            ((C42618 + C42619) * C73311 + C44685 * C152911 +
             (C32309 + C32308) * C152910) *
                C152457 * C5033) *
               C152828 +
           ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
                C152613 -
            ((C43282 + C43283) * C73311 + C43277 * C152911 + C41765 * C152910) *
                C152457 * C152620 +
            (C44684 * C152910 + (C42619 + C42618) * C152911 +
             (C31627 * C8183 - C31628 * C8177 - C31627 * C8184 +
              C152846 * C8195 + C31629 * C10242 - C31630 * C10239 -
              C31629 * C10243 + C152775 * C10245) *
                 C73311) *
                C152457 * C5033) *
               C152575) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152910 +
             (C40568 + C40569) * C152911 + C92553 * C73311) *
                C152457 * C4361 -
            (C94024 * C73311 + (C41780 + C41781) * C152911 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152910) *
                C152457 * C152617) *
               C152917 +
           (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
             C94718 * C73311) *
                C152457 * C152617 -
            (C93790 * C73311 + (C40570 + C40571) * C152911 +
             (C40569 + C40568) * C152910) *
                C152457 * C4361) *
               C152901 +
           ((C92553 * C152910 + (C42270 + C42271) * C152911 + C93791 * C73311) *
                C152457 * C4361 -
            ((C94731 + C94732) * C73311 + (C43554 + C43555) * C152911 +
             C94024 * C152910) *
                C152457 * C152617) *
               C152870) *
              C3495 +
          ((((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
                C152457 * C152617 -
            (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
                C152457 * C4361) *
               C152917 +
           ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
                C4361 -
            ((C43282 + C43283) * C73311 + C43277 * C152911 + C41765 * C152910) *
                C152457 * C152617) *
               C152901 +
           ((C43268 * C152910 + (C43283 + C43282) * C152911 +
             (C31627 * C8187 - C31628 * C8179 - C31627 * C8188 +
              C152846 * C8197 + C31629 * C8193 - C31630 * C8182 -
              C31629 * C8194 + C152775 * C8200) *
                 C73311) *
                C152457 * C152617 -
            ((C42272 + C42273) * C73311 + C42881 * C152911 + C40547 * C152910) *
                C152457 * C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C4361 -
           (C94024 * C73311 + (C41780 + C41781) * C152911 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152910) *
               C152457 * C152617) *
              C152512 * C152923 +
          (((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
               C152457 * C152617 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C4361) *
              C152512 * C152916 +
          ((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
               C4361 -
           ((C34168 + C34169) * C73311 + C41775 * C152911 + C32316 * C152910) *
               C152457 * C152617) *
              C152512 * C152899 +
          ((C32724 * C152910 + (C33071 + C33070) * C152911 +
            (C31627 * C1721 - C31628 * C1705 - C31627 * C1722 +
             C152846 * C1741 + C31629 * C1735 - C31630 * C1712 -
             C31629 * C1736 + C152775 * C1748) *
                C73311) *
               C152457 * C152617 -
           ((C32008 + C32009) * C73311 + C41120 * C152911 + C31703 * C152910) *
               C152457 * C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152925 -
           (C94024 * C73311 + (C41780 + C41781) * C152911 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152910) *
               C152457 * C152922 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152910 +
            (C42614 + C42615) * C152911 + C94025 * C73311) *
               C152457 * C152909 -
           ((C95981 + C95982) * C73311 + (C45228 + C45229) * C152911 +
            (C31629 * C2679 - C31630 * C2667 - C31629 * C2680 +
             C152775 * C2691 + C31627 * C2677 - C31628 * C2666 -
             C31627 * C2678 + C152846 * C2690) *
                C152910) *
               C152457 * C152886) *
              C152512 * C3495 +
          (((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
               C152457 * C152922 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C152925 -
           ((C42618 + C42619) * C73311 + C44685 * C152911 +
            (C32309 + C32308) * C152910) *
               C152457 * C152909 +
           ((C35463 + C35462) * C152910 + (C44957 + C44956) * C152911 +
            (C31627 * C9514 - C31628 * C9508 - C31627 * C9515 +
             C152846 * C9526 + C31629 * C9524 - C31630 * C9513 -
             C31629 * C9525 + C152775 * C9531) *
                C73311) *
               C152457 * C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152613 -
           (C94024 * C73311 + (C41780 + C41781) * C152911 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152910) *
               C152457 * C152620 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152910 +
            (C42614 + C42615) * C152911 + C94025 * C73311) *
               C152457 * C5033) *
              C152512 * C152489 +
          (((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
               C152457 * C152620 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C152613 -
           ((C42618 + C42619) * C73311 + C44685 * C152911 +
            (C32309 + C32308) * C152910) *
               C152457 * C5033) *
              C152512 * C152498 +
          ((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
               C152613 -
           ((C34168 + C34169) * C73311 + C41775 * C152911 + C32316 * C152910) *
               C152457 * C152620 +
           (C32317 * C152910 + (C35239 + C35238) * C152911 +
            (C31627 * C1733 - C31628 * C1711 - C31627 * C1734 +
             C152846 * C1747 + C31629 * C10024 - C31630 * C10023 -
             C31629 * C10025 + C152775 * C10026) *
                C73311) *
               C152457 * C5033) *
              C152512 * C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C4361 -
           (C94024 * C73311 + (C41780 + C41781) * C152911 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152910) *
               C152457 * C152617) *
              C152512 * C152923 +
          (((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
               C152457 * C152617 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C4361) *
              C152512 * C152916 +
          ((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
               C4361 -
           ((C34168 + C34169) * C73311 + C41775 * C152911 + C32316 * C152910) *
               C152457 * C152617) *
              C152512 * C152899 +
          ((C32724 * C152910 + (C33071 + C33070) * C152911 +
            (C31627 * C1721 - C31628 * C1705 - C31627 * C1722 +
             C152846 * C1741 + C31629 * C1735 - C31630 * C1712 -
             C31629 * C1736 + C152775 * C1748) *
                C73311) *
               C152457 * C152617 -
           ((C32008 + C32009) * C73311 + C41120 * C152911 + C31703 * C152910) *
               C152457 * C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152910 +
             (C40568 + C40569) * C152911 + C92553 * C73311) *
                C152457 * C4361 -
            (C94024 * C73311 + (C41780 + C41781) * C152911 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152910) *
                C152457 * C152617) *
               C152917 +
           (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
             C94718 * C73311) *
                C152457 * C152617 -
            (C93790 * C73311 + (C40570 + C40571) * C152911 +
             (C40569 + C40568) * C152910) *
                C152457 * C4361) *
               C152901 +
           ((C92553 * C152910 + (C42270 + C42271) * C152911 + C93791 * C73311) *
                C152457 * C4361 -
            ((C94731 + C94732) * C73311 + (C43554 + C43555) * C152911 +
             C94024 * C152910) *
                C152457 * C152617) *
               C152870) *
              C3495 +
          ((((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
                C152457 * C152617 -
            (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
                C152457 * C4361) *
               C152917 +
           ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
                C4361 -
            ((C43282 + C43283) * C73311 + C43277 * C152911 + C41765 * C152910) *
                C152457 * C152617) *
               C152901 +
           ((C43268 * C152910 + (C43283 + C43282) * C152911 +
             (C31627 * C8187 - C31628 * C8179 - C31627 * C8188 +
              C152846 * C8197 + C31629 * C8193 - C31630 * C8182 -
              C31629 * C8194 + C152775 * C8200) *
                 C73311) *
                C152457 * C152617 -
            ((C42272 + C42273) * C73311 + C42881 * C152911 + C40547 * C152910) *
                C152457 * C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152530 * C152828 -
           ((C42271 + C42270) * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C152530 * C152575) *
              C873 +
          ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
               C152530 * C152575 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C152530 * C152828) *
              C874 +
          ((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
               C152530 * C152828 -
           ((C33850 + C33851) * C73311 + C40559 * C152911 + C32010 * C152910) *
               C152457 * C152530 * C152575) *
              C875 +
          ((C32514 * C152910 + (C32009 + C32008) * C152911 +
            (C31627 * C1531 - C31628 * C1523 - C31627 * C1532 +
             C152846 * C1547 + C31629 * C2275 - C31630 * C2268 -
             C31629 * C2276 + C152775 * C2280) *
                C73311) *
               C152457 * C152530 * C152575 -
           ((C32008 + C32009) * C73311 + C41120 * C152911 + C31703 * C152910) *
               C152457 * C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152530 * C1879 -
           (C93790 * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C152530 * C1880 +
           (C92553 * C152910 + (C42270 + C42271) * C152911 + C93791 * C73311) *
               C152457 * C152530 * C1881 -
           ((C93804 + C93805) * C73311 + (C42274 + C42275) * C152911 +
            C93790 * C152910) *
               C152457 * C152530 * C152880) *
              C152814 +
          ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
               C152530 * C1880 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C152530 * C1879 -
           ((C42272 + C42273) * C73311 + C42881 * C152911 + C40547 * C152910) *
               C152457 * C152530 * C1881 +
           (C42880 * C152910 + (C42273 + C42272) * C152911 +
            (C31627 * C7926 - C31628 * C7922 - C31627 * C7927 +
             C152846 * C7934 + C31629 * C8939 - C31630 * C8936 -
             C31629 * C8940 + C152775 * C8942) *
                C73311) *
               C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152910 +
             (C40568 + C40569) * C152911 + C92553 * C73311) *
                C152457 * C152829 -
            ((C42617 + C42616) * C73311 + (C41780 + C41781) * C152911 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152910) *
                C152457 * C152617) *
               C152828 +
           (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
             (C43555 + C43554) * C73311) *
                C152457 * C152617 -
            ((C42271 + C42270) * C73311 + (C40570 + C40571) * C152911 +
             (C40569 + C40568) * C152910) *
                C152457 * C152829) *
               C152575) *
              C365 +
          ((((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
                C152457 * C152617 -
            (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
                C152457 * C152829) *
               C152828 +
           ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
                C152829 -
            ((C43282 + C43283) * C73311 + C43277 * C152911 + C41765 * C152910) *
                C152457 * C152617) *
               C152575) *
              C366 +
          (((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
                C152829 -
            ((C34168 + C34169) * C73311 + C41775 * C152911 + C32316 * C152910) *
                C152457 * C152617) *
               C152828 +
           ((C33072 * C152910 + (C34169 + C34168) * C152911 +
             (C31627 * C2273 - C31628 * C2267 - C31627 * C2274 +
              C152846 * C2279 + C31629 * C9823 - C31630 * C9822 -
              C31629 * C9824 + C152775 * C9825) *
                 C73311) *
                C152457 * C152617 -
            ((C33850 + C33851) * C73311 + C40559 * C152911 + C32010 * C152910) *
                C152457 * C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152829 -
           (C94024 * C73311 + (C41780 + C41781) * C152911 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152910) *
               C152457 * C152617) *
              C1879 +
          (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
            C94718 * C73311) *
               C152457 * C152617 -
           (C93790 * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C152829) *
              C1880 +
          ((C92553 * C152910 + (C42270 + C42271) * C152911 + C93791 * C73311) *
               C152457 * C152829 -
           ((C94731 + C94732) * C73311 + (C43554 + C43555) * C152911 +
            C94024 * C152910) *
               C152457 * C152617) *
              C1881 +
          ((C94718 * C152910 + (C94732 + C94731) * C152911 +
            (C31627 * C8937 - C31628 * C8935 - C31627 * C8938 +
             C152846 * C8941 + C31629 * C60551 - C31630 * C60550 -
             C31629 * C60552 + C152775 * C60553) *
                C73311) *
               C152457 * C152617 -
           ((C93804 + C93805) * C73311 + (C42274 + C42275) * C152911 +
            C93790 * C152910) *
               C152457 * C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152530 * C152917 -
           ((C42271 + C42270) * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C152530 * C152901 +
           (C92553 * C152910 + (C42270 + C42271) * C152911 +
            (C42275 + C42274) * C73311) *
               C152457 * C152530 * C152870) *
              C365 +
          ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
               C152530 * C152901 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C152530 * C152917 -
           ((C42272 + C42273) * C73311 + C42881 * C152911 + C40547 * C152910) *
               C152457 * C152530 * C152870) *
              C366 +
          ((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
               C152530 * C152917 -
           ((C33850 + C33851) * C73311 + C40559 * C152911 + C32010 * C152910) *
               C152457 * C152530 * C152901 +
           (C32011 * C152910 + (C33851 + C33850) * C152911 +
            (C31627 * C1543 - C31628 * C1529 - C31627 * C1544 +
             C152846 * C1553 + C31629 * C8728 - C31630 * C8727 -
             C31629 * C8729 + C152775 * C8730) *
                C73311) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
            C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
               C152910 +
           (C40568 + C40569) * C152911 + (C40571 + C40570) * C73311) *
              C152457 * C152530 * C152512 * C129 -
          (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
              C152457 * C152530 * C152512 * C130 +
          (C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
              C152530 * C152512 * C131 -
          ((C32008 + C32009) * C73311 + C41120 * C152911 + C31703 * C152910) *
              C152457 * C152530 * C152512 * C132 +
          (C31704 * C152910 + (C32529 + C32528) * C152911 +
           (C31627 * C398 - C31628 * C377 - C31627 * C399 + C152846 * C413 +
            C31629 * C2108 - C31630 * C2107 - C31629 * C2109 +
            C152775 * C2110) *
               C73311) *
              C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152918 -
           ((C42617 + C42616) * C73311 + (C41780 + C41781) * C152911 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152910) *
               C152457 * C152903 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152910 +
            (C42614 + C42615) * C152911 + (C42621 + C42620) * C73311) *
               C152457 * C152873) *
              C152512 * C365 +
          (((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
               C152457 * C152903 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C152918 -
           ((C42618 + C42619) * C73311 + C44685 * C152911 +
            (C32309 + C32308) * C152910) *
               C152457 * C152873) *
              C152512 * C366 +
          ((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
               C152918 -
           ((C34168 + C34169) * C73311 + C41775 * C152911 + C32316 * C152910) *
               C152457 * C152903 +
           (C32317 * C152910 + (C35239 + C35238) * C152911 +
            (C31627 * C1733 - C31628 * C1711 - C31627 * C1734 +
             C152846 * C1747 + C31629 * C10024 - C31630 * C10023 -
             C31629 * C10025 + C152775 * C10026) *
                C73311) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152530 * C1429 -
           ((C42271 + C42270) * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C152530 * C1430 +
           (C92553 * C152910 + (C42270 + C42271) * C152911 +
            (C42275 + C42274) * C73311) *
               C152457 * C152530 * C152870) *
              C152914 +
          ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
               C152530 * C1430 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C152530 * C1429 -
           ((C42272 + C42273) * C73311 + C42881 * C152911 + C40547 * C152910) *
               C152457 * C152530 * C152870) *
              C152897 +
          ((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
               C152530 * C1429 -
           ((C33850 + C33851) * C73311 + C40559 * C152911 + C32010 * C152910) *
               C152457 * C152530 * C1430 +
           (C32011 * C152910 + (C33851 + C33850) * C152911 +
            (C31627 * C1543 - C31628 * C1529 - C31627 * C1544 +
             C152846 * C1553 + C31629 * C8728 - C31630 * C8727 -
             C31629 * C8729 + C152775 * C8730) *
                C73311) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
            C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
               C152910 +
           (C40568 + C40569) * C152911 + C92553 * C73311) *
              C152457 * C152530 * C1517 -
          (C93790 * C73311 + (C40570 + C40571) * C152911 +
           (C40569 + C40568) * C152910) *
              C152457 * C152530 * C1518 +
          (C92553 * C152910 + (C42270 + C42271) * C152911 + C93791 * C73311) *
              C152457 * C152530 * C1519 -
          ((C93804 + C93805) * C73311 + (C42274 + C42275) * C152911 +
           C93790 * C152910) *
              C152457 * C152530 * C1520 +
          (C93791 * C152910 + (C93805 + C93804) * C152911 +
           (C31627 * C7930 - C31628 * C7924 - C31627 * C7931 + C152846 * C7936 +
            C31629 * C61016 - C31630 * C61015 - C31629 * C61017 +
            C152775 * C61018) *
               C73311) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152918 -
           (C94024 * C73311 + (C41780 + C41781) * C152911 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152910) *
               C152457 * C152903 +
           ((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C152910 +
            (C42614 + C42615) * C152911 + C94025 * C73311) *
               C152457 * C152873) *
              C1429 +
          (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
            (C43555 + C43554) * C73311) *
               C152457 * C152903 -
           (C93790 * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C152918 -
           ((C94038 + C94039) * C73311 + (C42620 + C42621) * C152911 +
            (C42615 + C42614) * C152910) *
               C152457 * C152873) *
              C1430 +
          ((C92553 * C152910 + (C42270 + C42271) * C152911 + C93791 * C73311) *
               C152457 * C152918 -
           ((C31629 * C8191 - C31630 * C8181 - C31629 * C8192 +
             C152775 * C8199 + C31627 * C8189 - C31628 * C8180 -
             C31627 * C8190 + C152846 * C8198) *
                C73311 +
            (C43554 + C43555) * C152911 + C94024 * C152910) *
               C152457 * C152903 +
           (C94025 * C152910 + (C94039 + C94038) * C152911 +
            (C31627 * C8191 - C31628 * C8181 - C31627 * C8192 +
             C152846 * C8199 + C31629 * C61859 - C31630 * C61858 -
             C31629 * C61860 + C152775 * C61861) *
                C73311) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152829 -
           ((C42617 + C42616) * C73311 + (C41780 + C41781) * C152911 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C152910) *
               C152457 * C152617) *
              C152512 * C873 +
          (((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
               C152457 * C152617 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C152829) *
              C152512 * C874 +
          ((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
               C152829 -
           ((C34168 + C34169) * C73311 + C41775 * C152911 + C32316 * C152910) *
               C152457 * C152617) *
              C152512 * C875 +
          ((C32724 * C152910 + (C33071 + C33070) * C152911 +
            (C31627 * C1721 - C31628 * C1705 - C31627 * C1722 +
             C152846 * C1741 + C31629 * C1735 - C31630 * C1712 -
             C31629 * C1736 + C152775 * C1748) *
                C73311) *
               C152457 * C152617 -
           ((C32008 + C32009) * C73311 + C41120 * C152911 + C31703 * C152910) *
               C152457 * C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C152910 +
             (C40568 + C40569) * C152911 + C92553 * C73311) *
                C152457 * C152829 -
            (C94024 * C73311 + (C41780 + C41781) * C152911 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C152910) *
                C152457 * C152617) *
               C1429 +
           (((C41781 + C41780) * C152910 + (C42616 + C42617) * C152911 +
             (C43555 + C43554) * C73311) *
                C152457 * C152617 -
            (C93790 * C73311 + (C40570 + C40571) * C152911 +
             (C40569 + C40568) * C152910) *
                C152457 * C152829) *
               C1430 +
           ((C92553 * C152910 + (C42270 + C42271) * C152911 + C93791 * C73311) *
                C152457 * C152829 -
            ((C31629 * C8191 - C31630 * C8181 - C31629 * C8192 +
              C152775 * C8199 + C31627 * C8189 - C31628 * C8180 -
              C31627 * C8190 + C152846 * C8198) *
                 C73311 +
             (C43554 + C43555) * C152911 + C94024 * C152910) *
                C152457 * C152617) *
               C152870) *
              C152814 +
          ((((C32307 + C32306) * C152910 + C41774 * C152911 + C43268 * C73311) *
                C152457 * C152617 -
            (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
                C152457 * C152829) *
               C1429 +
           ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
                C152829 -
            ((C43282 + C43283) * C73311 + C43277 * C152911 + C41765 * C152910) *
                C152457 * C152617) *
               C1430 +
           ((C43268 * C152910 + (C43283 + C43282) * C152911 +
             (C31627 * C8187 - C31628 * C8179 - C31627 * C8188 +
              C152846 * C8197 + C31629 * C8193 - C31630 * C8182 -
              C31629 * C8194 + C152775 * C8200) *
                 C73311) *
                C152457 * C152617 -
            ((C42272 + C42273) * C73311 + C42881 * C152911 + C40547 * C152910) *
                C152457 * C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
            C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
               C152910 +
           (C40568 + C40569) * C152911 + (C40571 + C40570) * C73311) *
              C152457 * C152530 * C152512 * C129 -
          (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
              C152457 * C152530 * C152512 * C130 +
          (C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
              C152530 * C152512 * C131 -
          ((C32008 + C32009) * C73311 + C41120 * C152911 + C31703 * C152910) *
              C152457 * C152530 * C152512 * C132 +
          (C31704 * C152910 + (C32529 + C32528) * C152911 +
           (C31627 * C398 - C31628 * C377 - C31627 * C399 + C152846 * C413 +
            C31629 * C2108 - C31630 * C2107 - C31629 * C2109 +
            C152775 * C2110) *
               C73311) *
              C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152530 * C152917 -
           ((C42271 + C42270) * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C152530 * C152901 +
           (C92553 * C152910 + (C42270 + C42271) * C152911 +
            (C42275 + C42274) * C73311) *
               C152457 * C152530 * C152870) *
              C365 +
          ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
               C152530 * C152901 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C152530 * C152917 -
           ((C42272 + C42273) * C73311 + C42881 * C152911 + C40547 * C152910) *
               C152457 * C152530 * C152870) *
              C366 +
          ((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
               C152530 * C152917 -
           ((C33850 + C33851) * C73311 + C40559 * C152911 + C32010 * C152910) *
               C152457 * C152530 * C152901 +
           (C32011 * C152910 + (C33851 + C33850) * C152911 +
            (C31627 * C1543 - C31628 * C1529 - C31627 * C1544 +
             C152846 * C1553 + C31629 * C8728 - C31630 * C8727 -
             C31629 * C8729 + C152775 * C8730) *
                C73311) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C152910 +
            (C40568 + C40569) * C152911 + C92553 * C73311) *
               C152457 * C152530 * C1429 -
           ((C42271 + C42270) * C73311 + (C40570 + C40571) * C152911 +
            (C40569 + C40568) * C152910) *
               C152457 * C152530 * C1430 +
           (C92553 * C152910 + (C42270 + C42271) * C152911 +
            (C42275 + C42274) * C73311) *
               C152457 * C152530 * C152870) *
              C152914 +
          ((C40546 * C152910 + C40557 * C152911 + C42880 * C73311) * C152457 *
               C152530 * C1430 -
           (C40547 * C73311 + C40548 * C152911 + (C31693 + C31692) * C152910) *
               C152457 * C152530 * C1429 -
           ((C42272 + C42273) * C73311 + C42881 * C152911 + C40547 * C152910) *
               C152457 * C152530 * C152870) *
              C152897 +
          ((C31702 * C152910 + C40558 * C152911 + C32011 * C73311) * C152457 *
               C152530 * C1429 -
           ((C33850 + C33851) * C73311 + C40559 * C152911 + C32010 * C152910) *
               C152457 * C152530 * C1430 +
           (C32011 * C152910 + (C33851 + C33850) * C152911 +
            (C31627 * C1543 - C31628 * C1529 - C31627 * C1544 +
             C152846 * C1553 + C31629 * C8728 - C31630 * C8727 -
             C31629 * C8729 + C152775 * C8730) *
                C73311) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
            C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
               C152910 +
           (C40568 + C40569) * C152911 + C92553 * C73311) *
              C152457 * C152530 * C1517 -
          (C93790 * C73311 + (C40570 + C40571) * C152911 +
           (C40569 + C40568) * C152910) *
              C152457 * C152530 * C1518 +
          (C92553 * C152910 + (C42270 + C42271) * C152911 + C93791 * C73311) *
              C152457 * C152530 * C1519 -
          ((C93804 + C93805) * C73311 + (C42274 + C42275) * C152911 +
           C93790 * C152910) *
              C152457 * C152530 * C1520 +
          (C93791 * C152910 + (C93805 + C93804) * C152911 +
           (C31627 * C7930 - C31628 * C7924 - C31627 * C7931 + C152846 * C7936 +
            C31629 * C61016 - C31630 * C61015 - C31629 * C61017 +
            C152775 * C61018) *
               C73311) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C152571 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C152578 +
           (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152530 * C3839) *
              C152489 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C152578 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C152571 -
           (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
               C152457 * C152530 * C3839) *
              C152498 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152530 * C152571 -
           (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
               C152457 * C152530 * C152578 +
           (C469 * C59414 + C1909 * C59415 + C6618 * C59416 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C59417) *
               C152457 * C152530 * C3839) *
              C3842)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152530 * C152571 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152530 * C152578 +
           ((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152530 * C3839) *
              C152489 +
          (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
            C51920 * C51247) *
               C152530 * C152578 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152530 * C152571 -
           ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
            (C51485 + C51484) * C51245) *
               C152530 * C3839) *
              C152498 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152530 * C152571 -
           ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
            C51492 * C51245) *
               C152530 * C152578 +
           (C51493 * C51245 + (C51491 + C51490) * C51246 +
            (C472 * C51243 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C152747) *
                C51247) *
               C152530 * C3839) *
              C3842)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152530 * C152571 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C152530 * C152578 +
           ((C65215 + C65214 + C65213) * C51243 +
            (C66509 + C66510 + C66511) * C152747) *
               C152457 * C152530 * C3839) *
              C152489 +
          (((C15196 + C15195 + C15194) * C51243 +
            (C15197 + C15198 + C15199) * C152747) *
               C152457 * C152530 * C152578 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C152530 * C152571 -
           ((C17040 + C17041 + C17042) * C152747 +
            (C15199 + C15198 + C15197) * C51243) *
               C152457 * C152530 * C3839) *
              C152498 +
          (((C14897 + C14896 + C14895) * C51243 +
            (C15200 + C15201 + C15202) * C152747) *
               C152457 * C152530 * C152571 -
           ((C15203 + C15204 + C15205) * C152747 +
            (C15202 + C15201 + C15200) * C51243) *
               C152457 * C152530 * C152578 +
           ((C15205 + C15204 + C15203) * C51243 +
            (C14813 * C1533 - C14814 * C1524 - C14813 * C1534 + C14810 * C1548 +
             C14815 * C2273 - C14816 * C2267 - C14815 * C2274 + C14811 * C2279 +
             C14817 * C9823 - C14818 * C9822 - C14817 * C9824 +
             C14812 * C9825) *
                C152747) *
               C152457 * C152530 * C3839) *
              C3842)) /
            (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C152829 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152617) *
               C152571 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152617 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C152829) *
               C152578 +
           ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 +
             C7959 * C59417) *
                C152457 * C152829 -
            (C61026 * C59417 + C8950 * C59416 + C8234 * C59415 +
             C7577 * C59414) *
                C152457 * C152617) *
               C3839) *
              C3495 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152617 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C152829) *
               C152571 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C152829 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152617) *
               C152578 +
           ((C2132 * C59414 + C7579 * C59415 + C8740 * C59416 +
             (C134 * C8939 - C135 * C8936 - C134 * C8940 + C152711 * C8942) *
                 C59417) *
                C152457 * C152617 -
            (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
                C152457 * C152829) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C152829 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C152617) *
               C152571 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C152617 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C152829) *
               C152578 +
           (((C6615 * C51243 + C6616 * C152747) * C51245 +
             (C51484 + C51485) * C51246 + C51493 * C51247) *
                C152829 -
            ((C53463 + C53464) * C51247 + (C53465 + C53466) * C51246 +
             (C8234 * C152747 + C7577 * C51243) * C51245) *
                C152617) *
               C3839) *
              C3495 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C152617 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C152829) *
               C152571 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C152829 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C152617) *
               C152578 +
           (((C53466 + C53465) * C51245 + (C53464 + C53463) * C51246 +
             (C2130 * C51243 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C152747) *
                 C51247) *
                C152617 -
            ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
             (C51485 + C51484) * C51245) *
                C152829) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C51243 +
             (C65210 + C65211 + C65212) * C152747) *
                C152457 * C152829 -
            ((C66130 + C66131 + C66132) * C152747 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C51243) *
                C152457 * C152617) *
               C152571 +
           (((C66132 + C66131 + C66130) * C51243 +
             (C66790 + C66791 + C66792) * C152747) *
                C152457 * C152617 -
            ((C65213 + C65214 + C65215) * C152747 +
             (C65212 + C65211 + C65210) * C51243) *
                C152457 * C152829) *
               C152578 +
           (((C65215 + C65214 + C65213) * C51243 +
             (C66509 + C66510 + C66511) * C152747) *
                C152457 * C152829 -
            ((C67492 + C67493 + C67494) * C152747 +
             (C66792 + C66791 + C66790) * C51243) *
                C152457 * C152617) *
               C3839) *
              C3495 +
          ((((C15498 + C15497 + C15496) * C51243 +
             (C16264 + C16265 + C16266) * C152747) *
                C152457 * C152617 -
            ((C15194 + C15195 + C15196) * C152747 +
             (C14894 + C14893 + C14892) * C51243) *
                C152457 * C152829) *
               C152571 +
           (((C15196 + C15195 + C15194) * C51243 +
             (C15197 + C15198 + C15199) * C152747) *
                C152457 * C152829 -
            ((C17351 + C17352 + C17353) * C152747 +
             (C16266 + C16265 + C16264) * C51243) *
                C152457 * C152617) *
               C152578 +
           (((C17353 + C17352 + C17351) * C51243 +
             (C14813 * C2271 - C14814 * C2266 - C14813 * C2272 +
              C14810 * C2278 + C14815 * C8183 - C14816 * C8177 -
              C14815 * C8184 + C14811 * C8195 + C14817 * C10242 -
              C14818 * C10239 - C14817 * C10243 + C14812 * C10245) *
                 C152747) *
                C152457 * C152617 -
            ((C17040 + C17041 + C17042) * C152747 +
             (C15199 + C15198 + C15197) * C51243) *
                C152457 * C152829) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                     C51243 +
                 C6614 * C152747) *
                    C51245 +
                (C51249 + C51250) * C51246 + C51259 * C51247) *
                   C152530 * C3355 -
               (C51492 * C51247 + (C51482 + C51483) * C51246 +
                (C6615 * C152747 + C6614 * C51243) * C51245) *
                   C152530 * C152575) *
                  C152923 +
              (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
                C51920 * C51247) *
                   C152530 * C152575 -
               (C51260 * C51247 + (C51252 + C51251) * C51246 +
                (C51250 + C51249) * C51245) *
                   C152530 * C3355) *
                  C152916 +
              ((C51259 * C51245 + (C51254 + C51253) * C51246 +
                C51261 * C51247) *
                   C152530 * C3355 -
               ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
                C51492 * C51245) *
                   C152530 * C152575) *
                  C152899 +
              ((C51920 * C51245 + (C51922 + C51921) * C51246 +
                (C888 * C51243 +
                 (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                     C152747) *
                    C51247) *
                   C152530 * C152575 -
               ((C51257 + C51258) * C51247 + (C51256 + C51255) * C51246 +
                C51260 * C51245) *
                   C152530 * C3355) *
                  C152874) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                     C51243 +
                 C6614 * C152747) *
                    C51245 +
                (C51249 + C51250) * C51246 + C51259 * C51247) *
                   C152530 * C152924 -
               (C51492 * C51247 + (C51482 + C51483) * C51246 +
                (C6615 * C152747 + C6614 * C51243) * C51245) *
                   C152530 * C152920 +
               ((C6615 * C51243 + C6616 * C152747) * C51245 +
                (C51484 + C51485) * C51246 + C51493 * C51247) *
                   C152530 * C152906 -
               ((C53169 + C53170) * C51247 + (C53171 + C53172) * C51246 +
                (C7957 * C152747 + C6616 * C51243) * C51245) *
                   C152530 * C152880) *
                  C3495 +
              (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
                C51920 * C51247) *
                   C152530 * C152920 -
               (C51260 * C51247 + (C51252 + C51251) * C51246 +
                (C51250 + C51249) * C51245) *
                   C152530 * C152924 -
               ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
                (C51485 + C51484) * C51245) *
                   C152530 * C152906 +
               ((C53172 + C53171) * C51245 + (C53170 + C53169) * C51246 +
                (C1908 * C51243 + (C134 * C1545 - C135 * C1530 - C134 * C1546 +
                                   C152711 * C1554) *
                                      C152747) *
                    C51247) *
                   C152530 * C152880) *
                  C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C152918 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C152903 +
            (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                  C51243 +
              C8232 * C152747) *
                 C51245 +
             (C51716 + C51717) * C51246 + C51725 * C51247) *
                C152873) *
               C3355 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C152903 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C152918 -
            ((C54509 + C54510) * C51247 + (C54511 + C54512) * C51246 +
             (C8233 * C152747 + C8232 * C51243) * C51245) *
                C152873) *
               C152575) *
              C3495 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C152903 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C152918 -
            ((C51722 + C51723) * C51247 + (C51719 + C51718) * C51246 +
             (C51717 + C51716) * C51245) *
                C152873) *
               C3355 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C152918 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C152903 +
            ((C54512 + C54511) * C51245 + (C54510 + C54509) * C51246 +
             (C2912 * C51243 +
              (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                  C152747) *
                 C51247) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C3355 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C152575) *
              C152923 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C152575 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C3355) *
              C152916 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152530 * C3355 -
           (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
               C152457 * C152530 * C152575) *
              C152899 +
          ((C465 * C59414 + C470 * C59415 + C1908 * C59416 +
            (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                C59417) *
               C152457 * C152530 * C152575 -
           (C1908 * C59417 + C470 * C59416 + C465 * C59415 + C207 * C59414) *
               C152457 * C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C152924 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C152920 +
           (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152530 * C152906 -
           (C60404 * C59417 + C7959 * C59416 + C7957 * C59415 +
            C6616 * C59414) *
               C152457 * C152530 * C152880) *
              C3495 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C152920 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C152924 -
           (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
               C152457 * C152530 * C152906 +
           (C1910 * C59414 + C6617 * C59415 + C7958 * C59416 +
            (C134 * C7932 - C135 * C7925 - C134 * C7933 + C152711 * C7937) *
                C59417) *
               C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C152918 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152903 +
            ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C59414 +
             C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
                C152457 * C152873) *
               C3355 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152903 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C152918 -
            (C60561 * C59417 + C8236 * C59416 + C8233 * C59415 +
             C8232 * C59414) *
                C152457 * C152873) *
               C152575) *
              C3495 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152903 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C152918 -
            (C8235 * C59417 + C6861 * C59416 + C2914 * C59415 + C729 * C59414) *
                C152457 * C152873) *
               C3355 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C152918 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152903 +
            (C2914 * C59414 + C6861 * C59415 + C8235 * C59416 +
             (C134 * C8193 - C135 * C8182 - C134 * C8194 + C152711 * C8200) *
                 C59417) *
                C152457 * C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152530 * C3355 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C152530 * C152575) *
              C152923 +
          (((C15196 + C15195 + C15194) * C51243 +
            (C15197 + C15198 + C15199) * C152747) *
               C152457 * C152530 * C152575 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C152530 * C3355) *
              C152916 +
          (((C14897 + C14896 + C14895) * C51243 +
            (C15200 + C15201 + C15202) * C152747) *
               C152457 * C152530 * C3355 -
           ((C15203 + C15204 + C15205) * C152747 +
            (C15202 + C15201 + C15200) * C51243) *
               C152457 * C152530 * C152575) *
              C152899 +
          (((C15722 + C15721 + C15720) * C51243 +
            (C14813 * C394 - C14814 * C375 - C14813 * C395 + C14810 * C411 +
             C14815 * C1721 - C14816 * C1705 - C14815 * C1722 + C14811 * C1741 +
             C14817 * C1735 - C14818 * C1712 - C14817 * C1736 +
             C14812 * C1748) *
                C152747) *
               C152457 * C152530 * C152575 -
           ((C15720 + C15721 + C15722) * C152747 +
            (C14900 + C14899 + C14898) * C51243) *
               C152457 * C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152530 * C152924 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C152530 * C152920 +
           ((C65215 + C65214 + C65213) * C51243 +
            (C66509 + C66510 + C66511) * C152747) *
               C152457 * C152530 * C152906 -
           ((C66512 + C66513 + C66514) * C152747 +
            (C66511 + C66510 + C66509) * C51243) *
               C152457 * C152530 * C152880) *
              C3495 +
          (((C15196 + C15195 + C15194) * C51243 +
            (C15197 + C15198 + C15199) * C152747) *
               C152457 * C152530 * C152920 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C152530 * C152924 -
           ((C17040 + C17041 + C17042) * C152747 +
            (C15199 + C15198 + C15197) * C51243) *
               C152457 * C152530 * C152906 +
           ((C17042 + C17041 + C17040) * C51243 +
            (C14813 * C1541 - C14814 * C1528 - C14813 * C1542 + C14810 * C1552 +
             C14815 * C8187 - C14816 * C8179 - C14815 * C8188 + C14811 * C8197 +
             C14817 * C8193 - C14818 * C8182 - C14817 * C8194 +
             C14812 * C8200) *
                C152747) *
               C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C51243 +
             (C65210 + C65211 + C65212) * C152747) *
                C152457 * C152918 -
            ((C66130 + C66131 + C66132) * C152747 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C51243) *
                C152457 * C152903 +
            ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
              C14815 * C2677 - C14816 * C2666 - C14815 * C2678 +
              C14811 * C2690 + C14817 * C2679 - C14818 * C2667 -
              C14817 * C2680 + C14812 * C2691) *
                 C51243 +
             (C66787 + C66788 + C66789) * C152747) *
                C152457 * C152873) *
               C3355 +
           (((C66132 + C66131 + C66130) * C51243 +
             (C66790 + C66791 + C66792) * C152747) *
                C152457 * C152903 -
            ((C65213 + C65214 + C65215) * C152747 +
             (C65212 + C65211 + C65210) * C51243) *
                C152457 * C152918 -
            ((C66793 + C66794 + C66795) * C152747 +
             (C66789 + C66788 + C66787) * C51243) *
                C152457 * C152873) *
               C152575) *
              C3495 +
          ((((C15498 + C15497 + C15496) * C51243 +
             (C16264 + C16265 + C16266) * C152747) *
                C152457 * C152903 -
            ((C15194 + C15195 + C15196) * C152747 +
             (C14894 + C14893 + C14892) * C51243) *
                C152457 * C152918 -
            ((C18434 + C18435 + C18436) * C152747 +
             (C15501 + C15500 + C15499) * C51243) *
                C152457 * C152873) *
               C3355 +
           (((C15196 + C15195 + C15194) * C51243 +
             (C15197 + C15198 + C15199) * C152747) *
                C152457 * C152918 -
            ((C17351 + C17352 + C17353) * C152747 +
             (C16266 + C16265 + C16264) * C51243) *
                C152457 * C152903 +
            ((C18436 + C18435 + C18434) * C51243 +
             (C14813 * C1731 - C14814 * C1710 - C14813 * C1732 +
              C14810 * C1746 + C14815 * C9514 - C14816 * C9508 -
              C14815 * C9515 + C14811 * C9526 + C14817 * C9524 -
              C14818 * C9513 - C14817 * C9525 + C14812 * C9531) *
                 C152747) *
                C152457 * C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C152829 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152617) *
               C3355 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152617 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C152829) *
               C152575) *
              C152489 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152617 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C152829) *
               C3355 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C152829 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152617) *
               C152575) *
              C152498 +
          (((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
                C152457 * C152829 -
            (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
                C152457 * C152617) *
               C3355 +
           ((C1277 * C59414 + C2131 * C59415 + C7580 * C59416 +
             (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                 C59417) *
                C152457 * C152617 -
            (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
                C152457 * C152829) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C152829 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C152617) *
               C3355 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C152617 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C152829) *
               C152575) *
              C152489 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C152617 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C152829) *
               C3355 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C152829 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C152617) *
               C152575) *
              C152498 +
          (((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
                C152829 -
            ((C52118 + C52119) * C51247 + (C51721 + C51720) * C51246 +
             C51724 * C51245) *
                C152617) *
               C3355 +
           ((C52416 * C51245 + (C52415 + C52414) * C51246 +
             (C1279 * C51243 +
              (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                  C152747) *
                 C51247) *
                C152617 -
            ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
             C51492 * C51245) *
                C152829) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C51243 +
             (C65210 + C65211 + C65212) * C152747) *
                C152457 * C152829 -
            ((C66130 + C66131 + C66132) * C152747 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C51243) *
                C152457 * C152617) *
               C3355 +
           (((C66132 + C66131 + C66130) * C51243 +
             (C66790 + C66791 + C66792) * C152747) *
                C152457 * C152617 -
            ((C65213 + C65214 + C65215) * C152747 +
             (C65212 + C65211 + C65210) * C51243) *
                C152457 * C152829) *
               C152575) *
              C152489 +
          ((((C15498 + C15497 + C15496) * C51243 +
             (C16264 + C16265 + C16266) * C152747) *
                C152457 * C152617 -
            ((C15194 + C15195 + C15196) * C152747 +
             (C14894 + C14893 + C14892) * C51243) *
                C152457 * C152829) *
               C3355 +
           (((C15196 + C15195 + C15194) * C51243 +
             (C15197 + C15198 + C15199) * C152747) *
                C152457 * C152829 -
            ((C17351 + C17352 + C17353) * C152747 +
             (C16266 + C16265 + C16264) * C51243) *
                C152457 * C152617) *
               C152575) *
              C152498 +
          ((((C14897 + C14896 + C14895) * C51243 +
             (C15200 + C15201 + C15202) * C152747) *
                C152457 * C152829 -
            ((C16267 + C16268 + C16269) * C152747 +
             (C15504 + C15503 + C15502) * C51243) *
                C152457 * C152617) *
               C3355 +
           (((C16269 + C16268 + C16267) * C51243 +
             (C14813 * C1723 - C14814 * C1706 - C14813 * C1724 +
              C14810 * C1742 + C14815 * C1733 - C14816 * C1711 -
              C14815 * C1734 + C14811 * C1747 + C14817 * C10024 -
              C14818 * C10023 - C14817 * C10025 + C14812 * C10026) *
                 C152747) *
                C152457 * C152617 -
            ((C15203 + C15204 + C15205) * C152747 +
             (C15202 + C15201 + C15200) * C51243) *
                C152457 * C152829) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152530 * C152924 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152530 * C152920 +
           ((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152530 * C152906 -
           ((C53169 + C53170) * C51247 + (C53171 + C53172) * C51246 +
            (C7957 * C152747 + C6616 * C51243) * C51245) *
               C152530 * C152880) *
              C3495 +
          (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
            C51920 * C51247) *
               C152530 * C152920 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152530 * C152924 -
           ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
            (C51485 + C51484) * C51245) *
               C152530 * C152906 +
           ((C53172 + C53171) * C51245 + (C53170 + C53169) * C51246 +
            (C1908 * C51243 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C152747) *
                C51247) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152530 * C3355 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152530 * C152575) *
              C152923 +
          (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
            C51920 * C51247) *
               C152530 * C152575 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152530 * C3355) *
              C152916 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152530 * C3355 -
           ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
            C51492 * C51245) *
               C152530 * C152575) *
              C152899 +
          ((C51920 * C51245 + (C51922 + C51921) * C51246 +
            (C888 * C51243 +
             (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                 C152747) *
                C51247) *
               C152530 * C152575 -
           ((C51257 + C51258) * C51247 + (C51256 + C51255) * C51246 +
            C51260 * C51245) *
               C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C3355 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C152575) *
              C152923 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C152575 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C3355) *
              C152916 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152530 * C3355 -
           (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
               C152457 * C152530 * C152575) *
              C152899 +
          ((C465 * C59414 + C470 * C59415 + C1908 * C59416 +
            (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                C59417) *
               C152457 * C152530 * C152575 -
           (C1908 * C59417 + C470 * C59416 + C465 * C59415 + C207 * C59414) *
               C152457 * C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C152924 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C152920 +
           (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152530 * C152906 -
           (C60404 * C59417 + C7959 * C59416 + C7957 * C59415 +
            C6616 * C59414) *
               C152457 * C152530 * C152880) *
              C3495 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C152920 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C152924 -
           (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
               C152457 * C152530 * C152906 +
           (C1910 * C59414 + C6617 * C59415 + C7958 * C59416 +
            (C134 * C7932 - C135 * C7925 - C134 * C7933 + C152711 * C7937) *
                C59417) *
               C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152530 * C3355 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C152530 * C152575) *
              C152923 +
          (((C15196 + C15195 + C15194) * C51243 +
            (C15197 + C15198 + C15199) * C152747) *
               C152457 * C152530 * C152575 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C152530 * C3355) *
              C152916 +
          (((C14897 + C14896 + C14895) * C51243 +
            (C15200 + C15201 + C15202) * C152747) *
               C152457 * C152530 * C3355 -
           ((C15203 + C15204 + C15205) * C152747 +
            (C15202 + C15201 + C15200) * C51243) *
               C152457 * C152530 * C152575) *
              C152899 +
          (((C15722 + C15721 + C15720) * C51243 +
            (C14813 * C394 - C14814 * C375 - C14813 * C395 + C14810 * C411 +
             C14815 * C1721 - C14816 * C1705 - C14815 * C1722 + C14811 * C1741 +
             C14817 * C1735 - C14818 * C1712 - C14817 * C1736 +
             C14812 * C1748) *
                C152747) *
               C152457 * C152530 * C152575 -
           ((C15720 + C15721 + C15722) * C152747 +
            (C14900 + C14899 + C14898) * C51243) *
               C152457 * C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152530 * C152924 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C152530 * C152920 +
           ((C65215 + C65214 + C65213) * C51243 +
            (C66509 + C66510 + C66511) * C152747) *
               C152457 * C152530 * C152906 -
           ((C66512 + C66513 + C66514) * C152747 +
            (C66511 + C66510 + C66509) * C51243) *
               C152457 * C152530 * C152880) *
              C3495 +
          (((C15196 + C15195 + C15194) * C51243 +
            (C15197 + C15198 + C15199) * C152747) *
               C152457 * C152530 * C152920 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C152530 * C152924 -
           ((C17040 + C17041 + C17042) * C152747 +
            (C15199 + C15198 + C15197) * C51243) *
               C152457 * C152530 * C152906 +
           ((C17042 + C17041 + C17040) * C51243 +
            (C14813 * C1541 - C14814 * C1528 - C14813 * C1542 + C14810 * C1552 +
             C14815 * C8187 - C14816 * C8179 - C14815 * C8188 + C14811 * C8197 +
             C14817 * C8193 - C14818 * C8182 - C14817 * C8194 +
             C14812 * C8200) *
                C152747) *
               C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C4361 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152617) *
               C152571 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152617 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C4361) *
               C152578 +
           ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 +
             C7959 * C59417) *
                C152457 * C4361 -
            (C61026 * C59417 + C8950 * C59416 + C8234 * C59415 +
             C7577 * C59414) *
                C152457 * C152617) *
               C3839) *
              C152814 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152617 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C4361) *
               C152571 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C4361 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152617) *
               C152578 +
           ((C2132 * C59414 + C7579 * C59415 + C8740 * C59416 +
             (C134 * C8939 - C135 * C8936 - C134 * C8940 + C152711 * C8942) *
                 C59417) *
                C152457 * C152617 -
            (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
                C152457 * C4361) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C4361 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C152617) *
               C152571 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C152617 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C4361) *
               C152578 +
           (((C6615 * C51243 + C6616 * C152747) * C51245 +
             (C51484 + C51485) * C51246 + C51493 * C51247) *
                C4361 -
            ((C53463 + C53464) * C51247 + (C53465 + C53466) * C51246 +
             (C8234 * C152747 + C7577 * C51243) * C51245) *
                C152617) *
               C3839) *
              C152814 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C152617 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C4361) *
               C152571 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C4361 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C152617) *
               C152578 +
           (((C53466 + C53465) * C51245 + (C53464 + C53463) * C51246 +
             (C2130 * C51243 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C152747) *
                 C51247) *
                C152617 -
            ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
             (C51485 + C51484) * C51245) *
                C4361) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C51243 +
             (C65210 + C65211 + C65212) * C152747) *
                C152457 * C4361 -
            ((C66130 + C66131 + C66132) * C152747 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C51243) *
                C152457 * C152617) *
               C152571 +
           (((C66132 + C66131 + C66130) * C51243 +
             (C66790 + C66791 + C66792) * C152747) *
                C152457 * C152617 -
            ((C65213 + C65214 + C65215) * C152747 +
             (C65212 + C65211 + C65210) * C51243) *
                C152457 * C4361) *
               C152578 +
           (((C65215 + C65214 + C65213) * C51243 +
             (C66509 + C66510 + C66511) * C152747) *
                C152457 * C4361 -
            ((C67492 + C67493 + C67494) * C152747 +
             (C66792 + C66791 + C66790) * C51243) *
                C152457 * C152617) *
               C3839) *
              C152814 +
          ((((C15498 + C15497 + C15496) * C51243 +
             (C16264 + C16265 + C16266) * C152747) *
                C152457 * C152617 -
            ((C15194 + C15195 + C15196) * C152747 +
             (C14894 + C14893 + C14892) * C51243) *
                C152457 * C4361) *
               C152571 +
           (((C15196 + C15195 + C15194) * C51243 +
             (C15197 + C15198 + C15199) * C152747) *
                C152457 * C4361 -
            ((C17351 + C17352 + C17353) * C152747 +
             (C16266 + C16265 + C16264) * C51243) *
                C152457 * C152617) *
               C152578 +
           (((C17353 + C17352 + C17351) * C51243 +
             (C14813 * C2271 - C14814 * C2266 - C14813 * C2272 +
              C14810 * C2278 + C14815 * C8183 - C14816 * C8177 -
              C14815 * C8184 + C14811 * C8195 + C14817 * C10242 -
              C14818 * C10239 - C14817 * C10243 + C14812 * C10245) *
                 C152747) *
                C152457 * C152617 -
            ((C17040 + C17041 + C17042) * C152747 +
             (C15199 + C15198 + C15197) * C51243) *
                C152457 * C4361) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152613 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152620 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C5033) *
              C152571 +
          ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 + C8950 * C59417) *
               C152457 * C152620 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152613 -
           (C60561 * C59417 + C8236 * C59416 + C8233 * C59415 +
            C8232 * C59414) *
               C152457 * C5033) *
              C152578 +
          ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152613 -
           (C61026 * C59417 + C8950 * C59416 + C8234 * C59415 +
            C7577 * C59414) *
               C152457 * C152620 +
           (C8233 * C59414 + C8236 * C59415 + C60561 * C59416 +
            (C134 * C60551 - C135 * C60550 - C134 * C60552 + C152711 * C60553) *
                C59417) *
               C152457 * C5033) *
              C3839) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152613 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C152620 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C51243 +
             C8232 * C152747) *
                C51245 +
            (C51716 + C51717) * C51246 + C51725 * C51247) *
               C5033) *
              C152571 +
          (((C7578 * C51243 + C7577 * C152747) * C51245 +
            (C52410 + C52411) * C51246 + C52416 * C51247) *
               C152620 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152613 -
           ((C54509 + C54510) * C51247 + (C54511 + C54512) * C51246 +
            (C8233 * C152747 + C8232 * C51243) * C51245) *
               C5033) *
              C152578 +
          (((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152613 -
           ((C53463 + C53464) * C51247 + (C53465 + C53466) * C51246 +
            (C8234 * C152747 + C7577 * C51243) * C51245) *
               C152620 +
           ((C8233 * C51243 + C8236 * C152747) * C51245 +
            (C6861 * C51243 + C8235 * C152747) * C51246 +
            (C6862 * C51243 +
             (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                 C152747) *
                C51247) *
               C5033) *
              C3839) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152613 -
           ((C66130 + C66131 + C66132) * C152747 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C51243) *
               C152457 * C152620 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C51243 +
            (C66787 + C66788 + C66789) * C152747) *
               C152457 * C5033) *
              C152571 +
          (((C66132 + C66131 + C66130) * C51243 +
            (C66790 + C66791 + C66792) * C152747) *
               C152457 * C152620 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C152613 -
           ((C66793 + C66794 + C66795) * C152747 +
            (C66789 + C66788 + C66787) * C51243) *
               C152457 * C5033) *
              C152578 +
          (((C65215 + C65214 + C65213) * C51243 +
            (C66509 + C66510 + C66511) * C152747) *
               C152457 * C152613 -
           ((C67492 + C67493 + C67494) * C152747 +
            (C66792 + C66791 + C66790) * C51243) *
               C152457 * C152620 +
           ((C66795 + C66794 + C66793) * C51243 +
            (C14813 * C8185 - C14814 * C8178 - C14813 * C8186 + C14810 * C8196 +
             C14815 * C10240 - C14816 * C10238 - C14815 * C10241 +
             C14811 * C10244 + C14817 * C61401 - C14818 * C61400 -
             C14817 * C61402 + C14812 * C61403) *
                C152747) *
               C152457 * C5033) *
              C3839) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                      C51243 +
                  C6614 * C152747) *
                     C51245 +
                 (C51249 + C51250) * C51246 + C51259 * C51247) *
                    C4361 -
                (C51724 * C51247 + (C51714 + C51715) * C51246 +
                 (C7578 * C152747 +
                  (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                      C51243) *
                     C51245) *
                    C152617) *
                   C3355 +
               (((C7578 * C51243 + C7577 * C152747) * C51245 +
                 (C52410 + C52411) * C51246 + C52416 * C51247) *
                    C152617 -
                (C51492 * C51247 + (C51482 + C51483) * C51246 +
                 (C6615 * C152747 + C6614 * C51243) * C51245) *
                    C4361) *
                   C152575) *
                  C152914 +
              ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
                 C52117 * C51247) *
                    C152617 -
                (C51260 * C51247 + (C51252 + C51251) * C51246 +
                 (C51250 + C51249) * C51245) *
                    C4361) *
                   C3355 +
               (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
                 C51920 * C51247) *
                    C4361 -
                ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
                 (C52411 + C52410) * C51245) *
                    C152617) *
                   C152575) *
                  C152897 +
              (((C51259 * C51245 + (C51254 + C51253) * C51246 +
                 C51261 * C51247) *
                    C4361 -
                ((C52118 + C52119) * C51247 + (C51721 + C51720) * C51246 +
                 C51724 * C51245) *
                    C152617) *
                   C3355 +
               ((C52416 * C51245 + (C52415 + C52414) * C51246 +
                 (C1279 * C51243 + (C134 * C2108 - C135 * C2107 - C134 * C2109 +
                                    C152711 * C2110) *
                                       C152747) *
                     C51247) *
                    C152617 -
                ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
                 C51492 * C51245) *
                    C4361) *
                   C152575) *
                  C152864) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                     C51243 +
                 C6614 * C152747) *
                    C51245 +
                (C51249 + C51250) * C51246 + C51259 * C51247) *
                   C4361 -
               (C51724 * C51247 + (C51714 + C51715) * C51246 +
                (C7578 * C152747 +
                 (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                     C51243) *
                    C51245) *
                   C152617) *
                  C152924 +
              (((C7578 * C51243 + C7577 * C152747) * C51245 +
                (C52410 + C52411) * C51246 + C52416 * C51247) *
                   C152617 -
               (C51492 * C51247 + (C51482 + C51483) * C51246 +
                (C6615 * C152747 + C6614 * C51243) * C51245) *
                   C4361) *
                  C152920 +
              (((C6615 * C51243 + C6616 * C152747) * C51245 +
                (C51484 + C51485) * C51246 + C51493 * C51247) *
                   C4361 -
               ((C53463 + C53464) * C51247 + (C53465 + C53466) * C51246 +
                (C8234 * C152747 + C7577 * C51243) * C51245) *
                   C152617) *
                  C152906 +
              (((C8234 * C51243 + C8950 * C152747) * C51245 +
                (C7579 * C51243 + C8740 * C152747) * C51246 +
                (C7580 * C51243 + (C134 * C8728 - C135 * C8727 - C134 * C8729 +
                                   C152711 * C8730) *
                                      C152747) *
                    C51247) *
                   C152617 -
               ((C53169 + C53170) * C51247 + (C53171 + C53172) * C51246 +
                (C7957 * C152747 + C6616 * C51243) * C51245) *
                   C4361) *
                  C152880) *
             C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152925 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C152922 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C51243 +
             C8232 * C152747) *
                C51245 +
            (C51716 + C51717) * C51246 + C51725 * C51247) *
               C152909 -
           ((C54707 + C54708) * C51247 + (C54709 + C54710) * C51246 +
            (C10260 * C152747 +
             (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                 C51243) *
                C51245) *
               C152886) *
              C3355 +
          (((C7578 * C51243 + C7577 * C152747) * C51245 +
            (C52410 + C52411) * C51246 + C52416 * C51247) *
               C152922 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152925 -
           ((C54509 + C54510) * C51247 + (C54511 + C54512) * C51246 +
            (C8233 * C152747 + C8232 * C51243) * C51245) *
               C152909 +
           ((C10260 * C51243 + C10259 * C152747) * C51245 +
            (C10042 * C51243 + C10041 * C152747) * C51246 +
            (C26880 * C51243 + (C134 * C10024 - C135 * C10023 - C134 * C10025 +
                                C152711 * C10026) *
                                   C152747) *
                C51247) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C4361 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152617) *
               C3355 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152617 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C4361) *
               C152575) *
              C152914 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152617 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C4361) *
               C3355 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C4361 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152617) *
               C152575) *
              C152897 +
          (((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
                C152457 * C4361 -
            (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
                C152457 * C152617) *
               C3355 +
           ((C1277 * C59414 + C2131 * C59415 + C7580 * C59416 +
             (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                 C59417) *
                C152457 * C152617 -
            (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
                C152457 * C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C4361 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152617) *
              C152924 +
          ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 + C8950 * C59417) *
               C152457 * C152617 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C4361) *
              C152920 +
          ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C4361 -
           (C61026 * C59417 + C8950 * C59416 + C8234 * C59415 +
            C7577 * C59414) *
               C152457 * C152617) *
              C152906 +
          ((C8234 * C59414 + C8950 * C59415 + C61026 * C59416 +
            (C134 * C61016 - C135 * C61015 - C134 * C61017 + C152711 * C61018) *
                C59417) *
               C152457 * C152617 -
           (C60404 * C59417 + C7959 * C59416 + C7957 * C59415 +
            C6616 * C59414) *
               C152457 * C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152925 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152922 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C152909 -
           (C61869 * C59417 + C10259 * C59416 + C10260 * C59415 +
            (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                C59414) *
               C152457 * C152886) *
              C3355 +
          ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 + C8950 * C59417) *
               C152457 * C152922 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152925 -
           (C60561 * C59417 + C8236 * C59416 + C8233 * C59415 +
            C8232 * C59414) *
               C152457 * C152909 +
           (C10260 * C59414 + C10259 * C59415 + C61869 * C59416 +
            (C134 * C61859 - C135 * C61858 - C134 * C61860 + C152711 * C61861) *
                C59417) *
               C152457 * C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C51243 +
             (C65210 + C65211 + C65212) * C152747) *
                C152457 * C4361 -
            ((C66130 + C66131 + C66132) * C152747 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C51243) *
                C152457 * C152617) *
               C3355 +
           (((C66132 + C66131 + C66130) * C51243 +
             (C66790 + C66791 + C66792) * C152747) *
                C152457 * C152617 -
            ((C65213 + C65214 + C65215) * C152747 +
             (C65212 + C65211 + C65210) * C51243) *
                C152457 * C4361) *
               C152575) *
              C152914 +
          ((((C15498 + C15497 + C15496) * C51243 +
             (C16264 + C16265 + C16266) * C152747) *
                C152457 * C152617 -
            ((C15194 + C15195 + C15196) * C152747 +
             (C14894 + C14893 + C14892) * C51243) *
                C152457 * C4361) *
               C3355 +
           (((C15196 + C15195 + C15194) * C51243 +
             (C15197 + C15198 + C15199) * C152747) *
                C152457 * C4361 -
            ((C17351 + C17352 + C17353) * C152747 +
             (C16266 + C16265 + C16264) * C51243) *
                C152457 * C152617) *
               C152575) *
              C152897 +
          ((((C14897 + C14896 + C14895) * C51243 +
             (C15200 + C15201 + C15202) * C152747) *
                C152457 * C4361 -
            ((C16267 + C16268 + C16269) * C152747 +
             (C15504 + C15503 + C15502) * C51243) *
                C152457 * C152617) *
               C3355 +
           (((C16269 + C16268 + C16267) * C51243 +
             (C14813 * C1723 - C14814 * C1706 - C14813 * C1724 +
              C14810 * C1742 + C14815 * C1733 - C14816 * C1711 -
              C14815 * C1734 + C14811 * C1747 + C14817 * C10024 -
              C14818 * C10023 - C14817 * C10025 + C14812 * C10026) *
                 C152747) *
                C152457 * C152617 -
            ((C15203 + C15204 + C15205) * C152747 +
             (C15202 + C15201 + C15200) * C51243) *
                C152457 * C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C4361 -
           ((C66130 + C66131 + C66132) * C152747 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C51243) *
               C152457 * C152617) *
              C152924 +
          (((C66132 + C66131 + C66130) * C51243 +
            (C66790 + C66791 + C66792) * C152747) *
               C152457 * C152617 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C4361) *
              C152920 +
          (((C65215 + C65214 + C65213) * C51243 +
            (C66509 + C66510 + C66511) * C152747) *
               C152457 * C4361 -
           ((C67492 + C67493 + C67494) * C152747 +
            (C66792 + C66791 + C66790) * C51243) *
               C152457 * C152617) *
              C152906 +
          (((C67494 + C67493 + C67492) * C51243 +
            (C14813 * C8189 - C14814 * C8180 - C14813 * C8190 + C14810 * C8198 +
             C14815 * C8191 - C14816 * C8181 - C14815 * C8192 + C14811 * C8199 +
             C14817 * C61859 - C14818 * C61858 - C14817 * C61860 +
             C14812 * C61861) *
                C152747) *
               C152457 * C152617 -
           ((C66512 + C66513 + C66514) * C152747 +
            (C66511 + C66510 + C66509) * C51243) *
               C152457 * C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152925 -
           ((C66130 + C66131 + C66132) * C152747 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C51243) *
               C152457 * C152922 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C51243 +
            (C66787 + C66788 + C66789) * C152747) *
               C152457 * C152909 -
           ((C68757 + C68758 + C68759) * C152747 +
            (C14817 * C18111 - C14818 * C18106 - C14817 * C18112 +
             C14812 * C18118 + C14815 * C2679 - C14816 * C2667 -
             C14815 * C2680 + C14811 * C2691 + C14813 * C2677 - C14814 * C2666 -
             C14813 * C2678 + C14810 * C2690) *
                C51243) *
               C152457 * C152886) *
              C3355 +
          (((C66132 + C66131 + C66130) * C51243 +
            (C66790 + C66791 + C66792) * C152747) *
               C152457 * C152922 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C152925 -
           ((C66793 + C66794 + C66795) * C152747 +
            (C66789 + C66788 + C66787) * C51243) *
               C152457 * C152909 +
           ((C68759 + C68758 + C68757) * C51243 +
            (C14813 * C9516 - C14814 * C9509 - C14813 * C9517 + C14810 * C9527 +
             C14815 * C9520 - C14816 * C9511 - C14815 * C9521 + C14811 * C9529 +
             C14817 * C68735 - C14818 * C68734 - C14817 * C68736 +
             C14812 * C68737) *
                C152747) *
               C152457 * C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C152613 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152620 +
            ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C59414 +
             C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
                C152457 * C5033) *
               C3355 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152620 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C152613 -
            (C60561 * C59417 + C8236 * C59416 + C8233 * C59415 +
             C8232 * C59414) *
                C152457 * C5033) *
               C152575) *
              C152814 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152620 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C152613 -
            (C8235 * C59417 + C6861 * C59416 + C2914 * C59415 + C729 * C59414) *
                C152457 * C5033) *
               C3355 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C152613 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152620 +
            (C2914 * C59414 + C6861 * C59415 + C8235 * C59416 +
             (C134 * C8193 - C135 * C8182 - C134 * C8194 + C152711 * C8200) *
                 C59417) *
                C152457 * C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C152613 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C152620 +
            (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                  C51243 +
              C8232 * C152747) *
                 C51245 +
             (C51716 + C51717) * C51246 + C51725 * C51247) *
                C5033) *
               C3355 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C152620 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C152613 -
            ((C54509 + C54510) * C51247 + (C54511 + C54512) * C51246 +
             (C8233 * C152747 + C8232 * C51243) * C51245) *
                C5033) *
               C152575) *
              C152814 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C152620 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C152613 -
            ((C51722 + C51723) * C51247 + (C51719 + C51718) * C51246 +
             (C51717 + C51716) * C51245) *
                C5033) *
               C3355 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C152613 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C152620 +
            ((C54512 + C54511) * C51245 + (C54510 + C54509) * C51246 +
             (C2912 * C51243 +
              (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                  C152747) *
                 C51247) *
                C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C51243 +
             (C65210 + C65211 + C65212) * C152747) *
                C152457 * C152613 -
            ((C66130 + C66131 + C66132) * C152747 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C51243) *
                C152457 * C152620 +
            ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
              C14815 * C2677 - C14816 * C2666 - C14815 * C2678 +
              C14811 * C2690 + C14817 * C2679 - C14818 * C2667 -
              C14817 * C2680 + C14812 * C2691) *
                 C51243 +
             (C66787 + C66788 + C66789) * C152747) *
                C152457 * C5033) *
               C3355 +
           (((C66132 + C66131 + C66130) * C51243 +
             (C66790 + C66791 + C66792) * C152747) *
                C152457 * C152620 -
            ((C65213 + C65214 + C65215) * C152747 +
             (C65212 + C65211 + C65210) * C51243) *
                C152457 * C152613 -
            ((C66793 + C66794 + C66795) * C152747 +
             (C66789 + C66788 + C66787) * C51243) *
                C152457 * C5033) *
               C152575) *
              C152814 +
          ((((C15498 + C15497 + C15496) * C51243 +
             (C16264 + C16265 + C16266) * C152747) *
                C152457 * C152620 -
            ((C15194 + C15195 + C15196) * C152747 +
             (C14894 + C14893 + C14892) * C51243) *
                C152457 * C152613 -
            ((C18434 + C18435 + C18436) * C152747 +
             (C15501 + C15500 + C15499) * C51243) *
                C152457 * C5033) *
               C3355 +
           (((C15196 + C15195 + C15194) * C51243 +
             (C15197 + C15198 + C15199) * C152747) *
                C152457 * C152613 -
            ((C17351 + C17352 + C17353) * C152747 +
             (C16266 + C16265 + C16264) * C51243) *
                C152457 * C152620 +
            ((C18436 + C18435 + C18434) * C51243 +
             (C14813 * C1731 - C14814 * C1710 - C14813 * C1732 +
              C14810 * C1746 + C14815 * C9514 - C14816 * C9508 -
              C14815 * C9515 + C14811 * C9526 + C14817 * C9524 -
              C14818 * C9513 - C14817 * C9525 + C14812 * C9531) *
                 C152747) *
                C152457 * C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C4361 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C152617) *
              C152924 +
          (((C7578 * C51243 + C7577 * C152747) * C51245 +
            (C52410 + C52411) * C51246 + C52416 * C51247) *
               C152617 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C4361) *
              C152920 +
          (((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C4361 -
           ((C53463 + C53464) * C51247 + (C53465 + C53466) * C51246 +
            (C8234 * C152747 + C7577 * C51243) * C51245) *
               C152617) *
              C152906 +
          (((C8234 * C51243 + C8950 * C152747) * C51245 +
            (C7579 * C51243 + C8740 * C152747) * C51246 +
            (C7580 * C51243 +
             (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                 C152747) *
                C51247) *
               C152617 -
           ((C53169 + C53170) * C51247 + (C53171 + C53172) * C51246 +
            (C7957 * C152747 + C6616 * C51243) * C51245) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C4361 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C152617) *
               C3355 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C152617 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C4361) *
               C152575) *
              C152914 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C152617 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C4361) *
               C3355 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C4361 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C152617) *
               C152575) *
              C152897 +
          (((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
                C4361 -
            ((C52118 + C52119) * C51247 + (C51721 + C51720) * C51246 +
             C51724 * C51245) *
                C152617) *
               C3355 +
           ((C52416 * C51245 + (C52415 + C52414) * C51246 +
             (C1279 * C51243 +
              (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                  C152747) *
                 C51247) *
                C152617 -
            ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
             C51492 * C51245) *
                C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C4361 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152617) *
               C3355 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152617 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C4361) *
               C152575) *
              C152914 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152617 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C4361) *
               C3355 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C4361 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152617) *
               C152575) *
              C152897 +
          (((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
                C152457 * C4361 -
            (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
                C152457 * C152617) *
               C3355 +
           ((C1277 * C59414 + C2131 * C59415 + C7580 * C59416 +
             (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                 C59417) *
                C152457 * C152617 -
            (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
                C152457 * C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C4361 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152617) *
              C152924 +
          ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 + C8950 * C59417) *
               C152457 * C152617 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C4361) *
              C152920 +
          ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C4361 -
           (C61026 * C59417 + C8950 * C59416 + C8234 * C59415 +
            C7577 * C59414) *
               C152457 * C152617) *
              C152906 +
          ((C8234 * C59414 + C8950 * C59415 + C61026 * C59416 +
            (C134 * C61016 - C135 * C61015 - C134 * C61017 + C152711 * C61018) *
                C59417) *
               C152457 * C152617 -
           (C60404 * C59417 + C7959 * C59416 + C7957 * C59415 +
            C6616 * C59414) *
               C152457 * C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C51243 +
             (C65210 + C65211 + C65212) * C152747) *
                C152457 * C4361 -
            ((C66130 + C66131 + C66132) * C152747 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C51243) *
                C152457 * C152617) *
               C3355 +
           (((C66132 + C66131 + C66130) * C51243 +
             (C66790 + C66791 + C66792) * C152747) *
                C152457 * C152617 -
            ((C65213 + C65214 + C65215) * C152747 +
             (C65212 + C65211 + C65210) * C51243) *
                C152457 * C4361) *
               C152575) *
              C152914 +
          ((((C15498 + C15497 + C15496) * C51243 +
             (C16264 + C16265 + C16266) * C152747) *
                C152457 * C152617 -
            ((C15194 + C15195 + C15196) * C152747 +
             (C14894 + C14893 + C14892) * C51243) *
                C152457 * C4361) *
               C3355 +
           (((C15196 + C15195 + C15194) * C51243 +
             (C15197 + C15198 + C15199) * C152747) *
                C152457 * C4361 -
            ((C17351 + C17352 + C17353) * C152747 +
             (C16266 + C16265 + C16264) * C51243) *
                C152457 * C152617) *
               C152575) *
              C152897 +
          ((((C14897 + C14896 + C14895) * C51243 +
             (C15200 + C15201 + C15202) * C152747) *
                C152457 * C4361 -
            ((C16267 + C16268 + C16269) * C152747 +
             (C15504 + C15503 + C15502) * C51243) *
                C152457 * C152617) *
               C3355 +
           (((C16269 + C16268 + C16267) * C51243 +
             (C14813 * C1723 - C14814 * C1706 - C14813 * C1724 +
              C14810 * C1742 + C14815 * C1733 - C14816 * C1711 -
              C14815 * C1734 + C14811 * C1747 + C14817 * C10024 -
              C14818 * C10023 - C14817 * C10025 + C14812 * C10026) *
                 C152747) *
                C152457 * C152617 -
            ((C15203 + C15204 + C15205) * C152747 +
             (C15202 + C15201 + C15200) * C51243) *
                C152457 * C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C4361 -
           ((C66130 + C66131 + C66132) * C152747 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C51243) *
               C152457 * C152617) *
              C152924 +
          (((C66132 + C66131 + C66130) * C51243 +
            (C66790 + C66791 + C66792) * C152747) *
               C152457 * C152617 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C4361) *
              C152920 +
          (((C65215 + C65214 + C65213) * C51243 +
            (C66509 + C66510 + C66511) * C152747) *
               C152457 * C4361 -
           ((C67492 + C67493 + C67494) * C152747 +
            (C66792 + C66791 + C66790) * C51243) *
               C152457 * C152617) *
              C152906 +
          (((C67494 + C67493 + C67492) * C51243 +
            (C14813 * C8189 - C14814 * C8180 - C14813 * C8190 + C14810 * C8198 +
             C14815 * C8191 - C14816 * C8181 - C14815 * C8192 + C14811 * C8199 +
             C14817 * C61859 - C14818 * C61858 - C14817 * C61860 +
             C14812 * C61861) *
                C152747) *
               C152457 * C152617 -
           ((C66512 + C66513 + C66514) * C152747 +
            (C66511 + C66510 + C66509) * C51243) *
               C152457 * C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                     C51243 +
                 C6614 * C152747) *
                    C51245 +
                (C51249 + C51250) * C51246 + C51259 * C51247) *
                   C152530 * C152828 -
               (C51492 * C51247 + (C51482 + C51483) * C51246 +
                (C6615 * C152747 + C6614 * C51243) * C51245) *
                   C152530 * C152575) *
                  C873 +
              (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
                C51920 * C51247) *
                   C152530 * C152575 -
               (C51260 * C51247 + (C51252 + C51251) * C51246 +
                (C51250 + C51249) * C51245) *
                   C152530 * C152828) *
                  C874 +
              ((C51259 * C51245 + (C51254 + C51253) * C51246 +
                C51261 * C51247) *
                   C152530 * C152828 -
               ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
                C51492 * C51245) *
                   C152530 * C152575) *
                  C875 +
              ((C51920 * C51245 + (C51922 + C51921) * C51246 +
                (C888 * C51243 +
                 (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                     C152747) *
                    C51247) *
                   C152530 * C152575 -
               ((C51257 + C51258) * C51247 + (C51256 + C51255) * C51246 +
                C51260 * C51245) *
                   C152530 * C152828) *
                  C152874) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                     C51243 +
                 C6614 * C152747) *
                    C51245 +
                (C51249 + C51250) * C51246 + C51259 * C51247) *
                   C152530 * C1879 -
               (C51492 * C51247 + (C51482 + C51483) * C51246 +
                (C6615 * C152747 + C6614 * C51243) * C51245) *
                   C152530 * C1880 +
               ((C6615 * C51243 + C6616 * C152747) * C51245 +
                (C51484 + C51485) * C51246 + C51493 * C51247) *
                   C152530 * C1881 -
               ((C53169 + C53170) * C51247 + (C53171 + C53172) * C51246 +
                (C7957 * C152747 + C6616 * C51243) * C51245) *
                   C152530 * C152880) *
                  C152814 +
              (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
                C51920 * C51247) *
                   C152530 * C1880 -
               (C51260 * C51247 + (C51252 + C51251) * C51246 +
                (C51250 + C51249) * C51245) *
                   C152530 * C1879 -
               ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
                (C51485 + C51484) * C51245) *
                   C152530 * C1881 +
               ((C53172 + C53171) * C51245 + (C53170 + C53169) * C51246 +
                (C1908 * C51243 + (C134 * C1545 - C135 * C1530 - C134 * C1546 +
                                   C152711 * C1554) *
                                      C152747) *
                    C51247) *
                   C152530 * C152880) *
                  C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C2427 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C2428 +
            (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                  C51243 +
              C8232 * C152747) *
                 C51245 +
             (C51716 + C51717) * C51246 + C51725 * C51247) *
                C152873) *
               C152828 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C2428 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C2427 -
            ((C54509 + C54510) * C51247 + (C54511 + C54512) * C51246 +
             (C8233 * C152747 + C8232 * C51243) * C51245) *
                C152873) *
               C152575) *
              C152814 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C2428 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C2427 -
            ((C51722 + C51723) * C51247 + (C51719 + C51718) * C51246 +
             (C51717 + C51716) * C51245) *
                C152873) *
               C152828 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C2427 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C2428 +
            ((C54512 + C54511) * C51245 + (C54510 + C54509) * C51246 +
             (C2912 * C51243 +
              (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                  C152747) *
                 C51247) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C152828 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C152575) *
              C873 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C152575 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C152828) *
              C874 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152530 * C152828 -
           (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
               C152457 * C152530 * C152575) *
              C875 +
          ((C465 * C59414 + C470 * C59415 + C1908 * C59416 +
            (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                C59417) *
               C152457 * C152530 * C152575 -
           (C1908 * C59417 + C470 * C59416 + C465 * C59415 + C207 * C59414) *
               C152457 * C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C1879 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C1880 +
           (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152530 * C1881 -
           (C60404 * C59417 + C7959 * C59416 + C7957 * C59415 +
            C6616 * C59414) *
               C152457 * C152530 * C152880) *
              C152814 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C1880 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C1879 -
           (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
               C152457 * C152530 * C1881 +
           (C1910 * C59414 + C6617 * C59415 + C7958 * C59416 +
            (C134 * C7932 - C135 * C7925 - C134 * C7933 + C152711 * C7937) *
                C59417) *
               C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C2427 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C2428 +
            ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C59414 +
             C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
                C152457 * C152873) *
               C152828 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C2428 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C2427 -
            (C60561 * C59417 + C8236 * C59416 + C8233 * C59415 +
             C8232 * C59414) *
                C152457 * C152873) *
               C152575) *
              C152814 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C2428 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C2427 -
            (C8235 * C59417 + C6861 * C59416 + C2914 * C59415 + C729 * C59414) *
                C152457 * C152873) *
               C152828 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C2427 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C2428 +
            (C2914 * C59414 + C6861 * C59415 + C8235 * C59416 +
             (C134 * C8193 - C135 * C8182 - C134 * C8194 + C152711 * C8200) *
                 C59417) *
                C152457 * C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152530 * C152828 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C152530 * C152575) *
              C873 +
          (((C15196 + C15195 + C15194) * C51243 +
            (C15197 + C15198 + C15199) * C152747) *
               C152457 * C152530 * C152575 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C152530 * C152828) *
              C874 +
          (((C14897 + C14896 + C14895) * C51243 +
            (C15200 + C15201 + C15202) * C152747) *
               C152457 * C152530 * C152828 -
           ((C15203 + C15204 + C15205) * C152747 +
            (C15202 + C15201 + C15200) * C51243) *
               C152457 * C152530 * C152575) *
              C875 +
          (((C15722 + C15721 + C15720) * C51243 +
            (C14813 * C394 - C14814 * C375 - C14813 * C395 + C14810 * C411 +
             C14815 * C1721 - C14816 * C1705 - C14815 * C1722 + C14811 * C1741 +
             C14817 * C1735 - C14818 * C1712 - C14817 * C1736 +
             C14812 * C1748) *
                C152747) *
               C152457 * C152530 * C152575 -
           ((C15720 + C15721 + C15722) * C152747 +
            (C14900 + C14899 + C14898) * C51243) *
               C152457 * C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152530 * C1879 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C152530 * C1880 +
           ((C65215 + C65214 + C65213) * C51243 +
            (C66509 + C66510 + C66511) * C152747) *
               C152457 * C152530 * C1881 -
           ((C66512 + C66513 + C66514) * C152747 +
            (C66511 + C66510 + C66509) * C51243) *
               C152457 * C152530 * C152880) *
              C152814 +
          (((C15196 + C15195 + C15194) * C51243 +
            (C15197 + C15198 + C15199) * C152747) *
               C152457 * C152530 * C1880 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C152530 * C1879 -
           ((C17040 + C17041 + C17042) * C152747 +
            (C15199 + C15198 + C15197) * C51243) *
               C152457 * C152530 * C1881 +
           ((C17042 + C17041 + C17040) * C51243 +
            (C14813 * C1541 - C14814 * C1528 - C14813 * C1542 + C14810 * C1552 +
             C14815 * C8187 - C14816 * C8179 - C14815 * C8188 + C14811 * C8197 +
             C14817 * C8193 - C14818 * C8182 - C14817 * C8194 +
             C14812 * C8200) *
                C152747) *
               C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C51243 +
             (C65210 + C65211 + C65212) * C152747) *
                C152457 * C2427 -
            ((C66130 + C66131 + C66132) * C152747 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C51243) *
                C152457 * C2428 +
            ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
              C14815 * C2677 - C14816 * C2666 - C14815 * C2678 +
              C14811 * C2690 + C14817 * C2679 - C14818 * C2667 -
              C14817 * C2680 + C14812 * C2691) *
                 C51243 +
             (C66787 + C66788 + C66789) * C152747) *
                C152457 * C152873) *
               C152828 +
           (((C66132 + C66131 + C66130) * C51243 +
             (C66790 + C66791 + C66792) * C152747) *
                C152457 * C2428 -
            ((C65213 + C65214 + C65215) * C152747 +
             (C65212 + C65211 + C65210) * C51243) *
                C152457 * C2427 -
            ((C66793 + C66794 + C66795) * C152747 +
             (C66789 + C66788 + C66787) * C51243) *
                C152457 * C152873) *
               C152575) *
              C152814 +
          ((((C15498 + C15497 + C15496) * C51243 +
             (C16264 + C16265 + C16266) * C152747) *
                C152457 * C2428 -
            ((C15194 + C15195 + C15196) * C152747 +
             (C14894 + C14893 + C14892) * C51243) *
                C152457 * C2427 -
            ((C18434 + C18435 + C18436) * C152747 +
             (C15501 + C15500 + C15499) * C51243) *
                C152457 * C152873) *
               C152828 +
           (((C15196 + C15195 + C15194) * C51243 +
             (C15197 + C15198 + C15199) * C152747) *
                C152457 * C2427 -
            ((C17351 + C17352 + C17353) * C152747 +
             (C16266 + C16265 + C16264) * C51243) *
                C152457 * C2428 +
            ((C18436 + C18435 + C18434) * C51243 +
             (C14813 * C1731 - C14814 * C1710 - C14813 * C1732 +
              C14810 * C1746 + C14815 * C9514 - C14816 * C9508 -
              C14815 * C9515 + C14811 * C9526 + C14817 * C9524 -
              C14818 * C9513 - C14817 * C9525 + C14812 * C9531) *
                 C152747) *
                C152457 * C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                      C51243 +
                  C6614 * C152747) *
                     C51245 +
                 (C51249 + C51250) * C51246 + C51259 * C51247) *
                    C152829 -
                (C51724 * C51247 + (C51714 + C51715) * C51246 +
                 (C7578 * C152747 +
                  (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                      C51243) *
                     C51245) *
                    C152617) *
                   C152828 +
               (((C7578 * C51243 + C7577 * C152747) * C51245 +
                 (C52410 + C52411) * C51246 + C52416 * C51247) *
                    C152617 -
                (C51492 * C51247 + (C51482 + C51483) * C51246 +
                 (C6615 * C152747 + C6614 * C51243) * C51245) *
                    C152829) *
                   C152575) *
                  C365 +
              ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
                 C52117 * C51247) *
                    C152617 -
                (C51260 * C51247 + (C51252 + C51251) * C51246 +
                 (C51250 + C51249) * C51245) *
                    C152829) *
                   C152828 +
               (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
                 C51920 * C51247) *
                    C152829 -
                ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
                 (C52411 + C52410) * C51245) *
                    C152617) *
                   C152575) *
                  C366 +
              (((C51259 * C51245 + (C51254 + C51253) * C51246 +
                 C51261 * C51247) *
                    C152829 -
                ((C52118 + C52119) * C51247 + (C51721 + C51720) * C51246 +
                 C51724 * C51245) *
                    C152617) *
                   C152828 +
               ((C52416 * C51245 + (C52415 + C52414) * C51246 +
                 (C1279 * C51243 + (C134 * C2108 - C135 * C2107 - C134 * C2109 +
                                    C152711 * C2110) *
                                       C152747) *
                     C51247) *
                    C152617 -
                ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
                 C51492 * C51245) *
                    C152829) *
                   C152575) *
                  C152864) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                     C51243 +
                 C6614 * C152747) *
                    C51245 +
                (C51249 + C51250) * C51246 + C51259 * C51247) *
                   C152829 -
               (C51724 * C51247 + (C51714 + C51715) * C51246 +
                (C7578 * C152747 +
                 (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                     C51243) *
                    C51245) *
                   C152617) *
                  C1879 +
              (((C7578 * C51243 + C7577 * C152747) * C51245 +
                (C52410 + C52411) * C51246 + C52416 * C51247) *
                   C152617 -
               (C51492 * C51247 + (C51482 + C51483) * C51246 +
                (C6615 * C152747 + C6614 * C51243) * C51245) *
                   C152829) *
                  C1880 +
              (((C6615 * C51243 + C6616 * C152747) * C51245 +
                (C51484 + C51485) * C51246 + C51493 * C51247) *
                   C152829 -
               ((C53463 + C53464) * C51247 + (C53465 + C53466) * C51246 +
                (C8234 * C152747 + C7577 * C51243) * C51245) *
                   C152617) *
                  C1881 +
              (((C8234 * C51243 + C8950 * C152747) * C51245 +
                (C7579 * C51243 + C8740 * C152747) * C51246 +
                (C7580 * C51243 + (C134 * C8728 - C135 * C8727 - C134 * C8729 +
                                   C152711 * C8730) *
                                      C152747) *
                    C51247) *
                   C152617 -
               ((C53169 + C53170) * C51247 + (C53171 + C53172) * C51246 +
                (C7957 * C152747 + C6616 * C51243) * C51245) *
                   C152829) *
                  C152880) *
             C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C3047 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C3048 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C51243 +
             C8232 * C152747) *
                C51245 +
            (C51716 + C51717) * C51246 + C51725 * C51247) *
               C3049 -
           ((C54707 + C54708) * C51247 + (C54709 + C54710) * C51246 +
            (C10260 * C152747 +
             (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                 C51243) *
                C51245) *
               C152886) *
              C152828 +
          (((C7578 * C51243 + C7577 * C152747) * C51245 +
            (C52410 + C52411) * C51246 + C52416 * C51247) *
               C3048 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C3047 -
           ((C54509 + C54510) * C51247 + (C54511 + C54512) * C51246 +
            (C8233 * C152747 + C8232 * C51243) * C51245) *
               C3049 +
           ((C10260 * C51243 + C10259 * C152747) * C51245 +
            (C10042 * C51243 + C10041 * C152747) * C51246 +
            (C26880 * C51243 + (C134 * C10024 - C135 * C10023 - C134 * C10025 +
                                C152711 * C10026) *
                                   C152747) *
                C51247) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C152829 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152617) *
               C152828 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152617 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C152829) *
               C152575) *
              C365 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152617 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C152829) *
               C152828 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C152829 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152617) *
               C152575) *
              C366 +
          (((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
                C152457 * C152829 -
            (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
                C152457 * C152617) *
               C152828 +
           ((C1277 * C59414 + C2131 * C59415 + C7580 * C59416 +
             (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                 C59417) *
                C152457 * C152617 -
            (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
                C152457 * C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152829 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152617) *
              C1879 +
          ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 + C8950 * C59417) *
               C152457 * C152617 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152829) *
              C1880 +
          ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152829 -
           (C61026 * C59417 + C8950 * C59416 + C8234 * C59415 +
            C7577 * C59414) *
               C152457 * C152617) *
              C1881 +
          ((C8234 * C59414 + C8950 * C59415 + C61026 * C59416 +
            (C134 * C61016 - C135 * C61015 - C134 * C61017 + C152711 * C61018) *
                C59417) *
               C152457 * C152617 -
           (C60404 * C59417 + C7959 * C59416 + C7957 * C59415 +
            C6616 * C59414) *
               C152457 * C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C3047 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C3048 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C3049 -
           (C61869 * C59417 + C10259 * C59416 + C10260 * C59415 +
            (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                C59414) *
               C152457 * C152886) *
              C152828 +
          ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 + C8950 * C59417) *
               C152457 * C3048 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C3047 -
           (C60561 * C59417 + C8236 * C59416 + C8233 * C59415 +
            C8232 * C59414) *
               C152457 * C3049 +
           (C10260 * C59414 + C10259 * C59415 + C61869 * C59416 +
            (C134 * C61859 - C135 * C61858 - C134 * C61860 + C152711 * C61861) *
                C59417) *
               C152457 * C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C51243 +
             (C65210 + C65211 + C65212) * C152747) *
                C152457 * C152829 -
            ((C66130 + C66131 + C66132) * C152747 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C51243) *
                C152457 * C152617) *
               C152828 +
           (((C66132 + C66131 + C66130) * C51243 +
             (C14813 * C1727 - C14814 * C1708 - C14813 * C1728 +
              C14810 * C1744 + C14815 * C1729 - C14816 * C1709 -
              C14815 * C1730 + C14811 * C1745 + C14817 * C9516 -
              C14818 * C9509 - C14817 * C9517 + C14812 * C9527) *
                 C152747) *
                C152457 * C152617 -
            ((C65213 + C65214 + C65215) * C152747 +
             (C65212 + C65211 + C65210) * C51243) *
                C152457 * C152829) *
               C152575) *
              C365 +
          ((((C15498 + C15497 + C15496) * C51243 +
             (C16264 + C16265 + C16266) * C152747) *
                C152457 * C152617 -
            ((C15194 + C15195 + C15196) * C152747 +
             (C14894 + C14893 + C14892) * C51243) *
                C152457 * C152829) *
               C152828 +
           (((C15196 + C15195 + C15194) * C51243 +
             (C15197 + C15198 + C15199) * C152747) *
                C152457 * C152829 -
            ((C17351 + C17352 + C17353) * C152747 +
             (C16266 + C16265 + C16264) * C51243) *
                C152457 * C152617) *
               C152575) *
              C366 +
          ((((C14897 + C14896 + C14895) * C51243 +
             (C15200 + C15201 + C15202) * C152747) *
                C152457 * C152829 -
            ((C16267 + C16268 + C16269) * C152747 +
             (C15504 + C15503 + C15502) * C51243) *
                C152457 * C152617) *
               C152828 +
           (((C16269 + C16268 + C16267) * C51243 +
             (C14813 * C1723 - C14814 * C1706 - C14813 * C1724 +
              C14810 * C1742 + C14815 * C1733 - C14816 * C1711 -
              C14815 * C1734 + C14811 * C1747 + C14817 * C10024 -
              C14818 * C10023 - C14817 * C10025 + C14812 * C10026) *
                 C152747) *
                C152457 * C152617 -
            ((C15203 + C15204 + C15205) * C152747 +
             (C15202 + C15201 + C15200) * C51243) *
                C152457 * C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152829 -
           ((C66130 + C66131 + C66132) * C152747 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C51243) *
               C152457 * C152617) *
              C1879 +
          (((C66132 + C66131 + C66130) * C51243 +
            (C66790 + C66791 + C66792) * C152747) *
               C152457 * C152617 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C152829) *
              C1880 +
          (((C65215 + C65214 + C65213) * C51243 +
            (C66509 + C66510 + C66511) * C152747) *
               C152457 * C152829 -
           ((C67492 + C67493 + C67494) * C152747 +
            (C66792 + C66791 + C66790) * C51243) *
               C152457 * C152617) *
              C1881 +
          (((C67494 + C67493 + C67492) * C51243 +
            (C14813 * C8189 - C14814 * C8180 - C14813 * C8190 + C14810 * C8198 +
             C14815 * C8191 - C14816 * C8181 - C14815 * C8192 + C14811 * C8199 +
             C14817 * C61859 - C14818 * C61858 - C14817 * C61860 +
             C14812 * C61861) *
                C152747) *
               C152457 * C152617 -
           ((C66512 + C66513 + C66514) * C152747 +
            (C66511 + C66510 + C66509) * C51243) *
               C152457 * C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C3047 -
           ((C66130 + C66131 + C66132) * C152747 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C51243) *
               C152457 * C3048 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C51243 +
            (C66787 + C66788 + C66789) * C152747) *
               C152457 * C3049 -
           ((C68757 + C68758 + C68759) * C152747 +
            (C14817 * C18111 - C14818 * C18106 - C14817 * C18112 +
             C14812 * C18118 + C14815 * C2679 - C14816 * C2667 -
             C14815 * C2680 + C14811 * C2691 + C14813 * C2677 - C14814 * C2666 -
             C14813 * C2678 + C14810 * C2690) *
                C51243) *
               C152457 * C152886) *
              C152828 +
          (((C66132 + C66131 + C66130) * C51243 +
            (C66790 + C66791 + C66792) * C152747) *
               C152457 * C3048 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C3047 -
           ((C66793 + C66794 + C66795) * C152747 +
            (C66789 + C66788 + C66787) * C51243) *
               C152457 * C3049 +
           ((C68759 + C68758 + C68757) * C51243 +
            (C14813 * C9516 - C14814 * C9509 - C14813 * C9517 + C14810 * C9527 +
             C14815 * C9520 - C14816 * C9511 - C14815 * C9521 + C14811 * C9529 +
             C14817 * C68735 - C14818 * C68734 - C14817 * C68736 +
             C14812 * C68737) *
                C152747) *
               C152457 * C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                    C51243 +
                C6614 * C152747) *
                   C51245 +
               (C51249 + C51250) * C51246 + C51259 * C51247) *
                  C152530 * C152512 * C129 -
              (C51260 * C51247 + (C51252 + C51251) * C51246 +
               (C51250 + C51249) * C51245) *
                  C152530 * C152512 * C130 +
              (C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
                  C152530 * C152512 * C131 -
              ((C51257 + C51258) * C51247 + (C51256 + C51255) * C51246 +
               C51260 * C51245) *
                  C152530 * C152512 * C132 +
              (C51261 * C51245 + (C51258 + C51257) * C51246 +
               (C210 * C51243 +
                (C134 * C878 - C135 * C877 - C134 * C879 + C152711 * C880) *
                    C152747) *
                   C51247) *
                  C152530 * C152512 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                     C51243 +
                 C6614 * C152747) *
                    C51245 +
                (C51249 + C51250) * C51246 + C51259 * C51247) *
                   C152530 * C152917 -
               (C51492 * C51247 + (C51482 + C51483) * C51246 +
                (C6615 * C152747 + C6614 * C51243) * C51245) *
                   C152530 * C152901 +
               ((C6615 * C51243 + C6616 * C152747) * C51245 +
                (C51484 + C51485) * C51246 + C51493 * C51247) *
                   C152530 * C152870) *
                  C365 +
              (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
                (C51488 + C51489) * C51247) *
                   C152530 * C152901 -
               (C51260 * C51247 + (C51252 + C51251) * C51246 +
                (C51250 + C51249) * C51245) *
                   C152530 * C152917 -
               ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
                (C51485 + C51484) * C51245) *
                   C152530 * C152870) *
                  C366 +
              ((C51259 * C51245 + (C51254 + C51253) * C51246 +
                C51261 * C51247) *
                   C152530 * C152917 -
               ((C472 * C152747 + C471 * C51243) * C51247 +
                (C51489 + C51488) * C51246 + C51492 * C51245) *
                   C152530 * C152901 +
               (C51493 * C51245 + (C51491 + C51490) * C51246 +
                (C472 * C51243 + (C134 * C1886 - C135 * C1885 - C134 * C1887 +
                                  C152711 * C1888) *
                                     C152747) *
                    C51247) *
                   C152530 * C152870) *
                  C152864) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                     C51243 +
                 C6614 * C152747) *
                    C51245 +
                (C51249 + C51250) * C51246 + C51259 * C51247) *
                   C152918 -
               (C51724 * C51247 + (C51714 + C51715) * C51246 +
                (C7578 * C152747 +
                 (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                     C51243) *
                    C51245) *
                   C152903 +
               (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                     C51243 +
                 C8232 * C152747) *
                    C51245 +
                (C51716 + C51717) * C51246 + C51725 * C51247) *
                   C152873) *
                  C152512 * C365 +
              (((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
                (C51720 + C51721) * C51247) *
                   C152903 -
               (C51260 * C51247 + (C51252 + C51251) * C51246 +
                (C51250 + C51249) * C51245) *
                   C152918 -
               ((C51722 + C51723) * C51247 + (C51719 + C51718) * C51246 +
                (C51717 + C51716) * C51245) *
                   C152873) *
                  C152512 * C366 +
              ((C51259 * C51245 + (C51254 + C51253) * C51246 +
                C51261 * C51247) *
                   C152918 -
               ((C1279 * C152747 + C732 * C51243) * C51247 +
                (C51721 + C51720) * C51246 + C51724 * C51245) *
                   C152903 +
               (C51725 * C51245 + (C51723 + C51722) * C51246 +
                (C733 * C51243 + (C134 * C2890 - C135 * C2889 - C134 * C2891 +
                                  C152711 * C2892) *
                                     C152747) *
                    C51247) *
                   C152873) *
                  C152512 * C152864) -
         0.25 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                     C51243 +
                 C6614 * C152747) *
                    C51245 +
                (C51249 + C51250) * C51246 + C51259 * C51247) *
                   C152530 * C1429 -
               (C51492 * C51247 + (C51482 + C51483) * C51246 +
                (C6615 * C152747 + C6614 * C51243) * C51245) *
                   C152530 * C1430 +
               ((C6615 * C51243 + C6616 * C152747) * C51245 +
                (C51484 + C51485) * C51246 + C51493 * C51247) *
                   C152530 * C152870) *
                  C152914 +
              (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
                C51920 * C51247) *
                   C152530 * C1430 -
               (C51260 * C51247 + (C51252 + C51251) * C51246 +
                (C51250 + C51249) * C51245) *
                   C152530 * C1429 -
               ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
                (C51485 + C51484) * C51245) *
                   C152530 * C152870) *
                  C152897 +
              ((C51259 * C51245 + (C51254 + C51253) * C51246 +
                C51261 * C51247) *
                   C152530 * C1429 -
               ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
                C51492 * C51245) *
                   C152530 * C1430 +
               (C51493 * C51245 + (C51491 + C51490) * C51246 +
                (C472 * C51243 + (C134 * C1886 - C135 * C1885 - C134 * C1887 +
                                  C152711 * C1888) *
                                     C152747) *
                    C51247) *
                   C152530 * C152870) *
                  C152864) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                    C51243 +
                C6614 * C152747) *
                   C51245 +
               (C51249 + C51250) * C51246 + C51259 * C51247) *
                  C152530 * C1517 -
              (C51492 * C51247 + (C51482 + C51483) * C51246 +
               (C6615 * C152747 + C6614 * C51243) * C51245) *
                  C152530 * C1518 +
              ((C6615 * C51243 + C6616 * C152747) * C51245 +
               (C51484 + C51485) * C51246 + C51493 * C51247) *
                  C152530 * C1519 -
              ((C6618 * C152747 + C1909 * C51243) * C51247 +
               (C6617 * C152747 + C1910 * C51243) * C51246 +
               (C7957 * C152747 + C6616 * C51243) * C51245) *
                  C152530 * C1520 +
              ((C7957 * C51243 + C7959 * C152747) * C51245 +
               (C6617 * C51243 + C7958 * C152747) * C51246 +
               (C6618 * C51243 +
                (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                    C152747) *
                   C51247) *
                  C152530 * C1521) *
             C152484 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                     C51243 +
                 C6614 * C152747) *
                    C51245 +
                (C51249 + C51250) * C51246 + C51259 * C51247) *
                   C152918 -
               (C51724 * C51247 + (C51714 + C51715) * C51246 +
                (C7578 * C152747 +
                 (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                     C51243) *
                    C51245) *
                   C152903 +
               (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                     C51243 +
                 C8232 * C152747) *
                    C51245 +
                (C51716 + C51717) * C51246 + C51725 * C51247) *
                   C152873) *
                  C1429 +
              (((C7578 * C51243 + C7577 * C152747) * C51245 +
                (C52410 + C52411) * C51246 + C52416 * C51247) *
                   C152903 -
               (C51492 * C51247 + (C51482 + C51483) * C51246 +
                (C6615 * C152747 + C6614 * C51243) * C51245) *
                   C152918 -
               ((C6862 * C152747 + C2913 * C51243) * C51247 +
                (C6861 * C152747 + C2914 * C51243) * C51246 +
                (C8233 * C152747 + C8232 * C51243) * C51245) *
                   C152873) *
                  C1430 +
              (((C6615 * C51243 + C6616 * C152747) * C51245 +
                (C51484 + C51485) * C51246 + C51493 * C51247) *
                   C152918 -
               ((C7580 * C152747 + C2131 * C51243) * C51247 +
                (C7579 * C152747 + C2132 * C51243) * C51246 +
                (C8234 * C152747 + C7577 * C51243) * C51245) *
                   C152903 +
               ((C8233 * C51243 + C8236 * C152747) * C51245 +
                (C6861 * C51243 + C8235 * C152747) * C51246 +
                (C6862 * C51243 + (C134 * C9823 - C135 * C9822 - C134 * C9824 +
                                   C152711 * C9825) *
                                      C152747) *
                    C51247) *
                   C152873) *
                  C152870) *
             C152484 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                     C51243 +
                 C6614 * C152747) *
                    C51245 +
                (C51249 + C51250) * C51246 + C51259 * C51247) *
                   C2427 -
               (C51724 * C51247 + (C51714 + C51715) * C51246 +
                (C7578 * C152747 +
                 (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                     C51243) *
                    C51245) *
                   C2428 +
               (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                     C51243 +
                 C8232 * C152747) *
                    C51245 +
                (C51716 + C51717) * C51246 + C51725 * C51247) *
                   C152873) *
                  C152512 * C152914 +
              (((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
                C52117 * C51247) *
                   C2428 -
               (C51260 * C51247 + (C51252 + C51251) * C51246 +
                (C51250 + C51249) * C51245) *
                   C2427 -
               ((C51722 + C51723) * C51247 + (C51719 + C51718) * C51246 +
                (C51717 + C51716) * C51245) *
                   C152873) *
                  C152512 * C152897 +
              ((C51259 * C51245 + (C51254 + C51253) * C51246 +
                C51261 * C51247) *
                   C2427 -
               ((C52118 + C52119) * C51247 + (C51721 + C51720) * C51246 +
                C51724 * C51245) *
                   C2428 +
               (C51725 * C51245 + (C51723 + C51722) * C51246 +
                (C733 * C51243 + (C134 * C2890 - C135 * C2889 - C134 * C2891 +
                                  C152711 * C2892) *
                                     C152747) *
                    C51247) *
                   C152873) *
                  C152512 * C152864) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                     C51243 +
                 C6614 * C152747) *
                    C51245 +
                (C51249 + C51250) * C51246 + C51259 * C51247) *
                   C2427 -
               (C51724 * C51247 + (C51714 + C51715) * C51246 +
                (C7578 * C152747 +
                 (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                     C51243) *
                    C51245) *
                   C2428 +
               (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                     C51243 +
                 C8232 * C152747) *
                    C51245 +
                (C51716 + C51717) * C51246 + C51725 * C51247) *
                   C152873) *
                  C152917 +
              (((C7578 * C51243 + C7577 * C152747) * C51245 +
                (C52410 + C52411) * C51246 + C52416 * C51247) *
                   C2428 -
               (C51492 * C51247 + (C51482 + C51483) * C51246 +
                (C6615 * C152747 + C6614 * C51243) * C51245) *
                   C2427 -
               ((C6862 * C152747 + C2913 * C51243) * C51247 +
                (C6861 * C152747 + C2914 * C51243) * C51246 +
                (C8233 * C152747 + C8232 * C51243) * C51245) *
                   C152873) *
                  C152901 +
              (((C6615 * C51243 + C6616 * C152747) * C51245 +
                (C51484 + C51485) * C51246 + C51493 * C51247) *
                   C2427 -
               ((C53463 + C53464) * C51247 + (C53465 + C53466) * C51246 +
                (C8234 * C152747 + C7577 * C51243) * C51245) *
                   C2428 +
               ((C8233 * C51243 + C8236 * C152747) * C51245 +
                (C6861 * C51243 + C8235 * C152747) * C51246 +
                (C6862 * C51243 + (C134 * C9823 - C135 * C9822 - C134 * C9824 +
                                   C152711 * C9825) *
                                      C152747) *
                    C51247) *
                   C152873) *
                  C152870) *
             C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C51243 +
            C6614 * C152747) *
               C51245 +
           (C51249 + C51250) * C51246 + C51259 * C51247) *
              C2658 -
          (C51724 * C51247 + (C51714 + C51715) * C51246 +
           (C7578 * C152747 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C51243) *
               C51245) *
              C2659 +
          (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C51243 +
            C8232 * C152747) *
               C51245 +
           (C51716 + C51717) * C51246 + C51725 * C51247) *
              C2660 -
          ((C26880 * C152747 + C3075 * C51243) * C51247 +
           (C10042 * C152747 + C3076 * C51243) * C51246 +
           (C10260 * C152747 +
            (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                C51243) *
               C51245) *
              C2661 +
          (((C134 * C2679 - C135 * C2667 - C134 * C2680 + C152711 * C2691) *
                C51243 +
            (C134 * C9518 - C135 * C9510 - C134 * C9519 + C152711 * C9528) *
                C152747) *
               C51245 +
           ((C134 * C2681 - C135 * C2668 - C134 * C2682 + C152711 * C2692) *
                C51243 +
            (C134 * C9522 - C135 * C9512 - C134 * C9523 + C152711 * C9530) *
                C152747) *
               C51246 +
           ((C134 * C2683 - C135 * C2669 - C134 * C2684 + C152711 * C2693) *
                C51243 +
            (C134 * C18412 - C135 * C18411 - C134 * C18413 + C152711 * C18414) *
                C152747) *
               C51247) *
              C2662) *
         C152512 * C152484) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C59414 +
           C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
              C152457 * C152530 * C152512 * C129 -
          (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
              C152457 * C152530 * C152512 * C130 +
          (C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
              C152457 * C152530 * C152512 * C131 -
          (C1908 * C59417 + C470 * C59416 + C465 * C59415 + C207 * C59414) *
              C152457 * C152530 * C152512 * C132 +
          (C208 * C59414 + C471 * C59415 + C472 * C59416 +
           (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
               C59417) *
              C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C152917 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C152901 +
           (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152530 * C152870) *
              C365 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C152901 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C152917 -
           (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
               C152457 * C152530 * C152870) *
              C366 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152530 * C152917 -
           (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
               C152457 * C152530 * C152901 +
           (C469 * C59414 + C1909 * C59415 + C6618 * C59416 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C59417) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152918 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152903 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C152873) *
              C152512 * C365 +
          ((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
               C152457 * C152903 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152918 -
           (C8235 * C59417 + C6861 * C59416 + C2914 * C59415 + C729 * C59414) *
               C152457 * C152873) *
              C152512 * C366 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152918 -
           (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
               C152457 * C152903 +
           (C730 * C59414 + C2913 * C59415 + C6862 * C59416 +
            (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                C59417) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C1429 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C1430 +
           (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152530 * C152870) *
              C152914 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C1430 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C1429 -
           (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
               C152457 * C152530 * C152870) *
              C152897 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152530 * C1429 -
           (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
               C152457 * C152530 * C1430 +
           (C469 * C59414 + C1909 * C59415 + C6618 * C59416 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C59417) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C59414 +
           C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
              C152457 * C152530 * C1517 -
          (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
              C152457 * C152530 * C1518 +
          (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
              C152457 * C152530 * C1519 -
          (C60404 * C59417 + C7959 * C59416 + C7957 * C59415 + C6616 * C59414) *
              C152457 * C152530 * C1520 +
          (C7957 * C59414 + C7959 * C59415 + C60404 * C59416 +
           (C134 * C60394 - C135 * C60393 - C134 * C60395 + C152711 * C60396) *
               C59417) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152918 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152903 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C152873) *
              C1429 +
          ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 + C8950 * C59417) *
               C152457 * C152903 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152918 -
           (C60561 * C59417 + C8236 * C59416 + C8233 * C59415 +
            C8232 * C59414) *
               C152457 * C152873) *
              C1430 +
          ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152918 -
           ((C134 * C8937 - C135 * C8935 - C134 * C8938 + C152711 * C8941) *
                C59417 +
            C8950 * C59416 + C8234 * C59415 + C7577 * C59414) *
               C152457 * C152903 +
           (C8233 * C59414 + C8236 * C59415 + C60561 * C59416 +
            (C134 * C60551 - C135 * C60550 - C134 * C60552 + C152711 * C60553) *
                C59417) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C2427 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C2428 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C152873) *
              C152512 * C152914 +
          ((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
               C152457 * C2428 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C2427 -
           (C8235 * C59417 + C6861 * C59416 + C2914 * C59415 + C729 * C59414) *
               C152457 * C152873) *
              C152512 * C152897 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C2427 -
           (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
               C152457 * C2428 +
           (C730 * C59414 + C2913 * C59415 + C6862 * C59416 +
            (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                C59417) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C2427 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C2428 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C152873) *
              C152917 +
          ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 + C8950 * C59417) *
               C152457 * C2428 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C2427 -
           (C60561 * C59417 + C8236 * C59416 + C8233 * C59415 +
            C8232 * C59414) *
               C152457 * C152873) *
              C152901 +
          ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C2427 -
           (C61026 * C59417 + C8950 * C59416 + C8234 * C59415 +
            C7577 * C59414) *
               C152457 * C2428 +
           (C8233 * C59414 + C8236 * C59415 + C60561 * C59416 +
            (C134 * C60551 - C135 * C60550 - C134 * C60552 + C152711 * C60553) *
                C59417) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C59414 +
           C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
              C152457 * C2658 -
          (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
           (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
               C59414) *
              C152457 * C2659 +
          ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) * C59414 +
           C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
              C152457 * C2660 -
          ((C134 * C10240 - C135 * C10238 - C134 * C10241 + C152711 * C10244) *
               C59417 +
           C10259 * C59416 + C10260 * C59415 +
           (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
               C59414) *
              C152457 * C2661 +
          ((C134 * C2679 - C135 * C2667 - C134 * C2680 + C152711 * C2691) *
               C59414 +
           (C134 * C9518 - C135 * C9510 - C134 * C9519 + C152711 * C9528) *
               C59415 +
           (C134 * C9520 - C135 * C9511 - C134 * C9521 + C152711 * C9529) *
               C59416 +
           (C134 * C61401 - C135 * C61400 - C134 * C61402 + C152711 * C61403) *
               C59417) *
              C152457 * C2662) *
         C152512 * C152484) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
            C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
            C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
               C51243 +
           (C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407 +
            C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
            C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740) *
               C152747) *
              C152457 * C152530 * C152512 * C129 -
          ((C15194 + C15195 + C15196) * C152747 +
           (C14894 + C14893 + C14892) * C51243) *
              C152457 * C152530 * C152512 * C130 +
          ((C14897 + C14896 + C14895) * C51243 +
           (C15200 + C15201 + C15202) * C152747) *
              C152457 * C152530 * C152512 * C131 -
          ((C15720 + C15721 + C15722) * C152747 +
           (C14900 + C14899 + C14898) * C51243) *
              C152457 * C152530 * C152512 * C132 +
          ((C14903 + C14902 + C14901) * C51243 +
           (C14813 * C396 - C14814 * C376 - C14813 * C397 + C14810 * C412 +
            C14815 * C1241 - C14816 * C1231 - C14815 * C1242 + C14811 * C1249 +
            C14817 * C2890 - C14818 * C2889 - C14817 * C2891 + C14812 * C2892) *
               C152747) *
              C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152530 * C152917 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C152530 * C152901 +
           ((C65215 + C65214 + C65213) * C51243 +
            (C14813 * C1537 - C14814 * C1526 - C14813 * C1538 + C14810 * C1550 +
             C14815 * C2269 - C14816 * C2265 - C14815 * C2270 + C14811 * C2277 +
             C14817 * C8185 - C14818 * C8178 - C14817 * C8186 +
             C14812 * C8196) *
                C152747) *
               C152457 * C152530 * C152870) *
              C365 +
          (((C15196 + C15195 + C15194) * C51243 +
            (C15197 + C15198 + C15199) * C152747) *
               C152457 * C152530 * C152901 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C152530 * C152917 -
           ((C17040 + C17041 + C17042) * C152747 +
            (C15199 + C15198 + C15197) * C51243) *
               C152457 * C152530 * C152870) *
              C366 +
          (((C14897 + C14896 + C14895) * C51243 +
            (C15200 + C15201 + C15202) * C152747) *
               C152457 * C152530 * C152917 -
           ((C15203 + C15204 + C15205) * C152747 +
            (C15202 + C15201 + C15200) * C51243) *
               C152457 * C152530 * C152901 +
           ((C15205 + C15204 + C15203) * C51243 +
            (C14813 * C1533 - C14814 * C1524 - C14813 * C1534 + C14810 * C1548 +
             C14815 * C2273 - C14816 * C2267 - C14815 * C2274 + C14811 * C2279 +
             C14817 * C9823 - C14818 * C9822 - C14817 * C9824 +
             C14812 * C9825) *
                C152747) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152918 -
           ((C14817 * C3213 - C14818 * C3209 - C14817 * C3214 + C14812 * C3221 +
             C14815 * C1719 - C14816 * C1704 - C14815 * C1720 + C14811 * C1740 +
             C14813 * C1233 - C14814 * C1227 - C14813 * C1234 +
             C14810 * C1245) *
                C152747 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C51243) *
               C152457 * C152903 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C51243 +
            (C14813 * C1719 - C14814 * C1704 - C14813 * C1720 + C14810 * C1740 +
             C14815 * C3213 - C14816 * C3209 - C14815 * C3214 + C14811 * C3221 +
             C14817 * C9518 - C14818 * C9510 - C14817 * C9519 +
             C14812 * C9528) *
                C152747) *
               C152457 * C152873) *
              C152512 * C365 +
          (((C15498 + C15497 + C15496) * C51243 +
            (C16264 + C16265 + C16266) * C152747) *
               C152457 * C152903 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C152918 -
           ((C18434 + C18435 + C18436) * C152747 +
            (C15501 + C15500 + C15499) * C51243) *
               C152457 * C152873) *
              C152512 * C366 +
          (((C14897 + C14896 + C14895) * C51243 +
            (C15200 + C15201 + C15202) * C152747) *
               C152457 * C152918 -
           ((C16267 + C16268 + C16269) * C152747 +
            (C15504 + C15503 + C15502) * C51243) *
               C152457 * C152903 +
           ((C15507 + C15506 + C15505) * C51243 +
            (C14813 * C1715 - C14814 * C1702 - C14813 * C1716 + C14810 * C1738 +
             C14815 * C3217 - C14816 * C3211 - C14815 * C3218 + C14811 * C3223 +
             C14817 * C18412 - C14818 * C18411 - C14817 * C18413 +
             C14812 * C18414) *
                C152747) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152530 * C1429 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C152530 * C1430 +
           ((C65215 + C65214 + C65213) * C51243 +
            (C14813 * C1537 - C14814 * C1526 - C14813 * C1538 + C14810 * C1550 +
             C14815 * C2269 - C14816 * C2265 - C14815 * C2270 + C14811 * C2277 +
             C14817 * C8185 - C14818 * C8178 - C14817 * C8186 +
             C14812 * C8196) *
                C152747) *
               C152457 * C152530 * C152870) *
              C152914 +
          (((C15196 + C15195 + C15194) * C51243 +
            (C15197 + C15198 + C15199) * C152747) *
               C152457 * C152530 * C1430 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C152530 * C1429 -
           ((C17040 + C17041 + C17042) * C152747 +
            (C15199 + C15198 + C15197) * C51243) *
               C152457 * C152530 * C152870) *
              C152897 +
          (((C14897 + C14896 + C14895) * C51243 +
            (C15200 + C15201 + C15202) * C152747) *
               C152457 * C152530 * C1429 -
           ((C15203 + C15204 + C15205) * C152747 +
            (C15202 + C15201 + C15200) * C51243) *
               C152457 * C152530 * C1430 +
           ((C15205 + C15204 + C15203) * C51243 +
            (C14813 * C1533 - C14814 * C1524 - C14813 * C1534 + C14810 * C1548 +
             C14815 * C2273 - C14816 * C2267 - C14815 * C2274 + C14811 * C2279 +
             C14817 * C9823 - C14818 * C9822 - C14817 * C9824 +
             C14812 * C9825) *
                C152747) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
            C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
            C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
               C51243 +
           (C65210 + C65211 + C65212) * C152747) *
              C152457 * C152530 * C1517 -
          ((C65213 + C65214 + C65215) * C152747 +
           (C65212 + C65211 + C65210) * C51243) *
              C152457 * C152530 * C1518 +
          ((C65215 + C65214 + C65213) * C51243 +
           (C66509 + C66510 + C66511) * C152747) *
              C152457 * C152530 * C1519 -
          ((C66512 + C66513 + C66514) * C152747 +
           (C66511 + C66510 + C66509) * C51243) *
              C152457 * C152530 * C1520 +
          ((C66514 + C66513 + C66512) * C51243 +
           (C14813 * C7928 - C14814 * C7923 - C14813 * C7929 + C14810 * C7935 +
            C14815 * C8937 - C14816 * C8935 - C14815 * C8938 + C14811 * C8941 +
            C14817 * C60551 - C14818 * C60550 - C14817 * C60552 +
            C14812 * C60553) *
               C152747) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152918 -
           ((C66130 + C66131 + C66132) * C152747 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C51243) *
               C152457 * C152903 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C51243 +
            (C66787 + C66788 + C66789) * C152747) *
               C152457 * C152873) *
              C1429 +
          (((C66132 + C66131 + C66130) * C51243 +
            (C66790 + C66791 + C66792) * C152747) *
               C152457 * C152903 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C152918 -
           ((C66793 + C66794 + C66795) * C152747 +
            (C66789 + C66788 + C66787) * C51243) *
               C152457 * C152873) *
              C1430 +
          (((C65215 + C65214 + C65213) * C51243 +
            (C66509 + C66510 + C66511) * C152747) *
               C152457 * C152918 -
           ((C14817 * C10240 - C14818 * C10238 - C14817 * C10241 +
             C14812 * C10244 + C14815 * C8185 - C14816 * C8178 -
             C14815 * C8186 + C14811 * C8196 + C14813 * C2269 - C14814 * C2265 -
             C14813 * C2270 + C14810 * C2277) *
                C152747 +
            (C66792 + C66791 + C66790) * C51243) *
               C152457 * C152903 +
           ((C66795 + C66794 + C66793) * C51243 +
            (C14813 * C8185 - C14814 * C8178 - C14813 * C8186 + C14810 * C8196 +
             C14815 * C10240 - C14816 * C10238 - C14815 * C10241 +
             C14811 * C10244 + C14817 * C61401 - C14818 * C61400 -
             C14817 * C61402 + C14812 * C61403) *
                C152747) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C2427 -
           ((C66130 + C66131 + C66132) * C152747 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C51243) *
               C152457 * C2428 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C51243 +
            (C66787 + C66788 + C66789) * C152747) *
               C152457 * C152873) *
              C152512 * C152914 +
          (((C15498 + C15497 + C15496) * C51243 +
            (C16264 + C16265 + C16266) * C152747) *
               C152457 * C2428 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C2427 -
           ((C18434 + C18435 + C18436) * C152747 +
            (C15501 + C15500 + C15499) * C51243) *
               C152457 * C152873) *
              C152512 * C152897 +
          (((C14897 + C14896 + C14895) * C51243 +
            (C15200 + C15201 + C15202) * C152747) *
               C152457 * C2427 -
           ((C16267 + C16268 + C16269) * C152747 +
            (C15504 + C15503 + C15502) * C51243) *
               C152457 * C2428 +
           ((C15507 + C15506 + C15505) * C51243 +
            (C14813 * C1715 - C14814 * C1702 - C14813 * C1716 + C14810 * C1738 +
             C14815 * C3217 - C14816 * C3211 - C14815 * C3218 + C14811 * C3223 +
             C14817 * C18412 - C14818 * C18411 - C14817 * C18413 +
             C14812 * C18414) *
                C152747) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C2427 -
           ((C66130 + C66131 + C66132) * C152747 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C51243) *
               C152457 * C2428 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C51243 +
            (C66787 + C66788 + C66789) * C152747) *
               C152457 * C152873) *
              C152917 +
          (((C66132 + C66131 + C66130) * C51243 +
            (C66790 + C66791 + C66792) * C152747) *
               C152457 * C2428 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C2427 -
           ((C66793 + C66794 + C66795) * C152747 +
            (C66789 + C66788 + C66787) * C51243) *
               C152457 * C152873) *
              C152901 +
          (((C65215 + C65214 + C65213) * C51243 +
            (C66509 + C66510 + C66511) * C152747) *
               C152457 * C2427 -
           ((C67492 + C67493 + C67494) * C152747 +
            (C66792 + C66791 + C66790) * C51243) *
               C152457 * C2428 +
           ((C66795 + C66794 + C66793) * C51243 +
            (C14813 * C8185 - C14814 * C8178 - C14813 * C8186 + C14810 * C8196 +
             C14815 * C10240 - C14816 * C10238 - C14815 * C10241 +
             C14811 * C10244 + C14817 * C61401 - C14818 * C61400 -
             C14817 * C61402 + C14812 * C61403) *
                C152747) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
            C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
            C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
               C51243 +
           (C65210 + C65211 + C65212) * C152747) *
              C152457 * C2658 -
          ((C66130 + C66131 + C66132) * C152747 +
           (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
            C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
            C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
               C51243) *
              C152457 * C2659 +
          ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
            C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
            C14817 * C2679 - C14818 * C2667 - C14817 * C2680 + C14812 * C2691) *
               C51243 +
           (C66787 + C66788 + C66789) * C152747) *
              C152457 * C2660 -
          ((C14817 * C18851 - C14818 * C18849 - C14817 * C18852 +
            C14812 * C18855 + C14815 * C9518 - C14816 * C9510 - C14815 * C9519 +
            C14811 * C9528 + C14813 * C3213 - C14814 * C3209 - C14813 * C3214 +
            C14810 * C3221) *
               C152747 +
           (C14817 * C18111 - C14818 * C18106 - C14817 * C18112 +
            C14812 * C18118 + C14815 * C2679 - C14816 * C2667 - C14815 * C2680 +
            C14811 * C2691 + C14813 * C2677 - C14814 * C2666 - C14813 * C2678 +
            C14810 * C2690) *
               C51243) *
              C152457 * C2661 +
          ((C14813 * C2679 - C14814 * C2667 - C14813 * C2680 + C14810 * C2691 +
            C14815 * C18111 - C14816 * C18106 - C14815 * C18112 +
            C14811 * C18118 + C14817 * C18113 - C14818 * C18107 -
            C14817 * C18114 + C14812 * C18119) *
               C51243 +
           (C14813 * C9518 - C14814 * C9510 - C14813 * C9519 + C14810 * C9528 +
            C14815 * C18851 - C14816 * C18849 - C14815 * C18852 +
            C14811 * C18855 + C14817 * C68053 - C14818 * C68052 -
            C14817 * C68054 + C14812 * C68055) *
               C152747) *
              C152457 * C2662) *
         C152512 * C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                     C51243 +
                 C6614 * C152747) *
                    C51245 +
                (C51249 + C51250) * C51246 + C51259 * C51247) *
                   C152829 -
               (C51724 * C51247 + (C51714 + C51715) * C51246 +
                (C7578 * C152747 +
                 (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                     C51243) *
                    C51245) *
                   C152617) *
                  C152512 * C873 +
              (((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
                C52117 * C51247) *
                   C152617 -
               (C51260 * C51247 + (C51252 + C51251) * C51246 +
                (C51250 + C51249) * C51245) *
                   C152829) *
                  C152512 * C874 +
              ((C51259 * C51245 + (C51254 + C51253) * C51246 +
                C51261 * C51247) *
                   C152829 -
               ((C52118 + C52119) * C51247 + (C51721 + C51720) * C51246 +
                C51724 * C51245) *
                   C152617) *
                  C152512 * C875 +
              ((C52117 * C51245 + (C52119 + C52118) * C51246 +
                (C1032 * C51243 + (C134 * C1243 - C135 * C1232 - C134 * C1244 +
                                   C152711 * C1250) *
                                      C152747) *
                    C51247) *
                   C152617 -
               ((C51257 + C51258) * C51247 + (C51256 + C51255) * C51246 +
                C51260 * C51245) *
                   C152829) *
                  C152512 * C152874) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                      C51243 +
                  C6614 * C152747) *
                     C51245 +
                 (C51249 + C51250) * C51246 + C51259 * C51247) *
                    C152829 -
                (C51724 * C51247 + (C51714 + C51715) * C51246 +
                 (C7578 * C152747 +
                  (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                      C51243) *
                     C51245) *
                    C152617) *
                   C1429 +
               (((C7578 * C51243 + C7577 * C152747) * C51245 +
                 (C52410 + C52411) * C51246 + C52416 * C51247) *
                    C152617 -
                (C51492 * C51247 + (C51482 + C51483) * C51246 +
                 (C6615 * C152747 + C6614 * C51243) * C51245) *
                    C152829) *
                   C1430 +
               (((C6615 * C51243 + C6616 * C152747) * C51245 +
                 (C51484 + C51485) * C51246 + C51493 * C51247) *
                    C152829 -
                ((C53463 + C53464) * C51247 + (C53465 + C53466) * C51246 +
                 (C8234 * C152747 + C7577 * C51243) * C51245) *
                    C152617) *
                   C152870) *
                  C152814 +
              ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
                 C52117 * C51247) *
                    C152617 -
                (C51260 * C51247 + (C51252 + C51251) * C51246 +
                 (C51250 + C51249) * C51245) *
                    C152829) *
                   C1429 +
               (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
                 C51920 * C51247) *
                    C152829 -
                ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
                 (C52411 + C52410) * C51245) *
                    C152617) *
                   C1430 +
               (((C53466 + C53465) * C51245 + (C53464 + C53463) * C51246 +
                 (C2130 * C51243 + (C134 * C2275 - C135 * C2268 - C134 * C2276 +
                                    C152711 * C2280) *
                                       C152747) *
                     C51247) *
                    C152617 -
                ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
                 (C51485 + C51484) * C51245) *
                    C152829) *
                   C152870) *
                  C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C3047 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C3048 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C51243 +
             C8232 * C152747) *
                C51245 +
            (C51716 + C51717) * C51246 + C51725 * C51247) *
               C3049 -
           ((C54707 + C54708) * C51247 + (C54709 + C54710) * C51246 +
            (C10260 * C152747 +
             (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                 C51243) *
                C51245) *
               C152886) *
              C152512 * C152814 +
          (((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
            C52117 * C51247) *
               C3048 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C3047 -
           ((C51722 + C51723) * C51247 + (C51719 + C51718) * C51246 +
            (C51717 + C51716) * C51245) *
               C3049 +
           ((C54710 + C54709) * C51245 + (C54708 + C54707) * C51246 +
            (C3074 * C51243 +
             (C134 * C3219 - C135 * C3212 - C134 * C3220 + C152711 * C3224) *
                 C152747) *
                C51247) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152829 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152617) *
              C152512 * C873 +
          ((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
               C152457 * C152617 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152829) *
              C152512 * C874 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152829 -
           (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
               C152457 * C152617) *
              C152512 * C875 +
          ((C726 * C59414 + C1278 * C59415 + C2130 * C59416 +
            (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                C59417) *
               C152457 * C152617 -
           (C1908 * C59417 + C470 * C59416 + C465 * C59415 + C207 * C59414) *
               C152457 * C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C152829 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152617) *
               C1429 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152617 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C152829) *
               C1430 +
           ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 +
             C7959 * C59417) *
                C152457 * C152829 -
            ((C134 * C8937 - C135 * C8935 - C134 * C8938 + C152711 * C8941) *
                 C59417 +
             C8950 * C59416 + C8234 * C59415 + C7577 * C59414) *
                C152457 * C152617) *
               C152870) *
              C152814 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152617 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C152829) *
               C1429 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C152829 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152617) *
               C1430 +
           ((C2132 * C59414 + C7579 * C59415 + C8740 * C59416 +
             (C134 * C8939 - C135 * C8936 - C134 * C8940 + C152711 * C8942) *
                 C59417) *
                C152457 * C152617 -
            (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
                C152457 * C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C3047 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C3048 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C3049 -
           ((C134 * C10240 - C135 * C10238 - C134 * C10241 + C152711 * C10244) *
                C59417 +
            C10259 * C59416 + C10260 * C59415 +
            (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                C59414) *
               C152457 * C152886) *
              C152512 * C152814 +
          ((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
               C152457 * C3048 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C3047 -
           (C8235 * C59417 + C6861 * C59416 + C2914 * C59415 + C729 * C59414) *
               C152457 * C3049 +
           (C3076 * C59414 + C10042 * C59415 + C10041 * C59416 +
            (C134 * C10242 - C135 * C10239 - C134 * C10243 + C152711 * C10245) *
                C59417) *
               C152457 * C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152829 -
           ((C14817 * C3213 - C14818 * C3209 - C14817 * C3214 + C14812 * C3221 +
             C14815 * C1719 - C14816 * C1704 - C14815 * C1720 + C14811 * C1740 +
             C14813 * C1233 - C14814 * C1227 - C14813 * C1234 +
             C14810 * C1245) *
                C152747 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C51243) *
               C152457 * C152617) *
              C152512 * C873 +
          (((C15498 + C15497 + C15496) * C51243 +
            (C16264 + C16265 + C16266) * C152747) *
               C152457 * C152617 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C152829) *
              C152512 * C874 +
          (((C14897 + C14896 + C14895) * C51243 +
            (C15200 + C15201 + C15202) * C152747) *
               C152457 * C152829 -
           ((C16267 + C16268 + C16269) * C152747 +
            (C15504 + C15503 + C15502) * C51243) *
               C152457 * C152617) *
              C152512 * C875 +
          (((C15937 + C15936 + C15935) * C51243 +
            (C14813 * C1239 - C14814 * C1230 - C14813 * C1240 + C14810 * C1248 +
             C14815 * C1713 - C14816 * C1701 - C14815 * C1714 + C14811 * C1737 +
             C14817 * C3219 - C14818 * C3212 - C14817 * C3220 +
             C14812 * C3224) *
                C152747) *
               C152457 * C152617 -
           ((C15720 + C15721 + C15722) * C152747 +
            (C14900 + C14899 + C14898) * C51243) *
               C152457 * C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C51243 +
             (C65210 + C65211 + C65212) * C152747) *
                C152457 * C152829 -
            ((C66130 + C66131 + C66132) * C152747 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C51243) *
                C152457 * C152617) *
               C1429 +
           (((C66132 + C66131 + C66130) * C51243 +
             (C66790 + C66791 + C66792) * C152747) *
                C152457 * C152617 -
            ((C65213 + C65214 + C65215) * C152747 +
             (C65212 + C65211 + C65210) * C51243) *
                C152457 * C152829) *
               C1430 +
           (((C65215 + C65214 + C65213) * C51243 +
             (C66509 + C66510 + C66511) * C152747) *
                C152457 * C152829 -
            ((C14817 * C10240 - C14818 * C10238 - C14817 * C10241 +
              C14812 * C10244 + C14815 * C8185 - C14816 * C8178 -
              C14815 * C8186 + C14811 * C8196 + C14813 * C2269 -
              C14814 * C2265 - C14813 * C2270 + C14810 * C2277) *
                 C152747 +
             (C66792 + C66791 + C66790) * C51243) *
                C152457 * C152617) *
               C152870) *
              C152814 +
          ((((C15498 + C15497 + C15496) * C51243 +
             (C16264 + C16265 + C16266) * C152747) *
                C152457 * C152617 -
            ((C15194 + C15195 + C15196) * C152747 +
             (C14894 + C14893 + C14892) * C51243) *
                C152457 * C152829) *
               C1429 +
           (((C15196 + C15195 + C15194) * C51243 +
             (C15197 + C15198 + C15199) * C152747) *
                C152457 * C152829 -
            ((C17351 + C17352 + C17353) * C152747 +
             (C16266 + C16265 + C16264) * C51243) *
                C152457 * C152617) *
               C1430 +
           (((C17353 + C17352 + C17351) * C51243 +
             (C14813 * C2271 - C14814 * C2266 - C14813 * C2272 +
              C14810 * C2278 + C14815 * C8183 - C14816 * C8177 -
              C14815 * C8184 + C14811 * C8195 + C14817 * C10242 -
              C14818 * C10239 - C14817 * C10243 + C14812 * C10245) *
                 C152747) *
                C152457 * C152617 -
            ((C17040 + C17041 + C17042) * C152747 +
             (C15199 + C15198 + C15197) * C51243) *
                C152457 * C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C3047 -
           ((C66130 + C66131 + C66132) * C152747 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C51243) *
               C152457 * C3048 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C51243 +
            (C66787 + C66788 + C66789) * C152747) *
               C152457 * C3049 -
           ((C14817 * C18851 - C14818 * C18849 - C14817 * C18852 +
             C14812 * C18855 + C14815 * C9518 - C14816 * C9510 -
             C14815 * C9519 + C14811 * C9528 + C14813 * C3213 - C14814 * C3209 -
             C14813 * C3214 + C14810 * C3221) *
                C152747 +
            (C14817 * C18111 - C14818 * C18106 - C14817 * C18112 +
             C14812 * C18118 + C14815 * C2679 - C14816 * C2667 -
             C14815 * C2680 + C14811 * C2691 + C14813 * C2677 - C14814 * C2666 -
             C14813 * C2678 + C14810 * C2690) *
                C51243) *
               C152457 * C152886) *
              C152512 * C152814 +
          (((C15498 + C15497 + C15496) * C51243 +
            (C16264 + C16265 + C16266) * C152747) *
               C152457 * C3048 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C3047 -
           ((C18434 + C18435 + C18436) * C152747 +
            (C15501 + C15500 + C15499) * C51243) *
               C152457 * C3049 +
           ((C18655 + C18654 + C18653) * C51243 +
            (C14813 * C3215 - C14814 * C3210 - C14813 * C3216 + C14810 * C3222 +
             C14815 * C9522 - C14816 * C9512 - C14815 * C9523 + C14811 * C9530 +
             C14817 * C18853 - C14818 * C18850 - C14817 * C18854 +
             C14812 * C18856) *
                C152747) *
               C152457 * C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C51243 +
            C6614 * C152747) *
               C51245 +
           (C51249 + C51250) * C51246 + C51259 * C51247) *
              C152530 * C152512 * C129 -
          (C51260 * C51247 + (C51252 + C51251) * C51246 +
           (C51250 + C51249) * C51245) *
              C152530 * C152512 * C130 +
          (C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
              C152530 * C152512 * C131 -
          ((C51257 + C51258) * C51247 + (C51256 + C51255) * C51246 +
           C51260 * C51245) *
              C152530 * C152512 * C132 +
          (C51261 * C51245 + (C51258 + C51257) * C51246 +
           (C210 * C51243 +
            (C134 * C878 - C135 * C877 - C134 * C879 + C152711 * C880) *
                C152747) *
               C51247) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152530 * C152917 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152530 * C152901 +
           ((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152530 * C152870) *
              C365 +
          (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
            (C51488 + C51489) * C51247) *
               C152530 * C152901 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152530 * C152917 -
           ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
            (C51485 + C51484) * C51245) *
               C152530 * C152870) *
              C366 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152530 * C152917 -
           ((C472 * C152747 + C471 * C51243) * C51247 +
            (C51489 + C51488) * C51246 + C51492 * C51245) *
               C152530 * C152901 +
           (C51493 * C51245 + (C51491 + C51490) * C51246 +
            (C472 * C51243 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C152747) *
                C51247) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152530 * C1429 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152530 * C1430 +
           ((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152530 * C152870) *
              C152914 +
          (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
            C51920 * C51247) *
               C152530 * C1430 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152530 * C1429 -
           ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
            (C51485 + C51484) * C51245) *
               C152530 * C152870) *
              C152897 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152530 * C1429 -
           ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
            C51492 * C51245) *
               C152530 * C1430 +
           (C51493 * C51245 + (C51491 + C51490) * C51246 +
            (C472 * C51243 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C152747) *
                C51247) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C51243 +
            C6614 * C152747) *
               C51245 +
           (C51249 + C51250) * C51246 + C51259 * C51247) *
              C152530 * C1517 -
          (C51492 * C51247 + (C51482 + C51483) * C51246 +
           (C6615 * C152747 + C6614 * C51243) * C51245) *
              C152530 * C1518 +
          ((C6615 * C51243 + C6616 * C152747) * C51245 +
           (C51484 + C51485) * C51246 + C51493 * C51247) *
              C152530 * C1519 -
          ((C6618 * C152747 + C1909 * C51243) * C51247 +
           (C6617 * C152747 + C1910 * C51243) * C51246 +
           (C7957 * C152747 + C6616 * C51243) * C51245) *
              C152530 * C1520 +
          ((C7957 * C51243 + C7959 * C152747) * C51245 +
           (C6617 * C51243 + C7958 * C152747) * C51246 +
           (C6618 * C51243 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C152747) *
               C51247) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C2427 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C2428 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C51243 +
             C8232 * C152747) *
                C51245 +
            (C51716 + C51717) * C51246 + C51725 * C51247) *
               C152873) *
              C152512 * C152914 +
          (((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
            C52117 * C51247) *
               C2428 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C2427 -
           ((C51722 + C51723) * C51247 + (C51719 + C51718) * C51246 +
            (C51717 + C51716) * C51245) *
               C152873) *
              C152512 * C152897 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C2427 -
           ((C52118 + C52119) * C51247 + (C51721 + C51720) * C51246 +
            C51724 * C51245) *
               C2428 +
           (C51725 * C51245 + (C51723 + C51722) * C51246 +
            (C733 * C51243 +
             (C134 * C2890 - C135 * C2889 - C134 * C2891 + C152711 * C2892) *
                 C152747) *
                C51247) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C2427 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C2428 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C51243 +
             C8232 * C152747) *
                C51245 +
            (C51716 + C51717) * C51246 + C51725 * C51247) *
               C152873) *
              C152917 +
          (((C7578 * C51243 + C7577 * C152747) * C51245 +
            (C52410 + C52411) * C51246 + C52416 * C51247) *
               C2428 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C2427 -
           ((C6862 * C152747 + C2913 * C51243) * C51247 +
            (C6861 * C152747 + C2914 * C51243) * C51246 +
            (C8233 * C152747 + C8232 * C51243) * C51245) *
               C152873) *
              C152901 +
          (((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C2427 -
           ((C53463 + C53464) * C51247 + (C53465 + C53466) * C51246 +
            (C8234 * C152747 + C7577 * C51243) * C51245) *
               C2428 +
           ((C8233 * C51243 + C8236 * C152747) * C51245 +
            (C6861 * C51243 + C8235 * C152747) * C51246 +
            (C6862 * C51243 +
             (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                 C152747) *
                C51247) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C59414 +
           C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
              C152457 * C152530 * C152512 * C129 -
          (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
              C152457 * C152530 * C152512 * C130 +
          (C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
              C152457 * C152530 * C152512 * C131 -
          (C1908 * C59417 + C470 * C59416 + C465 * C59415 + C207 * C59414) *
              C152457 * C152530 * C152512 * C132 +
          (C208 * C59414 + C471 * C59415 + C472 * C59416 +
           (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
               C59417) *
              C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C152917 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C152901 +
           (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152530 * C152870) *
              C365 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C152901 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C152917 -
           (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
               C152457 * C152530 * C152870) *
              C366 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152530 * C152917 -
           (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
               C152457 * C152530 * C152901 +
           (C469 * C59414 + C1909 * C59415 + C6618 * C59416 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C59417) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C1429 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C1430 +
           (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152530 * C152870) *
              C152914 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C1430 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C1429 -
           (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
               C152457 * C152530 * C152870) *
              C152897 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152530 * C1429 -
           (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
               C152457 * C152530 * C1430 +
           (C469 * C59414 + C1909 * C59415 + C6618 * C59416 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C59417) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C59414 +
           C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
              C152457 * C152530 * C1517 -
          (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
              C152457 * C152530 * C1518 +
          (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
              C152457 * C152530 * C1519 -
          (C60404 * C59417 + C7959 * C59416 + C7957 * C59415 + C6616 * C59414) *
              C152457 * C152530 * C1520 +
          (C7957 * C59414 + C7959 * C59415 + C60404 * C59416 +
           (C134 * C60394 - C135 * C60393 - C134 * C60395 + C152711 * C60396) *
               C59417) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C2427 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C2428 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C152873) *
              C152512 * C152914 +
          ((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
               C152457 * C2428 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C2427 -
           (C8235 * C59417 + C6861 * C59416 + C2914 * C59415 + C729 * C59414) *
               C152457 * C152873) *
              C152512 * C152897 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C2427 -
           (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
               C152457 * C2428 +
           (C730 * C59414 + C2913 * C59415 + C6862 * C59416 +
            (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                C59417) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C2427 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C2428 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C152873) *
              C152917 +
          ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 + C8950 * C59417) *
               C152457 * C2428 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C2427 -
           (C60561 * C59417 + C8236 * C59416 + C8233 * C59415 +
            C8232 * C59414) *
               C152457 * C152873) *
              C152901 +
          ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C2427 -
           (C61026 * C59417 + C8950 * C59416 + C8234 * C59415 +
            C7577 * C59414) *
               C152457 * C2428 +
           (C8233 * C59414 + C8236 * C59415 + C60561 * C59416 +
            (C134 * C60551 - C135 * C60550 - C134 * C60552 + C152711 * C60553) *
                C59417) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
            C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
            C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
               C51243 +
           (C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407 +
            C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
            C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740) *
               C152747) *
              C152457 * C152530 * C152512 * C129 -
          ((C15194 + C15195 + C15196) * C152747 +
           (C14894 + C14893 + C14892) * C51243) *
              C152457 * C152530 * C152512 * C130 +
          ((C14897 + C14896 + C14895) * C51243 +
           (C15200 + C15201 + C15202) * C152747) *
              C152457 * C152530 * C152512 * C131 -
          ((C15720 + C15721 + C15722) * C152747 +
           (C14900 + C14899 + C14898) * C51243) *
              C152457 * C152530 * C152512 * C132 +
          ((C14903 + C14902 + C14901) * C51243 +
           (C14813 * C396 - C14814 * C376 - C14813 * C397 + C14810 * C412 +
            C14815 * C1241 - C14816 * C1231 - C14815 * C1242 + C14811 * C1249 +
            C14817 * C2890 - C14818 * C2889 - C14817 * C2891 + C14812 * C2892) *
               C152747) *
              C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152530 * C152917 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C152530 * C152901 +
           ((C65215 + C65214 + C65213) * C51243 +
            (C14813 * C1537 - C14814 * C1526 - C14813 * C1538 + C14810 * C1550 +
             C14815 * C2269 - C14816 * C2265 - C14815 * C2270 + C14811 * C2277 +
             C14817 * C8185 - C14818 * C8178 - C14817 * C8186 +
             C14812 * C8196) *
                C152747) *
               C152457 * C152530 * C152870) *
              C365 +
          (((C15196 + C15195 + C15194) * C51243 +
            (C15197 + C15198 + C15199) * C152747) *
               C152457 * C152530 * C152901 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C152530 * C152917 -
           ((C17040 + C17041 + C17042) * C152747 +
            (C15199 + C15198 + C15197) * C51243) *
               C152457 * C152530 * C152870) *
              C366 +
          (((C14897 + C14896 + C14895) * C51243 +
            (C15200 + C15201 + C15202) * C152747) *
               C152457 * C152530 * C152917 -
           ((C15203 + C15204 + C15205) * C152747 +
            (C15202 + C15201 + C15200) * C51243) *
               C152457 * C152530 * C152901 +
           ((C15205 + C15204 + C15203) * C51243 +
            (C14813 * C1533 - C14814 * C1524 - C14813 * C1534 + C14810 * C1548 +
             C14815 * C2273 - C14816 * C2267 - C14815 * C2274 + C14811 * C2279 +
             C14817 * C9823 - C14818 * C9822 - C14817 * C9824 +
             C14812 * C9825) *
                C152747) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152530 * C1429 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C152530 * C1430 +
           ((C65215 + C65214 + C65213) * C51243 +
            (C14813 * C1537 - C14814 * C1526 - C14813 * C1538 + C14810 * C1550 +
             C14815 * C2269 - C14816 * C2265 - C14815 * C2270 + C14811 * C2277 +
             C14817 * C8185 - C14818 * C8178 - C14817 * C8186 +
             C14812 * C8196) *
                C152747) *
               C152457 * C152530 * C152870) *
              C152914 +
          (((C15196 + C15195 + C15194) * C51243 +
            (C15197 + C15198 + C15199) * C152747) *
               C152457 * C152530 * C1430 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C152530 * C1429 -
           ((C17040 + C17041 + C17042) * C152747 +
            (C15199 + C15198 + C15197) * C51243) *
               C152457 * C152530 * C152870) *
              C152897 +
          (((C14897 + C14896 + C14895) * C51243 +
            (C15200 + C15201 + C15202) * C152747) *
               C152457 * C152530 * C1429 -
           ((C15203 + C15204 + C15205) * C152747 +
            (C15202 + C15201 + C15200) * C51243) *
               C152457 * C152530 * C1430 +
           ((C15205 + C15204 + C15203) * C51243 +
            (C14813 * C1533 - C14814 * C1524 - C14813 * C1534 + C14810 * C1548 +
             C14815 * C2273 - C14816 * C2267 - C14815 * C2274 + C14811 * C2279 +
             C14817 * C9823 - C14818 * C9822 - C14817 * C9824 +
             C14812 * C9825) *
                C152747) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
            C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
            C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
               C51243 +
           (C65210 + C65211 + C65212) * C152747) *
              C152457 * C152530 * C1517 -
          ((C65213 + C65214 + C65215) * C152747 +
           (C65212 + C65211 + C65210) * C51243) *
              C152457 * C152530 * C1518 +
          ((C65215 + C65214 + C65213) * C51243 +
           (C66509 + C66510 + C66511) * C152747) *
              C152457 * C152530 * C1519 -
          ((C66512 + C66513 + C66514) * C152747 +
           (C66511 + C66510 + C66509) * C51243) *
              C152457 * C152530 * C1520 +
          ((C66514 + C66513 + C66512) * C51243 +
           (C14813 * C7928 - C14814 * C7923 - C14813 * C7929 + C14810 * C7935 +
            C14815 * C8937 - C14816 * C8935 - C14815 * C8938 + C14811 * C8941 +
            C14817 * C60551 - C14818 * C60550 - C14817 * C60552 +
            C14812 * C60553) *
               C152747) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C2427 -
           ((C66130 + C66131 + C66132) * C152747 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C51243) *
               C152457 * C2428 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C51243 +
            (C66787 + C66788 + C66789) * C152747) *
               C152457 * C152873) *
              C152512 * C152914 +
          (((C15498 + C15497 + C15496) * C51243 +
            (C16264 + C16265 + C16266) * C152747) *
               C152457 * C2428 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C2427 -
           ((C18434 + C18435 + C18436) * C152747 +
            (C15501 + C15500 + C15499) * C51243) *
               C152457 * C152873) *
              C152512 * C152897 +
          (((C14897 + C14896 + C14895) * C51243 +
            (C15200 + C15201 + C15202) * C152747) *
               C152457 * C2427 -
           ((C16267 + C16268 + C16269) * C152747 +
            (C15504 + C15503 + C15502) * C51243) *
               C152457 * C2428 +
           ((C15507 + C15506 + C15505) * C51243 +
            (C14813 * C1715 - C14814 * C1702 - C14813 * C1716 + C14810 * C1738 +
             C14815 * C3217 - C14816 * C3211 - C14815 * C3218 + C14811 * C3223 +
             C14817 * C18412 - C14818 * C18411 - C14817 * C18413 +
             C14812 * C18414) *
                C152747) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C2427 -
           ((C66130 + C66131 + C66132) * C152747 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C51243) *
               C152457 * C2428 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C51243 +
            (C66787 + C66788 + C66789) * C152747) *
               C152457 * C152873) *
              C152917 +
          (((C66132 + C66131 + C66130) * C51243 +
            (C66790 + C66791 + C66792) * C152747) *
               C152457 * C2428 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C2427 -
           ((C66793 + C66794 + C66795) * C152747 +
            (C66789 + C66788 + C66787) * C51243) *
               C152457 * C152873) *
              C152901 +
          (((C65215 + C65214 + C65213) * C51243 +
            (C66509 + C66510 + C66511) * C152747) *
               C152457 * C2427 -
           ((C67492 + C67493 + C67494) * C152747 +
            (C66792 + C66791 + C66790) * C51243) *
               C152457 * C2428 +
           ((C66795 + C66794 + C66793) * C51243 +
            (C14813 * C8185 - C14814 * C8178 - C14813 * C8186 + C14810 * C8196 +
             C14815 * C10240 - C14816 * C10238 - C14815 * C10241 +
             C14811 * C10244 + C14817 * C61401 - C14818 * C61400 -
             C14817 * C61402 + C14812 * C61403) *
                C152747) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C4361 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152617) *
               C152828 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152617 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C4361) *
               C152575) *
              C152489 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152617 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C4361) *
               C152828 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C4361 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152617) *
               C152575) *
              C152498 +
          (((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
                C152457 * C4361 -
            (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
                C152457 * C152617) *
               C152828 +
           ((C1277 * C59414 + C2131 * C59415 + C7580 * C59416 +
             (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                 C59417) *
                C152457 * C152617 -
            (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
                C152457 * C4361) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C4361 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C152617) *
               C152828 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C152617 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C4361) *
               C152575) *
              C152489 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C152617 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C4361) *
               C152828 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C4361 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C152617) *
               C152575) *
              C152498 +
          (((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
                C4361 -
            ((C52118 + C52119) * C51247 + (C51721 + C51720) * C51246 +
             C51724 * C51245) *
                C152617) *
               C152828 +
           ((C52416 * C51245 + (C52415 + C52414) * C51246 +
             (C1279 * C51243 +
              (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                  C152747) *
                 C51247) *
                C152617 -
            ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
             C51492 * C51245) *
                C4361) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C51243 +
             (C65210 + C65211 + C65212) * C152747) *
                C152457 * C4361 -
            ((C66130 + C66131 + C66132) * C152747 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C51243) *
                C152457 * C152617) *
               C152828 +
           (((C66132 + C66131 + C66130) * C51243 +
             (C66790 + C66791 + C66792) * C152747) *
                C152457 * C152617 -
            ((C65213 + C65214 + C65215) * C152747 +
             (C65212 + C65211 + C65210) * C51243) *
                C152457 * C4361) *
               C152575) *
              C152489 +
          ((((C15498 + C15497 + C15496) * C51243 +
             (C16264 + C16265 + C16266) * C152747) *
                C152457 * C152617 -
            ((C15194 + C15195 + C15196) * C152747 +
             (C14894 + C14893 + C14892) * C51243) *
                C152457 * C4361) *
               C152828 +
           (((C15196 + C15195 + C15194) * C51243 +
             (C15197 + C15198 + C15199) * C152747) *
                C152457 * C4361 -
            ((C17351 + C17352 + C17353) * C152747 +
             (C16266 + C16265 + C16264) * C51243) *
                C152457 * C152617) *
               C152575) *
              C152498 +
          ((((C14897 + C14896 + C14895) * C51243 +
             (C15200 + C15201 + C15202) * C152747) *
                C152457 * C4361 -
            ((C16267 + C16268 + C16269) * C152747 +
             (C15504 + C15503 + C15502) * C51243) *
                C152457 * C152617) *
               C152828 +
           (((C16269 + C16268 + C16267) * C51243 +
             (C14813 * C1723 - C14814 * C1706 - C14813 * C1724 +
              C14810 * C1742 + C14815 * C1733 - C14816 * C1711 -
              C14815 * C1734 + C14811 * C1747 + C14817 * C10024 -
              C14818 * C10023 - C14817 * C10025 + C14812 * C10026) *
                 C152747) *
                C152457 * C152617 -
            ((C15203 + C15204 + C15205) * C152747 +
             (C15202 + C15201 + C15200) * C51243) *
                C152457 * C4361) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C152613 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152620 +
            ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C59414 +
             C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
                C152457 * C5033) *
               C152828 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152620 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C152613 -
            (C60561 * C59417 + C8236 * C59416 + C8233 * C59415 +
             C8232 * C59414) *
                C152457 * C5033) *
               C152575) *
              C3495 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152620 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C152613 -
            (C8235 * C59417 + C6861 * C59416 + C2914 * C59415 + C729 * C59414) *
                C152457 * C5033) *
               C152828 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C152613 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152620 +
            (C2914 * C59414 + C6861 * C59415 + C8235 * C59416 +
             (C134 * C8193 - C135 * C8182 - C134 * C8194 + C152711 * C8200) *
                 C59417) *
                C152457 * C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C152613 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C152620 +
            (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                  C51243 +
              C8232 * C152747) *
                 C51245 +
             (C51716 + C51717) * C51246 + C51725 * C51247) *
                C5033) *
               C152828 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C152620 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C152613 -
            ((C54509 + C54510) * C51247 + (C54511 + C54512) * C51246 +
             (C8233 * C152747 + C8232 * C51243) * C51245) *
                C5033) *
               C152575) *
              C3495 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C152620 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C152613 -
            ((C51722 + C51723) * C51247 + (C51719 + C51718) * C51246 +
             (C51717 + C51716) * C51245) *
                C5033) *
               C152828 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C152613 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C152620 +
            ((C54512 + C54511) * C51245 + (C54510 + C54509) * C51246 +
             (C2912 * C51243 +
              (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                  C152747) *
                 C51247) *
                C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C51243 +
             (C65210 + C65211 + C65212) * C152747) *
                C152457 * C152613 -
            ((C66130 + C66131 + C66132) * C152747 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C51243) *
                C152457 * C152620 +
            ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
              C14815 * C2677 - C14816 * C2666 - C14815 * C2678 +
              C14811 * C2690 + C14817 * C2679 - C14818 * C2667 -
              C14817 * C2680 + C14812 * C2691) *
                 C51243 +
             (C66787 + C66788 + C66789) * C152747) *
                C152457 * C5033) *
               C152828 +
           (((C66132 + C66131 + C66130) * C51243 +
             (C66790 + C66791 + C66792) * C152747) *
                C152457 * C152620 -
            ((C65213 + C65214 + C65215) * C152747 +
             (C65212 + C65211 + C65210) * C51243) *
                C152457 * C152613 -
            ((C66793 + C66794 + C66795) * C152747 +
             (C66789 + C66788 + C66787) * C51243) *
                C152457 * C5033) *
               C152575) *
              C3495 +
          ((((C15498 + C15497 + C15496) * C51243 +
             (C16264 + C16265 + C16266) * C152747) *
                C152457 * C152620 -
            ((C15194 + C15195 + C15196) * C152747 +
             (C14894 + C14893 + C14892) * C51243) *
                C152457 * C152613 -
            ((C18434 + C18435 + C18436) * C152747 +
             (C15501 + C15500 + C15499) * C51243) *
                C152457 * C5033) *
               C152828 +
           (((C15196 + C15195 + C15194) * C51243 +
             (C15197 + C15198 + C15199) * C152747) *
                C152457 * C152613 -
            ((C17351 + C17352 + C17353) * C152747 +
             (C16266 + C16265 + C16264) * C51243) *
                C152457 * C152620 +
            ((C18436 + C18435 + C18434) * C51243 +
             (C14813 * C1731 - C14814 * C1710 - C14813 * C1732 +
              C14810 * C1746 + C14815 * C9514 - C14816 * C9508 -
              C14815 * C9515 + C14811 * C9526 + C14817 * C9524 -
              C14818 * C9513 - C14817 * C9525 + C14812 * C9531) *
                 C152747) *
                C152457 * C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                     C51243 +
                 C6614 * C152747) *
                    C51245 +
                (C51249 + C51250) * C51246 + C51259 * C51247) *
                   C4361 -
               (C51724 * C51247 + (C51714 + C51715) * C51246 +
                (C7578 * C152747 +
                 (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                     C51243) *
                    C51245) *
                   C152617) *
                  C152512 * C152923 +
              (((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
                C52117 * C51247) *
                   C152617 -
               (C51260 * C51247 + (C51252 + C51251) * C51246 +
                (C51250 + C51249) * C51245) *
                   C4361) *
                  C152512 * C152916 +
              ((C51259 * C51245 + (C51254 + C51253) * C51246 +
                C51261 * C51247) *
                   C4361 -
               ((C52118 + C52119) * C51247 + (C51721 + C51720) * C51246 +
                C51724 * C51245) *
                   C152617) *
                  C152512 * C152899 +
              ((C52117 * C51245 + (C52119 + C52118) * C51246 +
                (C1032 * C51243 + (C134 * C1243 - C135 * C1232 - C134 * C1244 +
                                   C152711 * C1250) *
                                      C152747) *
                    C51247) *
                   C152617 -
               ((C51257 + C51258) * C51247 + (C51256 + C51255) * C51246 +
                C51260 * C51245) *
                   C4361) *
                  C152512 * C152874) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                      C51243 +
                  C6614 * C152747) *
                     C51245 +
                 (C51249 + C51250) * C51246 + C51259 * C51247) *
                    C4361 -
                (C51724 * C51247 + (C51714 + C51715) * C51246 +
                 (C7578 * C152747 +
                  (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                      C51243) *
                     C51245) *
                    C152617) *
                   C152917 +
               (((C7578 * C51243 + C7577 * C152747) * C51245 +
                 (C52410 + C52411) * C51246 + C52416 * C51247) *
                    C152617 -
                (C51492 * C51247 + (C51482 + C51483) * C51246 +
                 (C6615 * C152747 + C6614 * C51243) * C51245) *
                    C4361) *
                   C152901 +
               (((C6615 * C51243 + C6616 * C152747) * C51245 +
                 (C51484 + C51485) * C51246 + C51493 * C51247) *
                    C4361 -
                ((C53463 + C53464) * C51247 + (C53465 + C53466) * C51246 +
                 (C8234 * C152747 + C7577 * C51243) * C51245) *
                    C152617) *
                   C152870) *
                  C3495 +
              ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
                 C52117 * C51247) *
                    C152617 -
                (C51260 * C51247 + (C51252 + C51251) * C51246 +
                 (C51250 + C51249) * C51245) *
                    C4361) *
                   C152917 +
               (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
                 C51920 * C51247) *
                    C4361 -
                ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
                 (C52411 + C52410) * C51245) *
                    C152617) *
                   C152901 +
               (((C53466 + C53465) * C51245 + (C53464 + C53463) * C51246 +
                 (C2130 * C51243 + (C134 * C2275 - C135 * C2268 - C134 * C2276 +
                                    C152711 * C2280) *
                                       C152747) *
                     C51247) *
                    C152617 -
                ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
                 (C51485 + C51484) * C51245) *
                    C4361) *
                   C152870) *
                  C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152925 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C152922 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C51243 +
             C8232 * C152747) *
                C51245 +
            (C51716 + C51717) * C51246 + C51725 * C51247) *
               C152909 -
           ((C54707 + C54708) * C51247 + (C54709 + C54710) * C51246 +
            (C10260 * C152747 +
             (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                 C51243) *
                C51245) *
               C152886) *
              C152512 * C3495 +
          (((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
            C52117 * C51247) *
               C152922 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152925 -
           ((C51722 + C51723) * C51247 + (C51719 + C51718) * C51246 +
            (C51717 + C51716) * C51245) *
               C152909 +
           ((C54710 + C54709) * C51245 + (C54708 + C54707) * C51246 +
            (C3074 * C51243 +
             (C134 * C3219 - C135 * C3212 - C134 * C3220 + C152711 * C3224) *
                 C152747) *
                C51247) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C4361 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152617) *
              C152512 * C152923 +
          ((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
               C152457 * C152617 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C4361) *
              C152512 * C152916 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C4361 -
           (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
               C152457 * C152617) *
              C152512 * C152899 +
          ((C726 * C59414 + C1278 * C59415 + C2130 * C59416 +
            (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                C59417) *
               C152457 * C152617 -
           (C1908 * C59417 + C470 * C59416 + C465 * C59415 + C207 * C59414) *
               C152457 * C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C4361 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152617) *
               C152917 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152617 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C4361) *
               C152901 +
           ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 +
             C7959 * C59417) *
                C152457 * C4361 -
            (C61026 * C59417 + C8950 * C59416 + C8234 * C59415 +
             C7577 * C59414) *
                C152457 * C152617) *
               C152870) *
              C3495 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152617 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C4361) *
               C152917 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C4361 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152617) *
               C152901 +
           ((C2132 * C59414 + C7579 * C59415 + C8740 * C59416 +
             (C134 * C8939 - C135 * C8936 - C134 * C8940 + C152711 * C8942) *
                 C59417) *
                C152457 * C152617 -
            (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
                C152457 * C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152925 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152922 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C152909 -
           (C61869 * C59417 + C10259 * C59416 + C10260 * C59415 +
            (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                C59414) *
               C152457 * C152886) *
              C152512 * C3495 +
          ((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
               C152457 * C152922 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152925 -
           (C8235 * C59417 + C6861 * C59416 + C2914 * C59415 + C729 * C59414) *
               C152457 * C152909 +
           (C3076 * C59414 + C10042 * C59415 + C10041 * C59416 +
            (C134 * C10242 - C135 * C10239 - C134 * C10243 + C152711 * C10245) *
                C59417) *
               C152457 * C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C4361 -
           ((C66130 + C66131 + C66132) * C152747 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C51243) *
               C152457 * C152617) *
              C152512 * C152923 +
          (((C15498 + C15497 + C15496) * C51243 +
            (C16264 + C16265 + C16266) * C152747) *
               C152457 * C152617 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C4361) *
              C152512 * C152916 +
          (((C14897 + C14896 + C14895) * C51243 +
            (C15200 + C15201 + C15202) * C152747) *
               C152457 * C4361 -
           ((C16267 + C16268 + C16269) * C152747 +
            (C15504 + C15503 + C15502) * C51243) *
               C152457 * C152617) *
              C152512 * C152899 +
          (((C15937 + C15936 + C15935) * C51243 +
            (C14813 * C1239 - C14814 * C1230 - C14813 * C1240 + C14810 * C1248 +
             C14815 * C1713 - C14816 * C1701 - C14815 * C1714 + C14811 * C1737 +
             C14817 * C3219 - C14818 * C3212 - C14817 * C3220 +
             C14812 * C3224) *
                C152747) *
               C152457 * C152617 -
           ((C15720 + C15721 + C15722) * C152747 +
            (C14900 + C14899 + C14898) * C51243) *
               C152457 * C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C51243 +
             (C65210 + C65211 + C65212) * C152747) *
                C152457 * C4361 -
            ((C66130 + C66131 + C66132) * C152747 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C51243) *
                C152457 * C152617) *
               C152917 +
           (((C66132 + C66131 + C66130) * C51243 +
             (C66790 + C66791 + C66792) * C152747) *
                C152457 * C152617 -
            ((C65213 + C65214 + C65215) * C152747 +
             (C65212 + C65211 + C65210) * C51243) *
                C152457 * C4361) *
               C152901 +
           (((C65215 + C65214 + C65213) * C51243 +
             (C66509 + C66510 + C66511) * C152747) *
                C152457 * C4361 -
            ((C67492 + C67493 + C67494) * C152747 +
             (C66792 + C66791 + C66790) * C51243) *
                C152457 * C152617) *
               C152870) *
              C3495 +
          ((((C15498 + C15497 + C15496) * C51243 +
             (C16264 + C16265 + C16266) * C152747) *
                C152457 * C152617 -
            ((C15194 + C15195 + C15196) * C152747 +
             (C14894 + C14893 + C14892) * C51243) *
                C152457 * C4361) *
               C152917 +
           (((C15196 + C15195 + C15194) * C51243 +
             (C15197 + C15198 + C15199) * C152747) *
                C152457 * C4361 -
            ((C17351 + C17352 + C17353) * C152747 +
             (C16266 + C16265 + C16264) * C51243) *
                C152457 * C152617) *
               C152901 +
           (((C17353 + C17352 + C17351) * C51243 +
             (C14813 * C2271 - C14814 * C2266 - C14813 * C2272 +
              C14810 * C2278 + C14815 * C8183 - C14816 * C8177 -
              C14815 * C8184 + C14811 * C8195 + C14817 * C10242 -
              C14818 * C10239 - C14817 * C10243 + C14812 * C10245) *
                 C152747) *
                C152457 * C152617 -
            ((C17040 + C17041 + C17042) * C152747 +
             (C15199 + C15198 + C15197) * C51243) *
                C152457 * C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152925 -
           ((C66130 + C66131 + C66132) * C152747 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C51243) *
               C152457 * C152922 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C51243 +
            (C66787 + C66788 + C66789) * C152747) *
               C152457 * C152909 -
           ((C68757 + C68758 + C68759) * C152747 +
            (C14817 * C18111 - C14818 * C18106 - C14817 * C18112 +
             C14812 * C18118 + C14815 * C2679 - C14816 * C2667 -
             C14815 * C2680 + C14811 * C2691 + C14813 * C2677 - C14814 * C2666 -
             C14813 * C2678 + C14810 * C2690) *
                C51243) *
               C152457 * C152886) *
              C152512 * C3495 +
          (((C15498 + C15497 + C15496) * C51243 +
            (C16264 + C16265 + C16266) * C152747) *
               C152457 * C152922 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C152925 -
           ((C18434 + C18435 + C18436) * C152747 +
            (C15501 + C15500 + C15499) * C51243) *
               C152457 * C152909 +
           ((C18655 + C18654 + C18653) * C51243 +
            (C14813 * C3215 - C14814 * C3210 - C14813 * C3216 + C14810 * C3222 +
             C14815 * C9522 - C14816 * C9512 - C14815 * C9523 + C14811 * C9530 +
             C14817 * C18853 - C14818 * C18850 - C14817 * C18854 +
             C14812 * C18856) *
                C152747) *
               C152457 * C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152613 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152620 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C5033) *
              C152512 * C152489 +
          ((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
               C152457 * C152620 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152613 -
           (C8235 * C59417 + C6861 * C59416 + C2914 * C59415 + C729 * C59414) *
               C152457 * C5033) *
              C152512 * C152498 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152613 -
           (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
               C152457 * C152620 +
           (C730 * C59414 + C2913 * C59415 + C6862 * C59416 +
            (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                C59417) *
               C152457 * C5033) *
              C152512 * C3842)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152613 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C152620 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C51243 +
             C8232 * C152747) *
                C51245 +
            (C51716 + C51717) * C51246 + C51725 * C51247) *
               C5033) *
              C152512 * C152489 +
          (((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
            C52117 * C51247) *
               C152620 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152613 -
           ((C51722 + C51723) * C51247 + (C51719 + C51718) * C51246 +
            (C51717 + C51716) * C51245) *
               C5033) *
              C152512 * C152498 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152613 -
           ((C52118 + C52119) * C51247 + (C51721 + C51720) * C51246 +
            C51724 * C51245) *
               C152620 +
           (C51725 * C51245 + (C51723 + C51722) * C51246 +
            (C733 * C51243 +
             (C134 * C2890 - C135 * C2889 - C134 * C2891 + C152711 * C2892) *
                 C152747) *
                C51247) *
               C5033) *
              C152512 * C3842)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152613 -
           ((C66130 + C66131 + C66132) * C152747 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C51243) *
               C152457 * C152620 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C51243 +
            (C66787 + C66788 + C66789) * C152747) *
               C152457 * C5033) *
              C152512 * C152489 +
          (((C15498 + C15497 + C15496) * C51243 +
            (C16264 + C16265 + C16266) * C152747) *
               C152457 * C152620 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C152613 -
           ((C18434 + C18435 + C18436) * C152747 +
            (C15501 + C15500 + C15499) * C51243) *
               C152457 * C5033) *
              C152512 * C152498 +
          (((C14897 + C14896 + C14895) * C51243 +
            (C15200 + C15201 + C15202) * C152747) *
               C152457 * C152613 -
           ((C16267 + C16268 + C16269) * C152747 +
            (C15504 + C15503 + C15502) * C51243) *
               C152457 * C152620 +
           ((C15507 + C15506 + C15505) * C51243 +
            (C14813 * C1715 - C14814 * C1702 - C14813 * C1716 + C14810 * C1738 +
             C14815 * C3217 - C14816 * C3211 - C14815 * C3218 + C14811 * C3223 +
             C14817 * C18412 - C14818 * C18411 - C14817 * C18413 +
             C14812 * C18414) *
                C152747) *
               C152457 * C5033) *
              C152512 * C3842)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C4361 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C152617) *
               C152917 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C152617 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C4361) *
               C152901 +
           (((C6615 * C51243 + C6616 * C152747) * C51245 +
             (C51484 + C51485) * C51246 + C51493 * C51247) *
                C4361 -
            ((C53463 + C53464) * C51247 + (C53465 + C53466) * C51246 +
             (C8234 * C152747 + C7577 * C51243) * C51245) *
                C152617) *
               C152870) *
              C3495 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C152617 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C4361) *
               C152917 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C4361 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C152617) *
               C152901 +
           (((C53466 + C53465) * C51245 + (C53464 + C53463) * C51246 +
             (C2130 * C51243 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C152747) *
                 C51247) *
                C152617 -
            ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
             (C51485 + C51484) * C51245) *
                C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C4361 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C152617) *
              C152512 * C152923 +
          (((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
            C52117 * C51247) *
               C152617 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C4361) *
              C152512 * C152916 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C4361 -
           ((C52118 + C52119) * C51247 + (C51721 + C51720) * C51246 +
            C51724 * C51245) *
               C152617) *
              C152512 * C152899 +
          ((C52117 * C51245 + (C52119 + C52118) * C51246 +
            (C1032 * C51243 +
             (C134 * C1243 - C135 * C1232 - C134 * C1244 + C152711 * C1250) *
                 C152747) *
                C51247) *
               C152617 -
           ((C51257 + C51258) * C51247 + (C51256 + C51255) * C51246 +
            C51260 * C51245) *
               C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C4361 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152617) *
              C152512 * C152923 +
          ((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
               C152457 * C152617 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C4361) *
              C152512 * C152916 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C4361 -
           (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
               C152457 * C152617) *
              C152512 * C152899 +
          ((C726 * C59414 + C1278 * C59415 + C2130 * C59416 +
            (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                C59417) *
               C152457 * C152617 -
           (C1908 * C59417 + C470 * C59416 + C465 * C59415 + C207 * C59414) *
               C152457 * C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C4361 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152617) *
               C152917 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152617 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C4361) *
               C152901 +
           ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 +
             C7959 * C59417) *
                C152457 * C4361 -
            (C61026 * C59417 + C8950 * C59416 + C8234 * C59415 +
             C7577 * C59414) *
                C152457 * C152617) *
               C152870) *
              C3495 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152617 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C4361) *
               C152917 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C4361 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152617) *
               C152901 +
           ((C2132 * C59414 + C7579 * C59415 + C8740 * C59416 +
             (C134 * C8939 - C135 * C8936 - C134 * C8940 + C152711 * C8942) *
                 C59417) *
                C152457 * C152617 -
            (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
                C152457 * C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C4361 -
           ((C66130 + C66131 + C66132) * C152747 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C51243) *
               C152457 * C152617) *
              C152512 * C152923 +
          (((C15498 + C15497 + C15496) * C51243 +
            (C16264 + C16265 + C16266) * C152747) *
               C152457 * C152617 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C4361) *
              C152512 * C152916 +
          (((C14897 + C14896 + C14895) * C51243 +
            (C15200 + C15201 + C15202) * C152747) *
               C152457 * C4361 -
           ((C16267 + C16268 + C16269) * C152747 +
            (C15504 + C15503 + C15502) * C51243) *
               C152457 * C152617) *
              C152512 * C152899 +
          (((C15937 + C15936 + C15935) * C51243 +
            (C14813 * C1239 - C14814 * C1230 - C14813 * C1240 + C14810 * C1248 +
             C14815 * C1713 - C14816 * C1701 - C14815 * C1714 + C14811 * C1737 +
             C14817 * C3219 - C14818 * C3212 - C14817 * C3220 +
             C14812 * C3224) *
                C152747) *
               C152457 * C152617 -
           ((C15720 + C15721 + C15722) * C152747 +
            (C14900 + C14899 + C14898) * C51243) *
               C152457 * C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C51243 +
             (C65210 + C65211 + C65212) * C152747) *
                C152457 * C4361 -
            ((C66130 + C66131 + C66132) * C152747 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C51243) *
                C152457 * C152617) *
               C152917 +
           (((C66132 + C66131 + C66130) * C51243 +
             (C66790 + C66791 + C66792) * C152747) *
                C152457 * C152617 -
            ((C65213 + C65214 + C65215) * C152747 +
             (C65212 + C65211 + C65210) * C51243) *
                C152457 * C4361) *
               C152901 +
           (((C65215 + C65214 + C65213) * C51243 +
             (C66509 + C66510 + C66511) * C152747) *
                C152457 * C4361 -
            ((C67492 + C67493 + C67494) * C152747 +
             (C66792 + C66791 + C66790) * C51243) *
                C152457 * C152617) *
               C152870) *
              C3495 +
          ((((C15498 + C15497 + C15496) * C51243 +
             (C16264 + C16265 + C16266) * C152747) *
                C152457 * C152617 -
            ((C15194 + C15195 + C15196) * C152747 +
             (C14894 + C14893 + C14892) * C51243) *
                C152457 * C4361) *
               C152917 +
           (((C15196 + C15195 + C15194) * C51243 +
             (C15197 + C15198 + C15199) * C152747) *
                C152457 * C4361 -
            ((C17351 + C17352 + C17353) * C152747 +
             (C16266 + C16265 + C16264) * C51243) *
                C152457 * C152617) *
               C152901 +
           (((C17353 + C17352 + C17351) * C51243 +
             (C14813 * C2271 - C14814 * C2266 - C14813 * C2272 +
              C14810 * C2278 + C14815 * C8183 - C14816 * C8177 -
              C14815 * C8184 + C14811 * C8195 + C14817 * C10242 -
              C14818 * C10239 - C14817 * C10243 + C14812 * C10245) *
                 C152747) *
                C152457 * C152617 -
            ((C17040 + C17041 + C17042) * C152747 +
             (C15199 + C15198 + C15197) * C51243) *
                C152457 * C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152530 * C1879 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152530 * C1880 +
           ((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152530 * C1881 -
           ((C53169 + C53170) * C51247 + (C53171 + C53172) * C51246 +
            (C7957 * C152747 + C6616 * C51243) * C51245) *
               C152530 * C152880) *
              C152814 +
          (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
            C51920 * C51247) *
               C152530 * C1880 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152530 * C1879 -
           ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
            (C51485 + C51484) * C51245) *
               C152530 * C1881 +
           ((C53172 + C53171) * C51245 + (C53170 + C53169) * C51246 +
            (C1908 * C51243 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C152747) *
                C51247) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152530 * C152828 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152530 * C152575) *
              C873 +
          (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
            C51920 * C51247) *
               C152530 * C152575 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152530 * C152828) *
              C874 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152530 * C152828 -
           ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
            C51492 * C51245) *
               C152530 * C152575) *
              C875 +
          ((C51920 * C51245 + (C51922 + C51921) * C51246 +
            (C888 * C51243 +
             (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                 C152747) *
                C51247) *
               C152530 * C152575 -
           ((C51257 + C51258) * C51247 + (C51256 + C51255) * C51246 +
            C51260 * C51245) *
               C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C152828 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C152575) *
              C873 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C152575 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C152828) *
              C874 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152530 * C152828 -
           (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
               C152457 * C152530 * C152575) *
              C875 +
          ((C465 * C59414 + C470 * C59415 + C1908 * C59416 +
            (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                C59417) *
               C152457 * C152530 * C152575 -
           (C1908 * C59417 + C470 * C59416 + C465 * C59415 + C207 * C59414) *
               C152457 * C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C1879 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C1880 +
           (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152530 * C1881 -
           (C60404 * C59417 + C7959 * C59416 + C7957 * C59415 +
            C6616 * C59414) *
               C152457 * C152530 * C152880) *
              C152814 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C1880 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C1879 -
           (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
               C152457 * C152530 * C1881 +
           (C1910 * C59414 + C6617 * C59415 + C7958 * C59416 +
            (C134 * C7932 - C135 * C7925 - C134 * C7933 + C152711 * C7937) *
                C59417) *
               C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152530 * C152828 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C152530 * C152575) *
              C873 +
          (((C15196 + C15195 + C15194) * C51243 +
            (C15197 + C15198 + C15199) * C152747) *
               C152457 * C152530 * C152575 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C152530 * C152828) *
              C874 +
          (((C14897 + C14896 + C14895) * C51243 +
            (C15200 + C15201 + C15202) * C152747) *
               C152457 * C152530 * C152828 -
           ((C15203 + C15204 + C15205) * C152747 +
            (C15202 + C15201 + C15200) * C51243) *
               C152457 * C152530 * C152575) *
              C875 +
          (((C15722 + C15721 + C15720) * C51243 +
            (C14813 * C394 - C14814 * C375 - C14813 * C395 + C14810 * C411 +
             C14815 * C1721 - C14816 * C1705 - C14815 * C1722 + C14811 * C1741 +
             C14817 * C1735 - C14818 * C1712 - C14817 * C1736 +
             C14812 * C1748) *
                C152747) *
               C152457 * C152530 * C152575 -
           ((C15720 + C15721 + C15722) * C152747 +
            (C14900 + C14899 + C14898) * C51243) *
               C152457 * C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152530 * C1879 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C152530 * C1880 +
           ((C65215 + C65214 + C65213) * C51243 +
            (C66509 + C66510 + C66511) * C152747) *
               C152457 * C152530 * C1881 -
           ((C66512 + C66513 + C66514) * C152747 +
            (C66511 + C66510 + C66509) * C51243) *
               C152457 * C152530 * C152880) *
              C152814 +
          (((C15196 + C15195 + C15194) * C51243 +
            (C15197 + C15198 + C15199) * C152747) *
               C152457 * C152530 * C1880 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C152530 * C1879 -
           ((C17040 + C17041 + C17042) * C152747 +
            (C15199 + C15198 + C15197) * C51243) *
               C152457 * C152530 * C1881 +
           ((C17042 + C17041 + C17040) * C51243 +
            (C14813 * C1541 - C14814 * C1528 - C14813 * C1542 + C14810 * C1552 +
             C14815 * C8187 - C14816 * C8179 - C14815 * C8188 + C14811 * C8197 +
             C14817 * C8193 - C14818 * C8182 - C14817 * C8194 +
             C14812 * C8200) *
                C152747) *
               C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152829 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C152617) *
              C1879 +
          (((C7578 * C51243 + C7577 * C152747) * C51245 +
            (C52410 + C52411) * C51246 + C52416 * C51247) *
               C152617 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152829) *
              C1880 +
          (((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152829 -
           ((C53463 + C53464) * C51247 + (C53465 + C53466) * C51246 +
            (C8234 * C152747 + C7577 * C51243) * C51245) *
               C152617) *
              C1881 +
          (((C8234 * C51243 + C8950 * C152747) * C51245 +
            (C7579 * C51243 + C8740 * C152747) * C51246 +
            (C7580 * C51243 +
             (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                 C152747) *
                C51247) *
               C152617 -
           ((C53169 + C53170) * C51247 + (C53171 + C53172) * C51246 +
            (C7957 * C152747 + C6616 * C51243) * C51245) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C152829 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C152617) *
               C152828 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C152617 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C152829) *
               C152575) *
              C365 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C152617 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C152829) *
               C152828 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C152829 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C152617) *
               C152575) *
              C366 +
          (((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
                C152829 -
            ((C52118 + C52119) * C51247 + (C51721 + C51720) * C51246 +
             C51724 * C51245) *
                C152617) *
               C152828 +
           ((C52416 * C51245 + (C52415 + C52414) * C51246 +
             (C1279 * C51243 +
              (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                  C152747) *
                 C51247) *
                C152617 -
            ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
             C51492 * C51245) *
                C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C152829 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152617) *
               C152828 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152617 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C152829) *
               C152575) *
              C365 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152617 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C152829) *
               C152828 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C152829 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152617) *
               C152575) *
              C366 +
          (((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
                C152457 * C152829 -
            (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
                C152457 * C152617) *
               C152828 +
           ((C1277 * C59414 + C2131 * C59415 + C7580 * C59416 +
             (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                 C59417) *
                C152457 * C152617 -
            (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
                C152457 * C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152829 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152617) *
              C1879 +
          ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 + C8950 * C59417) *
               C152457 * C152617 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152829) *
              C1880 +
          ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152829 -
           (C61026 * C59417 + C8950 * C59416 + C8234 * C59415 +
            C7577 * C59414) *
               C152457 * C152617) *
              C1881 +
          ((C8234 * C59414 + C8950 * C59415 + C61026 * C59416 +
            (C134 * C61016 - C135 * C61015 - C134 * C61017 + C152711 * C61018) *
                C59417) *
               C152457 * C152617 -
           (C60404 * C59417 + C7959 * C59416 + C7957 * C59415 +
            C6616 * C59414) *
               C152457 * C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C51243 +
             (C65210 + C65211 + C65212) * C152747) *
                C152457 * C152829 -
            ((C66130 + C66131 + C66132) * C152747 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C51243) *
                C152457 * C152617) *
               C152828 +
           (((C66132 + C66131 + C66130) * C51243 +
             (C14813 * C1727 - C14814 * C1708 - C14813 * C1728 +
              C14810 * C1744 + C14815 * C1729 - C14816 * C1709 -
              C14815 * C1730 + C14811 * C1745 + C14817 * C9516 -
              C14818 * C9509 - C14817 * C9517 + C14812 * C9527) *
                 C152747) *
                C152457 * C152617 -
            ((C65213 + C65214 + C65215) * C152747 +
             (C65212 + C65211 + C65210) * C51243) *
                C152457 * C152829) *
               C152575) *
              C365 +
          ((((C15498 + C15497 + C15496) * C51243 +
             (C16264 + C16265 + C16266) * C152747) *
                C152457 * C152617 -
            ((C15194 + C15195 + C15196) * C152747 +
             (C14894 + C14893 + C14892) * C51243) *
                C152457 * C152829) *
               C152828 +
           (((C15196 + C15195 + C15194) * C51243 +
             (C15197 + C15198 + C15199) * C152747) *
                C152457 * C152829 -
            ((C17351 + C17352 + C17353) * C152747 +
             (C16266 + C16265 + C16264) * C51243) *
                C152457 * C152617) *
               C152575) *
              C366 +
          ((((C14897 + C14896 + C14895) * C51243 +
             (C15200 + C15201 + C15202) * C152747) *
                C152457 * C152829 -
            ((C16267 + C16268 + C16269) * C152747 +
             (C15504 + C15503 + C15502) * C51243) *
                C152457 * C152617) *
               C152828 +
           (((C16269 + C16268 + C16267) * C51243 +
             (C14813 * C1723 - C14814 * C1706 - C14813 * C1724 +
              C14810 * C1742 + C14815 * C1733 - C14816 * C1711 -
              C14815 * C1734 + C14811 * C1747 + C14817 * C10024 -
              C14818 * C10023 - C14817 * C10025 + C14812 * C10026) *
                 C152747) *
                C152457 * C152617 -
            ((C15203 + C15204 + C15205) * C152747 +
             (C15202 + C15201 + C15200) * C51243) *
                C152457 * C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152829 -
           ((C66130 + C66131 + C66132) * C152747 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C51243) *
               C152457 * C152617) *
              C1879 +
          (((C66132 + C66131 + C66130) * C51243 +
            (C66790 + C66791 + C66792) * C152747) *
               C152457 * C152617 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C152829) *
              C1880 +
          (((C65215 + C65214 + C65213) * C51243 +
            (C66509 + C66510 + C66511) * C152747) *
               C152457 * C152829 -
           ((C67492 + C67493 + C67494) * C152747 +
            (C66792 + C66791 + C66790) * C51243) *
               C152457 * C152617) *
              C1881 +
          (((C67494 + C67493 + C67492) * C51243 +
            (C14813 * C8189 - C14814 * C8180 - C14813 * C8190 + C14810 * C8198 +
             C14815 * C8191 - C14816 * C8181 - C14815 * C8192 + C14811 * C8199 +
             C14817 * C61859 - C14818 * C61858 - C14817 * C61860 +
             C14812 * C61861) *
                C152747) *
               C152457 * C152617 -
           ((C66512 + C66513 + C66514) * C152747 +
            (C66511 + C66510 + C66509) * C51243) *
               C152457 * C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                    C51243 +
                C6614 * C152747) *
                   C51245 +
               (C51249 + C51250) * C51246 + C51259 * C51247) *
                  C152530 * C152512 * C129 -
              (C51260 * C51247 + (C51252 + C51251) * C51246 +
               (C51250 + C51249) * C51245) *
                  C152530 * C152512 * C130 +
              (C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
                  C152530 * C152512 * C131 -
              ((C51257 + C51258) * C51247 + (C51256 + C51255) * C51246 +
               C51260 * C51245) *
                  C152530 * C152512 * C132 +
              (C51261 * C51245 + (C51258 + C51257) * C51246 +
               (C210 * C51243 +
                (C134 * C878 - C135 * C877 - C134 * C879 + C152711 * C880) *
                    C152747) *
                   C51247) *
                  C152530 * C152512 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                     C51243 +
                 C6614 * C152747) *
                    C51245 +
                (C51249 + C51250) * C51246 + C51259 * C51247) *
                   C152530 * C152917 -
               (C51492 * C51247 + (C51482 + C51483) * C51246 +
                (C6615 * C152747 + C6614 * C51243) * C51245) *
                   C152530 * C152901 +
               ((C6615 * C51243 + C6616 * C152747) * C51245 +
                (C51484 + C51485) * C51246 + C51493 * C51247) *
                   C152530 * C152870) *
                  C365 +
              (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
                (C51488 + C51489) * C51247) *
                   C152530 * C152901 -
               (C51260 * C51247 + (C51252 + C51251) * C51246 +
                (C51250 + C51249) * C51245) *
                   C152530 * C152917 -
               ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
                (C51485 + C51484) * C51245) *
                   C152530 * C152870) *
                  C366 +
              ((C51259 * C51245 + (C51254 + C51253) * C51246 +
                C51261 * C51247) *
                   C152530 * C152917 -
               ((C472 * C152747 + C471 * C51243) * C51247 +
                (C51489 + C51488) * C51246 + C51492 * C51245) *
                   C152530 * C152901 +
               (C51493 * C51245 + (C51491 + C51490) * C51246 +
                (C472 * C51243 + (C134 * C1886 - C135 * C1885 - C134 * C1887 +
                                  C152711 * C1888) *
                                     C152747) *
                    C51247) *
                   C152530 * C152870) *
                  C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152918 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C152903 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C51243 +
             C8232 * C152747) *
                C51245 +
            (C51716 + C51717) * C51246 + C51725 * C51247) *
               C152873) *
              C152512 * C365 +
          (((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
            (C51720 + C51721) * C51247) *
               C152903 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152918 -
           ((C51722 + C51723) * C51247 + (C51719 + C51718) * C51246 +
            (C51717 + C51716) * C51245) *
               C152873) *
              C152512 * C366 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152918 -
           ((C1279 * C152747 + C732 * C51243) * C51247 +
            (C51721 + C51720) * C51246 + C51724 * C51245) *
               C152903 +
           (C51725 * C51245 + (C51723 + C51722) * C51246 +
            (C733 * C51243 +
             (C134 * C2890 - C135 * C2889 - C134 * C2891 + C152711 * C2892) *
                 C152747) *
                C51247) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152530 * C1429 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152530 * C1430 +
           ((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152530 * C152870) *
              C152914 +
          (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
            C51920 * C51247) *
               C152530 * C1430 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152530 * C1429 -
           ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
            (C51485 + C51484) * C51245) *
               C152530 * C152870) *
              C152897 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152530 * C1429 -
           ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
            C51492 * C51245) *
               C152530 * C1430 +
           (C51493 * C51245 + (C51491 + C51490) * C51246 +
            (C472 * C51243 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C152747) *
                C51247) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C51243 +
            C6614 * C152747) *
               C51245 +
           (C51249 + C51250) * C51246 + C51259 * C51247) *
              C152530 * C1517 -
          (C51492 * C51247 + (C51482 + C51483) * C51246 +
           (C6615 * C152747 + C6614 * C51243) * C51245) *
              C152530 * C1518 +
          ((C6615 * C51243 + C6616 * C152747) * C51245 +
           (C51484 + C51485) * C51246 + C51493 * C51247) *
              C152530 * C1519 -
          ((C6618 * C152747 + C1909 * C51243) * C51247 +
           (C6617 * C152747 + C1910 * C51243) * C51246 +
           (C7957 * C152747 + C6616 * C51243) * C51245) *
              C152530 * C1520 +
          ((C7957 * C51243 + C7959 * C152747) * C51245 +
           (C6617 * C51243 + C7958 * C152747) * C51246 +
           (C6618 * C51243 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C152747) *
               C51247) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152918 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C152903 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C51243 +
             C8232 * C152747) *
                C51245 +
            (C51716 + C51717) * C51246 + C51725 * C51247) *
               C152873) *
              C1429 +
          (((C7578 * C51243 + C7577 * C152747) * C51245 +
            (C52410 + C52411) * C51246 + C52416 * C51247) *
               C152903 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152918 -
           ((C6862 * C152747 + C2913 * C51243) * C51247 +
            (C6861 * C152747 + C2914 * C51243) * C51246 +
            (C8233 * C152747 + C8232 * C51243) * C51245) *
               C152873) *
              C1430 +
          (((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152918 -
           ((C7580 * C152747 + C2131 * C51243) * C51247 +
            (C7579 * C152747 + C2132 * C51243) * C51246 +
            (C8234 * C152747 + C7577 * C51243) * C51245) *
               C152903 +
           ((C8233 * C51243 + C8236 * C152747) * C51245 +
            (C6861 * C51243 + C8235 * C152747) * C51246 +
            (C6862 * C51243 +
             (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                 C152747) *
                C51247) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C59414 +
           C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
              C152457 * C152530 * C152512 * C129 -
          (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
              C152457 * C152530 * C152512 * C130 +
          (C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
              C152457 * C152530 * C152512 * C131 -
          (C1908 * C59417 + C470 * C59416 + C465 * C59415 + C207 * C59414) *
              C152457 * C152530 * C152512 * C132 +
          (C208 * C59414 + C471 * C59415 + C472 * C59416 +
           (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
               C59417) *
              C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C152917 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C152901 +
           (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152530 * C152870) *
              C365 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C152901 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C152917 -
           (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
               C152457 * C152530 * C152870) *
              C366 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152530 * C152917 -
           (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
               C152457 * C152530 * C152901 +
           (C469 * C59414 + C1909 * C59415 + C6618 * C59416 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C59417) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152918 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152903 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C152873) *
              C152512 * C365 +
          ((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
               C152457 * C152903 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152918 -
           (C8235 * C59417 + C6861 * C59416 + C2914 * C59415 + C729 * C59414) *
               C152457 * C152873) *
              C152512 * C366 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152918 -
           (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
               C152457 * C152903 +
           (C730 * C59414 + C2913 * C59415 + C6862 * C59416 +
            (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                C59417) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C1429 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C1430 +
           (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152530 * C152870) *
              C152914 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C1430 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C1429 -
           (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
               C152457 * C152530 * C152870) *
              C152897 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152530 * C1429 -
           (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
               C152457 * C152530 * C1430 +
           (C469 * C59414 + C1909 * C59415 + C6618 * C59416 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C59417) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C59414 +
           C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
              C152457 * C152530 * C1517 -
          (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
              C152457 * C152530 * C1518 +
          (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
              C152457 * C152530 * C1519 -
          (C60404 * C59417 + C7959 * C59416 + C7957 * C59415 + C6616 * C59414) *
              C152457 * C152530 * C1520 +
          (C7957 * C59414 + C7959 * C59415 + C60404 * C59416 +
           (C134 * C60394 - C135 * C60393 - C134 * C60395 + C152711 * C60396) *
               C59417) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152918 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152903 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C152873) *
              C1429 +
          ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 + C8950 * C59417) *
               C152457 * C152903 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152918 -
           (C60561 * C59417 + C8236 * C59416 + C8233 * C59415 +
            C8232 * C59414) *
               C152457 * C152873) *
              C1430 +
          ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152918 -
           ((C134 * C8937 - C135 * C8935 - C134 * C8938 + C152711 * C8941) *
                C59417 +
            C8950 * C59416 + C8234 * C59415 + C7577 * C59414) *
               C152457 * C152903 +
           (C8233 * C59414 + C8236 * C59415 + C60561 * C59416 +
            (C134 * C60551 - C135 * C60550 - C134 * C60552 + C152711 * C60553) *
                C59417) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
            C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
            C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
               C51243 +
           (C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407 +
            C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
            C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740) *
               C152747) *
              C152457 * C152530 * C152512 * C129 -
          ((C15194 + C15195 + C15196) * C152747 +
           (C14894 + C14893 + C14892) * C51243) *
              C152457 * C152530 * C152512 * C130 +
          ((C14897 + C14896 + C14895) * C51243 +
           (C15200 + C15201 + C15202) * C152747) *
              C152457 * C152530 * C152512 * C131 -
          ((C15720 + C15721 + C15722) * C152747 +
           (C14900 + C14899 + C14898) * C51243) *
              C152457 * C152530 * C152512 * C132 +
          ((C14903 + C14902 + C14901) * C51243 +
           (C14813 * C396 - C14814 * C376 - C14813 * C397 + C14810 * C412 +
            C14815 * C1241 - C14816 * C1231 - C14815 * C1242 + C14811 * C1249 +
            C14817 * C2890 - C14818 * C2889 - C14817 * C2891 + C14812 * C2892) *
               C152747) *
              C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152530 * C152917 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C152530 * C152901 +
           ((C65215 + C65214 + C65213) * C51243 +
            (C14813 * C1537 - C14814 * C1526 - C14813 * C1538 + C14810 * C1550 +
             C14815 * C2269 - C14816 * C2265 - C14815 * C2270 + C14811 * C2277 +
             C14817 * C8185 - C14818 * C8178 - C14817 * C8186 +
             C14812 * C8196) *
                C152747) *
               C152457 * C152530 * C152870) *
              C365 +
          (((C15196 + C15195 + C15194) * C51243 +
            (C15197 + C15198 + C15199) * C152747) *
               C152457 * C152530 * C152901 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C152530 * C152917 -
           ((C17040 + C17041 + C17042) * C152747 +
            (C15199 + C15198 + C15197) * C51243) *
               C152457 * C152530 * C152870) *
              C366 +
          (((C14897 + C14896 + C14895) * C51243 +
            (C15200 + C15201 + C15202) * C152747) *
               C152457 * C152530 * C152917 -
           ((C15203 + C15204 + C15205) * C152747 +
            (C15202 + C15201 + C15200) * C51243) *
               C152457 * C152530 * C152901 +
           ((C15205 + C15204 + C15203) * C51243 +
            (C14813 * C1533 - C14814 * C1524 - C14813 * C1534 + C14810 * C1548 +
             C14815 * C2273 - C14816 * C2267 - C14815 * C2274 + C14811 * C2279 +
             C14817 * C9823 - C14818 * C9822 - C14817 * C9824 +
             C14812 * C9825) *
                C152747) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152918 -
           ((C14817 * C3213 - C14818 * C3209 - C14817 * C3214 + C14812 * C3221 +
             C14815 * C1719 - C14816 * C1704 - C14815 * C1720 + C14811 * C1740 +
             C14813 * C1233 - C14814 * C1227 - C14813 * C1234 +
             C14810 * C1245) *
                C152747 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C51243) *
               C152457 * C152903 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C51243 +
            (C14813 * C1719 - C14814 * C1704 - C14813 * C1720 + C14810 * C1740 +
             C14815 * C3213 - C14816 * C3209 - C14815 * C3214 + C14811 * C3221 +
             C14817 * C9518 - C14818 * C9510 - C14817 * C9519 +
             C14812 * C9528) *
                C152747) *
               C152457 * C152873) *
              C152512 * C365 +
          (((C15498 + C15497 + C15496) * C51243 +
            (C16264 + C16265 + C16266) * C152747) *
               C152457 * C152903 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C152918 -
           ((C18434 + C18435 + C18436) * C152747 +
            (C15501 + C15500 + C15499) * C51243) *
               C152457 * C152873) *
              C152512 * C366 +
          (((C14897 + C14896 + C14895) * C51243 +
            (C15200 + C15201 + C15202) * C152747) *
               C152457 * C152918 -
           ((C16267 + C16268 + C16269) * C152747 +
            (C15504 + C15503 + C15502) * C51243) *
               C152457 * C152903 +
           ((C15507 + C15506 + C15505) * C51243 +
            (C14813 * C1715 - C14814 * C1702 - C14813 * C1716 + C14810 * C1738 +
             C14815 * C3217 - C14816 * C3211 - C14815 * C3218 + C14811 * C3223 +
             C14817 * C18412 - C14818 * C18411 - C14817 * C18413 +
             C14812 * C18414) *
                C152747) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152530 * C1429 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C152530 * C1430 +
           ((C65215 + C65214 + C65213) * C51243 +
            (C14813 * C1537 - C14814 * C1526 - C14813 * C1538 + C14810 * C1550 +
             C14815 * C2269 - C14816 * C2265 - C14815 * C2270 + C14811 * C2277 +
             C14817 * C8185 - C14818 * C8178 - C14817 * C8186 +
             C14812 * C8196) *
                C152747) *
               C152457 * C152530 * C152870) *
              C152914 +
          (((C15196 + C15195 + C15194) * C51243 +
            (C15197 + C15198 + C15199) * C152747) *
               C152457 * C152530 * C1430 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C152530 * C1429 -
           ((C17040 + C17041 + C17042) * C152747 +
            (C15199 + C15198 + C15197) * C51243) *
               C152457 * C152530 * C152870) *
              C152897 +
          (((C14897 + C14896 + C14895) * C51243 +
            (C15200 + C15201 + C15202) * C152747) *
               C152457 * C152530 * C1429 -
           ((C15203 + C15204 + C15205) * C152747 +
            (C15202 + C15201 + C15200) * C51243) *
               C152457 * C152530 * C1430 +
           ((C15205 + C15204 + C15203) * C51243 +
            (C14813 * C1533 - C14814 * C1524 - C14813 * C1534 + C14810 * C1548 +
             C14815 * C2273 - C14816 * C2267 - C14815 * C2274 + C14811 * C2279 +
             C14817 * C9823 - C14818 * C9822 - C14817 * C9824 +
             C14812 * C9825) *
                C152747) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
            C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
            C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
               C51243 +
           (C65210 + C65211 + C65212) * C152747) *
              C152457 * C152530 * C1517 -
          ((C65213 + C65214 + C65215) * C152747 +
           (C65212 + C65211 + C65210) * C51243) *
              C152457 * C152530 * C1518 +
          ((C65215 + C65214 + C65213) * C51243 +
           (C66509 + C66510 + C66511) * C152747) *
              C152457 * C152530 * C1519 -
          ((C66512 + C66513 + C66514) * C152747 +
           (C66511 + C66510 + C66509) * C51243) *
              C152457 * C152530 * C1520 +
          ((C66514 + C66513 + C66512) * C51243 +
           (C14813 * C7928 - C14814 * C7923 - C14813 * C7929 + C14810 * C7935 +
            C14815 * C8937 - C14816 * C8935 - C14815 * C8938 + C14811 * C8941 +
            C14817 * C60551 - C14818 * C60550 - C14817 * C60552 +
            C14812 * C60553) *
               C152747) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152918 -
           ((C66130 + C66131 + C66132) * C152747 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C51243) *
               C152457 * C152903 +
           ((C14813 * C649 - C14814 * C633 - C14813 * C650 + C14810 * C669 +
             C14815 * C2677 - C14816 * C2666 - C14815 * C2678 + C14811 * C2690 +
             C14817 * C2679 - C14818 * C2667 - C14817 * C2680 +
             C14812 * C2691) *
                C51243 +
            (C66787 + C66788 + C66789) * C152747) *
               C152457 * C152873) *
              C1429 +
          (((C66132 + C66131 + C66130) * C51243 +
            (C66790 + C66791 + C66792) * C152747) *
               C152457 * C152903 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C152918 -
           ((C66793 + C66794 + C66795) * C152747 +
            (C66789 + C66788 + C66787) * C51243) *
               C152457 * C152873) *
              C1430 +
          (((C65215 + C65214 + C65213) * C51243 +
            (C66509 + C66510 + C66511) * C152747) *
               C152457 * C152918 -
           ((C14817 * C10240 - C14818 * C10238 - C14817 * C10241 +
             C14812 * C10244 + C14815 * C8185 - C14816 * C8178 -
             C14815 * C8186 + C14811 * C8196 + C14813 * C2269 - C14814 * C2265 -
             C14813 * C2270 + C14810 * C2277) *
                C152747 +
            (C66792 + C66791 + C66790) * C51243) *
               C152457 * C152903 +
           ((C66795 + C66794 + C66793) * C51243 +
            (C14813 * C8185 - C14814 * C8178 - C14813 * C8186 + C14810 * C8196 +
             C14815 * C10240 - C14816 * C10238 - C14815 * C10241 +
             C14811 * C10244 + C14817 * C61401 - C14818 * C61400 -
             C14817 * C61402 + C14812 * C61403) *
                C152747) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C152829 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C152617) *
               C1429 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C152617 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C152829) *
               C1430 +
           (((C6615 * C51243 + C6616 * C152747) * C51245 +
             (C51484 + C51485) * C51246 + C51493 * C51247) *
                C152829 -
            ((C53463 + C53464) * C51247 + (C53465 + C53466) * C51246 +
             (C8234 * C152747 + C7577 * C51243) * C51245) *
                C152617) *
               C152870) *
              C152814 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C152617 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C152829) *
               C1429 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C152829 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C152617) *
               C1430 +
           (((C53466 + C53465) * C51245 + (C53464 + C53463) * C51246 +
             (C2130 * C51243 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C152747) *
                 C51247) *
                C152617 -
            ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
             (C51485 + C51484) * C51245) *
                C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152829 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C152617) *
              C152512 * C873 +
          (((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
            C52117 * C51247) *
               C152617 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152829) *
              C152512 * C874 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152829 -
           ((C52118 + C52119) * C51247 + (C51721 + C51720) * C51246 +
            C51724 * C51245) *
               C152617) *
              C152512 * C875 +
          ((C52117 * C51245 + (C52119 + C52118) * C51246 +
            (C1032 * C51243 +
             (C134 * C1243 - C135 * C1232 - C134 * C1244 + C152711 * C1250) *
                 C152747) *
                C51247) *
               C152617 -
           ((C51257 + C51258) * C51247 + (C51256 + C51255) * C51246 +
            C51260 * C51245) *
               C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152829 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152617) *
              C152512 * C873 +
          ((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
               C152457 * C152617 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152829) *
              C152512 * C874 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152829 -
           (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
               C152457 * C152617) *
              C152512 * C875 +
          ((C726 * C59414 + C1278 * C59415 + C2130 * C59416 +
            (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                C59417) *
               C152457 * C152617 -
           (C1908 * C59417 + C470 * C59416 + C465 * C59415 + C207 * C59414) *
               C152457 * C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C152829 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152617) *
               C1429 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152617 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C152829) *
               C1430 +
           ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 +
             C7959 * C59417) *
                C152457 * C152829 -
            ((C134 * C8937 - C135 * C8935 - C134 * C8938 + C152711 * C8941) *
                 C59417 +
             C8950 * C59416 + C8234 * C59415 + C7577 * C59414) *
                C152457 * C152617) *
               C152870) *
              C152814 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152617 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C152829) *
               C1429 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C152829 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152617) *
               C1430 +
           ((C2132 * C59414 + C7579 * C59415 + C8740 * C59416 +
             (C134 * C8939 - C135 * C8936 - C134 * C8940 + C152711 * C8942) *
                 C59417) *
                C152457 * C152617 -
            (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
                C152457 * C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152829 -
           ((C14817 * C3213 - C14818 * C3209 - C14817 * C3214 + C14812 * C3221 +
             C14815 * C1719 - C14816 * C1704 - C14815 * C1720 + C14811 * C1740 +
             C14813 * C1233 - C14814 * C1227 - C14813 * C1234 +
             C14810 * C1245) *
                C152747 +
            (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 + C14812 * C2690 +
             C14815 * C649 - C14816 * C633 - C14815 * C650 + C14811 * C669 +
             C14813 * C647 - C14814 * C632 - C14813 * C648 + C14810 * C668) *
                C51243) *
               C152457 * C152617) *
              C152512 * C873 +
          (((C15498 + C15497 + C15496) * C51243 +
            (C16264 + C16265 + C16266) * C152747) *
               C152457 * C152617 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C152829) *
              C152512 * C874 +
          (((C14897 + C14896 + C14895) * C51243 +
            (C15200 + C15201 + C15202) * C152747) *
               C152457 * C152829 -
           ((C16267 + C16268 + C16269) * C152747 +
            (C15504 + C15503 + C15502) * C51243) *
               C152457 * C152617) *
              C152512 * C875 +
          (((C15937 + C15936 + C15935) * C51243 +
            (C14813 * C1239 - C14814 * C1230 - C14813 * C1240 + C14810 * C1248 +
             C14815 * C1713 - C14816 * C1701 - C14815 * C1714 + C14811 * C1737 +
             C14817 * C3219 - C14818 * C3212 - C14817 * C3220 +
             C14812 * C3224) *
                C152747) *
               C152457 * C152617 -
           ((C15720 + C15721 + C15722) * C152747 +
            (C14900 + C14899 + C14898) * C51243) *
               C152457 * C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
              C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
              C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                 C51243 +
             (C65210 + C65211 + C65212) * C152747) *
                C152457 * C152829 -
            ((C66130 + C66131 + C66132) * C152747 +
             (C14817 * C2677 - C14818 * C2666 - C14817 * C2678 +
              C14812 * C2690 + C14815 * C649 - C14816 * C633 - C14815 * C650 +
              C14811 * C669 + C14813 * C647 - C14814 * C632 - C14813 * C648 +
              C14810 * C668) *
                 C51243) *
                C152457 * C152617) *
               C1429 +
           (((C66132 + C66131 + C66130) * C51243 +
             (C66790 + C66791 + C66792) * C152747) *
                C152457 * C152617 -
            ((C65213 + C65214 + C65215) * C152747 +
             (C65212 + C65211 + C65210) * C51243) *
                C152457 * C152829) *
               C1430 +
           (((C65215 + C65214 + C65213) * C51243 +
             (C66509 + C66510 + C66511) * C152747) *
                C152457 * C152829 -
            ((C14817 * C10240 - C14818 * C10238 - C14817 * C10241 +
              C14812 * C10244 + C14815 * C8185 - C14816 * C8178 -
              C14815 * C8186 + C14811 * C8196 + C14813 * C2269 -
              C14814 * C2265 - C14813 * C2270 + C14810 * C2277) *
                 C152747 +
             (C66792 + C66791 + C66790) * C51243) *
                C152457 * C152617) *
               C152870) *
              C152814 +
          ((((C15498 + C15497 + C15496) * C51243 +
             (C16264 + C16265 + C16266) * C152747) *
                C152457 * C152617 -
            ((C15194 + C15195 + C15196) * C152747 +
             (C14894 + C14893 + C14892) * C51243) *
                C152457 * C152829) *
               C1429 +
           (((C15196 + C15195 + C15194) * C51243 +
             (C15197 + C15198 + C15199) * C152747) *
                C152457 * C152829 -
            ((C17351 + C17352 + C17353) * C152747 +
             (C16266 + C16265 + C16264) * C51243) *
                C152457 * C152617) *
               C1430 +
           (((C17353 + C17352 + C17351) * C51243 +
             (C14813 * C2271 - C14814 * C2266 - C14813 * C2272 +
              C14810 * C2278 + C14815 * C8183 - C14816 * C8177 -
              C14815 * C8184 + C14811 * C8195 + C14817 * C10242 -
              C14818 * C10239 - C14817 * C10243 + C14812 * C10245) *
                 C152747) *
                C152457 * C152617 -
            ((C17040 + C17041 + C17042) * C152747 +
             (C15199 + C15198 + C15197) * C51243) *
                C152457 * C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152530 * C152917 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152530 * C152901 +
           ((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152530 * C152870) *
              C365 +
          (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
            (C51488 + C51489) * C51247) *
               C152530 * C152901 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152530 * C152917 -
           ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
            (C51485 + C51484) * C51245) *
               C152530 * C152870) *
              C366 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152530 * C152917 -
           ((C472 * C152747 + C471 * C51243) * C51247 +
            (C51489 + C51488) * C51246 + C51492 * C51245) *
               C152530 * C152901 +
           (C51493 * C51245 + (C51491 + C51490) * C51246 +
            (C472 * C51243 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C152747) *
                C51247) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C51243 +
            C6614 * C152747) *
               C51245 +
           (C51249 + C51250) * C51246 + C51259 * C51247) *
              C152530 * C152512 * C129 -
          (C51260 * C51247 + (C51252 + C51251) * C51246 +
           (C51250 + C51249) * C51245) *
              C152530 * C152512 * C130 +
          (C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
              C152530 * C152512 * C131 -
          ((C51257 + C51258) * C51247 + (C51256 + C51255) * C51246 +
           C51260 * C51245) *
              C152530 * C152512 * C132 +
          (C51261 * C51245 + (C51258 + C51257) * C51246 +
           (C210 * C51243 +
            (C134 * C878 - C135 * C877 - C134 * C879 + C152711 * C880) *
                C152747) *
               C51247) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152530 * C1429 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152530 * C1430 +
           ((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152530 * C152870) *
              C152914 +
          (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
            C51920 * C51247) *
               C152530 * C1430 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152530 * C1429 -
           ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
            (C51485 + C51484) * C51245) *
               C152530 * C152870) *
              C152897 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152530 * C1429 -
           ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
            C51492 * C51245) *
               C152530 * C1430 +
           (C51493 * C51245 + (C51491 + C51490) * C51246 +
            (C472 * C51243 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C152747) *
                C51247) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C51243 +
            C6614 * C152747) *
               C51245 +
           (C51249 + C51250) * C51246 + C51259 * C51247) *
              C152530 * C1517 -
          (C51492 * C51247 + (C51482 + C51483) * C51246 +
           (C6615 * C152747 + C6614 * C51243) * C51245) *
              C152530 * C1518 +
          ((C6615 * C51243 + C6616 * C152747) * C51245 +
           (C51484 + C51485) * C51246 + C51493 * C51247) *
              C152530 * C1519 -
          ((C6618 * C152747 + C1909 * C51243) * C51247 +
           (C6617 * C152747 + C1910 * C51243) * C51246 +
           (C7957 * C152747 + C6616 * C51243) * C51245) *
              C152530 * C1520 +
          ((C7957 * C51243 + C7959 * C152747) * C51245 +
           (C6617 * C51243 + C7958 * C152747) * C51246 +
           (C6618 * C51243 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C152747) *
               C51247) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C59414 +
           C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
              C152457 * C152530 * C152512 * C129 -
          (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
              C152457 * C152530 * C152512 * C130 +
          (C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
              C152457 * C152530 * C152512 * C131 -
          (C1908 * C59417 + C470 * C59416 + C465 * C59415 + C207 * C59414) *
              C152457 * C152530 * C152512 * C132 +
          (C208 * C59414 + C471 * C59415 + C472 * C59416 +
           (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
               C59417) *
              C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C152917 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C152901 +
           (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152530 * C152870) *
              C365 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C152901 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C152917 -
           (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
               C152457 * C152530 * C152870) *
              C366 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152530 * C152917 -
           (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
               C152457 * C152530 * C152901 +
           (C469 * C59414 + C1909 * C59415 + C6618 * C59416 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C59417) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C1429 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C1430 +
           (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152530 * C152870) *
              C152914 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C1430 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C1429 -
           (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
               C152457 * C152530 * C152870) *
              C152897 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152530 * C1429 -
           (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
               C152457 * C152530 * C1430 +
           (C469 * C59414 + C1909 * C59415 + C6618 * C59416 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C59417) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C59414 +
           C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
              C152457 * C152530 * C1517 -
          (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
              C152457 * C152530 * C1518 +
          (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
              C152457 * C152530 * C1519 -
          (C60404 * C59417 + C7959 * C59416 + C7957 * C59415 + C6616 * C59414) *
              C152457 * C152530 * C1520 +
          (C7957 * C59414 + C7959 * C59415 + C60404 * C59416 +
           (C134 * C60394 - C135 * C60393 - C134 * C60395 + C152711 * C60396) *
               C59417) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
            C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
            C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
               C51243 +
           (C14813 * C386 - C14814 * C371 - C14813 * C387 + C14810 * C407 +
            C14815 * C1233 - C14816 * C1227 - C14815 * C1234 + C14811 * C1245 +
            C14817 * C1719 - C14818 * C1704 - C14817 * C1720 + C14812 * C1740) *
               C152747) *
              C152457 * C152530 * C152512 * C129 -
          ((C15194 + C15195 + C15196) * C152747 +
           (C14894 + C14893 + C14892) * C51243) *
              C152457 * C152530 * C152512 * C130 +
          ((C14897 + C14896 + C14895) * C51243 +
           (C15200 + C15201 + C15202) * C152747) *
              C152457 * C152530 * C152512 * C131 -
          ((C15720 + C15721 + C15722) * C152747 +
           (C14900 + C14899 + C14898) * C51243) *
              C152457 * C152530 * C152512 * C132 +
          ((C14903 + C14902 + C14901) * C51243 +
           (C14813 * C396 - C14814 * C376 - C14813 * C397 + C14810 * C412 +
            C14815 * C1241 - C14816 * C1231 - C14815 * C1242 + C14811 * C1249 +
            C14817 * C2890 - C14818 * C2889 - C14817 * C2891 + C14812 * C2892) *
               C152747) *
              C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152530 * C152917 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C152530 * C152901 +
           ((C65215 + C65214 + C65213) * C51243 +
            (C14813 * C1537 - C14814 * C1526 - C14813 * C1538 + C14810 * C1550 +
             C14815 * C2269 - C14816 * C2265 - C14815 * C2270 + C14811 * C2277 +
             C14817 * C8185 - C14818 * C8178 - C14817 * C8186 +
             C14812 * C8196) *
                C152747) *
               C152457 * C152530 * C152870) *
              C365 +
          (((C15196 + C15195 + C15194) * C51243 +
            (C15197 + C15198 + C15199) * C152747) *
               C152457 * C152530 * C152901 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C152530 * C152917 -
           ((C17040 + C17041 + C17042) * C152747 +
            (C15199 + C15198 + C15197) * C51243) *
               C152457 * C152530 * C152870) *
              C366 +
          (((C14897 + C14896 + C14895) * C51243 +
            (C15200 + C15201 + C15202) * C152747) *
               C152457 * C152530 * C152917 -
           ((C15203 + C15204 + C15205) * C152747 +
            (C15202 + C15201 + C15200) * C51243) *
               C152457 * C152530 * C152901 +
           ((C15205 + C15204 + C15203) * C51243 +
            (C14813 * C1533 - C14814 * C1524 - C14813 * C1534 + C14810 * C1548 +
             C14815 * C2273 - C14816 * C2267 - C14815 * C2274 + C14811 * C2279 +
             C14817 * C9823 - C14818 * C9822 - C14817 * C9824 +
             C14812 * C9825) *
                C152747) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
             C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
             C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
                C51243 +
            (C65210 + C65211 + C65212) * C152747) *
               C152457 * C152530 * C1429 -
           ((C65213 + C65214 + C65215) * C152747 +
            (C65212 + C65211 + C65210) * C51243) *
               C152457 * C152530 * C1430 +
           ((C65215 + C65214 + C65213) * C51243 +
            (C14813 * C1537 - C14814 * C1526 - C14813 * C1538 + C14810 * C1550 +
             C14815 * C2269 - C14816 * C2265 - C14815 * C2270 + C14811 * C2277 +
             C14817 * C8185 - C14818 * C8178 - C14817 * C8186 +
             C14812 * C8196) *
                C152747) *
               C152457 * C152530 * C152870) *
              C152914 +
          (((C15196 + C15195 + C15194) * C51243 +
            (C15197 + C15198 + C15199) * C152747) *
               C152457 * C152530 * C1430 -
           ((C15194 + C15195 + C15196) * C152747 +
            (C14894 + C14893 + C14892) * C51243) *
               C152457 * C152530 * C1429 -
           ((C17040 + C17041 + C17042) * C152747 +
            (C15199 + C15198 + C15197) * C51243) *
               C152457 * C152530 * C152870) *
              C152897 +
          (((C14897 + C14896 + C14895) * C51243 +
            (C15200 + C15201 + C15202) * C152747) *
               C152457 * C152530 * C1429 -
           ((C15203 + C15204 + C15205) * C152747 +
            (C15202 + C15201 + C15200) * C51243) *
               C152457 * C152530 * C1430 +
           ((C15205 + C15204 + C15203) * C51243 +
            (C14813 * C1533 - C14814 * C1524 - C14813 * C1534 + C14810 * C1548 +
             C14815 * C2273 - C14816 * C2267 - C14815 * C2274 + C14811 * C2279 +
             C14817 * C9823 - C14818 * C9822 - C14817 * C9824 +
             C14812 * C9825) *
                C152747) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C14813 * C144 - C14814 * C136 - C14813 * C145 + C14810 * C160 +
            C14815 * C647 - C14816 * C632 - C14815 * C648 + C14811 * C668 +
            C14817 * C649 - C14818 * C633 - C14817 * C650 + C14812 * C669) *
               C51243 +
           (C65210 + C65211 + C65212) * C152747) *
              C152457 * C152530 * C1517 -
          ((C65213 + C65214 + C65215) * C152747 +
           (C65212 + C65211 + C65210) * C51243) *
              C152457 * C152530 * C1518 +
          ((C65215 + C65214 + C65213) * C51243 +
           (C66509 + C66510 + C66511) * C152747) *
              C152457 * C152530 * C1519 -
          ((C66512 + C66513 + C66514) * C152747 +
           (C66511 + C66510 + C66509) * C51243) *
              C152457 * C152530 * C1520 +
          ((C66514 + C66513 + C66512) * C51243 +
           (C14813 * C7928 - C14814 * C7923 - C14813 * C7929 + C14810 * C7935 +
            C14815 * C8937 - C14816 * C8935 - C14815 * C8938 + C14811 * C8941 +
            C14817 * C60551 - C14818 * C60550 - C14817 * C60552 +
            C14812 * C60553) *
               C152747) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152530 * C152571 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C152530 * C152578 +
           (((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                C152807 +
            (C40557 * C51243 + C42880 * C152747) * C152462) *
               C152530 * C3839) *
              C152489 +
          (((C40546 * C51243 + C40557 * C152747) * C152807 +
            (C40558 * C51243 + C32011 * C152747) * C152462) *
               C152530 * C152578 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C152530 * C152571 -
           (((C33850 + C33851) * C152747 + C40559 * C51243) * C152462 +
            (C42881 * C152747 + C40547 * C51243) * C152807) *
               C152530 * C3839) *
              C152498 +
          (((C31702 * C51243 + C40558 * C152747) * C152807 +
            ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
               C152530 * C152571 -
           (((C32008 + C32009) * C152747 + C41120 * C51243) * C152462 +
            (C40559 * C152747 + C32010 * C51243) * C152807) *
               C152530 * C152578 +
           ((C32011 * C51243 + (C33851 + C33850) * C152747) * C152807 +
            ((C32009 + C32008) * C51243 +
             (C31627 * C1531 - C31628 * C1523 - C31627 * C1532 +
              C152846 * C1547 + C31629 * C2275 - C31630 * C2268 -
              C31629 * C2276 + C152775 * C2280) *
                 C152747) *
                C152462) *
               C152530 * C3839) *
              C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C51243 +
              (C40568 + C40569) * C152747) *
                 C152807 +
             ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
                C152829 -
            ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C51243) *
                 C152807) *
                C152617) *
               C152571 +
           ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                 C152807 +
             (C41774 * C51243 + C43268 * C152747) * C152462) *
                C152617 -
            ((C40547 * C152747 + C40548 * C51243) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                 C152807) *
                C152829) *
               C152578 +
           ((((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                 C152807 +
             (C40557 * C51243 + C42880 * C152747) * C152462) *
                C152829 -
            (((C43282 + C43283) * C152747 + C43277 * C51243) * C152462 +
             ((C43554 + C43555) * C152747 + (C42617 + C42616) * C51243) *
                 C152807) *
                C152617) *
               C3839) *
              C3495 +
          (((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
             ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
                C152617 -
            ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
                C152829) *
               C152571 +
           (((C40546 * C51243 + C40557 * C152747) * C152807 +
             (C40558 * C51243 + C32011 * C152747) * C152462) *
                C152829 -
            (((C34168 + C34169) * C152747 + C41775 * C51243) * C152462 +
             (C43277 * C152747 + C41765 * C51243) * C152807) *
                C152617) *
               C152578 +
           (((C43268 * C51243 + (C43283 + C43282) * C152747) * C152807 +
             ((C34169 + C34168) * C51243 +
              (C31627 * C2273 - C31628 * C2267 - C31627 * C2274 +
               C152846 * C2279 + C31629 * C9823 - C31630 * C9822 -
               C31629 * C9824 + C152775 * C9825) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C33850 + C33851) * C152747 + C40559 * C51243) * C152462 +
             (C42881 * C152747 + C40547 * C51243) * C152807) *
                C152829) *
               C3839) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152530 * C152924 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C152530 * C152920 +
           (((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                C152807 +
            (C40557 * C51243 + C42880 * C152747) * C152462) *
               C152530 * C152906 -
           (((C42272 + C42273) * C152747 + C42881 * C51243) * C152462 +
            ((C42274 + C42275) * C152747 + (C42271 + C42270) * C51243) *
                C152807) *
               C152530 * C152880) *
              C3495 +
          (((C40546 * C51243 + C40557 * C152747) * C152807 +
            (C40558 * C51243 + C32011 * C152747) * C152462) *
               C152530 * C152920 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C152530 * C152924 -
           (((C33850 + C33851) * C152747 + C40559 * C51243) * C152462 +
            (C42881 * C152747 + C40547 * C51243) * C152807) *
               C152530 * C152906 +
           ((C42880 * C51243 + (C42273 + C42272) * C152747) * C152807 +
            ((C33851 + C33850) * C51243 +
             (C31627 * C1543 - C31628 * C1529 - C31627 * C1544 +
              C152846 * C1553 + C31629 * C8728 - C31630 * C8727 -
              C31629 * C8729 + C152775 * C8730) *
                 C152747) *
                C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152530 * C3355 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C152530 * C152575) *
              C152923 +
          (((C40546 * C51243 + C40557 * C152747) * C152807 +
            (C40558 * C51243 + C32011 * C152747) * C152462) *
               C152530 * C152575 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C152530 * C3355) *
              C152916 +
          (((C31702 * C51243 + C40558 * C152747) * C152807 +
            ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
               C152530 * C3355 -
           (((C32008 + C32009) * C152747 + C41120 * C51243) * C152462 +
            (C40559 * C152747 + C32010 * C51243) * C152807) *
               C152530 * C152575) *
              C152899 +
          (((C32514 * C51243 + (C32009 + C32008) * C152747) * C152807 +
            ((C32529 + C32528) * C51243 +
             (C31627 * C398 - C31628 * C377 - C31627 * C399 + C152846 * C413 +
              C31629 * C2108 - C31630 * C2107 - C31629 * C2109 +
              C152775 * C2110) *
                 C152747) *
                C152462) *
               C152530 * C152575 -
           (((C32528 + C32529) * C152747 + (C31699 + C31698) * C51243) *
                C152462 +
            (C41120 * C152747 + C31703 * C51243) * C152807) *
               C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C51243 +
              (C40568 + C40569) * C152747) *
                 C152807 +
             ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
                C152918 -
            ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C51243) *
                 C152807) *
                C152903 +
            (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
               C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
               C152775 * C2690) *
                  C51243 +
              (C42614 + C42615) * C152747) *
                 C152807 +
             ((C32308 + C32309) * C51243 + C44684 * C152747) * C152462) *
                C152873) *
               C3355 +
           ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                 C152807 +
             (C41774 * C51243 + C43268 * C152747) * C152462) *
                C152903 -
            ((C40547 * C152747 + C40548 * C51243) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                 C152807) *
                C152918 -
            (((C42618 + C42619) * C152747 + C44685 * C51243) * C152462 +
             ((C42620 + C42621) * C152747 + (C42615 + C42614) * C51243) *
                 C152807) *
                C152873) *
               C152575) *
              C3495 +
          (((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
             ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
                C152903 -
            ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
                C152918 -
            (((C35238 + C35239) * C152747 + (C32311 + C32310) * C51243) *
                 C152462 +
             (C44685 * C152747 + (C32309 + C32308) * C51243) * C152807) *
                C152873) *
               C3355 +
           (((C40546 * C51243 + C40557 * C152747) * C152807 +
             (C40558 * C51243 + C32011 * C152747) * C152462) *
                C152918 -
            (((C34168 + C34169) * C152747 + C41775 * C51243) * C152462 +
             (C43277 * C152747 + C41765 * C51243) * C152807) *
                C152903 +
            ((C44684 * C51243 + (C42619 + C42618) * C152747) * C152807 +
             ((C35239 + C35238) * C51243 +
              (C31627 * C1733 - C31628 * C1711 - C31627 * C1734 +
               C152846 * C1747 + C31629 * C10024 - C31630 * C10023 -
               C31629 * C10025 + C152775 * C10026) *
                  C152747) *
                 C152462) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C51243 +
              (C40568 + C40569) * C152747) *
                 C152807 +
             ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
                C152829 -
            ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C51243) *
                 C152807) *
                C152617) *
               C3355 +
           ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                 C152807 +
             (C41774 * C51243 + C43268 * C152747) * C152462) *
                C152617 -
            ((C40547 * C152747 + C40548 * C51243) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                 C152807) *
                C152829) *
               C152575) *
              C152489 +
          (((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
             ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
                C152617 -
            ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
                C152829) *
               C3355 +
           (((C40546 * C51243 + C40557 * C152747) * C152807 +
             (C40558 * C51243 + C32011 * C152747) * C152462) *
                C152829 -
            (((C34168 + C34169) * C152747 + C41775 * C51243) * C152462 +
             (C43277 * C152747 + C41765 * C51243) * C152807) *
                C152617) *
               C152575) *
              C152498 +
          ((((C31702 * C51243 + C40558 * C152747) * C152807 +
             ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
                C152829 -
            (((C33070 + C33071) * C152747 + (C32313 + C32312) * C51243) *
                 C152462 +
             (C41775 * C152747 + C32316 * C51243) * C152807) *
                C152617) *
               C3355 +
           (((C33072 * C51243 + (C34169 + C34168) * C152747) * C152807 +
             ((C33071 + C33070) * C51243 +
              (C31627 * C1721 - C31628 * C1705 - C31627 * C1722 +
               C152846 * C1741 + C31629 * C1735 - C31630 * C1712 -
               C31629 * C1736 + C152775 * C1748) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C32008 + C32009) * C152747 + C41120 * C51243) * C152462 +
             (C40559 * C152747 + C32010 * C51243) * C152807) *
                C152829) *
               C152575) *
              C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152530 * C3355 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C152530 * C152575) *
              C152923 +
          (((C40546 * C51243 + C40557 * C152747) * C152807 +
            (C40558 * C51243 + C32011 * C152747) * C152462) *
               C152530 * C152575 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C152530 * C3355) *
              C152916 +
          (((C31702 * C51243 + C40558 * C152747) * C152807 +
            ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
               C152530 * C3355 -
           (((C32008 + C32009) * C152747 + C41120 * C51243) * C152462 +
            (C40559 * C152747 + C32010 * C51243) * C152807) *
               C152530 * C152575) *
              C152899 +
          (((C32514 * C51243 + (C32009 + C32008) * C152747) * C152807 +
            ((C32529 + C32528) * C51243 +
             (C31627 * C398 - C31628 * C377 - C31627 * C399 + C152846 * C413 +
              C31629 * C2108 - C31630 * C2107 - C31629 * C2109 +
              C152775 * C2110) *
                 C152747) *
                C152462) *
               C152530 * C152575 -
           (((C32528 + C32529) * C152747 + (C31699 + C31698) * C51243) *
                C152462 +
            (C41120 * C152747 + C31703 * C51243) * C152807) *
               C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152530 * C152924 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C152530 * C152920 +
           (((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                C152807 +
            (C40557 * C51243 + C42880 * C152747) * C152462) *
               C152530 * C152906 -
           (((C42272 + C42273) * C152747 + C42881 * C51243) * C152462 +
            ((C42274 + C42275) * C152747 + (C42271 + C42270) * C51243) *
                C152807) *
               C152530 * C152880) *
              C3495 +
          (((C40546 * C51243 + C40557 * C152747) * C152807 +
            (C40558 * C51243 + C32011 * C152747) * C152462) *
               C152530 * C152920 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C152530 * C152924 -
           (((C33850 + C33851) * C152747 + C40559 * C51243) * C152462 +
            (C42881 * C152747 + C40547 * C51243) * C152807) *
               C152530 * C152906 +
           ((C42880 * C51243 + (C42273 + C42272) * C152747) * C152807 +
            ((C33851 + C33850) * C51243 +
             (C31627 * C1543 - C31628 * C1529 - C31627 * C1544 +
              C152846 * C1553 + C31629 * C8728 - C31630 * C8727 -
              C31629 * C8729 + C152775 * C8730) *
                 C152747) *
                C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C51243 +
              (C40568 + C40569) * C152747) *
                 C152807 +
             ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
                C4361 -
            ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C51243) *
                 C152807) *
                C152617) *
               C152571 +
           ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                 C152807 +
             (C41774 * C51243 + C43268 * C152747) * C152462) *
                C152617 -
            ((C40547 * C152747 + C40548 * C51243) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                 C152807) *
                C4361) *
               C152578 +
           ((((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                 C152807 +
             (C40557 * C51243 + C42880 * C152747) * C152462) *
                C4361 -
            (((C43282 + C43283) * C152747 + C43277 * C51243) * C152462 +
             ((C43554 + C43555) * C152747 + (C42617 + C42616) * C51243) *
                 C152807) *
                C152617) *
               C3839) *
              C152814 +
          (((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
             ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
                C152617 -
            ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
                C4361) *
               C152571 +
           (((C40546 * C51243 + C40557 * C152747) * C152807 +
             (C40558 * C51243 + C32011 * C152747) * C152462) *
                C4361 -
            (((C34168 + C34169) * C152747 + C41775 * C51243) * C152462 +
             (C43277 * C152747 + C41765 * C51243) * C152807) *
                C152617) *
               C152578 +
           (((C43268 * C51243 + (C43283 + C43282) * C152747) * C152807 +
             ((C34169 + C34168) * C51243 +
              (C31627 * C2273 - C31628 * C2267 - C31627 * C2274 +
               C152846 * C2279 + C31629 * C9823 - C31630 * C9822 -
               C31629 * C9824 + C152775 * C9825) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C33850 + C33851) * C152747 + C40559 * C51243) * C152462 +
             (C42881 * C152747 + C40547 * C51243) * C152807) *
                C4361) *
               C3839) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152613 -
           ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C51243) *
                C152807) *
               C152620 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C51243 +
             (C42614 + C42615) * C152747) *
                C152807 +
            ((C32308 + C32309) * C51243 + C44684 * C152747) * C152462) *
               C5033) *
              C152571 +
          ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                C152807 +
            (C41774 * C51243 + C43268 * C152747) * C152462) *
               C152620 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C152613 -
           (((C42618 + C42619) * C152747 + C44685 * C51243) * C152462 +
            ((C42620 + C42621) * C152747 + (C42615 + C42614) * C51243) *
                C152807) *
               C5033) *
              C152578 +
          ((((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                C152807 +
            (C40557 * C51243 + C42880 * C152747) * C152462) *
               C152613 -
           (((C43282 + C43283) * C152747 + C43277 * C51243) * C152462 +
            ((C43554 + C43555) * C152747 + (C42617 + C42616) * C51243) *
                C152807) *
               C152620 +
           (((C42621 + C42620) * C51243 +
             (C31627 * C8185 - C31628 * C8178 - C31627 * C8186 +
              C152846 * C8196 + C31629 * C10240 - C31630 * C10238 -
              C31629 * C10241 + C152775 * C10244) *
                 C152747) *
                C152807 +
            ((C42619 + C42618) * C51243 +
             (C31627 * C8183 - C31628 * C8177 - C31627 * C8184 +
              C152846 * C8195 + C31629 * C10242 - C31630 * C10239 -
              C31629 * C10243 + C152775 * C10245) *
                 C152747) *
                C152462) *
               C5033) *
              C3839) *
         C152484) /
        (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C4361 -
           ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C51243) *
                C152807) *
               C152617) *
              C152924 +
          ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                C152807 +
            (C41774 * C51243 + C43268 * C152747) * C152462) *
               C152617 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C4361) *
              C152920 +
          ((((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                C152807 +
            (C40557 * C51243 + C42880 * C152747) * C152462) *
               C4361 -
           (((C43282 + C43283) * C152747 + C43277 * C51243) * C152462 +
            ((C43554 + C43555) * C152747 + (C42617 + C42616) * C51243) *
                C152807) *
               C152617) *
              C152906 +
          ((((C43555 + C43554) * C51243 +
             (C31627 * C8189 - C31628 * C8180 - C31627 * C8190 +
              C152846 * C8198 + C31629 * C8191 - C31630 * C8181 -
              C31629 * C8192 + C152775 * C8199) *
                 C152747) *
                C152807 +
            ((C43283 + C43282) * C51243 +
             (C31627 * C8187 - C31628 * C8179 - C31627 * C8188 +
              C152846 * C8197 + C31629 * C8193 - C31630 * C8182 -
              C31629 * C8194 + C152775 * C8200) *
                 C152747) *
                C152462) *
               C152617 -
           (((C42272 + C42273) * C152747 + C42881 * C51243) * C152462 +
            ((C42274 + C42275) * C152747 + (C42271 + C42270) * C51243) *
                C152807) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C51243 +
              (C40568 + C40569) * C152747) *
                 C152807 +
             ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
                C4361 -
            ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C51243) *
                 C152807) *
                C152617) *
               C3355 +
           ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                 C152807 +
             (C41774 * C51243 + C43268 * C152747) * C152462) *
                C152617 -
            ((C40547 * C152747 + C40548 * C51243) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                 C152807) *
                C4361) *
               C152575) *
              C152914 +
          (((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
             ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
                C152617 -
            ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
                C4361) *
               C3355 +
           (((C40546 * C51243 + C40557 * C152747) * C152807 +
             (C40558 * C51243 + C32011 * C152747) * C152462) *
                C4361 -
            (((C34168 + C34169) * C152747 + C41775 * C51243) * C152462 +
             (C43277 * C152747 + C41765 * C51243) * C152807) *
                C152617) *
               C152575) *
              C152897 +
          ((((C31702 * C51243 + C40558 * C152747) * C152807 +
             ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
                C4361 -
            (((C33070 + C33071) * C152747 + (C32313 + C32312) * C51243) *
                 C152462 +
             (C41775 * C152747 + C32316 * C51243) * C152807) *
                C152617) *
               C3355 +
           (((C33072 * C51243 + (C34169 + C34168) * C152747) * C152807 +
             ((C33071 + C33070) * C51243 +
              (C31627 * C1721 - C31628 * C1705 - C31627 * C1722 +
               C152846 * C1741 + C31629 * C1735 - C31630 * C1712 -
               C31629 * C1736 + C152775 * C1748) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C32008 + C32009) * C152747 + C41120 * C51243) * C152462 +
             (C40559 * C152747 + C32010 * C51243) * C152807) *
                C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152925 -
           ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C51243) *
                C152807) *
               C152922 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C51243 +
             (C42614 + C42615) * C152747) *
                C152807 +
            ((C32308 + C32309) * C51243 + C44684 * C152747) * C152462) *
               C152909 -
           (((C44956 + C44957) * C152747 + (C35462 + C35463) * C51243) *
                C152462 +
            ((C45228 + C45229) * C152747 +
             (C31629 * C2679 - C31630 * C2667 - C31629 * C2680 +
              C152775 * C2691 + C31627 * C2677 - C31628 * C2666 -
              C31627 * C2678 + C152846 * C2690) *
                 C51243) *
                C152807) *
               C152886) *
              C3355 +
          ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                C152807 +
            (C41774 * C51243 + C43268 * C152747) * C152462) *
               C152922 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C152925 -
           (((C42618 + C42619) * C152747 + C44685 * C51243) * C152462 +
            ((C42620 + C42621) * C152747 + (C42615 + C42614) * C51243) *
                C152807) *
               C152909 +
           (((C45229 + C45228) * C51243 +
             (C31627 * C9516 - C31628 * C9509 - C31627 * C9517 +
              C152846 * C9527 + C31629 * C9520 - C31630 * C9511 -
              C31629 * C9521 + C152775 * C9529) *
                 C152747) *
                C152807 +
            ((C44957 + C44956) * C51243 +
             (C31627 * C9514 - C31628 * C9508 - C31627 * C9515 +
              C152846 * C9526 + C31629 * C9524 - C31630 * C9513 -
              C31629 * C9525 + C152775 * C9531) *
                 C152747) *
                C152462) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C51243 +
              (C40568 + C40569) * C152747) *
                 C152807 +
             ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
                C152613 -
            ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C51243) *
                 C152807) *
                C152620 +
            (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
               C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
               C152775 * C2690) *
                  C51243 +
              (C42614 + C42615) * C152747) *
                 C152807 +
             ((C32308 + C32309) * C51243 + C44684 * C152747) * C152462) *
                C5033) *
               C3355 +
           ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                 C152807 +
             (C41774 * C51243 + C43268 * C152747) * C152462) *
                C152620 -
            ((C40547 * C152747 + C40548 * C51243) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                 C152807) *
                C152613 -
            (((C42618 + C42619) * C152747 + C44685 * C51243) * C152462 +
             ((C42620 + C42621) * C152747 + (C42615 + C42614) * C51243) *
                 C152807) *
                C5033) *
               C152575) *
              C152814 +
          (((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
             ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
                C152620 -
            ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
                C152613 -
            (((C35238 + C35239) * C152747 + (C32311 + C32310) * C51243) *
                 C152462 +
             (C44685 * C152747 + (C32309 + C32308) * C51243) * C152807) *
                C5033) *
               C3355 +
           (((C40546 * C51243 + C40557 * C152747) * C152807 +
             (C40558 * C51243 + C32011 * C152747) * C152462) *
                C152613 -
            (((C34168 + C34169) * C152747 + C41775 * C51243) * C152462 +
             (C43277 * C152747 + C41765 * C51243) * C152807) *
                C152620 +
            ((C44684 * C51243 + (C42619 + C42618) * C152747) * C152807 +
             ((C35239 + C35238) * C51243 +
              (C31627 * C1733 - C31628 * C1711 - C31627 * C1734 +
               C152846 * C1747 + C31629 * C10024 - C31630 * C10023 -
               C31629 * C10025 + C152775 * C10026) *
                  C152747) *
                 C152462) *
                C5033) *
               C152575) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C51243 +
              (C40568 + C40569) * C152747) *
                 C152807 +
             ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
                C4361 -
            ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C51243) *
                 C152807) *
                C152617) *
               C3355 +
           ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                 C152807 +
             (C41774 * C51243 + C43268 * C152747) * C152462) *
                C152617 -
            ((C40547 * C152747 + C40548 * C51243) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                 C152807) *
                C4361) *
               C152575) *
              C152914 +
          (((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
             ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
                C152617 -
            ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
                C4361) *
               C3355 +
           (((C40546 * C51243 + C40557 * C152747) * C152807 +
             (C40558 * C51243 + C32011 * C152747) * C152462) *
                C4361 -
            (((C34168 + C34169) * C152747 + C41775 * C51243) * C152462 +
             (C43277 * C152747 + C41765 * C51243) * C152807) *
                C152617) *
               C152575) *
              C152897 +
          ((((C31702 * C51243 + C40558 * C152747) * C152807 +
             ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
                C4361 -
            (((C33070 + C33071) * C152747 + (C32313 + C32312) * C51243) *
                 C152462 +
             (C41775 * C152747 + C32316 * C51243) * C152807) *
                C152617) *
               C3355 +
           (((C33072 * C51243 + (C34169 + C34168) * C152747) * C152807 +
             ((C33071 + C33070) * C51243 +
              (C31627 * C1721 - C31628 * C1705 - C31627 * C1722 +
               C152846 * C1741 + C31629 * C1735 - C31630 * C1712 -
               C31629 * C1736 + C152775 * C1748) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C32008 + C32009) * C152747 + C41120 * C51243) * C152462 +
             (C40559 * C152747 + C32010 * C51243) * C152807) *
                C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C4361 -
           ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C51243) *
                C152807) *
               C152617) *
              C152924 +
          ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                C152807 +
            (C41774 * C51243 + C43268 * C152747) * C152462) *
               C152617 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C4361) *
              C152920 +
          ((((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                C152807 +
            (C40557 * C51243 + C42880 * C152747) * C152462) *
               C4361 -
           (((C43282 + C43283) * C152747 + C43277 * C51243) * C152462 +
            ((C43554 + C43555) * C152747 + (C42617 + C42616) * C51243) *
                C152807) *
               C152617) *
              C152906 +
          ((((C43555 + C43554) * C51243 +
             (C31627 * C8189 - C31628 * C8180 - C31627 * C8190 +
              C152846 * C8198 + C31629 * C8191 - C31630 * C8181 -
              C31629 * C8192 + C152775 * C8199) *
                 C152747) *
                C152807 +
            ((C43283 + C43282) * C51243 +
             (C31627 * C8187 - C31628 * C8179 - C31627 * C8188 +
              C152846 * C8197 + C31629 * C8193 - C31630 * C8182 -
              C31629 * C8194 + C152775 * C8200) *
                 C152747) *
                C152462) *
               C152617 -
           (((C42272 + C42273) * C152747 + C42881 * C51243) * C152462 +
            ((C42274 + C42275) * C152747 + (C42271 + C42270) * C51243) *
                C152807) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152530 * C1879 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C152530 * C1880 +
           (((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                C152807 +
            (C40557 * C51243 + C42880 * C152747) * C152462) *
               C152530 * C1881 -
           (((C42272 + C42273) * C152747 + C42881 * C51243) * C152462 +
            ((C42274 + C42275) * C152747 + (C42271 + C42270) * C51243) *
                C152807) *
               C152530 * C152880) *
              C152814 +
          (((C40546 * C51243 + C40557 * C152747) * C152807 +
            (C40558 * C51243 + C32011 * C152747) * C152462) *
               C152530 * C1880 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C152530 * C1879 -
           (((C33850 + C33851) * C152747 + C40559 * C51243) * C152462 +
            (C42881 * C152747 + C40547 * C51243) * C152807) *
               C152530 * C1881 +
           ((C42880 * C51243 + (C42273 + C42272) * C152747) * C152807 +
            ((C33851 + C33850) * C51243 +
             (C31627 * C1543 - C31628 * C1529 - C31627 * C1544 +
              C152846 * C1553 + C31629 * C8728 - C31630 * C8727 -
              C31629 * C8729 + C152775 * C8730) *
                 C152747) *
                C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152530 * C152828 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C152530 * C152575) *
              C873 +
          (((C40546 * C51243 + C40557 * C152747) * C152807 +
            (C40558 * C51243 + C32011 * C152747) * C152462) *
               C152530 * C152575 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C152530 * C152828) *
              C874 +
          (((C31702 * C51243 + C40558 * C152747) * C152807 +
            ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
               C152530 * C152828 -
           (((C32008 + C32009) * C152747 + C41120 * C51243) * C152462 +
            (C40559 * C152747 + C32010 * C51243) * C152807) *
               C152530 * C152575) *
              C875 +
          (((C32514 * C51243 + (C32009 + C32008) * C152747) * C152807 +
            ((C32529 + C32528) * C51243 +
             (C31627 * C398 - C31628 * C377 - C31627 * C399 + C152846 * C413 +
              C31629 * C2108 - C31630 * C2107 - C31629 * C2109 +
              C152775 * C2110) *
                 C152747) *
                C152462) *
               C152530 * C152575 -
           (((C32528 + C32529) * C152747 + (C31699 + C31698) * C51243) *
                C152462 +
            (C41120 * C152747 + C31703 * C51243) * C152807) *
               C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C51243 +
              (C40568 + C40569) * C152747) *
                 C152807 +
             ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
                C2427 -
            ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C51243) *
                 C152807) *
                C2428 +
            (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
               C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
               C152775 * C2690) *
                  C51243 +
              (C42614 + C42615) * C152747) *
                 C152807 +
             ((C32308 + C32309) * C51243 + C44684 * C152747) * C152462) *
                C152873) *
               C152828 +
           ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                 C152807 +
             (C41774 * C51243 + C43268 * C152747) * C152462) *
                C2428 -
            ((C40547 * C152747 + C40548 * C51243) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                 C152807) *
                C2427 -
            (((C42618 + C42619) * C152747 + C44685 * C51243) * C152462 +
             ((C42620 + C42621) * C152747 + (C42615 + C42614) * C51243) *
                 C152807) *
                C152873) *
               C152575) *
              C152814 +
          (((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
             ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
                C2428 -
            ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
                C2427 -
            (((C35238 + C35239) * C152747 + (C32311 + C32310) * C51243) *
                 C152462 +
             (C44685 * C152747 + (C32309 + C32308) * C51243) * C152807) *
                C152873) *
               C152828 +
           (((C40546 * C51243 + C40557 * C152747) * C152807 +
             (C40558 * C51243 + C32011 * C152747) * C152462) *
                C2427 -
            (((C34168 + C34169) * C152747 + C41775 * C51243) * C152462 +
             (C43277 * C152747 + C41765 * C51243) * C152807) *
                C2428 +
            ((C44684 * C51243 + (C42619 + C42618) * C152747) * C152807 +
             ((C35239 + C35238) * C51243 +
              (C31627 * C1733 - C31628 * C1711 - C31627 * C1734 +
               C152846 * C1747 + C31629 * C10024 - C31630 * C10023 -
               C31629 * C10025 + C152775 * C10026) *
                  C152747) *
                 C152462) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152829 -
           ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C51243) *
                C152807) *
               C152617) *
              C1879 +
          ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                C152807 +
            (C41774 * C51243 + C43268 * C152747) * C152462) *
               C152617 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C152829) *
              C1880 +
          ((((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                C152807 +
            (C40557 * C51243 + C42880 * C152747) * C152462) *
               C152829 -
           (((C43282 + C43283) * C152747 + C43277 * C51243) * C152462 +
            ((C43554 + C43555) * C152747 + (C42617 + C42616) * C51243) *
                C152807) *
               C152617) *
              C1881 +
          ((((C43555 + C43554) * C51243 +
             (C31627 * C8189 - C31628 * C8180 - C31627 * C8190 +
              C152846 * C8198 + C31629 * C8191 - C31630 * C8181 -
              C31629 * C8192 + C152775 * C8199) *
                 C152747) *
                C152807 +
            ((C43283 + C43282) * C51243 +
             (C31627 * C8187 - C31628 * C8179 - C31627 * C8188 +
              C152846 * C8197 + C31629 * C8193 - C31630 * C8182 -
              C31629 * C8194 + C152775 * C8200) *
                 C152747) *
                C152462) *
               C152617 -
           (((C42272 + C42273) * C152747 + C42881 * C51243) * C152462 +
            ((C42274 + C42275) * C152747 + (C42271 + C42270) * C51243) *
                C152807) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C51243 +
              (C40568 + C40569) * C152747) *
                 C152807 +
             ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
                C152829 -
            ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C51243) *
                 C152807) *
                C152617) *
               C152828 +
           ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                 C152807 +
             (C41774 * C51243 + C43268 * C152747) * C152462) *
                C152617 -
            ((C40547 * C152747 + C40548 * C51243) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                 C152807) *
                C152829) *
               C152575) *
              C365 +
          (((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
             ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
                C152617 -
            ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
                C152829) *
               C152828 +
           (((C40546 * C51243 + C40557 * C152747) * C152807 +
             (C40558 * C51243 + C32011 * C152747) * C152462) *
                C152829 -
            (((C34168 + C34169) * C152747 + C41775 * C51243) * C152462 +
             (C43277 * C152747 + C41765 * C51243) * C152807) *
                C152617) *
               C152575) *
              C366 +
          ((((C31702 * C51243 + C40558 * C152747) * C152807 +
             ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
                C152829 -
            (((C33070 + C33071) * C152747 + (C32313 + C32312) * C51243) *
                 C152462 +
             (C41775 * C152747 + C32316 * C51243) * C152807) *
                C152617) *
               C152828 +
           (((C33072 * C51243 + (C34169 + C34168) * C152747) * C152807 +
             ((C33071 + C33070) * C51243 +
              (C31627 * C1721 - C31628 * C1705 - C31627 * C1722 +
               C152846 * C1741 + C31629 * C1735 - C31630 * C1712 -
               C31629 * C1736 + C152775 * C1748) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C32008 + C32009) * C152747 + C41120 * C51243) * C152462 +
             (C40559 * C152747 + C32010 * C51243) * C152807) *
                C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C3047 -
           ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C51243) *
                C152807) *
               C3048 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C51243 +
             (C42614 + C42615) * C152747) *
                C152807 +
            ((C32308 + C32309) * C51243 + C44684 * C152747) * C152462) *
               C3049 -
           (((C44956 + C44957) * C152747 + (C35462 + C35463) * C51243) *
                C152462 +
            ((C45228 + C45229) * C152747 +
             (C31629 * C2679 - C31630 * C2667 - C31629 * C2680 +
              C152775 * C2691 + C31627 * C2677 - C31628 * C2666 -
              C31627 * C2678 + C152846 * C2690) *
                 C51243) *
                C152807) *
               C152886) *
              C152828 +
          ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                C152807 +
            (C41774 * C51243 + C43268 * C152747) * C152462) *
               C3048 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C3047 -
           (((C42618 + C42619) * C152747 + C44685 * C51243) * C152462 +
            ((C42620 + C42621) * C152747 + (C42615 + C42614) * C51243) *
                C152807) *
               C3049 +
           (((C45229 + C45228) * C51243 +
             (C31627 * C9516 - C31628 * C9509 - C31627 * C9517 +
              C152846 * C9527 + C31629 * C9520 - C31630 * C9511 -
              C31629 * C9521 + C152775 * C9529) *
                 C152747) *
                C152807 +
            ((C44957 + C44956) * C51243 +
             (C31627 * C9514 - C31628 * C9508 - C31627 * C9515 +
              C152846 * C9526 + C31629 * C9524 - C31630 * C9513 -
              C31629 * C9525 + C152775 * C9531) *
                 C152747) *
                C152462) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C31627 * C144 - C31628 * C136 - C31627 * C145 +
                 C152846 * C160 + C31629 * C647 - C31630 * C632 -
                 C31629 * C648 + C152775 * C668) *
                    C51243 +
                (C40568 + C40569) * C152747) *
                   C152807 +
               ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
                  C152530 * C152512 * C129 -
              ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
               (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
                  C152530 * C152512 * C130 +
              ((C31702 * C51243 + C40558 * C152747) * C152807 +
               ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
                  C152530 * C152512 * C131 -
              (((C32528 + C32529) * C152747 + (C31699 + C31698) * C51243) *
                   C152462 +
               (C41120 * C152747 + C31703 * C51243) * C152807) *
                  C152530 * C152512 * C132 +
              ((C31704 * C51243 + (C32529 + C32528) * C152747) * C152807 +
               ((C31701 + C31700) * C51243 +
                (C31627 * C400 - C31628 * C378 - C31627 * C401 +
                 C152846 * C414 + C31629 * C1243 - C31630 * C1232 -
                 C31629 * C1244 + C152775 * C1250) *
                    C152747) *
                   C152462) *
                  C152530 * C152512 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C31627 * C144 - C31628 * C136 - C31627 * C145 +
                  C152846 * C160 + C31629 * C647 - C31630 * C632 -
                  C31629 * C648 + C152775 * C668) *
                     C51243 +
                 (C40568 + C40569) * C152747) *
                    C152807 +
                ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
                   C152530 * C152917 -
               ((C40547 * C152747 + C40548 * C51243) * C152462 +
                ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                    C152807) *
                   C152530 * C152901 +
               (((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                    C152807 +
                (C40557 * C51243 + C42880 * C152747) * C152462) *
                   C152530 * C152870) *
                  C365 +
              (((C40546 * C51243 + C40557 * C152747) * C152807 +
                (C40558 * C51243 + C32011 * C152747) * C152462) *
                   C152530 * C152901 -
               ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
                (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
                   C152530 * C152917 -
               (((C33850 + C33851) * C152747 + C40559 * C51243) * C152462 +
                (C42881 * C152747 + C40547 * C51243) * C152807) *
                   C152530 * C152870) *
                  C366 +
              (((C31702 * C51243 + C40558 * C152747) * C152807 +
                ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
                   C152530 * C152917 -
               (((C32008 + C32009) * C152747 + C41120 * C51243) * C152462 +
                (C40559 * C152747 + C32010 * C51243) * C152807) *
                   C152530 * C152901 +
               ((C32011 * C51243 + (C33851 + C33850) * C152747) * C152807 +
                ((C32009 + C32008) * C51243 +
                 (C31627 * C1531 - C31628 * C1523 - C31627 * C1532 +
                  C152846 * C1547 + C31629 * C2275 - C31630 * C2268 -
                  C31629 * C2276 + C152775 * C2280) *
                     C152747) *
                    C152462) *
                   C152530 * C152870) *
                  C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152918 -
           ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C51243) *
                C152807) *
               C152903 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C51243 +
             (C42614 + C42615) * C152747) *
                C152807 +
            ((C32308 + C32309) * C51243 + C44684 * C152747) * C152462) *
               C152873) *
              C152512 * C365 +
          ((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
            ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
               C152903 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C152918 -
           (((C35238 + C35239) * C152747 + (C32311 + C32310) * C51243) *
                C152462 +
            (C44685 * C152747 + (C32309 + C32308) * C51243) * C152807) *
               C152873) *
              C152512 * C366 +
          (((C31702 * C51243 + C40558 * C152747) * C152807 +
            ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
               C152918 -
           (((C33070 + C33071) * C152747 + (C32313 + C32312) * C51243) *
                C152462 +
            (C41775 * C152747 + C32316 * C51243) * C152807) *
               C152903 +
           ((C32317 * C51243 + (C35239 + C35238) * C152747) * C152807 +
            ((C32315 + C32314) * C51243 +
             (C31627 * C1713 - C31628 * C1701 - C31627 * C1714 +
              C152846 * C1737 + C31629 * C3219 - C31630 * C3212 -
              C31629 * C3220 + C152775 * C3224) *
                 C152747) *
                C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152530 * C1429 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C152530 * C1430 +
           (((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                C152807 +
            (C40557 * C51243 + C42880 * C152747) * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C40546 * C51243 + C40557 * C152747) * C152807 +
            (C40558 * C51243 + C32011 * C152747) * C152462) *
               C152530 * C1430 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C152530 * C1429 -
           (((C33850 + C33851) * C152747 + C40559 * C51243) * C152462 +
            (C42881 * C152747 + C40547 * C51243) * C152807) *
               C152530 * C152870) *
              C152897 +
          (((C31702 * C51243 + C40558 * C152747) * C152807 +
            ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
               C152530 * C1429 -
           (((C32008 + C32009) * C152747 + C41120 * C51243) * C152462 +
            (C40559 * C152747 + C32010 * C51243) * C152807) *
               C152530 * C1430 +
           ((C32011 * C51243 + (C33851 + C33850) * C152747) * C152807 +
            ((C32009 + C32008) * C51243 +
             (C31627 * C1531 - C31628 * C1523 - C31627 * C1532 +
              C152846 * C1547 + C31629 * C2275 - C31630 * C2268 -
              C31629 * C2276 + C152775 * C2280) *
                 C152747) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C51243 +
            (C40568 + C40569) * C152747) *
               C152807 +
           ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
              C152530 * C1517 -
          ((C40547 * C152747 + C40548 * C51243) * C152462 +
           ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
               C152807) *
              C152530 * C1518 +
          (((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
               C152807 +
           (C40557 * C51243 + C42880 * C152747) * C152462) *
              C152530 * C1519 -
          (((C42272 + C42273) * C152747 + C42881 * C51243) * C152462 +
           ((C42274 + C42275) * C152747 + (C42271 + C42270) * C51243) *
               C152807) *
              C152530 * C1520 +
          (((C42275 + C42274) * C51243 +
            (C31627 * C7928 - C31628 * C7923 - C31627 * C7929 +
             C152846 * C7935 + C31629 * C8937 - C31630 * C8935 -
             C31629 * C8938 + C152775 * C8941) *
                C152747) *
               C152807 +
           ((C42273 + C42272) * C51243 +
            (C31627 * C7926 - C31628 * C7922 - C31627 * C7927 +
             C152846 * C7934 + C31629 * C8939 - C31630 * C8936 -
             C31629 * C8940 + C152775 * C8942) *
                C152747) *
               C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152918 -
           ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C51243) *
                C152807) *
               C152903 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C51243 +
             (C42614 + C42615) * C152747) *
                C152807 +
            ((C32308 + C32309) * C51243 + C44684 * C152747) * C152462) *
               C152873) *
              C1429 +
          ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                C152807 +
            (C41774 * C51243 + C43268 * C152747) * C152462) *
               C152903 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C152918 -
           (((C42618 + C42619) * C152747 + C44685 * C51243) * C152462 +
            ((C42620 + C42621) * C152747 + (C42615 + C42614) * C51243) *
                C152807) *
               C152873) *
              C1430 +
          ((((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                C152807 +
            (C40557 * C51243 + C42880 * C152747) * C152462) *
               C152918 -
           (((C43282 + C43283) * C152747 + C43277 * C51243) * C152462 +
            ((C43554 + C43555) * C152747 + (C42617 + C42616) * C51243) *
                C152807) *
               C152903 +
           (((C42621 + C42620) * C51243 +
             (C31627 * C8185 - C31628 * C8178 - C31627 * C8186 +
              C152846 * C8196 + C31629 * C10240 - C31630 * C10238 -
              C31629 * C10241 + C152775 * C10244) *
                 C152747) *
                C152807 +
            ((C42619 + C42618) * C51243 +
             (C31627 * C8183 - C31628 * C8177 - C31627 * C8184 +
              C152846 * C8195 + C31629 * C10242 - C31630 * C10239 -
              C31629 * C10243 + C152775 * C10245) *
                 C152747) *
                C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C2427 -
           ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C51243) *
                C152807) *
               C2428 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C51243 +
             (C42614 + C42615) * C152747) *
                C152807 +
            ((C32308 + C32309) * C51243 + C44684 * C152747) * C152462) *
               C152873) *
              C152512 * C152914 +
          ((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
            ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
               C2428 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C2427 -
           (((C35238 + C35239) * C152747 + (C32311 + C32310) * C51243) *
                C152462 +
            (C44685 * C152747 + (C32309 + C32308) * C51243) * C152807) *
               C152873) *
              C152512 * C152897 +
          (((C31702 * C51243 + C40558 * C152747) * C152807 +
            ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
               C2427 -
           (((C33070 + C33071) * C152747 + (C32313 + C32312) * C51243) *
                C152462 +
            (C41775 * C152747 + C32316 * C51243) * C152807) *
               C2428 +
           ((C32317 * C51243 + (C35239 + C35238) * C152747) * C152807 +
            ((C32315 + C32314) * C51243 +
             (C31627 * C1713 - C31628 * C1701 - C31627 * C1714 +
              C152846 * C1737 + C31629 * C3219 - C31630 * C3212 -
              C31629 * C3220 + C152775 * C3224) *
                 C152747) *
                C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C2427 -
           ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C51243) *
                C152807) *
               C2428 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C51243 +
             (C42614 + C42615) * C152747) *
                C152807 +
            ((C32308 + C32309) * C51243 + C44684 * C152747) * C152462) *
               C152873) *
              C152917 +
          ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                C152807 +
            (C41774 * C51243 + C43268 * C152747) * C152462) *
               C2428 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C2427 -
           (((C42618 + C42619) * C152747 + C44685 * C51243) * C152462 +
            ((C42620 + C42621) * C152747 + (C42615 + C42614) * C51243) *
                C152807) *
               C152873) *
              C152901 +
          ((((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                C152807 +
            (C40557 * C51243 + C42880 * C152747) * C152462) *
               C2427 -
           (((C43282 + C43283) * C152747 + C43277 * C51243) * C152462 +
            ((C43554 + C43555) * C152747 + (C42617 + C42616) * C51243) *
                C152807) *
               C2428 +
           (((C42621 + C42620) * C51243 +
             (C31627 * C8185 - C31628 * C8178 - C31627 * C8186 +
              C152846 * C8196 + C31629 * C10240 - C31630 * C10238 -
              C31629 * C10241 + C152775 * C10244) *
                 C152747) *
                C152807 +
            ((C42619 + C42618) * C51243 +
             (C31627 * C8183 - C31628 * C8177 - C31627 * C8184 +
              C152846 * C8195 + C31629 * C10242 - C31630 * C10239 -
              C31629 * C10243 + C152775 * C10245) *
                 C152747) *
                C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C51243 +
            (C40568 + C40569) * C152747) *
               C152807 +
           ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
              C2658 -
          ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
           ((C41780 + C41781) * C152747 +
            (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
             C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                C51243) *
               C152807) *
              C2659 +
          (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
             C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
             C152775 * C2690) *
                C51243 +
            (C42614 + C42615) * C152747) *
               C152807 +
           ((C32308 + C32309) * C51243 + C44684 * C152747) * C152462) *
              C2660 -
          (((C44956 + C44957) * C152747 + (C35462 + C35463) * C51243) *
               C152462 +
           ((C45228 + C45229) * C152747 +
            (C31629 * C2679 - C31630 * C2667 - C31629 * C2680 +
             C152775 * C2691 + C31627 * C2677 - C31628 * C2666 -
             C31627 * C2678 + C152846 * C2690) *
                C51243) *
               C152807) *
              C2661 +
          (((C31627 * C2679 - C31628 * C2667 - C31627 * C2680 +
             C152846 * C2691 + C31629 * C18111 - C31630 * C18106 -
             C31629 * C18112 + C152775 * C18118) *
                C51243 +
            (C31627 * C9518 - C31628 * C9510 - C31627 * C9519 +
             C152846 * C9528 + C31629 * C18851 - C31630 * C18849 -
             C31629 * C18852 + C152775 * C18855) *
                C152747) *
               C152807 +
           ((C31627 * C2681 - C31628 * C2668 - C31627 * C2682 +
             C152846 * C2692 + C31629 * C18109 - C31630 * C18105 -
             C31629 * C18110 + C152775 * C18117) *
                C51243 +
            (C31627 * C9522 - C31628 * C9512 - C31627 * C9523 +
             C152846 * C9530 + C31629 * C18853 - C31630 * C18850 -
             C31629 * C18854 + C152775 * C18856) *
                C152747) *
               C152462) *
              C2662) *
         C152512 * C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C51243 +
              (C40568 + C40569) * C152747) *
                 C152807 +
             ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
                C152829 -
            ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C51243) *
                 C152807) *
                C152617) *
               C1429 +
           ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                 C152807 +
             (C41774 * C51243 + C43268 * C152747) * C152462) *
                C152617 -
            ((C40547 * C152747 + C40548 * C51243) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                 C152807) *
                C152829) *
               C1430 +
           ((((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                 C152807 +
             (C40557 * C51243 + C42880 * C152747) * C152462) *
                C152829 -
            (((C43282 + C43283) * C152747 + C43277 * C51243) * C152462 +
             ((C43554 + C43555) * C152747 + (C42617 + C42616) * C51243) *
                 C152807) *
                C152617) *
               C152870) *
              C152814 +
          (((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
             ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
                C152617 -
            ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
                C152829) *
               C1429 +
           (((C40546 * C51243 + C40557 * C152747) * C152807 +
             (C40558 * C51243 + C32011 * C152747) * C152462) *
                C152829 -
            (((C34168 + C34169) * C152747 + C41775 * C51243) * C152462 +
             (C43277 * C152747 + C41765 * C51243) * C152807) *
                C152617) *
               C1430 +
           (((C43268 * C51243 + (C43283 + C43282) * C152747) * C152807 +
             ((C34169 + C34168) * C51243 +
              (C31627 * C2273 - C31628 * C2267 - C31627 * C2274 +
               C152846 * C2279 + C31629 * C9823 - C31630 * C9822 -
               C31629 * C9824 + C152775 * C9825) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C33850 + C33851) * C152747 + C40559 * C51243) * C152462 +
             (C42881 * C152747 + C40547 * C51243) * C152807) *
                C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152829 -
           ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C51243) *
                C152807) *
               C152617) *
              C152512 * C873 +
          ((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
            ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
               C152617 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C152829) *
              C152512 * C874 +
          (((C31702 * C51243 + C40558 * C152747) * C152807 +
            ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
               C152829 -
           (((C33070 + C33071) * C152747 + (C32313 + C32312) * C51243) *
                C152462 +
            (C41775 * C152747 + C32316 * C51243) * C152807) *
               C152617) *
              C152512 * C875 +
          (((C32724 * C51243 + (C33071 + C33070) * C152747) * C152807 +
            ((C32739 + C32738) * C51243 +
             (C31627 * C1241 - C31628 * C1231 - C31627 * C1242 +
              C152846 * C1249 + C31629 * C2890 - C31630 * C2889 -
              C31629 * C2891 + C152775 * C2892) *
                 C152747) *
                C152462) *
               C152617 -
           (((C32528 + C32529) * C152747 + (C31699 + C31698) * C51243) *
                C152462 +
            (C41120 * C152747 + C31703 * C51243) * C152807) *
               C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C3047 -
           ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C51243) *
                C152807) *
               C3048 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C51243 +
             (C42614 + C42615) * C152747) *
                C152807 +
            ((C32308 + C32309) * C51243 + C44684 * C152747) * C152462) *
               C3049 -
           (((C44956 + C44957) * C152747 + (C35462 + C35463) * C51243) *
                C152462 +
            ((C45228 + C45229) * C152747 +
             (C31629 * C2679 - C31630 * C2667 - C31629 * C2680 +
              C152775 * C2691 + C31627 * C2677 - C31628 * C2666 -
              C31627 * C2678 + C152846 * C2690) *
                 C51243) *
                C152807) *
               C152886) *
              C152512 * C152814 +
          ((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
            ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
               C3048 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C3047 -
           (((C35238 + C35239) * C152747 + (C32311 + C32310) * C51243) *
                C152462 +
            (C44685 * C152747 + (C32309 + C32308) * C51243) * C152807) *
               C3049 +
           (((C35463 + C35462) * C51243 + (C44957 + C44956) * C152747) *
                C152807 +
            ((C35461 + C35460) * C51243 +
             (C31627 * C3217 - C31628 * C3211 - C31627 * C3218 +
              C152846 * C3223 + C31629 * C18412 - C31630 * C18411 -
              C31629 * C18413 + C152775 * C18414) *
                 C152747) *
                C152462) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152530 * C152917 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C152530 * C152901 +
           (((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                C152807 +
            (C40557 * C51243 + C42880 * C152747) * C152462) *
               C152530 * C152870) *
              C365 +
          (((C40546 * C51243 + C40557 * C152747) * C152807 +
            (C40558 * C51243 + C32011 * C152747) * C152462) *
               C152530 * C152901 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C152530 * C152917 -
           (((C33850 + C33851) * C152747 + C40559 * C51243) * C152462 +
            (C42881 * C152747 + C40547 * C51243) * C152807) *
               C152530 * C152870) *
              C366 +
          (((C31702 * C51243 + C40558 * C152747) * C152807 +
            ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
               C152530 * C152917 -
           (((C32008 + C32009) * C152747 + C41120 * C51243) * C152462 +
            (C40559 * C152747 + C32010 * C51243) * C152807) *
               C152530 * C152901 +
           ((C32011 * C51243 + (C33851 + C33850) * C152747) * C152807 +
            ((C32009 + C32008) * C51243 +
             (C31627 * C1531 - C31628 * C1523 - C31627 * C1532 +
              C152846 * C1547 + C31629 * C2275 - C31630 * C2268 -
              C31629 * C2276 + C152775 * C2280) *
                 C152747) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C51243 +
            (C40568 + C40569) * C152747) *
               C152807 +
           ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
              C152530 * C152512 * C129 -
          ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
           (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
              C152530 * C152512 * C130 +
          ((C31702 * C51243 + C40558 * C152747) * C152807 +
           ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
              C152530 * C152512 * C131 -
          (((C32528 + C32529) * C152747 + (C31699 + C31698) * C51243) *
               C152462 +
           (C41120 * C152747 + C31703 * C51243) * C152807) *
              C152530 * C152512 * C132 +
          ((C31704 * C51243 + (C32529 + C32528) * C152747) * C152807 +
           ((C31701 + C31700) * C51243 +
            (C31627 * C400 - C31628 * C378 - C31627 * C401 + C152846 * C414 +
             C31629 * C1243 - C31630 * C1232 - C31629 * C1244 +
             C152775 * C1250) *
                C152747) *
               C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152530 * C1429 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C152530 * C1430 +
           (((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                C152807 +
            (C40557 * C51243 + C42880 * C152747) * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C40546 * C51243 + C40557 * C152747) * C152807 +
            (C40558 * C51243 + C32011 * C152747) * C152462) *
               C152530 * C1430 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C152530 * C1429 -
           (((C33850 + C33851) * C152747 + C40559 * C51243) * C152462 +
            (C42881 * C152747 + C40547 * C51243) * C152807) *
               C152530 * C152870) *
              C152897 +
          (((C31702 * C51243 + C40558 * C152747) * C152807 +
            ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
               C152530 * C1429 -
           (((C32008 + C32009) * C152747 + C41120 * C51243) * C152462 +
            (C40559 * C152747 + C32010 * C51243) * C152807) *
               C152530 * C1430 +
           ((C32011 * C51243 + (C33851 + C33850) * C152747) * C152807 +
            ((C32009 + C32008) * C51243 +
             (C31627 * C1531 - C31628 * C1523 - C31627 * C1532 +
              C152846 * C1547 + C31629 * C2275 - C31630 * C2268 -
              C31629 * C2276 + C152775 * C2280) *
                 C152747) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C51243 +
            (C40568 + C40569) * C152747) *
               C152807 +
           ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
              C152530 * C1517 -
          ((C40547 * C152747 + C40548 * C51243) * C152462 +
           ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
               C152807) *
              C152530 * C1518 +
          (((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
               C152807 +
           (C40557 * C51243 + C42880 * C152747) * C152462) *
              C152530 * C1519 -
          (((C42272 + C42273) * C152747 + C42881 * C51243) * C152462 +
           ((C42274 + C42275) * C152747 + (C42271 + C42270) * C51243) *
               C152807) *
              C152530 * C1520 +
          (((C42275 + C42274) * C51243 +
            (C31627 * C7928 - C31628 * C7923 - C31627 * C7929 +
             C152846 * C7935 + C31629 * C8937 - C31630 * C8935 -
             C31629 * C8938 + C152775 * C8941) *
                C152747) *
               C152807 +
           ((C42273 + C42272) * C51243 +
            (C31627 * C7926 - C31628 * C7922 - C31627 * C7927 +
             C152846 * C7934 + C31629 * C8939 - C31630 * C8936 -
             C31629 * C8940 + C152775 * C8942) *
                C152747) *
               C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C2427 -
           ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C51243) *
                C152807) *
               C2428 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C51243 +
             (C42614 + C42615) * C152747) *
                C152807 +
            ((C32308 + C32309) * C51243 + C44684 * C152747) * C152462) *
               C152873) *
              C152512 * C152914 +
          ((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
            ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
               C2428 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C2427 -
           (((C35238 + C35239) * C152747 + (C32311 + C32310) * C51243) *
                C152462 +
            (C44685 * C152747 + (C32309 + C32308) * C51243) * C152807) *
               C152873) *
              C152512 * C152897 +
          (((C31702 * C51243 + C40558 * C152747) * C152807 +
            ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
               C2427 -
           (((C33070 + C33071) * C152747 + (C32313 + C32312) * C51243) *
                C152462 +
            (C41775 * C152747 + C32316 * C51243) * C152807) *
               C2428 +
           ((C32317 * C51243 + (C35239 + C35238) * C152747) * C152807 +
            ((C32315 + C32314) * C51243 +
             (C31627 * C1713 - C31628 * C1701 - C31627 * C1714 +
              C152846 * C1737 + C31629 * C3219 - C31630 * C3212 -
              C31629 * C3220 + C152775 * C3224) *
                 C152747) *
                C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C2427 -
           ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C51243) *
                C152807) *
               C2428 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C51243 +
             (C42614 + C42615) * C152747) *
                C152807 +
            ((C32308 + C32309) * C51243 + C44684 * C152747) * C152462) *
               C152873) *
              C152917 +
          ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                C152807 +
            (C41774 * C51243 + C43268 * C152747) * C152462) *
               C2428 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C2427 -
           (((C42618 + C42619) * C152747 + C44685 * C51243) * C152462 +
            ((C42620 + C42621) * C152747 + (C42615 + C42614) * C51243) *
                C152807) *
               C152873) *
              C152901 +
          ((((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                C152807 +
            (C40557 * C51243 + C42880 * C152747) * C152462) *
               C2427 -
           (((C43282 + C43283) * C152747 + C43277 * C51243) * C152462 +
            ((C43554 + C43555) * C152747 + (C42617 + C42616) * C51243) *
                C152807) *
               C2428 +
           (((C42621 + C42620) * C51243 +
             (C31627 * C8185 - C31628 * C8178 - C31627 * C8186 +
              C152846 * C8196 + C31629 * C10240 - C31630 * C10238 -
              C31629 * C10241 + C152775 * C10244) *
                 C152747) *
                C152807 +
            ((C42619 + C42618) * C51243 +
             (C31627 * C8183 - C31628 * C8177 - C31627 * C8184 +
              C152846 * C8195 + C31629 * C10242 - C31630 * C10239 -
              C31629 * C10243 + C152775 * C10245) *
                 C152747) *
                C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C51243 +
              (C40568 + C40569) * C152747) *
                 C152807 +
             ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
                C4361 -
            ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C51243) *
                 C152807) *
                C152617) *
               C152828 +
           ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                 C152807 +
             (C41774 * C51243 + C43268 * C152747) * C152462) *
                C152617 -
            ((C40547 * C152747 + C40548 * C51243) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                 C152807) *
                C4361) *
               C152575) *
              C152489 +
          (((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
             ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
                C152617 -
            ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
                C4361) *
               C152828 +
           (((C40546 * C51243 + C40557 * C152747) * C152807 +
             (C40558 * C51243 + C32011 * C152747) * C152462) *
                C4361 -
            (((C34168 + C34169) * C152747 + C41775 * C51243) * C152462 +
             (C43277 * C152747 + C41765 * C51243) * C152807) *
                C152617) *
               C152575) *
              C152498 +
          ((((C31702 * C51243 + C40558 * C152747) * C152807 +
             ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
                C4361 -
            (((C33070 + C33071) * C152747 + (C32313 + C32312) * C51243) *
                 C152462 +
             (C41775 * C152747 + C32316 * C51243) * C152807) *
                C152617) *
               C152828 +
           (((C33072 * C51243 + (C34169 + C34168) * C152747) * C152807 +
             ((C33071 + C33070) * C51243 +
              (C31627 * C1721 - C31628 * C1705 - C31627 * C1722 +
               C152846 * C1741 + C31629 * C1735 - C31630 * C1712 -
               C31629 * C1736 + C152775 * C1748) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C32008 + C32009) * C152747 + C41120 * C51243) * C152462 +
             (C40559 * C152747 + C32010 * C51243) * C152807) *
                C4361) *
               C152575) *
              C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C51243 +
              (C40568 + C40569) * C152747) *
                 C152807 +
             ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
                C152613 -
            ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C51243) *
                 C152807) *
                C152620 +
            (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
               C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
               C152775 * C2690) *
                  C51243 +
              (C42614 + C42615) * C152747) *
                 C152807 +
             ((C32308 + C32309) * C51243 + C44684 * C152747) * C152462) *
                C5033) *
               C152828 +
           ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                 C152807 +
             (C41774 * C51243 + C43268 * C152747) * C152462) *
                C152620 -
            ((C40547 * C152747 + C40548 * C51243) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                 C152807) *
                C152613 -
            (((C42618 + C42619) * C152747 + C44685 * C51243) * C152462 +
             ((C42620 + C42621) * C152747 + (C42615 + C42614) * C51243) *
                 C152807) *
                C5033) *
               C152575) *
              C3495 +
          (((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
             ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
                C152620 -
            ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
                C152613 -
            (((C35238 + C35239) * C152747 + (C32311 + C32310) * C51243) *
                 C152462 +
             (C44685 * C152747 + (C32309 + C32308) * C51243) * C152807) *
                C5033) *
               C152828 +
           (((C40546 * C51243 + C40557 * C152747) * C152807 +
             (C40558 * C51243 + C32011 * C152747) * C152462) *
                C152613 -
            (((C34168 + C34169) * C152747 + C41775 * C51243) * C152462 +
             (C43277 * C152747 + C41765 * C51243) * C152807) *
                C152620 +
            ((C44684 * C51243 + (C42619 + C42618) * C152747) * C152807 +
             ((C35239 + C35238) * C51243 +
              (C31627 * C1733 - C31628 * C1711 - C31627 * C1734 +
               C152846 * C1747 + C31629 * C10024 - C31630 * C10023 -
               C31629 * C10025 + C152775 * C10026) *
                  C152747) *
                 C152462) *
                C5033) *
               C152575) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C51243 +
              (C40568 + C40569) * C152747) *
                 C152807 +
             ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
                C4361 -
            ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C51243) *
                 C152807) *
                C152617) *
               C152917 +
           ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                 C152807 +
             (C41774 * C51243 + C43268 * C152747) * C152462) *
                C152617 -
            ((C40547 * C152747 + C40548 * C51243) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                 C152807) *
                C4361) *
               C152901 +
           ((((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                 C152807 +
             (C40557 * C51243 + C42880 * C152747) * C152462) *
                C4361 -
            (((C43282 + C43283) * C152747 + C43277 * C51243) * C152462 +
             ((C43554 + C43555) * C152747 + (C42617 + C42616) * C51243) *
                 C152807) *
                C152617) *
               C152870) *
              C3495 +
          (((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
             ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
                C152617 -
            ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
                C4361) *
               C152917 +
           (((C40546 * C51243 + C40557 * C152747) * C152807 +
             (C40558 * C51243 + C32011 * C152747) * C152462) *
                C4361 -
            (((C34168 + C34169) * C152747 + C41775 * C51243) * C152462 +
             (C43277 * C152747 + C41765 * C51243) * C152807) *
                C152617) *
               C152901 +
           (((C43268 * C51243 + (C43283 + C43282) * C152747) * C152807 +
             ((C34169 + C34168) * C51243 +
              (C31627 * C2273 - C31628 * C2267 - C31627 * C2274 +
               C152846 * C2279 + C31629 * C9823 - C31630 * C9822 -
               C31629 * C9824 + C152775 * C9825) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C33850 + C33851) * C152747 + C40559 * C51243) * C152462 +
             (C42881 * C152747 + C40547 * C51243) * C152807) *
                C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C4361 -
           ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C51243) *
                C152807) *
               C152617) *
              C152512 * C152923 +
          ((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
            ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
               C152617 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C4361) *
              C152512 * C152916 +
          (((C31702 * C51243 + C40558 * C152747) * C152807 +
            ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
               C4361 -
           (((C33070 + C33071) * C152747 + (C32313 + C32312) * C51243) *
                C152462 +
            (C41775 * C152747 + C32316 * C51243) * C152807) *
               C152617) *
              C152512 * C152899 +
          (((C32724 * C51243 + (C33071 + C33070) * C152747) * C152807 +
            ((C32739 + C32738) * C51243 +
             (C31627 * C1241 - C31628 * C1231 - C31627 * C1242 +
              C152846 * C1249 + C31629 * C2890 - C31630 * C2889 -
              C31629 * C2891 + C152775 * C2892) *
                 C152747) *
                C152462) *
               C152617 -
           (((C32528 + C32529) * C152747 + (C31699 + C31698) * C51243) *
                C152462 +
            (C41120 * C152747 + C31703 * C51243) * C152807) *
               C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152925 -
           ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C51243) *
                C152807) *
               C152922 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C51243 +
             (C42614 + C42615) * C152747) *
                C152807 +
            ((C32308 + C32309) * C51243 + C44684 * C152747) * C152462) *
               C152909 -
           (((C44956 + C44957) * C152747 + (C35462 + C35463) * C51243) *
                C152462 +
            ((C45228 + C45229) * C152747 +
             (C31629 * C2679 - C31630 * C2667 - C31629 * C2680 +
              C152775 * C2691 + C31627 * C2677 - C31628 * C2666 -
              C31627 * C2678 + C152846 * C2690) *
                 C51243) *
                C152807) *
               C152886) *
              C152512 * C3495 +
          ((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
            ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
               C152922 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C152925 -
           (((C35238 + C35239) * C152747 + (C32311 + C32310) * C51243) *
                C152462 +
            (C44685 * C152747 + (C32309 + C32308) * C51243) * C152807) *
               C152909 +
           (((C35463 + C35462) * C51243 + (C44957 + C44956) * C152747) *
                C152807 +
            ((C35461 + C35460) * C51243 +
             (C31627 * C3217 - C31628 * C3211 - C31627 * C3218 +
              C152846 * C3223 + C31629 * C18412 - C31630 * C18411 -
              C31629 * C18413 + C152775 * C18414) *
                 C152747) *
                C152462) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152613 -
           ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C51243) *
                C152807) *
               C152620 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C51243 +
             (C42614 + C42615) * C152747) *
                C152807 +
            ((C32308 + C32309) * C51243 + C44684 * C152747) * C152462) *
               C5033) *
              C152512 * C152489 +
          ((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
            ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
               C152620 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C152613 -
           (((C35238 + C35239) * C152747 + (C32311 + C32310) * C51243) *
                C152462 +
            (C44685 * C152747 + (C32309 + C32308) * C51243) * C152807) *
               C5033) *
              C152512 * C152498 +
          (((C31702 * C51243 + C40558 * C152747) * C152807 +
            ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
               C152613 -
           (((C33070 + C33071) * C152747 + (C32313 + C32312) * C51243) *
                C152462 +
            (C41775 * C152747 + C32316 * C51243) * C152807) *
               C152620 +
           ((C32317 * C51243 + (C35239 + C35238) * C152747) * C152807 +
            ((C32315 + C32314) * C51243 +
             (C31627 * C1713 - C31628 * C1701 - C31627 * C1714 +
              C152846 * C1737 + C31629 * C3219 - C31630 * C3212 -
              C31629 * C3220 + C152775 * C3224) *
                 C152747) *
                C152462) *
               C5033) *
              C152512 * C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C4361 -
           ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C51243) *
                C152807) *
               C152617) *
              C152512 * C152923 +
          ((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
            ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
               C152617 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C4361) *
              C152512 * C152916 +
          (((C31702 * C51243 + C40558 * C152747) * C152807 +
            ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
               C4361 -
           (((C33070 + C33071) * C152747 + (C32313 + C32312) * C51243) *
                C152462 +
            (C41775 * C152747 + C32316 * C51243) * C152807) *
               C152617) *
              C152512 * C152899 +
          (((C32724 * C51243 + (C33071 + C33070) * C152747) * C152807 +
            ((C32739 + C32738) * C51243 +
             (C31627 * C1241 - C31628 * C1231 - C31627 * C1242 +
              C152846 * C1249 + C31629 * C2890 - C31630 * C2889 -
              C31629 * C2891 + C152775 * C2892) *
                 C152747) *
                C152462) *
               C152617 -
           (((C32528 + C32529) * C152747 + (C31699 + C31698) * C51243) *
                C152462 +
            (C41120 * C152747 + C31703 * C51243) * C152807) *
               C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C51243 +
              (C40568 + C40569) * C152747) *
                 C152807 +
             ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
                C4361 -
            ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C51243) *
                 C152807) *
                C152617) *
               C152917 +
           ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                 C152807 +
             (C41774 * C51243 + C43268 * C152747) * C152462) *
                C152617 -
            ((C40547 * C152747 + C40548 * C51243) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                 C152807) *
                C4361) *
               C152901 +
           ((((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                 C152807 +
             (C40557 * C51243 + C42880 * C152747) * C152462) *
                C4361 -
            (((C43282 + C43283) * C152747 + C43277 * C51243) * C152462 +
             ((C43554 + C43555) * C152747 + (C42617 + C42616) * C51243) *
                 C152807) *
                C152617) *
               C152870) *
              C3495 +
          (((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
             ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
                C152617 -
            ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
                C4361) *
               C152917 +
           (((C40546 * C51243 + C40557 * C152747) * C152807 +
             (C40558 * C51243 + C32011 * C152747) * C152462) *
                C4361 -
            (((C34168 + C34169) * C152747 + C41775 * C51243) * C152462 +
             (C43277 * C152747 + C41765 * C51243) * C152807) *
                C152617) *
               C152901 +
           (((C43268 * C51243 + (C43283 + C43282) * C152747) * C152807 +
             ((C34169 + C34168) * C51243 +
              (C31627 * C2273 - C31628 * C2267 - C31627 * C2274 +
               C152846 * C2279 + C31629 * C9823 - C31630 * C9822 -
               C31629 * C9824 + C152775 * C9825) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C33850 + C33851) * C152747 + C40559 * C51243) * C152462 +
             (C42881 * C152747 + C40547 * C51243) * C152807) *
                C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152530 * C152828 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C152530 * C152575) *
              C873 +
          (((C40546 * C51243 + C40557 * C152747) * C152807 +
            (C40558 * C51243 + C32011 * C152747) * C152462) *
               C152530 * C152575 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C152530 * C152828) *
              C874 +
          (((C31702 * C51243 + C40558 * C152747) * C152807 +
            ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
               C152530 * C152828 -
           (((C32008 + C32009) * C152747 + C41120 * C51243) * C152462 +
            (C40559 * C152747 + C32010 * C51243) * C152807) *
               C152530 * C152575) *
              C875 +
          (((C32514 * C51243 + (C32009 + C32008) * C152747) * C152807 +
            ((C32529 + C32528) * C51243 +
             (C31627 * C398 - C31628 * C377 - C31627 * C399 + C152846 * C413 +
              C31629 * C2108 - C31630 * C2107 - C31629 * C2109 +
              C152775 * C2110) *
                 C152747) *
                C152462) *
               C152530 * C152575 -
           (((C32528 + C32529) * C152747 + (C31699 + C31698) * C51243) *
                C152462 +
            (C41120 * C152747 + C31703 * C51243) * C152807) *
               C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152530 * C1879 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C152530 * C1880 +
           (((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                C152807 +
            (C40557 * C51243 + C42880 * C152747) * C152462) *
               C152530 * C1881 -
           (((C42272 + C42273) * C152747 + C42881 * C51243) * C152462 +
            ((C42274 + C42275) * C152747 + (C42271 + C42270) * C51243) *
                C152807) *
               C152530 * C152880) *
              C152814 +
          (((C40546 * C51243 + C40557 * C152747) * C152807 +
            (C40558 * C51243 + C32011 * C152747) * C152462) *
               C152530 * C1880 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C152530 * C1879 -
           (((C33850 + C33851) * C152747 + C40559 * C51243) * C152462 +
            (C42881 * C152747 + C40547 * C51243) * C152807) *
               C152530 * C1881 +
           ((C42880 * C51243 + (C42273 + C42272) * C152747) * C152807 +
            ((C33851 + C33850) * C51243 +
             (C31627 * C1543 - C31628 * C1529 - C31627 * C1544 +
              C152846 * C1553 + C31629 * C8728 - C31630 * C8727 -
              C31629 * C8729 + C152775 * C8730) *
                 C152747) *
                C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C51243 +
              (C40568 + C40569) * C152747) *
                 C152807 +
             ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
                C152829 -
            ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C51243) *
                 C152807) *
                C152617) *
               C152828 +
           ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                 C152807 +
             (C41774 * C51243 + C43268 * C152747) * C152462) *
                C152617 -
            ((C40547 * C152747 + C40548 * C51243) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                 C152807) *
                C152829) *
               C152575) *
              C365 +
          (((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
             ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
                C152617 -
            ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
                C152829) *
               C152828 +
           (((C40546 * C51243 + C40557 * C152747) * C152807 +
             (C40558 * C51243 + C32011 * C152747) * C152462) *
                C152829 -
            (((C34168 + C34169) * C152747 + C41775 * C51243) * C152462 +
             (C43277 * C152747 + C41765 * C51243) * C152807) *
                C152617) *
               C152575) *
              C366 +
          ((((C31702 * C51243 + C40558 * C152747) * C152807 +
             ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
                C152829 -
            (((C33070 + C33071) * C152747 + (C32313 + C32312) * C51243) *
                 C152462 +
             (C41775 * C152747 + C32316 * C51243) * C152807) *
                C152617) *
               C152828 +
           (((C33072 * C51243 + (C34169 + C34168) * C152747) * C152807 +
             ((C33071 + C33070) * C51243 +
              (C31627 * C1721 - C31628 * C1705 - C31627 * C1722 +
               C152846 * C1741 + C31629 * C1735 - C31630 * C1712 -
               C31629 * C1736 + C152775 * C1748) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C32008 + C32009) * C152747 + C41120 * C51243) * C152462 +
             (C40559 * C152747 + C32010 * C51243) * C152807) *
                C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152829 -
           ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C51243) *
                C152807) *
               C152617) *
              C1879 +
          ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                C152807 +
            (C41774 * C51243 + C43268 * C152747) * C152462) *
               C152617 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C152829) *
              C1880 +
          ((((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                C152807 +
            (C40557 * C51243 + C42880 * C152747) * C152462) *
               C152829 -
           (((C43282 + C43283) * C152747 + C43277 * C51243) * C152462 +
            ((C43554 + C43555) * C152747 + (C42617 + C42616) * C51243) *
                C152807) *
               C152617) *
              C1881 +
          ((((C43555 + C43554) * C51243 +
             (C31627 * C8189 - C31628 * C8180 - C31627 * C8190 +
              C152846 * C8198 + C31629 * C8191 - C31630 * C8181 -
              C31629 * C8192 + C152775 * C8199) *
                 C152747) *
                C152807 +
            ((C43283 + C43282) * C51243 +
             (C31627 * C8187 - C31628 * C8179 - C31627 * C8188 +
              C152846 * C8197 + C31629 * C8193 - C31630 * C8182 -
              C31629 * C8194 + C152775 * C8200) *
                 C152747) *
                C152462) *
               C152617 -
           (((C42272 + C42273) * C152747 + C42881 * C51243) * C152462 +
            ((C42274 + C42275) * C152747 + (C42271 + C42270) * C51243) *
                C152807) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152530 * C152917 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C152530 * C152901 +
           (((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                C152807 +
            (C40557 * C51243 + C42880 * C152747) * C152462) *
               C152530 * C152870) *
              C365 +
          (((C40546 * C51243 + C40557 * C152747) * C152807 +
            (C40558 * C51243 + C32011 * C152747) * C152462) *
               C152530 * C152901 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C152530 * C152917 -
           (((C33850 + C33851) * C152747 + C40559 * C51243) * C152462 +
            (C42881 * C152747 + C40547 * C51243) * C152807) *
               C152530 * C152870) *
              C366 +
          (((C31702 * C51243 + C40558 * C152747) * C152807 +
            ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
               C152530 * C152917 -
           (((C32008 + C32009) * C152747 + C41120 * C51243) * C152462 +
            (C40559 * C152747 + C32010 * C51243) * C152807) *
               C152530 * C152901 +
           ((C32011 * C51243 + (C33851 + C33850) * C152747) * C152807 +
            ((C32009 + C32008) * C51243 +
             (C31627 * C1531 - C31628 * C1523 - C31627 * C1532 +
              C152846 * C1547 + C31629 * C2275 - C31630 * C2268 -
              C31629 * C2276 + C152775 * C2280) *
                 C152747) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C51243 +
            (C40568 + C40569) * C152747) *
               C152807 +
           ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
              C152530 * C152512 * C129 -
          ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
           (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
              C152530 * C152512 * C130 +
          ((C31702 * C51243 + C40558 * C152747) * C152807 +
           ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
              C152530 * C152512 * C131 -
          (((C32528 + C32529) * C152747 + (C31699 + C31698) * C51243) *
               C152462 +
           (C41120 * C152747 + C31703 * C51243) * C152807) *
              C152530 * C152512 * C132 +
          ((C31704 * C51243 + (C32529 + C32528) * C152747) * C152807 +
           ((C31701 + C31700) * C51243 +
            (C31627 * C400 - C31628 * C378 - C31627 * C401 + C152846 * C414 +
             C31629 * C1243 - C31630 * C1232 - C31629 * C1244 +
             C152775 * C1250) *
                C152747) *
               C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152918 -
           ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C51243) *
                C152807) *
               C152903 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C51243 +
             (C42614 + C42615) * C152747) *
                C152807 +
            ((C32308 + C32309) * C51243 + C44684 * C152747) * C152462) *
               C152873) *
              C152512 * C365 +
          ((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
            ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
               C152903 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C152918 -
           (((C35238 + C35239) * C152747 + (C32311 + C32310) * C51243) *
                C152462 +
            (C44685 * C152747 + (C32309 + C32308) * C51243) * C152807) *
               C152873) *
              C152512 * C366 +
          (((C31702 * C51243 + C40558 * C152747) * C152807 +
            ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
               C152918 -
           (((C33070 + C33071) * C152747 + (C32313 + C32312) * C51243) *
                C152462 +
            (C41775 * C152747 + C32316 * C51243) * C152807) *
               C152903 +
           ((C32317 * C51243 + (C35239 + C35238) * C152747) * C152807 +
            ((C32315 + C32314) * C51243 +
             (C31627 * C1713 - C31628 * C1701 - C31627 * C1714 +
              C152846 * C1737 + C31629 * C3219 - C31630 * C3212 -
              C31629 * C3220 + C152775 * C3224) *
                 C152747) *
                C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152530 * C1429 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C152530 * C1430 +
           (((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                C152807 +
            (C40557 * C51243 + C42880 * C152747) * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C40546 * C51243 + C40557 * C152747) * C152807 +
            (C40558 * C51243 + C32011 * C152747) * C152462) *
               C152530 * C1430 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C152530 * C1429 -
           (((C33850 + C33851) * C152747 + C40559 * C51243) * C152462 +
            (C42881 * C152747 + C40547 * C51243) * C152807) *
               C152530 * C152870) *
              C152897 +
          (((C31702 * C51243 + C40558 * C152747) * C152807 +
            ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
               C152530 * C1429 -
           (((C32008 + C32009) * C152747 + C41120 * C51243) * C152462 +
            (C40559 * C152747 + C32010 * C51243) * C152807) *
               C152530 * C1430 +
           ((C32011 * C51243 + (C33851 + C33850) * C152747) * C152807 +
            ((C32009 + C32008) * C51243 +
             (C31627 * C1531 - C31628 * C1523 - C31627 * C1532 +
              C152846 * C1547 + C31629 * C2275 - C31630 * C2268 -
              C31629 * C2276 + C152775 * C2280) *
                 C152747) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C51243 +
            (C40568 + C40569) * C152747) *
               C152807 +
           ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
              C152530 * C1517 -
          ((C40547 * C152747 + C40548 * C51243) * C152462 +
           ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
               C152807) *
              C152530 * C1518 +
          (((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
               C152807 +
           (C40557 * C51243 + C42880 * C152747) * C152462) *
              C152530 * C1519 -
          (((C42272 + C42273) * C152747 + C42881 * C51243) * C152462 +
           ((C42274 + C42275) * C152747 + (C42271 + C42270) * C51243) *
               C152807) *
              C152530 * C1520 +
          (((C42275 + C42274) * C51243 +
            (C31627 * C7928 - C31628 * C7923 - C31627 * C7929 +
             C152846 * C7935 + C31629 * C8937 - C31630 * C8935 -
             C31629 * C8938 + C152775 * C8941) *
                C152747) *
               C152807 +
           ((C42273 + C42272) * C51243 +
            (C31627 * C7926 - C31628 * C7922 - C31627 * C7927 +
             C152846 * C7934 + C31629 * C8939 - C31630 * C8936 -
             C31629 * C8940 + C152775 * C8942) *
                C152747) *
               C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152918 -
           ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C51243) *
                C152807) *
               C152903 +
           (((C31627 * C649 - C31628 * C633 - C31627 * C650 + C152846 * C669 +
              C31629 * C2677 - C31630 * C2666 - C31629 * C2678 +
              C152775 * C2690) *
                 C51243 +
             (C42614 + C42615) * C152747) *
                C152807 +
            ((C32308 + C32309) * C51243 + C44684 * C152747) * C152462) *
               C152873) *
              C1429 +
          ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                C152807 +
            (C41774 * C51243 + C43268 * C152747) * C152462) *
               C152903 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C152918 -
           (((C42618 + C42619) * C152747 + C44685 * C51243) * C152462 +
            ((C42620 + C42621) * C152747 + (C42615 + C42614) * C51243) *
                C152807) *
               C152873) *
              C1430 +
          ((((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                C152807 +
            (C40557 * C51243 + C42880 * C152747) * C152462) *
               C152918 -
           (((C43282 + C43283) * C152747 + C43277 * C51243) * C152462 +
            ((C43554 + C43555) * C152747 + (C42617 + C42616) * C51243) *
                C152807) *
               C152903 +
           (((C42621 + C42620) * C51243 +
             (C31627 * C8185 - C31628 * C8178 - C31627 * C8186 +
              C152846 * C8196 + C31629 * C10240 - C31630 * C10238 -
              C31629 * C10241 + C152775 * C10244) *
                 C152747) *
                C152807 +
            ((C42619 + C42618) * C51243 +
             (C31627 * C8183 - C31628 * C8177 - C31627 * C8184 +
              C152846 * C8195 + C31629 * C10242 - C31630 * C10239 -
              C31629 * C10243 + C152775 * C10245) *
                 C152747) *
                C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152829 -
           ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
            ((C41780 + C41781) * C152747 +
             (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
              C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                 C51243) *
                C152807) *
               C152617) *
              C152512 * C873 +
          ((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
            ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
               C152617 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C152829) *
              C152512 * C874 +
          (((C31702 * C51243 + C40558 * C152747) * C152807 +
            ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
               C152829 -
           (((C33070 + C33071) * C152747 + (C32313 + C32312) * C51243) *
                C152462 +
            (C41775 * C152747 + C32316 * C51243) * C152807) *
               C152617) *
              C152512 * C875 +
          (((C32724 * C51243 + (C33071 + C33070) * C152747) * C152807 +
            ((C32739 + C32738) * C51243 +
             (C31627 * C1241 - C31628 * C1231 - C31627 * C1242 +
              C152846 * C1249 + C31629 * C2890 - C31630 * C2889 -
              C31629 * C2891 + C152775 * C2892) *
                 C152747) *
                C152462) *
               C152617 -
           (((C32528 + C32529) * C152747 + (C31699 + C31698) * C51243) *
                C152462 +
            (C41120 * C152747 + C31703 * C51243) * C152807) *
               C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
               C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                  C51243 +
              (C40568 + C40569) * C152747) *
                 C152807 +
             ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
                C152829 -
            ((C41765 * C152747 + (C32306 + C32307) * C51243) * C152462 +
             ((C41780 + C41781) * C152747 +
              (C31629 * C649 - C31630 * C633 - C31629 * C650 + C152775 * C669 +
               C31627 * C647 - C31628 * C632 - C31627 * C648 + C152846 * C668) *
                  C51243) *
                 C152807) *
                C152617) *
               C1429 +
           ((((C41781 + C41780) * C51243 + (C42616 + C42617) * C152747) *
                 C152807 +
             (C41774 * C51243 + C43268 * C152747) * C152462) *
                C152617 -
            ((C40547 * C152747 + C40548 * C51243) * C152462 +
             ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                 C152807) *
                C152829) *
               C1430 +
           ((((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                 C152807 +
             (C40557 * C51243 + C42880 * C152747) * C152462) *
                C152829 -
            (((C43282 + C43283) * C152747 + C43277 * C51243) * C152462 +
             ((C43554 + C43555) * C152747 + (C42617 + C42616) * C51243) *
                 C152807) *
                C152617) *
               C152870) *
              C152814 +
          (((((C32307 + C32306) * C51243 + C41774 * C152747) * C152807 +
             ((C32305 + C32304) * C51243 + C33072 * C152747) * C152462) *
                C152617 -
            ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
             (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
                C152829) *
               C1429 +
           (((C40546 * C51243 + C40557 * C152747) * C152807 +
             (C40558 * C51243 + C32011 * C152747) * C152462) *
                C152829 -
            (((C34168 + C34169) * C152747 + C41775 * C51243) * C152462 +
             (C43277 * C152747 + C41765 * C51243) * C152807) *
                C152617) *
               C1430 +
           (((C43268 * C51243 + (C43283 + C43282) * C152747) * C152807 +
             ((C34169 + C34168) * C51243 +
              (C31627 * C2273 - C31628 * C2267 - C31627 * C2274 +
               C152846 * C2279 + C31629 * C9823 - C31630 * C9822 -
               C31629 * C9824 + C152775 * C9825) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C33850 + C33851) * C152747 + C40559 * C51243) * C152462 +
             (C42881 * C152747 + C40547 * C51243) * C152807) *
                C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C51243 +
            (C40568 + C40569) * C152747) *
               C152807 +
           ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
              C152530 * C152512 * C129 -
          ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
           (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
              C152530 * C152512 * C130 +
          ((C31702 * C51243 + C40558 * C152747) * C152807 +
           ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
              C152530 * C152512 * C131 -
          (((C32528 + C32529) * C152747 + (C31699 + C31698) * C51243) *
               C152462 +
           (C41120 * C152747 + C31703 * C51243) * C152807) *
              C152530 * C152512 * C132 +
          ((C31704 * C51243 + (C32529 + C32528) * C152747) * C152807 +
           ((C31701 + C31700) * C51243 +
            (C31627 * C400 - C31628 * C378 - C31627 * C401 + C152846 * C414 +
             C31629 * C1243 - C31630 * C1232 - C31629 * C1244 +
             C152775 * C1250) *
                C152747) *
               C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152530 * C152917 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C152530 * C152901 +
           (((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                C152807 +
            (C40557 * C51243 + C42880 * C152747) * C152462) *
               C152530 * C152870) *
              C365 +
          (((C40546 * C51243 + C40557 * C152747) * C152807 +
            (C40558 * C51243 + C32011 * C152747) * C152462) *
               C152530 * C152901 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C152530 * C152917 -
           (((C33850 + C33851) * C152747 + C40559 * C51243) * C152462 +
            (C42881 * C152747 + C40547 * C51243) * C152807) *
               C152530 * C152870) *
              C366 +
          (((C31702 * C51243 + C40558 * C152747) * C152807 +
            ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
               C152530 * C152917 -
           (((C32008 + C32009) * C152747 + C41120 * C51243) * C152462 +
            (C40559 * C152747 + C32010 * C51243) * C152807) *
               C152530 * C152901 +
           ((C32011 * C51243 + (C33851 + C33850) * C152747) * C152807 +
            ((C32009 + C32008) * C51243 +
             (C31627 * C1531 - C31628 * C1523 - C31627 * C1532 +
              C152846 * C1547 + C31629 * C2275 - C31630 * C2268 -
              C31629 * C2276 + C152775 * C2280) *
                 C152747) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
              C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                 C51243 +
             (C40568 + C40569) * C152747) *
                C152807 +
            ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
               C152530 * C1429 -
           ((C40547 * C152747 + C40548 * C51243) * C152462 +
            ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
                C152807) *
               C152530 * C1430 +
           (((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
                C152807 +
            (C40557 * C51243 + C42880 * C152747) * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C40546 * C51243 + C40557 * C152747) * C152807 +
            (C40558 * C51243 + C32011 * C152747) * C152462) *
               C152530 * C1430 -
           ((C32010 * C152747 + (C31695 + C31694) * C51243) * C152462 +
            (C40548 * C152747 + (C31693 + C31692) * C51243) * C152807) *
               C152530 * C1429 -
           (((C33850 + C33851) * C152747 + C40559 * C51243) * C152462 +
            (C42881 * C152747 + C40547 * C51243) * C152807) *
               C152530 * C152870) *
              C152897 +
          (((C31702 * C51243 + C40558 * C152747) * C152807 +
            ((C31697 + C31696) * C51243 + C32514 * C152747) * C152462) *
               C152530 * C1429 -
           (((C32008 + C32009) * C152747 + C41120 * C51243) * C152462 +
            (C40559 * C152747 + C32010 * C51243) * C152807) *
               C152530 * C1430 +
           ((C32011 * C51243 + (C33851 + C33850) * C152747) * C152807 +
            ((C32009 + C32008) * C51243 +
             (C31627 * C1531 - C31628 * C1523 - C31627 * C1532 +
              C152846 * C1547 + C31629 * C2275 - C31630 * C2268 -
              C31629 * C2276 + C152775 * C2280) *
                 C152747) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31627 * C144 - C31628 * C136 - C31627 * C145 + C152846 * C160 +
             C31629 * C647 - C31630 * C632 - C31629 * C648 + C152775 * C668) *
                C51243 +
            (C40568 + C40569) * C152747) *
               C152807 +
           ((C31692 + C31693) * C51243 + C40546 * C152747) * C152462) *
              C152530 * C1517 -
          ((C40547 * C152747 + C40548 * C51243) * C152462 +
           ((C40570 + C40571) * C152747 + (C40569 + C40568) * C51243) *
               C152807) *
              C152530 * C1518 +
          (((C40571 + C40570) * C51243 + (C42270 + C42271) * C152747) *
               C152807 +
           (C40557 * C51243 + C42880 * C152747) * C152462) *
              C152530 * C1519 -
          (((C42272 + C42273) * C152747 + C42881 * C51243) * C152462 +
           ((C42274 + C42275) * C152747 + (C42271 + C42270) * C51243) *
               C152807) *
              C152530 * C1520 +
          (((C42275 + C42274) * C51243 +
            (C31627 * C7928 - C31628 * C7923 - C31627 * C7929 +
             C152846 * C7935 + C31629 * C8937 - C31630 * C8935 -
             C31629 * C8938 + C152775 * C8941) *
                C152747) *
               C152807 +
           ((C42273 + C42272) * C51243 +
            (C31627 * C7926 - C31628 * C7922 - C31627 * C7927 +
             C152846 * C7934 + C31629 * C8939 - C31630 * C8936 -
             C31629 * C8940 + C152775 * C8942) *
                C152747) *
               C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[225] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152530 * C152571 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152530 * C152578 +
           ((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152530 * C3839) *
              C152489 +
          (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
            C51920 * C51247) *
               C152530 * C152578 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152530 * C152571 -
           ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
            (C51485 + C51484) * C51245) *
               C152530 * C3839) *
              C152498 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152530 * C152571 -
           ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
            C51492 * C51245) *
               C152530 * C152578 +
           (C51493 * C51245 + (C51491 + C51490) * C51246 +
            (C472 * C51243 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C152747) *
                C51247) *
               C152530 * C3839) *
              C3842)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C152571 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C152578 +
           (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152530 * C3839) *
              C152489 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C152578 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C152571 -
           (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
               C152457 * C152530 * C3839) *
              C152498 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152530 * C152571 -
           (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
               C152457 * C152530 * C152578 +
           (C469 * C59414 + C1909 * C59415 + C6618 * C59416 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C59417) *
               C152457 * C152530 * C3839) *
              C3842)) /
            (p * q * std::sqrt(p + q));
    d2ee[226] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C152829 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C152617) *
               C152571 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C152617 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C152829) *
               C152578 +
           (((C6615 * C51243 + C6616 * C152747) * C51245 +
             (C51484 + C51485) * C51246 + C51493 * C51247) *
                C152829 -
            ((C53463 + C53464) * C51247 + (C53465 + C53466) * C51246 +
             (C8234 * C152747 + C7577 * C51243) * C51245) *
                C152617) *
               C3839) *
              C3495 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C152617 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C152829) *
               C152571 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C152829 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C152617) *
               C152578 +
           (((C53466 + C53465) * C51245 + (C53464 + C53463) * C51246 +
             (C2130 * C51243 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C152747) *
                 C51247) *
                C152617 -
            ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
             (C51485 + C51484) * C51245) *
                C152829) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C152829 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152617) *
               C152571 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152617 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C152829) *
               C152578 +
           ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 +
             C7959 * C59417) *
                C152457 * C152829 -
            (C61026 * C59417 + C8950 * C59416 + C8234 * C59415 +
             C7577 * C59414) *
                C152457 * C152617) *
               C3839) *
              C3495 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152617 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C152829) *
               C152571 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C152829 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152617) *
               C152578 +
           ((C2132 * C59414 + C7579 * C59415 + C8740 * C59416 +
             (C134 * C8939 - C135 * C8936 - C134 * C8940 + C152711 * C8942) *
                 C59417) *
                C152457 * C152617 -
            (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
                C152457 * C152829) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[227] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152530 * C152924 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152530 * C152920 +
           ((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152530 * C152906 -
           ((C53169 + C53170) * C51247 + (C53171 + C53172) * C51246 +
            (C7957 * C152747 + C6616 * C51243) * C51245) *
               C152530 * C152880) *
              C3495 +
          (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
            C51920 * C51247) *
               C152530 * C152920 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152530 * C152924 -
           ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
            (C51485 + C51484) * C51245) *
               C152530 * C152906 +
           ((C53172 + C53171) * C51245 + (C53170 + C53169) * C51246 +
            (C1908 * C51243 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C152747) *
                C51247) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152530 * C3355 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152530 * C152575) *
              C152923 +
          (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
            C51920 * C51247) *
               C152530 * C152575 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152530 * C3355) *
              C152916 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152530 * C3355 -
           ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
            C51492 * C51245) *
               C152530 * C152575) *
              C152899 +
          ((C51920 * C51245 + (C51922 + C51921) * C51246 +
            (C888 * C51243 +
             (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                 C152747) *
                C51247) *
               C152530 * C152575 -
           ((C51257 + C51258) * C51247 + (C51256 + C51255) * C51246 +
            C51260 * C51245) *
               C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C152918 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C152903 +
            (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                  C51243 +
              C8232 * C152747) *
                 C51245 +
             (C51716 + C51717) * C51246 + C51725 * C51247) *
                C152873) *
               C3355 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C152903 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C152918 -
            ((C54509 + C54510) * C51247 + (C54511 + C54512) * C51246 +
             (C8233 * C152747 + C8232 * C51243) * C51245) *
                C152873) *
               C152575) *
              C3495 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C152903 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C152918 -
            ((C51722 + C51723) * C51247 + (C51719 + C51718) * C51246 +
             (C51717 + C51716) * C51245) *
                C152873) *
               C3355 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C152918 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C152903 +
            ((C54512 + C54511) * C51245 + (C54510 + C54509) * C51246 +
             (C2912 * C51243 +
              (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                  C152747) *
                 C51247) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C3355 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C152575) *
              C152923 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C152575 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C3355) *
              C152916 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152530 * C3355 -
           (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
               C152457 * C152530 * C152575) *
              C152899 +
          ((C465 * C59414 + C470 * C59415 + C1908 * C59416 +
            (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                C59417) *
               C152457 * C152530 * C152575 -
           (C1908 * C59417 + C470 * C59416 + C465 * C59415 + C207 * C59414) *
               C152457 * C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C152924 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C152920 +
           (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152530 * C152906 -
           (C60404 * C59417 + C7959 * C59416 + C7957 * C59415 +
            C6616 * C59414) *
               C152457 * C152530 * C152880) *
              C3495 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C152920 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C152924 -
           (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
               C152457 * C152530 * C152906 +
           (C1910 * C59414 + C6617 * C59415 + C7958 * C59416 +
            (C134 * C7932 - C135 * C7925 - C134 * C7933 + C152711 * C7937) *
                C59417) *
               C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C152918 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152903 +
            ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C59414 +
             C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
                C152457 * C152873) *
               C3355 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152903 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C152918 -
            (C60561 * C59417 + C8236 * C59416 + C8233 * C59415 +
             C8232 * C59414) *
                C152457 * C152873) *
               C152575) *
              C3495 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152903 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C152918 -
            (C8235 * C59417 + C6861 * C59416 + C2914 * C59415 + C729 * C59414) *
                C152457 * C152873) *
               C3355 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C152918 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152903 +
            (C2914 * C59414 + C6861 * C59415 + C8235 * C59416 +
             (C134 * C8193 - C135 * C8182 - C134 * C8194 + C152711 * C8200) *
                 C59417) *
                C152457 * C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[228] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C152829 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C152617) *
               C3355 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C152617 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C152829) *
               C152575) *
              C152489 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C152617 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C152829) *
               C3355 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C152829 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C152617) *
               C152575) *
              C152498 +
          (((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
                C152829 -
            ((C52118 + C52119) * C51247 + (C51721 + C51720) * C51246 +
             C51724 * C51245) *
                C152617) *
               C3355 +
           ((C52416 * C51245 + (C52415 + C52414) * C51246 +
             (C1279 * C51243 +
              (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                  C152747) *
                 C51247) *
                C152617 -
            ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
             C51492 * C51245) *
                C152829) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C152829 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152617) *
               C3355 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152617 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C152829) *
               C152575) *
              C152489 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152617 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C152829) *
               C3355 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C152829 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152617) *
               C152575) *
              C152498 +
          (((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
                C152457 * C152829 -
            (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
                C152457 * C152617) *
               C3355 +
           ((C1277 * C59414 + C2131 * C59415 + C7580 * C59416 +
             (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                 C59417) *
                C152457 * C152617 -
            (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
                C152457 * C152829) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q));
    d2ee[229] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152530 * C3355 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152530 * C152575) *
              C152923 +
          (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
            C51920 * C51247) *
               C152530 * C152575 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152530 * C3355) *
              C152916 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152530 * C3355 -
           ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
            C51492 * C51245) *
               C152530 * C152575) *
              C152899 +
          ((C51920 * C51245 + (C51922 + C51921) * C51246 +
            (C888 * C51243 +
             (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                 C152747) *
                C51247) *
               C152530 * C152575 -
           ((C51257 + C51258) * C51247 + (C51256 + C51255) * C51246 +
            C51260 * C51245) *
               C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152530 * C152924 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152530 * C152920 +
           ((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152530 * C152906 -
           ((C53169 + C53170) * C51247 + (C53171 + C53172) * C51246 +
            (C7957 * C152747 + C6616 * C51243) * C51245) *
               C152530 * C152880) *
              C3495 +
          (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
            C51920 * C51247) *
               C152530 * C152920 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152530 * C152924 -
           ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
            (C51485 + C51484) * C51245) *
               C152530 * C152906 +
           ((C53172 + C53171) * C51245 + (C53170 + C53169) * C51246 +
            (C1908 * C51243 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C152747) *
                C51247) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C3355 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C152575) *
              C152923 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C152575 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C3355) *
              C152916 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152530 * C3355 -
           (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
               C152457 * C152530 * C152575) *
              C152899 +
          ((C465 * C59414 + C470 * C59415 + C1908 * C59416 +
            (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                C59417) *
               C152457 * C152530 * C152575 -
           (C1908 * C59417 + C470 * C59416 + C465 * C59415 + C207 * C59414) *
               C152457 * C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C152924 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C152920 +
           (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152530 * C152906 -
           (C60404 * C59417 + C7959 * C59416 + C7957 * C59415 +
            C6616 * C59414) *
               C152457 * C152530 * C152880) *
              C3495 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C152920 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C152924 -
           (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
               C152457 * C152530 * C152906 +
           (C1910 * C59414 + C6617 * C59415 + C7958 * C59416 +
            (C134 * C7932 - C135 * C7925 - C134 * C7933 + C152711 * C7937) *
                C59417) *
               C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[230] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C4361 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C152617) *
               C152571 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C152617 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C4361) *
               C152578 +
           (((C6615 * C51243 + C6616 * C152747) * C51245 +
             (C51484 + C51485) * C51246 + C51493 * C51247) *
                C4361 -
            ((C53463 + C53464) * C51247 + (C53465 + C53466) * C51246 +
             (C8234 * C152747 + C7577 * C51243) * C51245) *
                C152617) *
               C3839) *
              C152814 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C152617 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C4361) *
               C152571 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C4361 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C152617) *
               C152578 +
           (((C53466 + C53465) * C51245 + (C53464 + C53463) * C51246 +
             (C2130 * C51243 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C152747) *
                 C51247) *
                C152617 -
            ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
             (C51485 + C51484) * C51245) *
                C4361) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C4361 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152617) *
               C152571 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152617 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C4361) *
               C152578 +
           ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 +
             C7959 * C59417) *
                C152457 * C4361 -
            (C61026 * C59417 + C8950 * C59416 + C8234 * C59415 +
             C7577 * C59414) *
                C152457 * C152617) *
               C3839) *
              C152814 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152617 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C4361) *
               C152571 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C4361 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152617) *
               C152578 +
           ((C2132 * C59414 + C7579 * C59415 + C8740 * C59416 +
             (C134 * C8939 - C135 * C8936 - C134 * C8940 + C152711 * C8942) *
                 C59417) *
                C152457 * C152617 -
            (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
                C152457 * C4361) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[231] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152613 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C152620 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C51243 +
             C8232 * C152747) *
                C51245 +
            (C51716 + C51717) * C51246 + C51725 * C51247) *
               C5033) *
              C152571 +
          (((C7578 * C51243 + C7577 * C152747) * C51245 +
            (C52410 + C52411) * C51246 + C52416 * C51247) *
               C152620 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152613 -
           ((C54509 + C54510) * C51247 + (C54511 + C54512) * C51246 +
            (C8233 * C152747 + C8232 * C51243) * C51245) *
               C5033) *
              C152578 +
          (((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152613 -
           ((C53463 + C53464) * C51247 + (C53465 + C53466) * C51246 +
            (C8234 * C152747 + C7577 * C51243) * C51245) *
               C152620 +
           ((C8233 * C51243 + C8236 * C152747) * C51245 +
            (C6861 * C51243 + C8235 * C152747) * C51246 +
            (C6862 * C51243 +
             (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                 C152747) *
                C51247) *
               C5033) *
              C3839) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152613 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152620 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C5033) *
              C152571 +
          ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 + C8950 * C59417) *
               C152457 * C152620 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152613 -
           (C60561 * C59417 + C8236 * C59416 + C8233 * C59415 +
            C8232 * C59414) *
               C152457 * C5033) *
              C152578 +
          ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152613 -
           (C61026 * C59417 + C8950 * C59416 + C8234 * C59415 +
            C7577 * C59414) *
               C152457 * C152620 +
           (C8233 * C59414 + C8236 * C59415 + C60561 * C59416 +
            (C134 * C60551 - C135 * C60550 - C134 * C60552 + C152711 * C60553) *
                C59417) *
               C152457 * C5033) *
              C3839) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[232] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C4361 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C152617) *
              C152924 +
          (((C7578 * C51243 + C7577 * C152747) * C51245 +
            (C52410 + C52411) * C51246 + C52416 * C51247) *
               C152617 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C4361) *
              C152920 +
          (((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C4361 -
           ((C53463 + C53464) * C51247 + (C53465 + C53466) * C51246 +
            (C8234 * C152747 + C7577 * C51243) * C51245) *
               C152617) *
              C152906 +
          (((C8234 * C51243 + C8950 * C152747) * C51245 +
            (C7579 * C51243 + C8740 * C152747) * C51246 +
            (C7580 * C51243 +
             (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                 C152747) *
                C51247) *
               C152617 -
           ((C53169 + C53170) * C51247 + (C53171 + C53172) * C51246 +
            (C7957 * C152747 + C6616 * C51243) * C51245) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C4361 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C152617) *
               C3355 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C152617 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C4361) *
               C152575) *
              C152914 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C152617 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C4361) *
               C3355 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C4361 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C152617) *
               C152575) *
              C152897 +
          (((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
                C4361 -
            ((C52118 + C52119) * C51247 + (C51721 + C51720) * C51246 +
             C51724 * C51245) *
                C152617) *
               C3355 +
           ((C52416 * C51245 + (C52415 + C52414) * C51246 +
             (C1279 * C51243 +
              (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                  C152747) *
                 C51247) *
                C152617 -
            ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
             C51492 * C51245) *
                C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152925 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C152922 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C51243 +
             C8232 * C152747) *
                C51245 +
            (C51716 + C51717) * C51246 + C51725 * C51247) *
               C152909 -
           ((C54707 + C54708) * C51247 + (C54709 + C54710) * C51246 +
            (C10260 * C152747 +
             (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                 C51243) *
                C51245) *
               C152886) *
              C3355 +
          (((C7578 * C51243 + C7577 * C152747) * C51245 +
            (C52410 + C52411) * C51246 + C52416 * C51247) *
               C152922 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152925 -
           ((C54509 + C54510) * C51247 + (C54511 + C54512) * C51246 +
            (C8233 * C152747 + C8232 * C51243) * C51245) *
               C152909 +
           ((C10260 * C51243 + C10259 * C152747) * C51245 +
            (C10042 * C51243 + C10041 * C152747) * C51246 +
            (C26880 * C51243 + (C134 * C10024 - C135 * C10023 - C134 * C10025 +
                                C152711 * C10026) *
                                   C152747) *
                C51247) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C4361 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152617) *
               C3355 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152617 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C4361) *
               C152575) *
              C152914 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152617 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C4361) *
               C3355 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C4361 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152617) *
               C152575) *
              C152897 +
          (((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
                C152457 * C4361 -
            (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
                C152457 * C152617) *
               C3355 +
           ((C1277 * C59414 + C2131 * C59415 + C7580 * C59416 +
             (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                 C59417) *
                C152457 * C152617 -
            (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
                C152457 * C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C4361 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152617) *
              C152924 +
          ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 + C8950 * C59417) *
               C152457 * C152617 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C4361) *
              C152920 +
          ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C4361 -
           (C61026 * C59417 + C8950 * C59416 + C8234 * C59415 +
            C7577 * C59414) *
               C152457 * C152617) *
              C152906 +
          ((C8234 * C59414 + C8950 * C59415 + C61026 * C59416 +
            (C134 * C61016 - C135 * C61015 - C134 * C61017 + C152711 * C61018) *
                C59417) *
               C152457 * C152617 -
           (C60404 * C59417 + C7959 * C59416 + C7957 * C59415 +
            C6616 * C59414) *
               C152457 * C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152925 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152922 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C152909 -
           (C61869 * C59417 + C10259 * C59416 + C10260 * C59415 +
            (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                C59414) *
               C152457 * C152886) *
              C3355 +
          ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 + C8950 * C59417) *
               C152457 * C152922 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152925 -
           (C60561 * C59417 + C8236 * C59416 + C8233 * C59415 +
            C8232 * C59414) *
               C152457 * C152909 +
           (C10260 * C59414 + C10259 * C59415 + C61869 * C59416 +
            (C134 * C61859 - C135 * C61858 - C134 * C61860 + C152711 * C61861) *
                C59417) *
               C152457 * C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[233] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C152613 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C152620 +
            (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                  C51243 +
              C8232 * C152747) *
                 C51245 +
             (C51716 + C51717) * C51246 + C51725 * C51247) *
                C5033) *
               C3355 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C152620 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C152613 -
            ((C54509 + C54510) * C51247 + (C54511 + C54512) * C51246 +
             (C8233 * C152747 + C8232 * C51243) * C51245) *
                C5033) *
               C152575) *
              C152814 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C152620 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C152613 -
            ((C51722 + C51723) * C51247 + (C51719 + C51718) * C51246 +
             (C51717 + C51716) * C51245) *
                C5033) *
               C3355 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C152613 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C152620 +
            ((C54512 + C54511) * C51245 + (C54510 + C54509) * C51246 +
             (C2912 * C51243 +
              (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                  C152747) *
                 C51247) *
                C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C152613 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152620 +
            ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C59414 +
             C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
                C152457 * C5033) *
               C3355 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152620 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C152613 -
            (C60561 * C59417 + C8236 * C59416 + C8233 * C59415 +
             C8232 * C59414) *
                C152457 * C5033) *
               C152575) *
              C152814 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152620 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C152613 -
            (C8235 * C59417 + C6861 * C59416 + C2914 * C59415 + C729 * C59414) *
                C152457 * C5033) *
               C3355 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C152613 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152620 +
            (C2914 * C59414 + C6861 * C59415 + C8235 * C59416 +
             (C134 * C8193 - C135 * C8182 - C134 * C8194 + C152711 * C8200) *
                 C59417) *
                C152457 * C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[234] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C4361 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C152617) *
               C3355 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C152617 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C4361) *
               C152575) *
              C152914 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C152617 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C4361) *
               C3355 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C4361 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C152617) *
               C152575) *
              C152897 +
          (((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
                C4361 -
            ((C52118 + C52119) * C51247 + (C51721 + C51720) * C51246 +
             C51724 * C51245) *
                C152617) *
               C3355 +
           ((C52416 * C51245 + (C52415 + C52414) * C51246 +
             (C1279 * C51243 +
              (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                  C152747) *
                 C51247) *
                C152617 -
            ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
             C51492 * C51245) *
                C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C4361 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C152617) *
              C152924 +
          (((C7578 * C51243 + C7577 * C152747) * C51245 +
            (C52410 + C52411) * C51246 + C52416 * C51247) *
               C152617 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C4361) *
              C152920 +
          (((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C4361 -
           ((C53463 + C53464) * C51247 + (C53465 + C53466) * C51246 +
            (C8234 * C152747 + C7577 * C51243) * C51245) *
               C152617) *
              C152906 +
          (((C8234 * C51243 + C8950 * C152747) * C51245 +
            (C7579 * C51243 + C8740 * C152747) * C51246 +
            (C7580 * C51243 +
             (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                 C152747) *
                C51247) *
               C152617 -
           ((C53169 + C53170) * C51247 + (C53171 + C53172) * C51246 +
            (C7957 * C152747 + C6616 * C51243) * C51245) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C4361 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152617) *
               C3355 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152617 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C4361) *
               C152575) *
              C152914 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152617 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C4361) *
               C3355 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C4361 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152617) *
               C152575) *
              C152897 +
          (((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
                C152457 * C4361 -
            (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
                C152457 * C152617) *
               C3355 +
           ((C1277 * C59414 + C2131 * C59415 + C7580 * C59416 +
             (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                 C59417) *
                C152457 * C152617 -
            (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
                C152457 * C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C4361 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152617) *
              C152924 +
          ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 + C8950 * C59417) *
               C152457 * C152617 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C4361) *
              C152920 +
          ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C4361 -
           (C61026 * C59417 + C8950 * C59416 + C8234 * C59415 +
            C7577 * C59414) *
               C152457 * C152617) *
              C152906 +
          ((C8234 * C59414 + C8950 * C59415 + C61026 * C59416 +
            (C134 * C61016 - C135 * C61015 - C134 * C61017 + C152711 * C61018) *
                C59417) *
               C152457 * C152617 -
           (C60404 * C59417 + C7959 * C59416 + C7957 * C59415 +
            C6616 * C59414) *
               C152457 * C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[235] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152530 * C1879 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152530 * C1880 +
           ((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152530 * C1881 -
           ((C53169 + C53170) * C51247 + (C53171 + C53172) * C51246 +
            (C7957 * C152747 + C6616 * C51243) * C51245) *
               C152530 * C152880) *
              C152814 +
          (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
            C51920 * C51247) *
               C152530 * C1880 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152530 * C1879 -
           ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
            (C51485 + C51484) * C51245) *
               C152530 * C1881 +
           ((C53172 + C53171) * C51245 + (C53170 + C53169) * C51246 +
            (C1908 * C51243 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C152747) *
                C51247) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152530 * C152828 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152530 * C152575) *
              C873 +
          (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
            C51920 * C51247) *
               C152530 * C152575 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152530 * C152828) *
              C874 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152530 * C152828 -
           ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
            C51492 * C51245) *
               C152530 * C152575) *
              C875 +
          ((C51920 * C51245 + (C51922 + C51921) * C51246 +
            (C888 * C51243 +
             (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                 C152747) *
                C51247) *
               C152530 * C152575 -
           ((C51257 + C51258) * C51247 + (C51256 + C51255) * C51246 +
            C51260 * C51245) *
               C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C2427 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C2428 +
            (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                  C51243 +
              C8232 * C152747) *
                 C51245 +
             (C51716 + C51717) * C51246 + C51725 * C51247) *
                C152873) *
               C152828 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C2428 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C2427 -
            ((C54509 + C54510) * C51247 + (C54511 + C54512) * C51246 +
             (C8233 * C152747 + C8232 * C51243) * C51245) *
                C152873) *
               C152575) *
              C152814 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C2428 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C2427 -
            ((C51722 + C51723) * C51247 + (C51719 + C51718) * C51246 +
             (C51717 + C51716) * C51245) *
                C152873) *
               C152828 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C2427 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C2428 +
            ((C54512 + C54511) * C51245 + (C54510 + C54509) * C51246 +
             (C2912 * C51243 +
              (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                  C152747) *
                 C51247) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C152828 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C152575) *
              C873 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C152575 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C152828) *
              C874 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152530 * C152828 -
           (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
               C152457 * C152530 * C152575) *
              C875 +
          ((C465 * C59414 + C470 * C59415 + C1908 * C59416 +
            (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                C59417) *
               C152457 * C152530 * C152575 -
           (C1908 * C59417 + C470 * C59416 + C465 * C59415 + C207 * C59414) *
               C152457 * C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C1879 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C1880 +
           (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152530 * C1881 -
           (C60404 * C59417 + C7959 * C59416 + C7957 * C59415 +
            C6616 * C59414) *
               C152457 * C152530 * C152880) *
              C152814 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C1880 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C1879 -
           (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
               C152457 * C152530 * C1881 +
           (C1910 * C59414 + C6617 * C59415 + C7958 * C59416 +
            (C134 * C7932 - C135 * C7925 - C134 * C7933 + C152711 * C7937) *
                C59417) *
               C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C2427 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C2428 +
            ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C59414 +
             C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
                C152457 * C152873) *
               C152828 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C2428 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C2427 -
            (C60561 * C59417 + C8236 * C59416 + C8233 * C59415 +
             C8232 * C59414) *
                C152457 * C152873) *
               C152575) *
              C152814 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C2428 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C2427 -
            (C8235 * C59417 + C6861 * C59416 + C2914 * C59415 + C729 * C59414) *
                C152457 * C152873) *
               C152828 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C2427 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C2428 +
            (C2914 * C59414 + C6861 * C59415 + C8235 * C59416 +
             (C134 * C8193 - C135 * C8182 - C134 * C8194 + C152711 * C8200) *
                 C59417) *
                C152457 * C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[236] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152829 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C152617) *
              C1879 +
          (((C7578 * C51243 + C7577 * C152747) * C51245 +
            (C52410 + C52411) * C51246 + C52416 * C51247) *
               C152617 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152829) *
              C1880 +
          (((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152829 -
           ((C53463 + C53464) * C51247 + (C53465 + C53466) * C51246 +
            (C8234 * C152747 + C7577 * C51243) * C51245) *
               C152617) *
              C1881 +
          (((C8234 * C51243 + C8950 * C152747) * C51245 +
            (C7579 * C51243 + C8740 * C152747) * C51246 +
            (C7580 * C51243 +
             (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                 C152747) *
                C51247) *
               C152617 -
           ((C53169 + C53170) * C51247 + (C53171 + C53172) * C51246 +
            (C7957 * C152747 + C6616 * C51243) * C51245) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C152829 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C152617) *
               C152828 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C152617 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C152829) *
               C152575) *
              C365 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C152617 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C152829) *
               C152828 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C152829 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C152617) *
               C152575) *
              C366 +
          (((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
                C152829 -
            ((C52118 + C52119) * C51247 + (C51721 + C51720) * C51246 +
             C51724 * C51245) *
                C152617) *
               C152828 +
           ((C52416 * C51245 + (C52415 + C52414) * C51246 +
             (C1279 * C51243 +
              (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                  C152747) *
                 C51247) *
                C152617 -
            ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
             C51492 * C51245) *
                C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C3047 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C3048 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C51243 +
             C8232 * C152747) *
                C51245 +
            (C51716 + C51717) * C51246 + C51725 * C51247) *
               C3049 -
           ((C54707 + C54708) * C51247 + (C54709 + C54710) * C51246 +
            (C10260 * C152747 +
             (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                 C51243) *
                C51245) *
               C152886) *
              C152828 +
          (((C7578 * C51243 + C7577 * C152747) * C51245 +
            (C52410 + C52411) * C51246 + C52416 * C51247) *
               C3048 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C3047 -
           ((C54509 + C54510) * C51247 + (C54511 + C54512) * C51246 +
            (C8233 * C152747 + C8232 * C51243) * C51245) *
               C3049 +
           ((C10260 * C51243 + C10259 * C152747) * C51245 +
            (C10042 * C51243 + C10041 * C152747) * C51246 +
            (C26880 * C51243 + (C134 * C10024 - C135 * C10023 - C134 * C10025 +
                                C152711 * C10026) *
                                   C152747) *
                C51247) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C152829 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152617) *
               C152828 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152617 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C152829) *
               C152575) *
              C365 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152617 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C152829) *
               C152828 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C152829 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152617) *
               C152575) *
              C366 +
          (((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
                C152457 * C152829 -
            (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
                C152457 * C152617) *
               C152828 +
           ((C1277 * C59414 + C2131 * C59415 + C7580 * C59416 +
             (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                 C59417) *
                C152457 * C152617 -
            (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
                C152457 * C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152829 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152617) *
              C1879 +
          ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 + C8950 * C59417) *
               C152457 * C152617 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152829) *
              C1880 +
          ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152829 -
           (C61026 * C59417 + C8950 * C59416 + C8234 * C59415 +
            C7577 * C59414) *
               C152457 * C152617) *
              C1881 +
          ((C8234 * C59414 + C8950 * C59415 + C61026 * C59416 +
            (C134 * C61016 - C135 * C61015 - C134 * C61017 + C152711 * C61018) *
                C59417) *
               C152457 * C152617 -
           (C60404 * C59417 + C7959 * C59416 + C7957 * C59415 +
            C6616 * C59414) *
               C152457 * C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C3047 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C3048 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C3049 -
           (C61869 * C59417 + C10259 * C59416 + C10260 * C59415 +
            (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                C59414) *
               C152457 * C152886) *
              C152828 +
          ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 + C8950 * C59417) *
               C152457 * C3048 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C3047 -
           (C60561 * C59417 + C8236 * C59416 + C8233 * C59415 +
            C8232 * C59414) *
               C152457 * C3049 +
           (C10260 * C59414 + C10259 * C59415 + C61869 * C59416 +
            (C134 * C61859 - C135 * C61858 - C134 * C61860 + C152711 * C61861) *
                C59417) *
               C152457 * C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[237] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                    C51243 +
                C6614 * C152747) *
                   C51245 +
               (C51249 + C51250) * C51246 + C51259 * C51247) *
                  C152530 * C152512 * C129 -
              (C51260 * C51247 + (C51252 + C51251) * C51246 +
               (C51250 + C51249) * C51245) *
                  C152530 * C152512 * C130 +
              (C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
                  C152530 * C152512 * C131 -
              ((C51257 + C51258) * C51247 + (C51256 + C51255) * C51246 +
               C51260 * C51245) *
                  C152530 * C152512 * C132 +
              (C51261 * C51245 + (C51258 + C51257) * C51246 +
               (C210 * C51243 +
                (C134 * C878 - C135 * C877 - C134 * C879 + C152711 * C880) *
                    C152747) *
                   C51247) *
                  C152530 * C152512 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                     C51243 +
                 C6614 * C152747) *
                    C51245 +
                (C51249 + C51250) * C51246 + C51259 * C51247) *
                   C152530 * C152917 -
               (C51492 * C51247 + (C51482 + C51483) * C51246 +
                (C6615 * C152747 + C6614 * C51243) * C51245) *
                   C152530 * C152901 +
               ((C6615 * C51243 + C6616 * C152747) * C51245 +
                (C51484 + C51485) * C51246 + C51493 * C51247) *
                   C152530 * C152870) *
                  C365 +
              (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
                (C51488 + C51489) * C51247) *
                   C152530 * C152901 -
               (C51260 * C51247 + (C51252 + C51251) * C51246 +
                (C51250 + C51249) * C51245) *
                   C152530 * C152917 -
               ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
                (C51485 + C51484) * C51245) *
                   C152530 * C152870) *
                  C366 +
              ((C51259 * C51245 + (C51254 + C51253) * C51246 +
                C51261 * C51247) *
                   C152530 * C152917 -
               ((C472 * C152747 + C471 * C51243) * C51247 +
                (C51489 + C51488) * C51246 + C51492 * C51245) *
                   C152530 * C152901 +
               (C51493 * C51245 + (C51491 + C51490) * C51246 +
                (C472 * C51243 + (C134 * C1886 - C135 * C1885 - C134 * C1887 +
                                  C152711 * C1888) *
                                     C152747) *
                    C51247) *
                   C152530 * C152870) *
                  C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152918 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C152903 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C51243 +
             C8232 * C152747) *
                C51245 +
            (C51716 + C51717) * C51246 + C51725 * C51247) *
               C152873) *
              C152512 * C365 +
          (((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
            (C51720 + C51721) * C51247) *
               C152903 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152918 -
           ((C51722 + C51723) * C51247 + (C51719 + C51718) * C51246 +
            (C51717 + C51716) * C51245) *
               C152873) *
              C152512 * C366 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152918 -
           ((C1279 * C152747 + C732 * C51243) * C51247 +
            (C51721 + C51720) * C51246 + C51724 * C51245) *
               C152903 +
           (C51725 * C51245 + (C51723 + C51722) * C51246 +
            (C733 * C51243 +
             (C134 * C2890 - C135 * C2889 - C134 * C2891 + C152711 * C2892) *
                 C152747) *
                C51247) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152530 * C1429 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152530 * C1430 +
           ((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152530 * C152870) *
              C152914 +
          (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
            C51920 * C51247) *
               C152530 * C1430 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152530 * C1429 -
           ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
            (C51485 + C51484) * C51245) *
               C152530 * C152870) *
              C152897 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152530 * C1429 -
           ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
            C51492 * C51245) *
               C152530 * C1430 +
           (C51493 * C51245 + (C51491 + C51490) * C51246 +
            (C472 * C51243 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C152747) *
                C51247) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C51243 +
            C6614 * C152747) *
               C51245 +
           (C51249 + C51250) * C51246 + C51259 * C51247) *
              C152530 * C1517 -
          (C51492 * C51247 + (C51482 + C51483) * C51246 +
           (C6615 * C152747 + C6614 * C51243) * C51245) *
              C152530 * C1518 +
          ((C6615 * C51243 + C6616 * C152747) * C51245 +
           (C51484 + C51485) * C51246 + C51493 * C51247) *
              C152530 * C1519 -
          ((C6618 * C152747 + C1909 * C51243) * C51247 +
           (C6617 * C152747 + C1910 * C51243) * C51246 +
           (C7957 * C152747 + C6616 * C51243) * C51245) *
              C152530 * C1520 +
          ((C7957 * C51243 + C7959 * C152747) * C51245 +
           (C6617 * C51243 + C7958 * C152747) * C51246 +
           (C6618 * C51243 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C152747) *
               C51247) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152918 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C152903 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C51243 +
             C8232 * C152747) *
                C51245 +
            (C51716 + C51717) * C51246 + C51725 * C51247) *
               C152873) *
              C1429 +
          (((C7578 * C51243 + C7577 * C152747) * C51245 +
            (C52410 + C52411) * C51246 + C52416 * C51247) *
               C152903 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152918 -
           ((C6862 * C152747 + C2913 * C51243) * C51247 +
            (C6861 * C152747 + C2914 * C51243) * C51246 +
            (C8233 * C152747 + C8232 * C51243) * C51245) *
               C152873) *
              C1430 +
          (((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152918 -
           ((C7580 * C152747 + C2131 * C51243) * C51247 +
            (C7579 * C152747 + C2132 * C51243) * C51246 +
            (C8234 * C152747 + C7577 * C51243) * C51245) *
               C152903 +
           ((C8233 * C51243 + C8236 * C152747) * C51245 +
            (C6861 * C51243 + C8235 * C152747) * C51246 +
            (C6862 * C51243 +
             (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                 C152747) *
                C51247) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C2427 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C2428 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C51243 +
             C8232 * C152747) *
                C51245 +
            (C51716 + C51717) * C51246 + C51725 * C51247) *
               C152873) *
              C152512 * C152914 +
          (((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
            C52117 * C51247) *
               C2428 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C2427 -
           ((C51722 + C51723) * C51247 + (C51719 + C51718) * C51246 +
            (C51717 + C51716) * C51245) *
               C152873) *
              C152512 * C152897 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C2427 -
           ((C52118 + C52119) * C51247 + (C51721 + C51720) * C51246 +
            C51724 * C51245) *
               C2428 +
           (C51725 * C51245 + (C51723 + C51722) * C51246 +
            (C733 * C51243 +
             (C134 * C2890 - C135 * C2889 - C134 * C2891 + C152711 * C2892) *
                 C152747) *
                C51247) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C2427 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C2428 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C51243 +
             C8232 * C152747) *
                C51245 +
            (C51716 + C51717) * C51246 + C51725 * C51247) *
               C152873) *
              C152917 +
          (((C7578 * C51243 + C7577 * C152747) * C51245 +
            (C52410 + C52411) * C51246 + C52416 * C51247) *
               C2428 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C2427 -
           ((C6862 * C152747 + C2913 * C51243) * C51247 +
            (C6861 * C152747 + C2914 * C51243) * C51246 +
            (C8233 * C152747 + C8232 * C51243) * C51245) *
               C152873) *
              C152901 +
          (((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C2427 -
           ((C53463 + C53464) * C51247 + (C53465 + C53466) * C51246 +
            (C8234 * C152747 + C7577 * C51243) * C51245) *
               C2428 +
           ((C8233 * C51243 + C8236 * C152747) * C51245 +
            (C6861 * C51243 + C8235 * C152747) * C51246 +
            (C6862 * C51243 +
             (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                 C152747) *
                C51247) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C51243 +
            C6614 * C152747) *
               C51245 +
           (C51249 + C51250) * C51246 + C51259 * C51247) *
              C2658 -
          (C51724 * C51247 + (C51714 + C51715) * C51246 +
           (C7578 * C152747 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C51243) *
               C51245) *
              C2659 +
          (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C51243 +
            C8232 * C152747) *
               C51245 +
           (C51716 + C51717) * C51246 + C51725 * C51247) *
              C2660 -
          ((C26880 * C152747 + C3075 * C51243) * C51247 +
           (C10042 * C152747 + C3076 * C51243) * C51246 +
           (C10260 * C152747 +
            (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                C51243) *
               C51245) *
              C2661 +
          (((C134 * C2679 - C135 * C2667 - C134 * C2680 + C152711 * C2691) *
                C51243 +
            (C134 * C9518 - C135 * C9510 - C134 * C9519 + C152711 * C9528) *
                C152747) *
               C51245 +
           ((C134 * C2681 - C135 * C2668 - C134 * C2682 + C152711 * C2692) *
                C51243 +
            (C134 * C9522 - C135 * C9512 - C134 * C9523 + C152711 * C9530) *
                C152747) *
               C51246 +
           ((C134 * C2683 - C135 * C2669 - C134 * C2684 + C152711 * C2693) *
                C51243 +
            (C134 * C18412 - C135 * C18411 - C134 * C18413 + C152711 * C18414) *
                C152747) *
               C51247) *
              C2662) *
         C152512 * C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C59414 +
           C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
              C152457 * C152530 * C152512 * C129 -
          (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
              C152457 * C152530 * C152512 * C130 +
          (C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
              C152457 * C152530 * C152512 * C131 -
          (C1908 * C59417 + C470 * C59416 + C465 * C59415 + C207 * C59414) *
              C152457 * C152530 * C152512 * C132 +
          (C208 * C59414 + C471 * C59415 + C472 * C59416 +
           (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
               C59417) *
              C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C152917 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C152901 +
           (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152530 * C152870) *
              C365 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C152901 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C152917 -
           (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
               C152457 * C152530 * C152870) *
              C366 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152530 * C152917 -
           (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
               C152457 * C152530 * C152901 +
           (C469 * C59414 + C1909 * C59415 + C6618 * C59416 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C59417) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152918 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152903 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C152873) *
              C152512 * C365 +
          ((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
               C152457 * C152903 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152918 -
           (C8235 * C59417 + C6861 * C59416 + C2914 * C59415 + C729 * C59414) *
               C152457 * C152873) *
              C152512 * C366 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152918 -
           (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
               C152457 * C152903 +
           (C730 * C59414 + C2913 * C59415 + C6862 * C59416 +
            (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                C59417) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C1429 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C1430 +
           (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152530 * C152870) *
              C152914 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C1430 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C1429 -
           (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
               C152457 * C152530 * C152870) *
              C152897 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152530 * C1429 -
           (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
               C152457 * C152530 * C1430 +
           (C469 * C59414 + C1909 * C59415 + C6618 * C59416 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C59417) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C59414 +
           C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
              C152457 * C152530 * C1517 -
          (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
              C152457 * C152530 * C1518 +
          (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
              C152457 * C152530 * C1519 -
          (C60404 * C59417 + C7959 * C59416 + C7957 * C59415 + C6616 * C59414) *
              C152457 * C152530 * C1520 +
          (C7957 * C59414 + C7959 * C59415 + C60404 * C59416 +
           (C134 * C60394 - C135 * C60393 - C134 * C60395 + C152711 * C60396) *
               C59417) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152918 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152903 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C152873) *
              C1429 +
          ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 + C8950 * C59417) *
               C152457 * C152903 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152918 -
           (C60561 * C59417 + C8236 * C59416 + C8233 * C59415 +
            C8232 * C59414) *
               C152457 * C152873) *
              C1430 +
          ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152918 -
           ((C134 * C8937 - C135 * C8935 - C134 * C8938 + C152711 * C8941) *
                C59417 +
            C8950 * C59416 + C8234 * C59415 + C7577 * C59414) *
               C152457 * C152903 +
           (C8233 * C59414 + C8236 * C59415 + C60561 * C59416 +
            (C134 * C60551 - C135 * C60550 - C134 * C60552 + C152711 * C60553) *
                C59417) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C2427 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C2428 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C152873) *
              C152512 * C152914 +
          ((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
               C152457 * C2428 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C2427 -
           (C8235 * C59417 + C6861 * C59416 + C2914 * C59415 + C729 * C59414) *
               C152457 * C152873) *
              C152512 * C152897 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C2427 -
           (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
               C152457 * C2428 +
           (C730 * C59414 + C2913 * C59415 + C6862 * C59416 +
            (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                C59417) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C2427 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C2428 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C152873) *
              C152917 +
          ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 + C8950 * C59417) *
               C152457 * C2428 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C2427 -
           (C60561 * C59417 + C8236 * C59416 + C8233 * C59415 +
            C8232 * C59414) *
               C152457 * C152873) *
              C152901 +
          ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C2427 -
           (C61026 * C59417 + C8950 * C59416 + C8234 * C59415 +
            C7577 * C59414) *
               C152457 * C2428 +
           (C8233 * C59414 + C8236 * C59415 + C60561 * C59416 +
            (C134 * C60551 - C135 * C60550 - C134 * C60552 + C152711 * C60553) *
                C59417) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C59414 +
           C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
              C152457 * C2658 -
          (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
           (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
               C59414) *
              C152457 * C2659 +
          ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) * C59414 +
           C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
              C152457 * C2660 -
          ((C134 * C10240 - C135 * C10238 - C134 * C10241 + C152711 * C10244) *
               C59417 +
           C10259 * C59416 + C10260 * C59415 +
           (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
               C59414) *
              C152457 * C2661 +
          ((C134 * C2679 - C135 * C2667 - C134 * C2680 + C152711 * C2691) *
               C59414 +
           (C134 * C9518 - C135 * C9510 - C134 * C9519 + C152711 * C9528) *
               C59415 +
           (C134 * C9520 - C135 * C9511 - C134 * C9521 + C152711 * C9529) *
               C59416 +
           (C134 * C61401 - C135 * C61400 - C134 * C61402 + C152711 * C61403) *
               C59417) *
              C152457 * C2662) *
         C152512 * C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[238] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C152829 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C152617) *
               C1429 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C152617 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C152829) *
               C1430 +
           (((C6615 * C51243 + C6616 * C152747) * C51245 +
             (C51484 + C51485) * C51246 + C51493 * C51247) *
                C152829 -
            ((C53463 + C53464) * C51247 + (C53465 + C53466) * C51246 +
             (C8234 * C152747 + C7577 * C51243) * C51245) *
                C152617) *
               C152870) *
              C152814 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C152617 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C152829) *
               C1429 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C152829 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C152617) *
               C1430 +
           (((C53466 + C53465) * C51245 + (C53464 + C53463) * C51246 +
             (C2130 * C51243 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C152747) *
                 C51247) *
                C152617 -
            ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
             (C51485 + C51484) * C51245) *
                C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152829 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C152617) *
              C152512 * C873 +
          (((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
            C52117 * C51247) *
               C152617 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152829) *
              C152512 * C874 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152829 -
           ((C52118 + C52119) * C51247 + (C51721 + C51720) * C51246 +
            C51724 * C51245) *
               C152617) *
              C152512 * C875 +
          ((C52117 * C51245 + (C52119 + C52118) * C51246 +
            (C1032 * C51243 +
             (C134 * C1243 - C135 * C1232 - C134 * C1244 + C152711 * C1250) *
                 C152747) *
                C51247) *
               C152617 -
           ((C51257 + C51258) * C51247 + (C51256 + C51255) * C51246 +
            C51260 * C51245) *
               C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C3047 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C3048 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C51243 +
             C8232 * C152747) *
                C51245 +
            (C51716 + C51717) * C51246 + C51725 * C51247) *
               C3049 -
           ((C54707 + C54708) * C51247 + (C54709 + C54710) * C51246 +
            (C10260 * C152747 +
             (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                 C51243) *
                C51245) *
               C152886) *
              C152512 * C152814 +
          (((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
            C52117 * C51247) *
               C3048 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C3047 -
           ((C51722 + C51723) * C51247 + (C51719 + C51718) * C51246 +
            (C51717 + C51716) * C51245) *
               C3049 +
           ((C54710 + C54709) * C51245 + (C54708 + C54707) * C51246 +
            (C3074 * C51243 +
             (C134 * C3219 - C135 * C3212 - C134 * C3220 + C152711 * C3224) *
                 C152747) *
                C51247) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152829 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152617) *
              C152512 * C873 +
          ((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
               C152457 * C152617 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152829) *
              C152512 * C874 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152829 -
           (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
               C152457 * C152617) *
              C152512 * C875 +
          ((C726 * C59414 + C1278 * C59415 + C2130 * C59416 +
            (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                C59417) *
               C152457 * C152617 -
           (C1908 * C59417 + C470 * C59416 + C465 * C59415 + C207 * C59414) *
               C152457 * C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C152829 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152617) *
               C1429 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152617 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C152829) *
               C1430 +
           ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 +
             C7959 * C59417) *
                C152457 * C152829 -
            ((C134 * C8937 - C135 * C8935 - C134 * C8938 + C152711 * C8941) *
                 C59417 +
             C8950 * C59416 + C8234 * C59415 + C7577 * C59414) *
                C152457 * C152617) *
               C152870) *
              C152814 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152617 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C152829) *
               C1429 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C152829 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152617) *
               C1430 +
           ((C2132 * C59414 + C7579 * C59415 + C8740 * C59416 +
             (C134 * C8939 - C135 * C8936 - C134 * C8940 + C152711 * C8942) *
                 C59417) *
                C152457 * C152617 -
            (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
                C152457 * C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C3047 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C3048 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C3049 -
           ((C134 * C10240 - C135 * C10238 - C134 * C10241 + C152711 * C10244) *
                C59417 +
            C10259 * C59416 + C10260 * C59415 +
            (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                C59414) *
               C152457 * C152886) *
              C152512 * C152814 +
          ((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
               C152457 * C3048 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C3047 -
           (C8235 * C59417 + C6861 * C59416 + C2914 * C59415 + C729 * C59414) *
               C152457 * C3049 +
           (C3076 * C59414 + C10042 * C59415 + C10041 * C59416 +
            (C134 * C10242 - C135 * C10239 - C134 * C10243 + C152711 * C10245) *
                C59417) *
               C152457 * C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[239] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152530 * C152917 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152530 * C152901 +
           ((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152530 * C152870) *
              C365 +
          (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
            (C51488 + C51489) * C51247) *
               C152530 * C152901 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152530 * C152917 -
           ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
            (C51485 + C51484) * C51245) *
               C152530 * C152870) *
              C366 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152530 * C152917 -
           ((C472 * C152747 + C471 * C51243) * C51247 +
            (C51489 + C51488) * C51246 + C51492 * C51245) *
               C152530 * C152901 +
           (C51493 * C51245 + (C51491 + C51490) * C51246 +
            (C472 * C51243 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C152747) *
                C51247) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C51243 +
            C6614 * C152747) *
               C51245 +
           (C51249 + C51250) * C51246 + C51259 * C51247) *
              C152530 * C152512 * C129 -
          (C51260 * C51247 + (C51252 + C51251) * C51246 +
           (C51250 + C51249) * C51245) *
              C152530 * C152512 * C130 +
          (C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
              C152530 * C152512 * C131 -
          ((C51257 + C51258) * C51247 + (C51256 + C51255) * C51246 +
           C51260 * C51245) *
              C152530 * C152512 * C132 +
          (C51261 * C51245 + (C51258 + C51257) * C51246 +
           (C210 * C51243 +
            (C134 * C878 - C135 * C877 - C134 * C879 + C152711 * C880) *
                C152747) *
               C51247) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152530 * C1429 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152530 * C1430 +
           ((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152530 * C152870) *
              C152914 +
          (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
            C51920 * C51247) *
               C152530 * C1430 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152530 * C1429 -
           ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
            (C51485 + C51484) * C51245) *
               C152530 * C152870) *
              C152897 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152530 * C1429 -
           ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
            C51492 * C51245) *
               C152530 * C1430 +
           (C51493 * C51245 + (C51491 + C51490) * C51246 +
            (C472 * C51243 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C152747) *
                C51247) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C51243 +
            C6614 * C152747) *
               C51245 +
           (C51249 + C51250) * C51246 + C51259 * C51247) *
              C152530 * C1517 -
          (C51492 * C51247 + (C51482 + C51483) * C51246 +
           (C6615 * C152747 + C6614 * C51243) * C51245) *
              C152530 * C1518 +
          ((C6615 * C51243 + C6616 * C152747) * C51245 +
           (C51484 + C51485) * C51246 + C51493 * C51247) *
              C152530 * C1519 -
          ((C6618 * C152747 + C1909 * C51243) * C51247 +
           (C6617 * C152747 + C1910 * C51243) * C51246 +
           (C7957 * C152747 + C6616 * C51243) * C51245) *
              C152530 * C1520 +
          ((C7957 * C51243 + C7959 * C152747) * C51245 +
           (C6617 * C51243 + C7958 * C152747) * C51246 +
           (C6618 * C51243 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C152747) *
               C51247) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C2427 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C2428 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C51243 +
             C8232 * C152747) *
                C51245 +
            (C51716 + C51717) * C51246 + C51725 * C51247) *
               C152873) *
              C152512 * C152914 +
          (((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
            C52117 * C51247) *
               C2428 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C2427 -
           ((C51722 + C51723) * C51247 + (C51719 + C51718) * C51246 +
            (C51717 + C51716) * C51245) *
               C152873) *
              C152512 * C152897 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C2427 -
           ((C52118 + C52119) * C51247 + (C51721 + C51720) * C51246 +
            C51724 * C51245) *
               C2428 +
           (C51725 * C51245 + (C51723 + C51722) * C51246 +
            (C733 * C51243 +
             (C134 * C2890 - C135 * C2889 - C134 * C2891 + C152711 * C2892) *
                 C152747) *
                C51247) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C2427 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C2428 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C51243 +
             C8232 * C152747) *
                C51245 +
            (C51716 + C51717) * C51246 + C51725 * C51247) *
               C152873) *
              C152917 +
          (((C7578 * C51243 + C7577 * C152747) * C51245 +
            (C52410 + C52411) * C51246 + C52416 * C51247) *
               C2428 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C2427 -
           ((C6862 * C152747 + C2913 * C51243) * C51247 +
            (C6861 * C152747 + C2914 * C51243) * C51246 +
            (C8233 * C152747 + C8232 * C51243) * C51245) *
               C152873) *
              C152901 +
          (((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C2427 -
           ((C53463 + C53464) * C51247 + (C53465 + C53466) * C51246 +
            (C8234 * C152747 + C7577 * C51243) * C51245) *
               C2428 +
           ((C8233 * C51243 + C8236 * C152747) * C51245 +
            (C6861 * C51243 + C8235 * C152747) * C51246 +
            (C6862 * C51243 +
             (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                 C152747) *
                C51247) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C59414 +
           C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
              C152457 * C152530 * C152512 * C129 -
          (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
              C152457 * C152530 * C152512 * C130 +
          (C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
              C152457 * C152530 * C152512 * C131 -
          (C1908 * C59417 + C470 * C59416 + C465 * C59415 + C207 * C59414) *
              C152457 * C152530 * C152512 * C132 +
          (C208 * C59414 + C471 * C59415 + C472 * C59416 +
           (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
               C59417) *
              C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C152917 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C152901 +
           (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152530 * C152870) *
              C365 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C152901 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C152917 -
           (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
               C152457 * C152530 * C152870) *
              C366 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152530 * C152917 -
           (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
               C152457 * C152530 * C152901 +
           (C469 * C59414 + C1909 * C59415 + C6618 * C59416 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C59417) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C1429 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C1430 +
           (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152530 * C152870) *
              C152914 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C1430 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C1429 -
           (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
               C152457 * C152530 * C152870) *
              C152897 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152530 * C1429 -
           (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
               C152457 * C152530 * C1430 +
           (C469 * C59414 + C1909 * C59415 + C6618 * C59416 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C59417) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C59414 +
           C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
              C152457 * C152530 * C1517 -
          (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
              C152457 * C152530 * C1518 +
          (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
              C152457 * C152530 * C1519 -
          (C60404 * C59417 + C7959 * C59416 + C7957 * C59415 + C6616 * C59414) *
              C152457 * C152530 * C1520 +
          (C7957 * C59414 + C7959 * C59415 + C60404 * C59416 +
           (C134 * C60394 - C135 * C60393 - C134 * C60395 + C152711 * C60396) *
               C59417) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C2427 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C2428 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C152873) *
              C152512 * C152914 +
          ((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
               C152457 * C2428 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C2427 -
           (C8235 * C59417 + C6861 * C59416 + C2914 * C59415 + C729 * C59414) *
               C152457 * C152873) *
              C152512 * C152897 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C2427 -
           (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
               C152457 * C2428 +
           (C730 * C59414 + C2913 * C59415 + C6862 * C59416 +
            (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                C59417) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C2427 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C2428 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C152873) *
              C152917 +
          ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 + C8950 * C59417) *
               C152457 * C2428 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C2427 -
           (C60561 * C59417 + C8236 * C59416 + C8233 * C59415 +
            C8232 * C59414) *
               C152457 * C152873) *
              C152901 +
          ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C2427 -
           (C61026 * C59417 + C8950 * C59416 + C8234 * C59415 +
            C7577 * C59414) *
               C152457 * C2428 +
           (C8233 * C59414 + C8236 * C59415 + C60561 * C59416 +
            (C134 * C60551 - C135 * C60550 - C134 * C60552 + C152711 * C60553) *
                C59417) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[240] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C4361 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C152617) *
               C152828 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C152617 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C4361) *
               C152575) *
              C152489 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C152617 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C4361) *
               C152828 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C4361 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C152617) *
               C152575) *
              C152498 +
          (((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
                C4361 -
            ((C52118 + C52119) * C51247 + (C51721 + C51720) * C51246 +
             C51724 * C51245) *
                C152617) *
               C152828 +
           ((C52416 * C51245 + (C52415 + C52414) * C51246 +
             (C1279 * C51243 +
              (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                  C152747) *
                 C51247) *
                C152617 -
            ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
             C51492 * C51245) *
                C4361) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C4361 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152617) *
               C152828 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152617 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C4361) *
               C152575) *
              C152489 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152617 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C4361) *
               C152828 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C4361 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152617) *
               C152575) *
              C152498 +
          (((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
                C152457 * C4361 -
            (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
                C152457 * C152617) *
               C152828 +
           ((C1277 * C59414 + C2131 * C59415 + C7580 * C59416 +
             (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                 C59417) *
                C152457 * C152617 -
            (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
                C152457 * C4361) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q));
    d2ee[241] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C152613 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C152620 +
            (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                  C51243 +
              C8232 * C152747) *
                 C51245 +
             (C51716 + C51717) * C51246 + C51725 * C51247) *
                C5033) *
               C152828 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C152620 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C152613 -
            ((C54509 + C54510) * C51247 + (C54511 + C54512) * C51246 +
             (C8233 * C152747 + C8232 * C51243) * C51245) *
                C5033) *
               C152575) *
              C3495 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C152620 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C152613 -
            ((C51722 + C51723) * C51247 + (C51719 + C51718) * C51246 +
             (C51717 + C51716) * C51245) *
                C5033) *
               C152828 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C152613 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C152620 +
            ((C54512 + C54511) * C51245 + (C54510 + C54509) * C51246 +
             (C2912 * C51243 +
              (C134 * C1735 - C135 * C1712 - C134 * C1736 + C152711 * C1748) *
                  C152747) *
                 C51247) *
                C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C152613 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152620 +
            ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C59414 +
             C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
                C152457 * C5033) *
               C152828 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152620 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C152613 -
            (C60561 * C59417 + C8236 * C59416 + C8233 * C59415 +
             C8232 * C59414) *
                C152457 * C5033) *
               C152575) *
              C3495 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152620 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C152613 -
            (C8235 * C59417 + C6861 * C59416 + C2914 * C59415 + C729 * C59414) *
                C152457 * C5033) *
               C152828 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C152613 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152620 +
            (C2914 * C59414 + C6861 * C59415 + C8235 * C59416 +
             (C134 * C8193 - C135 * C8182 - C134 * C8194 + C152711 * C8200) *
                 C59417) *
                C152457 * C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[242] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C4361 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C152617) *
               C152917 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C152617 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C4361) *
               C152901 +
           (((C6615 * C51243 + C6616 * C152747) * C51245 +
             (C51484 + C51485) * C51246 + C51493 * C51247) *
                C4361 -
            ((C53463 + C53464) * C51247 + (C53465 + C53466) * C51246 +
             (C8234 * C152747 + C7577 * C51243) * C51245) *
                C152617) *
               C152870) *
              C3495 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C152617 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C4361) *
               C152917 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C4361 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C152617) *
               C152901 +
           (((C53466 + C53465) * C51245 + (C53464 + C53463) * C51246 +
             (C2130 * C51243 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C152747) *
                 C51247) *
                C152617 -
            ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
             (C51485 + C51484) * C51245) *
                C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C4361 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C152617) *
              C152512 * C152923 +
          (((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
            C52117 * C51247) *
               C152617 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C4361) *
              C152512 * C152916 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C4361 -
           ((C52118 + C52119) * C51247 + (C51721 + C51720) * C51246 +
            C51724 * C51245) *
               C152617) *
              C152512 * C152899 +
          ((C52117 * C51245 + (C52119 + C52118) * C51246 +
            (C1032 * C51243 +
             (C134 * C1243 - C135 * C1232 - C134 * C1244 + C152711 * C1250) *
                 C152747) *
                C51247) *
               C152617 -
           ((C51257 + C51258) * C51247 + (C51256 + C51255) * C51246 +
            C51260 * C51245) *
               C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152925 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C152922 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C51243 +
             C8232 * C152747) *
                C51245 +
            (C51716 + C51717) * C51246 + C51725 * C51247) *
               C152909 -
           ((C54707 + C54708) * C51247 + (C54709 + C54710) * C51246 +
            (C10260 * C152747 +
             (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                 C51243) *
                C51245) *
               C152886) *
              C152512 * C3495 +
          (((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
            C52117 * C51247) *
               C152922 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152925 -
           ((C51722 + C51723) * C51247 + (C51719 + C51718) * C51246 +
            (C51717 + C51716) * C51245) *
               C152909 +
           ((C54710 + C54709) * C51245 + (C54708 + C54707) * C51246 +
            (C3074 * C51243 +
             (C134 * C3219 - C135 * C3212 - C134 * C3220 + C152711 * C3224) *
                 C152747) *
                C51247) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C4361 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152617) *
              C152512 * C152923 +
          ((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
               C152457 * C152617 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C4361) *
              C152512 * C152916 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C4361 -
           (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
               C152457 * C152617) *
              C152512 * C152899 +
          ((C726 * C59414 + C1278 * C59415 + C2130 * C59416 +
            (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                C59417) *
               C152457 * C152617 -
           (C1908 * C59417 + C470 * C59416 + C465 * C59415 + C207 * C59414) *
               C152457 * C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C4361 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152617) *
               C152917 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152617 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C4361) *
               C152901 +
           ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 +
             C7959 * C59417) *
                C152457 * C4361 -
            (C61026 * C59417 + C8950 * C59416 + C8234 * C59415 +
             C7577 * C59414) *
                C152457 * C152617) *
               C152870) *
              C3495 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152617 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C4361) *
               C152917 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C4361 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152617) *
               C152901 +
           ((C2132 * C59414 + C7579 * C59415 + C8740 * C59416 +
             (C134 * C8939 - C135 * C8936 - C134 * C8940 + C152711 * C8942) *
                 C59417) *
                C152457 * C152617 -
            (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
                C152457 * C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152925 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152922 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C152909 -
           (C61869 * C59417 + C10259 * C59416 + C10260 * C59415 +
            (C134 * C2677 - C135 * C2666 - C134 * C2678 + C152711 * C2690) *
                C59414) *
               C152457 * C152886) *
              C152512 * C3495 +
          ((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
               C152457 * C152922 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152925 -
           (C8235 * C59417 + C6861 * C59416 + C2914 * C59415 + C729 * C59414) *
               C152457 * C152909 +
           (C3076 * C59414 + C10042 * C59415 + C10041 * C59416 +
            (C134 * C10242 - C135 * C10239 - C134 * C10243 + C152711 * C10245) *
                C59417) *
               C152457 * C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[243] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152613 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C152620 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C51243 +
             C8232 * C152747) *
                C51245 +
            (C51716 + C51717) * C51246 + C51725 * C51247) *
               C5033) *
              C152512 * C152489 +
          (((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
            C52117 * C51247) *
               C152620 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152613 -
           ((C51722 + C51723) * C51247 + (C51719 + C51718) * C51246 +
            (C51717 + C51716) * C51245) *
               C5033) *
              C152512 * C152498 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152613 -
           ((C52118 + C52119) * C51247 + (C51721 + C51720) * C51246 +
            C51724 * C51245) *
               C152620 +
           (C51725 * C51245 + (C51723 + C51722) * C51246 +
            (C733 * C51243 +
             (C134 * C2890 - C135 * C2889 - C134 * C2891 + C152711 * C2892) *
                 C152747) *
                C51247) *
               C5033) *
              C152512 * C3842)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152613 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152620 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C5033) *
              C152512 * C152489 +
          ((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
               C152457 * C152620 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152613 -
           (C8235 * C59417 + C6861 * C59416 + C2914 * C59415 + C729 * C59414) *
               C152457 * C5033) *
              C152512 * C152498 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152613 -
           (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
               C152457 * C152620 +
           (C730 * C59414 + C2913 * C59415 + C6862 * C59416 +
            (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                C59417) *
               C152457 * C5033) *
              C152512 * C3842)) /
            (p * q * std::sqrt(p + q));
    d2ee[244] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C4361 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C152617) *
              C152512 * C152923 +
          (((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
            C52117 * C51247) *
               C152617 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C4361) *
              C152512 * C152916 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C4361 -
           ((C52118 + C52119) * C51247 + (C51721 + C51720) * C51246 +
            C51724 * C51245) *
               C152617) *
              C152512 * C152899 +
          ((C52117 * C51245 + (C52119 + C52118) * C51246 +
            (C1032 * C51243 +
             (C134 * C1243 - C135 * C1232 - C134 * C1244 + C152711 * C1250) *
                 C152747) *
                C51247) *
               C152617 -
           ((C51257 + C51258) * C51247 + (C51256 + C51255) * C51246 +
            C51260 * C51245) *
               C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C4361 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C152617) *
               C152917 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C152617 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C4361) *
               C152901 +
           (((C6615 * C51243 + C6616 * C152747) * C51245 +
             (C51484 + C51485) * C51246 + C51493 * C51247) *
                C4361 -
            ((C53463 + C53464) * C51247 + (C53465 + C53466) * C51246 +
             (C8234 * C152747 + C7577 * C51243) * C51245) *
                C152617) *
               C152870) *
              C3495 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C152617 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C4361) *
               C152917 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C4361 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C152617) *
               C152901 +
           (((C53466 + C53465) * C51245 + (C53464 + C53463) * C51246 +
             (C2130 * C51243 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C152747) *
                 C51247) *
                C152617 -
            ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
             (C51485 + C51484) * C51245) *
                C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C4361 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152617) *
              C152512 * C152923 +
          ((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
               C152457 * C152617 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C4361) *
              C152512 * C152916 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C4361 -
           (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
               C152457 * C152617) *
              C152512 * C152899 +
          ((C726 * C59414 + C1278 * C59415 + C2130 * C59416 +
            (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                C59417) *
               C152457 * C152617 -
           (C1908 * C59417 + C470 * C59416 + C465 * C59415 + C207 * C59414) *
               C152457 * C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C4361 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152617) *
               C152917 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152617 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C4361) *
               C152901 +
           ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 +
             C7959 * C59417) *
                C152457 * C4361 -
            (C61026 * C59417 + C8950 * C59416 + C8234 * C59415 +
             C7577 * C59414) *
                C152457 * C152617) *
               C152870) *
              C3495 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152617 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C4361) *
               C152917 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C4361 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152617) *
               C152901 +
           ((C2132 * C59414 + C7579 * C59415 + C8740 * C59416 +
             (C134 * C8939 - C135 * C8936 - C134 * C8940 + C152711 * C8942) *
                 C59417) *
                C152457 * C152617 -
            (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
                C152457 * C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[245] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152530 * C152828 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152530 * C152575) *
              C873 +
          (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
            C51920 * C51247) *
               C152530 * C152575 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152530 * C152828) *
              C874 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152530 * C152828 -
           ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
            C51492 * C51245) *
               C152530 * C152575) *
              C875 +
          ((C51920 * C51245 + (C51922 + C51921) * C51246 +
            (C888 * C51243 +
             (C134 * C402 - C135 * C379 - C134 * C403 + C152711 * C415) *
                 C152747) *
                C51247) *
               C152530 * C152575 -
           ((C51257 + C51258) * C51247 + (C51256 + C51255) * C51246 +
            C51260 * C51245) *
               C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152530 * C1879 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152530 * C1880 +
           ((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152530 * C1881 -
           ((C53169 + C53170) * C51247 + (C53171 + C53172) * C51246 +
            (C7957 * C152747 + C6616 * C51243) * C51245) *
               C152530 * C152880) *
              C152814 +
          (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
            C51920 * C51247) *
               C152530 * C1880 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152530 * C1879 -
           ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
            (C51485 + C51484) * C51245) *
               C152530 * C1881 +
           ((C53172 + C53171) * C51245 + (C53170 + C53169) * C51246 +
            (C1908 * C51243 +
             (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                 C152747) *
                C51247) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C152828 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C152575) *
              C873 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C152575 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C152828) *
              C874 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152530 * C152828 -
           (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
               C152457 * C152530 * C152575) *
              C875 +
          ((C465 * C59414 + C470 * C59415 + C1908 * C59416 +
            (C134 * C1545 - C135 * C1530 - C134 * C1546 + C152711 * C1554) *
                C59417) *
               C152457 * C152530 * C152575 -
           (C1908 * C59417 + C470 * C59416 + C465 * C59415 + C207 * C59414) *
               C152457 * C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C1879 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C1880 +
           (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152530 * C1881 -
           (C60404 * C59417 + C7959 * C59416 + C7957 * C59415 +
            C6616 * C59414) *
               C152457 * C152530 * C152880) *
              C152814 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C1880 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C1879 -
           (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
               C152457 * C152530 * C1881 +
           (C1910 * C59414 + C6617 * C59415 + C7958 * C59416 +
            (C134 * C7932 - C135 * C7925 - C134 * C7933 + C152711 * C7937) *
                C59417) *
               C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[246] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C152829 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C152617) *
               C152828 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C152617 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C152829) *
               C152575) *
              C365 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C152617 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C152829) *
               C152828 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C152829 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C152617) *
               C152575) *
              C366 +
          (((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
                C152829 -
            ((C52118 + C52119) * C51247 + (C51721 + C51720) * C51246 +
             C51724 * C51245) *
                C152617) *
               C152828 +
           ((C52416 * C51245 + (C52415 + C52414) * C51246 +
             (C1279 * C51243 +
              (C134 * C2108 - C135 * C2107 - C134 * C2109 + C152711 * C2110) *
                  C152747) *
                 C51247) *
                C152617 -
            ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
             C51492 * C51245) *
                C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152829 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C152617) *
              C1879 +
          (((C7578 * C51243 + C7577 * C152747) * C51245 +
            (C52410 + C52411) * C51246 + C52416 * C51247) *
               C152617 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152829) *
              C1880 +
          (((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152829 -
           ((C53463 + C53464) * C51247 + (C53465 + C53466) * C51246 +
            (C8234 * C152747 + C7577 * C51243) * C51245) *
               C152617) *
              C1881 +
          (((C8234 * C51243 + C8950 * C152747) * C51245 +
            (C7579 * C51243 + C8740 * C152747) * C51246 +
            (C7580 * C51243 +
             (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                 C152747) *
                C51247) *
               C152617 -
           ((C53169 + C53170) * C51247 + (C53171 + C53172) * C51246 +
            (C7957 * C152747 + C6616 * C51243) * C51245) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C152829 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152617) *
               C152828 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152617 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C152829) *
               C152575) *
              C365 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152617 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C152829) *
               C152828 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C152829 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152617) *
               C152575) *
              C366 +
          (((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
                C152457 * C152829 -
            (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
                C152457 * C152617) *
               C152828 +
           ((C1277 * C59414 + C2131 * C59415 + C7580 * C59416 +
             (C134 * C8728 - C135 * C8727 - C134 * C8729 + C152711 * C8730) *
                 C59417) *
                C152457 * C152617 -
            (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
                C152457 * C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152829 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152617) *
              C1879 +
          ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 + C8950 * C59417) *
               C152457 * C152617 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152829) *
              C1880 +
          ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152829 -
           (C61026 * C59417 + C8950 * C59416 + C8234 * C59415 +
            C7577 * C59414) *
               C152457 * C152617) *
              C1881 +
          ((C8234 * C59414 + C8950 * C59415 + C61026 * C59416 +
            (C134 * C61016 - C135 * C61015 - C134 * C61017 + C152711 * C61018) *
                C59417) *
               C152457 * C152617 -
           (C60404 * C59417 + C7959 * C59416 + C7957 * C59415 +
            C6616 * C59414) *
               C152457 * C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[247] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152530 * C152917 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152530 * C152901 +
           ((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152530 * C152870) *
              C365 +
          (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
            (C51488 + C51489) * C51247) *
               C152530 * C152901 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152530 * C152917 -
           ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
            (C51485 + C51484) * C51245) *
               C152530 * C152870) *
              C366 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152530 * C152917 -
           ((C472 * C152747 + C471 * C51243) * C51247 +
            (C51489 + C51488) * C51246 + C51492 * C51245) *
               C152530 * C152901 +
           (C51493 * C51245 + (C51491 + C51490) * C51246 +
            (C472 * C51243 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C152747) *
                C51247) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C51243 +
            C6614 * C152747) *
               C51245 +
           (C51249 + C51250) * C51246 + C51259 * C51247) *
              C152530 * C152512 * C129 -
          (C51260 * C51247 + (C51252 + C51251) * C51246 +
           (C51250 + C51249) * C51245) *
              C152530 * C152512 * C130 +
          (C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
              C152530 * C152512 * C131 -
          ((C51257 + C51258) * C51247 + (C51256 + C51255) * C51246 +
           C51260 * C51245) *
              C152530 * C152512 * C132 +
          (C51261 * C51245 + (C51258 + C51257) * C51246 +
           (C210 * C51243 +
            (C134 * C878 - C135 * C877 - C134 * C879 + C152711 * C880) *
                C152747) *
               C51247) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152918 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C152903 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C51243 +
             C8232 * C152747) *
                C51245 +
            (C51716 + C51717) * C51246 + C51725 * C51247) *
               C152873) *
              C152512 * C365 +
          (((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
            (C51720 + C51721) * C51247) *
               C152903 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152918 -
           ((C51722 + C51723) * C51247 + (C51719 + C51718) * C51246 +
            (C51717 + C51716) * C51245) *
               C152873) *
              C152512 * C366 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152918 -
           ((C1279 * C152747 + C732 * C51243) * C51247 +
            (C51721 + C51720) * C51246 + C51724 * C51245) *
               C152903 +
           (C51725 * C51245 + (C51723 + C51722) * C51246 +
            (C733 * C51243 +
             (C134 * C2890 - C135 * C2889 - C134 * C2891 + C152711 * C2892) *
                 C152747) *
                C51247) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152530 * C1429 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152530 * C1430 +
           ((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152530 * C152870) *
              C152914 +
          (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
            C51920 * C51247) *
               C152530 * C1430 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152530 * C1429 -
           ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
            (C51485 + C51484) * C51245) *
               C152530 * C152870) *
              C152897 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152530 * C1429 -
           ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
            C51492 * C51245) *
               C152530 * C1430 +
           (C51493 * C51245 + (C51491 + C51490) * C51246 +
            (C472 * C51243 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C152747) *
                C51247) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C51243 +
            C6614 * C152747) *
               C51245 +
           (C51249 + C51250) * C51246 + C51259 * C51247) *
              C152530 * C1517 -
          (C51492 * C51247 + (C51482 + C51483) * C51246 +
           (C6615 * C152747 + C6614 * C51243) * C51245) *
              C152530 * C1518 +
          ((C6615 * C51243 + C6616 * C152747) * C51245 +
           (C51484 + C51485) * C51246 + C51493 * C51247) *
              C152530 * C1519 -
          ((C6618 * C152747 + C1909 * C51243) * C51247 +
           (C6617 * C152747 + C1910 * C51243) * C51246 +
           (C7957 * C152747 + C6616 * C51243) * C51245) *
              C152530 * C1520 +
          ((C7957 * C51243 + C7959 * C152747) * C51245 +
           (C6617 * C51243 + C7958 * C152747) * C51246 +
           (C6618 * C51243 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C152747) *
               C51247) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152918 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C152903 +
           (((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                 C51243 +
             C8232 * C152747) *
                C51245 +
            (C51716 + C51717) * C51246 + C51725 * C51247) *
               C152873) *
              C1429 +
          (((C7578 * C51243 + C7577 * C152747) * C51245 +
            (C52410 + C52411) * C51246 + C52416 * C51247) *
               C152903 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152918 -
           ((C6862 * C152747 + C2913 * C51243) * C51247 +
            (C6861 * C152747 + C2914 * C51243) * C51246 +
            (C8233 * C152747 + C8232 * C51243) * C51245) *
               C152873) *
              C1430 +
          (((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152918 -
           ((C7580 * C152747 + C2131 * C51243) * C51247 +
            (C7579 * C152747 + C2132 * C51243) * C51246 +
            (C8234 * C152747 + C7577 * C51243) * C51245) *
               C152903 +
           ((C8233 * C51243 + C8236 * C152747) * C51245 +
            (C6861 * C51243 + C8235 * C152747) * C51246 +
            (C6862 * C51243 +
             (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                 C152747) *
                C51247) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C59414 +
           C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
              C152457 * C152530 * C152512 * C129 -
          (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
              C152457 * C152530 * C152512 * C130 +
          (C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
              C152457 * C152530 * C152512 * C131 -
          (C1908 * C59417 + C470 * C59416 + C465 * C59415 + C207 * C59414) *
              C152457 * C152530 * C152512 * C132 +
          (C208 * C59414 + C471 * C59415 + C472 * C59416 +
           (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
               C59417) *
              C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C152917 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C152901 +
           (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152530 * C152870) *
              C365 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C152901 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C152917 -
           (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
               C152457 * C152530 * C152870) *
              C366 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152530 * C152917 -
           (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
               C152457 * C152530 * C152901 +
           (C469 * C59414 + C1909 * C59415 + C6618 * C59416 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C59417) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152918 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152903 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C152873) *
              C152512 * C365 +
          ((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
               C152457 * C152903 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152918 -
           (C8235 * C59417 + C6861 * C59416 + C2914 * C59415 + C729 * C59414) *
               C152457 * C152873) *
              C152512 * C366 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152918 -
           (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
               C152457 * C152903 +
           (C730 * C59414 + C2913 * C59415 + C6862 * C59416 +
            (C134 * C9823 - C135 * C9822 - C134 * C9824 + C152711 * C9825) *
                C59417) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C1429 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C1430 +
           (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152530 * C152870) *
              C152914 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C1430 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C1429 -
           (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
               C152457 * C152530 * C152870) *
              C152897 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152530 * C1429 -
           (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
               C152457 * C152530 * C1430 +
           (C469 * C59414 + C1909 * C59415 + C6618 * C59416 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C59417) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C59414 +
           C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
              C152457 * C152530 * C1517 -
          (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
              C152457 * C152530 * C1518 +
          (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
              C152457 * C152530 * C1519 -
          (C60404 * C59417 + C7959 * C59416 + C7957 * C59415 + C6616 * C59414) *
              C152457 * C152530 * C1520 +
          (C7957 * C59414 + C7959 * C59415 + C60404 * C59416 +
           (C134 * C60394 - C135 * C60393 - C134 * C60395 + C152711 * C60396) *
               C59417) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152918 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152903 +
           ((C134 * C649 - C135 * C633 - C134 * C650 + C152711 * C669) *
                C59414 +
            C8232 * C59415 + C8233 * C59416 + C8236 * C59417) *
               C152457 * C152873) *
              C1429 +
          ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 + C8950 * C59417) *
               C152457 * C152903 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152918 -
           (C60561 * C59417 + C8236 * C59416 + C8233 * C59415 +
            C8232 * C59414) *
               C152457 * C152873) *
              C1430 +
          ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152918 -
           ((C134 * C8937 - C135 * C8935 - C134 * C8938 + C152711 * C8941) *
                C59417 +
            C8950 * C59416 + C8234 * C59415 + C7577 * C59414) *
               C152457 * C152903 +
           (C8233 * C59414 + C8236 * C59415 + C60561 * C59416 +
            (C134 * C60551 - C135 * C60550 - C134 * C60552 + C152711 * C60553) *
                C59417) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[248] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152829 -
           (C51724 * C51247 + (C51714 + C51715) * C51246 +
            (C7578 * C152747 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C51243) *
                C51245) *
               C152617) *
              C152512 * C873 +
          (((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
            C52117 * C51247) *
               C152617 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152829) *
              C152512 * C874 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152829 -
           ((C52118 + C52119) * C51247 + (C51721 + C51720) * C51246 +
            C51724 * C51245) *
               C152617) *
              C152512 * C875 +
          ((C52117 * C51245 + (C52119 + C52118) * C51246 +
            (C1032 * C51243 +
             (C134 * C1243 - C135 * C1232 - C134 * C1244 + C152711 * C1250) *
                 C152747) *
                C51247) *
               C152617 -
           ((C51257 + C51258) * C51247 + (C51256 + C51255) * C51246 +
            C51260 * C51245) *
               C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                  C51243 +
              C6614 * C152747) *
                 C51245 +
             (C51249 + C51250) * C51246 + C51259 * C51247) *
                C152829 -
            (C51724 * C51247 + (C51714 + C51715) * C51246 +
             (C7578 * C152747 +
              (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                  C51243) *
                 C51245) *
                C152617) *
               C1429 +
           (((C7578 * C51243 + C7577 * C152747) * C51245 +
             (C52410 + C52411) * C51246 + C52416 * C51247) *
                C152617 -
            (C51492 * C51247 + (C51482 + C51483) * C51246 +
             (C6615 * C152747 + C6614 * C51243) * C51245) *
                C152829) *
               C1430 +
           (((C6615 * C51243 + C6616 * C152747) * C51245 +
             (C51484 + C51485) * C51246 + C51493 * C51247) *
                C152829 -
            ((C53463 + C53464) * C51247 + (C53465 + C53466) * C51246 +
             (C8234 * C152747 + C7577 * C51243) * C51245) *
                C152617) *
               C152870) *
              C152814 +
          ((((C51715 + C51714) * C51245 + (C51713 + C51712) * C51246 +
             C52117 * C51247) *
                C152617 -
            (C51260 * C51247 + (C51252 + C51251) * C51246 +
             (C51250 + C51249) * C51245) *
                C152829) *
               C1429 +
           (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
             C51920 * C51247) *
                C152829 -
            ((C52414 + C52415) * C51247 + (C52413 + C52412) * C51246 +
             (C52411 + C52410) * C51245) *
                C152617) *
               C1430 +
           (((C53466 + C53465) * C51245 + (C53464 + C53463) * C51246 +
             (C2130 * C51243 +
              (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                  C152747) *
                 C51247) *
                C152617 -
            ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
             (C51485 + C51484) * C51245) *
                C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152829 -
           (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
            (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                C59414) *
               C152457 * C152617) *
              C152512 * C873 +
          ((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
               C152457 * C152617 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152829) *
              C152512 * C874 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152829 -
           (C7580 * C59417 + C2131 * C59416 + C1277 * C59415 + C727 * C59414) *
               C152457 * C152617) *
              C152512 * C875 +
          ((C726 * C59414 + C1278 * C59415 + C2130 * C59416 +
            (C134 * C2275 - C135 * C2268 - C134 * C2276 + C152711 * C2280) *
                C59417) *
               C152457 * C152617 -
           (C1908 * C59417 + C470 * C59416 + C465 * C59415 + C207 * C59414) *
               C152457 * C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C59414 +
             C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
                C152457 * C152829 -
            (C8234 * C59417 + C7577 * C59416 + C7578 * C59415 +
             (C134 * C647 - C135 * C632 - C134 * C648 + C152711 * C668) *
                 C59414) *
                C152457 * C152617) *
               C1429 +
           ((C7578 * C59414 + C7577 * C59415 + C8234 * C59416 +
             C8950 * C59417) *
                C152457 * C152617 -
            (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 +
             C6614 * C59414) *
                C152457 * C152829) *
               C1430 +
           ((C6615 * C59414 + C6616 * C59415 + C7957 * C59416 +
             C7959 * C59417) *
                C152457 * C152829 -
            ((C134 * C8937 - C135 * C8935 - C134 * C8938 + C152711 * C8941) *
                 C59417 +
             C8950 * C59416 + C8234 * C59415 + C7577 * C59414) *
                C152457 * C152617) *
               C152870) *
              C152814 +
          (((C728 * C59414 + C1276 * C59415 + C2132 * C59416 + C7579 * C59417) *
                C152457 * C152617 -
            (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
                C152457 * C152829) *
               C1429 +
           ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
                C152457 * C152829 -
            (C8740 * C59417 + C7579 * C59416 + C2132 * C59415 +
             C1276 * C59414) *
                C152457 * C152617) *
               C1430 +
           ((C2132 * C59414 + C7579 * C59415 + C8740 * C59416 +
             (C134 * C8939 - C135 * C8936 - C134 * C8940 + C152711 * C8942) *
                 C59417) *
                C152457 * C152617 -
            (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
                C152457 * C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[249] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C51243 +
            C6614 * C152747) *
               C51245 +
           (C51249 + C51250) * C51246 + C51259 * C51247) *
              C152530 * C152512 * C129 -
          (C51260 * C51247 + (C51252 + C51251) * C51246 +
           (C51250 + C51249) * C51245) *
              C152530 * C152512 * C130 +
          (C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
              C152530 * C152512 * C131 -
          ((C51257 + C51258) * C51247 + (C51256 + C51255) * C51246 +
           C51260 * C51245) *
              C152530 * C152512 * C132 +
          (C51261 * C51245 + (C51258 + C51257) * C51246 +
           (C210 * C51243 +
            (C134 * C878 - C135 * C877 - C134 * C879 + C152711 * C880) *
                C152747) *
               C51247) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152530 * C152917 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152530 * C152901 +
           ((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152530 * C152870) *
              C365 +
          (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
            (C51488 + C51489) * C51247) *
               C152530 * C152901 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152530 * C152917 -
           ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
            (C51485 + C51484) * C51245) *
               C152530 * C152870) *
              C366 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152530 * C152917 -
           ((C472 * C152747 + C471 * C51243) * C51247 +
            (C51489 + C51488) * C51246 + C51492 * C51245) *
               C152530 * C152901 +
           (C51493 * C51245 + (C51491 + C51490) * C51246 +
            (C472 * C51243 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C152747) *
                C51247) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                 C51243 +
             C6614 * C152747) *
                C51245 +
            (C51249 + C51250) * C51246 + C51259 * C51247) *
               C152530 * C1429 -
           (C51492 * C51247 + (C51482 + C51483) * C51246 +
            (C6615 * C152747 + C6614 * C51243) * C51245) *
               C152530 * C1430 +
           ((C6615 * C51243 + C6616 * C152747) * C51245 +
            (C51484 + C51485) * C51246 + C51493 * C51247) *
               C152530 * C152870) *
              C152914 +
          (((C51483 + C51482) * C51245 + (C51481 + C51480) * C51246 +
            C51920 * C51247) *
               C152530 * C1430 -
           (C51260 * C51247 + (C51252 + C51251) * C51246 +
            (C51250 + C51249) * C51245) *
               C152530 * C1429 -
           ((C51490 + C51491) * C51247 + (C51487 + C51486) * C51246 +
            (C51485 + C51484) * C51245) *
               C152530 * C152870) *
              C152897 +
          ((C51259 * C51245 + (C51254 + C51253) * C51246 + C51261 * C51247) *
               C152530 * C1429 -
           ((C51921 + C51922) * C51247 + (C51489 + C51488) * C51246 +
            C51492 * C51245) *
               C152530 * C1430 +
           (C51493 * C51245 + (C51491 + C51490) * C51246 +
            (C472 * C51243 +
             (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
                 C152747) *
                C51247) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C51243 +
            C6614 * C152747) *
               C51245 +
           (C51249 + C51250) * C51246 + C51259 * C51247) *
              C152530 * C1517 -
          (C51492 * C51247 + (C51482 + C51483) * C51246 +
           (C6615 * C152747 + C6614 * C51243) * C51245) *
              C152530 * C1518 +
          ((C6615 * C51243 + C6616 * C152747) * C51245 +
           (C51484 + C51485) * C51246 + C51493 * C51247) *
              C152530 * C1519 -
          ((C6618 * C152747 + C1909 * C51243) * C51247 +
           (C6617 * C152747 + C1910 * C51243) * C51246 +
           (C7957 * C152747 + C6616 * C51243) * C51245) *
              C152530 * C1520 +
          ((C7957 * C51243 + C7959 * C152747) * C51245 +
           (C6617 * C51243 + C7958 * C152747) * C51246 +
           (C6618 * C51243 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C152747) *
               C51247) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C59414 +
           C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
              C152457 * C152530 * C152512 * C129 -
          (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
              C152457 * C152530 * C152512 * C130 +
          (C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
              C152457 * C152530 * C152512 * C131 -
          (C1908 * C59417 + C470 * C59416 + C465 * C59415 + C207 * C59414) *
              C152457 * C152530 * C152512 * C132 +
          (C208 * C59414 + C471 * C59415 + C472 * C59416 +
           (C134 * C1886 - C135 * C1885 - C134 * C1887 + C152711 * C1888) *
               C59417) *
              C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C152917 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C152901 +
           (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152530 * C152870) *
              C365 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C152901 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C152917 -
           (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
               C152457 * C152530 * C152870) *
              C366 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152530 * C152917 -
           (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
               C152457 * C152530 * C152901 +
           (C469 * C59414 + C1909 * C59415 + C6618 * C59416 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C59417) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) *
                C59414 +
            C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
               C152457 * C152530 * C1429 -
           (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
               C152457 * C152530 * C1430 +
           (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
               C152457 * C152530 * C152870) *
              C152914 +
          ((C467 * C59414 + C468 * C59415 + C1910 * C59416 + C6617 * C59417) *
               C152457 * C152530 * C1430 -
           (C1910 * C59417 + C468 * C59416 + C467 * C59415 + C205 * C59414) *
               C152457 * C152530 * C1429 -
           (C7958 * C59417 + C6617 * C59416 + C1910 * C59415 + C468 * C59414) *
               C152457 * C152530 * C152870) *
              C152897 +
          ((C206 * C59414 + C466 * C59415 + C469 * C59416 + C1909 * C59417) *
               C152457 * C152530 * C1429 -
           (C6618 * C59417 + C1909 * C59416 + C469 * C59415 + C466 * C59414) *
               C152457 * C152530 * C1430 +
           (C469 * C59414 + C1909 * C59415 + C6618 * C59416 +
            (C134 * C8431 - C135 * C8430 - C134 * C8432 + C152711 * C8433) *
                C59417) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C144 - C135 * C136 - C134 * C145 + C152711 * C160) * C59414 +
           C6614 * C59415 + C6615 * C59416 + C6616 * C59417) *
              C152457 * C152530 * C1517 -
          (C7957 * C59417 + C6616 * C59416 + C6615 * C59415 + C6614 * C59414) *
              C152457 * C152530 * C1518 +
          (C6615 * C59414 + C6616 * C59415 + C7957 * C59416 + C7959 * C59417) *
              C152457 * C152530 * C1519 -
          (C60404 * C59417 + C7959 * C59416 + C7957 * C59415 + C6616 * C59414) *
              C152457 * C152530 * C1520 +
          (C7957 * C59414 + C7959 * C59415 + C60404 * C59416 +
           (C134 * C60394 - C135 * C60393 - C134 * C60395 + C152711 * C60396) *
               C59417) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[250] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152530 * C152571 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C152530 * C152578 +
           ((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
            (C123294 * C152845 + C111141 * C152747) * C152462) *
               C152530 * C3839) *
              C152489 +
          (((C123292 * C152845 + C123294 * C152747) * C152807 +
            (C123295 * C152845 + C100918 * C152747) * C152462) *
               C152530 * C152578 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C152530 * C152571 -
           (((C102757 + C102758) * C152747 + C123296 * C152845) * C152462 +
            (C125493 * C152747 + C109357 * C152845) * C152807) *
               C152530 * C3839) *
              C152498 +
          (((C100609 * C152845 + C123295 * C152747) * C152807 +
            ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
               C152530 * C152571 -
           (((C100915 + C100916) * C152747 + C123845 * C152845) * C152462 +
            (C123296 * C152747 + C100917 * C152845) * C152807) *
               C152530 * C152578 +
           ((C100918 * C152845 + (C102758 + C102757) * C152747) * C152807 +
            ((C100916 + C100915) * C152845 +
             (C100534 * C1531 - C100535 * C1523 - C100534 * C1532 +
              C100532 * C1547 + C100536 * C2275 - C100537 * C2268 -
              C100536 * C2276 + C152775 * C2280) *
                 C152747) *
                C152462) *
               C152530 * C3839) *
              C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[251] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
               C100532 * C160 + C100536 * C647 - C100537 * C632 -
               C100536 * C648 + C152775 * C668) *
                  C152845 +
              (C109370 + C109371) * C152747) *
                 C152807 +
             ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
                C152829 -
            ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
             ((C110299 + C110300) * C152747 +
              (C100536 * C649 - C100537 * C633 - C100536 * C650 +
               C152775 * C669 + C100534 * C647 - C100535 * C632 -
               C100534 * C648 + C100532 * C668) *
                  C152845) *
                 C152807) *
                C152617) *
               C152571 +
           ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                 C152807 +
             (C124491 * C152845 + C111446 * C152747) * C152462) *
                C152617 -
            ((C109357 * C152747 + C123293 * C152845) * C152462 +
             ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                 C152807) *
                C152829) *
               C152578 +
           (((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
             (C123294 * C152845 + C111141 * C152747) * C152462) *
                C152829 -
            (((C111459 + C111460) * C152747 + C125880 * C152845) * C152462 +
             ((C110943 + C110942) * C152747 + C110889 * C152845) * C152807) *
                C152617) *
               C3839) *
              C3495 +
          (((((C101214 + C101213) * C152845 + C124491 * C152747) * C152807 +
             ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
                C152617 -
            ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
             (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
                C152829) *
               C152571 +
           (((C123292 * C152845 + C123294 * C152747) * C152807 +
             (C123295 * C152845 + C100918 * C152747) * C152462) *
                C152829 -
            (((C103075 + C103076) * C152747 + C124492 * C152845) * C152462 +
             (C125880 * C152747 + C124490 * C152845) * C152807) *
                C152617) *
               C152578 +
           (((C111446 * C152845 + (C111460 + C111459) * C152747) * C152807 +
             ((C103076 + C103075) * C152845 +
              (C100534 * C2273 - C100535 * C2267 - C100534 * C2274 +
               C100532 * C2279 + C100536 * C9823 - C100537 * C9822 -
               C100536 * C9824 + C152775 * C9825) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C102757 + C102758) * C152747 + C123296 * C152845) * C152462 +
             (C125493 * C152747 + C109357 * C152845) * C152807) *
                C152829) *
               C3839) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[252] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152530 * C152924 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C152530 * C152920 +
           ((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
            (C123294 * C152845 + C111141 * C152747) * C152462) *
               C152530 * C152906 -
           (((C111154 + C111155) * C152747 + C125493 * C152845) * C152462 +
            ((C110667 + C110666) * C152747 + C110641 * C152845) * C152807) *
               C152530 * C152880) *
              C3495 +
          (((C123292 * C152845 + C123294 * C152747) * C152807 +
            (C123295 * C152845 + C100918 * C152747) * C152462) *
               C152530 * C152920 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C152530 * C152924 -
           (((C102757 + C102758) * C152747 + C123296 * C152845) * C152462 +
            (C125493 * C152747 + C109357 * C152845) * C152807) *
               C152530 * C152906 +
           ((C111141 * C152845 + (C111155 + C111154) * C152747) * C152807 +
            ((C102758 + C102757) * C152845 +
             (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
              C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
              C100536 * C8729 + C152775 * C8730) *
                 C152747) *
                C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152530 * C3355 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C152530 * C152575) *
              C152923 +
          (((C123292 * C152845 + C123294 * C152747) * C152807 +
            (C123295 * C152845 + C100918 * C152747) * C152462) *
               C152530 * C152575 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C152530 * C3355) *
              C152916 +
          (((C100609 * C152845 + C123295 * C152747) * C152807 +
            ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
               C152530 * C3355 -
           (((C100915 + C100916) * C152747 + C123845 * C152845) * C152462 +
            (C123296 * C152747 + C100917 * C152845) * C152807) *
               C152530 * C152575) *
              C152899 +
          (((C101421 * C152845 + (C100916 + C100915) * C152747) * C152807 +
            ((C101436 + C101435) * C152845 +
             (C100534 * C398 - C100535 * C377 - C100534 * C399 +
              C100532 * C413 + C100536 * C2108 - C100537 * C2107 -
              C100536 * C2109 + C152775 * C2110) *
                 C152747) *
                C152462) *
               C152530 * C152575 -
           (((C101435 + C101436) * C152747 + (C100606 + C100605) * C152845) *
                C152462 +
            (C123845 * C152747 + C100610 * C152845) * C152807) *
               C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
               C100532 * C160 + C100536 * C647 - C100537 * C632 -
               C100536 * C648 + C152775 * C668) *
                  C152845 +
              (C109370 + C109371) * C152747) *
                 C152807 +
             ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
                C152918 -
            ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
             ((C110299 + C110300) * C152747 +
              (C100536 * C649 - C100537 * C633 - C100536 * C650 +
               C152775 * C669 + C100534 * C647 - C100535 * C632 -
               C100534 * C648 + C100532 * C668) *
                  C152845) *
                 C152807) *
                C152903 +
            (((C100534 * C649 - C100535 * C633 - C100534 * C650 +
               C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
               C100536 * C2678 + C152775 * C2690) *
                  C152845 +
              (C110938 + C110939) * C152747) *
                 C152807 +
             ((C101215 + C101216) * C152845 + C127267 * C152747) * C152462) *
                C152873) *
               C3355 +
           ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                 C152807 +
             (C124491 * C152845 + C111446 * C152747) * C152462) *
                C152903 -
            ((C109357 * C152747 + C123293 * C152845) * C152462 +
             ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                 C152807) *
                C152918 -
            (((C112530 + C112531) * C152747 + C127268 * C152845) * C152462 +
             ((C110941 + C110940) * C152747 + (C110939 + C110938) * C152845) *
                 C152807) *
                C152873) *
               C152575) *
              C3495 +
          (((((C101214 + C101213) * C152845 + C124491 * C152747) * C152807 +
             ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
                C152903 -
            ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
             (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
                C152918 -
            (((C104145 + C104146) * C152747 + (C101218 + C101217) * C152845) *
                 C152462 +
             (C127268 * C152747 + (C101216 + C101215) * C152845) * C152807) *
                C152873) *
               C3355 +
           (((C123292 * C152845 + C123294 * C152747) * C152807 +
             (C123295 * C152845 + C100918 * C152747) * C152462) *
                C152918 -
            (((C103075 + C103076) * C152747 + C124492 * C152845) * C152462 +
             (C125880 * C152747 + C124490 * C152845) * C152807) *
                C152903 +
            ((C127267 * C152845 + (C112531 + C112530) * C152747) * C152807 +
             ((C104146 + C104145) * C152845 +
              (C100534 * C1733 - C100535 * C1711 - C100534 * C1734 +
               C100532 * C1747 + C100536 * C10024 - C100537 * C10023 -
               C100536 * C10025 + C152775 * C10026) *
                  C152747) *
                 C152462) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[253] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
               C100532 * C160 + C100536 * C647 - C100537 * C632 -
               C100536 * C648 + C152775 * C668) *
                  C152845 +
              (C109370 + C109371) * C152747) *
                 C152807 +
             ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
                C152829 -
            ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
             ((C110299 + C110300) * C152747 +
              (C100536 * C649 - C100537 * C633 - C100536 * C650 +
               C152775 * C669 + C100534 * C647 - C100535 * C632 -
               C100534 * C648 + C100532 * C668) *
                  C152845) *
                 C152807) *
                C152617) *
               C3355 +
           ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                 C152807 +
             (C124491 * C152845 + C111446 * C152747) * C152462) *
                C152617 -
            ((C109357 * C152747 + C123293 * C152845) * C152462 +
             ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                 C152807) *
                C152829) *
               C152575) *
              C152489 +
          (((((C101214 + C101213) * C152845 + C124491 * C152747) * C152807 +
             ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
                C152617 -
            ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
             (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
                C152829) *
               C3355 +
           (((C123292 * C152845 + C123294 * C152747) * C152807 +
             (C123295 * C152845 + C100918 * C152747) * C152462) *
                C152829 -
            (((C103075 + C103076) * C152747 + C124492 * C152845) * C152462 +
             (C125880 * C152747 + C124490 * C152845) * C152807) *
                C152617) *
               C152575) *
              C152498 +
          ((((C100609 * C152845 + C123295 * C152747) * C152807 +
             ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
                C152829 -
            (((C101977 + C101978) * C152747 + (C101220 + C101219) * C152845) *
                 C152462 +
             (C124492 * C152747 + C101223 * C152845) * C152807) *
                C152617) *
               C3355 +
           (((C101979 * C152845 + (C103076 + C103075) * C152747) * C152807 +
             ((C101978 + C101977) * C152845 +
              (C100534 * C1721 - C100535 * C1705 - C100534 * C1722 +
               C100532 * C1741 + C100536 * C1735 - C100537 * C1712 -
               C100536 * C1736 + C152775 * C1748) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C100915 + C100916) * C152747 + C123845 * C152845) * C152462 +
             (C123296 * C152747 + C100917 * C152845) * C152807) *
                C152829) *
               C152575) *
              C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[254] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152530 * C3355 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C152530 * C152575) *
              C152923 +
          (((C123292 * C152845 + C123294 * C152747) * C152807 +
            (C123295 * C152845 + C100918 * C152747) * C152462) *
               C152530 * C152575 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C152530 * C3355) *
              C152916 +
          (((C100609 * C152845 + C123295 * C152747) * C152807 +
            ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
               C152530 * C3355 -
           (((C100915 + C100916) * C152747 + C123845 * C152845) * C152462 +
            (C123296 * C152747 + C100917 * C152845) * C152807) *
               C152530 * C152575) *
              C152899 +
          (((C101421 * C152845 + (C100916 + C100915) * C152747) * C152807 +
            ((C101436 + C101435) * C152845 +
             (C100534 * C398 - C100535 * C377 - C100534 * C399 +
              C100532 * C413 + C100536 * C2108 - C100537 * C2107 -
              C100536 * C2109 + C152775 * C2110) *
                 C152747) *
                C152462) *
               C152530 * C152575 -
           (((C101435 + C101436) * C152747 + (C100606 + C100605) * C152845) *
                C152462 +
            (C123845 * C152747 + C100610 * C152845) * C152807) *
               C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152530 * C152924 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C152530 * C152920 +
           ((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
            (C123294 * C152845 + C111141 * C152747) * C152462) *
               C152530 * C152906 -
           (((C111154 + C111155) * C152747 + C125493 * C152845) * C152462 +
            ((C110667 + C110666) * C152747 + C110641 * C152845) * C152807) *
               C152530 * C152880) *
              C3495 +
          (((C123292 * C152845 + C123294 * C152747) * C152807 +
            (C123295 * C152845 + C100918 * C152747) * C152462) *
               C152530 * C152920 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C152530 * C152924 -
           (((C102757 + C102758) * C152747 + C123296 * C152845) * C152462 +
            (C125493 * C152747 + C109357 * C152845) * C152807) *
               C152530 * C152906 +
           ((C111141 * C152845 + (C111155 + C111154) * C152747) * C152807 +
            ((C102758 + C102757) * C152845 +
             (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
              C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
              C100536 * C8729 + C152775 * C8730) *
                 C152747) *
                C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[255] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
               C100532 * C160 + C100536 * C647 - C100537 * C632 -
               C100536 * C648 + C152775 * C668) *
                  C152845 +
              (C109370 + C109371) * C152747) *
                 C152807 +
             ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
                C4361 -
            ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
             ((C110299 + C110300) * C152747 +
              (C100536 * C649 - C100537 * C633 - C100536 * C650 +
               C152775 * C669 + C100534 * C647 - C100535 * C632 -
               C100534 * C648 + C100532 * C668) *
                  C152845) *
                 C152807) *
                C152617) *
               C152571 +
           ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                 C152807 +
             (C124491 * C152845 + C111446 * C152747) * C152462) *
                C152617 -
            ((C109357 * C152747 + C123293 * C152845) * C152462 +
             ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                 C152807) *
                C4361) *
               C152578 +
           (((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
             (C123294 * C152845 + C111141 * C152747) * C152462) *
                C4361 -
            (((C111459 + C111460) * C152747 + C125880 * C152845) * C152462 +
             ((C110943 + C110942) * C152747 + C110889 * C152845) * C152807) *
                C152617) *
               C3839) *
              C152814 +
          (((((C101214 + C101213) * C152845 + C124491 * C152747) * C152807 +
             ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
                C152617 -
            ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
             (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
                C4361) *
               C152571 +
           (((C123292 * C152845 + C123294 * C152747) * C152807 +
             (C123295 * C152845 + C100918 * C152747) * C152462) *
                C4361 -
            (((C103075 + C103076) * C152747 + C124492 * C152845) * C152462 +
             (C125880 * C152747 + C124490 * C152845) * C152807) *
                C152617) *
               C152578 +
           (((C111446 * C152845 + (C111460 + C111459) * C152747) * C152807 +
             ((C103076 + C103075) * C152845 +
              (C100534 * C2273 - C100535 * C2267 - C100534 * C2274 +
               C100532 * C2279 + C100536 * C9823 - C100537 * C9822 -
               C100536 * C9824 + C152775 * C9825) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C102757 + C102758) * C152747 + C123296 * C152845) * C152462 +
             (C125493 * C152747 + C109357 * C152845) * C152807) *
                C4361) *
               C3839) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[256] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152613 -
           ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
            ((C110299 + C110300) * C152747 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152845) *
                C152807) *
               C152620 +
           (((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C152845 +
             (C110938 + C110939) * C152747) *
                C152807 +
            ((C101215 + C101216) * C152845 + C127267 * C152747) * C152462) *
               C5033) *
              C152571 +
          ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                C152807 +
            (C124491 * C152845 + C111446 * C152747) * C152462) *
               C152620 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C152613 -
           (((C112530 + C112531) * C152747 + C127268 * C152845) * C152462 +
            ((C110941 + C110940) * C152747 + (C110939 + C110938) * C152845) *
                C152807) *
               C5033) *
              C152578 +
          (((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
            (C123294 * C152845 + C111141 * C152747) * C152462) *
               C152613 -
           (((C111459 + C111460) * C152747 + C125880 * C152845) * C152462 +
            ((C110943 + C110942) * C152747 + C110889 * C152845) * C152807) *
               C152620 +
           ((C110946 * C152845 + (C110945 + C110944) * C152747) * C152807 +
            ((C112531 + C112530) * C152845 +
             (C100534 * C8183 - C100535 * C8177 - C100534 * C8184 +
              C100532 * C8195 + C100536 * C10242 - C100537 * C10239 -
              C100536 * C10243 + C152775 * C10245) *
                 C152747) *
                C152462) *
               C5033) *
              C3839) *
         C152484) /
        (p * q * std::sqrt(p + q));
    d2ee[257] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C4361 -
           ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
            ((C110299 + C110300) * C152747 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152845) *
                C152807) *
               C152617) *
              C152924 +
          ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                C152807 +
            (C124491 * C152845 + C111446 * C152747) * C152462) *
               C152617 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C4361) *
              C152920 +
          (((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
            (C123294 * C152845 + C111141 * C152747) * C152462) *
               C4361 -
           (((C111459 + C111460) * C152747 + C125880 * C152845) * C152462 +
            ((C110943 + C110942) * C152747 + C110889 * C152845) * C152807) *
               C152617) *
              C152906 +
          (((C111655 * C152845 + (C111669 + C111668) * C152747) * C152807 +
            ((C111460 + C111459) * C152845 +
             (C100534 * C8187 - C100535 * C8179 - C100534 * C8188 +
              C100532 * C8197 + C100536 * C8193 - C100537 * C8182 -
              C100536 * C8194 + C152775 * C8200) *
                 C152747) *
                C152462) *
               C152617 -
           (((C111154 + C111155) * C152747 + C125493 * C152845) * C152462 +
            ((C110667 + C110666) * C152747 + C110641 * C152845) * C152807) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
               C100532 * C160 + C100536 * C647 - C100537 * C632 -
               C100536 * C648 + C152775 * C668) *
                  C152845 +
              (C109370 + C109371) * C152747) *
                 C152807 +
             ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
                C4361 -
            ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
             ((C110299 + C110300) * C152747 +
              (C100536 * C649 - C100537 * C633 - C100536 * C650 +
               C152775 * C669 + C100534 * C647 - C100535 * C632 -
               C100534 * C648 + C100532 * C668) *
                  C152845) *
                 C152807) *
                C152617) *
               C3355 +
           ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                 C152807 +
             (C124491 * C152845 + C111446 * C152747) * C152462) *
                C152617 -
            ((C109357 * C152747 + C123293 * C152845) * C152462 +
             ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                 C152807) *
                C4361) *
               C152575) *
              C152914 +
          (((((C101214 + C101213) * C152845 + C124491 * C152747) * C152807 +
             ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
                C152617 -
            ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
             (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
                C4361) *
               C3355 +
           (((C123292 * C152845 + C123294 * C152747) * C152807 +
             (C123295 * C152845 + C100918 * C152747) * C152462) *
                C4361 -
            (((C103075 + C103076) * C152747 + C124492 * C152845) * C152462 +
             (C125880 * C152747 + C124490 * C152845) * C152807) *
                C152617) *
               C152575) *
              C152897 +
          ((((C100609 * C152845 + C123295 * C152747) * C152807 +
             ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
                C4361 -
            (((C101977 + C101978) * C152747 + (C101220 + C101219) * C152845) *
                 C152462 +
             (C124492 * C152747 + C101223 * C152845) * C152807) *
                C152617) *
               C3355 +
           (((C101979 * C152845 + (C103076 + C103075) * C152747) * C152807 +
             ((C101978 + C101977) * C152845 +
              (C100534 * C1721 - C100535 * C1705 - C100534 * C1722 +
               C100532 * C1741 + C100536 * C1735 - C100537 * C1712 -
               C100536 * C1736 + C152775 * C1748) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C100915 + C100916) * C152747 + C123845 * C152845) * C152462 +
             (C123296 * C152747 + C100917 * C152845) * C152807) *
                C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152925 -
           ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
            ((C110299 + C110300) * C152747 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152845) *
                C152807) *
               C152922 +
           (((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C152845 +
             (C110938 + C110939) * C152747) *
                C152807 +
            ((C101215 + C101216) * C152845 + C127267 * C152747) * C152462) *
               C152909 -
           (((C127539 + C127540) * C152747 + (C104369 + C104370) * C152845) *
                C152462 +
            ((C112946 + C112947) * C152747 +
             (C100536 * C2679 - C100537 * C2667 - C100536 * C2680 +
              C152775 * C2691 + C100534 * C2677 - C100535 * C2666 -
              C100534 * C2678 + C100532 * C2690) *
                 C152845) *
                C152807) *
               C152886) *
              C3355 +
          ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                C152807 +
            (C124491 * C152845 + C111446 * C152747) * C152462) *
               C152922 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C152925 -
           (((C112530 + C112531) * C152747 + C127268 * C152845) * C152462 +
            ((C110941 + C110940) * C152747 + (C110939 + C110938) * C152845) *
                C152807) *
               C152909 +
           (((C112947 + C112946) * C152845 + (C112945 + C112944) * C152747) *
                C152807 +
            ((C127540 + C127539) * C152845 +
             (C100534 * C9514 - C100535 * C9508 - C100534 * C9515 +
              C100532 * C9526 + C100536 * C9524 - C100537 * C9513 -
              C100536 * C9525 + C152775 * C9531) *
                 C152747) *
                C152462) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[258] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
               C100532 * C160 + C100536 * C647 - C100537 * C632 -
               C100536 * C648 + C152775 * C668) *
                  C152845 +
              (C109370 + C109371) * C152747) *
                 C152807 +
             ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
                C152613 -
            ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
             ((C110299 + C110300) * C152747 +
              (C100536 * C649 - C100537 * C633 - C100536 * C650 +
               C152775 * C669 + C100534 * C647 - C100535 * C632 -
               C100534 * C648 + C100532 * C668) *
                  C152845) *
                 C152807) *
                C152620 +
            (((C100534 * C649 - C100535 * C633 - C100534 * C650 +
               C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
               C100536 * C2678 + C152775 * C2690) *
                  C152845 +
              (C110938 + C110939) * C152747) *
                 C152807 +
             ((C101215 + C101216) * C152845 + C127267 * C152747) * C152462) *
                C5033) *
               C3355 +
           ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                 C152807 +
             (C124491 * C152845 + C111446 * C152747) * C152462) *
                C152620 -
            ((C109357 * C152747 + C123293 * C152845) * C152462 +
             ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                 C152807) *
                C152613 -
            (((C112530 + C112531) * C152747 + C127268 * C152845) * C152462 +
             ((C110941 + C110940) * C152747 + (C110939 + C110938) * C152845) *
                 C152807) *
                C5033) *
               C152575) *
              C152814 +
          (((((C101214 + C101213) * C152845 + C124491 * C152747) * C152807 +
             ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
                C152620 -
            ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
             (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
                C152613 -
            (((C104145 + C104146) * C152747 + (C101218 + C101217) * C152845) *
                 C152462 +
             (C127268 * C152747 + (C101216 + C101215) * C152845) * C152807) *
                C5033) *
               C3355 +
           (((C123292 * C152845 + C123294 * C152747) * C152807 +
             (C123295 * C152845 + C100918 * C152747) * C152462) *
                C152613 -
            (((C103075 + C103076) * C152747 + C124492 * C152845) * C152462 +
             (C125880 * C152747 + C124490 * C152845) * C152807) *
                C152620 +
            ((C127267 * C152845 + (C112531 + C112530) * C152747) * C152807 +
             ((C104146 + C104145) * C152845 +
              (C100534 * C1733 - C100535 * C1711 - C100534 * C1734 +
               C100532 * C1747 + C100536 * C10024 - C100537 * C10023 -
               C100536 * C10025 + C152775 * C10026) *
                  C152747) *
                 C152462) *
                C5033) *
               C152575) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[259] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
               C100532 * C160 + C100536 * C647 - C100537 * C632 -
               C100536 * C648 + C152775 * C668) *
                  C152845 +
              (C109370 + C109371) * C152747) *
                 C152807 +
             ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
                C4361 -
            ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
             ((C110299 + C110300) * C152747 +
              (C100536 * C649 - C100537 * C633 - C100536 * C650 +
               C152775 * C669 + C100534 * C647 - C100535 * C632 -
               C100534 * C648 + C100532 * C668) *
                  C152845) *
                 C152807) *
                C152617) *
               C3355 +
           ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                 C152807 +
             (C124491 * C152845 + C111446 * C152747) * C152462) *
                C152617 -
            ((C109357 * C152747 + C123293 * C152845) * C152462 +
             ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                 C152807) *
                C4361) *
               C152575) *
              C152914 +
          (((((C101214 + C101213) * C152845 + C124491 * C152747) * C152807 +
             ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
                C152617 -
            ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
             (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
                C4361) *
               C3355 +
           (((C123292 * C152845 + C123294 * C152747) * C152807 +
             (C123295 * C152845 + C100918 * C152747) * C152462) *
                C4361 -
            (((C103075 + C103076) * C152747 + C124492 * C152845) * C152462 +
             (C125880 * C152747 + C124490 * C152845) * C152807) *
                C152617) *
               C152575) *
              C152897 +
          ((((C100609 * C152845 + C123295 * C152747) * C152807 +
             ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
                C4361 -
            (((C101977 + C101978) * C152747 + (C101220 + C101219) * C152845) *
                 C152462 +
             (C124492 * C152747 + C101223 * C152845) * C152807) *
                C152617) *
               C3355 +
           (((C101979 * C152845 + (C103076 + C103075) * C152747) * C152807 +
             ((C101978 + C101977) * C152845 +
              (C100534 * C1721 - C100535 * C1705 - C100534 * C1722 +
               C100532 * C1741 + C100536 * C1735 - C100537 * C1712 -
               C100536 * C1736 + C152775 * C1748) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C100915 + C100916) * C152747 + C123845 * C152845) * C152462 +
             (C123296 * C152747 + C100917 * C152845) * C152807) *
                C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C4361 -
           ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
            ((C110299 + C110300) * C152747 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152845) *
                C152807) *
               C152617) *
              C152924 +
          ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                C152807 +
            (C124491 * C152845 + C111446 * C152747) * C152462) *
               C152617 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C4361) *
              C152920 +
          (((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
            (C123294 * C152845 + C111141 * C152747) * C152462) *
               C4361 -
           (((C111459 + C111460) * C152747 + C125880 * C152845) * C152462 +
            ((C110943 + C110942) * C152747 + C110889 * C152845) * C152807) *
               C152617) *
              C152906 +
          (((C111655 * C152845 + (C111669 + C111668) * C152747) * C152807 +
            ((C111460 + C111459) * C152845 +
             (C100534 * C8187 - C100535 * C8179 - C100534 * C8188 +
              C100532 * C8197 + C100536 * C8193 - C100537 * C8182 -
              C100536 * C8194 + C152775 * C8200) *
                 C152747) *
                C152462) *
               C152617 -
           (((C111154 + C111155) * C152747 + C125493 * C152845) * C152462 +
            ((C110667 + C110666) * C152747 + C110641 * C152845) * C152807) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[260] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152530 * C1879 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C152530 * C1880 +
           ((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
            (C123294 * C152845 + C111141 * C152747) * C152462) *
               C152530 * C1881 -
           (((C111154 + C111155) * C152747 + C125493 * C152845) * C152462 +
            ((C110667 + C110666) * C152747 + C110641 * C152845) * C152807) *
               C152530 * C152880) *
              C152814 +
          (((C123292 * C152845 + C123294 * C152747) * C152807 +
            (C123295 * C152845 + C100918 * C152747) * C152462) *
               C152530 * C1880 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C152530 * C1879 -
           (((C102757 + C102758) * C152747 + C123296 * C152845) * C152462 +
            (C125493 * C152747 + C109357 * C152845) * C152807) *
               C152530 * C1881 +
           ((C111141 * C152845 + (C111155 + C111154) * C152747) * C152807 +
            ((C102758 + C102757) * C152845 +
             (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
              C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
              C100536 * C8729 + C152775 * C8730) *
                 C152747) *
                C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152530 * C152828 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C152530 * C152575) *
              C873 +
          (((C123292 * C152845 + C123294 * C152747) * C152807 +
            (C123295 * C152845 + C100918 * C152747) * C152462) *
               C152530 * C152575 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C152530 * C152828) *
              C874 +
          (((C100609 * C152845 + C123295 * C152747) * C152807 +
            ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
               C152530 * C152828 -
           (((C100915 + C100916) * C152747 + C123845 * C152845) * C152462 +
            (C123296 * C152747 + C100917 * C152845) * C152807) *
               C152530 * C152575) *
              C875 +
          (((C101421 * C152845 + (C100916 + C100915) * C152747) * C152807 +
            ((C101436 + C101435) * C152845 +
             (C100534 * C398 - C100535 * C377 - C100534 * C399 +
              C100532 * C413 + C100536 * C2108 - C100537 * C2107 -
              C100536 * C2109 + C152775 * C2110) *
                 C152747) *
                C152462) *
               C152530 * C152575 -
           (((C101435 + C101436) * C152747 + (C100606 + C100605) * C152845) *
                C152462 +
            (C123845 * C152747 + C100610 * C152845) * C152807) *
               C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
               C100532 * C160 + C100536 * C647 - C100537 * C632 -
               C100536 * C648 + C152775 * C668) *
                  C152845 +
              (C109370 + C109371) * C152747) *
                 C152807 +
             ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
                C2427 -
            ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
             ((C110299 + C110300) * C152747 +
              (C100536 * C649 - C100537 * C633 - C100536 * C650 +
               C152775 * C669 + C100534 * C647 - C100535 * C632 -
               C100534 * C648 + C100532 * C668) *
                  C152845) *
                 C152807) *
                C2428 +
            (((C100534 * C649 - C100535 * C633 - C100534 * C650 +
               C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
               C100536 * C2678 + C152775 * C2690) *
                  C152845 +
              (C110938 + C110939) * C152747) *
                 C152807 +
             ((C101215 + C101216) * C152845 + C127267 * C152747) * C152462) *
                C152873) *
               C152828 +
           ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                 C152807 +
             (C124491 * C152845 + C111446 * C152747) * C152462) *
                C2428 -
            ((C109357 * C152747 + C123293 * C152845) * C152462 +
             ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                 C152807) *
                C2427 -
            (((C112530 + C112531) * C152747 + C127268 * C152845) * C152462 +
             ((C110941 + C110940) * C152747 + (C110939 + C110938) * C152845) *
                 C152807) *
                C152873) *
               C152575) *
              C152814 +
          (((((C101214 + C101213) * C152845 + C124491 * C152747) * C152807 +
             ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
                C2428 -
            ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
             (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
                C2427 -
            (((C104145 + C104146) * C152747 + (C101218 + C101217) * C152845) *
                 C152462 +
             (C127268 * C152747 + (C101216 + C101215) * C152845) * C152807) *
                C152873) *
               C152828 +
           (((C123292 * C152845 + C123294 * C152747) * C152807 +
             (C123295 * C152845 + C100918 * C152747) * C152462) *
                C2427 -
            (((C103075 + C103076) * C152747 + C124492 * C152845) * C152462 +
             (C125880 * C152747 + C124490 * C152845) * C152807) *
                C2428 +
            ((C127267 * C152845 + (C112531 + C112530) * C152747) * C152807 +
             ((C104146 + C104145) * C152845 +
              (C100534 * C1733 - C100535 * C1711 - C100534 * C1734 +
               C100532 * C1747 + C100536 * C10024 - C100537 * C10023 -
               C100536 * C10025 + C152775 * C10026) *
                  C152747) *
                 C152462) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[261] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152829 -
           ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
            ((C110299 + C110300) * C152747 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152845) *
                C152807) *
               C152617) *
              C1879 +
          ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                C152807 +
            (C124491 * C152845 + C111446 * C152747) * C152462) *
               C152617 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C152829) *
              C1880 +
          (((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
            (C123294 * C152845 + C111141 * C152747) * C152462) *
               C152829 -
           (((C111459 + C111460) * C152747 + C125880 * C152845) * C152462 +
            ((C110943 + C110942) * C152747 + C110889 * C152845) * C152807) *
               C152617) *
              C1881 +
          (((C111655 * C152845 + (C111669 + C111668) * C152747) * C152807 +
            ((C111460 + C111459) * C152845 +
             (C100534 * C8187 - C100535 * C8179 - C100534 * C8188 +
              C100532 * C8197 + C100536 * C8193 - C100537 * C8182 -
              C100536 * C8194 + C152775 * C8200) *
                 C152747) *
                C152462) *
               C152617 -
           (((C111154 + C111155) * C152747 + C125493 * C152845) * C152462 +
            ((C110667 + C110666) * C152747 + C110641 * C152845) * C152807) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
               C100532 * C160 + C100536 * C647 - C100537 * C632 -
               C100536 * C648 + C152775 * C668) *
                  C152845 +
              (C109370 + C109371) * C152747) *
                 C152807 +
             ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
                C152829 -
            ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
             ((C110299 + C110300) * C152747 +
              (C100536 * C649 - C100537 * C633 - C100536 * C650 +
               C152775 * C669 + C100534 * C647 - C100535 * C632 -
               C100534 * C648 + C100532 * C668) *
                  C152845) *
                 C152807) *
                C152617) *
               C152828 +
           ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                 C152807 +
             (C124491 * C152845 + C111446 * C152747) * C152462) *
                C152617 -
            ((C109357 * C152747 + C123293 * C152845) * C152462 +
             ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                 C152807) *
                C152829) *
               C152575) *
              C365 +
          (((((C101214 + C101213) * C152845 + C124491 * C152747) * C152807 +
             ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
                C152617 -
            ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
             (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
                C152829) *
               C152828 +
           (((C123292 * C152845 + C123294 * C152747) * C152807 +
             (C123295 * C152845 + C100918 * C152747) * C152462) *
                C152829 -
            (((C103075 + C103076) * C152747 + C124492 * C152845) * C152462 +
             ((C103077 + C103078) * C152747 + C124490 * C152845) * C152807) *
                C152617) *
               C152575) *
              C366 +
          ((((C100609 * C152845 + C123295 * C152747) * C152807 +
             ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
                C152829 -
            (((C101977 + C101978) * C152747 + (C101220 + C101219) * C152845) *
                 C152462 +
             (C124492 * C152747 + C101223 * C152845) * C152807) *
                C152617) *
               C152828 +
           (((C101979 * C152845 + (C103076 + C103075) * C152747) * C152807 +
             ((C101978 + C101977) * C152845 +
              (C100534 * C1721 - C100535 * C1705 - C100534 * C1722 +
               C100532 * C1741 + C100536 * C1735 - C100537 * C1712 -
               C100536 * C1736 + C152775 * C1748) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C100915 + C100916) * C152747 + C123845 * C152845) * C152462 +
             (C123296 * C152747 + C100917 * C152845) * C152807) *
                C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C3047 -
           ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
            ((C110299 + C110300) * C152747 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152845) *
                C152807) *
               C3048 +
           (((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C152845 +
             (C110938 + C110939) * C152747) *
                C152807 +
            ((C101215 + C101216) * C152845 + C127267 * C152747) * C152462) *
               C3049 -
           (((C127539 + C127540) * C152747 + (C104369 + C104370) * C152845) *
                C152462 +
            ((C112946 + C112947) * C152747 +
             (C100536 * C2679 - C100537 * C2667 - C100536 * C2680 +
              C152775 * C2691 + C100534 * C2677 - C100535 * C2666 -
              C100534 * C2678 + C100532 * C2690) *
                 C152845) *
                C152807) *
               C152886) *
              C152828 +
          ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                C152807 +
            (C124491 * C152845 + C111446 * C152747) * C152462) *
               C3048 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C3047 -
           (((C112530 + C112531) * C152747 + C127268 * C152845) * C152462 +
            ((C110941 + C110940) * C152747 + (C110939 + C110938) * C152845) *
                C152807) *
               C3049 +
           (((C112947 + C112946) * C152845 + (C112945 + C112944) * C152747) *
                C152807 +
            ((C127540 + C127539) * C152845 +
             (C100534 * C9514 - C100535 * C9508 - C100534 * C9515 +
              C100532 * C9526 + C100536 * C9524 - C100537 * C9513 -
              C100536 * C9525 + C152775 * C9531) *
                 C152747) *
                C152462) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[262] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
                 C100532 * C160 + C100536 * C647 - C100537 * C632 -
                 C100536 * C648 + C152775 * C668) *
                    C152845 +
                (C109370 + C109371) * C152747) *
                   C152807 +
               ((C100599 + C100600) * C152845 + (C100908 + C100907) * C152747) *
                   C152462) *
                  C152530 * C152512 * C129 -
              ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
               ((C100907 + C100908) * C152747 + (C100600 + C100599) * C152845) *
                   C152807) *
                  C152530 * C152512 * C130 +
              ((C100609 * C152845 + (C100906 + C100905) * C152747) * C152807 +
               ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
                  C152530 * C152512 * C131 -
              (((C101435 + C101436) * C152747 + (C100606 + C100605) * C152845) *
                   C152462 +
               ((C100914 + C100913) * C152747 + C100610 * C152845) * C152807) *
                  C152530 * C152512 * C132 +
              ((C100611 * C152845 + (C101436 + C101435) * C152747) * C152807 +
               ((C100608 + C100607) * C152845 +
                (C100534 * C400 - C100535 * C378 - C100534 * C401 +
                 C100532 * C414 + C100536 * C1243 - C100537 * C1232 -
                 C100536 * C1244 + C152775 * C1250) *
                    C152747) *
                   C152462) *
                  C152530 * C152512 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
                  C100532 * C160 + C100536 * C647 - C100537 * C632 -
                  C100536 * C648 + C152775 * C668) *
                     C152845 +
                 (C109370 + C109371) * C152747) *
                    C152807 +
                ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
                   C152530 * C152917 -
               ((C109357 * C152747 + C123293 * C152845) * C152462 +
                ((C109373 + C109372) * C152747 +
                 (C109371 + C109370) * C152845) *
                    C152807) *
                   C152530 * C152901 +
               ((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
                (C123294 * C152845 + C111141 * C152747) * C152462) *
                   C152530 * C152870) *
                  C365 +
              (((C123292 * C152845 + C123294 * C152747) * C152807 +
                (C123295 * C152845 + C100918 * C152747) * C152462) *
                   C152530 * C152901 -
               ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
                (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
                   C152530 * C152917 -
               (((C102757 + C102758) * C152747 + C123296 * C152845) * C152462 +
                ((C102759 + C102760) * C152747 + C109357 * C152845) * C152807) *
                   C152530 * C152870) *
                  C366 +
              (((C100609 * C152845 + C123295 * C152747) * C152807 +
                ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
                   C152530 * C152917 -
               (((C100915 + C100916) * C152747 +
                 (C100914 + C100913) * C152845) *
                    C152462 +
                (C123296 * C152747 + C100917 * C152845) * C152807) *
                   C152530 * C152901 +
               ((C100918 * C152845 + (C102758 + C102757) * C152747) * C152807 +
                ((C100916 + C100915) * C152845 +
                 (C100534 * C1531 - C100535 * C1523 - C100534 * C1532 +
                  C100532 * C1547 + C100536 * C2275 - C100537 * C2268 -
                  C100536 * C2276 + C152775 * C2280) *
                     C152747) *
                    C152462) *
                   C152530 * C152870) *
                  C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152918 -
           (((C101974 + C101973) * C152747 + (C101213 + C101214) * C152845) *
                C152462 +
            ((C110299 + C110300) * C152747 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152845) *
                C152807) *
               C152903 +
           (((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C152845 +
             (C110938 + C110939) * C152747) *
                C152807 +
            ((C101215 + C101216) * C152845 + (C104148 + C104147) * C152747) *
                C152462) *
               C152873) *
              C152512 * C365 +
          ((((C101214 + C101213) * C152845 + (C101973 + C101974) * C152747) *
                C152807 +
            ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
               C152903 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C152918 -
           (((C104145 + C104146) * C152747 + (C101218 + C101217) * C152845) *
                C152462 +
            ((C104147 + C104148) * C152747 + (C101216 + C101215) * C152845) *
                C152807) *
               C152873) *
              C152512 * C366 +
          (((C100609 * C152845 + C123295 * C152747) * C152807 +
            ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
               C152918 -
           (((C101977 + C101978) * C152747 + (C101220 + C101219) * C152845) *
                C152462 +
            ((C101976 + C101975) * C152747 + C101223 * C152845) * C152807) *
               C152903 +
           ((C101224 * C152845 + (C104146 + C104145) * C152747) * C152807 +
            ((C101222 + C101221) * C152845 +
             (C100534 * C1713 - C100535 * C1701 - C100534 * C1714 +
              C100532 * C1737 + C100536 * C3219 - C100537 * C3212 -
              C100536 * C3220 + C152775 * C3224) *
                 C152747) *
                C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152530 * C1429 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C152530 * C1430 +
           ((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
            (C123294 * C152845 + C111141 * C152747) * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C123292 * C152845 + C123294 * C152747) * C152807 +
            (C123295 * C152845 + C100918 * C152747) * C152462) *
               C152530 * C1430 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C152530 * C1429 -
           (((C102757 + C102758) * C152747 + C123296 * C152845) * C152462 +
            ((C102759 + C102760) * C152747 + C109357 * C152845) * C152807) *
               C152530 * C152870) *
              C152897 +
          (((C100609 * C152845 + C123295 * C152747) * C152807 +
            ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
               C152530 * C1429 -
           (((C100915 + C100916) * C152747 + C123845 * C152845) * C152462 +
            (C123296 * C152747 + C100917 * C152845) * C152807) *
               C152530 * C1430 +
           ((C100918 * C152845 + (C102758 + C102757) * C152747) * C152807 +
            ((C100916 + C100915) * C152845 +
             (C100534 * C1531 - C100535 * C1523 - C100534 * C1532 +
              C100532 * C1547 + C100536 * C2275 - C100537 * C2268 -
              C100536 * C2276 + C152775 * C2280) *
                 C152747) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152845 +
            (C109370 + C109371) * C152747) *
               C152807 +
           ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
              C152530 * C1517 -
          ((C109357 * C152747 + C123293 * C152845) * C152462 +
           ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
               C152807) *
              C152530 * C1518 +
          ((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
           (C123294 * C152845 + C111141 * C152747) * C152462) *
              C152530 * C1519 -
          (((C111154 + C111155) * C152747 + (C102759 + C102760) * C152845) *
               C152462 +
           ((C110667 + C110666) * C152747 + C110641 * C152845) * C152807) *
              C152530 * C1520 +
          ((C110670 * C152845 + (C110669 + C110668) * C152747) * C152807 +
           ((C111155 + C111154) * C152845 +
            (C100534 * C7926 - C100535 * C7922 - C100534 * C7927 +
             C100532 * C7934 + C100536 * C8939 - C100537 * C8936 -
             C100536 * C8940 + C152775 * C8942) *
                C152747) *
               C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152918 -
           ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
            ((C110299 + C110300) * C152747 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152845) *
                C152807) *
               C152903 +
           (((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C152845 +
             (C110938 + C110939) * C152747) *
                C152807 +
            ((C101215 + C101216) * C152845 + (C104148 + C104147) * C152747) *
                C152462) *
               C152873) *
              C1429 +
          ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                C152807 +
            (C124491 * C152845 + C111446 * C152747) * C152462) *
               C152903 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C152918 -
           (((C112530 + C112531) * C152747 + (C104147 + C104148) * C152845) *
                C152462 +
            ((C110941 + C110940) * C152747 + (C110939 + C110938) * C152845) *
                C152807) *
               C152873) *
              C1430 +
          (((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
            (C123294 * C152845 + C111141 * C152747) * C152462) *
               C152918 -
           (((C111459 + C111460) * C152747 + (C103077 + C103078) * C152845) *
                C152462 +
            ((C110943 + C110942) * C152747 + C110889 * C152845) * C152807) *
               C152903 +
           ((C110946 * C152845 + (C110945 + C110944) * C152747) * C152807 +
            ((C112531 + C112530) * C152845 +
             (C100534 * C8183 - C100535 * C8177 - C100534 * C8184 +
              C100532 * C8195 + C100536 * C10242 - C100537 * C10239 -
              C100536 * C10243 + C152775 * C10245) *
                 C152747) *
                C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C2427 -
           ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
            ((C110299 + C110300) * C152747 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152845) *
                C152807) *
               C2428 +
           (((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C152845 +
             (C110938 + C110939) * C152747) *
                C152807 +
            ((C101215 + C101216) * C152845 + (C104148 + C104147) * C152747) *
                C152462) *
               C152873) *
              C152512 * C152914 +
          ((((C101214 + C101213) * C152845 + C124491 * C152747) * C152807 +
            ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
               C2428 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C2427 -
           (((C104145 + C104146) * C152747 + (C101218 + C101217) * C152845) *
                C152462 +
            ((C104147 + C104148) * C152747 + (C101216 + C101215) * C152845) *
                C152807) *
               C152873) *
              C152512 * C152897 +
          (((C100609 * C152845 + C123295 * C152747) * C152807 +
            ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
               C2427 -
           (((C101977 + C101978) * C152747 + (C101220 + C101219) * C152845) *
                C152462 +
            (C124492 * C152747 + C101223 * C152845) * C152807) *
               C2428 +
           ((C101224 * C152845 + (C104146 + C104145) * C152747) * C152807 +
            ((C101222 + C101221) * C152845 +
             (C100534 * C1713 - C100535 * C1701 - C100534 * C1714 +
              C100532 * C1737 + C100536 * C3219 - C100537 * C3212 -
              C100536 * C3220 + C152775 * C3224) *
                 C152747) *
                C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C2427 -
           ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
            ((C110299 + C110300) * C152747 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152845) *
                C152807) *
               C2428 +
           (((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C152845 +
             (C110938 + C110939) * C152747) *
                C152807 +
            ((C101215 + C101216) * C152845 + (C104148 + C104147) * C152747) *
                C152462) *
               C152873) *
              C152917 +
          ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                C152807 +
            (C124491 * C152845 + C111446 * C152747) * C152462) *
               C2428 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C2427 -
           (((C112530 + C112531) * C152747 + (C104147 + C104148) * C152845) *
                C152462 +
            ((C110941 + C110940) * C152747 + (C110939 + C110938) * C152845) *
                C152807) *
               C152873) *
              C152901 +
          (((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
            (C123294 * C152845 + C111141 * C152747) * C152462) *
               C2427 -
           (((C111459 + C111460) * C152747 + C125880 * C152845) * C152462 +
            ((C110943 + C110942) * C152747 + C110889 * C152845) * C152807) *
               C2428 +
           ((C110946 * C152845 + (C110945 + C110944) * C152747) * C152807 +
            ((C112531 + C112530) * C152845 +
             (C100534 * C8183 - C100535 * C8177 - C100534 * C8184 +
              C100532 * C8195 + C100536 * C10242 - C100537 * C10239 -
              C100536 * C10243 + C152775 * C10245) *
                 C152747) *
                C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152845 +
            (C109370 + C109371) * C152747) *
               C152807 +
           ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
              C2658 -
          ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
           ((C110299 + C110300) * C152747 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152845) *
               C152807) *
              C2659 +
          (((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C152845 +
            (C110938 + C110939) * C152747) *
               C152807 +
           ((C101215 + C101216) * C152845 + (C104148 + C104147) * C152747) *
               C152462) *
              C2660 -
          (((C100536 * C9522 - C100537 * C9512 - C100536 * C9523 +
             C152775 * C9530 + C100534 * C3215 - C100535 * C3210 -
             C100534 * C3216 + C100532 * C3222) *
                C152747 +
            (C104369 + C104370) * C152845) *
               C152462 +
           ((C112946 + C112947) * C152747 +
            (C100536 * C2679 - C100537 * C2667 - C100536 * C2680 +
             C152775 * C2691 + C100534 * C2677 - C100535 * C2666 -
             C100534 * C2678 + C100532 * C2690) *
                C152845) *
               C152807) *
              C2661 +
          (((C100534 * C2679 - C100535 * C2667 - C100534 * C2680 +
             C100532 * C2691 + C100536 * C18111 - C100537 * C18106 -
             C100536 * C18112 + C152775 * C18118) *
                C152845 +
            (C100534 * C9518 - C100535 * C9510 - C100534 * C9519 +
             C100532 * C9528 + C100536 * C18851 - C100537 * C18849 -
             C100536 * C18852 + C152775 * C18855) *
                C152747) *
               C152807 +
           ((C100534 * C2681 - C100535 * C2668 - C100534 * C2682 +
             C100532 * C2692 + C100536 * C18109 - C100537 * C18105 -
             C100536 * C18110 + C152775 * C18117) *
                C152845 +
            (C100534 * C9522 - C100535 * C9512 - C100534 * C9523 +
             C100532 * C9530 + C100536 * C18853 - C100537 * C18850 -
             C100536 * C18854 + C152775 * C18856) *
                C152747) *
               C152462) *
              C2662) *
         C152512 * C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[263] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
               C100532 * C160 + C100536 * C647 - C100537 * C632 -
               C100536 * C648 + C152775 * C668) *
                  C152845 +
              (C109370 + C109371) * C152747) *
                 C152807 +
             ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
                C152829 -
            ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
             ((C110299 + C110300) * C152747 +
              (C100536 * C649 - C100537 * C633 - C100536 * C650 +
               C152775 * C669 + C100534 * C647 - C100535 * C632 -
               C100534 * C648 + C100532 * C668) *
                  C152845) *
                 C152807) *
                C152617) *
               C1429 +
           ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                 C152807 +
             (C124491 * C152845 + C111446 * C152747) * C152462) *
                C152617 -
            ((C109357 * C152747 + C123293 * C152845) * C152462 +
             ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                 C152807) *
                C152829) *
               C1430 +
           (((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
             (C123294 * C152845 + C111141 * C152747) * C152462) *
                C152829 -
            (((C111459 + C111460) * C152747 + C125880 * C152845) * C152462 +
             ((C110943 + C110942) * C152747 + C110889 * C152845) * C152807) *
                C152617) *
               C152870) *
              C152814 +
          (((((C101214 + C101213) * C152845 + C124491 * C152747) * C152807 +
             ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
                C152617 -
            ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
             (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
                C152829) *
               C1429 +
           (((C123292 * C152845 + C123294 * C152747) * C152807 +
             (C123295 * C152845 + C100918 * C152747) * C152462) *
                C152829 -
            (((C103075 + C103076) * C152747 + C124492 * C152845) * C152462 +
             (C125880 * C152747 + C124490 * C152845) * C152807) *
                C152617) *
               C1430 +
           (((C111446 * C152845 + (C111460 + C111459) * C152747) * C152807 +
             ((C103076 + C103075) * C152845 +
              (C100534 * C2273 - C100535 * C2267 - C100534 * C2274 +
               C100532 * C2279 + C100536 * C9823 - C100537 * C9822 -
               C100536 * C9824 + C152775 * C9825) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C102757 + C102758) * C152747 + C123296 * C152845) * C152462 +
             (C125493 * C152747 + C109357 * C152845) * C152807) *
                C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152829 -
           (((C101974 + C101973) * C152747 + (C101213 + C101214) * C152845) *
                C152462 +
            ((C110299 + C110300) * C152747 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152845) *
                C152807) *
               C152617) *
              C152512 * C873 +
          ((((C101214 + C101213) * C152845 + (C101973 + C101974) * C152747) *
                C152807 +
            ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
               C152617 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C152829) *
              C152512 * C874 +
          (((C100609 * C152845 + C123295 * C152747) * C152807 +
            ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
               C152829 -
           (((C101977 + C101978) * C152747 + (C101220 + C101219) * C152845) *
                C152462 +
            ((C101976 + C101975) * C152747 + C101223 * C152845) * C152807) *
               C152617) *
              C152512 * C875 +
          (((C101631 * C152845 + (C101978 + C101977) * C152747) * C152807 +
            ((C101646 + C101645) * C152845 +
             (C100534 * C1241 - C100535 * C1231 - C100534 * C1242 +
              C100532 * C1249 + C100536 * C2890 - C100537 * C2889 -
              C100536 * C2891 + C152775 * C2892) *
                 C152747) *
                C152462) *
               C152617 -
           (((C101435 + C101436) * C152747 + (C100606 + C100605) * C152845) *
                C152462 +
            (C123845 * C152747 + C100610 * C152845) * C152807) *
               C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C3047 -
           ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
            ((C110299 + C110300) * C152747 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152845) *
                C152807) *
               C3048 +
           (((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C152845 +
             (C110938 + C110939) * C152747) *
                C152807 +
            ((C101215 + C101216) * C152845 + C127267 * C152747) * C152462) *
               C3049 -
           (((C127539 + C127540) * C152747 + (C104369 + C104370) * C152845) *
                C152462 +
            ((C112946 + C112947) * C152747 +
             (C100536 * C2679 - C100537 * C2667 - C100536 * C2680 +
              C152775 * C2691 + C100534 * C2677 - C100535 * C2666 -
              C100534 * C2678 + C100532 * C2690) *
                 C152845) *
                C152807) *
               C152886) *
              C152512 * C152814 +
          ((((C101214 + C101213) * C152845 + C124491 * C152747) * C152807 +
            ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
               C3048 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C3047 -
           (((C104145 + C104146) * C152747 + (C101218 + C101217) * C152845) *
                C152462 +
            (C127268 * C152747 + (C101216 + C101215) * C152845) * C152807) *
               C3049 +
           (((C104370 + C104369) * C152845 + (C127540 + C127539) * C152747) *
                C152807 +
            ((C104368 + C104367) * C152845 +
             (C100534 * C3217 - C100535 * C3211 - C100534 * C3218 +
              C100532 * C3223 + C100536 * C18412 - C100537 * C18411 -
              C100536 * C18413 + C152775 * C18414) *
                 C152747) *
                C152462) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[264] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152530 * C152917 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C152530 * C152901 +
           ((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
            (C123294 * C152845 + C111141 * C152747) * C152462) *
               C152530 * C152870) *
              C365 +
          (((C123292 * C152845 + C123294 * C152747) * C152807 +
            (C123295 * C152845 + C100918 * C152747) * C152462) *
               C152530 * C152901 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C152530 * C152917 -
           (((C102757 + C102758) * C152747 + C123296 * C152845) * C152462 +
            ((C102759 + C102760) * C152747 + C109357 * C152845) * C152807) *
               C152530 * C152870) *
              C366 +
          (((C100609 * C152845 + C123295 * C152747) * C152807 +
            ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
               C152530 * C152917 -
           (((C100915 + C100916) * C152747 + (C100914 + C100913) * C152845) *
                C152462 +
            (C123296 * C152747 + C100917 * C152845) * C152807) *
               C152530 * C152901 +
           ((C100918 * C152845 + (C102758 + C102757) * C152747) * C152807 +
            ((C100916 + C100915) * C152845 +
             (C100534 * C1531 - C100535 * C1523 - C100534 * C1532 +
              C100532 * C1547 + C100536 * C2275 - C100537 * C2268 -
              C100536 * C2276 + C152775 * C2280) *
                 C152747) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152845 +
            (C109370 + C109371) * C152747) *
               C152807 +
           ((C100599 + C100600) * C152845 + (C100908 + C100907) * C152747) *
               C152462) *
              C152530 * C152512 * C129 -
          ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
           ((C100907 + C100908) * C152747 + (C100600 + C100599) * C152845) *
               C152807) *
              C152530 * C152512 * C130 +
          ((C100609 * C152845 + (C100906 + C100905) * C152747) * C152807 +
           ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
              C152530 * C152512 * C131 -
          (((C101435 + C101436) * C152747 + (C100606 + C100605) * C152845) *
               C152462 +
           ((C100914 + C100913) * C152747 + C100610 * C152845) * C152807) *
              C152530 * C152512 * C132 +
          ((C100611 * C152845 + (C101436 + C101435) * C152747) * C152807 +
           ((C100608 + C100607) * C152845 +
            (C100534 * C400 - C100535 * C378 - C100534 * C401 + C100532 * C414 +
             C100536 * C1243 - C100537 * C1232 - C100536 * C1244 +
             C152775 * C1250) *
                C152747) *
               C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152530 * C1429 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C152530 * C1430 +
           ((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
            (C123294 * C152845 + C111141 * C152747) * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C123292 * C152845 + C123294 * C152747) * C152807 +
            (C123295 * C152845 + C100918 * C152747) * C152462) *
               C152530 * C1430 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C152530 * C1429 -
           (((C102757 + C102758) * C152747 + C123296 * C152845) * C152462 +
            ((C102759 + C102760) * C152747 + C109357 * C152845) * C152807) *
               C152530 * C152870) *
              C152897 +
          (((C100609 * C152845 + C123295 * C152747) * C152807 +
            ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
               C152530 * C1429 -
           (((C100915 + C100916) * C152747 + C123845 * C152845) * C152462 +
            (C123296 * C152747 + C100917 * C152845) * C152807) *
               C152530 * C1430 +
           ((C100918 * C152845 + (C102758 + C102757) * C152747) * C152807 +
            ((C100916 + C100915) * C152845 +
             (C100534 * C1531 - C100535 * C1523 - C100534 * C1532 +
              C100532 * C1547 + C100536 * C2275 - C100537 * C2268 -
              C100536 * C2276 + C152775 * C2280) *
                 C152747) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152845 +
            (C109370 + C109371) * C152747) *
               C152807 +
           ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
              C152530 * C1517 -
          ((C109357 * C152747 + C123293 * C152845) * C152462 +
           ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
               C152807) *
              C152530 * C1518 +
          ((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
           (C123294 * C152845 + C111141 * C152747) * C152462) *
              C152530 * C1519 -
          (((C111154 + C111155) * C152747 + (C102759 + C102760) * C152845) *
               C152462 +
           ((C110667 + C110666) * C152747 + C110641 * C152845) * C152807) *
              C152530 * C1520 +
          ((C110670 * C152845 + (C110669 + C110668) * C152747) * C152807 +
           ((C111155 + C111154) * C152845 +
            (C100534 * C7926 - C100535 * C7922 - C100534 * C7927 +
             C100532 * C7934 + C100536 * C8939 - C100537 * C8936 -
             C100536 * C8940 + C152775 * C8942) *
                C152747) *
               C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C2427 -
           ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
            ((C110299 + C110300) * C152747 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152845) *
                C152807) *
               C2428 +
           (((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C152845 +
             (C110938 + C110939) * C152747) *
                C152807 +
            ((C101215 + C101216) * C152845 + (C104148 + C104147) * C152747) *
                C152462) *
               C152873) *
              C152512 * C152914 +
          ((((C101214 + C101213) * C152845 + C124491 * C152747) * C152807 +
            ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
               C2428 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C2427 -
           (((C104145 + C104146) * C152747 + (C101218 + C101217) * C152845) *
                C152462 +
            ((C104147 + C104148) * C152747 + (C101216 + C101215) * C152845) *
                C152807) *
               C152873) *
              C152512 * C152897 +
          (((C100609 * C152845 + C123295 * C152747) * C152807 +
            ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
               C2427 -
           (((C101977 + C101978) * C152747 + (C101220 + C101219) * C152845) *
                C152462 +
            (C124492 * C152747 + C101223 * C152845) * C152807) *
               C2428 +
           ((C101224 * C152845 + (C104146 + C104145) * C152747) * C152807 +
            ((C101222 + C101221) * C152845 +
             (C100534 * C1713 - C100535 * C1701 - C100534 * C1714 +
              C100532 * C1737 + C100536 * C3219 - C100537 * C3212 -
              C100536 * C3220 + C152775 * C3224) *
                 C152747) *
                C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C2427 -
           ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
            ((C110299 + C110300) * C152747 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152845) *
                C152807) *
               C2428 +
           (((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C152845 +
             (C110938 + C110939) * C152747) *
                C152807 +
            ((C101215 + C101216) * C152845 + (C104148 + C104147) * C152747) *
                C152462) *
               C152873) *
              C152917 +
          ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                C152807 +
            (C124491 * C152845 + C111446 * C152747) * C152462) *
               C2428 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C2427 -
           (((C112530 + C112531) * C152747 + (C104147 + C104148) * C152845) *
                C152462 +
            ((C110941 + C110940) * C152747 + (C110939 + C110938) * C152845) *
                C152807) *
               C152873) *
              C152901 +
          (((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
            (C123294 * C152845 + C111141 * C152747) * C152462) *
               C2427 -
           (((C111459 + C111460) * C152747 + C125880 * C152845) * C152462 +
            ((C110943 + C110942) * C152747 + C110889 * C152845) * C152807) *
               C2428 +
           ((C110946 * C152845 + (C110945 + C110944) * C152747) * C152807 +
            ((C112531 + C112530) * C152845 +
             (C100534 * C8183 - C100535 * C8177 - C100534 * C8184 +
              C100532 * C8195 + C100536 * C10242 - C100537 * C10239 -
              C100536 * C10243 + C152775 * C10245) *
                 C152747) *
                C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[265] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
               C100532 * C160 + C100536 * C647 - C100537 * C632 -
               C100536 * C648 + C152775 * C668) *
                  C152845 +
              (C109370 + C109371) * C152747) *
                 C152807 +
             ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
                C4361 -
            ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
             ((C110299 + C110300) * C152747 +
              (C100536 * C649 - C100537 * C633 - C100536 * C650 +
               C152775 * C669 + C100534 * C647 - C100535 * C632 -
               C100534 * C648 + C100532 * C668) *
                  C152845) *
                 C152807) *
                C152617) *
               C152828 +
           ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                 C152807 +
             (C124491 * C152845 + C111446 * C152747) * C152462) *
                C152617 -
            ((C109357 * C152747 + C123293 * C152845) * C152462 +
             ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                 C152807) *
                C4361) *
               C152575) *
              C152489 +
          (((((C101214 + C101213) * C152845 + C124491 * C152747) * C152807 +
             ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
                C152617 -
            ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
             (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
                C4361) *
               C152828 +
           (((C123292 * C152845 + C123294 * C152747) * C152807 +
             (C123295 * C152845 + C100918 * C152747) * C152462) *
                C4361 -
            (((C103075 + C103076) * C152747 + C124492 * C152845) * C152462 +
             (C125880 * C152747 + C124490 * C152845) * C152807) *
                C152617) *
               C152575) *
              C152498 +
          ((((C100609 * C152845 + C123295 * C152747) * C152807 +
             ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
                C4361 -
            (((C101977 + C101978) * C152747 + (C101220 + C101219) * C152845) *
                 C152462 +
             (C124492 * C152747 + C101223 * C152845) * C152807) *
                C152617) *
               C152828 +
           (((C101979 * C152845 + (C103076 + C103075) * C152747) * C152807 +
             ((C101978 + C101977) * C152845 +
              (C100534 * C1721 - C100535 * C1705 - C100534 * C1722 +
               C100532 * C1741 + C100536 * C1735 - C100537 * C1712 -
               C100536 * C1736 + C152775 * C1748) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C100915 + C100916) * C152747 + C123845 * C152845) * C152462 +
             (C123296 * C152747 + C100917 * C152845) * C152807) *
                C4361) *
               C152575) *
              C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[266] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
               C100532 * C160 + C100536 * C647 - C100537 * C632 -
               C100536 * C648 + C152775 * C668) *
                  C152845 +
              (C109370 + C109371) * C152747) *
                 C152807 +
             ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
                C152613 -
            ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
             ((C110299 + C110300) * C152747 +
              (C100536 * C649 - C100537 * C633 - C100536 * C650 +
               C152775 * C669 + C100534 * C647 - C100535 * C632 -
               C100534 * C648 + C100532 * C668) *
                  C152845) *
                 C152807) *
                C152620 +
            (((C100534 * C649 - C100535 * C633 - C100534 * C650 +
               C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
               C100536 * C2678 + C152775 * C2690) *
                  C152845 +
              (C110938 + C110939) * C152747) *
                 C152807 +
             ((C101215 + C101216) * C152845 + C127267 * C152747) * C152462) *
                C5033) *
               C152828 +
           ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                 C152807 +
             (C124491 * C152845 + C111446 * C152747) * C152462) *
                C152620 -
            ((C109357 * C152747 + C123293 * C152845) * C152462 +
             ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                 C152807) *
                C152613 -
            (((C112530 + C112531) * C152747 + C127268 * C152845) * C152462 +
             ((C110941 + C110940) * C152747 + (C110939 + C110938) * C152845) *
                 C152807) *
                C5033) *
               C152575) *
              C3495 +
          (((((C101214 + C101213) * C152845 + C124491 * C152747) * C152807 +
             ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
                C152620 -
            ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
             (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
                C152613 -
            (((C104145 + C104146) * C152747 + (C101218 + C101217) * C152845) *
                 C152462 +
             (C127268 * C152747 + (C101216 + C101215) * C152845) * C152807) *
                C5033) *
               C152828 +
           (((C123292 * C152845 + C123294 * C152747) * C152807 +
             (C123295 * C152845 + C100918 * C152747) * C152462) *
                C152613 -
            (((C103075 + C103076) * C152747 + C124492 * C152845) * C152462 +
             (C125880 * C152747 + C124490 * C152845) * C152807) *
                C152620 +
            ((C127267 * C152845 + (C112531 + C112530) * C152747) * C152807 +
             ((C104146 + C104145) * C152845 +
              (C100534 * C1733 - C100535 * C1711 - C100534 * C1734 +
               C100532 * C1747 + C100536 * C10024 - C100537 * C10023 -
               C100536 * C10025 + C152775 * C10026) *
                  C152747) *
                 C152462) *
                C5033) *
               C152575) *
              C152495)) /
        (p * q * std::sqrt(p + q));
    d2ee[267] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
               C100532 * C160 + C100536 * C647 - C100537 * C632 -
               C100536 * C648 + C152775 * C668) *
                  C152845 +
              (C109370 + C109371) * C152747) *
                 C152807 +
             ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
                C4361 -
            ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
             ((C110299 + C110300) * C152747 +
              (C100536 * C649 - C100537 * C633 - C100536 * C650 +
               C152775 * C669 + C100534 * C647 - C100535 * C632 -
               C100534 * C648 + C100532 * C668) *
                  C152845) *
                 C152807) *
                C152617) *
               C152917 +
           ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                 C152807 +
             (C124491 * C152845 + C111446 * C152747) * C152462) *
                C152617 -
            ((C109357 * C152747 + C123293 * C152845) * C152462 +
             ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                 C152807) *
                C4361) *
               C152901 +
           (((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
             (C123294 * C152845 + C111141 * C152747) * C152462) *
                C4361 -
            (((C111459 + C111460) * C152747 + C125880 * C152845) * C152462 +
             ((C110943 + C110942) * C152747 + C110889 * C152845) * C152807) *
                C152617) *
               C152870) *
              C3495 +
          (((((C101214 + C101213) * C152845 + C124491 * C152747) * C152807 +
             ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
                C152617 -
            ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
             (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
                C4361) *
               C152917 +
           (((C123292 * C152845 + C123294 * C152747) * C152807 +
             (C123295 * C152845 + C100918 * C152747) * C152462) *
                C4361 -
            (((C103075 + C103076) * C152747 + C124492 * C152845) * C152462 +
             (C125880 * C152747 + C124490 * C152845) * C152807) *
                C152617) *
               C152901 +
           (((C111446 * C152845 + (C111460 + C111459) * C152747) * C152807 +
             ((C103076 + C103075) * C152845 +
              (C100534 * C2273 - C100535 * C2267 - C100534 * C2274 +
               C100532 * C2279 + C100536 * C9823 - C100537 * C9822 -
               C100536 * C9824 + C152775 * C9825) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C102757 + C102758) * C152747 + C123296 * C152845) * C152462 +
             (C125493 * C152747 + C109357 * C152845) * C152807) *
                C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C4361 -
           ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
            ((C110299 + C110300) * C152747 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152845) *
                C152807) *
               C152617) *
              C152512 * C152923 +
          ((((C101214 + C101213) * C152845 + C124491 * C152747) * C152807 +
            ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
               C152617 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C4361) *
              C152512 * C152916 +
          (((C100609 * C152845 + C123295 * C152747) * C152807 +
            ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
               C4361 -
           (((C101977 + C101978) * C152747 + (C101220 + C101219) * C152845) *
                C152462 +
            (C124492 * C152747 + C101223 * C152845) * C152807) *
               C152617) *
              C152512 * C152899 +
          (((C101631 * C152845 + (C101978 + C101977) * C152747) * C152807 +
            ((C101646 + C101645) * C152845 +
             (C100534 * C1241 - C100535 * C1231 - C100534 * C1242 +
              C100532 * C1249 + C100536 * C2890 - C100537 * C2889 -
              C100536 * C2891 + C152775 * C2892) *
                 C152747) *
                C152462) *
               C152617 -
           (((C101435 + C101436) * C152747 + (C100606 + C100605) * C152845) *
                C152462 +
            (C123845 * C152747 + C100610 * C152845) * C152807) *
               C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152925 -
           ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
            ((C110299 + C110300) * C152747 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152845) *
                C152807) *
               C152922 +
           (((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C152845 +
             (C110938 + C110939) * C152747) *
                C152807 +
            ((C101215 + C101216) * C152845 + C127267 * C152747) * C152462) *
               C152909 -
           (((C127539 + C127540) * C152747 + (C104369 + C104370) * C152845) *
                C152462 +
            ((C112946 + C112947) * C152747 +
             (C100536 * C2679 - C100537 * C2667 - C100536 * C2680 +
              C152775 * C2691 + C100534 * C2677 - C100535 * C2666 -
              C100534 * C2678 + C100532 * C2690) *
                 C152845) *
                C152807) *
               C152886) *
              C152512 * C3495 +
          ((((C101214 + C101213) * C152845 + C124491 * C152747) * C152807 +
            ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
               C152922 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C152925 -
           (((C104145 + C104146) * C152747 + (C101218 + C101217) * C152845) *
                C152462 +
            (C127268 * C152747 + (C101216 + C101215) * C152845) * C152807) *
               C152909 +
           (((C104370 + C104369) * C152845 + (C127540 + C127539) * C152747) *
                C152807 +
            ((C104368 + C104367) * C152845 +
             (C100534 * C3217 - C100535 * C3211 - C100534 * C3218 +
              C100532 * C3223 + C100536 * C18412 - C100537 * C18411 -
              C100536 * C18413 + C152775 * C18414) *
                 C152747) *
                C152462) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[268] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152613 -
           ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
            ((C110299 + C110300) * C152747 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152845) *
                C152807) *
               C152620 +
           (((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C152845 +
             (C110938 + C110939) * C152747) *
                C152807 +
            ((C101215 + C101216) * C152845 + C127267 * C152747) * C152462) *
               C5033) *
              C152512 * C152489 +
          ((((C101214 + C101213) * C152845 + C124491 * C152747) * C152807 +
            ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
               C152620 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C152613 -
           (((C104145 + C104146) * C152747 + (C101218 + C101217) * C152845) *
                C152462 +
            (C127268 * C152747 + (C101216 + C101215) * C152845) * C152807) *
               C5033) *
              C152512 * C152498 +
          (((C100609 * C152845 + C123295 * C152747) * C152807 +
            ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
               C152613 -
           (((C101977 + C101978) * C152747 + (C101220 + C101219) * C152845) *
                C152462 +
            (C124492 * C152747 + C101223 * C152845) * C152807) *
               C152620 +
           ((C101224 * C152845 + (C104146 + C104145) * C152747) * C152807 +
            ((C101222 + C101221) * C152845 +
             (C100534 * C1713 - C100535 * C1701 - C100534 * C1714 +
              C100532 * C1737 + C100536 * C3219 - C100537 * C3212 -
              C100536 * C3220 + C152775 * C3224) *
                 C152747) *
                C152462) *
               C5033) *
              C152512 * C3842)) /
        (p * q * std::sqrt(p + q));
    d2ee[269] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C4361 -
           ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
            ((C110299 + C110300) * C152747 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152845) *
                C152807) *
               C152617) *
              C152512 * C152923 +
          ((((C101214 + C101213) * C152845 + C124491 * C152747) * C152807 +
            ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
               C152617 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C4361) *
              C152512 * C152916 +
          (((C100609 * C152845 + C123295 * C152747) * C152807 +
            ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
               C4361 -
           (((C101977 + C101978) * C152747 + (C101220 + C101219) * C152845) *
                C152462 +
            (C124492 * C152747 + C101223 * C152845) * C152807) *
               C152617) *
              C152512 * C152899 +
          (((C101631 * C152845 + (C101978 + C101977) * C152747) * C152807 +
            ((C101646 + C101645) * C152845 +
             (C100534 * C1241 - C100535 * C1231 - C100534 * C1242 +
              C100532 * C1249 + C100536 * C2890 - C100537 * C2889 -
              C100536 * C2891 + C152775 * C2892) *
                 C152747) *
                C152462) *
               C152617 -
           (((C101435 + C101436) * C152747 + (C100606 + C100605) * C152845) *
                C152462 +
            (C123845 * C152747 + C100610 * C152845) * C152807) *
               C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
               C100532 * C160 + C100536 * C647 - C100537 * C632 -
               C100536 * C648 + C152775 * C668) *
                  C152845 +
              (C109370 + C109371) * C152747) *
                 C152807 +
             ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
                C4361 -
            ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
             ((C110299 + C110300) * C152747 +
              (C100536 * C649 - C100537 * C633 - C100536 * C650 +
               C152775 * C669 + C100534 * C647 - C100535 * C632 -
               C100534 * C648 + C100532 * C668) *
                  C152845) *
                 C152807) *
                C152617) *
               C152917 +
           ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                 C152807 +
             (C124491 * C152845 + C111446 * C152747) * C152462) *
                C152617 -
            ((C109357 * C152747 + C123293 * C152845) * C152462 +
             ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                 C152807) *
                C4361) *
               C152901 +
           (((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
             (C123294 * C152845 + C111141 * C152747) * C152462) *
                C4361 -
            (((C111459 + C111460) * C152747 + C125880 * C152845) * C152462 +
             ((C110943 + C110942) * C152747 + C110889 * C152845) * C152807) *
                C152617) *
               C152870) *
              C3495 +
          (((((C101214 + C101213) * C152845 + C124491 * C152747) * C152807 +
             ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
                C152617 -
            ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
             (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
                C4361) *
               C152917 +
           (((C123292 * C152845 + C123294 * C152747) * C152807 +
             (C123295 * C152845 + C100918 * C152747) * C152462) *
                C4361 -
            (((C103075 + C103076) * C152747 + C124492 * C152845) * C152462 +
             (C125880 * C152747 + C124490 * C152845) * C152807) *
                C152617) *
               C152901 +
           (((C111446 * C152845 + (C111460 + C111459) * C152747) * C152807 +
             ((C103076 + C103075) * C152845 +
              (C100534 * C2273 - C100535 * C2267 - C100534 * C2274 +
               C100532 * C2279 + C100536 * C9823 - C100537 * C9822 -
               C100536 * C9824 + C152775 * C9825) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C102757 + C102758) * C152747 + C123296 * C152845) * C152462 +
             (C125493 * C152747 + C109357 * C152845) * C152807) *
                C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[270] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152530 * C152828 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C152530 * C152575) *
              C873 +
          (((C123292 * C152845 + C123294 * C152747) * C152807 +
            (C123295 * C152845 + C100918 * C152747) * C152462) *
               C152530 * C152575 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C152530 * C152828) *
              C874 +
          (((C100609 * C152845 + C123295 * C152747) * C152807 +
            ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
               C152530 * C152828 -
           (((C100915 + C100916) * C152747 + C123845 * C152845) * C152462 +
            (C123296 * C152747 + C100917 * C152845) * C152807) *
               C152530 * C152575) *
              C875 +
          (((C101421 * C152845 + (C100916 + C100915) * C152747) * C152807 +
            ((C101436 + C101435) * C152845 +
             (C100534 * C398 - C100535 * C377 - C100534 * C399 +
              C100532 * C413 + C100536 * C2108 - C100537 * C2107 -
              C100536 * C2109 + C152775 * C2110) *
                 C152747) *
                C152462) *
               C152530 * C152575 -
           (((C101435 + C101436) * C152747 + (C100606 + C100605) * C152845) *
                C152462 +
            (C123845 * C152747 + C100610 * C152845) * C152807) *
               C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152530 * C1879 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C152530 * C1880 +
           ((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
            (C123294 * C152845 + C111141 * C152747) * C152462) *
               C152530 * C1881 -
           (((C111154 + C111155) * C152747 + C125493 * C152845) * C152462 +
            ((C110667 + C110666) * C152747 + C110641 * C152845) * C152807) *
               C152530 * C152880) *
              C152814 +
          (((C123292 * C152845 + C123294 * C152747) * C152807 +
            (C123295 * C152845 + C100918 * C152747) * C152462) *
               C152530 * C1880 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C152530 * C1879 -
           (((C102757 + C102758) * C152747 + C123296 * C152845) * C152462 +
            (C125493 * C152747 + C109357 * C152845) * C152807) *
               C152530 * C1881 +
           ((C111141 * C152845 + (C111155 + C111154) * C152747) * C152807 +
            ((C102758 + C102757) * C152845 +
             (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
              C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
              C100536 * C8729 + C152775 * C8730) *
                 C152747) *
                C152462) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[271] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
               C100532 * C160 + C100536 * C647 - C100537 * C632 -
               C100536 * C648 + C152775 * C668) *
                  C152845 +
              (C109370 + C109371) * C152747) *
                 C152807 +
             ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
                C152829 -
            ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
             ((C110299 + C110300) * C152747 +
              (C100536 * C649 - C100537 * C633 - C100536 * C650 +
               C152775 * C669 + C100534 * C647 - C100535 * C632 -
               C100534 * C648 + C100532 * C668) *
                  C152845) *
                 C152807) *
                C152617) *
               C152828 +
           ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                 C152807 +
             (C124491 * C152845 + C111446 * C152747) * C152462) *
                C152617 -
            ((C109357 * C152747 + C123293 * C152845) * C152462 +
             ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                 C152807) *
                C152829) *
               C152575) *
              C365 +
          (((((C101214 + C101213) * C152845 + C124491 * C152747) * C152807 +
             ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
                C152617 -
            ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
             (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
                C152829) *
               C152828 +
           (((C123292 * C152845 + C123294 * C152747) * C152807 +
             (C123295 * C152845 + C100918 * C152747) * C152462) *
                C152829 -
            (((C103075 + C103076) * C152747 + C124492 * C152845) * C152462 +
             ((C103077 + C103078) * C152747 + C124490 * C152845) * C152807) *
                C152617) *
               C152575) *
              C366 +
          ((((C100609 * C152845 + C123295 * C152747) * C152807 +
             ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
                C152829 -
            (((C101977 + C101978) * C152747 + (C101220 + C101219) * C152845) *
                 C152462 +
             (C124492 * C152747 + C101223 * C152845) * C152807) *
                C152617) *
               C152828 +
           (((C101979 * C152845 + (C103076 + C103075) * C152747) * C152807 +
             ((C101978 + C101977) * C152845 +
              (C100534 * C1721 - C100535 * C1705 - C100534 * C1722 +
               C100532 * C1741 + C100536 * C1735 - C100537 * C1712 -
               C100536 * C1736 + C152775 * C1748) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C100915 + C100916) * C152747 + C123845 * C152845) * C152462 +
             (C123296 * C152747 + C100917 * C152845) * C152807) *
                C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152829 -
           ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
            ((C110299 + C110300) * C152747 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152845) *
                C152807) *
               C152617) *
              C1879 +
          ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                C152807 +
            (C124491 * C152845 + C111446 * C152747) * C152462) *
               C152617 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C152829) *
              C1880 +
          (((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
            (C123294 * C152845 + C111141 * C152747) * C152462) *
               C152829 -
           (((C111459 + C111460) * C152747 + C125880 * C152845) * C152462 +
            ((C110943 + C110942) * C152747 + C110889 * C152845) * C152807) *
               C152617) *
              C1881 +
          (((C111655 * C152845 + (C111669 + C111668) * C152747) * C152807 +
            ((C111460 + C111459) * C152845 +
             (C100534 * C8187 - C100535 * C8179 - C100534 * C8188 +
              C100532 * C8197 + C100536 * C8193 - C100537 * C8182 -
              C100536 * C8194 + C152775 * C8200) *
                 C152747) *
                C152462) *
               C152617 -
           (((C111154 + C111155) * C152747 + C125493 * C152845) * C152462 +
            ((C110667 + C110666) * C152747 + C110641 * C152845) * C152807) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[272] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152530 * C152917 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C152530 * C152901 +
           ((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
            (C123294 * C152845 + C111141 * C152747) * C152462) *
               C152530 * C152870) *
              C365 +
          (((C123292 * C152845 + C123294 * C152747) * C152807 +
            (C123295 * C152845 + C100918 * C152747) * C152462) *
               C152530 * C152901 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C152530 * C152917 -
           (((C102757 + C102758) * C152747 + C123296 * C152845) * C152462 +
            ((C102759 + C102760) * C152747 + C109357 * C152845) * C152807) *
               C152530 * C152870) *
              C366 +
          (((C100609 * C152845 + C123295 * C152747) * C152807 +
            ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
               C152530 * C152917 -
           (((C100915 + C100916) * C152747 + (C100914 + C100913) * C152845) *
                C152462 +
            (C123296 * C152747 + C100917 * C152845) * C152807) *
               C152530 * C152901 +
           ((C100918 * C152845 + (C102758 + C102757) * C152747) * C152807 +
            ((C100916 + C100915) * C152845 +
             (C100534 * C1531 - C100535 * C1523 - C100534 * C1532 +
              C100532 * C1547 + C100536 * C2275 - C100537 * C2268 -
              C100536 * C2276 + C152775 * C2280) *
                 C152747) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152845 +
            (C109370 + C109371) * C152747) *
               C152807 +
           ((C100599 + C100600) * C152845 + (C100908 + C100907) * C152747) *
               C152462) *
              C152530 * C152512 * C129 -
          ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
           ((C100907 + C100908) * C152747 + (C100600 + C100599) * C152845) *
               C152807) *
              C152530 * C152512 * C130 +
          ((C100609 * C152845 + (C100906 + C100905) * C152747) * C152807 +
           ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
              C152530 * C152512 * C131 -
          (((C101435 + C101436) * C152747 + (C100606 + C100605) * C152845) *
               C152462 +
           ((C100914 + C100913) * C152747 + C100610 * C152845) * C152807) *
              C152530 * C152512 * C132 +
          ((C100611 * C152845 + (C101436 + C101435) * C152747) * C152807 +
           ((C100608 + C100607) * C152845 +
            (C100534 * C400 - C100535 * C378 - C100534 * C401 + C100532 * C414 +
             C100536 * C1243 - C100537 * C1232 - C100536 * C1244 +
             C152775 * C1250) *
                C152747) *
               C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152918 -
           (((C101974 + C101973) * C152747 + (C101213 + C101214) * C152845) *
                C152462 +
            ((C110299 + C110300) * C152747 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152845) *
                C152807) *
               C152903 +
           (((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C152845 +
             (C110938 + C110939) * C152747) *
                C152807 +
            ((C101215 + C101216) * C152845 + (C104148 + C104147) * C152747) *
                C152462) *
               C152873) *
              C152512 * C365 +
          ((((C101214 + C101213) * C152845 + (C101973 + C101974) * C152747) *
                C152807 +
            ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
               C152903 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C152918 -
           (((C104145 + C104146) * C152747 + (C101218 + C101217) * C152845) *
                C152462 +
            ((C104147 + C104148) * C152747 + (C101216 + C101215) * C152845) *
                C152807) *
               C152873) *
              C152512 * C366 +
          (((C100609 * C152845 + C123295 * C152747) * C152807 +
            ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
               C152918 -
           (((C101977 + C101978) * C152747 + (C101220 + C101219) * C152845) *
                C152462 +
            ((C101976 + C101975) * C152747 + C101223 * C152845) * C152807) *
               C152903 +
           ((C101224 * C152845 + (C104146 + C104145) * C152747) * C152807 +
            ((C101222 + C101221) * C152845 +
             (C100534 * C1713 - C100535 * C1701 - C100534 * C1714 +
              C100532 * C1737 + C100536 * C3219 - C100537 * C3212 -
              C100536 * C3220 + C152775 * C3224) *
                 C152747) *
                C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152530 * C1429 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C152530 * C1430 +
           ((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
            (C123294 * C152845 + C111141 * C152747) * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C123292 * C152845 + C123294 * C152747) * C152807 +
            (C123295 * C152845 + C100918 * C152747) * C152462) *
               C152530 * C1430 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C152530 * C1429 -
           (((C102757 + C102758) * C152747 + C123296 * C152845) * C152462 +
            ((C102759 + C102760) * C152747 + C109357 * C152845) * C152807) *
               C152530 * C152870) *
              C152897 +
          (((C100609 * C152845 + C123295 * C152747) * C152807 +
            ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
               C152530 * C1429 -
           (((C100915 + C100916) * C152747 + C123845 * C152845) * C152462 +
            (C123296 * C152747 + C100917 * C152845) * C152807) *
               C152530 * C1430 +
           ((C100918 * C152845 + (C102758 + C102757) * C152747) * C152807 +
            ((C100916 + C100915) * C152845 +
             (C100534 * C1531 - C100535 * C1523 - C100534 * C1532 +
              C100532 * C1547 + C100536 * C2275 - C100537 * C2268 -
              C100536 * C2276 + C152775 * C2280) *
                 C152747) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152845 +
            (C109370 + C109371) * C152747) *
               C152807 +
           ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
              C152530 * C1517 -
          ((C109357 * C152747 + C123293 * C152845) * C152462 +
           ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
               C152807) *
              C152530 * C1518 +
          ((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
           (C123294 * C152845 + C111141 * C152747) * C152462) *
              C152530 * C1519 -
          (((C111154 + C111155) * C152747 + (C102759 + C102760) * C152845) *
               C152462 +
           ((C110667 + C110666) * C152747 + C110641 * C152845) * C152807) *
              C152530 * C1520 +
          ((C110670 * C152845 + (C110669 + C110668) * C152747) * C152807 +
           ((C111155 + C111154) * C152845 +
            (C100534 * C7926 - C100535 * C7922 - C100534 * C7927 +
             C100532 * C7934 + C100536 * C8939 - C100537 * C8936 -
             C100536 * C8940 + C152775 * C8942) *
                C152747) *
               C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152918 -
           ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
            ((C110299 + C110300) * C152747 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152845) *
                C152807) *
               C152903 +
           (((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C152845 +
             (C110938 + C110939) * C152747) *
                C152807 +
            ((C101215 + C101216) * C152845 + (C104148 + C104147) * C152747) *
                C152462) *
               C152873) *
              C1429 +
          ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                C152807 +
            (C124491 * C152845 + C111446 * C152747) * C152462) *
               C152903 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C152918 -
           (((C112530 + C112531) * C152747 + (C104147 + C104148) * C152845) *
                C152462 +
            ((C110941 + C110940) * C152747 + (C110939 + C110938) * C152845) *
                C152807) *
               C152873) *
              C1430 +
          (((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
            (C123294 * C152845 + C111141 * C152747) * C152462) *
               C152918 -
           (((C111459 + C111460) * C152747 + (C103077 + C103078) * C152845) *
                C152462 +
            ((C110943 + C110942) * C152747 + C110889 * C152845) * C152807) *
               C152903 +
           ((C110946 * C152845 + (C110945 + C110944) * C152747) * C152807 +
            ((C112531 + C112530) * C152845 +
             (C100534 * C8183 - C100535 * C8177 - C100534 * C8184 +
              C100532 * C8195 + C100536 * C10242 - C100537 * C10239 -
              C100536 * C10243 + C152775 * C10245) *
                 C152747) *
                C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[273] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152829 -
           (((C101974 + C101973) * C152747 + (C101213 + C101214) * C152845) *
                C152462 +
            ((C110299 + C110300) * C152747 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152845) *
                C152807) *
               C152617) *
              C152512 * C873 +
          ((((C101214 + C101213) * C152845 + (C101973 + C101974) * C152747) *
                C152807 +
            ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
               C152617 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C152829) *
              C152512 * C874 +
          (((C100609 * C152845 + C123295 * C152747) * C152807 +
            ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
               C152829 -
           (((C101977 + C101978) * C152747 + (C101220 + C101219) * C152845) *
                C152462 +
            ((C101976 + C101975) * C152747 + C101223 * C152845) * C152807) *
               C152617) *
              C152512 * C875 +
          (((C101631 * C152845 + (C101978 + C101977) * C152747) * C152807 +
            ((C101646 + C101645) * C152845 +
             (C100534 * C1241 - C100535 * C1231 - C100534 * C1242 +
              C100532 * C1249 + C100536 * C2890 - C100537 * C2889 -
              C100536 * C2891 + C152775 * C2892) *
                 C152747) *
                C152462) *
               C152617 -
           (((C101435 + C101436) * C152747 + (C100606 + C100605) * C152845) *
                C152462 +
            (C123845 * C152747 + C100610 * C152845) * C152807) *
               C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
               C100532 * C160 + C100536 * C647 - C100537 * C632 -
               C100536 * C648 + C152775 * C668) *
                  C152845 +
              (C109370 + C109371) * C152747) *
                 C152807 +
             ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
                C152829 -
            ((C124490 * C152747 + (C101213 + C101214) * C152845) * C152462 +
             ((C110299 + C110300) * C152747 +
              (C100536 * C649 - C100537 * C633 - C100536 * C650 +
               C152775 * C669 + C100534 * C647 - C100535 * C632 -
               C100534 * C648 + C100532 * C668) *
                  C152845) *
                 C152807) *
                C152617) *
               C1429 +
           ((((C110300 + C110299) * C152845 + (C110298 + C110297) * C152747) *
                 C152807 +
             (C124491 * C152845 + C111446 * C152747) * C152462) *
                C152617 -
            ((C109357 * C152747 + C123293 * C152845) * C152462 +
             ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                 C152807) *
                C152829) *
               C1430 +
           (((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
             (C123294 * C152845 + C111141 * C152747) * C152462) *
                C152829 -
            (((C111459 + C111460) * C152747 + C125880 * C152845) * C152462 +
             ((C110943 + C110942) * C152747 + C110889 * C152845) * C152807) *
                C152617) *
               C152870) *
              C152814 +
          (((((C101214 + C101213) * C152845 + C124491 * C152747) * C152807 +
             ((C101212 + C101211) * C152845 + C101979 * C152747) * C152462) *
                C152617 -
            ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
             (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
                C152829) *
               C1429 +
           (((C123292 * C152845 + C123294 * C152747) * C152807 +
             (C123295 * C152845 + C100918 * C152747) * C152462) *
                C152829 -
            (((C103075 + C103076) * C152747 + C124492 * C152845) * C152462 +
             (C125880 * C152747 + C124490 * C152845) * C152807) *
                C152617) *
               C1430 +
           (((C111446 * C152845 + (C111460 + C111459) * C152747) * C152807 +
             ((C103076 + C103075) * C152845 +
              (C100534 * C2273 - C100535 * C2267 - C100534 * C2274 +
               C100532 * C2279 + C100536 * C9823 - C100537 * C9822 -
               C100536 * C9824 + C152775 * C9825) *
                  C152747) *
                 C152462) *
                C152617 -
            (((C102757 + C102758) * C152747 + C123296 * C152845) * C152462 +
             (C125493 * C152747 + C109357 * C152845) * C152807) *
                C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[274] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152845 +
            (C109370 + C109371) * C152747) *
               C152807 +
           ((C100599 + C100600) * C152845 + (C100908 + C100907) * C152747) *
               C152462) *
              C152530 * C152512 * C129 -
          ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
           ((C100907 + C100908) * C152747 + (C100600 + C100599) * C152845) *
               C152807) *
              C152530 * C152512 * C130 +
          ((C100609 * C152845 + (C100906 + C100905) * C152747) * C152807 +
           ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
              C152530 * C152512 * C131 -
          (((C101435 + C101436) * C152747 + (C100606 + C100605) * C152845) *
               C152462 +
           ((C100914 + C100913) * C152747 + C100610 * C152845) * C152807) *
              C152530 * C152512 * C132 +
          ((C100611 * C152845 + (C101436 + C101435) * C152747) * C152807 +
           ((C100608 + C100607) * C152845 +
            (C100534 * C400 - C100535 * C378 - C100534 * C401 + C100532 * C414 +
             C100536 * C1243 - C100537 * C1232 - C100536 * C1244 +
             C152775 * C1250) *
                C152747) *
               C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152530 * C152917 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C152530 * C152901 +
           ((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
            (C123294 * C152845 + C111141 * C152747) * C152462) *
               C152530 * C152870) *
              C365 +
          (((C123292 * C152845 + C123294 * C152747) * C152807 +
            (C123295 * C152845 + C100918 * C152747) * C152462) *
               C152530 * C152901 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C152530 * C152917 -
           (((C102757 + C102758) * C152747 + C123296 * C152845) * C152462 +
            ((C102759 + C102760) * C152747 + C109357 * C152845) * C152807) *
               C152530 * C152870) *
              C366 +
          (((C100609 * C152845 + C123295 * C152747) * C152807 +
            ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
               C152530 * C152917 -
           (((C100915 + C100916) * C152747 + (C100914 + C100913) * C152845) *
                C152462 +
            (C123296 * C152747 + C100917 * C152845) * C152807) *
               C152530 * C152901 +
           ((C100918 * C152845 + (C102758 + C102757) * C152747) * C152807 +
            ((C100916 + C100915) * C152845 +
             (C100534 * C1531 - C100535 * C1523 - C100534 * C1532 +
              C100532 * C1547 + C100536 * C2275 - C100537 * C2268 -
              C100536 * C2276 + C152775 * C2280) *
                 C152747) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152845 +
             (C109370 + C109371) * C152747) *
                C152807 +
            ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
               C152530 * C1429 -
           ((C109357 * C152747 + C123293 * C152845) * C152462 +
            ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
                C152807) *
               C152530 * C1430 +
           ((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
            (C123294 * C152845 + C111141 * C152747) * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C123292 * C152845 + C123294 * C152747) * C152807 +
            (C123295 * C152845 + C100918 * C152747) * C152462) *
               C152530 * C1430 -
           ((C100917 * C152747 + (C100602 + C100601) * C152845) * C152462 +
            (C123293 * C152747 + (C100600 + C100599) * C152845) * C152807) *
               C152530 * C1429 -
           (((C102757 + C102758) * C152747 + C123296 * C152845) * C152462 +
            ((C102759 + C102760) * C152747 + C109357 * C152845) * C152807) *
               C152530 * C152870) *
              C152897 +
          (((C100609 * C152845 + C123295 * C152747) * C152807 +
            ((C100604 + C100603) * C152845 + C101421 * C152747) * C152462) *
               C152530 * C1429 -
           (((C100915 + C100916) * C152747 + C123845 * C152845) * C152462 +
            (C123296 * C152747 + C100917 * C152845) * C152807) *
               C152530 * C1430 +
           ((C100918 * C152845 + (C102758 + C102757) * C152747) * C152807 +
            ((C100916 + C100915) * C152845 +
             (C100534 * C1531 - C100535 * C1523 - C100534 * C1532 +
              C100532 * C1547 + C100536 * C2275 - C100537 * C2268 -
              C100536 * C2276 + C152775 * C2280) *
                 C152747) *
                C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152845 +
            (C109370 + C109371) * C152747) *
               C152807 +
           ((C100599 + C100600) * C152845 + C123292 * C152747) * C152462) *
              C152530 * C1517 -
          ((C109357 * C152747 + C123293 * C152845) * C152462 +
           ((C109373 + C109372) * C152747 + (C109371 + C109370) * C152845) *
               C152807) *
              C152530 * C1518 +
          ((C109376 * C152845 + (C109375 + C109374) * C152747) * C152807 +
           (C123294 * C152845 + C111141 * C152747) * C152462) *
              C152530 * C1519 -
          (((C111154 + C111155) * C152747 + (C102759 + C102760) * C152845) *
               C152462 +
           ((C110667 + C110666) * C152747 + C110641 * C152845) * C152807) *
              C152530 * C1520 +
          ((C110670 * C152845 + (C110669 + C110668) * C152747) * C152807 +
           ((C111155 + C111154) * C152845 +
            (C100534 * C7926 - C100535 * C7922 - C100534 * C7927 +
             C100532 * C7934 + C100536 * C8939 - C100537 * C8936 -
             C100536 * C8940 + C152775 * C8942) *
                C152747) *
               C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[275] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152845 +
                     (C142632 + C142633 + C142634) * C152747) *
                        C152457 * C152530 * C152571 -
                    ((C142635 + C142636 + C142637) * C152747 +
                     (C142634 + C142633 + C142632) * C152845) *
                        C152457 * C152530 * C152578 +
                    ((C142637 + C142636 + C142635) * C152845 +
                     (C143931 + C143932 + C143933) * C152747) *
                        C152457 * C152530 * C3839) *
                       C152489 +
                   (((C134198 + C134197 + C134196) * C152845 +
                     (C134199 + C134200 + C134201) * C152747) *
                        C152457 * C152530 * C152578 -
                    ((C134196 + C134197 + C134198) * C152747 +
                     (C133896 + C133895 + C133894) * C152845) *
                        C152457 * C152530 * C152571 -
                    ((C136042 + C136043 + C136044) * C152747 +
                     (C134201 + C134200 + C134199) * C152845) *
                        C152457 * C152530 * C3839) *
                       C152498 +
                   (((C133899 + C133898 + C133897) * C152845 +
                     (C134202 + C134203 + C134204) * C152747) *
                        C152457 * C152530 * C152571 -
                    ((C134205 + C134206 + C134207) * C152747 +
                     (C134204 + C134203 + C134202) * C152845) *
                        C152457 * C152530 * C152578 +
                    ((C134207 + C134206 + C134205) * C152845 +
                     (C133815 * C1533 - C133816 * C1524 - C133815 * C1534 +
                      C152912 * C1548 + C133817 * C2273 - C133818 * C2267 -
                      C133817 * C2274 + C152913 * C2279 + C133819 * C9823 -
                      C133820 * C9822 - C133819 * C9824 + C133814 * C9825) *
                         C152747) *
                        C152457 * C152530 * C3839) *
                       C3842)) /
                 (p * q * std::sqrt(p + q));
    d2ee[276] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152845 +
                      (C142632 + C142633 + C142634) * C152747) *
                         C152457 * C152829 -
                     ((C143552 + C143553 + C143554) * C152747 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152845) *
                         C152457 * C152617) *
                        C152571 +
                    (((C143554 + C143553 + C143552) * C152845 +
                      (C144212 + C144213 + C144214) * C152747) *
                         C152457 * C152617 -
                     ((C142635 + C142636 + C142637) * C152747 +
                      (C142634 + C142633 + C142632) * C152845) *
                         C152457 * C152829) *
                        C152578 +
                    (((C142637 + C142636 + C142635) * C152845 +
                      (C143931 + C143932 + C143933) * C152747) *
                         C152457 * C152829 -
                     ((C144914 + C144915 + C144916) * C152747 +
                      (C144214 + C144213 + C144212) * C152845) *
                         C152457 * C152617) *
                        C3839) *
                       C3495 +
                   ((((C134500 + C134499 + C134498) * C152845 +
                      (C135266 + C135267 + C135268) * C152747) *
                         C152457 * C152617 -
                     ((C134196 + C134197 + C134198) * C152747 +
                      (C133896 + C133895 + C133894) * C152845) *
                         C152457 * C152829) *
                        C152571 +
                    (((C134198 + C134197 + C134196) * C152845 +
                      (C134199 + C134200 + C134201) * C152747) *
                         C152457 * C152829 -
                     ((C136353 + C136354 + C136355) * C152747 +
                      (C135268 + C135267 + C135266) * C152845) *
                         C152457 * C152617) *
                        C152578 +
                    (((C136355 + C136354 + C136353) * C152845 +
                      (C133815 * C2271 - C133816 * C2266 - C133815 * C2272 +
                       C152912 * C2278 + C133817 * C8183 - C133818 * C8177 -
                       C133817 * C8184 + C152913 * C8195 + C133819 * C10242 -
                       C133820 * C10239 - C133819 * C10243 + C133814 * C10245) *
                          C152747) *
                         C152457 * C152617 -
                     ((C136042 + C136043 + C136044) * C152747 +
                      (C134201 + C134200 + C134199) * C152845) *
                         C152457 * C152829) *
                        C3839) *
                       C152495)) /
                 (p * q * std::sqrt(p + q));
    d2ee[277] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152845 +
                     (C142632 + C142633 + C142634) * C152747) *
                        C152457 * C152530 * C152924 -
                    ((C142635 + C142636 + C142637) * C152747 +
                     (C142634 + C142633 + C142632) * C152845) *
                        C152457 * C152530 * C152920 +
                    ((C142637 + C142636 + C142635) * C152845 +
                     (C143931 + C143932 + C143933) * C152747) *
                        C152457 * C152530 * C152906 -
                    ((C143934 + C143935 + C143936) * C152747 +
                     (C143933 + C143932 + C143931) * C152845) *
                        C152457 * C152530 * C152880) *
                       C3495 +
                   (((C134198 + C134197 + C134196) * C152845 +
                     (C134199 + C134200 + C134201) * C152747) *
                        C152457 * C152530 * C152920 -
                    ((C134196 + C134197 + C134198) * C152747 +
                     (C133896 + C133895 + C133894) * C152845) *
                        C152457 * C152530 * C152924 -
                    ((C136042 + C136043 + C136044) * C152747 +
                     (C134201 + C134200 + C134199) * C152845) *
                        C152457 * C152530 * C152906 +
                    ((C136044 + C136043 + C136042) * C152845 +
                     (C133815 * C1541 - C133816 * C1528 - C133815 * C1542 +
                      C152912 * C1552 + C133817 * C8187 - C133818 * C8179 -
                      C133817 * C8188 + C152913 * C8197 + C133819 * C8193 -
                      C133820 * C8182 - C133819 * C8194 + C133814 * C8200) *
                         C152747) *
                        C152457 * C152530 * C152880) *
                       C152495)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152845 +
                     (C142632 + C142633 + C142634) * C152747) *
                        C152457 * C152530 * C3355 -
                    ((C142635 + C142636 + C142637) * C152747 +
                     (C142634 + C142633 + C142632) * C152845) *
                        C152457 * C152530 * C152575) *
                       C152923 +
                   (((C134198 + C134197 + C134196) * C152845 +
                     (C134199 + C134200 + C134201) * C152747) *
                        C152457 * C152530 * C152575 -
                    ((C134196 + C134197 + C134198) * C152747 +
                     (C133896 + C133895 + C133894) * C152845) *
                        C152457 * C152530 * C3355) *
                       C152916 +
                   (((C133899 + C133898 + C133897) * C152845 +
                     (C134202 + C134203 + C134204) * C152747) *
                        C152457 * C152530 * C3355 -
                    ((C134205 + C134206 + C134207) * C152747 +
                     (C134204 + C134203 + C134202) * C152845) *
                        C152457 * C152530 * C152575) *
                       C152899 +
                   (((C134724 + C134723 + C134722) * C152845 +
                     (C133815 * C394 - C133816 * C375 - C133815 * C395 +
                      C152912 * C411 + C133817 * C1721 - C133818 * C1705 -
                      C133817 * C1722 + C152913 * C1741 + C133819 * C1735 -
                      C133820 * C1712 - C133819 * C1736 + C133814 * C1748) *
                         C152747) *
                        C152457 * C152530 * C152575 -
                    ((C134722 + C134723 + C134724) * C152747 +
                     (C133902 + C133901 + C133900) * C152845) *
                        C152457 * C152530 * C3355) *
                       C152874)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152845 +
                      (C142632 + C142633 + C142634) * C152747) *
                         C152457 * C152918 -
                     ((C143552 + C143553 + C143554) * C152747 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152845) *
                         C152457 * C152903 +
                     ((C133815 * C649 - C133816 * C633 - C133815 * C650 +
                       C152912 * C669 + C133817 * C2677 - C133818 * C2666 -
                       C133817 * C2678 + C152913 * C2690 + C133819 * C2679 -
                       C133820 * C2667 - C133819 * C2680 + C133814 * C2691) *
                          C152845 +
                      (C144209 + C144210 + C144211) * C152747) *
                         C152457 * C152873) *
                        C3355 +
                    (((C143554 + C143553 + C143552) * C152845 +
                      (C144212 + C144213 + C144214) * C152747) *
                         C152457 * C152903 -
                     ((C142635 + C142636 + C142637) * C152747 +
                      (C142634 + C142633 + C142632) * C152845) *
                         C152457 * C152918 -
                     ((C144215 + C144216 + C144217) * C152747 +
                      (C144211 + C144210 + C144209) * C152845) *
                         C152457 * C152873) *
                        C152575) *
                       C3495 +
                   ((((C134500 + C134499 + C134498) * C152845 +
                      (C135266 + C135267 + C135268) * C152747) *
                         C152457 * C152903 -
                     ((C134196 + C134197 + C134198) * C152747 +
                      (C133896 + C133895 + C133894) * C152845) *
                         C152457 * C152918 -
                     ((C137416 + C137417 + C137418) * C152747 +
                      (C134503 + C134502 + C134501) * C152845) *
                         C152457 * C152873) *
                        C3355 +
                    (((C134198 + C134197 + C134196) * C152845 +
                      (C134199 + C134200 + C134201) * C152747) *
                         C152457 * C152918 -
                     ((C136353 + C136354 + C136355) * C152747 +
                      (C135268 + C135267 + C135266) * C152845) *
                         C152457 * C152903 +
                     ((C137418 + C137417 + C137416) * C152845 +
                      (C133815 * C1731 - C133816 * C1710 - C133815 * C1732 +
                       C152912 * C1746 + C133817 * C9514 - C133818 * C9508 -
                       C133817 * C9515 + C152913 * C9526 + C133819 * C9524 -
                       C133820 * C9513 - C133819 * C9525 + C133814 * C9531) *
                          C152747) *
                         C152457 * C152873) *
                        C152575) *
                       C152495)) /
                     (p * q * std::sqrt(p + q));
    d2ee[278] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152845 +
                      (C142632 + C142633 + C142634) * C152747) *
                         C152457 * C152829 -
                     ((C143552 + C143553 + C143554) * C152747 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152845) *
                         C152457 * C152617) *
                        C3355 +
                    (((C143554 + C143553 + C143552) * C152845 +
                      (C144212 + C144213 + C144214) * C152747) *
                         C152457 * C152617 -
                     ((C142635 + C142636 + C142637) * C152747 +
                      (C142634 + C142633 + C142632) * C152845) *
                         C152457 * C152829) *
                        C152575) *
                       C152489 +
                   ((((C134500 + C134499 + C134498) * C152845 +
                      (C135266 + C135267 + C135268) * C152747) *
                         C152457 * C152617 -
                     ((C134196 + C134197 + C134198) * C152747 +
                      (C133896 + C133895 + C133894) * C152845) *
                         C152457 * C152829) *
                        C3355 +
                    (((C134198 + C134197 + C134196) * C152845 +
                      (C134199 + C134200 + C134201) * C152747) *
                         C152457 * C152829 -
                     ((C136353 + C136354 + C136355) * C152747 +
                      (C135268 + C135267 + C135266) * C152845) *
                         C152457 * C152617) *
                        C152575) *
                       C152498 +
                   ((((C133899 + C133898 + C133897) * C152845 +
                      (C134202 + C134203 + C134204) * C152747) *
                         C152457 * C152829 -
                     ((C135269 + C135270 + C135271) * C152747 +
                      (C134506 + C134505 + C134504) * C152845) *
                         C152457 * C152617) *
                        C3355 +
                    (((C135271 + C135270 + C135269) * C152845 +
                      (C133815 * C1723 - C133816 * C1706 - C133815 * C1724 +
                       C152912 * C1742 + C133817 * C1733 - C133818 * C1711 -
                       C133817 * C1734 + C152913 * C1747 + C133819 * C10024 -
                       C133820 * C10023 - C133819 * C10025 + C133814 * C10026) *
                          C152747) *
                         C152457 * C152617 -
                     ((C134205 + C134206 + C134207) * C152747 +
                      (C134204 + C134203 + C134202) * C152845) *
                         C152457 * C152829) *
                        C152575) *
                       C3842)) /
                 (p * q * std::sqrt(p + q));
    d2ee[279] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152845 +
                     (C142632 + C142633 + C142634) * C152747) *
                        C152457 * C152530 * C3355 -
                    ((C142635 + C142636 + C142637) * C152747 +
                     (C142634 + C142633 + C142632) * C152845) *
                        C152457 * C152530 * C152575) *
                       C152923 +
                   (((C134198 + C134197 + C134196) * C152845 +
                     (C134199 + C134200 + C134201) * C152747) *
                        C152457 * C152530 * C152575 -
                    ((C134196 + C134197 + C134198) * C152747 +
                     (C133896 + C133895 + C133894) * C152845) *
                        C152457 * C152530 * C3355) *
                       C152916 +
                   (((C133899 + C133898 + C133897) * C152845 +
                     (C134202 + C134203 + C134204) * C152747) *
                        C152457 * C152530 * C3355 -
                    ((C134205 + C134206 + C134207) * C152747 +
                     (C134204 + C134203 + C134202) * C152845) *
                        C152457 * C152530 * C152575) *
                       C152899 +
                   (((C134724 + C134723 + C134722) * C152845 +
                     (C133815 * C394 - C133816 * C375 - C133815 * C395 +
                      C152912 * C411 + C133817 * C1721 - C133818 * C1705 -
                      C133817 * C1722 + C152913 * C1741 + C133819 * C1735 -
                      C133820 * C1712 - C133819 * C1736 + C133814 * C1748) *
                         C152747) *
                        C152457 * C152530 * C152575 -
                    ((C134722 + C134723 + C134724) * C152747 +
                     (C133902 + C133901 + C133900) * C152845) *
                        C152457 * C152530 * C3355) *
                       C152874)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152845 +
                     (C142632 + C142633 + C142634) * C152747) *
                        C152457 * C152530 * C152924 -
                    ((C142635 + C142636 + C142637) * C152747 +
                     (C142634 + C142633 + C142632) * C152845) *
                        C152457 * C152530 * C152920 +
                    ((C142637 + C142636 + C142635) * C152845 +
                     (C143931 + C143932 + C143933) * C152747) *
                        C152457 * C152530 * C152906 -
                    ((C143934 + C143935 + C143936) * C152747 +
                     (C143933 + C143932 + C143931) * C152845) *
                        C152457 * C152530 * C152880) *
                       C3495 +
                   (((C134198 + C134197 + C134196) * C152845 +
                     (C134199 + C134200 + C134201) * C152747) *
                        C152457 * C152530 * C152920 -
                    ((C134196 + C134197 + C134198) * C152747 +
                     (C133896 + C133895 + C133894) * C152845) *
                        C152457 * C152530 * C152924 -
                    ((C136042 + C136043 + C136044) * C152747 +
                     (C134201 + C134200 + C134199) * C152845) *
                        C152457 * C152530 * C152906 +
                    ((C136044 + C136043 + C136042) * C152845 +
                     (C133815 * C1541 - C133816 * C1528 - C133815 * C1542 +
                      C152912 * C1552 + C133817 * C8187 - C133818 * C8179 -
                      C133817 * C8188 + C152913 * C8197 + C133819 * C8193 -
                      C133820 * C8182 - C133819 * C8194 + C133814 * C8200) *
                         C152747) *
                        C152457 * C152530 * C152880) *
                       C152495)) /
                     (p * q * std::sqrt(p + q));
    d2ee[280] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152845 +
                      (C142632 + C142633 + C142634) * C152747) *
                         C152457 * C4361 -
                     ((C143552 + C143553 + C143554) * C152747 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152845) *
                         C152457 * C152617) *
                        C152571 +
                    (((C143554 + C143553 + C143552) * C152845 +
                      (C144212 + C144213 + C144214) * C152747) *
                         C152457 * C152617 -
                     ((C142635 + C142636 + C142637) * C152747 +
                      (C142634 + C142633 + C142632) * C152845) *
                         C152457 * C4361) *
                        C152578 +
                    (((C142637 + C142636 + C142635) * C152845 +
                      (C143931 + C143932 + C143933) * C152747) *
                         C152457 * C4361 -
                     ((C144914 + C144915 + C144916) * C152747 +
                      (C144214 + C144213 + C144212) * C152845) *
                         C152457 * C152617) *
                        C3839) *
                       C152814 +
                   ((((C134500 + C134499 + C134498) * C152845 +
                      (C135266 + C135267 + C135268) * C152747) *
                         C152457 * C152617 -
                     ((C134196 + C134197 + C134198) * C152747 +
                      (C133896 + C133895 + C133894) * C152845) *
                         C152457 * C4361) *
                        C152571 +
                    (((C134198 + C134197 + C134196) * C152845 +
                      (C134199 + C134200 + C134201) * C152747) *
                         C152457 * C4361 -
                     ((C136353 + C136354 + C136355) * C152747 +
                      (C135268 + C135267 + C135266) * C152845) *
                         C152457 * C152617) *
                        C152578 +
                    (((C136355 + C136354 + C136353) * C152845 +
                      (C133815 * C2271 - C133816 * C2266 - C133815 * C2272 +
                       C152912 * C2278 + C133817 * C8183 - C133818 * C8177 -
                       C133817 * C8184 + C152913 * C8195 + C133819 * C10242 -
                       C133820 * C10239 - C133819 * C10243 + C133814 * C10245) *
                          C152747) *
                         C152457 * C152617 -
                     ((C136042 + C136043 + C136044) * C152747 +
                      (C134201 + C134200 + C134199) * C152845) *
                         C152457 * C4361) *
                        C3839) *
                       C152495)) /
                 (p * q * std::sqrt(p + q));
    d2ee[281] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152845 +
                     (C142632 + C142633 + C142634) * C152747) *
                        C152457 * C152613 -
                    ((C143552 + C143553 + C143554) * C152747 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152845) *
                        C152457 * C152620 +
                    ((C133815 * C649 - C133816 * C633 - C133815 * C650 +
                      C152912 * C669 + C133817 * C2677 - C133818 * C2666 -
                      C133817 * C2678 + C152913 * C2690 + C133819 * C2679 -
                      C133820 * C2667 - C133819 * C2680 + C133814 * C2691) *
                         C152845 +
                     (C144209 + C144210 + C144211) * C152747) *
                        C152457 * C5033) *
                       C152571 +
                   (((C143554 + C143553 + C143552) * C152845 +
                     (C144212 + C144213 + C144214) * C152747) *
                        C152457 * C152620 -
                    ((C142635 + C142636 + C142637) * C152747 +
                     (C142634 + C142633 + C142632) * C152845) *
                        C152457 * C152613 -
                    ((C144215 + C144216 + C144217) * C152747 +
                     (C144211 + C144210 + C144209) * C152845) *
                        C152457 * C5033) *
                       C152578 +
                   (((C142637 + C142636 + C142635) * C152845 +
                     (C143931 + C143932 + C143933) * C152747) *
                        C152457 * C152613 -
                    ((C144914 + C144915 + C144916) * C152747 +
                     (C144214 + C144213 + C144212) * C152845) *
                        C152457 * C152620 +
                    ((C144217 + C144216 + C144215) * C152845 +
                     (C133815 * C8185 - C133816 * C8178 - C133815 * C8186 +
                      C152912 * C8196 + C133817 * C10240 - C133818 * C10238 -
                      C133817 * C10241 + C152913 * C10244 + C133819 * C61401 -
                      C133820 * C61400 - C133819 * C61402 + C133814 * C61403) *
                         C152747) *
                        C152457 * C5033) *
                       C3839) *
                  C152484) /
                 (p * q * std::sqrt(p + q));
    d2ee[282] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152845 +
                     (C142632 + C142633 + C142634) * C152747) *
                        C152457 * C4361 -
                    ((C143552 + C143553 + C143554) * C152747 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152845) *
                        C152457 * C152617) *
                       C152924 +
                   (((C143554 + C143553 + C143552) * C152845 +
                     (C144212 + C144213 + C144214) * C152747) *
                        C152457 * C152617 -
                    ((C142635 + C142636 + C142637) * C152747 +
                     (C142634 + C142633 + C142632) * C152845) *
                        C152457 * C4361) *
                       C152920 +
                   (((C142637 + C142636 + C142635) * C152845 +
                     (C143931 + C143932 + C143933) * C152747) *
                        C152457 * C4361 -
                    ((C144914 + C144915 + C144916) * C152747 +
                     (C144214 + C144213 + C144212) * C152845) *
                        C152457 * C152617) *
                       C152906 +
                   (((C144916 + C144915 + C144914) * C152845 +
                     (C133815 * C8189 - C133816 * C8180 - C133815 * C8190 +
                      C152912 * C8198 + C133817 * C8191 - C133818 * C8181 -
                      C133817 * C8192 + C152913 * C8199 + C133819 * C61859 -
                      C133820 * C61858 - C133819 * C61860 + C133814 * C61861) *
                         C152747) *
                        C152457 * C152617 -
                    ((C143934 + C143935 + C143936) * C152747 +
                     (C143933 + C143932 + C143931) * C152845) *
                        C152457 * C4361) *
                       C152880) *
                  C152484) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152845 +
                      (C142632 + C142633 + C142634) * C152747) *
                         C152457 * C4361 -
                     ((C143552 + C143553 + C143554) * C152747 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152845) *
                         C152457 * C152617) *
                        C3355 +
                    (((C143554 + C143553 + C143552) * C152845 +
                      (C144212 + C144213 + C144214) * C152747) *
                         C152457 * C152617 -
                     ((C142635 + C142636 + C142637) * C152747 +
                      (C142634 + C142633 + C142632) * C152845) *
                         C152457 * C4361) *
                        C152575) *
                       C152914 +
                   ((((C134500 + C134499 + C134498) * C152845 +
                      (C135266 + C135267 + C135268) * C152747) *
                         C152457 * C152617 -
                     ((C134196 + C134197 + C134198) * C152747 +
                      (C133896 + C133895 + C133894) * C152845) *
                         C152457 * C4361) *
                        C3355 +
                    (((C134198 + C134197 + C134196) * C152845 +
                      (C134199 + C134200 + C134201) * C152747) *
                         C152457 * C4361 -
                     ((C136353 + C136354 + C136355) * C152747 +
                      (C135268 + C135267 + C135266) * C152845) *
                         C152457 * C152617) *
                        C152575) *
                       C152897 +
                   ((((C133899 + C133898 + C133897) * C152845 +
                      (C134202 + C134203 + C134204) * C152747) *
                         C152457 * C4361 -
                     ((C135269 + C135270 + C135271) * C152747 +
                      (C134506 + C134505 + C134504) * C152845) *
                         C152457 * C152617) *
                        C3355 +
                    (((C135271 + C135270 + C135269) * C152845 +
                      (C133815 * C1723 - C133816 * C1706 - C133815 * C1724 +
                       C152912 * C1742 + C133817 * C1733 - C133818 * C1711 -
                       C133817 * C1734 + C152913 * C1747 + C133819 * C10024 -
                       C133820 * C10023 - C133819 * C10025 + C133814 * C10026) *
                          C152747) *
                         C152457 * C152617 -
                     ((C134205 + C134206 + C134207) * C152747 +
                      (C134204 + C134203 + C134202) * C152845) *
                         C152457 * C4361) *
                        C152575) *
                       C152864)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152845 +
                     (C142632 + C142633 + C142634) * C152747) *
                        C152457 * C152925 -
                    ((C143552 + C143553 + C143554) * C152747 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152845) *
                        C152457 * C152922 +
                    ((C133815 * C649 - C133816 * C633 - C133815 * C650 +
                      C152912 * C669 + C133817 * C2677 - C133818 * C2666 -
                      C133817 * C2678 + C152913 * C2690 + C133819 * C2679 -
                      C133820 * C2667 - C133819 * C2680 + C133814 * C2691) *
                         C152845 +
                     (C144209 + C144210 + C144211) * C152747) *
                        C152457 * C152909 -
                    ((C146171 + C146172 + C146173) * C152747 +
                     (C133819 * C18111 - C133820 * C18106 - C133819 * C18112 +
                      C133814 * C18118 + C133817 * C2679 - C133818 * C2667 -
                      C133817 * C2680 + C152913 * C2691 + C133815 * C2677 -
                      C133816 * C2666 - C133815 * C2678 + C152912 * C2690) *
                         C152845) *
                        C152457 * C152886) *
                       C3355 +
                   (((C143554 + C143553 + C143552) * C152845 +
                     (C144212 + C144213 + C144214) * C152747) *
                        C152457 * C152922 -
                    ((C142635 + C142636 + C142637) * C152747 +
                     (C142634 + C142633 + C142632) * C152845) *
                        C152457 * C152925 -
                    ((C144215 + C144216 + C144217) * C152747 +
                     (C144211 + C144210 + C144209) * C152845) *
                        C152457 * C152909 +
                    ((C146173 + C146172 + C146171) * C152845 +
                     (C133815 * C9516 - C133816 * C9509 - C133815 * C9517 +
                      C152912 * C9527 + C133817 * C9520 - C133818 * C9511 -
                      C133817 * C9521 + C152913 * C9529 + C133819 * C68735 -
                      C133820 * C68734 - C133819 * C68736 + C133814 * C68737) *
                         C152747) *
                        C152457 * C152886) *
                       C152575) *
                  C152484) /
                     (p * q * std::sqrt(p + q));
    d2ee[283] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152845 +
                      (C142632 + C142633 + C142634) * C152747) *
                         C152457 * C152613 -
                     ((C143552 + C143553 + C143554) * C152747 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152845) *
                         C152457 * C152620 +
                     ((C133815 * C649 - C133816 * C633 - C133815 * C650 +
                       C152912 * C669 + C133817 * C2677 - C133818 * C2666 -
                       C133817 * C2678 + C152913 * C2690 + C133819 * C2679 -
                       C133820 * C2667 - C133819 * C2680 + C133814 * C2691) *
                          C152845 +
                      (C144209 + C144210 + C144211) * C152747) *
                         C152457 * C5033) *
                        C3355 +
                    (((C143554 + C143553 + C143552) * C152845 +
                      (C144212 + C144213 + C144214) * C152747) *
                         C152457 * C152620 -
                     ((C142635 + C142636 + C142637) * C152747 +
                      (C142634 + C142633 + C142632) * C152845) *
                         C152457 * C152613 -
                     ((C144215 + C144216 + C144217) * C152747 +
                      (C144211 + C144210 + C144209) * C152845) *
                         C152457 * C5033) *
                        C152575) *
                       C152814 +
                   ((((C134500 + C134499 + C134498) * C152845 +
                      (C135266 + C135267 + C135268) * C152747) *
                         C152457 * C152620 -
                     ((C134196 + C134197 + C134198) * C152747 +
                      (C133896 + C133895 + C133894) * C152845) *
                         C152457 * C152613 -
                     ((C137416 + C137417 + C137418) * C152747 +
                      (C134503 + C134502 + C134501) * C152845) *
                         C152457 * C5033) *
                        C3355 +
                    (((C134198 + C134197 + C134196) * C152845 +
                      (C134199 + C134200 + C134201) * C152747) *
                         C152457 * C152613 -
                     ((C136353 + C136354 + C136355) * C152747 +
                      (C135268 + C135267 + C135266) * C152845) *
                         C152457 * C152620 +
                     ((C137418 + C137417 + C137416) * C152845 +
                      (C133815 * C1731 - C133816 * C1710 - C133815 * C1732 +
                       C152912 * C1746 + C133817 * C9514 - C133818 * C9508 -
                       C133817 * C9515 + C152913 * C9526 + C133819 * C9524 -
                       C133820 * C9513 - C133819 * C9525 + C133814 * C9531) *
                          C152747) *
                         C152457 * C5033) *
                        C152575) *
                       C152495)) /
                 (p * q * std::sqrt(p + q));
    d2ee[284] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152845 +
                      (C142632 + C142633 + C142634) * C152747) *
                         C152457 * C4361 -
                     ((C143552 + C143553 + C143554) * C152747 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152845) *
                         C152457 * C152617) *
                        C3355 +
                    (((C143554 + C143553 + C143552) * C152845 +
                      (C144212 + C144213 + C144214) * C152747) *
                         C152457 * C152617 -
                     ((C142635 + C142636 + C142637) * C152747 +
                      (C142634 + C142633 + C142632) * C152845) *
                         C152457 * C4361) *
                        C152575) *
                       C152914 +
                   ((((C134500 + C134499 + C134498) * C152845 +
                      (C135266 + C135267 + C135268) * C152747) *
                         C152457 * C152617 -
                     ((C134196 + C134197 + C134198) * C152747 +
                      (C133896 + C133895 + C133894) * C152845) *
                         C152457 * C4361) *
                        C3355 +
                    (((C134198 + C134197 + C134196) * C152845 +
                      (C134199 + C134200 + C134201) * C152747) *
                         C152457 * C4361 -
                     ((C136353 + C136354 + C136355) * C152747 +
                      (C135268 + C135267 + C135266) * C152845) *
                         C152457 * C152617) *
                        C152575) *
                       C152897 +
                   ((((C133899 + C133898 + C133897) * C152845 +
                      (C134202 + C134203 + C134204) * C152747) *
                         C152457 * C4361 -
                     ((C135269 + C135270 + C135271) * C152747 +
                      (C134506 + C134505 + C134504) * C152845) *
                         C152457 * C152617) *
                        C3355 +
                    (((C135271 + C135270 + C135269) * C152845 +
                      (C133815 * C1723 - C133816 * C1706 - C133815 * C1724 +
                       C152912 * C1742 + C133817 * C1733 - C133818 * C1711 -
                       C133817 * C1734 + C152913 * C1747 + C133819 * C10024 -
                       C133820 * C10023 - C133819 * C10025 + C133814 * C10026) *
                          C152747) *
                         C152457 * C152617 -
                     ((C134205 + C134206 + C134207) * C152747 +
                      (C134204 + C134203 + C134202) * C152845) *
                         C152457 * C4361) *
                        C152575) *
                       C152864)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152845 +
                     (C142632 + C142633 + C142634) * C152747) *
                        C152457 * C4361 -
                    ((C143552 + C143553 + C143554) * C152747 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152845) *
                        C152457 * C152617) *
                       C152924 +
                   (((C143554 + C143553 + C143552) * C152845 +
                     (C144212 + C144213 + C144214) * C152747) *
                        C152457 * C152617 -
                    ((C142635 + C142636 + C142637) * C152747 +
                     (C142634 + C142633 + C142632) * C152845) *
                        C152457 * C4361) *
                       C152920 +
                   (((C142637 + C142636 + C142635) * C152845 +
                     (C143931 + C143932 + C143933) * C152747) *
                        C152457 * C4361 -
                    ((C144914 + C144915 + C144916) * C152747 +
                     (C144214 + C144213 + C144212) * C152845) *
                        C152457 * C152617) *
                       C152906 +
                   (((C144916 + C144915 + C144914) * C152845 +
                     (C133815 * C8189 - C133816 * C8180 - C133815 * C8190 +
                      C152912 * C8198 + C133817 * C8191 - C133818 * C8181 -
                      C133817 * C8192 + C152913 * C8199 + C133819 * C61859 -
                      C133820 * C61858 - C133819 * C61860 + C133814 * C61861) *
                         C152747) *
                        C152457 * C152617 -
                    ((C143934 + C143935 + C143936) * C152747 +
                     (C143933 + C143932 + C143931) * C152845) *
                        C152457 * C4361) *
                       C152880) *
                  C152484) /
                     (p * q * std::sqrt(p + q));
    d2ee[285] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152845 +
                     (C142632 + C142633 + C142634) * C152747) *
                        C152457 * C152530 * C1879 -
                    ((C142635 + C142636 + C142637) * C152747 +
                     (C142634 + C142633 + C142632) * C152845) *
                        C152457 * C152530 * C1880 +
                    ((C142637 + C142636 + C142635) * C152845 +
                     (C143931 + C143932 + C143933) * C152747) *
                        C152457 * C152530 * C1881 -
                    ((C143934 + C143935 + C143936) * C152747 +
                     (C143933 + C143932 + C143931) * C152845) *
                        C152457 * C152530 * C152880) *
                       C152814 +
                   (((C134198 + C134197 + C134196) * C152845 +
                     (C134199 + C134200 + C134201) * C152747) *
                        C152457 * C152530 * C1880 -
                    ((C134196 + C134197 + C134198) * C152747 +
                     (C133896 + C133895 + C133894) * C152845) *
                        C152457 * C152530 * C1879 -
                    ((C136042 + C136043 + C136044) * C152747 +
                     (C134201 + C134200 + C134199) * C152845) *
                        C152457 * C152530 * C1881 +
                    ((C136044 + C136043 + C136042) * C152845 +
                     (C133815 * C1541 - C133816 * C1528 - C133815 * C1542 +
                      C152912 * C1552 + C133817 * C8187 - C133818 * C8179 -
                      C133817 * C8188 + C152913 * C8197 + C133819 * C8193 -
                      C133820 * C8182 - C133819 * C8194 + C133814 * C8200) *
                         C152747) *
                        C152457 * C152530 * C152880) *
                       C152495)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152845 +
                     (C142632 + C142633 + C142634) * C152747) *
                        C152457 * C152530 * C152828 -
                    ((C142635 + C142636 + C142637) * C152747 +
                     (C142634 + C142633 + C142632) * C152845) *
                        C152457 * C152530 * C152575) *
                       C873 +
                   (((C134198 + C134197 + C134196) * C152845 +
                     (C134199 + C134200 + C134201) * C152747) *
                        C152457 * C152530 * C152575 -
                    ((C134196 + C134197 + C134198) * C152747 +
                     (C133896 + C133895 + C133894) * C152845) *
                        C152457 * C152530 * C152828) *
                       C874 +
                   (((C133899 + C133898 + C133897) * C152845 +
                     (C134202 + C134203 + C134204) * C152747) *
                        C152457 * C152530 * C152828 -
                    ((C134205 + C134206 + C134207) * C152747 +
                     (C134204 + C134203 + C134202) * C152845) *
                        C152457 * C152530 * C152575) *
                       C875 +
                   (((C134724 + C134723 + C134722) * C152845 +
                     (C133815 * C394 - C133816 * C375 - C133815 * C395 +
                      C152912 * C411 + C133817 * C1721 - C133818 * C1705 -
                      C133817 * C1722 + C152913 * C1741 + C133819 * C1735 -
                      C133820 * C1712 - C133819 * C1736 + C133814 * C1748) *
                         C152747) *
                        C152457 * C152530 * C152575 -
                    ((C134722 + C134723 + C134724) * C152747 +
                     (C133902 + C133901 + C133900) * C152845) *
                        C152457 * C152530 * C152828) *
                       C152874)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152845 +
                      (C142632 + C142633 + C142634) * C152747) *
                         C152457 * C2427 -
                     ((C143552 + C143553 + C143554) * C152747 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152845) *
                         C152457 * C2428 +
                     ((C133815 * C649 - C133816 * C633 - C133815 * C650 +
                       C152912 * C669 + C133817 * C2677 - C133818 * C2666 -
                       C133817 * C2678 + C152913 * C2690 + C133819 * C2679 -
                       C133820 * C2667 - C133819 * C2680 + C133814 * C2691) *
                          C152845 +
                      (C144209 + C144210 + C144211) * C152747) *
                         C152457 * C152873) *
                        C152828 +
                    (((C143554 + C143553 + C143552) * C152845 +
                      (C144212 + C144213 + C144214) * C152747) *
                         C152457 * C2428 -
                     ((C142635 + C142636 + C142637) * C152747 +
                      (C142634 + C142633 + C142632) * C152845) *
                         C152457 * C2427 -
                     ((C144215 + C144216 + C144217) * C152747 +
                      (C144211 + C144210 + C144209) * C152845) *
                         C152457 * C152873) *
                        C152575) *
                       C152814 +
                   ((((C134500 + C134499 + C134498) * C152845 +
                      (C135266 + C135267 + C135268) * C152747) *
                         C152457 * C2428 -
                     ((C134196 + C134197 + C134198) * C152747 +
                      (C133896 + C133895 + C133894) * C152845) *
                         C152457 * C2427 -
                     ((C137416 + C137417 + C137418) * C152747 +
                      (C134503 + C134502 + C134501) * C152845) *
                         C152457 * C152873) *
                        C152828 +
                    (((C134198 + C134197 + C134196) * C152845 +
                      (C134199 + C134200 + C134201) * C152747) *
                         C152457 * C2427 -
                     ((C136353 + C136354 + C136355) * C152747 +
                      (C135268 + C135267 + C135266) * C152845) *
                         C152457 * C2428 +
                     ((C137418 + C137417 + C137416) * C152845 +
                      (C133815 * C1731 - C133816 * C1710 - C133815 * C1732 +
                       C152912 * C1746 + C133817 * C9514 - C133818 * C9508 -
                       C133817 * C9515 + C152913 * C9526 + C133819 * C9524 -
                       C133820 * C9513 - C133819 * C9525 + C133814 * C9531) *
                          C152747) *
                         C152457 * C152873) *
                        C152575) *
                       C152495)) /
                     (p * q * std::sqrt(p + q));
    d2ee[286] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152845 +
                     (C142632 + C142633 + C142634) * C152747) *
                        C152457 * C152829 -
                    ((C143552 + C143553 + C143554) * C152747 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152845) *
                        C152457 * C152617) *
                       C1879 +
                   (((C143554 + C143553 + C143552) * C152845 +
                     (C144212 + C144213 + C144214) * C152747) *
                        C152457 * C152617 -
                    ((C142635 + C142636 + C142637) * C152747 +
                     (C142634 + C142633 + C142632) * C152845) *
                        C152457 * C152829) *
                       C1880 +
                   (((C142637 + C142636 + C142635) * C152845 +
                     (C143931 + C143932 + C143933) * C152747) *
                        C152457 * C152829 -
                    ((C144914 + C144915 + C144916) * C152747 +
                     (C144214 + C144213 + C144212) * C152845) *
                        C152457 * C152617) *
                       C1881 +
                   (((C144916 + C144915 + C144914) * C152845 +
                     (C133815 * C8189 - C133816 * C8180 - C133815 * C8190 +
                      C152912 * C8198 + C133817 * C8191 - C133818 * C8181 -
                      C133817 * C8192 + C152913 * C8199 + C133819 * C61859 -
                      C133820 * C61858 - C133819 * C61860 + C133814 * C61861) *
                         C152747) *
                        C152457 * C152617 -
                    ((C143934 + C143935 + C143936) * C152747 +
                     (C143933 + C143932 + C143931) * C152845) *
                        C152457 * C152829) *
                       C152880) *
                  C152484) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152845 +
                      (C142632 + C142633 + C142634) * C152747) *
                         C152457 * C152829 -
                     ((C143552 + C143553 + C143554) * C152747 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152845) *
                         C152457 * C152617) *
                        C152828 +
                    (((C143554 + C143553 + C143552) * C152845 +
                      (C133815 * C1727 - C133816 * C1708 - C133815 * C1728 +
                       C152912 * C1744 + C133817 * C1729 - C133818 * C1709 -
                       C133817 * C1730 + C152913 * C1745 + C133819 * C9516 -
                       C133820 * C9509 - C133819 * C9517 + C133814 * C9527) *
                          C152747) *
                         C152457 * C152617 -
                     ((C142635 + C142636 + C142637) * C152747 +
                      (C142634 + C142633 + C142632) * C152845) *
                         C152457 * C152829) *
                        C152575) *
                       C365 +
                   ((((C134500 + C134499 + C134498) * C152845 +
                      (C135266 + C135267 + C135268) * C152747) *
                         C152457 * C152617 -
                     ((C134196 + C134197 + C134198) * C152747 +
                      (C133896 + C133895 + C133894) * C152845) *
                         C152457 * C152829) *
                        C152828 +
                    (((C134198 + C134197 + C134196) * C152845 +
                      (C134199 + C134200 + C134201) * C152747) *
                         C152457 * C152829 -
                     ((C136353 + C136354 + C136355) * C152747 +
                      (C135268 + C135267 + C135266) * C152845) *
                         C152457 * C152617) *
                        C152575) *
                       C366 +
                   ((((C133899 + C133898 + C133897) * C152845 +
                      (C134202 + C134203 + C134204) * C152747) *
                         C152457 * C152829 -
                     ((C135269 + C135270 + C135271) * C152747 +
                      (C134506 + C134505 + C134504) * C152845) *
                         C152457 * C152617) *
                        C152828 +
                    (((C135271 + C135270 + C135269) * C152845 +
                      (C133815 * C1723 - C133816 * C1706 - C133815 * C1724 +
                       C152912 * C1742 + C133817 * C1733 - C133818 * C1711 -
                       C133817 * C1734 + C152913 * C1747 + C133819 * C10024 -
                       C133820 * C10023 - C133819 * C10025 + C133814 * C10026) *
                          C152747) *
                         C152457 * C152617 -
                     ((C134205 + C134206 + C134207) * C152747 +
                      (C134204 + C134203 + C134202) * C152845) *
                         C152457 * C152829) *
                        C152575) *
                       C152864)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152845 +
                     (C142632 + C142633 + C142634) * C152747) *
                        C152457 * C3047 -
                    ((C143552 + C143553 + C143554) * C152747 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152845) *
                        C152457 * C3048 +
                    ((C133815 * C649 - C133816 * C633 - C133815 * C650 +
                      C152912 * C669 + C133817 * C2677 - C133818 * C2666 -
                      C133817 * C2678 + C152913 * C2690 + C133819 * C2679 -
                      C133820 * C2667 - C133819 * C2680 + C133814 * C2691) *
                         C152845 +
                     (C144209 + C144210 + C144211) * C152747) *
                        C152457 * C3049 -
                    ((C146171 + C146172 + C146173) * C152747 +
                     (C133819 * C18111 - C133820 * C18106 - C133819 * C18112 +
                      C133814 * C18118 + C133817 * C2679 - C133818 * C2667 -
                      C133817 * C2680 + C152913 * C2691 + C133815 * C2677 -
                      C133816 * C2666 - C133815 * C2678 + C152912 * C2690) *
                         C152845) *
                        C152457 * C152886) *
                       C152828 +
                   (((C143554 + C143553 + C143552) * C152845 +
                     (C144212 + C144213 + C144214) * C152747) *
                        C152457 * C3048 -
                    ((C142635 + C142636 + C142637) * C152747 +
                     (C142634 + C142633 + C142632) * C152845) *
                        C152457 * C3047 -
                    ((C144215 + C144216 + C144217) * C152747 +
                     (C144211 + C144210 + C144209) * C152845) *
                        C152457 * C3049 +
                    ((C146173 + C146172 + C146171) * C152845 +
                     (C133815 * C9516 - C133816 * C9509 - C133815 * C9517 +
                      C152912 * C9527 + C133817 * C9520 - C133818 * C9511 -
                      C133817 * C9521 + C152913 * C9529 + C133819 * C68735 -
                      C133820 * C68734 - C133819 * C68736 + C133814 * C68737) *
                         C152747) *
                        C152457 * C152886) *
                       C152575) *
                  C152484) /
                     (p * q * std::sqrt(p + q));
    d2ee[287] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                C152912 * C160 + C133817 * C647 - C133818 * C632 -
                C133817 * C648 + C152913 * C668 + C133819 * C649 -
                C133820 * C633 - C133819 * C650 + C133814 * C669) *
                   C152845 +
               (C133815 * C386 - C133816 * C371 - C133815 * C387 +
                C152912 * C407 + C133817 * C1233 - C133818 * C1227 -
                C133817 * C1234 + C152913 * C1245 + C133819 * C1719 -
                C133820 * C1704 - C133819 * C1720 + C133814 * C1740) *
                   C152747) *
                  C152457 * C152530 * C152512 * C129 -
              ((C134196 + C134197 + C134198) * C152747 +
               (C133896 + C133895 + C133894) * C152845) *
                  C152457 * C152530 * C152512 * C130 +
              ((C133899 + C133898 + C133897) * C152845 +
               (C134202 + C134203 + C134204) * C152747) *
                  C152457 * C152530 * C152512 * C131 -
              ((C134722 + C134723 + C134724) * C152747 +
               (C133902 + C133901 + C133900) * C152845) *
                  C152457 * C152530 * C152512 * C132 +
              ((C133905 + C133904 + C133903) * C152845 +
               (C133815 * C396 - C133816 * C376 - C133815 * C397 +
                C152912 * C412 + C133817 * C1241 - C133818 * C1231 -
                C133817 * C1242 + C152913 * C1249 + C133819 * C2890 -
                C133820 * C2889 - C133819 * C2891 + C133814 * C2892) *
                   C152747) *
                  C152457 * C152530 * C152512 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                 C152912 * C160 + C133817 * C647 - C133818 * C632 -
                 C133817 * C648 + C152913 * C668 + C133819 * C649 -
                 C133820 * C633 - C133819 * C650 + C133814 * C669) *
                    C152845 +
                (C142632 + C142633 + C142634) * C152747) *
                   C152457 * C152530 * C152917 -
               ((C142635 + C142636 + C142637) * C152747 +
                (C142634 + C142633 + C142632) * C152845) *
                   C152457 * C152530 * C152901 +
               ((C142637 + C142636 + C142635) * C152845 +
                (C133815 * C1537 - C133816 * C1526 - C133815 * C1538 +
                 C152912 * C1550 + C133817 * C2269 - C133818 * C2265 -
                 C133817 * C2270 + C152913 * C2277 + C133819 * C8185 -
                 C133820 * C8178 - C133819 * C8186 + C133814 * C8196) *
                    C152747) *
                   C152457 * C152530 * C152870) *
                  C365 +
              (((C134198 + C134197 + C134196) * C152845 +
                (C134199 + C134200 + C134201) * C152747) *
                   C152457 * C152530 * C152901 -
               ((C134196 + C134197 + C134198) * C152747 +
                (C133896 + C133895 + C133894) * C152845) *
                   C152457 * C152530 * C152917 -
               ((C136042 + C136043 + C136044) * C152747 +
                (C134201 + C134200 + C134199) * C152845) *
                   C152457 * C152530 * C152870) *
                  C366 +
              (((C133899 + C133898 + C133897) * C152845 +
                (C134202 + C134203 + C134204) * C152747) *
                   C152457 * C152530 * C152917 -
               ((C134205 + C134206 + C134207) * C152747 +
                (C134204 + C134203 + C134202) * C152845) *
                   C152457 * C152530 * C152901 +
               ((C134207 + C134206 + C134205) * C152845 +
                (C133815 * C1533 - C133816 * C1524 - C133815 * C1534 +
                 C152912 * C1548 + C133817 * C2273 - C133818 * C2267 -
                 C133817 * C2274 + C152913 * C2279 + C133819 * C9823 -
                 C133820 * C9822 - C133819 * C9824 + C133814 * C9825) *
                    C152747) *
                   C152457 * C152530 * C152870) *
                  C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152845 +
            (C142632 + C142633 + C142634) * C152747) *
               C152457 * C152918 -
           ((C133819 * C3213 - C133820 * C3209 - C133819 * C3214 +
             C133814 * C3221 + C133817 * C1719 - C133818 * C1704 -
             C133817 * C1720 + C152913 * C1740 + C133815 * C1233 -
             C133816 * C1227 - C133815 * C1234 + C152912 * C1245) *
                C152747 +
            (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
             C133814 * C2690 + C133817 * C649 - C133818 * C633 -
             C133817 * C650 + C152913 * C669 + C133815 * C647 - C133816 * C632 -
             C133815 * C648 + C152912 * C668) *
                C152845) *
               C152457 * C152903 +
           ((C133815 * C649 - C133816 * C633 - C133815 * C650 + C152912 * C669 +
             C133817 * C2677 - C133818 * C2666 - C133817 * C2678 +
             C152913 * C2690 + C133819 * C2679 - C133820 * C2667 -
             C133819 * C2680 + C133814 * C2691) *
                C152845 +
            (C133815 * C1719 - C133816 * C1704 - C133815 * C1720 +
             C152912 * C1740 + C133817 * C3213 - C133818 * C3209 -
             C133817 * C3214 + C152913 * C3221 + C133819 * C9518 -
             C133820 * C9510 - C133819 * C9519 + C133814 * C9528) *
                C152747) *
               C152457 * C152873) *
              C152512 * C365 +
          (((C134500 + C134499 + C134498) * C152845 +
            (C135266 + C135267 + C135268) * C152747) *
               C152457 * C152903 -
           ((C134196 + C134197 + C134198) * C152747 +
            (C133896 + C133895 + C133894) * C152845) *
               C152457 * C152918 -
           ((C137416 + C137417 + C137418) * C152747 +
            (C134503 + C134502 + C134501) * C152845) *
               C152457 * C152873) *
              C152512 * C366 +
          (((C133899 + C133898 + C133897) * C152845 +
            (C134202 + C134203 + C134204) * C152747) *
               C152457 * C152918 -
           ((C135269 + C135270 + C135271) * C152747 +
            (C134506 + C134505 + C134504) * C152845) *
               C152457 * C152903 +
           ((C134509 + C134508 + C134507) * C152845 +
            (C133815 * C1715 - C133816 * C1702 - C133815 * C1716 +
             C152912 * C1738 + C133817 * C3217 - C133818 * C3211 -
             C133817 * C3218 + C152913 * C3223 + C133819 * C18412 -
             C133820 * C18411 - C133819 * C18413 + C133814 * C18414) *
                C152747) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152845 +
            (C142632 + C142633 + C142634) * C152747) *
               C152457 * C152530 * C1429 -
           ((C142635 + C142636 + C142637) * C152747 +
            (C142634 + C142633 + C142632) * C152845) *
               C152457 * C152530 * C1430 +
           ((C142637 + C142636 + C142635) * C152845 +
            (C133815 * C1537 - C133816 * C1526 - C133815 * C1538 +
             C152912 * C1550 + C133817 * C2269 - C133818 * C2265 -
             C133817 * C2270 + C152913 * C2277 + C133819 * C8185 -
             C133820 * C8178 - C133819 * C8186 + C133814 * C8196) *
                C152747) *
               C152457 * C152530 * C152870) *
              C152914 +
          (((C134198 + C134197 + C134196) * C152845 +
            (C134199 + C134200 + C134201) * C152747) *
               C152457 * C152530 * C1430 -
           ((C134196 + C134197 + C134198) * C152747 +
            (C133896 + C133895 + C133894) * C152845) *
               C152457 * C152530 * C1429 -
           ((C136042 + C136043 + C136044) * C152747 +
            (C134201 + C134200 + C134199) * C152845) *
               C152457 * C152530 * C152870) *
              C152897 +
          (((C133899 + C133898 + C133897) * C152845 +
            (C134202 + C134203 + C134204) * C152747) *
               C152457 * C152530 * C1429 -
           ((C134205 + C134206 + C134207) * C152747 +
            (C134204 + C134203 + C134202) * C152845) *
               C152457 * C152530 * C1430 +
           ((C134207 + C134206 + C134205) * C152845 +
            (C133815 * C1533 - C133816 * C1524 - C133815 * C1534 +
             C152912 * C1548 + C133817 * C2273 - C133818 * C2267 -
             C133817 * C2274 + C152913 * C2279 + C133819 * C9823 -
             C133820 * C9822 - C133819 * C9824 + C133814 * C9825) *
                C152747) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
            C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
            C133819 * C649 - C133820 * C633 - C133819 * C650 + C133814 * C669) *
               C152845 +
           (C142632 + C142633 + C142634) * C152747) *
              C152457 * C152530 * C1517 -
          ((C142635 + C142636 + C142637) * C152747 +
           (C142634 + C142633 + C142632) * C152845) *
              C152457 * C152530 * C1518 +
          ((C142637 + C142636 + C142635) * C152845 +
           (C143931 + C143932 + C143933) * C152747) *
              C152457 * C152530 * C1519 -
          ((C143934 + C143935 + C143936) * C152747 +
           (C143933 + C143932 + C143931) * C152845) *
              C152457 * C152530 * C1520 +
          ((C143936 + C143935 + C143934) * C152845 +
           (C133815 * C7928 - C133816 * C7923 - C133815 * C7929 +
            C152912 * C7935 + C133817 * C8937 - C133818 * C8935 -
            C133817 * C8938 + C152913 * C8941 + C133819 * C60551 -
            C133820 * C60550 - C133819 * C60552 + C133814 * C60553) *
               C152747) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152845 +
            (C142632 + C142633 + C142634) * C152747) *
               C152457 * C152918 -
           ((C143552 + C143553 + C143554) * C152747 +
            (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
             C133814 * C2690 + C133817 * C649 - C133818 * C633 -
             C133817 * C650 + C152913 * C669 + C133815 * C647 - C133816 * C632 -
             C133815 * C648 + C152912 * C668) *
                C152845) *
               C152457 * C152903 +
           ((C133815 * C649 - C133816 * C633 - C133815 * C650 + C152912 * C669 +
             C133817 * C2677 - C133818 * C2666 - C133817 * C2678 +
             C152913 * C2690 + C133819 * C2679 - C133820 * C2667 -
             C133819 * C2680 + C133814 * C2691) *
                C152845 +
            (C144209 + C144210 + C144211) * C152747) *
               C152457 * C152873) *
              C1429 +
          (((C143554 + C143553 + C143552) * C152845 +
            (C144212 + C144213 + C144214) * C152747) *
               C152457 * C152903 -
           ((C142635 + C142636 + C142637) * C152747 +
            (C142634 + C142633 + C142632) * C152845) *
               C152457 * C152918 -
           ((C144215 + C144216 + C144217) * C152747 +
            (C144211 + C144210 + C144209) * C152845) *
               C152457 * C152873) *
              C1430 +
          (((C142637 + C142636 + C142635) * C152845 +
            (C143931 + C143932 + C143933) * C152747) *
               C152457 * C152918 -
           ((C133819 * C10240 - C133820 * C10238 - C133819 * C10241 +
             C133814 * C10244 + C133817 * C8185 - C133818 * C8178 -
             C133817 * C8186 + C152913 * C8196 + C133815 * C2269 -
             C133816 * C2265 - C133815 * C2270 + C152912 * C2277) *
                C152747 +
            (C144214 + C144213 + C144212) * C152845) *
               C152457 * C152903 +
           ((C144217 + C144216 + C144215) * C152845 +
            (C133815 * C8185 - C133816 * C8178 - C133815 * C8186 +
             C152912 * C8196 + C133817 * C10240 - C133818 * C10238 -
             C133817 * C10241 + C152913 * C10244 + C133819 * C61401 -
             C133820 * C61400 - C133819 * C61402 + C133814 * C61403) *
                C152747) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152845 +
            (C142632 + C142633 + C142634) * C152747) *
               C152457 * C2427 -
           ((C143552 + C143553 + C143554) * C152747 +
            (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
             C133814 * C2690 + C133817 * C649 - C133818 * C633 -
             C133817 * C650 + C152913 * C669 + C133815 * C647 - C133816 * C632 -
             C133815 * C648 + C152912 * C668) *
                C152845) *
               C152457 * C2428 +
           ((C133815 * C649 - C133816 * C633 - C133815 * C650 + C152912 * C669 +
             C133817 * C2677 - C133818 * C2666 - C133817 * C2678 +
             C152913 * C2690 + C133819 * C2679 - C133820 * C2667 -
             C133819 * C2680 + C133814 * C2691) *
                C152845 +
            (C144209 + C144210 + C144211) * C152747) *
               C152457 * C152873) *
              C152512 * C152914 +
          (((C134500 + C134499 + C134498) * C152845 +
            (C135266 + C135267 + C135268) * C152747) *
               C152457 * C2428 -
           ((C134196 + C134197 + C134198) * C152747 +
            (C133896 + C133895 + C133894) * C152845) *
               C152457 * C2427 -
           ((C137416 + C137417 + C137418) * C152747 +
            (C134503 + C134502 + C134501) * C152845) *
               C152457 * C152873) *
              C152512 * C152897 +
          (((C133899 + C133898 + C133897) * C152845 +
            (C134202 + C134203 + C134204) * C152747) *
               C152457 * C2427 -
           ((C135269 + C135270 + C135271) * C152747 +
            (C134506 + C134505 + C134504) * C152845) *
               C152457 * C2428 +
           ((C134509 + C134508 + C134507) * C152845 +
            (C133815 * C1715 - C133816 * C1702 - C133815 * C1716 +
             C152912 * C1738 + C133817 * C3217 - C133818 * C3211 -
             C133817 * C3218 + C152913 * C3223 + C133819 * C18412 -
             C133820 * C18411 - C133819 * C18413 + C133814 * C18414) *
                C152747) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152845 +
            (C142632 + C142633 + C142634) * C152747) *
               C152457 * C2427 -
           ((C143552 + C143553 + C143554) * C152747 +
            (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
             C133814 * C2690 + C133817 * C649 - C133818 * C633 -
             C133817 * C650 + C152913 * C669 + C133815 * C647 - C133816 * C632 -
             C133815 * C648 + C152912 * C668) *
                C152845) *
               C152457 * C2428 +
           ((C133815 * C649 - C133816 * C633 - C133815 * C650 + C152912 * C669 +
             C133817 * C2677 - C133818 * C2666 - C133817 * C2678 +
             C152913 * C2690 + C133819 * C2679 - C133820 * C2667 -
             C133819 * C2680 + C133814 * C2691) *
                C152845 +
            (C144209 + C144210 + C144211) * C152747) *
               C152457 * C152873) *
              C152917 +
          (((C143554 + C143553 + C143552) * C152845 +
            (C144212 + C144213 + C144214) * C152747) *
               C152457 * C2428 -
           ((C142635 + C142636 + C142637) * C152747 +
            (C142634 + C142633 + C142632) * C152845) *
               C152457 * C2427 -
           ((C144215 + C144216 + C144217) * C152747 +
            (C144211 + C144210 + C144209) * C152845) *
               C152457 * C152873) *
              C152901 +
          (((C142637 + C142636 + C142635) * C152845 +
            (C143931 + C143932 + C143933) * C152747) *
               C152457 * C2427 -
           ((C144914 + C144915 + C144916) * C152747 +
            (C144214 + C144213 + C144212) * C152845) *
               C152457 * C2428 +
           ((C144217 + C144216 + C144215) * C152845 +
            (C133815 * C8185 - C133816 * C8178 - C133815 * C8186 +
             C152912 * C8196 + C133817 * C10240 - C133818 * C10238 -
             C133817 * C10241 + C152913 * C10244 + C133819 * C61401 -
             C133820 * C61400 - C133819 * C61402 + C133814 * C61403) *
                C152747) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
            C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
            C133819 * C649 - C133820 * C633 - C133819 * C650 + C133814 * C669) *
               C152845 +
           (C142632 + C142633 + C142634) * C152747) *
              C152457 * C2658 -
          ((C143552 + C143553 + C143554) * C152747 +
           (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
            C133814 * C2690 + C133817 * C649 - C133818 * C633 - C133817 * C650 +
            C152913 * C669 + C133815 * C647 - C133816 * C632 - C133815 * C648 +
            C152912 * C668) *
               C152845) *
              C152457 * C2659 +
          ((C133815 * C649 - C133816 * C633 - C133815 * C650 + C152912 * C669 +
            C133817 * C2677 - C133818 * C2666 - C133817 * C2678 +
            C152913 * C2690 + C133819 * C2679 - C133820 * C2667 -
            C133819 * C2680 + C133814 * C2691) *
               C152845 +
           (C144209 + C144210 + C144211) * C152747) *
              C152457 * C2660 -
          ((C133819 * C18851 - C133820 * C18849 - C133819 * C18852 +
            C133814 * C18855 + C133817 * C9518 - C133818 * C9510 -
            C133817 * C9519 + C152913 * C9528 + C133815 * C3213 -
            C133816 * C3209 - C133815 * C3214 + C152912 * C3221) *
               C152747 +
           (C133819 * C18111 - C133820 * C18106 - C133819 * C18112 +
            C133814 * C18118 + C133817 * C2679 - C133818 * C2667 -
            C133817 * C2680 + C152913 * C2691 + C133815 * C2677 -
            C133816 * C2666 - C133815 * C2678 + C152912 * C2690) *
               C152845) *
              C152457 * C2661 +
          ((C133815 * C2679 - C133816 * C2667 - C133815 * C2680 +
            C152912 * C2691 + C133817 * C18111 - C133818 * C18106 -
            C133817 * C18112 + C152913 * C18118 + C133819 * C18113 -
            C133820 * C18107 - C133819 * C18114 + C133814 * C18119) *
               C152845 +
           (C133815 * C9518 - C133816 * C9510 - C133815 * C9519 +
            C152912 * C9528 + C133817 * C18851 - C133818 * C18849 -
            C133817 * C18852 + C152913 * C18855 + C133819 * C68053 -
            C133820 * C68052 - C133819 * C68054 + C133814 * C68055) *
               C152747) *
              C152457 * C2662) *
         C152512 * C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[288] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152845 +
                      (C142632 + C142633 + C142634) * C152747) *
                         C152457 * C152829 -
                     ((C143552 + C143553 + C143554) * C152747 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152845) *
                         C152457 * C152617) *
                        C1429 +
                    (((C143554 + C143553 + C143552) * C152845 +
                      (C144212 + C144213 + C144214) * C152747) *
                         C152457 * C152617 -
                     ((C142635 + C142636 + C142637) * C152747 +
                      (C142634 + C142633 + C142632) * C152845) *
                         C152457 * C152829) *
                        C1430 +
                    (((C142637 + C142636 + C142635) * C152845 +
                      (C143931 + C143932 + C143933) * C152747) *
                         C152457 * C152829 -
                     ((C133819 * C10240 - C133820 * C10238 - C133819 * C10241 +
                       C133814 * C10244 + C133817 * C8185 - C133818 * C8178 -
                       C133817 * C8186 + C152913 * C8196 + C133815 * C2269 -
                       C133816 * C2265 - C133815 * C2270 + C152912 * C2277) *
                          C152747 +
                      (C144214 + C144213 + C144212) * C152845) *
                         C152457 * C152617) *
                        C152870) *
                       C152814 +
                   ((((C134500 + C134499 + C134498) * C152845 +
                      (C135266 + C135267 + C135268) * C152747) *
                         C152457 * C152617 -
                     ((C134196 + C134197 + C134198) * C152747 +
                      (C133896 + C133895 + C133894) * C152845) *
                         C152457 * C152829) *
                        C1429 +
                    (((C134198 + C134197 + C134196) * C152845 +
                      (C134199 + C134200 + C134201) * C152747) *
                         C152457 * C152829 -
                     ((C136353 + C136354 + C136355) * C152747 +
                      (C135268 + C135267 + C135266) * C152845) *
                         C152457 * C152617) *
                        C1430 +
                    (((C136355 + C136354 + C136353) * C152845 +
                      (C133815 * C2271 - C133816 * C2266 - C133815 * C2272 +
                       C152912 * C2278 + C133817 * C8183 - C133818 * C8177 -
                       C133817 * C8184 + C152913 * C8195 + C133819 * C10242 -
                       C133820 * C10239 - C133819 * C10243 + C133814 * C10245) *
                          C152747) *
                         C152457 * C152617 -
                     ((C136042 + C136043 + C136044) * C152747 +
                      (C134201 + C134200 + C134199) * C152845) *
                         C152457 * C152829) *
                        C152870) *
                       C152495)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152845 +
                     (C142632 + C142633 + C142634) * C152747) *
                        C152457 * C152829 -
                    ((C133819 * C3213 - C133820 * C3209 - C133819 * C3214 +
                      C133814 * C3221 + C133817 * C1719 - C133818 * C1704 -
                      C133817 * C1720 + C152913 * C1740 + C133815 * C1233 -
                      C133816 * C1227 - C133815 * C1234 + C152912 * C1245) *
                         C152747 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152845) *
                        C152457 * C152617) *
                       C152512 * C873 +
                   (((C134500 + C134499 + C134498) * C152845 +
                     (C135266 + C135267 + C135268) * C152747) *
                        C152457 * C152617 -
                    ((C134196 + C134197 + C134198) * C152747 +
                     (C133896 + C133895 + C133894) * C152845) *
                        C152457 * C152829) *
                       C152512 * C874 +
                   (((C133899 + C133898 + C133897) * C152845 +
                     (C134202 + C134203 + C134204) * C152747) *
                        C152457 * C152829 -
                    ((C135269 + C135270 + C135271) * C152747 +
                     (C134506 + C134505 + C134504) * C152845) *
                        C152457 * C152617) *
                       C152512 * C875 +
                   (((C134939 + C134938 + C134937) * C152845 +
                     (C133815 * C1239 - C133816 * C1230 - C133815 * C1240 +
                      C152912 * C1248 + C133817 * C1713 - C133818 * C1701 -
                      C133817 * C1714 + C152913 * C1737 + C133819 * C3219 -
                      C133820 * C3212 - C133819 * C3220 + C133814 * C3224) *
                         C152747) *
                        C152457 * C152617 -
                    ((C134722 + C134723 + C134724) * C152747 +
                     (C133902 + C133901 + C133900) * C152845) *
                        C152457 * C152829) *
                       C152512 * C152874)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152845 +
                     (C142632 + C142633 + C142634) * C152747) *
                        C152457 * C3047 -
                    ((C143552 + C143553 + C143554) * C152747 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152845) *
                        C152457 * C3048 +
                    ((C133815 * C649 - C133816 * C633 - C133815 * C650 +
                      C152912 * C669 + C133817 * C2677 - C133818 * C2666 -
                      C133817 * C2678 + C152913 * C2690 + C133819 * C2679 -
                      C133820 * C2667 - C133819 * C2680 + C133814 * C2691) *
                         C152845 +
                     (C144209 + C144210 + C144211) * C152747) *
                        C152457 * C3049 -
                    ((C133819 * C18851 - C133820 * C18849 - C133819 * C18852 +
                      C133814 * C18855 + C133817 * C9518 - C133818 * C9510 -
                      C133817 * C9519 + C152913 * C9528 + C133815 * C3213 -
                      C133816 * C3209 - C133815 * C3214 + C152912 * C3221) *
                         C152747 +
                     (C133819 * C18111 - C133820 * C18106 - C133819 * C18112 +
                      C133814 * C18118 + C133817 * C2679 - C133818 * C2667 -
                      C133817 * C2680 + C152913 * C2691 + C133815 * C2677 -
                      C133816 * C2666 - C133815 * C2678 + C152912 * C2690) *
                         C152845) *
                        C152457 * C152886) *
                       C152512 * C152814 +
                   (((C134500 + C134499 + C134498) * C152845 +
                     (C135266 + C135267 + C135268) * C152747) *
                        C152457 * C3048 -
                    ((C134196 + C134197 + C134198) * C152747 +
                     (C133896 + C133895 + C133894) * C152845) *
                        C152457 * C3047 -
                    ((C137416 + C137417 + C137418) * C152747 +
                     (C134503 + C134502 + C134501) * C152845) *
                        C152457 * C3049 +
                    ((C137633 + C137632 + C137631) * C152845 +
                     (C133815 * C3215 - C133816 * C3210 - C133815 * C3216 +
                      C152912 * C3222 + C133817 * C9522 - C133818 * C9512 -
                      C133817 * C9523 + C152913 * C9530 + C133819 * C18853 -
                      C133820 * C18850 - C133819 * C18854 + C133814 * C18856) *
                         C152747) *
                        C152457 * C152886) *
                       C152512 * C152495)) /
                     (p * q * std::sqrt(p + q));
    d2ee[289] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152845 +
            (C142632 + C142633 + C142634) * C152747) *
               C152457 * C152530 * C152917 -
           ((C142635 + C142636 + C142637) * C152747 +
            (C142634 + C142633 + C142632) * C152845) *
               C152457 * C152530 * C152901 +
           ((C142637 + C142636 + C142635) * C152845 +
            (C133815 * C1537 - C133816 * C1526 - C133815 * C1538 +
             C152912 * C1550 + C133817 * C2269 - C133818 * C2265 -
             C133817 * C2270 + C152913 * C2277 + C133819 * C8185 -
             C133820 * C8178 - C133819 * C8186 + C133814 * C8196) *
                C152747) *
               C152457 * C152530 * C152870) *
              C365 +
          (((C134198 + C134197 + C134196) * C152845 +
            (C134199 + C134200 + C134201) * C152747) *
               C152457 * C152530 * C152901 -
           ((C134196 + C134197 + C134198) * C152747 +
            (C133896 + C133895 + C133894) * C152845) *
               C152457 * C152530 * C152917 -
           ((C136042 + C136043 + C136044) * C152747 +
            (C134201 + C134200 + C134199) * C152845) *
               C152457 * C152530 * C152870) *
              C366 +
          (((C133899 + C133898 + C133897) * C152845 +
            (C134202 + C134203 + C134204) * C152747) *
               C152457 * C152530 * C152917 -
           ((C134205 + C134206 + C134207) * C152747 +
            (C134204 + C134203 + C134202) * C152845) *
               C152457 * C152530 * C152901 +
           ((C134207 + C134206 + C134205) * C152845 +
            (C133815 * C1533 - C133816 * C1524 - C133815 * C1534 +
             C152912 * C1548 + C133817 * C2273 - C133818 * C2267 -
             C133817 * C2274 + C152913 * C2279 + C133819 * C9823 -
             C133820 * C9822 - C133819 * C9824 + C133814 * C9825) *
                C152747) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
            C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
            C133819 * C649 - C133820 * C633 - C133819 * C650 + C133814 * C669) *
               C152845 +
           (C133815 * C386 - C133816 * C371 - C133815 * C387 + C152912 * C407 +
            C133817 * C1233 - C133818 * C1227 - C133817 * C1234 +
            C152913 * C1245 + C133819 * C1719 - C133820 * C1704 -
            C133819 * C1720 + C133814 * C1740) *
               C152747) *
              C152457 * C152530 * C152512 * C129 -
          ((C134196 + C134197 + C134198) * C152747 +
           (C133896 + C133895 + C133894) * C152845) *
              C152457 * C152530 * C152512 * C130 +
          ((C133899 + C133898 + C133897) * C152845 +
           (C134202 + C134203 + C134204) * C152747) *
              C152457 * C152530 * C152512 * C131 -
          ((C134722 + C134723 + C134724) * C152747 +
           (C133902 + C133901 + C133900) * C152845) *
              C152457 * C152530 * C152512 * C132 +
          ((C133905 + C133904 + C133903) * C152845 +
           (C133815 * C396 - C133816 * C376 - C133815 * C397 + C152912 * C412 +
            C133817 * C1241 - C133818 * C1231 - C133817 * C1242 +
            C152913 * C1249 + C133819 * C2890 - C133820 * C2889 -
            C133819 * C2891 + C133814 * C2892) *
               C152747) *
              C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152845 +
            (C142632 + C142633 + C142634) * C152747) *
               C152457 * C152530 * C1429 -
           ((C142635 + C142636 + C142637) * C152747 +
            (C142634 + C142633 + C142632) * C152845) *
               C152457 * C152530 * C1430 +
           ((C142637 + C142636 + C142635) * C152845 +
            (C133815 * C1537 - C133816 * C1526 - C133815 * C1538 +
             C152912 * C1550 + C133817 * C2269 - C133818 * C2265 -
             C133817 * C2270 + C152913 * C2277 + C133819 * C8185 -
             C133820 * C8178 - C133819 * C8186 + C133814 * C8196) *
                C152747) *
               C152457 * C152530 * C152870) *
              C152914 +
          (((C134198 + C134197 + C134196) * C152845 +
            (C134199 + C134200 + C134201) * C152747) *
               C152457 * C152530 * C1430 -
           ((C134196 + C134197 + C134198) * C152747 +
            (C133896 + C133895 + C133894) * C152845) *
               C152457 * C152530 * C1429 -
           ((C136042 + C136043 + C136044) * C152747 +
            (C134201 + C134200 + C134199) * C152845) *
               C152457 * C152530 * C152870) *
              C152897 +
          (((C133899 + C133898 + C133897) * C152845 +
            (C134202 + C134203 + C134204) * C152747) *
               C152457 * C152530 * C1429 -
           ((C134205 + C134206 + C134207) * C152747 +
            (C134204 + C134203 + C134202) * C152845) *
               C152457 * C152530 * C1430 +
           ((C134207 + C134206 + C134205) * C152845 +
            (C133815 * C1533 - C133816 * C1524 - C133815 * C1534 +
             C152912 * C1548 + C133817 * C2273 - C133818 * C2267 -
             C133817 * C2274 + C152913 * C2279 + C133819 * C9823 -
             C133820 * C9822 - C133819 * C9824 + C133814 * C9825) *
                C152747) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
            C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
            C133819 * C649 - C133820 * C633 - C133819 * C650 + C133814 * C669) *
               C152845 +
           (C142632 + C142633 + C142634) * C152747) *
              C152457 * C152530 * C1517 -
          ((C142635 + C142636 + C142637) * C152747 +
           (C142634 + C142633 + C142632) * C152845) *
              C152457 * C152530 * C1518 +
          ((C142637 + C142636 + C142635) * C152845 +
           (C143931 + C143932 + C143933) * C152747) *
              C152457 * C152530 * C1519 -
          ((C143934 + C143935 + C143936) * C152747 +
           (C143933 + C143932 + C143931) * C152845) *
              C152457 * C152530 * C1520 +
          ((C143936 + C143935 + C143934) * C152845 +
           (C133815 * C7928 - C133816 * C7923 - C133815 * C7929 +
            C152912 * C7935 + C133817 * C8937 - C133818 * C8935 -
            C133817 * C8938 + C152913 * C8941 + C133819 * C60551 -
            C133820 * C60550 - C133819 * C60552 + C133814 * C60553) *
               C152747) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152845 +
            (C142632 + C142633 + C142634) * C152747) *
               C152457 * C2427 -
           ((C143552 + C143553 + C143554) * C152747 +
            (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
             C133814 * C2690 + C133817 * C649 - C133818 * C633 -
             C133817 * C650 + C152913 * C669 + C133815 * C647 - C133816 * C632 -
             C133815 * C648 + C152912 * C668) *
                C152845) *
               C152457 * C2428 +
           ((C133815 * C649 - C133816 * C633 - C133815 * C650 + C152912 * C669 +
             C133817 * C2677 - C133818 * C2666 - C133817 * C2678 +
             C152913 * C2690 + C133819 * C2679 - C133820 * C2667 -
             C133819 * C2680 + C133814 * C2691) *
                C152845 +
            (C144209 + C144210 + C144211) * C152747) *
               C152457 * C152873) *
              C152512 * C152914 +
          (((C134500 + C134499 + C134498) * C152845 +
            (C135266 + C135267 + C135268) * C152747) *
               C152457 * C2428 -
           ((C134196 + C134197 + C134198) * C152747 +
            (C133896 + C133895 + C133894) * C152845) *
               C152457 * C2427 -
           ((C137416 + C137417 + C137418) * C152747 +
            (C134503 + C134502 + C134501) * C152845) *
               C152457 * C152873) *
              C152512 * C152897 +
          (((C133899 + C133898 + C133897) * C152845 +
            (C134202 + C134203 + C134204) * C152747) *
               C152457 * C2427 -
           ((C135269 + C135270 + C135271) * C152747 +
            (C134506 + C134505 + C134504) * C152845) *
               C152457 * C2428 +
           ((C134509 + C134508 + C134507) * C152845 +
            (C133815 * C1715 - C133816 * C1702 - C133815 * C1716 +
             C152912 * C1738 + C133817 * C3217 - C133818 * C3211 -
             C133817 * C3218 + C152913 * C3223 + C133819 * C18412 -
             C133820 * C18411 - C133819 * C18413 + C133814 * C18414) *
                C152747) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152845 +
            (C142632 + C142633 + C142634) * C152747) *
               C152457 * C2427 -
           ((C143552 + C143553 + C143554) * C152747 +
            (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
             C133814 * C2690 + C133817 * C649 - C133818 * C633 -
             C133817 * C650 + C152913 * C669 + C133815 * C647 - C133816 * C632 -
             C133815 * C648 + C152912 * C668) *
                C152845) *
               C152457 * C2428 +
           ((C133815 * C649 - C133816 * C633 - C133815 * C650 + C152912 * C669 +
             C133817 * C2677 - C133818 * C2666 - C133817 * C2678 +
             C152913 * C2690 + C133819 * C2679 - C133820 * C2667 -
             C133819 * C2680 + C133814 * C2691) *
                C152845 +
            (C144209 + C144210 + C144211) * C152747) *
               C152457 * C152873) *
              C152917 +
          (((C143554 + C143553 + C143552) * C152845 +
            (C144212 + C144213 + C144214) * C152747) *
               C152457 * C2428 -
           ((C142635 + C142636 + C142637) * C152747 +
            (C142634 + C142633 + C142632) * C152845) *
               C152457 * C2427 -
           ((C144215 + C144216 + C144217) * C152747 +
            (C144211 + C144210 + C144209) * C152845) *
               C152457 * C152873) *
              C152901 +
          (((C142637 + C142636 + C142635) * C152845 +
            (C143931 + C143932 + C143933) * C152747) *
               C152457 * C2427 -
           ((C144914 + C144915 + C144916) * C152747 +
            (C144214 + C144213 + C144212) * C152845) *
               C152457 * C2428 +
           ((C144217 + C144216 + C144215) * C152845 +
            (C133815 * C8185 - C133816 * C8178 - C133815 * C8186 +
             C152912 * C8196 + C133817 * C10240 - C133818 * C10238 -
             C133817 * C10241 + C152913 * C10244 + C133819 * C61401 -
             C133820 * C61400 - C133819 * C61402 + C133814 * C61403) *
                C152747) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[290] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152845 +
                      (C142632 + C142633 + C142634) * C152747) *
                         C152457 * C4361 -
                     ((C143552 + C143553 + C143554) * C152747 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152845) *
                         C152457 * C152617) *
                        C152828 +
                    (((C143554 + C143553 + C143552) * C152845 +
                      (C144212 + C144213 + C144214) * C152747) *
                         C152457 * C152617 -
                     ((C142635 + C142636 + C142637) * C152747 +
                      (C142634 + C142633 + C142632) * C152845) *
                         C152457 * C4361) *
                        C152575) *
                       C152489 +
                   ((((C134500 + C134499 + C134498) * C152845 +
                      (C135266 + C135267 + C135268) * C152747) *
                         C152457 * C152617 -
                     ((C134196 + C134197 + C134198) * C152747 +
                      (C133896 + C133895 + C133894) * C152845) *
                         C152457 * C4361) *
                        C152828 +
                    (((C134198 + C134197 + C134196) * C152845 +
                      (C134199 + C134200 + C134201) * C152747) *
                         C152457 * C4361 -
                     ((C136353 + C136354 + C136355) * C152747 +
                      (C135268 + C135267 + C135266) * C152845) *
                         C152457 * C152617) *
                        C152575) *
                       C152498 +
                   ((((C133899 + C133898 + C133897) * C152845 +
                      (C134202 + C134203 + C134204) * C152747) *
                         C152457 * C4361 -
                     ((C135269 + C135270 + C135271) * C152747 +
                      (C134506 + C134505 + C134504) * C152845) *
                         C152457 * C152617) *
                        C152828 +
                    (((C135271 + C135270 + C135269) * C152845 +
                      (C133815 * C1723 - C133816 * C1706 - C133815 * C1724 +
                       C152912 * C1742 + C133817 * C1733 - C133818 * C1711 -
                       C133817 * C1734 + C152913 * C1747 + C133819 * C10024 -
                       C133820 * C10023 - C133819 * C10025 + C133814 * C10026) *
                          C152747) *
                         C152457 * C152617 -
                     ((C134205 + C134206 + C134207) * C152747 +
                      (C134204 + C134203 + C134202) * C152845) *
                         C152457 * C4361) *
                        C152575) *
                       C3842)) /
                 (p * q * std::sqrt(p + q));
    d2ee[291] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152845 +
                      (C142632 + C142633 + C142634) * C152747) *
                         C152457 * C152613 -
                     ((C143552 + C143553 + C143554) * C152747 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152845) *
                         C152457 * C152620 +
                     ((C133815 * C649 - C133816 * C633 - C133815 * C650 +
                       C152912 * C669 + C133817 * C2677 - C133818 * C2666 -
                       C133817 * C2678 + C152913 * C2690 + C133819 * C2679 -
                       C133820 * C2667 - C133819 * C2680 + C133814 * C2691) *
                          C152845 +
                      (C144209 + C144210 + C144211) * C152747) *
                         C152457 * C5033) *
                        C152828 +
                    (((C143554 + C143553 + C143552) * C152845 +
                      (C144212 + C144213 + C144214) * C152747) *
                         C152457 * C152620 -
                     ((C142635 + C142636 + C142637) * C152747 +
                      (C142634 + C142633 + C142632) * C152845) *
                         C152457 * C152613 -
                     ((C144215 + C144216 + C144217) * C152747 +
                      (C144211 + C144210 + C144209) * C152845) *
                         C152457 * C5033) *
                        C152575) *
                       C3495 +
                   ((((C134500 + C134499 + C134498) * C152845 +
                      (C135266 + C135267 + C135268) * C152747) *
                         C152457 * C152620 -
                     ((C134196 + C134197 + C134198) * C152747 +
                      (C133896 + C133895 + C133894) * C152845) *
                         C152457 * C152613 -
                     ((C137416 + C137417 + C137418) * C152747 +
                      (C134503 + C134502 + C134501) * C152845) *
                         C152457 * C5033) *
                        C152828 +
                    (((C134198 + C134197 + C134196) * C152845 +
                      (C134199 + C134200 + C134201) * C152747) *
                         C152457 * C152613 -
                     ((C136353 + C136354 + C136355) * C152747 +
                      (C135268 + C135267 + C135266) * C152845) *
                         C152457 * C152620 +
                     ((C137418 + C137417 + C137416) * C152845 +
                      (C133815 * C1731 - C133816 * C1710 - C133815 * C1732 +
                       C152912 * C1746 + C133817 * C9514 - C133818 * C9508 -
                       C133817 * C9515 + C152913 * C9526 + C133819 * C9524 -
                       C133820 * C9513 - C133819 * C9525 + C133814 * C9531) *
                          C152747) *
                         C152457 * C5033) *
                        C152575) *
                       C152495)) /
                 (p * q * std::sqrt(p + q));
    d2ee[292] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152845 +
                      (C142632 + C142633 + C142634) * C152747) *
                         C152457 * C4361 -
                     ((C143552 + C143553 + C143554) * C152747 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152845) *
                         C152457 * C152617) *
                        C152917 +
                    (((C143554 + C143553 + C143552) * C152845 +
                      (C144212 + C144213 + C144214) * C152747) *
                         C152457 * C152617 -
                     ((C142635 + C142636 + C142637) * C152747 +
                      (C142634 + C142633 + C142632) * C152845) *
                         C152457 * C4361) *
                        C152901 +
                    (((C142637 + C142636 + C142635) * C152845 +
                      (C143931 + C143932 + C143933) * C152747) *
                         C152457 * C4361 -
                     ((C144914 + C144915 + C144916) * C152747 +
                      (C144214 + C144213 + C144212) * C152845) *
                         C152457 * C152617) *
                        C152870) *
                       C3495 +
                   ((((C134500 + C134499 + C134498) * C152845 +
                      (C135266 + C135267 + C135268) * C152747) *
                         C152457 * C152617 -
                     ((C134196 + C134197 + C134198) * C152747 +
                      (C133896 + C133895 + C133894) * C152845) *
                         C152457 * C4361) *
                        C152917 +
                    (((C134198 + C134197 + C134196) * C152845 +
                      (C134199 + C134200 + C134201) * C152747) *
                         C152457 * C4361 -
                     ((C136353 + C136354 + C136355) * C152747 +
                      (C135268 + C135267 + C135266) * C152845) *
                         C152457 * C152617) *
                        C152901 +
                    (((C136355 + C136354 + C136353) * C152845 +
                      (C133815 * C2271 - C133816 * C2266 - C133815 * C2272 +
                       C152912 * C2278 + C133817 * C8183 - C133818 * C8177 -
                       C133817 * C8184 + C152913 * C8195 + C133819 * C10242 -
                       C133820 * C10239 - C133819 * C10243 + C133814 * C10245) *
                          C152747) *
                         C152457 * C152617 -
                     ((C136042 + C136043 + C136044) * C152747 +
                      (C134201 + C134200 + C134199) * C152845) *
                         C152457 * C4361) *
                        C152870) *
                       C152495)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152845 +
                     (C142632 + C142633 + C142634) * C152747) *
                        C152457 * C4361 -
                    ((C143552 + C143553 + C143554) * C152747 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152845) *
                        C152457 * C152617) *
                       C152512 * C152923 +
                   (((C134500 + C134499 + C134498) * C152845 +
                     (C135266 + C135267 + C135268) * C152747) *
                        C152457 * C152617 -
                    ((C134196 + C134197 + C134198) * C152747 +
                     (C133896 + C133895 + C133894) * C152845) *
                        C152457 * C4361) *
                       C152512 * C152916 +
                   (((C133899 + C133898 + C133897) * C152845 +
                     (C134202 + C134203 + C134204) * C152747) *
                        C152457 * C4361 -
                    ((C135269 + C135270 + C135271) * C152747 +
                     (C134506 + C134505 + C134504) * C152845) *
                        C152457 * C152617) *
                       C152512 * C152899 +
                   (((C134939 + C134938 + C134937) * C152845 +
                     (C133815 * C1239 - C133816 * C1230 - C133815 * C1240 +
                      C152912 * C1248 + C133817 * C1713 - C133818 * C1701 -
                      C133817 * C1714 + C152913 * C1737 + C133819 * C3219 -
                      C133820 * C3212 - C133819 * C3220 + C133814 * C3224) *
                         C152747) *
                        C152457 * C152617 -
                    ((C134722 + C134723 + C134724) * C152747 +
                     (C133902 + C133901 + C133900) * C152845) *
                        C152457 * C4361) *
                       C152512 * C152874)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152845 +
                     (C142632 + C142633 + C142634) * C152747) *
                        C152457 * C152925 -
                    ((C143552 + C143553 + C143554) * C152747 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152845) *
                        C152457 * C152922 +
                    ((C133815 * C649 - C133816 * C633 - C133815 * C650 +
                      C152912 * C669 + C133817 * C2677 - C133818 * C2666 -
                      C133817 * C2678 + C152913 * C2690 + C133819 * C2679 -
                      C133820 * C2667 - C133819 * C2680 + C133814 * C2691) *
                         C152845 +
                     (C144209 + C144210 + C144211) * C152747) *
                        C152457 * C152909 -
                    ((C146171 + C146172 + C146173) * C152747 +
                     (C133819 * C18111 - C133820 * C18106 - C133819 * C18112 +
                      C133814 * C18118 + C133817 * C2679 - C133818 * C2667 -
                      C133817 * C2680 + C152913 * C2691 + C133815 * C2677 -
                      C133816 * C2666 - C133815 * C2678 + C152912 * C2690) *
                         C152845) *
                        C152457 * C152886) *
                       C152512 * C3495 +
                   (((C134500 + C134499 + C134498) * C152845 +
                     (C135266 + C135267 + C135268) * C152747) *
                        C152457 * C152922 -
                    ((C134196 + C134197 + C134198) * C152747 +
                     (C133896 + C133895 + C133894) * C152845) *
                        C152457 * C152925 -
                    ((C137416 + C137417 + C137418) * C152747 +
                     (C134503 + C134502 + C134501) * C152845) *
                        C152457 * C152909 +
                    ((C137633 + C137632 + C137631) * C152845 +
                     (C133815 * C3215 - C133816 * C3210 - C133815 * C3216 +
                      C152912 * C3222 + C133817 * C9522 - C133818 * C9512 -
                      C133817 * C9523 + C152913 * C9530 + C133819 * C18853 -
                      C133820 * C18850 - C133819 * C18854 + C133814 * C18856) *
                         C152747) *
                        C152457 * C152886) *
                       C152512 * C152495)) /
                     (p * q * std::sqrt(p + q));
    d2ee[293] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152845 +
                     (C142632 + C142633 + C142634) * C152747) *
                        C152457 * C152613 -
                    ((C143552 + C143553 + C143554) * C152747 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152845) *
                        C152457 * C152620 +
                    ((C133815 * C649 - C133816 * C633 - C133815 * C650 +
                      C152912 * C669 + C133817 * C2677 - C133818 * C2666 -
                      C133817 * C2678 + C152913 * C2690 + C133819 * C2679 -
                      C133820 * C2667 - C133819 * C2680 + C133814 * C2691) *
                         C152845 +
                     (C144209 + C144210 + C144211) * C152747) *
                        C152457 * C5033) *
                       C152512 * C152489 +
                   (((C134500 + C134499 + C134498) * C152845 +
                     (C135266 + C135267 + C135268) * C152747) *
                        C152457 * C152620 -
                    ((C134196 + C134197 + C134198) * C152747 +
                     (C133896 + C133895 + C133894) * C152845) *
                        C152457 * C152613 -
                    ((C137416 + C137417 + C137418) * C152747 +
                     (C134503 + C134502 + C134501) * C152845) *
                        C152457 * C5033) *
                       C152512 * C152498 +
                   (((C133899 + C133898 + C133897) * C152845 +
                     (C134202 + C134203 + C134204) * C152747) *
                        C152457 * C152613 -
                    ((C135269 + C135270 + C135271) * C152747 +
                     (C134506 + C134505 + C134504) * C152845) *
                        C152457 * C152620 +
                    ((C134509 + C134508 + C134507) * C152845 +
                     (C133815 * C1715 - C133816 * C1702 - C133815 * C1716 +
                      C152912 * C1738 + C133817 * C3217 - C133818 * C3211 -
                      C133817 * C3218 + C152913 * C3223 + C133819 * C18412 -
                      C133820 * C18411 - C133819 * C18413 + C133814 * C18414) *
                         C152747) *
                        C152457 * C5033) *
                       C152512 * C3842)) /
                 (p * q * std::sqrt(p + q));
    d2ee[294] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152845 +
                     (C142632 + C142633 + C142634) * C152747) *
                        C152457 * C4361 -
                    ((C143552 + C143553 + C143554) * C152747 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152845) *
                        C152457 * C152617) *
                       C152512 * C152923 +
                   (((C134500 + C134499 + C134498) * C152845 +
                     (C135266 + C135267 + C135268) * C152747) *
                        C152457 * C152617 -
                    ((C134196 + C134197 + C134198) * C152747 +
                     (C133896 + C133895 + C133894) * C152845) *
                        C152457 * C4361) *
                       C152512 * C152916 +
                   (((C133899 + C133898 + C133897) * C152845 +
                     (C134202 + C134203 + C134204) * C152747) *
                        C152457 * C4361 -
                    ((C135269 + C135270 + C135271) * C152747 +
                     (C134506 + C134505 + C134504) * C152845) *
                        C152457 * C152617) *
                       C152512 * C152899 +
                   (((C134939 + C134938 + C134937) * C152845 +
                     (C133815 * C1239 - C133816 * C1230 - C133815 * C1240 +
                      C152912 * C1248 + C133817 * C1713 - C133818 * C1701 -
                      C133817 * C1714 + C152913 * C1737 + C133819 * C3219 -
                      C133820 * C3212 - C133819 * C3220 + C133814 * C3224) *
                         C152747) *
                        C152457 * C152617 -
                    ((C134722 + C134723 + C134724) * C152747 +
                     (C133902 + C133901 + C133900) * C152845) *
                        C152457 * C4361) *
                       C152512 * C152874)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152845 +
                      (C142632 + C142633 + C142634) * C152747) *
                         C152457 * C4361 -
                     ((C143552 + C143553 + C143554) * C152747 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152845) *
                         C152457 * C152617) *
                        C152917 +
                    (((C143554 + C143553 + C143552) * C152845 +
                      (C144212 + C144213 + C144214) * C152747) *
                         C152457 * C152617 -
                     ((C142635 + C142636 + C142637) * C152747 +
                      (C142634 + C142633 + C142632) * C152845) *
                         C152457 * C4361) *
                        C152901 +
                    (((C142637 + C142636 + C142635) * C152845 +
                      (C143931 + C143932 + C143933) * C152747) *
                         C152457 * C4361 -
                     ((C144914 + C144915 + C144916) * C152747 +
                      (C144214 + C144213 + C144212) * C152845) *
                         C152457 * C152617) *
                        C152870) *
                       C3495 +
                   ((((C134500 + C134499 + C134498) * C152845 +
                      (C135266 + C135267 + C135268) * C152747) *
                         C152457 * C152617 -
                     ((C134196 + C134197 + C134198) * C152747 +
                      (C133896 + C133895 + C133894) * C152845) *
                         C152457 * C4361) *
                        C152917 +
                    (((C134198 + C134197 + C134196) * C152845 +
                      (C134199 + C134200 + C134201) * C152747) *
                         C152457 * C4361 -
                     ((C136353 + C136354 + C136355) * C152747 +
                      (C135268 + C135267 + C135266) * C152845) *
                         C152457 * C152617) *
                        C152901 +
                    (((C136355 + C136354 + C136353) * C152845 +
                      (C133815 * C2271 - C133816 * C2266 - C133815 * C2272 +
                       C152912 * C2278 + C133817 * C8183 - C133818 * C8177 -
                       C133817 * C8184 + C152913 * C8195 + C133819 * C10242 -
                       C133820 * C10239 - C133819 * C10243 + C133814 * C10245) *
                          C152747) *
                         C152457 * C152617 -
                     ((C136042 + C136043 + C136044) * C152747 +
                      (C134201 + C134200 + C134199) * C152845) *
                         C152457 * C4361) *
                        C152870) *
                       C152495)) /
                     (p * q * std::sqrt(p + q));
    d2ee[295] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152845 +
                     (C142632 + C142633 + C142634) * C152747) *
                        C152457 * C152530 * C152828 -
                    ((C142635 + C142636 + C142637) * C152747 +
                     (C142634 + C142633 + C142632) * C152845) *
                        C152457 * C152530 * C152575) *
                       C873 +
                   (((C134198 + C134197 + C134196) * C152845 +
                     (C134199 + C134200 + C134201) * C152747) *
                        C152457 * C152530 * C152575 -
                    ((C134196 + C134197 + C134198) * C152747 +
                     (C133896 + C133895 + C133894) * C152845) *
                        C152457 * C152530 * C152828) *
                       C874 +
                   (((C133899 + C133898 + C133897) * C152845 +
                     (C134202 + C134203 + C134204) * C152747) *
                        C152457 * C152530 * C152828 -
                    ((C134205 + C134206 + C134207) * C152747 +
                     (C134204 + C134203 + C134202) * C152845) *
                        C152457 * C152530 * C152575) *
                       C875 +
                   (((C134724 + C134723 + C134722) * C152845 +
                     (C133815 * C394 - C133816 * C375 - C133815 * C395 +
                      C152912 * C411 + C133817 * C1721 - C133818 * C1705 -
                      C133817 * C1722 + C152913 * C1741 + C133819 * C1735 -
                      C133820 * C1712 - C133819 * C1736 + C133814 * C1748) *
                         C152747) *
                        C152457 * C152530 * C152575 -
                    ((C134722 + C134723 + C134724) * C152747 +
                     (C133902 + C133901 + C133900) * C152845) *
                        C152457 * C152530 * C152828) *
                       C152874)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152845 +
                     (C142632 + C142633 + C142634) * C152747) *
                        C152457 * C152530 * C1879 -
                    ((C142635 + C142636 + C142637) * C152747 +
                     (C142634 + C142633 + C142632) * C152845) *
                        C152457 * C152530 * C1880 +
                    ((C142637 + C142636 + C142635) * C152845 +
                     (C143931 + C143932 + C143933) * C152747) *
                        C152457 * C152530 * C1881 -
                    ((C143934 + C143935 + C143936) * C152747 +
                     (C143933 + C143932 + C143931) * C152845) *
                        C152457 * C152530 * C152880) *
                       C152814 +
                   (((C134198 + C134197 + C134196) * C152845 +
                     (C134199 + C134200 + C134201) * C152747) *
                        C152457 * C152530 * C1880 -
                    ((C134196 + C134197 + C134198) * C152747 +
                     (C133896 + C133895 + C133894) * C152845) *
                        C152457 * C152530 * C1879 -
                    ((C136042 + C136043 + C136044) * C152747 +
                     (C134201 + C134200 + C134199) * C152845) *
                        C152457 * C152530 * C1881 +
                    ((C136044 + C136043 + C136042) * C152845 +
                     (C133815 * C1541 - C133816 * C1528 - C133815 * C1542 +
                      C152912 * C1552 + C133817 * C8187 - C133818 * C8179 -
                      C133817 * C8188 + C152913 * C8197 + C133819 * C8193 -
                      C133820 * C8182 - C133819 * C8194 + C133814 * C8200) *
                         C152747) *
                        C152457 * C152530 * C152880) *
                       C152495)) /
                     (p * q * std::sqrt(p + q));
    d2ee[296] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152845 +
                      (C142632 + C142633 + C142634) * C152747) *
                         C152457 * C152829 -
                     ((C143552 + C143553 + C143554) * C152747 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152845) *
                         C152457 * C152617) *
                        C152828 +
                    (((C143554 + C143553 + C143552) * C152845 +
                      (C133815 * C1727 - C133816 * C1708 - C133815 * C1728 +
                       C152912 * C1744 + C133817 * C1729 - C133818 * C1709 -
                       C133817 * C1730 + C152913 * C1745 + C133819 * C9516 -
                       C133820 * C9509 - C133819 * C9517 + C133814 * C9527) *
                          C152747) *
                         C152457 * C152617 -
                     ((C142635 + C142636 + C142637) * C152747 +
                      (C142634 + C142633 + C142632) * C152845) *
                         C152457 * C152829) *
                        C152575) *
                       C365 +
                   ((((C134500 + C134499 + C134498) * C152845 +
                      (C135266 + C135267 + C135268) * C152747) *
                         C152457 * C152617 -
                     ((C134196 + C134197 + C134198) * C152747 +
                      (C133896 + C133895 + C133894) * C152845) *
                         C152457 * C152829) *
                        C152828 +
                    (((C134198 + C134197 + C134196) * C152845 +
                      (C134199 + C134200 + C134201) * C152747) *
                         C152457 * C152829 -
                     ((C136353 + C136354 + C136355) * C152747 +
                      (C135268 + C135267 + C135266) * C152845) *
                         C152457 * C152617) *
                        C152575) *
                       C366 +
                   ((((C133899 + C133898 + C133897) * C152845 +
                      (C134202 + C134203 + C134204) * C152747) *
                         C152457 * C152829 -
                     ((C135269 + C135270 + C135271) * C152747 +
                      (C134506 + C134505 + C134504) * C152845) *
                         C152457 * C152617) *
                        C152828 +
                    (((C135271 + C135270 + C135269) * C152845 +
                      (C133815 * C1723 - C133816 * C1706 - C133815 * C1724 +
                       C152912 * C1742 + C133817 * C1733 - C133818 * C1711 -
                       C133817 * C1734 + C152913 * C1747 + C133819 * C10024 -
                       C133820 * C10023 - C133819 * C10025 + C133814 * C10026) *
                          C152747) *
                         C152457 * C152617 -
                     ((C134205 + C134206 + C134207) * C152747 +
                      (C134204 + C134203 + C134202) * C152845) *
                         C152457 * C152829) *
                        C152575) *
                       C152864)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152845 +
                     (C142632 + C142633 + C142634) * C152747) *
                        C152457 * C152829 -
                    ((C143552 + C143553 + C143554) * C152747 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152845) *
                        C152457 * C152617) *
                       C1879 +
                   (((C143554 + C143553 + C143552) * C152845 +
                     (C144212 + C144213 + C144214) * C152747) *
                        C152457 * C152617 -
                    ((C142635 + C142636 + C142637) * C152747 +
                     (C142634 + C142633 + C142632) * C152845) *
                        C152457 * C152829) *
                       C1880 +
                   (((C142637 + C142636 + C142635) * C152845 +
                     (C143931 + C143932 + C143933) * C152747) *
                        C152457 * C152829 -
                    ((C144914 + C144915 + C144916) * C152747 +
                     (C144214 + C144213 + C144212) * C152845) *
                        C152457 * C152617) *
                       C1881 +
                   (((C144916 + C144915 + C144914) * C152845 +
                     (C133815 * C8189 - C133816 * C8180 - C133815 * C8190 +
                      C152912 * C8198 + C133817 * C8191 - C133818 * C8181 -
                      C133817 * C8192 + C152913 * C8199 + C133819 * C61859 -
                      C133820 * C61858 - C133819 * C61860 + C133814 * C61861) *
                         C152747) *
                        C152457 * C152617 -
                    ((C143934 + C143935 + C143936) * C152747 +
                     (C143933 + C143932 + C143931) * C152845) *
                        C152457 * C152829) *
                       C152880) *
                  C152484) /
                     (p * q * std::sqrt(p + q));
    d2ee[297] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152845 +
            (C142632 + C142633 + C142634) * C152747) *
               C152457 * C152530 * C152917 -
           ((C142635 + C142636 + C142637) * C152747 +
            (C142634 + C142633 + C142632) * C152845) *
               C152457 * C152530 * C152901 +
           ((C142637 + C142636 + C142635) * C152845 +
            (C133815 * C1537 - C133816 * C1526 - C133815 * C1538 +
             C152912 * C1550 + C133817 * C2269 - C133818 * C2265 -
             C133817 * C2270 + C152913 * C2277 + C133819 * C8185 -
             C133820 * C8178 - C133819 * C8186 + C133814 * C8196) *
                C152747) *
               C152457 * C152530 * C152870) *
              C365 +
          (((C134198 + C134197 + C134196) * C152845 +
            (C134199 + C134200 + C134201) * C152747) *
               C152457 * C152530 * C152901 -
           ((C134196 + C134197 + C134198) * C152747 +
            (C133896 + C133895 + C133894) * C152845) *
               C152457 * C152530 * C152917 -
           ((C136042 + C136043 + C136044) * C152747 +
            (C134201 + C134200 + C134199) * C152845) *
               C152457 * C152530 * C152870) *
              C366 +
          (((C133899 + C133898 + C133897) * C152845 +
            (C134202 + C134203 + C134204) * C152747) *
               C152457 * C152530 * C152917 -
           ((C134205 + C134206 + C134207) * C152747 +
            (C134204 + C134203 + C134202) * C152845) *
               C152457 * C152530 * C152901 +
           ((C134207 + C134206 + C134205) * C152845 +
            (C133815 * C1533 - C133816 * C1524 - C133815 * C1534 +
             C152912 * C1548 + C133817 * C2273 - C133818 * C2267 -
             C133817 * C2274 + C152913 * C2279 + C133819 * C9823 -
             C133820 * C9822 - C133819 * C9824 + C133814 * C9825) *
                C152747) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
            C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
            C133819 * C649 - C133820 * C633 - C133819 * C650 + C133814 * C669) *
               C152845 +
           (C133815 * C386 - C133816 * C371 - C133815 * C387 + C152912 * C407 +
            C133817 * C1233 - C133818 * C1227 - C133817 * C1234 +
            C152913 * C1245 + C133819 * C1719 - C133820 * C1704 -
            C133819 * C1720 + C133814 * C1740) *
               C152747) *
              C152457 * C152530 * C152512 * C129 -
          ((C134196 + C134197 + C134198) * C152747 +
           (C133896 + C133895 + C133894) * C152845) *
              C152457 * C152530 * C152512 * C130 +
          ((C133899 + C133898 + C133897) * C152845 +
           (C134202 + C134203 + C134204) * C152747) *
              C152457 * C152530 * C152512 * C131 -
          ((C134722 + C134723 + C134724) * C152747 +
           (C133902 + C133901 + C133900) * C152845) *
              C152457 * C152530 * C152512 * C132 +
          ((C133905 + C133904 + C133903) * C152845 +
           (C133815 * C396 - C133816 * C376 - C133815 * C397 + C152912 * C412 +
            C133817 * C1241 - C133818 * C1231 - C133817 * C1242 +
            C152913 * C1249 + C133819 * C2890 - C133820 * C2889 -
            C133819 * C2891 + C133814 * C2892) *
               C152747) *
              C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152845 +
            (C142632 + C142633 + C142634) * C152747) *
               C152457 * C152918 -
           ((C133819 * C3213 - C133820 * C3209 - C133819 * C3214 +
             C133814 * C3221 + C133817 * C1719 - C133818 * C1704 -
             C133817 * C1720 + C152913 * C1740 + C133815 * C1233 -
             C133816 * C1227 - C133815 * C1234 + C152912 * C1245) *
                C152747 +
            (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
             C133814 * C2690 + C133817 * C649 - C133818 * C633 -
             C133817 * C650 + C152913 * C669 + C133815 * C647 - C133816 * C632 -
             C133815 * C648 + C152912 * C668) *
                C152845) *
               C152457 * C152903 +
           ((C133815 * C649 - C133816 * C633 - C133815 * C650 + C152912 * C669 +
             C133817 * C2677 - C133818 * C2666 - C133817 * C2678 +
             C152913 * C2690 + C133819 * C2679 - C133820 * C2667 -
             C133819 * C2680 + C133814 * C2691) *
                C152845 +
            (C133815 * C1719 - C133816 * C1704 - C133815 * C1720 +
             C152912 * C1740 + C133817 * C3213 - C133818 * C3209 -
             C133817 * C3214 + C152913 * C3221 + C133819 * C9518 -
             C133820 * C9510 - C133819 * C9519 + C133814 * C9528) *
                C152747) *
               C152457 * C152873) *
              C152512 * C365 +
          (((C134500 + C134499 + C134498) * C152845 +
            (C135266 + C135267 + C135268) * C152747) *
               C152457 * C152903 -
           ((C134196 + C134197 + C134198) * C152747 +
            (C133896 + C133895 + C133894) * C152845) *
               C152457 * C152918 -
           ((C137416 + C137417 + C137418) * C152747 +
            (C134503 + C134502 + C134501) * C152845) *
               C152457 * C152873) *
              C152512 * C366 +
          (((C133899 + C133898 + C133897) * C152845 +
            (C134202 + C134203 + C134204) * C152747) *
               C152457 * C152918 -
           ((C135269 + C135270 + C135271) * C152747 +
            (C134506 + C134505 + C134504) * C152845) *
               C152457 * C152903 +
           ((C134509 + C134508 + C134507) * C152845 +
            (C133815 * C1715 - C133816 * C1702 - C133815 * C1716 +
             C152912 * C1738 + C133817 * C3217 - C133818 * C3211 -
             C133817 * C3218 + C152913 * C3223 + C133819 * C18412 -
             C133820 * C18411 - C133819 * C18413 + C133814 * C18414) *
                C152747) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152845 +
            (C142632 + C142633 + C142634) * C152747) *
               C152457 * C152530 * C1429 -
           ((C142635 + C142636 + C142637) * C152747 +
            (C142634 + C142633 + C142632) * C152845) *
               C152457 * C152530 * C1430 +
           ((C142637 + C142636 + C142635) * C152845 +
            (C133815 * C1537 - C133816 * C1526 - C133815 * C1538 +
             C152912 * C1550 + C133817 * C2269 - C133818 * C2265 -
             C133817 * C2270 + C152913 * C2277 + C133819 * C8185 -
             C133820 * C8178 - C133819 * C8186 + C133814 * C8196) *
                C152747) *
               C152457 * C152530 * C152870) *
              C152914 +
          (((C134198 + C134197 + C134196) * C152845 +
            (C134199 + C134200 + C134201) * C152747) *
               C152457 * C152530 * C1430 -
           ((C134196 + C134197 + C134198) * C152747 +
            (C133896 + C133895 + C133894) * C152845) *
               C152457 * C152530 * C1429 -
           ((C136042 + C136043 + C136044) * C152747 +
            (C134201 + C134200 + C134199) * C152845) *
               C152457 * C152530 * C152870) *
              C152897 +
          (((C133899 + C133898 + C133897) * C152845 +
            (C134202 + C134203 + C134204) * C152747) *
               C152457 * C152530 * C1429 -
           ((C134205 + C134206 + C134207) * C152747 +
            (C134204 + C134203 + C134202) * C152845) *
               C152457 * C152530 * C1430 +
           ((C134207 + C134206 + C134205) * C152845 +
            (C133815 * C1533 - C133816 * C1524 - C133815 * C1534 +
             C152912 * C1548 + C133817 * C2273 - C133818 * C2267 -
             C133817 * C2274 + C152913 * C2279 + C133819 * C9823 -
             C133820 * C9822 - C133819 * C9824 + C133814 * C9825) *
                C152747) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
            C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
            C133819 * C649 - C133820 * C633 - C133819 * C650 + C133814 * C669) *
               C152845 +
           (C142632 + C142633 + C142634) * C152747) *
              C152457 * C152530 * C1517 -
          ((C142635 + C142636 + C142637) * C152747 +
           (C142634 + C142633 + C142632) * C152845) *
              C152457 * C152530 * C1518 +
          ((C142637 + C142636 + C142635) * C152845 +
           (C143931 + C143932 + C143933) * C152747) *
              C152457 * C152530 * C1519 -
          ((C143934 + C143935 + C143936) * C152747 +
           (C143933 + C143932 + C143931) * C152845) *
              C152457 * C152530 * C1520 +
          ((C143936 + C143935 + C143934) * C152845 +
           (C133815 * C7928 - C133816 * C7923 - C133815 * C7929 +
            C152912 * C7935 + C133817 * C8937 - C133818 * C8935 -
            C133817 * C8938 + C152913 * C8941 + C133819 * C60551 -
            C133820 * C60550 - C133819 * C60552 + C133814 * C60553) *
               C152747) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152845 +
            (C142632 + C142633 + C142634) * C152747) *
               C152457 * C152918 -
           ((C143552 + C143553 + C143554) * C152747 +
            (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
             C133814 * C2690 + C133817 * C649 - C133818 * C633 -
             C133817 * C650 + C152913 * C669 + C133815 * C647 - C133816 * C632 -
             C133815 * C648 + C152912 * C668) *
                C152845) *
               C152457 * C152903 +
           ((C133815 * C649 - C133816 * C633 - C133815 * C650 + C152912 * C669 +
             C133817 * C2677 - C133818 * C2666 - C133817 * C2678 +
             C152913 * C2690 + C133819 * C2679 - C133820 * C2667 -
             C133819 * C2680 + C133814 * C2691) *
                C152845 +
            (C144209 + C144210 + C144211) * C152747) *
               C152457 * C152873) *
              C1429 +
          (((C143554 + C143553 + C143552) * C152845 +
            (C144212 + C144213 + C144214) * C152747) *
               C152457 * C152903 -
           ((C142635 + C142636 + C142637) * C152747 +
            (C142634 + C142633 + C142632) * C152845) *
               C152457 * C152918 -
           ((C144215 + C144216 + C144217) * C152747 +
            (C144211 + C144210 + C144209) * C152845) *
               C152457 * C152873) *
              C1430 +
          (((C142637 + C142636 + C142635) * C152845 +
            (C143931 + C143932 + C143933) * C152747) *
               C152457 * C152918 -
           ((C133819 * C10240 - C133820 * C10238 - C133819 * C10241 +
             C133814 * C10244 + C133817 * C8185 - C133818 * C8178 -
             C133817 * C8186 + C152913 * C8196 + C133815 * C2269 -
             C133816 * C2265 - C133815 * C2270 + C152912 * C2277) *
                C152747 +
            (C144214 + C144213 + C144212) * C152845) *
               C152457 * C152903 +
           ((C144217 + C144216 + C144215) * C152845 +
            (C133815 * C8185 - C133816 * C8178 - C133815 * C8186 +
             C152912 * C8196 + C133817 * C10240 - C133818 * C10238 -
             C133817 * C10241 + C152913 * C10244 + C133819 * C61401 -
             C133820 * C61400 - C133819 * C61402 + C133814 * C61403) *
                C152747) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[298] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152845 +
                     (C142632 + C142633 + C142634) * C152747) *
                        C152457 * C152829 -
                    ((C133819 * C3213 - C133820 * C3209 - C133819 * C3214 +
                      C133814 * C3221 + C133817 * C1719 - C133818 * C1704 -
                      C133817 * C1720 + C152913 * C1740 + C133815 * C1233 -
                      C133816 * C1227 - C133815 * C1234 + C152912 * C1245) *
                         C152747 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152845) *
                        C152457 * C152617) *
                       C152512 * C873 +
                   (((C134500 + C134499 + C134498) * C152845 +
                     (C135266 + C135267 + C135268) * C152747) *
                        C152457 * C152617 -
                    ((C134196 + C134197 + C134198) * C152747 +
                     (C133896 + C133895 + C133894) * C152845) *
                        C152457 * C152829) *
                       C152512 * C874 +
                   (((C133899 + C133898 + C133897) * C152845 +
                     (C134202 + C134203 + C134204) * C152747) *
                        C152457 * C152829 -
                    ((C135269 + C135270 + C135271) * C152747 +
                     (C134506 + C134505 + C134504) * C152845) *
                        C152457 * C152617) *
                       C152512 * C875 +
                   (((C134939 + C134938 + C134937) * C152845 +
                     (C133815 * C1239 - C133816 * C1230 - C133815 * C1240 +
                      C152912 * C1248 + C133817 * C1713 - C133818 * C1701 -
                      C133817 * C1714 + C152913 * C1737 + C133819 * C3219 -
                      C133820 * C3212 - C133819 * C3220 + C133814 * C3224) *
                         C152747) *
                        C152457 * C152617 -
                    ((C134722 + C134723 + C134724) * C152747 +
                     (C133902 + C133901 + C133900) * C152845) *
                        C152457 * C152829) *
                       C152512 * C152874)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152845 +
                      (C142632 + C142633 + C142634) * C152747) *
                         C152457 * C152829 -
                     ((C143552 + C143553 + C143554) * C152747 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152845) *
                         C152457 * C152617) *
                        C1429 +
                    (((C143554 + C143553 + C143552) * C152845 +
                      (C144212 + C144213 + C144214) * C152747) *
                         C152457 * C152617 -
                     ((C142635 + C142636 + C142637) * C152747 +
                      (C142634 + C142633 + C142632) * C152845) *
                         C152457 * C152829) *
                        C1430 +
                    (((C142637 + C142636 + C142635) * C152845 +
                      (C143931 + C143932 + C143933) * C152747) *
                         C152457 * C152829 -
                     ((C133819 * C10240 - C133820 * C10238 - C133819 * C10241 +
                       C133814 * C10244 + C133817 * C8185 - C133818 * C8178 -
                       C133817 * C8186 + C152913 * C8196 + C133815 * C2269 -
                       C133816 * C2265 - C133815 * C2270 + C152912 * C2277) *
                          C152747 +
                      (C144214 + C144213 + C144212) * C152845) *
                         C152457 * C152617) *
                        C152870) *
                       C152814 +
                   ((((C134500 + C134499 + C134498) * C152845 +
                      (C135266 + C135267 + C135268) * C152747) *
                         C152457 * C152617 -
                     ((C134196 + C134197 + C134198) * C152747 +
                      (C133896 + C133895 + C133894) * C152845) *
                         C152457 * C152829) *
                        C1429 +
                    (((C134198 + C134197 + C134196) * C152845 +
                      (C134199 + C134200 + C134201) * C152747) *
                         C152457 * C152829 -
                     ((C136353 + C136354 + C136355) * C152747 +
                      (C135268 + C135267 + C135266) * C152845) *
                         C152457 * C152617) *
                        C1430 +
                    (((C136355 + C136354 + C136353) * C152845 +
                      (C133815 * C2271 - C133816 * C2266 - C133815 * C2272 +
                       C152912 * C2278 + C133817 * C8183 - C133818 * C8177 -
                       C133817 * C8184 + C152913 * C8195 + C133819 * C10242 -
                       C133820 * C10239 - C133819 * C10243 + C133814 * C10245) *
                          C152747) *
                         C152457 * C152617 -
                     ((C136042 + C136043 + C136044) * C152747 +
                      (C134201 + C134200 + C134199) * C152845) *
                         C152457 * C152829) *
                        C152870) *
                       C152495)) /
                     (p * q * std::sqrt(p + q));
    d2ee[299] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
            C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
            C133819 * C649 - C133820 * C633 - C133819 * C650 + C133814 * C669) *
               C152845 +
           (C133815 * C386 - C133816 * C371 - C133815 * C387 + C152912 * C407 +
            C133817 * C1233 - C133818 * C1227 - C133817 * C1234 +
            C152913 * C1245 + C133819 * C1719 - C133820 * C1704 -
            C133819 * C1720 + C133814 * C1740) *
               C152747) *
              C152457 * C152530 * C152512 * C129 -
          ((C134196 + C134197 + C134198) * C152747 +
           (C133896 + C133895 + C133894) * C152845) *
              C152457 * C152530 * C152512 * C130 +
          ((C133899 + C133898 + C133897) * C152845 +
           (C134202 + C134203 + C134204) * C152747) *
              C152457 * C152530 * C152512 * C131 -
          ((C134722 + C134723 + C134724) * C152747 +
           (C133902 + C133901 + C133900) * C152845) *
              C152457 * C152530 * C152512 * C132 +
          ((C133905 + C133904 + C133903) * C152845 +
           (C133815 * C396 - C133816 * C376 - C133815 * C397 + C152912 * C412 +
            C133817 * C1241 - C133818 * C1231 - C133817 * C1242 +
            C152913 * C1249 + C133819 * C2890 - C133820 * C2889 -
            C133819 * C2891 + C133814 * C2892) *
               C152747) *
              C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152845 +
            (C142632 + C142633 + C142634) * C152747) *
               C152457 * C152530 * C152917 -
           ((C142635 + C142636 + C142637) * C152747 +
            (C142634 + C142633 + C142632) * C152845) *
               C152457 * C152530 * C152901 +
           ((C142637 + C142636 + C142635) * C152845 +
            (C133815 * C1537 - C133816 * C1526 - C133815 * C1538 +
             C152912 * C1550 + C133817 * C2269 - C133818 * C2265 -
             C133817 * C2270 + C152913 * C2277 + C133819 * C8185 -
             C133820 * C8178 - C133819 * C8186 + C133814 * C8196) *
                C152747) *
               C152457 * C152530 * C152870) *
              C365 +
          (((C134198 + C134197 + C134196) * C152845 +
            (C134199 + C134200 + C134201) * C152747) *
               C152457 * C152530 * C152901 -
           ((C134196 + C134197 + C134198) * C152747 +
            (C133896 + C133895 + C133894) * C152845) *
               C152457 * C152530 * C152917 -
           ((C136042 + C136043 + C136044) * C152747 +
            (C134201 + C134200 + C134199) * C152845) *
               C152457 * C152530 * C152870) *
              C366 +
          (((C133899 + C133898 + C133897) * C152845 +
            (C134202 + C134203 + C134204) * C152747) *
               C152457 * C152530 * C152917 -
           ((C134205 + C134206 + C134207) * C152747 +
            (C134204 + C134203 + C134202) * C152845) *
               C152457 * C152530 * C152901 +
           ((C134207 + C134206 + C134205) * C152845 +
            (C133815 * C1533 - C133816 * C1524 - C133815 * C1534 +
             C152912 * C1548 + C133817 * C2273 - C133818 * C2267 -
             C133817 * C2274 + C152913 * C2279 + C133819 * C9823 -
             C133820 * C9822 - C133819 * C9824 + C133814 * C9825) *
                C152747) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152845 +
            (C142632 + C142633 + C142634) * C152747) *
               C152457 * C152530 * C1429 -
           ((C142635 + C142636 + C142637) * C152747 +
            (C142634 + C142633 + C142632) * C152845) *
               C152457 * C152530 * C1430 +
           ((C142637 + C142636 + C142635) * C152845 +
            (C133815 * C1537 - C133816 * C1526 - C133815 * C1538 +
             C152912 * C1550 + C133817 * C2269 - C133818 * C2265 -
             C133817 * C2270 + C152913 * C2277 + C133819 * C8185 -
             C133820 * C8178 - C133819 * C8186 + C133814 * C8196) *
                C152747) *
               C152457 * C152530 * C152870) *
              C152914 +
          (((C134198 + C134197 + C134196) * C152845 +
            (C134199 + C134200 + C134201) * C152747) *
               C152457 * C152530 * C1430 -
           ((C134196 + C134197 + C134198) * C152747 +
            (C133896 + C133895 + C133894) * C152845) *
               C152457 * C152530 * C1429 -
           ((C136042 + C136043 + C136044) * C152747 +
            (C134201 + C134200 + C134199) * C152845) *
               C152457 * C152530 * C152870) *
              C152897 +
          (((C133899 + C133898 + C133897) * C152845 +
            (C134202 + C134203 + C134204) * C152747) *
               C152457 * C152530 * C1429 -
           ((C134205 + C134206 + C134207) * C152747 +
            (C134204 + C134203 + C134202) * C152845) *
               C152457 * C152530 * C1430 +
           ((C134207 + C134206 + C134205) * C152845 +
            (C133815 * C1533 - C133816 * C1524 - C133815 * C1534 +
             C152912 * C1548 + C133817 * C2273 - C133818 * C2267 -
             C133817 * C2274 + C152913 * C2279 + C133819 * C9823 -
             C133820 * C9822 - C133819 * C9824 + C133814 * C9825) *
                C152747) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
            C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
            C133819 * C649 - C133820 * C633 - C133819 * C650 + C133814 * C669) *
               C152845 +
           (C142632 + C142633 + C142634) * C152747) *
              C152457 * C152530 * C1517 -
          ((C142635 + C142636 + C142637) * C152747 +
           (C142634 + C142633 + C142632) * C152845) *
              C152457 * C152530 * C1518 +
          ((C142637 + C142636 + C142635) * C152845 +
           (C143931 + C143932 + C143933) * C152747) *
              C152457 * C152530 * C1519 -
          ((C143934 + C143935 + C143936) * C152747 +
           (C143933 + C143932 + C143931) * C152845) *
              C152457 * C152530 * C1520 +
          ((C143936 + C143935 + C143934) * C152845 +
           (C133815 * C7928 - C133816 * C7923 - C133815 * C7929 +
            C152912 * C7935 + C133817 * C8937 - C133818 * C8935 -
            C133817 * C8938 + C152913 * C8941 + C133819 * C60551 -
            C133820 * C60550 - C133819 * C60552 + C133814 * C60553) *
               C152747) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[300] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C152571 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C152578 +
           (C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C152530 * C3839) *
              C152489 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            C111141 * C6340) *
               C152457 * C152530 * C152578 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C152571 -
           ((C111154 + C111155) * C6340 + (C102759 + C102760) * C6339 +
            C109357 * C6338) *
               C152457 * C152530 * C3839) *
              C152498 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152530 * C152571 -
           ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
            C100917 * C6338) *
               C152457 * C152530 * C152578 +
           (C100918 * C6338 + (C102758 + C102757) * C6339 +
            (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
             C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
             C100536 * C8729 + C152775 * C8730) *
                C6340) *
               C152457 * C152530 * C3839) *
              C3842)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152530 * C152571 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152530 * C152578 +
           ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152530 * C3839) *
              C152489 +
          (((C100908 + C100907) * C152696 * C51245 +
            (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
               C152530 * C152578 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152530 * C152571 -
           ((C100915 + C100916) * C152696 * C51247 +
            (C100912 + C100911) * C152696 * C51246 +
            (C100910 + C100909) * C152696 * C51245) *
               C152530 * C3839) *
              C152498 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152530 * C152571 -
           ((C101435 + C101436) * C152696 * C51247 +
            (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
               C152530 * C152578 +
           (C100920 * C51245 + (C100916 + C100915) * C152696 * C51246 +
            (C100534 * C398 - C100535 * C377 - C100534 * C399 + C100532 * C413 +
             C100536 * C2108 - C100537 * C2107 - C100536 * C2109 +
             C152775 * C2110) *
                C152696 * C51247) *
               C152530 * C3839) *
              C3842)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152530 * C152571 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C152530 * C152578 +
           (C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
            C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
            C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
            C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
            C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
               C152696 * C152457 * C152530 * C3839) *
              C152489 +
          ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
            C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
            C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
            C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
            C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
               C152696 * C152457 * C152530 * C152578 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C152530 * C152571 -
           (C117467 * C9514 - C117468 * C9508 - C117467 * C9515 +
            C117460 * C9526 + C117465 * C1731 - C117466 * C1710 -
            C117465 * C1732 + C117459 * C1746 + C117463 * C1725 -
            C117464 * C1707 - C117463 * C1726 + C117458 * C1743 +
            C117461 * C390 - C117462 * C373 - C117461 * C391 + C117457 * C409) *
               C152696 * C152457 * C152530 * C3839) *
              C152498 +
          ((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
            C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
            C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
            C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
            C117460 * C2688) *
               C152696 * C152457 * C152530 * C152571 -
           (C117467 * C3217 - C117468 * C3211 - C117467 * C3218 +
            C117460 * C3223 + C117465 * C1715 - C117466 * C1702 -
            C117465 * C1716 + C117459 * C1738 + C117463 * C1237 -
            C117464 * C1229 - C117463 * C1238 + C117458 * C1247 +
            C117461 * C382 - C117462 * C369 - C117461 * C383 + C117457 * C405) *
               C152696 * C152457 * C152530 * C152578 +
           (C117461 * C392 - C117462 * C374 - C117461 * C393 + C117457 * C410 +
            C117463 * C1723 - C117464 * C1706 - C117463 * C1724 +
            C117458 * C1742 + C117465 * C1733 - C117466 * C1711 -
            C117465 * C1734 + C117459 * C1747 + C117467 * C10024 -
            C117468 * C10023 - C117467 * C10025 + C117460 * C10026) *
               C152696 * C152457 * C152530 * C3839) *
              C3842)) /
            (p * q * std::sqrt(p + q));
    d2ee[301] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C152829 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152617) *
               C152571 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             C111655 * C6340) *
                C152457 * C152617 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C152829) *
               C152578 +
           ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
                C152457 * C152829 -
            ((C111668 + C111669) * C6340 + (C110943 + C110942) * C6339 +
             C110889 * C6338) *
                C152457 * C152617) *
               C3839) *
              C3495 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C152617 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C152829) *
               C152571 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C152829 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C152617) *
               C152578 +
           ((C111446 * C6338 + (C111460 + C111459) * C6339 +
             (C100534 * C8187 - C100535 * C8179 - C100534 * C8188 +
              C100532 * C8197 + C100536 * C8193 - C100537 * C8182 -
              C100536 * C8194 + C152775 * C8200) *
                 C6340) *
                C152457 * C152617 -
            ((C111154 + C111155) * C6340 + (C102759 + C102760) * C6339 +
             C109357 * C6338) *
                C152457 * C152829) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C152829 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C152617) *
               C152571 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C152617 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C152829) *
               C152578 +
           (((C100534 * C388 - C100535 * C372 - C100534 * C389 +
              C100532 * C408 + C100536 * C1727 - C100537 * C1708 -
              C100536 * C1728 + C152775 * C1744) *
                 C152696 * C51245 +
             (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
                C152829 -
            ((C103075 + C103076) * C152696 * C51247 +
             (C103077 + C103078) * C152696 * C51246 +
             (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
              C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
              C100534 * C1728 + C100532 * C1744) *
                 C152696 * C51245) *
                C152617) *
               C3839) *
              C3495 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C152617 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C152829) *
               C152571 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C152829 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C152617) *
               C152578 +
           (((C103078 + C103077) * C152696 * C51245 +
             (C103076 + C103075) * C152696 * C51246 +
             (C100534 * C1721 - C100535 * C1705 - C100534 * C1722 +
              C100532 * C1741 + C100536 * C1735 - C100537 * C1712 -
              C100536 * C1736 + C152775 * C1748) *
                 C152696 * C51247) *
                C152617 -
            ((C100915 + C100916) * C152696 * C51247 +
             (C100912 + C100911) * C152696 * C51246 +
             (C100910 + C100909) * C152696 * C51245) *
                C152829) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
             C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
             C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
             C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
             C117460 * C2690) *
                C152696 * C152457 * C152829 -
            (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
             C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
             C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
             C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
             C117462 * C632 - C117461 * C648 + C117457 * C668) *
                C152696 * C152457 * C152617) *
               C152571 +
           ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
             C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
             C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
             C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
             C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
             C117460 * C9528) *
                C152696 * C152457 * C152617 -
            (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
             C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
             C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
             C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
             C117461 * C386 - C117462 * C371 - C117461 * C387 +
             C117457 * C407) *
                C152696 * C152457 * C152829) *
               C152578 +
           ((C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
             C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
             C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
             C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
             C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
                C152696 * C152457 * C152829 -
            (C117467 * C9520 - C117468 * C9511 - C117467 * C9521 +
             C117460 * C9529 + C117465 * C9516 - C117466 * C9509 -
             C117465 * C9517 + C117459 * C9527 + C117463 * C1729 -
             C117464 * C1709 - C117463 * C1730 + C117458 * C1745 +
             C117461 * C1727 - C117462 * C1708 - C117461 * C1728 +
             C117457 * C1744) *
                C152696 * C152457 * C152617) *
               C3839) *
              C3495 +
          (((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
             C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
             C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
             C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
             C117467 * C2682 + C117460 * C2692) *
                C152696 * C152457 * C152617 -
            (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
             C117460 * C2689 + C117465 * C651 - C117466 * C634 -
             C117465 * C652 + C117459 * C670 + C117463 * C645 - C117464 * C631 -
             C117463 * C646 + C117458 * C667 + C117461 * C146 - C117462 * C137 -
             C117461 * C147 + C117457 * C161) *
                C152696 * C152457 * C152829) *
               C152571 +
           ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
             C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
             C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
             C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
             C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
                C152696 * C152457 * C152829 -
            (C117467 * C9522 - C117468 * C9512 - C117467 * C9523 +
             C117460 * C9530 + C117465 * C3215 - C117466 * C3210 -
             C117465 * C3216 + C117459 * C3222 + C117463 * C1717 -
             C117464 * C1703 - C117463 * C1718 + C117458 * C1739 +
             C117461 * C1235 - C117462 * C1228 - C117461 * C1236 +
             C117457 * C1246) *
                C152696 * C152457 * C152617) *
               C152578 +
           ((C117461 * C1725 - C117462 * C1707 - C117461 * C1726 +
             C117457 * C1743 + C117463 * C1731 - C117464 * C1710 -
             C117463 * C1732 + C117458 * C1746 + C117465 * C9514 -
             C117466 * C9508 - C117465 * C9515 + C117459 * C9526 +
             C117467 * C9524 - C117468 * C9513 - C117467 * C9525 +
             C117460 * C9531) *
                C152696 * C152457 * C152617 -
            (C117467 * C9514 - C117468 * C9508 - C117467 * C9515 +
             C117460 * C9526 + C117465 * C1731 - C117466 * C1710 -
             C117465 * C1732 + C117459 * C1746 + C117463 * C1725 -
             C117464 * C1707 - C117463 * C1726 + C117458 * C1743 +
             C117461 * C390 - C117462 * C373 - C117461 * C391 +
             C117457 * C409) *
                C152696 * C152457 * C152829) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[302] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
                 C100532 * C160 + C100536 * C647 - C100537 * C632 -
                 C100536 * C648 + C152775 * C668) *
                    C152696 * C51245 +
                (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                   C152530 * C3355 -
               (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
                (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
                 C152775 * C1245 + C100534 * C386 - C100535 * C371 -
                 C100534 * C387 + C100532 * C407) *
                    C152696 * C51245) *
                   C152530 * C152575) *
                  C152923 +
              (((C100908 + C100907) * C152696 * C51245 +
                (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                   C152530 * C152575 -
               (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
                (C100600 + C100599) * C152696 * C51245) *
                   C152530 * C3355) *
                  C152916 +
              ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
                C100614 * C51247) *
                   C152530 * C3355 -
               ((C101435 + C101436) * C152696 * C51247 +
                (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
                   C152530 * C152575) *
                  C152899 +
              ((C101430 * C51245 + (C101436 + C101435) * C152696 * C51246 +
                (C100534 * C400 - C100535 * C378 - C100534 * C401 +
                 C100532 * C414 + C100536 * C1243 - C100537 * C1232 -
                 C100536 * C1244 + C152775 * C1250) *
                    C152696 * C51247) *
                   C152530 * C152575 -
               ((C100607 + C100608) * C152696 * C51247 +
                (C100606 + C100605) * C152696 * C51246 + C100613 * C51245) *
                   C152530 * C3355) *
                  C152874) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
                 C100532 * C160 + C100536 * C647 - C100537 * C632 -
                 C100536 * C648 + C152775 * C668) *
                    C152696 * C51245 +
                (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                   C152530 * C152924 -
               (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
                (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
                 C152775 * C1245 + C100534 * C386 - C100535 * C371 -
                 C100534 * C387 + C100532 * C407) *
                    C152696 * C51245) *
                   C152530 * C152920 +
               ((C100534 * C388 - C100535 * C372 - C100534 * C389 +
                 C100532 * C408 + C100536 * C1727 - C100537 * C1708 -
                 C100536 * C1728 + C152775 * C1744) *
                    C152696 * C51245 +
                (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
                   C152530 * C152906 -
               ((C102757 + C102758) * C152696 * C51247 +
                (C102759 + C102760) * C152696 * C51246 +
                (C100536 * C2269 - C100537 * C2265 - C100536 * C2270 +
                 C152775 * C2277 + C100534 * C1537 - C100535 * C1526 -
                 C100534 * C1538 + C100532 * C1550) *
                    C152696 * C51245) *
                   C152530 * C152880) *
                  C3495 +
              (((C100908 + C100907) * C152696 * C51245 +
                (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                   C152530 * C152920 -
               (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
                (C100600 + C100599) * C152696 * C51245) *
                   C152530 * C152924 -
               ((C100915 + C100916) * C152696 * C51247 +
                (C100912 + C100911) * C152696 * C51246 +
                (C100910 + C100909) * C152696 * C51245) *
                   C152530 * C152906 +
               ((C102760 + C102759) * C152696 * C51245 +
                (C102758 + C102757) * C152696 * C51246 +
                (C100534 * C1531 - C100535 * C1523 - C100534 * C1532 +
                 C100532 * C1547 + C100536 * C2275 - C100537 * C2268 -
                 C100536 * C2276 + C152775 * C2280) *
                    C152696 * C51247) *
                   C152530 * C152880) *
                  C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C152918 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C152903 +
            ((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C152696 * C51245 +
             (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
                C152873) *
               C3355 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C152903 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C152918 -
            ((C104145 + C104146) * C152696 * C51247 +
             (C104147 + C104148) * C152696 * C51246 +
             (C100536 * C3213 - C100537 * C3209 - C100536 * C3214 +
              C152775 * C3221 + C100534 * C1719 - C100535 * C1704 -
              C100534 * C1720 + C100532 * C1740) *
                 C152696 * C51245) *
                C152873) *
               C152575) *
              C3495 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C152903 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C152918 -
            ((C101221 + C101222) * C152696 * C51247 +
             (C101218 + C101217) * C152696 * C51246 +
             (C101216 + C101215) * C152696 * C51245) *
                C152873) *
               C3355 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C152918 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C152903 +
            ((C104148 + C104147) * C152696 * C51245 +
             (C104146 + C104145) * C152696 * C51246 +
             (C100534 * C1713 - C100535 * C1701 - C100534 * C1714 +
              C100532 * C1737 + C100536 * C3219 - C100537 * C3212 -
              C100536 * C3220 + C152775 * C3224) *
                 C152696 * C51247) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C3355 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C152575) *
              C152923 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            C111141 * C6340) *
               C152457 * C152530 * C152575 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C3355) *
              C152916 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152530 * C3355 -
           ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
            C100917 * C6338) *
               C152457 * C152530 * C152575) *
              C152899 +
          ((C101421 * C6338 + (C100916 + C100915) * C6339 +
            (C100534 * C1531 - C100535 * C1523 - C100534 * C1532 +
             C100532 * C1547 + C100536 * C2275 - C100537 * C2268 -
             C100536 * C2276 + C152775 * C2280) *
                C6340) *
               C152457 * C152530 * C152575 -
           ((C100915 + C100916) * C6340 + (C100914 + C100913) * C6339 +
            C100610 * C6338) *
               C152457 * C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C152924 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C152920 +
           (C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C152530 * C152906 -
           ((C110668 + C110669) * C6340 + (C110667 + C110666) * C6339 +
            C110641 * C6338) *
               C152457 * C152530 * C152880) *
              C3495 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            C111141 * C6340) *
               C152457 * C152530 * C152920 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C152924 -
           ((C111154 + C111155) * C6340 + (C102759 + C102760) * C6339 +
            C109357 * C6338) *
               C152457 * C152530 * C152906 +
           (C111141 * C6338 + (C111155 + C111154) * C6339 +
            (C100534 * C7926 - C100535 * C7922 - C100534 * C7927 +
             C100532 * C7934 + C100536 * C8939 - C100537 * C8936 -
             C100536 * C8940 + C152775 * C8942) *
                C6340) *
               C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C152918 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152903 +
            ((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C6338 +
             (C110938 + C110939) * C6339 + C110946 * C6340) *
                C152457 * C152873) *
               C3355 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             C111655 * C6340) *
                C152457 * C152903 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C152918 -
            ((C110944 + C110945) * C6340 + (C110941 + C110940) * C6339 +
             (C110939 + C110938) * C6338) *
                C152457 * C152873) *
               C152575) *
              C3495 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C152903 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C152918 -
            ((C112530 + C112531) * C6340 + (C104147 + C104148) * C6339 +
             (C101216 + C101215) * C6338) *
                C152457 * C152873) *
               C3355 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C152918 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C152903 +
            ((C104148 + C104147) * C6338 + (C112531 + C112530) * C6339 +
             (C100534 * C8183 - C100535 * C8177 - C100534 * C8184 +
              C100532 * C8195 + C100536 * C10242 - C100537 * C10239 -
              C100536 * C10243 + C152775 * C10245) *
                 C6340) *
                C152457 * C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152530 * C3355 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C152530 * C152575) *
              C152923 +
          ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
            C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
            C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
            C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
            C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
               C152696 * C152457 * C152530 * C152575 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C152530 * C3355) *
              C152916 +
          ((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
            C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
            C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
            C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
            C117460 * C2688) *
               C152696 * C152457 * C152530 * C3355 -
           (C117467 * C3217 - C117468 * C3211 - C117467 * C3218 +
            C117460 * C3223 + C117465 * C1715 - C117466 * C1702 -
            C117465 * C1716 + C117459 * C1738 + C117463 * C1237 -
            C117464 * C1229 - C117463 * C1238 + C117458 * C1247 +
            C117461 * C382 - C117462 * C369 - C117461 * C383 + C117457 * C405) *
               C152696 * C152457 * C152530 * C152575) *
              C152899 +
          ((C117461 * C380 - C117462 * C368 - C117461 * C381 + C117457 * C404 +
            C117463 * C1239 - C117464 * C1230 - C117463 * C1240 +
            C117458 * C1248 + C117465 * C1713 - C117466 * C1701 -
            C117465 * C1714 + C117459 * C1737 + C117467 * C3219 -
            C117468 * C3212 - C117467 * C3220 + C117460 * C3224) *
               C152696 * C152457 * C152530 * C152575 -
           (C117467 * C2671 - C117468 * C2663 - C117467 * C2672 +
            C117460 * C2687 + C117465 * C655 - C117466 * C636 - C117465 * C656 +
            C117459 * C672 + C117463 * C641 - C117464 * C629 - C117463 * C642 +
            C117458 * C665 + C117461 * C150 - C117462 * C139 - C117461 * C151 +
            C117457 * C163) *
               C152696 * C152457 * C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152530 * C152924 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C152530 * C152920 +
           (C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
            C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
            C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
            C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
            C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
               C152696 * C152457 * C152530 * C152906 -
           (C117467 * C10240 - C117468 * C10238 - C117467 * C10241 +
            C117460 * C10244 + C117465 * C8185 - C117466 * C8178 -
            C117465 * C8186 + C117459 * C8196 + C117463 * C2269 -
            C117464 * C2265 - C117463 * C2270 + C117458 * C2277 +
            C117461 * C1537 - C117462 * C1526 - C117461 * C1538 +
            C117457 * C1550) *
               C152696 * C152457 * C152530 * C152880) *
              C3495 +
          ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
            C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
            C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
            C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
            C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
               C152696 * C152457 * C152530 * C152920 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C152530 * C152924 -
           (C117467 * C9514 - C117468 * C9508 - C117467 * C9515 +
            C117460 * C9526 + C117465 * C1731 - C117466 * C1710 -
            C117465 * C1732 + C117459 * C1746 + C117463 * C1725 -
            C117464 * C1707 - C117463 * C1726 + C117458 * C1743 +
            C117461 * C390 - C117462 * C373 - C117461 * C391 + C117457 * C409) *
               C152696 * C152457 * C152530 * C152906 +
           (C117461 * C1535 - C117462 * C1525 - C117461 * C1536 +
            C117457 * C1549 + C117463 * C2271 - C117464 * C2266 -
            C117463 * C2272 + C117458 * C2278 + C117465 * C8183 -
            C117466 * C8177 - C117465 * C8184 + C117459 * C8195 +
            C117467 * C10242 - C117468 * C10239 - C117467 * C10243 +
            C117460 * C10245) *
               C152696 * C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
             C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
             C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
             C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
             C117460 * C2690) *
                C152696 * C152457 * C152918 -
            (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
             C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
             C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
             C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
             C117462 * C632 - C117461 * C648 + C117457 * C668) *
                C152696 * C152457 * C152903 +
            (C117461 * C649 - C117462 * C633 - C117461 * C650 + C117457 * C669 +
             C117463 * C2677 - C117464 * C2666 - C117463 * C2678 +
             C117458 * C2690 + C117465 * C2679 - C117466 * C2667 -
             C117465 * C2680 + C117459 * C2691 + C117467 * C18111 -
             C117468 * C18106 - C117467 * C18112 + C117460 * C18118) *
                C152696 * C152457 * C152873) *
               C3355 +
           ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
             C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
             C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
             C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
             C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
             C117460 * C9528) *
                C152696 * C152457 * C152903 -
            (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
             C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
             C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
             C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
             C117461 * C386 - C117462 * C371 - C117461 * C387 +
             C117457 * C407) *
                C152696 * C152457 * C152918 -
            (C117467 * C18851 - C117468 * C18849 - C117467 * C18852 +
             C117460 * C18855 + C117465 * C9518 - C117466 * C9510 -
             C117465 * C9519 + C117459 * C9528 + C117463 * C3213 -
             C117464 * C3209 - C117463 * C3214 + C117458 * C3221 +
             C117461 * C1719 - C117462 * C1704 - C117461 * C1720 +
             C117457 * C1740) *
                C152696 * C152457 * C152873) *
               C152575) *
              C3495 +
          (((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
             C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
             C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
             C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
             C117467 * C2682 + C117460 * C2692) *
                C152696 * C152457 * C152903 -
            (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
             C117460 * C2689 + C117465 * C651 - C117466 * C634 -
             C117465 * C652 + C117459 * C670 + C117463 * C645 - C117464 * C631 -
             C117463 * C646 + C117458 * C667 + C117461 * C146 - C117462 * C137 -
             C117461 * C147 + C117457 * C161) *
                C152696 * C152457 * C152918 -
            (C117467 * C18109 - C117468 * C18105 - C117467 * C18110 +
             C117460 * C18117 + C117465 * C2681 - C117466 * C2668 -
             C117465 * C2682 + C117459 * C2692 + C117463 * C2675 -
             C117464 * C2665 - C117463 * C2676 + C117458 * C2689 +
             C117461 * C651 - C117462 * C634 - C117461 * C652 +
             C117457 * C670) *
                C152696 * C152457 * C152873) *
               C3355 +
           ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
             C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
             C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
             C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
             C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
                C152696 * C152457 * C152918 -
            (C117467 * C9522 - C117468 * C9512 - C117467 * C9523 +
             C117460 * C9530 + C117465 * C3215 - C117466 * C3210 -
             C117465 * C3216 + C117459 * C3222 + C117463 * C1717 -
             C117464 * C1703 - C117463 * C1718 + C117458 * C1739 +
             C117461 * C1235 - C117462 * C1228 - C117461 * C1236 +
             C117457 * C1246) *
                C152696 * C152457 * C152903 +
            (C117461 * C1717 - C117462 * C1703 - C117461 * C1718 +
             C117457 * C1739 + C117463 * C3215 - C117464 * C3210 -
             C117463 * C3216 + C117458 * C3222 + C117465 * C9522 -
             C117466 * C9512 - C117465 * C9523 + C117459 * C9530 +
             C117467 * C18853 - C117468 * C18850 - C117467 * C18854 +
             C117460 * C18856) *
                C152696 * C152457 * C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[303] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C152829 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152617) *
               C3355 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             C111655 * C6340) *
                C152457 * C152617 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C152829) *
               C152575) *
              C152489 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C152617 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C152829) *
               C3355 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C152829 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C152617) *
               C152575) *
              C152498 +
          (((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
                C152457 * C152829 -
            ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
             C101223 * C6338) *
                C152457 * C152617) *
               C3355 +
           ((C101979 * C6338 + (C103076 + C103075) * C6339 +
             (C100534 * C2273 - C100535 * C2267 - C100534 * C2274 +
              C100532 * C2279 + C100536 * C9823 - C100537 * C9822 -
              C100536 * C9824 + C152775 * C9825) *
                 C6340) *
                C152457 * C152617 -
            ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
             C100917 * C6338) *
                C152457 * C152829) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C152829 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C152617) *
               C3355 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C152617 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C152829) *
               C152575) *
              C152489 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C152617 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C152829) *
               C3355 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C152829 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C152617) *
               C152575) *
              C152498 +
          (((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
             C100614 * C51247) *
                C152829 -
            ((C101645 + C101646) * C152696 * C51247 +
             (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
                C152617) *
               C3355 +
           ((C101980 * C51245 + (C101978 + C101977) * C152696 * C51246 +
             (C100534 * C1241 - C100535 * C1231 - C100534 * C1242 +
              C100532 * C1249 + C100536 * C2890 - C100537 * C2889 -
              C100536 * C2891 + C152775 * C2892) *
                 C152696 * C51247) *
                C152617 -
            ((C101435 + C101436) * C152696 * C51247 +
             (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
                C152829) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
             C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
             C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
             C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
             C117460 * C2690) *
                C152696 * C152457 * C152829 -
            (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
             C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
             C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
             C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
             C117462 * C632 - C117461 * C648 + C117457 * C668) *
                C152696 * C152457 * C152617) *
               C3355 +
           ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
             C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
             C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
             C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
             C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
             C117460 * C9528) *
                C152696 * C152457 * C152617 -
            (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
             C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
             C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
             C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
             C117461 * C386 - C117462 * C371 - C117461 * C387 +
             C117457 * C407) *
                C152696 * C152457 * C152829) *
               C152575) *
              C152489 +
          (((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
             C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
             C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
             C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
             C117467 * C2682 + C117460 * C2692) *
                C152696 * C152457 * C152617 -
            (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
             C117460 * C2689 + C117465 * C651 - C117466 * C634 -
             C117465 * C652 + C117459 * C670 + C117463 * C645 - C117464 * C631 -
             C117463 * C646 + C117458 * C667 + C117461 * C146 - C117462 * C137 -
             C117461 * C147 + C117457 * C161) *
                C152696 * C152457 * C152829) *
               C3355 +
           ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
             C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
             C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
             C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
             C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
                C152696 * C152457 * C152829 -
            (C117467 * C9522 - C117468 * C9512 - C117467 * C9523 +
             C117460 * C9530 + C117465 * C3215 - C117466 * C3210 -
             C117465 * C3216 + C117459 * C3222 + C117463 * C1717 -
             C117464 * C1703 - C117463 * C1718 + C117458 * C1739 +
             C117461 * C1235 - C117462 * C1228 - C117461 * C1236 +
             C117457 * C1246) *
                C152696 * C152457 * C152617) *
               C152575) *
              C152498 +
          (((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
             C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
             C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
             C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
             C117460 * C2688) *
                C152696 * C152457 * C152829 -
            (C117467 * C2683 - C117468 * C2669 - C117467 * C2684 +
             C117460 * C2693 + C117465 * C2673 - C117466 * C2664 -
             C117465 * C2674 + C117459 * C2688 + C117463 * C653 -
             C117464 * C635 - C117463 * C654 + C117458 * C671 + C117461 * C643 -
             C117462 * C630 - C117461 * C644 + C117457 * C666) *
                C152696 * C152457 * C152617) *
               C3355 +
           ((C117461 * C1237 - C117462 * C1229 - C117461 * C1238 +
             C117457 * C1247 + C117463 * C1715 - C117464 * C1702 -
             C117463 * C1716 + C117458 * C1738 + C117465 * C3217 -
             C117466 * C3211 - C117465 * C3218 + C117459 * C3223 +
             C117467 * C18412 - C117468 * C18411 - C117467 * C18413 +
             C117460 * C18414) *
                C152696 * C152457 * C152617 -
            (C117467 * C3217 - C117468 * C3211 - C117467 * C3218 +
             C117460 * C3223 + C117465 * C1715 - C117466 * C1702 -
             C117465 * C1716 + C117459 * C1738 + C117463 * C1237 -
             C117464 * C1229 - C117463 * C1238 + C117458 * C1247 +
             C117461 * C382 - C117462 * C369 - C117461 * C383 +
             C117457 * C405) *
                C152696 * C152457 * C152829) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q));
    d2ee[304] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152530 * C152924 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152530 * C152920 +
           ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152530 * C152906 -
           ((C102757 + C102758) * C152696 * C51247 +
            (C102759 + C102760) * C152696 * C51246 +
            (C100536 * C2269 - C100537 * C2265 - C100536 * C2270 +
             C152775 * C2277 + C100534 * C1537 - C100535 * C1526 -
             C100534 * C1538 + C100532 * C1550) *
                C152696 * C51245) *
               C152530 * C152880) *
              C3495 +
          (((C100908 + C100907) * C152696 * C51245 +
            (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
               C152530 * C152920 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152530 * C152924 -
           ((C100915 + C100916) * C152696 * C51247 +
            (C100912 + C100911) * C152696 * C51246 +
            (C100910 + C100909) * C152696 * C51245) *
               C152530 * C152906 +
           ((C102760 + C102759) * C152696 * C51245 +
            (C102758 + C102757) * C152696 * C51246 +
            (C100534 * C1531 - C100535 * C1523 - C100534 * C1532 +
             C100532 * C1547 + C100536 * C2275 - C100537 * C2268 -
             C100536 * C2276 + C152775 * C2280) *
                C152696 * C51247) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152530 * C3355 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152530 * C152575) *
              C152923 +
          (((C100908 + C100907) * C152696 * C51245 +
            (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
               C152530 * C152575 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152530 * C3355) *
              C152916 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152530 * C3355 -
           ((C101435 + C101436) * C152696 * C51247 +
            (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
               C152530 * C152575) *
              C152899 +
          ((C101430 * C51245 + (C101436 + C101435) * C152696 * C51246 +
            (C100534 * C400 - C100535 * C378 - C100534 * C401 + C100532 * C414 +
             C100536 * C1243 - C100537 * C1232 - C100536 * C1244 +
             C152775 * C1250) *
                C152696 * C51247) *
               C152530 * C152575 -
           ((C100607 + C100608) * C152696 * C51247 +
            (C100606 + C100605) * C152696 * C51246 + C100613 * C51245) *
               C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C3355 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C152575) *
              C152923 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            C111141 * C6340) *
               C152457 * C152530 * C152575 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C3355) *
              C152916 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152530 * C3355 -
           ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
            C100917 * C6338) *
               C152457 * C152530 * C152575) *
              C152899 +
          ((C101421 * C6338 + (C100916 + C100915) * C6339 +
            (C100534 * C1531 - C100535 * C1523 - C100534 * C1532 +
             C100532 * C1547 + C100536 * C2275 - C100537 * C2268 -
             C100536 * C2276 + C152775 * C2280) *
                C6340) *
               C152457 * C152530 * C152575 -
           ((C100915 + C100916) * C6340 + (C100914 + C100913) * C6339 +
            C100610 * C6338) *
               C152457 * C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C152924 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C152920 +
           (C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C152530 * C152906 -
           ((C110668 + C110669) * C6340 + (C110667 + C110666) * C6339 +
            C110641 * C6338) *
               C152457 * C152530 * C152880) *
              C3495 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            C111141 * C6340) *
               C152457 * C152530 * C152920 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C152924 -
           ((C111154 + C111155) * C6340 + (C102759 + C102760) * C6339 +
            C109357 * C6338) *
               C152457 * C152530 * C152906 +
           (C111141 * C6338 + (C111155 + C111154) * C6339 +
            (C100534 * C7926 - C100535 * C7922 - C100534 * C7927 +
             C100532 * C7934 + C100536 * C8939 - C100537 * C8936 -
             C100536 * C8940 + C152775 * C8942) *
                C6340) *
               C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152530 * C3355 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C152530 * C152575) *
              C152923 +
          ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
            C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
            C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
            C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
            C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
               C152696 * C152457 * C152530 * C152575 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C152530 * C3355) *
              C152916 +
          ((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
            C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
            C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
            C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
            C117460 * C2688) *
               C152696 * C152457 * C152530 * C3355 -
           (C117467 * C3217 - C117468 * C3211 - C117467 * C3218 +
            C117460 * C3223 + C117465 * C1715 - C117466 * C1702 -
            C117465 * C1716 + C117459 * C1738 + C117463 * C1237 -
            C117464 * C1229 - C117463 * C1238 + C117458 * C1247 +
            C117461 * C382 - C117462 * C369 - C117461 * C383 + C117457 * C405) *
               C152696 * C152457 * C152530 * C152575) *
              C152899 +
          ((C117461 * C380 - C117462 * C368 - C117461 * C381 + C117457 * C404 +
            C117463 * C1239 - C117464 * C1230 - C117463 * C1240 +
            C117458 * C1248 + C117465 * C1713 - C117466 * C1701 -
            C117465 * C1714 + C117459 * C1737 + C117467 * C3219 -
            C117468 * C3212 - C117467 * C3220 + C117460 * C3224) *
               C152696 * C152457 * C152530 * C152575 -
           (C117467 * C2671 - C117468 * C2663 - C117467 * C2672 +
            C117460 * C2687 + C117465 * C655 - C117466 * C636 - C117465 * C656 +
            C117459 * C672 + C117463 * C641 - C117464 * C629 - C117463 * C642 +
            C117458 * C665 + C117461 * C150 - C117462 * C139 - C117461 * C151 +
            C117457 * C163) *
               C152696 * C152457 * C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152530 * C152924 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C152530 * C152920 +
           (C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
            C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
            C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
            C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
            C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
               C152696 * C152457 * C152530 * C152906 -
           (C117467 * C10240 - C117468 * C10238 - C117467 * C10241 +
            C117460 * C10244 + C117465 * C8185 - C117466 * C8178 -
            C117465 * C8186 + C117459 * C8196 + C117463 * C2269 -
            C117464 * C2265 - C117463 * C2270 + C117458 * C2277 +
            C117461 * C1537 - C117462 * C1526 - C117461 * C1538 +
            C117457 * C1550) *
               C152696 * C152457 * C152530 * C152880) *
              C3495 +
          ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
            C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
            C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
            C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
            C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
               C152696 * C152457 * C152530 * C152920 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C152530 * C152924 -
           (C117467 * C9514 - C117468 * C9508 - C117467 * C9515 +
            C117460 * C9526 + C117465 * C1731 - C117466 * C1710 -
            C117465 * C1732 + C117459 * C1746 + C117463 * C1725 -
            C117464 * C1707 - C117463 * C1726 + C117458 * C1743 +
            C117461 * C390 - C117462 * C373 - C117461 * C391 + C117457 * C409) *
               C152696 * C152457 * C152530 * C152906 +
           (C117461 * C1535 - C117462 * C1525 - C117461 * C1536 +
            C117457 * C1549 + C117463 * C2271 - C117464 * C2266 -
            C117463 * C2272 + C117458 * C2278 + C117465 * C8183 -
            C117466 * C8177 - C117465 * C8184 + C117459 * C8195 +
            C117467 * C10242 - C117468 * C10239 - C117467 * C10243 +
            C117460 * C10245) *
               C152696 * C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[305] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C4361 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152617) *
               C152571 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             C111655 * C6340) *
                C152457 * C152617 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C4361) *
               C152578 +
           ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
                C152457 * C4361 -
            ((C111668 + C111669) * C6340 + (C110943 + C110942) * C6339 +
             C110889 * C6338) *
                C152457 * C152617) *
               C3839) *
              C152814 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C152617 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C4361) *
               C152571 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C4361 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C152617) *
               C152578 +
           ((C111446 * C6338 + (C111460 + C111459) * C6339 +
             (C100534 * C8187 - C100535 * C8179 - C100534 * C8188 +
              C100532 * C8197 + C100536 * C8193 - C100537 * C8182 -
              C100536 * C8194 + C152775 * C8200) *
                 C6340) *
                C152457 * C152617 -
            ((C111154 + C111155) * C6340 + (C102759 + C102760) * C6339 +
             C109357 * C6338) *
                C152457 * C4361) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C4361 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C152617) *
               C152571 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C152617 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C4361) *
               C152578 +
           (((C100534 * C388 - C100535 * C372 - C100534 * C389 +
              C100532 * C408 + C100536 * C1727 - C100537 * C1708 -
              C100536 * C1728 + C152775 * C1744) *
                 C152696 * C51245 +
             (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
                C4361 -
            ((C103075 + C103076) * C152696 * C51247 +
             (C103077 + C103078) * C152696 * C51246 +
             (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
              C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
              C100534 * C1728 + C100532 * C1744) *
                 C152696 * C51245) *
                C152617) *
               C3839) *
              C152814 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C152617 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C4361) *
               C152571 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C4361 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C152617) *
               C152578 +
           (((C103078 + C103077) * C152696 * C51245 +
             (C103076 + C103075) * C152696 * C51246 +
             (C100534 * C1721 - C100535 * C1705 - C100534 * C1722 +
              C100532 * C1741 + C100536 * C1735 - C100537 * C1712 -
              C100536 * C1736 + C152775 * C1748) *
                 C152696 * C51247) *
                C152617 -
            ((C100915 + C100916) * C152696 * C51247 +
             (C100912 + C100911) * C152696 * C51246 +
             (C100910 + C100909) * C152696 * C51245) *
                C4361) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
             C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
             C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
             C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
             C117460 * C2690) *
                C152696 * C152457 * C4361 -
            (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
             C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
             C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
             C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
             C117462 * C632 - C117461 * C648 + C117457 * C668) *
                C152696 * C152457 * C152617) *
               C152571 +
           ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
             C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
             C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
             C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
             C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
             C117460 * C9528) *
                C152696 * C152457 * C152617 -
            (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
             C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
             C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
             C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
             C117461 * C386 - C117462 * C371 - C117461 * C387 +
             C117457 * C407) *
                C152696 * C152457 * C4361) *
               C152578 +
           ((C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
             C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
             C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
             C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
             C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
                C152696 * C152457 * C4361 -
            (C117467 * C9520 - C117468 * C9511 - C117467 * C9521 +
             C117460 * C9529 + C117465 * C9516 - C117466 * C9509 -
             C117465 * C9517 + C117459 * C9527 + C117463 * C1729 -
             C117464 * C1709 - C117463 * C1730 + C117458 * C1745 +
             C117461 * C1727 - C117462 * C1708 - C117461 * C1728 +
             C117457 * C1744) *
                C152696 * C152457 * C152617) *
               C3839) *
              C152814 +
          (((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
             C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
             C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
             C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
             C117467 * C2682 + C117460 * C2692) *
                C152696 * C152457 * C152617 -
            (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
             C117460 * C2689 + C117465 * C651 - C117466 * C634 -
             C117465 * C652 + C117459 * C670 + C117463 * C645 - C117464 * C631 -
             C117463 * C646 + C117458 * C667 + C117461 * C146 - C117462 * C137 -
             C117461 * C147 + C117457 * C161) *
                C152696 * C152457 * C4361) *
               C152571 +
           ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
             C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
             C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
             C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
             C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
                C152696 * C152457 * C4361 -
            (C117467 * C9522 - C117468 * C9512 - C117467 * C9523 +
             C117460 * C9530 + C117465 * C3215 - C117466 * C3210 -
             C117465 * C3216 + C117459 * C3222 + C117463 * C1717 -
             C117464 * C1703 - C117463 * C1718 + C117458 * C1739 +
             C117461 * C1235 - C117462 * C1228 - C117461 * C1236 +
             C117457 * C1246) *
                C152696 * C152457 * C152617) *
               C152578 +
           ((C117461 * C1725 - C117462 * C1707 - C117461 * C1726 +
             C117457 * C1743 + C117463 * C1731 - C117464 * C1710 -
             C117463 * C1732 + C117458 * C1746 + C117465 * C9514 -
             C117466 * C9508 - C117465 * C9515 + C117459 * C9526 +
             C117467 * C9524 - C117468 * C9513 - C117467 * C9525 +
             C117460 * C9531) *
                C152696 * C152457 * C152617 -
            (C117467 * C9514 - C117468 * C9508 - C117467 * C9515 +
             C117460 * C9526 + C117465 * C1731 - C117466 * C1710 -
             C117465 * C1732 + C117459 * C1746 + C117463 * C1725 -
             C117464 * C1707 - C117463 * C1726 + C117458 * C1743 +
             C117461 * C390 - C117462 * C373 - C117461 * C391 +
             C117457 * C409) *
                C152696 * C152457 * C4361) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[306] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152613 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152620 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C110938 + C110939) * C6339 + C110946 * C6340) *
               C152457 * C5033) *
              C152571 +
          (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
            C111655 * C6340) *
               C152457 * C152620 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152613 -
           ((C110944 + C110945) * C6340 + (C110941 + C110940) * C6339 +
            (C110939 + C110938) * C6338) *
               C152457 * C5033) *
              C152578 +
          ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C152613 -
           ((C111668 + C111669) * C6340 + (C110943 + C110942) * C6339 +
            C110889 * C6338) *
               C152457 * C152620 +
           (C110946 * C6338 + (C110945 + C110944) * C6339 +
            (C100534 * C8191 - C100535 * C8181 - C100534 * C8192 +
             C100532 * C8199 + C100536 * C61859 - C100537 * C61858 -
             C100536 * C61860 + C152775 * C61861) *
                C6340) *
               C152457 * C5033) *
              C3839) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152613 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C152620 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C152696 * C51245 +
            (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
               C5033) *
              C152571 +
          (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
             C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
             C100536 * C1720 + C152775 * C1740) *
                C152696 * C51245 +
            (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
               C152620 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152613 -
           ((C104145 + C104146) * C152696 * C51247 +
            (C104147 + C104148) * C152696 * C51246 +
            (C100536 * C3213 - C100537 * C3209 - C100536 * C3214 +
             C152775 * C3221 + C100534 * C1719 - C100535 * C1704 -
             C100534 * C1720 + C100532 * C1740) *
                C152696 * C51245) *
               C5033) *
              C152578 +
          (((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152613 -
           ((C103075 + C103076) * C152696 * C51247 +
            (C103077 + C103078) * C152696 * C51246 +
            (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
             C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
             C100534 * C1728 + C100532 * C1744) *
                C152696 * C51245) *
               C152620 +
           ((C100534 * C1729 - C100535 * C1709 - C100534 * C1730 +
             C100532 * C1745 + C100536 * C9516 - C100537 * C9509 -
             C100536 * C9517 + C152775 * C9527) *
                C152696 * C51245 +
            (C100534 * C1731 - C100535 * C1710 - C100534 * C1732 +
             C100532 * C1746 + C100536 * C9514 - C100537 * C9508 -
             C100536 * C9515 + C152775 * C9526) *
                C152696 * C51246 +
            (C100534 * C1733 - C100535 * C1711 - C100534 * C1734 +
             C100532 * C1747 + C100536 * C10024 - C100537 * C10023 -
             C100536 * C10025 + C152775 * C10026) *
                C152696 * C51247) *
               C5033) *
              C3839) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152613 -
           (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
            C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
            C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
            C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
            C117462 * C632 - C117461 * C648 + C117457 * C668) *
               C152696 * C152457 * C152620 +
           (C117461 * C649 - C117462 * C633 - C117461 * C650 + C117457 * C669 +
            C117463 * C2677 - C117464 * C2666 - C117463 * C2678 +
            C117458 * C2690 + C117465 * C2679 - C117466 * C2667 -
            C117465 * C2680 + C117459 * C2691 + C117467 * C18111 -
            C117468 * C18106 - C117467 * C18112 + C117460 * C18118) *
               C152696 * C152457 * C5033) *
              C152571 +
          ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
            C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
            C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
            C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
            C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
            C117460 * C9528) *
               C152696 * C152457 * C152620 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C152613 -
           (C117467 * C18851 - C117468 * C18849 - C117467 * C18852 +
            C117460 * C18855 + C117465 * C9518 - C117466 * C9510 -
            C117465 * C9519 + C117459 * C9528 + C117463 * C3213 -
            C117464 * C3209 - C117463 * C3214 + C117458 * C3221 +
            C117461 * C1719 - C117462 * C1704 - C117461 * C1720 +
            C117457 * C1740) *
               C152696 * C152457 * C5033) *
              C152578 +
          ((C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
            C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
            C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
            C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
            C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
               C152696 * C152457 * C152613 -
           (C117467 * C9520 - C117468 * C9511 - C117467 * C9521 +
            C117460 * C9529 + C117465 * C9516 - C117466 * C9509 -
            C117465 * C9517 + C117459 * C9527 + C117463 * C1729 -
            C117464 * C1709 - C117463 * C1730 + C117458 * C1745 +
            C117461 * C1727 - C117462 * C1708 - C117461 * C1728 +
            C117457 * C1744) *
               C152696 * C152457 * C152620 +
           (C117461 * C1729 - C117462 * C1709 - C117461 * C1730 +
            C117457 * C1745 + C117463 * C9516 - C117464 * C9509 -
            C117463 * C9517 + C117458 * C9527 + C117465 * C9520 -
            C117466 * C9511 - C117465 * C9521 + C117459 * C9529 +
            C117467 * C68735 - C117468 * C68734 - C117467 * C68736 +
            C117460 * C68737) *
               C152696 * C152457 * C5033) *
              C3839) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[307] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
                  C100532 * C160 + C100536 * C647 - C100537 * C632 -
                  C100536 * C648 + C152775 * C668) *
                     C152696 * C51245 +
                 (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                    C4361 -
                (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
                 (C100536 * C649 - C100537 * C633 - C100536 * C650 +
                  C152775 * C669 + C100534 * C647 - C100535 * C632 -
                  C100534 * C648 + C100532 * C668) *
                     C152696 * C51245) *
                    C152617) *
                   C3355 +
               (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
                  C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
                  C100536 * C1720 + C152775 * C1740) *
                     C152696 * C51245 +
                 (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                    C152617 -
                (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
                 (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
                  C152775 * C1245 + C100534 * C386 - C100535 * C371 -
                  C100534 * C387 + C100532 * C407) *
                     C152696 * C51245) *
                    C4361) *
                   C152575) *
                  C152914 +
              ((((C101214 + C101213) * C152696 * C51245 +
                 (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                    C152617 -
                (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
                 (C100600 + C100599) * C152696 * C51245) *
                    C4361) *
                   C3355 +
               (((C100908 + C100907) * C152696 * C51245 +
                 (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                    C4361 -
                ((C101977 + C101978) * C152696 * C51247 +
                 (C101976 + C101975) * C152696 * C51246 +
                 (C101974 + C101973) * C152696 * C51245) *
                    C152617) *
                   C152575) *
                  C152897 +
              (((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
                 C100614 * C51247) *
                    C4361 -
                ((C101645 + C101646) * C152696 * C51247 +
                 (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
                    C152617) *
                   C3355 +
               ((C101980 * C51245 + (C101978 + C101977) * C152696 * C51246 +
                 (C100534 * C1241 - C100535 * C1231 - C100534 * C1242 +
                  C100532 * C1249 + C100536 * C2890 - C100537 * C2889 -
                  C100536 * C2891 + C152775 * C2892) *
                     C152696 * C51247) *
                    C152617 -
                ((C101435 + C101436) * C152696 * C51247 +
                 (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
                    C4361) *
                   C152575) *
                  C152864) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
                 C100532 * C160 + C100536 * C647 - C100537 * C632 -
                 C100536 * C648 + C152775 * C668) *
                    C152696 * C51245 +
                (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                   C4361 -
               (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
                (C100536 * C649 - C100537 * C633 - C100536 * C650 +
                 C152775 * C669 + C100534 * C647 - C100535 * C632 -
                 C100534 * C648 + C100532 * C668) *
                    C152696 * C51245) *
                   C152617) *
                  C152924 +
              (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
                 C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
                 C100536 * C1720 + C152775 * C1740) *
                    C152696 * C51245 +
                (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                   C152617 -
               (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
                (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
                 C152775 * C1245 + C100534 * C386 - C100535 * C371 -
                 C100534 * C387 + C100532 * C407) *
                    C152696 * C51245) *
                   C4361) *
                  C152920 +
              (((C100534 * C388 - C100535 * C372 - C100534 * C389 +
                 C100532 * C408 + C100536 * C1727 - C100537 * C1708 -
                 C100536 * C1728 + C152775 * C1744) *
                    C152696 * C51245 +
                (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
                   C4361 -
               ((C103075 + C103076) * C152696 * C51247 +
                (C103077 + C103078) * C152696 * C51246 +
                (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
                 C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
                 C100534 * C1728 + C100532 * C1744) *
                    C152696 * C51245) *
                   C152617) *
                  C152906 +
              (((C100534 * C2269 - C100535 * C2265 - C100534 * C2270 +
                 C100532 * C2277 + C100536 * C8185 - C100537 * C8178 -
                 C100536 * C8186 + C152775 * C8196) *
                    C152696 * C51245 +
                (C100534 * C2271 - C100535 * C2266 - C100534 * C2272 +
                 C100532 * C2278 + C100536 * C8183 - C100537 * C8177 -
                 C100536 * C8184 + C152775 * C8195) *
                    C152696 * C51246 +
                (C100534 * C2273 - C100535 * C2267 - C100534 * C2274 +
                 C100532 * C2279 + C100536 * C9823 - C100537 * C9822 -
                 C100536 * C9824 + C152775 * C9825) *
                    C152696 * C51247) *
                   C152617 -
               ((C102757 + C102758) * C152696 * C51247 +
                (C102759 + C102760) * C152696 * C51246 +
                (C100536 * C2269 - C100537 * C2265 - C100536 * C2270 +
                 C152775 * C2277 + C100534 * C1537 - C100535 * C1526 -
                 C100534 * C1538 + C100532 * C1550) *
                    C152696 * C51245) *
                   C4361) *
                  C152880) *
             C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152925 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C152922 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C152696 * C51245 +
            (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
               C152909 -
           ((C104367 + C104368) * C152696 * C51247 +
            (C104369 + C104370) * C152696 * C51246 +
            (C100536 * C2679 - C100537 * C2667 - C100536 * C2680 +
             C152775 * C2691 + C100534 * C2677 - C100535 * C2666 -
             C100534 * C2678 + C100532 * C2690) *
                C152696 * C51245) *
               C152886) *
              C3355 +
          (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
             C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
             C100536 * C1720 + C152775 * C1740) *
                C152696 * C51245 +
            (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
               C152922 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152925 -
           ((C104145 + C104146) * C152696 * C51247 +
            (C104147 + C104148) * C152696 * C51246 +
            (C100536 * C3213 - C100537 * C3209 - C100536 * C3214 +
             C152775 * C3221 + C100534 * C1719 - C100535 * C1704 -
             C100534 * C1720 + C100532 * C1740) *
                C152696 * C51245) *
               C152909 +
           ((C100534 * C3213 - C100535 * C3209 - C100534 * C3214 +
             C100532 * C3221 + C100536 * C9518 - C100537 * C9510 -
             C100536 * C9519 + C152775 * C9528) *
                C152696 * C51245 +
            (C100534 * C3215 - C100535 * C3210 - C100534 * C3216 +
             C100532 * C3222 + C100536 * C9522 - C100537 * C9512 -
             C100536 * C9523 + C152775 * C9530) *
                C152696 * C51246 +
            (C100534 * C3217 - C100535 * C3211 - C100534 * C3218 +
             C100532 * C3223 + C100536 * C18412 - C100537 * C18411 -
             C100536 * C18413 + C152775 * C18414) *
                C152696 * C51247) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C4361 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152617) *
               C3355 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             C111655 * C6340) *
                C152457 * C152617 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C4361) *
               C152575) *
              C152914 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C152617 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C4361) *
               C3355 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C4361 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C152617) *
               C152575) *
              C152897 +
          (((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
                C152457 * C4361 -
            ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
             C101223 * C6338) *
                C152457 * C152617) *
               C3355 +
           ((C101979 * C6338 + (C103076 + C103075) * C6339 +
             (C100534 * C2273 - C100535 * C2267 - C100534 * C2274 +
              C100532 * C2279 + C100536 * C9823 - C100537 * C9822 -
              C100536 * C9824 + C152775 * C9825) *
                 C6340) *
                C152457 * C152617 -
            ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
             C100917 * C6338) *
                C152457 * C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C4361 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152617) *
              C152924 +
          (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
            C111655 * C6340) *
               C152457 * C152617 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C4361) *
              C152920 +
          ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C4361 -
           ((C111668 + C111669) * C6340 + (C110943 + C110942) * C6339 +
            C110889 * C6338) *
               C152457 * C152617) *
              C152906 +
          ((C111655 * C6338 + (C111669 + C111668) * C6339 +
            (C100534 * C8937 - C100535 * C8935 - C100534 * C8938 +
             C100532 * C8941 + C100536 * C60551 - C100537 * C60550 -
             C100536 * C60552 + C152775 * C60553) *
                C6340) *
               C152457 * C152617 -
           ((C110668 + C110669) * C6340 + (C110667 + C110666) * C6339 +
            C110641 * C6338) *
               C152457 * C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152925 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152922 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C110938 + C110939) * C6339 + C110946 * C6340) *
               C152457 * C152909 -
           ((C112944 + C112945) * C6340 + (C112946 + C112947) * C6339 +
            (C100536 * C2679 - C100537 * C2667 - C100536 * C2680 +
             C152775 * C2691 + C100534 * C2677 - C100535 * C2666 -
             C100534 * C2678 + C100532 * C2690) *
                C6338) *
               C152457 * C152886) *
              C3355 +
          (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
            C111655 * C6340) *
               C152457 * C152922 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152925 -
           ((C110944 + C110945) * C6340 + (C110941 + C110940) * C6339 +
            (C110939 + C110938) * C6338) *
               C152457 * C152909 +
           ((C112947 + C112946) * C6338 + (C112945 + C112944) * C6339 +
            (C100534 * C10240 - C100535 * C10238 - C100534 * C10241 +
             C100532 * C10244 + C100536 * C61401 - C100537 * C61400 -
             C100536 * C61402 + C152775 * C61403) *
                C6340) *
               C152457 * C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
             C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
             C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
             C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
             C117460 * C2690) *
                C152696 * C152457 * C4361 -
            (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
             C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
             C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
             C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
             C117462 * C632 - C117461 * C648 + C117457 * C668) *
                C152696 * C152457 * C152617) *
               C3355 +
           ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
             C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
             C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
             C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
             C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
             C117460 * C9528) *
                C152696 * C152457 * C152617 -
            (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
             C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
             C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
             C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
             C117461 * C386 - C117462 * C371 - C117461 * C387 +
             C117457 * C407) *
                C152696 * C152457 * C4361) *
               C152575) *
              C152914 +
          (((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
             C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
             C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
             C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
             C117467 * C2682 + C117460 * C2692) *
                C152696 * C152457 * C152617 -
            (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
             C117460 * C2689 + C117465 * C651 - C117466 * C634 -
             C117465 * C652 + C117459 * C670 + C117463 * C645 - C117464 * C631 -
             C117463 * C646 + C117458 * C667 + C117461 * C146 - C117462 * C137 -
             C117461 * C147 + C117457 * C161) *
                C152696 * C152457 * C4361) *
               C3355 +
           ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
             C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
             C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
             C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
             C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
                C152696 * C152457 * C4361 -
            (C117467 * C9522 - C117468 * C9512 - C117467 * C9523 +
             C117460 * C9530 + C117465 * C3215 - C117466 * C3210 -
             C117465 * C3216 + C117459 * C3222 + C117463 * C1717 -
             C117464 * C1703 - C117463 * C1718 + C117458 * C1739 +
             C117461 * C1235 - C117462 * C1228 - C117461 * C1236 +
             C117457 * C1246) *
                C152696 * C152457 * C152617) *
               C152575) *
              C152897 +
          (((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
             C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
             C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
             C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
             C117460 * C2688) *
                C152696 * C152457 * C4361 -
            (C117467 * C2683 - C117468 * C2669 - C117467 * C2684 +
             C117460 * C2693 + C117465 * C2673 - C117466 * C2664 -
             C117465 * C2674 + C117459 * C2688 + C117463 * C653 -
             C117464 * C635 - C117463 * C654 + C117458 * C671 + C117461 * C643 -
             C117462 * C630 - C117461 * C644 + C117457 * C666) *
                C152696 * C152457 * C152617) *
               C3355 +
           ((C117461 * C1237 - C117462 * C1229 - C117461 * C1238 +
             C117457 * C1247 + C117463 * C1715 - C117464 * C1702 -
             C117463 * C1716 + C117458 * C1738 + C117465 * C3217 -
             C117466 * C3211 - C117465 * C3218 + C117459 * C3223 +
             C117467 * C18412 - C117468 * C18411 - C117467 * C18413 +
             C117460 * C18414) *
                C152696 * C152457 * C152617 -
            (C117467 * C3217 - C117468 * C3211 - C117467 * C3218 +
             C117460 * C3223 + C117465 * C1715 - C117466 * C1702 -
             C117465 * C1716 + C117459 * C1738 + C117463 * C1237 -
             C117464 * C1229 - C117463 * C1238 + C117458 * C1247 +
             C117461 * C382 - C117462 * C369 - C117461 * C383 +
             C117457 * C405) *
                C152696 * C152457 * C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C4361 -
           (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
            C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
            C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
            C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
            C117462 * C632 - C117461 * C648 + C117457 * C668) *
               C152696 * C152457 * C152617) *
              C152924 +
          ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
            C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
            C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
            C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
            C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
            C117460 * C9528) *
               C152696 * C152457 * C152617 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C4361) *
              C152920 +
          ((C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
            C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
            C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
            C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
            C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
               C152696 * C152457 * C4361 -
           (C117467 * C9520 - C117468 * C9511 - C117467 * C9521 +
            C117460 * C9529 + C117465 * C9516 - C117466 * C9509 -
            C117465 * C9517 + C117459 * C9527 + C117463 * C1729 -
            C117464 * C1709 - C117463 * C1730 + C117458 * C1745 +
            C117461 * C1727 - C117462 * C1708 - C117461 * C1728 +
            C117457 * C1744) *
               C152696 * C152457 * C152617) *
              C152906 +
          ((C117461 * C2269 - C117462 * C2265 - C117461 * C2270 +
            C117457 * C2277 + C117463 * C8185 - C117464 * C8178 -
            C117463 * C8186 + C117458 * C8196 + C117465 * C10240 -
            C117466 * C10238 - C117465 * C10241 + C117459 * C10244 +
            C117467 * C61401 - C117468 * C61400 - C117467 * C61402 +
            C117460 * C61403) *
               C152696 * C152457 * C152617 -
           (C117467 * C10240 - C117468 * C10238 - C117467 * C10241 +
            C117460 * C10244 + C117465 * C8185 - C117466 * C8178 -
            C117465 * C8186 + C117459 * C8196 + C117463 * C2269 -
            C117464 * C2265 - C117463 * C2270 + C117458 * C2277 +
            C117461 * C1537 - C117462 * C1526 - C117461 * C1538 +
            C117457 * C1550) *
               C152696 * C152457 * C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152925 -
           (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
            C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
            C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
            C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
            C117462 * C632 - C117461 * C648 + C117457 * C668) *
               C152696 * C152457 * C152922 +
           (C117461 * C649 - C117462 * C633 - C117461 * C650 + C117457 * C669 +
            C117463 * C2677 - C117464 * C2666 - C117463 * C2678 +
            C117458 * C2690 + C117465 * C2679 - C117466 * C2667 -
            C117465 * C2680 + C117459 * C2691 + C117467 * C18111 -
            C117468 * C18106 - C117467 * C18112 + C117460 * C18118) *
               C152696 * C152457 * C152909 -
           (C117467 * C18113 - C117468 * C18107 - C117467 * C18114 +
            C117460 * C18119 + C117465 * C18111 - C117466 * C18106 -
            C117465 * C18112 + C117459 * C18118 + C117463 * C2679 -
            C117464 * C2667 - C117463 * C2680 + C117458 * C2691 +
            C117461 * C2677 - C117462 * C2666 - C117461 * C2678 +
            C117457 * C2690) *
               C152696 * C152457 * C152886) *
              C3355 +
          ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
            C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
            C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
            C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
            C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
            C117460 * C9528) *
               C152696 * C152457 * C152922 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C152925 -
           (C117467 * C18851 - C117468 * C18849 - C117467 * C18852 +
            C117460 * C18855 + C117465 * C9518 - C117466 * C9510 -
            C117465 * C9519 + C117459 * C9528 + C117463 * C3213 -
            C117464 * C3209 - C117463 * C3214 + C117458 * C3221 +
            C117461 * C1719 - C117462 * C1704 - C117461 * C1720 +
            C117457 * C1740) *
               C152696 * C152457 * C152909 +
           (C117461 * C3213 - C117462 * C3209 - C117461 * C3214 +
            C117457 * C3221 + C117463 * C9518 - C117464 * C9510 -
            C117463 * C9519 + C117458 * C9528 + C117465 * C18851 -
            C117466 * C18849 - C117465 * C18852 + C117459 * C18855 +
            C117467 * C68053 - C117468 * C68052 - C117467 * C68054 +
            C117460 * C68055) *
               C152696 * C152457 * C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[308] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C152613 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152620 +
            ((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C6338 +
             (C110938 + C110939) * C6339 + C110946 * C6340) *
                C152457 * C5033) *
               C3355 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             C111655 * C6340) *
                C152457 * C152620 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C152613 -
            ((C110944 + C110945) * C6340 + (C110941 + C110940) * C6339 +
             (C110939 + C110938) * C6338) *
                C152457 * C5033) *
               C152575) *
              C152814 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C152620 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C152613 -
            ((C112530 + C112531) * C6340 + (C104147 + C104148) * C6339 +
             (C101216 + C101215) * C6338) *
                C152457 * C5033) *
               C3355 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C152613 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C152620 +
            ((C104148 + C104147) * C6338 + (C112531 + C112530) * C6339 +
             (C100534 * C8183 - C100535 * C8177 - C100534 * C8184 +
              C100532 * C8195 + C100536 * C10242 - C100537 * C10239 -
              C100536 * C10243 + C152775 * C10245) *
                 C6340) *
                C152457 * C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C152613 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C152620 +
            ((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C152696 * C51245 +
             (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
                C5033) *
               C3355 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C152620 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C152613 -
            ((C104145 + C104146) * C152696 * C51247 +
             (C104147 + C104148) * C152696 * C51246 +
             (C100536 * C3213 - C100537 * C3209 - C100536 * C3214 +
              C152775 * C3221 + C100534 * C1719 - C100535 * C1704 -
              C100534 * C1720 + C100532 * C1740) *
                 C152696 * C51245) *
                C5033) *
               C152575) *
              C152814 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C152620 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C152613 -
            ((C101221 + C101222) * C152696 * C51247 +
             (C101218 + C101217) * C152696 * C51246 +
             (C101216 + C101215) * C152696 * C51245) *
                C5033) *
               C3355 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C152613 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C152620 +
            ((C104148 + C104147) * C152696 * C51245 +
             (C104146 + C104145) * C152696 * C51246 +
             (C100534 * C1713 - C100535 * C1701 - C100534 * C1714 +
              C100532 * C1737 + C100536 * C3219 - C100537 * C3212 -
              C100536 * C3220 + C152775 * C3224) *
                 C152696 * C51247) *
                C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
             C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
             C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
             C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
             C117460 * C2690) *
                C152696 * C152457 * C152613 -
            (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
             C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
             C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
             C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
             C117462 * C632 - C117461 * C648 + C117457 * C668) *
                C152696 * C152457 * C152620 +
            (C117461 * C649 - C117462 * C633 - C117461 * C650 + C117457 * C669 +
             C117463 * C2677 - C117464 * C2666 - C117463 * C2678 +
             C117458 * C2690 + C117465 * C2679 - C117466 * C2667 -
             C117465 * C2680 + C117459 * C2691 + C117467 * C18111 -
             C117468 * C18106 - C117467 * C18112 + C117460 * C18118) *
                C152696 * C152457 * C5033) *
               C3355 +
           ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
             C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
             C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
             C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
             C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
             C117460 * C9528) *
                C152696 * C152457 * C152620 -
            (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
             C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
             C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
             C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
             C117461 * C386 - C117462 * C371 - C117461 * C387 +
             C117457 * C407) *
                C152696 * C152457 * C152613 -
            (C117467 * C18851 - C117468 * C18849 - C117467 * C18852 +
             C117460 * C18855 + C117465 * C9518 - C117466 * C9510 -
             C117465 * C9519 + C117459 * C9528 + C117463 * C3213 -
             C117464 * C3209 - C117463 * C3214 + C117458 * C3221 +
             C117461 * C1719 - C117462 * C1704 - C117461 * C1720 +
             C117457 * C1740) *
                C152696 * C152457 * C5033) *
               C152575) *
              C152814 +
          (((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
             C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
             C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
             C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
             C117467 * C2682 + C117460 * C2692) *
                C152696 * C152457 * C152620 -
            (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
             C117460 * C2689 + C117465 * C651 - C117466 * C634 -
             C117465 * C652 + C117459 * C670 + C117463 * C645 - C117464 * C631 -
             C117463 * C646 + C117458 * C667 + C117461 * C146 - C117462 * C137 -
             C117461 * C147 + C117457 * C161) *
                C152696 * C152457 * C152613 -
            (C117467 * C18109 - C117468 * C18105 - C117467 * C18110 +
             C117460 * C18117 + C117465 * C2681 - C117466 * C2668 -
             C117465 * C2682 + C117459 * C2692 + C117463 * C2675 -
             C117464 * C2665 - C117463 * C2676 + C117458 * C2689 +
             C117461 * C651 - C117462 * C634 - C117461 * C652 +
             C117457 * C670) *
                C152696 * C152457 * C5033) *
               C3355 +
           ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
             C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
             C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
             C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
             C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
                C152696 * C152457 * C152613 -
            (C117467 * C9522 - C117468 * C9512 - C117467 * C9523 +
             C117460 * C9530 + C117465 * C3215 - C117466 * C3210 -
             C117465 * C3216 + C117459 * C3222 + C117463 * C1717 -
             C117464 * C1703 - C117463 * C1718 + C117458 * C1739 +
             C117461 * C1235 - C117462 * C1228 - C117461 * C1236 +
             C117457 * C1246) *
                C152696 * C152457 * C152620 +
            (C117461 * C1717 - C117462 * C1703 - C117461 * C1718 +
             C117457 * C1739 + C117463 * C3215 - C117464 * C3210 -
             C117463 * C3216 + C117458 * C3222 + C117465 * C9522 -
             C117466 * C9512 - C117465 * C9523 + C117459 * C9530 +
             C117467 * C18853 - C117468 * C18850 - C117467 * C18854 +
             C117460 * C18856) *
                C152696 * C152457 * C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[309] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C4361 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C152617) *
              C152924 +
          (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
             C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
             C100536 * C1720 + C152775 * C1740) *
                C152696 * C51245 +
            (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
               C152617 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C4361) *
              C152920 +
          (((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C4361 -
           ((C103075 + C103076) * C152696 * C51247 +
            (C103077 + C103078) * C152696 * C51246 +
            (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
             C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
             C100534 * C1728 + C100532 * C1744) *
                C152696 * C51245) *
               C152617) *
              C152906 +
          (((C100534 * C2269 - C100535 * C2265 - C100534 * C2270 +
             C100532 * C2277 + C100536 * C8185 - C100537 * C8178 -
             C100536 * C8186 + C152775 * C8196) *
                C152696 * C51245 +
            (C100534 * C2271 - C100535 * C2266 - C100534 * C2272 +
             C100532 * C2278 + C100536 * C8183 - C100537 * C8177 -
             C100536 * C8184 + C152775 * C8195) *
                C152696 * C51246 +
            (C100534 * C2273 - C100535 * C2267 - C100534 * C2274 +
             C100532 * C2279 + C100536 * C9823 - C100537 * C9822 -
             C100536 * C9824 + C152775 * C9825) *
                C152696 * C51247) *
               C152617 -
           ((C102757 + C102758) * C152696 * C51247 +
            (C102759 + C102760) * C152696 * C51246 +
            (C100536 * C2269 - C100537 * C2265 - C100536 * C2270 +
             C152775 * C2277 + C100534 * C1537 - C100535 * C1526 -
             C100534 * C1538 + C100532 * C1550) *
                C152696 * C51245) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C4361 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C152617) *
               C3355 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C152617 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C4361) *
               C152575) *
              C152914 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C152617 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C4361) *
               C3355 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C4361 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C152617) *
               C152575) *
              C152897 +
          (((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
             C100614 * C51247) *
                C4361 -
            ((C101645 + C101646) * C152696 * C51247 +
             (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
                C152617) *
               C3355 +
           ((C101980 * C51245 + (C101978 + C101977) * C152696 * C51246 +
             (C100534 * C1241 - C100535 * C1231 - C100534 * C1242 +
              C100532 * C1249 + C100536 * C2890 - C100537 * C2889 -
              C100536 * C2891 + C152775 * C2892) *
                 C152696 * C51247) *
                C152617 -
            ((C101435 + C101436) * C152696 * C51247 +
             (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
                C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C4361 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152617) *
               C3355 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             C111655 * C6340) *
                C152457 * C152617 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C4361) *
               C152575) *
              C152914 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C152617 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C4361) *
               C3355 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C4361 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C152617) *
               C152575) *
              C152897 +
          (((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
                C152457 * C4361 -
            ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
             C101223 * C6338) *
                C152457 * C152617) *
               C3355 +
           ((C101979 * C6338 + (C103076 + C103075) * C6339 +
             (C100534 * C2273 - C100535 * C2267 - C100534 * C2274 +
              C100532 * C2279 + C100536 * C9823 - C100537 * C9822 -
              C100536 * C9824 + C152775 * C9825) *
                 C6340) *
                C152457 * C152617 -
            ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
             C100917 * C6338) *
                C152457 * C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C4361 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152617) *
              C152924 +
          (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
            C111655 * C6340) *
               C152457 * C152617 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C4361) *
              C152920 +
          ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C4361 -
           ((C111668 + C111669) * C6340 + (C110943 + C110942) * C6339 +
            C110889 * C6338) *
               C152457 * C152617) *
              C152906 +
          ((C111655 * C6338 + (C111669 + C111668) * C6339 +
            (C100534 * C8937 - C100535 * C8935 - C100534 * C8938 +
             C100532 * C8941 + C100536 * C60551 - C100537 * C60550 -
             C100536 * C60552 + C152775 * C60553) *
                C6340) *
               C152457 * C152617 -
           ((C110668 + C110669) * C6340 + (C110667 + C110666) * C6339 +
            C110641 * C6338) *
               C152457 * C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
             C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
             C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
             C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
             C117460 * C2690) *
                C152696 * C152457 * C4361 -
            (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
             C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
             C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
             C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
             C117462 * C632 - C117461 * C648 + C117457 * C668) *
                C152696 * C152457 * C152617) *
               C3355 +
           ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
             C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
             C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
             C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
             C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
             C117460 * C9528) *
                C152696 * C152457 * C152617 -
            (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
             C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
             C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
             C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
             C117461 * C386 - C117462 * C371 - C117461 * C387 +
             C117457 * C407) *
                C152696 * C152457 * C4361) *
               C152575) *
              C152914 +
          (((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
             C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
             C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
             C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
             C117467 * C2682 + C117460 * C2692) *
                C152696 * C152457 * C152617 -
            (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
             C117460 * C2689 + C117465 * C651 - C117466 * C634 -
             C117465 * C652 + C117459 * C670 + C117463 * C645 - C117464 * C631 -
             C117463 * C646 + C117458 * C667 + C117461 * C146 - C117462 * C137 -
             C117461 * C147 + C117457 * C161) *
                C152696 * C152457 * C4361) *
               C3355 +
           ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
             C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
             C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
             C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
             C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
                C152696 * C152457 * C4361 -
            (C117467 * C9522 - C117468 * C9512 - C117467 * C9523 +
             C117460 * C9530 + C117465 * C3215 - C117466 * C3210 -
             C117465 * C3216 + C117459 * C3222 + C117463 * C1717 -
             C117464 * C1703 - C117463 * C1718 + C117458 * C1739 +
             C117461 * C1235 - C117462 * C1228 - C117461 * C1236 +
             C117457 * C1246) *
                C152696 * C152457 * C152617) *
               C152575) *
              C152897 +
          (((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
             C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
             C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
             C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
             C117460 * C2688) *
                C152696 * C152457 * C4361 -
            (C117467 * C2683 - C117468 * C2669 - C117467 * C2684 +
             C117460 * C2693 + C117465 * C2673 - C117466 * C2664 -
             C117465 * C2674 + C117459 * C2688 + C117463 * C653 -
             C117464 * C635 - C117463 * C654 + C117458 * C671 + C117461 * C643 -
             C117462 * C630 - C117461 * C644 + C117457 * C666) *
                C152696 * C152457 * C152617) *
               C3355 +
           ((C117461 * C1237 - C117462 * C1229 - C117461 * C1238 +
             C117457 * C1247 + C117463 * C1715 - C117464 * C1702 -
             C117463 * C1716 + C117458 * C1738 + C117465 * C3217 -
             C117466 * C3211 - C117465 * C3218 + C117459 * C3223 +
             C117467 * C18412 - C117468 * C18411 - C117467 * C18413 +
             C117460 * C18414) *
                C152696 * C152457 * C152617 -
            (C117467 * C3217 - C117468 * C3211 - C117467 * C3218 +
             C117460 * C3223 + C117465 * C1715 - C117466 * C1702 -
             C117465 * C1716 + C117459 * C1738 + C117463 * C1237 -
             C117464 * C1229 - C117463 * C1238 + C117458 * C1247 +
             C117461 * C382 - C117462 * C369 - C117461 * C383 +
             C117457 * C405) *
                C152696 * C152457 * C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C4361 -
           (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
            C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
            C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
            C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
            C117462 * C632 - C117461 * C648 + C117457 * C668) *
               C152696 * C152457 * C152617) *
              C152924 +
          ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
            C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
            C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
            C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
            C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
            C117460 * C9528) *
               C152696 * C152457 * C152617 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C4361) *
              C152920 +
          ((C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
            C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
            C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
            C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
            C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
               C152696 * C152457 * C4361 -
           (C117467 * C9520 - C117468 * C9511 - C117467 * C9521 +
            C117460 * C9529 + C117465 * C9516 - C117466 * C9509 -
            C117465 * C9517 + C117459 * C9527 + C117463 * C1729 -
            C117464 * C1709 - C117463 * C1730 + C117458 * C1745 +
            C117461 * C1727 - C117462 * C1708 - C117461 * C1728 +
            C117457 * C1744) *
               C152696 * C152457 * C152617) *
              C152906 +
          ((C117461 * C2269 - C117462 * C2265 - C117461 * C2270 +
            C117457 * C2277 + C117463 * C8185 - C117464 * C8178 -
            C117463 * C8186 + C117458 * C8196 + C117465 * C10240 -
            C117466 * C10238 - C117465 * C10241 + C117459 * C10244 +
            C117467 * C61401 - C117468 * C61400 - C117467 * C61402 +
            C117460 * C61403) *
               C152696 * C152457 * C152617 -
           (C117467 * C10240 - C117468 * C10238 - C117467 * C10241 +
            C117460 * C10244 + C117465 * C8185 - C117466 * C8178 -
            C117465 * C8186 + C117459 * C8196 + C117463 * C2269 -
            C117464 * C2265 - C117463 * C2270 + C117458 * C2277 +
            C117461 * C1537 - C117462 * C1526 - C117461 * C1538 +
            C117457 * C1550) *
               C152696 * C152457 * C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[310] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
                 C100532 * C160 + C100536 * C647 - C100537 * C632 -
                 C100536 * C648 + C152775 * C668) *
                    C152696 * C51245 +
                (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                   C152530 * C152828 -
               (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
                (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
                 C152775 * C1245 + C100534 * C386 - C100535 * C371 -
                 C100534 * C387 + C100532 * C407) *
                    C152696 * C51245) *
                   C152530 * C152575) *
                  C873 +
              (((C100908 + C100907) * C152696 * C51245 +
                (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                   C152530 * C152575 -
               (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
                (C100600 + C100599) * C152696 * C51245) *
                   C152530 * C152828) *
                  C874 +
              ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
                C100614 * C51247) *
                   C152530 * C152828 -
               ((C101435 + C101436) * C152696 * C51247 +
                (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
                   C152530 * C152575) *
                  C875 +
              ((C101430 * C51245 + (C101436 + C101435) * C152696 * C51246 +
                (C100534 * C400 - C100535 * C378 - C100534 * C401 +
                 C100532 * C414 + C100536 * C1243 - C100537 * C1232 -
                 C100536 * C1244 + C152775 * C1250) *
                    C152696 * C51247) *
                   C152530 * C152575 -
               ((C100607 + C100608) * C152696 * C51247 +
                (C100606 + C100605) * C152696 * C51246 + C100613 * C51245) *
                   C152530 * C152828) *
                  C152874) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
                 C100532 * C160 + C100536 * C647 - C100537 * C632 -
                 C100536 * C648 + C152775 * C668) *
                    C152696 * C51245 +
                (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                   C152530 * C1879 -
               (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
                (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
                 C152775 * C1245 + C100534 * C386 - C100535 * C371 -
                 C100534 * C387 + C100532 * C407) *
                    C152696 * C51245) *
                   C152530 * C1880 +
               ((C100534 * C388 - C100535 * C372 - C100534 * C389 +
                 C100532 * C408 + C100536 * C1727 - C100537 * C1708 -
                 C100536 * C1728 + C152775 * C1744) *
                    C152696 * C51245 +
                (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
                   C152530 * C1881 -
               ((C102757 + C102758) * C152696 * C51247 +
                (C102759 + C102760) * C152696 * C51246 +
                (C100536 * C2269 - C100537 * C2265 - C100536 * C2270 +
                 C152775 * C2277 + C100534 * C1537 - C100535 * C1526 -
                 C100534 * C1538 + C100532 * C1550) *
                    C152696 * C51245) *
                   C152530 * C152880) *
                  C152814 +
              (((C100908 + C100907) * C152696 * C51245 +
                (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                   C152530 * C1880 -
               (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
                (C100600 + C100599) * C152696 * C51245) *
                   C152530 * C1879 -
               ((C100915 + C100916) * C152696 * C51247 +
                (C100912 + C100911) * C152696 * C51246 +
                (C100910 + C100909) * C152696 * C51245) *
                   C152530 * C1881 +
               ((C102760 + C102759) * C152696 * C51245 +
                (C102758 + C102757) * C152696 * C51246 +
                (C100534 * C1531 - C100535 * C1523 - C100534 * C1532 +
                 C100532 * C1547 + C100536 * C2275 - C100537 * C2268 -
                 C100536 * C2276 + C152775 * C2280) *
                    C152696 * C51247) *
                   C152530 * C152880) *
                  C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C2427 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C2428 +
            ((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C152696 * C51245 +
             (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
                C152873) *
               C152828 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C2428 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C2427 -
            ((C104145 + C104146) * C152696 * C51247 +
             (C104147 + C104148) * C152696 * C51246 +
             (C100536 * C3213 - C100537 * C3209 - C100536 * C3214 +
              C152775 * C3221 + C100534 * C1719 - C100535 * C1704 -
              C100534 * C1720 + C100532 * C1740) *
                 C152696 * C51245) *
                C152873) *
               C152575) *
              C152814 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C2428 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C2427 -
            ((C101221 + C101222) * C152696 * C51247 +
             (C101218 + C101217) * C152696 * C51246 +
             (C101216 + C101215) * C152696 * C51245) *
                C152873) *
               C152828 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C2427 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C2428 +
            ((C104148 + C104147) * C152696 * C51245 +
             (C104146 + C104145) * C152696 * C51246 +
             (C100534 * C1713 - C100535 * C1701 - C100534 * C1714 +
              C100532 * C1737 + C100536 * C3219 - C100537 * C3212 -
              C100536 * C3220 + C152775 * C3224) *
                 C152696 * C51247) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C152828 -
           ((C109374 + C109375) * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C152575) *
              C873 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            (C102760 + C102759) * C6340) *
               C152457 * C152530 * C152575 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C152828) *
              C874 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152530 * C152828 -
           ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
            C100917 * C6338) *
               C152457 * C152530 * C152575) *
              C875 +
          ((C101421 * C6338 + (C100916 + C100915) * C6339 +
            (C100534 * C1531 - C100535 * C1523 - C100534 * C1532 +
             C100532 * C1547 + C100536 * C2275 - C100537 * C2268 -
             C100536 * C2276 + C152775 * C2280) *
                C6340) *
               C152457 * C152530 * C152575 -
           ((C100915 + C100916) * C6340 + (C100914 + C100913) * C6339 +
            C100610 * C6338) *
               C152457 * C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C1879 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C1880 +
           (C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C152530 * C1881 -
           ((C110668 + C110669) * C6340 + (C110667 + C110666) * C6339 +
            C110641 * C6338) *
               C152457 * C152530 * C152880) *
              C152814 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            C111141 * C6340) *
               C152457 * C152530 * C1880 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C1879 -
           ((C111154 + C111155) * C6340 + (C102759 + C102760) * C6339 +
            C109357 * C6338) *
               C152457 * C152530 * C1881 +
           (C111141 * C6338 + (C111155 + C111154) * C6339 +
            (C100534 * C7926 - C100535 * C7922 - C100534 * C7927 +
             C100532 * C7934 + C100536 * C8939 - C100537 * C8936 -
             C100536 * C8940 + C152775 * C8942) *
                C6340) *
               C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C2427 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C2428 +
            ((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C6338 +
             (C110938 + C110939) * C6339 + C110946 * C6340) *
                C152457 * C152873) *
               C152828 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             C111655 * C6340) *
                C152457 * C2428 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C2427 -
            ((C110944 + C110945) * C6340 + (C110941 + C110940) * C6339 +
             (C110939 + C110938) * C6338) *
                C152457 * C152873) *
               C152575) *
              C152814 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C2428 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C2427 -
            ((C112530 + C112531) * C6340 + (C104147 + C104148) * C6339 +
             (C101216 + C101215) * C6338) *
                C152457 * C152873) *
               C152828 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C2427 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C2428 +
            ((C104148 + C104147) * C6338 + (C112531 + C112530) * C6339 +
             (C100534 * C8183 - C100535 * C8177 - C100534 * C8184 +
              C100532 * C8195 + C100536 * C10242 - C100537 * C10239 -
              C100536 * C10243 + C152775 * C10245) *
                 C6340) *
                C152457 * C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152530 * C152828 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C152530 * C152575) *
              C873 +
          ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
            C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
            C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
            C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
            C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
               C152696 * C152457 * C152530 * C152575 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C152530 * C152828) *
              C874 +
          ((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
            C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
            C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
            C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
            C117460 * C2688) *
               C152696 * C152457 * C152530 * C152828 -
           (C117467 * C3217 - C117468 * C3211 - C117467 * C3218 +
            C117460 * C3223 + C117465 * C1715 - C117466 * C1702 -
            C117465 * C1716 + C117459 * C1738 + C117463 * C1237 -
            C117464 * C1229 - C117463 * C1238 + C117458 * C1247 +
            C117461 * C382 - C117462 * C369 - C117461 * C383 + C117457 * C405) *
               C152696 * C152457 * C152530 * C152575) *
              C875 +
          ((C117461 * C380 - C117462 * C368 - C117461 * C381 + C117457 * C404 +
            C117463 * C1239 - C117464 * C1230 - C117463 * C1240 +
            C117458 * C1248 + C117465 * C1713 - C117466 * C1701 -
            C117465 * C1714 + C117459 * C1737 + C117467 * C3219 -
            C117468 * C3212 - C117467 * C3220 + C117460 * C3224) *
               C152696 * C152457 * C152530 * C152575 -
           (C117467 * C2671 - C117468 * C2663 - C117467 * C2672 +
            C117460 * C2687 + C117465 * C655 - C117466 * C636 - C117465 * C656 +
            C117459 * C672 + C117463 * C641 - C117464 * C629 - C117463 * C642 +
            C117458 * C665 + C117461 * C150 - C117462 * C139 - C117461 * C151 +
            C117457 * C163) *
               C152696 * C152457 * C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152530 * C1879 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C152530 * C1880 +
           (C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
            C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
            C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
            C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
            C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
               C152696 * C152457 * C152530 * C1881 -
           (C117467 * C10240 - C117468 * C10238 - C117467 * C10241 +
            C117460 * C10244 + C117465 * C8185 - C117466 * C8178 -
            C117465 * C8186 + C117459 * C8196 + C117463 * C2269 -
            C117464 * C2265 - C117463 * C2270 + C117458 * C2277 +
            C117461 * C1537 - C117462 * C1526 - C117461 * C1538 +
            C117457 * C1550) *
               C152696 * C152457 * C152530 * C152880) *
              C152814 +
          ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
            C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
            C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
            C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
            C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
               C152696 * C152457 * C152530 * C1880 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C152530 * C1879 -
           (C117467 * C9514 - C117468 * C9508 - C117467 * C9515 +
            C117460 * C9526 + C117465 * C1731 - C117466 * C1710 -
            C117465 * C1732 + C117459 * C1746 + C117463 * C1725 -
            C117464 * C1707 - C117463 * C1726 + C117458 * C1743 +
            C117461 * C390 - C117462 * C373 - C117461 * C391 + C117457 * C409) *
               C152696 * C152457 * C152530 * C1881 +
           (C117461 * C1535 - C117462 * C1525 - C117461 * C1536 +
            C117457 * C1549 + C117463 * C2271 - C117464 * C2266 -
            C117463 * C2272 + C117458 * C2278 + C117465 * C8183 -
            C117466 * C8177 - C117465 * C8184 + C117459 * C8195 +
            C117467 * C10242 - C117468 * C10239 - C117467 * C10243 +
            C117460 * C10245) *
               C152696 * C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
             C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
             C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
             C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
             C117460 * C2690) *
                C152696 * C152457 * C2427 -
            (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
             C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
             C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
             C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
             C117462 * C632 - C117461 * C648 + C117457 * C668) *
                C152696 * C152457 * C2428 +
            (C117461 * C649 - C117462 * C633 - C117461 * C650 + C117457 * C669 +
             C117463 * C2677 - C117464 * C2666 - C117463 * C2678 +
             C117458 * C2690 + C117465 * C2679 - C117466 * C2667 -
             C117465 * C2680 + C117459 * C2691 + C117467 * C18111 -
             C117468 * C18106 - C117467 * C18112 + C117460 * C18118) *
                C152696 * C152457 * C152873) *
               C152828 +
           ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
             C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
             C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
             C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
             C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
             C117460 * C9528) *
                C152696 * C152457 * C2428 -
            (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
             C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
             C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
             C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
             C117461 * C386 - C117462 * C371 - C117461 * C387 +
             C117457 * C407) *
                C152696 * C152457 * C2427 -
            (C117467 * C18851 - C117468 * C18849 - C117467 * C18852 +
             C117460 * C18855 + C117465 * C9518 - C117466 * C9510 -
             C117465 * C9519 + C117459 * C9528 + C117463 * C3213 -
             C117464 * C3209 - C117463 * C3214 + C117458 * C3221 +
             C117461 * C1719 - C117462 * C1704 - C117461 * C1720 +
             C117457 * C1740) *
                C152696 * C152457 * C152873) *
               C152575) *
              C152814 +
          (((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
             C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
             C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
             C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
             C117467 * C2682 + C117460 * C2692) *
                C152696 * C152457 * C2428 -
            (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
             C117460 * C2689 + C117465 * C651 - C117466 * C634 -
             C117465 * C652 + C117459 * C670 + C117463 * C645 - C117464 * C631 -
             C117463 * C646 + C117458 * C667 + C117461 * C146 - C117462 * C137 -
             C117461 * C147 + C117457 * C161) *
                C152696 * C152457 * C2427 -
            (C117467 * C18109 - C117468 * C18105 - C117467 * C18110 +
             C117460 * C18117 + C117465 * C2681 - C117466 * C2668 -
             C117465 * C2682 + C117459 * C2692 + C117463 * C2675 -
             C117464 * C2665 - C117463 * C2676 + C117458 * C2689 +
             C117461 * C651 - C117462 * C634 - C117461 * C652 +
             C117457 * C670) *
                C152696 * C152457 * C152873) *
               C152828 +
           ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
             C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
             C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
             C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
             C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
                C152696 * C152457 * C2427 -
            (C117467 * C9522 - C117468 * C9512 - C117467 * C9523 +
             C117460 * C9530 + C117465 * C3215 - C117466 * C3210 -
             C117465 * C3216 + C117459 * C3222 + C117463 * C1717 -
             C117464 * C1703 - C117463 * C1718 + C117458 * C1739 +
             C117461 * C1235 - C117462 * C1228 - C117461 * C1236 +
             C117457 * C1246) *
                C152696 * C152457 * C2428 +
            (C117461 * C1717 - C117462 * C1703 - C117461 * C1718 +
             C117457 * C1739 + C117463 * C3215 - C117464 * C3210 -
             C117463 * C3216 + C117458 * C3222 + C117465 * C9522 -
             C117466 * C9512 - C117465 * C9523 + C117459 * C9530 +
             C117467 * C18853 - C117468 * C18850 - C117467 * C18854 +
             C117460 * C18856) *
                C152696 * C152457 * C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[311] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
                  C100532 * C160 + C100536 * C647 - C100537 * C632 -
                  C100536 * C648 + C152775 * C668) *
                     C152696 * C51245 +
                 (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                    C152829 -
                (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
                 (C100536 * C649 - C100537 * C633 - C100536 * C650 +
                  C152775 * C669 + C100534 * C647 - C100535 * C632 -
                  C100534 * C648 + C100532 * C668) *
                     C152696 * C51245) *
                    C152617) *
                   C152828 +
               (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
                  C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
                  C100536 * C1720 + C152775 * C1740) *
                     C152696 * C51245 +
                 (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                    C152617 -
                (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
                 (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
                  C152775 * C1245 + C100534 * C386 - C100535 * C371 -
                  C100534 * C387 + C100532 * C407) *
                     C152696 * C51245) *
                    C152829) *
                   C152575) *
                  C365 +
              ((((C101214 + C101213) * C152696 * C51245 +
                 (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                    C152617 -
                (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
                 (C100600 + C100599) * C152696 * C51245) *
                    C152829) *
                   C152828 +
               (((C100908 + C100907) * C152696 * C51245 +
                 (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                    C152829 -
                ((C101977 + C101978) * C152696 * C51247 +
                 (C101976 + C101975) * C152696 * C51246 +
                 (C101974 + C101973) * C152696 * C51245) *
                    C152617) *
                   C152575) *
                  C366 +
              (((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
                 C100614 * C51247) *
                    C152829 -
                ((C101645 + C101646) * C152696 * C51247 +
                 (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
                    C152617) *
                   C152828 +
               ((C101980 * C51245 + (C101978 + C101977) * C152696 * C51246 +
                 (C100534 * C1241 - C100535 * C1231 - C100534 * C1242 +
                  C100532 * C1249 + C100536 * C2890 - C100537 * C2889 -
                  C100536 * C2891 + C152775 * C2892) *
                     C152696 * C51247) *
                    C152617 -
                ((C101435 + C101436) * C152696 * C51247 +
                 (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
                    C152829) *
                   C152575) *
                  C152864) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
                 C100532 * C160 + C100536 * C647 - C100537 * C632 -
                 C100536 * C648 + C152775 * C668) *
                    C152696 * C51245 +
                (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                   C152829 -
               (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
                (C100536 * C649 - C100537 * C633 - C100536 * C650 +
                 C152775 * C669 + C100534 * C647 - C100535 * C632 -
                 C100534 * C648 + C100532 * C668) *
                    C152696 * C51245) *
                   C152617) *
                  C1879 +
              (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
                 C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
                 C100536 * C1720 + C152775 * C1740) *
                    C152696 * C51245 +
                (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                   C152617 -
               (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
                (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
                 C152775 * C1245 + C100534 * C386 - C100535 * C371 -
                 C100534 * C387 + C100532 * C407) *
                    C152696 * C51245) *
                   C152829) *
                  C1880 +
              (((C100534 * C388 - C100535 * C372 - C100534 * C389 +
                 C100532 * C408 + C100536 * C1727 - C100537 * C1708 -
                 C100536 * C1728 + C152775 * C1744) *
                    C152696 * C51245 +
                (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
                   C152829 -
               ((C103075 + C103076) * C152696 * C51247 +
                (C103077 + C103078) * C152696 * C51246 +
                (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
                 C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
                 C100534 * C1728 + C100532 * C1744) *
                    C152696 * C51245) *
                   C152617) *
                  C1881 +
              (((C100534 * C2269 - C100535 * C2265 - C100534 * C2270 +
                 C100532 * C2277 + C100536 * C8185 - C100537 * C8178 -
                 C100536 * C8186 + C152775 * C8196) *
                    C152696 * C51245 +
                (C100534 * C2271 - C100535 * C2266 - C100534 * C2272 +
                 C100532 * C2278 + C100536 * C8183 - C100537 * C8177 -
                 C100536 * C8184 + C152775 * C8195) *
                    C152696 * C51246 +
                (C100534 * C2273 - C100535 * C2267 - C100534 * C2274 +
                 C100532 * C2279 + C100536 * C9823 - C100537 * C9822 -
                 C100536 * C9824 + C152775 * C9825) *
                    C152696 * C51247) *
                   C152617 -
               ((C102757 + C102758) * C152696 * C51247 +
                (C102759 + C102760) * C152696 * C51246 +
                (C100536 * C2269 - C100537 * C2265 - C100536 * C2270 +
                 C152775 * C2277 + C100534 * C1537 - C100535 * C1526 -
                 C100534 * C1538 + C100532 * C1550) *
                    C152696 * C51245) *
                   C152829) *
                  C152880) *
             C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C3047 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C3048 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C152696 * C51245 +
            (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
               C3049 -
           ((C104367 + C104368) * C152696 * C51247 +
            (C104369 + C104370) * C152696 * C51246 +
            (C100536 * C2679 - C100537 * C2667 - C100536 * C2680 +
             C152775 * C2691 + C100534 * C2677 - C100535 * C2666 -
             C100534 * C2678 + C100532 * C2690) *
                C152696 * C51245) *
               C152886) *
              C152828 +
          (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
             C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
             C100536 * C1720 + C152775 * C1740) *
                C152696 * C51245 +
            (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
               C3048 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C3047 -
           ((C104145 + C104146) * C152696 * C51247 +
            (C104147 + C104148) * C152696 * C51246 +
            (C100536 * C3213 - C100537 * C3209 - C100536 * C3214 +
             C152775 * C3221 + C100534 * C1719 - C100535 * C1704 -
             C100534 * C1720 + C100532 * C1740) *
                C152696 * C51245) *
               C3049 +
           ((C100534 * C3213 - C100535 * C3209 - C100534 * C3214 +
             C100532 * C3221 + C100536 * C9518 - C100537 * C9510 -
             C100536 * C9519 + C152775 * C9528) *
                C152696 * C51245 +
            (C100534 * C3215 - C100535 * C3210 - C100534 * C3216 +
             C100532 * C3222 + C100536 * C9522 - C100537 * C9512 -
             C100536 * C9523 + C152775 * C9530) *
                C152696 * C51246 +
            (C100534 * C3217 - C100535 * C3211 - C100534 * C3218 +
             C100532 * C3223 + C100536 * C18412 - C100537 * C18411 -
             C100536 * C18413 + C152775 * C18414) *
                C152696 * C51247) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C152829 -
            ((C110297 + C110298) * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152617) *
               C152828 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             (C100534 * C2269 - C100535 * C2265 - C100534 * C2270 +
              C100532 * C2277 + C100536 * C8185 - C100537 * C8178 -
              C100536 * C8186 + C152775 * C8196) *
                 C6340) *
                C152457 * C152617 -
            ((C109374 + C109375) * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C152829) *
               C152575) *
              C365 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             (C103078 + C103077) * C6340) *
                C152457 * C152617 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C152829) *
               C152828 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             (C102760 + C102759) * C6340) *
                C152457 * C152829 -
            ((C100536 * C8183 - C100537 * C8177 - C100536 * C8184 +
              C152775 * C8195 + C100534 * C2271 - C100535 * C2266 -
              C100534 * C2272 + C100532 * C2278) *
                 C6340 +
             (C103077 + C103078) * C6339 + (C101974 + C101973) * C6338) *
                C152457 * C152617) *
               C152575) *
              C366 +
          (((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
                C152457 * C152829 -
            ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
             C101223 * C6338) *
                C152457 * C152617) *
               C152828 +
           ((C101979 * C6338 + (C103076 + C103075) * C6339 +
             (C100534 * C2273 - C100535 * C2267 - C100534 * C2274 +
              C100532 * C2279 + C100536 * C9823 - C100537 * C9822 -
              C100536 * C9824 + C152775 * C9825) *
                 C6340) *
                C152457 * C152617 -
            ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
             C100917 * C6338) *
                C152457 * C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152829 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152617) *
              C1879 +
          (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
            C111655 * C6340) *
               C152457 * C152617 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152829) *
              C1880 +
          ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C152829 -
           ((C111668 + C111669) * C6340 + (C110943 + C110942) * C6339 +
            C110889 * C6338) *
               C152457 * C152617) *
              C1881 +
          ((C111655 * C6338 + (C111669 + C111668) * C6339 +
            (C100534 * C8937 - C100535 * C8935 - C100534 * C8938 +
             C100532 * C8941 + C100536 * C60551 - C100537 * C60550 -
             C100536 * C60552 + C152775 * C60553) *
                C6340) *
               C152457 * C152617 -
           ((C110668 + C110669) * C6340 + (C110667 + C110666) * C6339 +
            C110641 * C6338) *
               C152457 * C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C3047 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C3048 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C110938 + C110939) * C6339 + C110946 * C6340) *
               C152457 * C3049 -
           ((C112944 + C112945) * C6340 + (C112946 + C112947) * C6339 +
            (C100536 * C2679 - C100537 * C2667 - C100536 * C2680 +
             C152775 * C2691 + C100534 * C2677 - C100535 * C2666 -
             C100534 * C2678 + C100532 * C2690) *
                C6338) *
               C152457 * C152886) *
              C152828 +
          (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
            C111655 * C6340) *
               C152457 * C3048 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C3047 -
           ((C110944 + C110945) * C6340 + (C110941 + C110940) * C6339 +
            (C110939 + C110938) * C6338) *
               C152457 * C3049 +
           ((C112947 + C112946) * C6338 + (C112945 + C112944) * C6339 +
            (C100534 * C10240 - C100535 * C10238 - C100534 * C10241 +
             C100532 * C10244 + C100536 * C61401 - C100537 * C61400 -
             C100536 * C61402 + C152775 * C61403) *
                C6340) *
               C152457 * C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
             C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
             C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
             C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
             C117460 * C2690) *
                C152696 * C152457 * C152829 -
            (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
             C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
             C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
             C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
             C117462 * C632 - C117461 * C648 + C117457 * C668) *
                C152696 * C152457 * C152617) *
               C152828 +
           ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
             C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
             C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
             C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
             C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
             C117460 * C9528) *
                C152696 * C152457 * C152617 -
            (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
             C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
             C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
             C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
             C117461 * C386 - C117462 * C371 - C117461 * C387 +
             C117457 * C407) *
                C152696 * C152457 * C152829) *
               C152575) *
              C365 +
          (((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
             C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
             C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
             C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
             C117467 * C2682 + C117460 * C2692) *
                C152696 * C152457 * C152617 -
            (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
             C117460 * C2689 + C117465 * C651 - C117466 * C634 -
             C117465 * C652 + C117459 * C670 + C117463 * C645 - C117464 * C631 -
             C117463 * C646 + C117458 * C667 + C117461 * C146 - C117462 * C137 -
             C117461 * C147 + C117457 * C161) *
                C152696 * C152457 * C152829) *
               C152828 +
           ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
             C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
             C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
             C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
             C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
                C152696 * C152457 * C152829 -
            (C117467 * C9522 - C117468 * C9512 - C117467 * C9523 +
             C117460 * C9530 + C117465 * C3215 - C117466 * C3210 -
             C117465 * C3216 + C117459 * C3222 + C117463 * C1717 -
             C117464 * C1703 - C117463 * C1718 + C117458 * C1739 +
             C117461 * C1235 - C117462 * C1228 - C117461 * C1236 +
             C117457 * C1246) *
                C152696 * C152457 * C152617) *
               C152575) *
              C366 +
          (((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
             C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
             C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
             C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
             C117460 * C2688) *
                C152696 * C152457 * C152829 -
            (C117467 * C2683 - C117468 * C2669 - C117467 * C2684 +
             C117460 * C2693 + C117465 * C2673 - C117466 * C2664 -
             C117465 * C2674 + C117459 * C2688 + C117463 * C653 -
             C117464 * C635 - C117463 * C654 + C117458 * C671 + C117461 * C643 -
             C117462 * C630 - C117461 * C644 + C117457 * C666) *
                C152696 * C152457 * C152617) *
               C152828 +
           ((C117461 * C1237 - C117462 * C1229 - C117461 * C1238 +
             C117457 * C1247 + C117463 * C1715 - C117464 * C1702 -
             C117463 * C1716 + C117458 * C1738 + C117465 * C3217 -
             C117466 * C3211 - C117465 * C3218 + C117459 * C3223 +
             C117467 * C18412 - C117468 * C18411 - C117467 * C18413 +
             C117460 * C18414) *
                C152696 * C152457 * C152617 -
            (C117467 * C3217 - C117468 * C3211 - C117467 * C3218 +
             C117460 * C3223 + C117465 * C1715 - C117466 * C1702 -
             C117465 * C1716 + C117459 * C1738 + C117463 * C1237 -
             C117464 * C1229 - C117463 * C1238 + C117458 * C1247 +
             C117461 * C382 - C117462 * C369 - C117461 * C383 +
             C117457 * C405) *
                C152696 * C152457 * C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152829 -
           (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
            C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
            C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
            C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
            C117462 * C632 - C117461 * C648 + C117457 * C668) *
               C152696 * C152457 * C152617) *
              C1879 +
          ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
            C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
            C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
            C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
            C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
            C117460 * C9528) *
               C152696 * C152457 * C152617 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C152829) *
              C1880 +
          ((C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
            C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
            C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
            C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
            C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
               C152696 * C152457 * C152829 -
           (C117467 * C9520 - C117468 * C9511 - C117467 * C9521 +
            C117460 * C9529 + C117465 * C9516 - C117466 * C9509 -
            C117465 * C9517 + C117459 * C9527 + C117463 * C1729 -
            C117464 * C1709 - C117463 * C1730 + C117458 * C1745 +
            C117461 * C1727 - C117462 * C1708 - C117461 * C1728 +
            C117457 * C1744) *
               C152696 * C152457 * C152617) *
              C1881 +
          ((C117461 * C2269 - C117462 * C2265 - C117461 * C2270 +
            C117457 * C2277 + C117463 * C8185 - C117464 * C8178 -
            C117463 * C8186 + C117458 * C8196 + C117465 * C10240 -
            C117466 * C10238 - C117465 * C10241 + C117459 * C10244 +
            C117467 * C61401 - C117468 * C61400 - C117467 * C61402 +
            C117460 * C61403) *
               C152696 * C152457 * C152617 -
           (C117467 * C10240 - C117468 * C10238 - C117467 * C10241 +
            C117460 * C10244 + C117465 * C8185 - C117466 * C8178 -
            C117465 * C8186 + C117459 * C8196 + C117463 * C2269 -
            C117464 * C2265 - C117463 * C2270 + C117458 * C2277 +
            C117461 * C1537 - C117462 * C1526 - C117461 * C1538 +
            C117457 * C1550) *
               C152696 * C152457 * C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C3047 -
           (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
            C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
            C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
            C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
            C117462 * C632 - C117461 * C648 + C117457 * C668) *
               C152696 * C152457 * C3048 +
           (C117461 * C649 - C117462 * C633 - C117461 * C650 + C117457 * C669 +
            C117463 * C2677 - C117464 * C2666 - C117463 * C2678 +
            C117458 * C2690 + C117465 * C2679 - C117466 * C2667 -
            C117465 * C2680 + C117459 * C2691 + C117467 * C18111 -
            C117468 * C18106 - C117467 * C18112 + C117460 * C18118) *
               C152696 * C152457 * C3049 -
           (C117467 * C18113 - C117468 * C18107 - C117467 * C18114 +
            C117460 * C18119 + C117465 * C18111 - C117466 * C18106 -
            C117465 * C18112 + C117459 * C18118 + C117463 * C2679 -
            C117464 * C2667 - C117463 * C2680 + C117458 * C2691 +
            C117461 * C2677 - C117462 * C2666 - C117461 * C2678 +
            C117457 * C2690) *
               C152696 * C152457 * C152886) *
              C152828 +
          ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
            C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
            C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
            C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
            C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
            C117460 * C9528) *
               C152696 * C152457 * C3048 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C3047 -
           (C117467 * C18851 - C117468 * C18849 - C117467 * C18852 +
            C117460 * C18855 + C117465 * C9518 - C117466 * C9510 -
            C117465 * C9519 + C117459 * C9528 + C117463 * C3213 -
            C117464 * C3209 - C117463 * C3214 + C117458 * C3221 +
            C117461 * C1719 - C117462 * C1704 - C117461 * C1720 +
            C117457 * C1740) *
               C152696 * C152457 * C3049 +
           (C117461 * C3213 - C117462 * C3209 - C117461 * C3214 +
            C117457 * C3221 + C117463 * C9518 - C117464 * C9510 -
            C117463 * C9519 + C117458 * C9528 + C117465 * C18851 -
            C117466 * C18849 - C117465 * C18852 + C117459 * C18855 +
            C117467 * C68053 - C117468 * C68052 - C117467 * C68054 +
            C117460 * C68055) *
               C152696 * C152457 * C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[312] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C100534 * C144 - C100535 * C136 - C100534 * C145 +
                C100532 * C160 + C100536 * C647 - C100537 * C632 -
                C100536 * C648 + C152775 * C668) *
                   C152696 * C51245 +
               (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                  C152530 * C152512 * C129 -
              (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
               (C100600 + C100599) * C152696 * C51245) *
                  C152530 * C152512 * C130 +
              (C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
               C100614 * C51247) *
                  C152530 * C152512 * C131 -
              ((C100607 + C100608) * C152696 * C51247 +
               (C100606 + C100605) * C152696 * C51246 + C100613 * C51245) *
                  C152530 * C152512 * C132 +
              (C100614 * C51245 + (C100608 + C100607) * C152696 * C51246 +
               (C100534 * C156 - C100535 * C142 - C100534 * C157 +
                C100532 * C166 + C100536 * C1022 - C100537 * C1021 -
                C100536 * C1023 + C152775 * C1024) *
                   C152696 * C51247) *
                  C152530 * C152512 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
                 C100532 * C160 + C100536 * C647 - C100537 * C632 -
                 C100536 * C648 + C152775 * C668) *
                    C152696 * C51245 +
                (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                   C152530 * C152917 -
               (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
                (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
                 C152775 * C1245 + C100534 * C386 - C100535 * C371 -
                 C100534 * C387 + C100532 * C407) *
                    C152696 * C51245) *
                   C152530 * C152901 +
               ((C100534 * C388 - C100535 * C372 - C100534 * C389 +
                 C100532 * C408 + C100536 * C1727 - C100537 * C1708 -
                 C100536 * C1728 + C152775 * C1744) *
                    C152696 * C51245 +
                (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
                   C152530 * C152870) *
                  C365 +
              (((C100908 + C100907) * C152696 * C51245 +
                (C100906 + C100905) * C152696 * C51246 +
                (C100913 + C100914) * C152696 * C51247) *
                   C152530 * C152901 -
               (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
                (C100600 + C100599) * C152696 * C51245) *
                   C152530 * C152917 -
               ((C100915 + C100916) * C152696 * C51247 +
                (C100912 + C100911) * C152696 * C51246 +
                (C100910 + C100909) * C152696 * C51245) *
                   C152530 * C152870) *
                  C366 +
              ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
                C100614 * C51247) *
                   C152530 * C152917 -
               ((C100536 * C1241 - C100537 * C1231 - C100536 * C1242 +
                 C152775 * C1249 + C100534 * C396 - C100535 * C376 -
                 C100534 * C397 + C100532 * C412) *
                    C152696 * C51247 +
                (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
                   C152530 * C152901 +
               (C100920 * C51245 + (C100916 + C100915) * C152696 * C51246 +
                (C100534 * C398 - C100535 * C377 - C100534 * C399 +
                 C100532 * C413 + C100536 * C2108 - C100537 * C2107 -
                 C100536 * C2109 + C152775 * C2110) *
                    C152696 * C51247) *
                   C152530 * C152870) *
                  C152864) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
                 C100532 * C160 + C100536 * C647 - C100537 * C632 -
                 C100536 * C648 + C152775 * C668) *
                    C152696 * C51245 +
                (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                   C152918 -
               (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
                (C100536 * C649 - C100537 * C633 - C100536 * C650 +
                 C152775 * C669 + C100534 * C647 - C100535 * C632 -
                 C100534 * C648 + C100532 * C668) *
                    C152696 * C51245) *
                   C152903 +
               ((C100534 * C649 - C100535 * C633 - C100534 * C650 +
                 C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
                 C100536 * C2678 + C152775 * C2690) *
                    C152696 * C51245 +
                (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
                   C152873) *
                  C152512 * C365 +
              (((C101214 + C101213) * C152696 * C51245 +
                (C101212 + C101211) * C152696 * C51246 +
                (C101219 + C101220) * C152696 * C51247) *
                   C152903 -
               (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
                (C100600 + C100599) * C152696 * C51245) *
                   C152918 -
               ((C101221 + C101222) * C152696 * C51247 +
                (C101218 + C101217) * C152696 * C51246 +
                (C101216 + C101215) * C152696 * C51245) *
                   C152873) *
                  C152512 * C366 +
              ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
                C100614 * C51247) *
                   C152918 -
               ((C100536 * C659 - C100537 * C638 - C100536 * C660 +
                 C152775 * C674 + C100534 * C657 - C100535 * C637 -
                 C100534 * C658 + C100532 * C673) *
                    C152696 * C51247 +
                (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
                   C152903 +
               (C101226 * C51245 + (C101222 + C101221) * C152696 * C51246 +
                (C100534 * C659 - C100535 * C638 - C100534 * C660 +
                 C100532 * C674 + C100536 * C3052 - C100537 * C3051 -
                 C100536 * C3053 + C152775 * C3054) *
                    C152696 * C51247) *
                   C152873) *
                  C152512 * C152864) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
                 C100532 * C160 + C100536 * C647 - C100537 * C632 -
                 C100536 * C648 + C152775 * C668) *
                    C152696 * C51245 +
                (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                   C152530 * C1429 -
               (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
                (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
                 C152775 * C1245 + C100534 * C386 - C100535 * C371 -
                 C100534 * C387 + C100532 * C407) *
                    C152696 * C51245) *
                   C152530 * C1430 +
               ((C100534 * C388 - C100535 * C372 - C100534 * C389 +
                 C100532 * C408 + C100536 * C1727 - C100537 * C1708 -
                 C100536 * C1728 + C152775 * C1744) *
                    C152696 * C51245 +
                (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
                   C152530 * C152870) *
                  C152914 +
              (((C100908 + C100907) * C152696 * C51245 +
                (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                   C152530 * C1430 -
               (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
                (C100600 + C100599) * C152696 * C51245) *
                   C152530 * C1429 -
               ((C100915 + C100916) * C152696 * C51247 +
                (C100912 + C100911) * C152696 * C51246 +
                (C100910 + C100909) * C152696 * C51245) *
                   C152530 * C152870) *
                  C152897 +
              ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
                C100614 * C51247) *
                   C152530 * C1429 -
               ((C101435 + C101436) * C152696 * C51247 +
                (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
                   C152530 * C1430 +
               (C100920 * C51245 + (C100916 + C100915) * C152696 * C51246 +
                (C100534 * C398 - C100535 * C377 - C100534 * C399 +
                 C100532 * C413 + C100536 * C2108 - C100537 * C2107 -
                 C100536 * C2109 + C152775 * C2110) *
                    C152696 * C51247) *
                   C152530 * C152870) *
                  C152864) -
         0.25 * std::pow(Pi, 2.5) *
             (((C100534 * C144 - C100535 * C136 - C100534 * C145 +
                C100532 * C160 + C100536 * C647 - C100537 * C632 -
                C100536 * C648 + C152775 * C668) *
                   C152696 * C51245 +
               (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                  C152530 * C1517 -
              (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
               (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
                C152775 * C1245 + C100534 * C386 - C100535 * C371 -
                C100534 * C387 + C100532 * C407) *
                   C152696 * C51245) *
                  C152530 * C1518 +
              ((C100534 * C388 - C100535 * C372 - C100534 * C389 +
                C100532 * C408 + C100536 * C1727 - C100537 * C1708 -
                C100536 * C1728 + C152775 * C1744) *
                   C152696 * C51245 +
               (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
                  C152530 * C1519 -
              ((C100536 * C2273 - C100537 * C2267 - C100536 * C2274 +
                C152775 * C2279 + C100534 * C1533 - C100535 * C1524 -
                C100534 * C1534 + C100532 * C1548) *
                   C152696 * C51247 +
               (C100536 * C2271 - C100537 * C2266 - C100536 * C2272 +
                C152775 * C2278 + C100534 * C1535 - C100535 * C1525 -
                C100534 * C1536 + C100532 * C1549) *
                   C152696 * C51246 +
               (C100536 * C2269 - C100537 * C2265 - C100536 * C2270 +
                C152775 * C2277 + C100534 * C1537 - C100535 * C1526 -
                C100534 * C1538 + C100532 * C1550) *
                   C152696 * C51245) *
                  C152530 * C1520 +
              ((C100534 * C1539 - C100535 * C1527 - C100534 * C1540 +
                C100532 * C1551 + C100536 * C8189 - C100537 * C8180 -
                C100536 * C8190 + C152775 * C8198) *
                   C152696 * C51245 +
               (C100534 * C1541 - C100535 * C1528 - C100534 * C1542 +
                C100532 * C1552 + C100536 * C8187 - C100537 * C8179 -
                C100536 * C8188 + C152775 * C8197) *
                   C152696 * C51246 +
               (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
                C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
                C100536 * C8729 + C152775 * C8730) *
                   C152696 * C51247) *
                  C152530 * C1521) *
             C152484 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
                 C100532 * C160 + C100536 * C647 - C100537 * C632 -
                 C100536 * C648 + C152775 * C668) *
                    C152696 * C51245 +
                (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                   C152918 -
               (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
                (C100536 * C649 - C100537 * C633 - C100536 * C650 +
                 C152775 * C669 + C100534 * C647 - C100535 * C632 -
                 C100534 * C648 + C100532 * C668) *
                    C152696 * C51245) *
                   C152903 +
               ((C100534 * C649 - C100535 * C633 - C100534 * C650 +
                 C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
                 C100536 * C2678 + C152775 * C2690) *
                    C152696 * C51245 +
                (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
                   C152873) *
                  C1429 +
              (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
                 C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
                 C100536 * C1720 + C152775 * C1740) *
                    C152696 * C51245 +
                (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                   C152903 -
               (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
                (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
                 C152775 * C1245 + C100534 * C386 - C100535 * C371 -
                 C100534 * C387 + C100532 * C407) *
                    C152696 * C51245) *
                   C152918 -
               ((C100536 * C3217 - C100537 * C3211 - C100536 * C3218 +
                 C152775 * C3223 + C100534 * C1715 - C100535 * C1702 -
                 C100534 * C1716 + C100532 * C1738) *
                    C152696 * C51247 +
                (C100536 * C3215 - C100537 * C3210 - C100536 * C3216 +
                 C152775 * C3222 + C100534 * C1717 - C100535 * C1703 -
                 C100534 * C1718 + C100532 * C1739) *
                    C152696 * C51246 +
                (C100536 * C3213 - C100537 * C3209 - C100536 * C3214 +
                 C152775 * C3221 + C100534 * C1719 - C100535 * C1704 -
                 C100534 * C1720 + C100532 * C1740) *
                    C152696 * C51245) *
                   C152873) *
                  C1430 +
              (((C100534 * C388 - C100535 * C372 - C100534 * C389 +
                 C100532 * C408 + C100536 * C1727 - C100537 * C1708 -
                 C100536 * C1728 + C152775 * C1744) *
                    C152696 * C51245 +
                (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
                   C152918 -
               ((C100536 * C1733 - C100537 * C1711 - C100536 * C1734 +
                 C152775 * C1747 + C100534 * C1723 - C100535 * C1706 -
                 C100534 * C1724 + C100532 * C1742) *
                    C152696 * C51247 +
                (C100536 * C1731 - C100537 * C1710 - C100536 * C1732 +
                 C152775 * C1746 + C100534 * C1725 - C100535 * C1707 -
                 C100534 * C1726 + C100532 * C1743) *
                    C152696 * C51246 +
                (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
                 C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
                 C100534 * C1728 + C100532 * C1744) *
                    C152696 * C51245) *
                   C152903 +
               ((C100534 * C1729 - C100535 * C1709 - C100534 * C1730 +
                 C100532 * C1745 + C100536 * C9516 - C100537 * C9509 -
                 C100536 * C9517 + C152775 * C9527) *
                    C152696 * C51245 +
                (C100534 * C1731 - C100535 * C1710 - C100534 * C1732 +
                 C100532 * C1746 + C100536 * C9514 - C100537 * C9508 -
                 C100536 * C9515 + C152775 * C9526) *
                    C152696 * C51246 +
                (C100534 * C1733 - C100535 * C1711 - C100534 * C1734 +
                 C100532 * C1747 + C100536 * C10024 - C100537 * C10023 -
                 C100536 * C10025 + C152775 * C10026) *
                    C152696 * C51247) *
                   C152873) *
                  C152870) *
             C152484 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
                 C100532 * C160 + C100536 * C647 - C100537 * C632 -
                 C100536 * C648 + C152775 * C668) *
                    C152696 * C51245 +
                (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                   C2427 -
               (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
                (C100536 * C649 - C100537 * C633 - C100536 * C650 +
                 C152775 * C669 + C100534 * C647 - C100535 * C632 -
                 C100534 * C648 + C100532 * C668) *
                    C152696 * C51245) *
                   C2428 +
               ((C100534 * C649 - C100535 * C633 - C100534 * C650 +
                 C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
                 C100536 * C2678 + C152775 * C2690) *
                    C152696 * C51245 +
                (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
                   C152873) *
                  C152512 * C152914 +
              (((C101214 + C101213) * C152696 * C51245 +
                (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                   C2428 -
               (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
                (C100600 + C100599) * C152696 * C51245) *
                   C2427 -
               ((C101221 + C101222) * C152696 * C51247 +
                (C101218 + C101217) * C152696 * C51246 +
                (C101216 + C101215) * C152696 * C51245) *
                   C152873) *
                  C152512 * C152897 +
              ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
                C100614 * C51247) *
                   C2427 -
               ((C101645 + C101646) * C152696 * C51247 +
                (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
                   C2428 +
               (C101226 * C51245 + (C101222 + C101221) * C152696 * C51246 +
                (C100534 * C659 - C100535 * C638 - C100534 * C660 +
                 C100532 * C674 + C100536 * C3052 - C100537 * C3051 -
                 C100536 * C3053 + C152775 * C3054) *
                    C152696 * C51247) *
                   C152873) *
                  C152512 * C152864) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
                 C100532 * C160 + C100536 * C647 - C100537 * C632 -
                 C100536 * C648 + C152775 * C668) *
                    C152696 * C51245 +
                (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                   C2427 -
               (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
                (C100536 * C649 - C100537 * C633 - C100536 * C650 +
                 C152775 * C669 + C100534 * C647 - C100535 * C632 -
                 C100534 * C648 + C100532 * C668) *
                    C152696 * C51245) *
                   C2428 +
               ((C100534 * C649 - C100535 * C633 - C100534 * C650 +
                 C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
                 C100536 * C2678 + C152775 * C2690) *
                    C152696 * C51245 +
                (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
                   C152873) *
                  C152917 +
              (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
                 C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
                 C100536 * C1720 + C152775 * C1740) *
                    C152696 * C51245 +
                (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                   C2428 -
               (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
                (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
                 C152775 * C1245 + C100534 * C386 - C100535 * C371 -
                 C100534 * C387 + C100532 * C407) *
                    C152696 * C51245) *
                   C2427 -
               ((C100536 * C3217 - C100537 * C3211 - C100536 * C3218 +
                 C152775 * C3223 + C100534 * C1715 - C100535 * C1702 -
                 C100534 * C1716 + C100532 * C1738) *
                    C152696 * C51247 +
                (C100536 * C3215 - C100537 * C3210 - C100536 * C3216 +
                 C152775 * C3222 + C100534 * C1717 - C100535 * C1703 -
                 C100534 * C1718 + C100532 * C1739) *
                    C152696 * C51246 +
                (C100536 * C3213 - C100537 * C3209 - C100536 * C3214 +
                 C152775 * C3221 + C100534 * C1719 - C100535 * C1704 -
                 C100534 * C1720 + C100532 * C1740) *
                    C152696 * C51245) *
                   C152873) *
                  C152901 +
              (((C100534 * C388 - C100535 * C372 - C100534 * C389 +
                 C100532 * C408 + C100536 * C1727 - C100537 * C1708 -
                 C100536 * C1728 + C152775 * C1744) *
                    C152696 * C51245 +
                (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
                   C2427 -
               ((C103075 + C103076) * C152696 * C51247 +
                (C103077 + C103078) * C152696 * C51246 +
                (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
                 C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
                 C100534 * C1728 + C100532 * C1744) *
                    C152696 * C51245) *
                   C2428 +
               ((C100534 * C1729 - C100535 * C1709 - C100534 * C1730 +
                 C100532 * C1745 + C100536 * C9516 - C100537 * C9509 -
                 C100536 * C9517 + C152775 * C9527) *
                    C152696 * C51245 +
                (C100534 * C1731 - C100535 * C1710 - C100534 * C1732 +
                 C100532 * C1746 + C100536 * C9514 - C100537 * C9508 -
                 C100536 * C9515 + C152775 * C9526) *
                    C152696 * C51246 +
                (C100534 * C1733 - C100535 * C1711 - C100534 * C1734 +
                 C100532 * C1747 + C100536 * C10024 - C100537 * C10023 -
                 C100536 * C10025 + C152775 * C10026) *
                    C152696 * C51247) *
                   C152873) *
                  C152870) *
             C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C152696 * C51245 +
           (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
              C2658 -
          (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
           (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
            C100534 * C647 - C100535 * C632 - C100534 * C648 + C100532 * C668) *
               C152696 * C51245) *
              C2659 +
          ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
            C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
            C152775 * C2690) *
               C152696 * C51245 +
           (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
              C2660 -
          ((C100536 * C2683 - C100537 * C2669 - C100536 * C2684 +
            C152775 * C2693 + C100534 * C2673 - C100535 * C2664 -
            C100534 * C2674 + C100532 * C2688) *
               C152696 * C51247 +
           (C100536 * C2681 - C100537 * C2668 - C100536 * C2682 +
            C152775 * C2692 + C100534 * C2675 - C100535 * C2665 -
            C100534 * C2676 + C100532 * C2689) *
               C152696 * C51246 +
           (C100536 * C2679 - C100537 * C2667 - C100536 * C2680 +
            C152775 * C2691 + C100534 * C2677 - C100535 * C2666 -
            C100534 * C2678 + C100532 * C2690) *
               C152696 * C51245) *
              C2661 +
          ((C100534 * C2679 - C100535 * C2667 - C100534 * C2680 +
            C100532 * C2691 + C100536 * C18111 - C100537 * C18106 -
            C100536 * C18112 + C152775 * C18118) *
               C152696 * C51245 +
           (C100534 * C2681 - C100535 * C2668 - C100534 * C2682 +
            C100532 * C2692 + C100536 * C18109 - C100537 * C18105 -
            C100536 * C18110 + C152775 * C18117) *
               C152696 * C51246 +
           (C100534 * C2683 - C100535 * C2669 - C100534 * C2684 +
            C100532 * C2693 + C100536 * C18631 - C100537 * C18630 -
            C100536 * C18632 + C152775 * C18633) *
               C152696 * C51247) *
              C2662) *
         C152512 * C152484) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C6338 +
           (C100534 * C386 - C100535 * C371 - C100534 * C387 + C100532 * C407 +
            C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
            C152775 * C1245) *
               C6339 +
           (C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
            C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
            C152775 * C1744) *
               C6340) *
              C152457 * C152530 * C152512 * C129 -
          ((C100910 + C100909) * C6340 + (C100907 + C100908) * C6339 +
           (C100600 + C100599) * C6338) *
              C152457 * C152530 * C152512 * C130 +
          (C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
              C152457 * C152530 * C152512 * C131 -
          ((C100915 + C100916) * C6340 + (C100914 + C100913) * C6339 +
           C100610 * C6338) *
              C152457 * C152530 * C152512 * C132 +
          (C100611 * C6338 + (C101436 + C101435) * C6339 +
           (C100534 * C398 - C100535 * C377 - C100534 * C399 + C100532 * C413 +
            C100536 * C2108 - C100537 * C2107 - C100536 * C2109 +
            C152775 * C2110) *
               C6340) *
              C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C152917 -
           ((C109374 + C109375) * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C152901 +
           (C109376 * C6338 + (C109375 + C109374) * C6339 +
            (C100534 * C1539 - C100535 * C1527 - C100534 * C1540 +
             C100532 * C1551 + C100536 * C8189 - C100537 * C8180 -
             C100536 * C8190 + C152775 * C8198) *
                C6340) *
               C152457 * C152530 * C152870) *
              C365 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            (C102760 + C102759) * C6340) *
               C152457 * C152530 * C152901 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C152917 -
           ((C100536 * C8187 - C100537 * C8179 - C100536 * C8188 +
             C152775 * C8197 + C100534 * C1541 - C100535 * C1528 -
             C100534 * C1542 + C100532 * C1552) *
                C6340 +
            (C102759 + C102760) * C6339 + C109357 * C6338) *
               C152457 * C152530 * C152870) *
              C366 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152530 * C152917 -
           ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
            C100917 * C6338) *
               C152457 * C152530 * C152901 +
           (C100918 * C6338 + (C102758 + C102757) * C6339 +
            (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
             C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
             C100536 * C8729 + C152775 * C8730) *
                C6340) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152918 -
           ((C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
             C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
             C100534 * C1728 + C100532 * C1744) *
                C6340 +
            (C100536 * C1719 - C100537 * C1704 - C100536 * C1720 +
             C152775 * C1740 + C100534 * C1233 - C100535 * C1227 -
             C100534 * C1234 + C100532 * C1245) *
                C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152903 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C100534 * C1719 - C100535 * C1704 - C100534 * C1720 +
             C100532 * C1740 + C100536 * C3213 - C100537 * C3209 -
             C100536 * C3214 + C152775 * C3221) *
                C6339 +
            (C100534 * C1729 - C100535 * C1709 - C100534 * C1730 +
             C100532 * C1745 + C100536 * C9516 - C100537 * C9509 -
             C100536 * C9517 + C152775 * C9527) *
                C6340) *
               C152457 * C152873) *
              C152512 * C365 +
          (((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
            (C103078 + C103077) * C6340) *
               C152457 * C152903 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152918 -
           ((C100536 * C9514 - C100537 * C9508 - C100536 * C9515 +
             C152775 * C9526 + C100534 * C1731 - C100535 * C1710 -
             C100534 * C1732 + C100532 * C1746) *
                C6340 +
            (C104147 + C104148) * C6339 + (C101216 + C101215) * C6338) *
               C152457 * C152873) *
              C152512 * C366 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152918 -
           ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
            C101223 * C6338) *
               C152457 * C152903 +
           (C101224 * C6338 + (C104146 + C104145) * C6339 +
            (C100534 * C1733 - C100535 * C1711 - C100534 * C1734 +
             C100532 * C1747 + C100536 * C10024 - C100537 * C10023 -
             C100536 * C10025 + C152775 * C10026) *
                C6340) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C1429 -
           ((C109374 + C109375) * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C1430 +
           (C109376 * C6338 + (C109375 + C109374) * C6339 +
            (C100534 * C1539 - C100535 * C1527 - C100534 * C1540 +
             C100532 * C1551 + C100536 * C8189 - C100537 * C8180 -
             C100536 * C8190 + C152775 * C8198) *
                C6340) *
               C152457 * C152530 * C152870) *
              C152914 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            (C102760 + C102759) * C6340) *
               C152457 * C152530 * C1430 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C1429 -
           ((C100536 * C8187 - C100537 * C8179 - C100536 * C8188 +
             C152775 * C8197 + C100534 * C1541 - C100535 * C1528 -
             C100534 * C1542 + C100532 * C1552) *
                C6340 +
            (C102759 + C102760) * C6339 + C109357 * C6338) *
               C152457 * C152530 * C152870) *
              C152897 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152530 * C1429 -
           ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
            C100917 * C6338) *
               C152457 * C152530 * C1430 +
           (C100918 * C6338 + (C102758 + C102757) * C6339 +
            (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
             C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
             C100536 * C8729 + C152775 * C8730) *
                C6340) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C6338 +
           (C109370 + C109371) * C6339 + C109376 * C6340) *
              C152457 * C152530 * C1517 -
          (C110641 * C6340 + (C109373 + C109372) * C6339 +
           (C109371 + C109370) * C6338) *
              C152457 * C152530 * C1518 +
          (C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
              C152457 * C152530 * C1519 -
          ((C110668 + C110669) * C6340 + (C110667 + C110666) * C6339 +
           C110641 * C6338) *
              C152457 * C152530 * C1520 +
          (C110670 * C6338 + (C110669 + C110668) * C6339 +
           (C100534 * C7930 - C100535 * C7924 - C100534 * C7931 +
            C100532 * C7936 + C100536 * C61016 - C100537 * C61015 -
            C100536 * C61017 + C152775 * C61018) *
               C6340) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152918 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152903 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C110938 + C110939) * C6339 + C110946 * C6340) *
               C152457 * C152873) *
              C1429 +
          (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
            (C110942 + C110943) * C6340) *
               C152457 * C152903 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152918 -
           ((C110944 + C110945) * C6340 + (C110941 + C110940) * C6339 +
            (C110939 + C110938) * C6338) *
               C152457 * C152873) *
              C1430 +
          ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C152918 -
           ((C100536 * C8191 - C100537 * C8181 - C100536 * C8192 +
             C152775 * C8199 + C100534 * C8189 - C100535 * C8180 -
             C100534 * C8190 + C100532 * C8198) *
                C6340 +
            (C110943 + C110942) * C6339 + C110889 * C6338) *
               C152457 * C152903 +
           (C110946 * C6338 + (C110945 + C110944) * C6339 +
            (C100534 * C8191 - C100535 * C8181 - C100534 * C8192 +
             C100532 * C8199 + C100536 * C61859 - C100537 * C61858 -
             C100536 * C61860 + C152775 * C61861) *
                C6340) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C2427 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C2428 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C110938 + C110939) * C6339 + C110946 * C6340) *
               C152457 * C152873) *
              C152512 * C152914 +
          (((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
            C111446 * C6340) *
               C152457 * C2428 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C2427 -
           ((C100536 * C9514 - C100537 * C9508 - C100536 * C9515 +
             C152775 * C9526 + C100534 * C1731 - C100535 * C1710 -
             C100534 * C1732 + C100532 * C1746) *
                C6340 +
            (C104147 + C104148) * C6339 + (C101216 + C101215) * C6338) *
               C152457 * C152873) *
              C152512 * C152897 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C2427 -
           ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
            C101223 * C6338) *
               C152457 * C2428 +
           (C101224 * C6338 + (C104146 + C104145) * C6339 +
            (C100534 * C1733 - C100535 * C1711 - C100534 * C1734 +
             C100532 * C1747 + C100536 * C10024 - C100537 * C10023 -
             C100536 * C10025 + C152775 * C10026) *
                C6340) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C2427 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C2428 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C110938 + C110939) * C6339 + C110946 * C6340) *
               C152457 * C152873) *
              C152917 +
          (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
            C111655 * C6340) *
               C152457 * C2428 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C2427 -
           ((C110944 + C110945) * C6340 + (C110941 + C110940) * C6339 +
            (C110939 + C110938) * C6338) *
               C152457 * C152873) *
              C152901 +
          ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C2427 -
           ((C111668 + C111669) * C6340 + (C110943 + C110942) * C6339 +
            C110889 * C6338) *
               C152457 * C2428 +
           (C110946 * C6338 + (C110945 + C110944) * C6339 +
            (C100534 * C8191 - C100535 * C8181 - C100534 * C8192 +
             C100532 * C8199 + C100536 * C61859 - C100537 * C61858 -
             C100536 * C61860 + C152775 * C61861) *
                C6340) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C6338 +
           (C109370 + C109371) * C6339 + C109376 * C6340) *
              C152457 * C2658 -
          (C110889 * C6340 + (C110299 + C110300) * C6339 +
           (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
            C100534 * C647 - C100535 * C632 - C100534 * C648 + C100532 * C668) *
               C6338) *
              C152457 * C2659 +
          ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
            C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
            C152775 * C2690) *
               C6338 +
           (C110938 + C110939) * C6339 + C110946 * C6340) *
              C152457 * C2660 -
          ((C100536 * C9520 - C100537 * C9511 - C100536 * C9521 +
            C152775 * C9529 + C100534 * C9516 - C100535 * C9509 -
            C100534 * C9517 + C100532 * C9527) *
               C6340 +
           (C100536 * C9518 - C100537 * C9510 - C100536 * C9519 +
            C152775 * C9528 + C100534 * C3213 - C100535 * C3209 -
            C100534 * C3214 + C100532 * C3221) *
               C6339 +
           (C100536 * C2679 - C100537 * C2667 - C100536 * C2680 +
            C152775 * C2691 + C100534 * C2677 - C100535 * C2666 -
            C100534 * C2678 + C100532 * C2690) *
               C6338) *
              C152457 * C2661 +
          ((C100534 * C2679 - C100535 * C2667 - C100534 * C2680 +
            C100532 * C2691 + C100536 * C18111 - C100537 * C18106 -
            C100536 * C18112 + C152775 * C18118) *
               C6338 +
           (C100534 * C9518 - C100535 * C9510 - C100534 * C9519 +
            C100532 * C9528 + C100536 * C18851 - C100537 * C18849 -
            C100536 * C18852 + C152775 * C18855) *
               C6339 +
           (C100534 * C9520 - C100535 * C9511 - C100534 * C9521 +
            C100532 * C9529 + C100536 * C68735 - C100537 * C68734 -
            C100536 * C68736 + C152775 * C68737) *
               C6340) *
              C152457 * C2662) *
         C152512 * C152484) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
           C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
           C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
           C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
           C117460 * C2690) *
              C152696 * C152457 * C152530 * C152512 * C129 -
          (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
           C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
           C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
           C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
           C117457 * C161) *
              C152696 * C152457 * C152530 * C152512 * C130 +
          (C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
           C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
           C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
           C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
           C117460 * C2688) *
              C152696 * C152457 * C152530 * C152512 * C131 -
          (C117467 * C2671 - C117468 * C2663 - C117467 * C2672 +
           C117460 * C2687 + C117465 * C655 - C117466 * C636 - C117465 * C656 +
           C117459 * C672 + C117463 * C641 - C117464 * C629 - C117463 * C642 +
           C117458 * C665 + C117461 * C150 - C117462 * C139 - C117461 * C151 +
           C117457 * C163) *
              C152696 * C152457 * C152530 * C152512 * C132 +
          (C117461 * C152 - C117462 * C140 - C117461 * C153 + C117457 * C164 +
           C117463 * C657 - C117464 * C637 - C117463 * C658 + C117458 * C673 +
           C117465 * C659 - C117466 * C638 - C117465 * C660 + C117459 * C674 +
           C117467 * C3052 - C117468 * C3051 - C117467 * C3053 +
           C117460 * C3054) *
              C152696 * C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152530 * C152917 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C152530 * C152901 +
           (C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
            C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
            C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
            C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
            C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
               C152696 * C152457 * C152530 * C152870) *
              C365 +
          ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
            C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
            C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
            C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
            C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
               C152696 * C152457 * C152530 * C152901 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C152530 * C152917 -
           (C117467 * C9514 - C117468 * C9508 - C117467 * C9515 +
            C117460 * C9526 + C117465 * C1731 - C117466 * C1710 -
            C117465 * C1732 + C117459 * C1746 + C117463 * C1725 -
            C117464 * C1707 - C117463 * C1726 + C117458 * C1743 +
            C117461 * C390 - C117462 * C373 - C117461 * C391 + C117457 * C409) *
               C152696 * C152457 * C152530 * C152870) *
              C366 +
          ((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
            C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
            C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
            C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
            C117460 * C2688) *
               C152696 * C152457 * C152530 * C152917 -
           (C117467 * C3217 - C117468 * C3211 - C117467 * C3218 +
            C117460 * C3223 + C117465 * C1715 - C117466 * C1702 -
            C117465 * C1716 + C117459 * C1738 + C117463 * C1237 -
            C117464 * C1229 - C117463 * C1238 + C117458 * C1247 +
            C117461 * C382 - C117462 * C369 - C117461 * C383 + C117457 * C405) *
               C152696 * C152457 * C152530 * C152901 +
           (C117461 * C392 - C117462 * C374 - C117461 * C393 + C117457 * C410 +
            C117463 * C1723 - C117464 * C1706 - C117463 * C1724 +
            C117458 * C1742 + C117465 * C1733 - C117466 * C1711 -
            C117465 * C1734 + C117459 * C1747 + C117467 * C10024 -
            C117468 * C10023 - C117467 * C10025 + C117460 * C10026) *
               C152696 * C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152918 -
           (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
            C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
            C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
            C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
            C117462 * C632 - C117461 * C648 + C117457 * C668) *
               C152696 * C152457 * C152903 +
           (C117461 * C649 - C117462 * C633 - C117461 * C650 + C117457 * C669 +
            C117463 * C2677 - C117464 * C2666 - C117463 * C2678 +
            C117458 * C2690 + C117465 * C2679 - C117466 * C2667 -
            C117465 * C2680 + C117459 * C2691 + C117467 * C18111 -
            C117468 * C18106 - C117467 * C18112 + C117460 * C18118) *
               C152696 * C152457 * C152873) *
              C152512 * C365 +
          ((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
            C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
            C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
            C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
            C117467 * C2682 + C117460 * C2692) *
               C152696 * C152457 * C152903 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C152918 -
           (C117467 * C18109 - C117468 * C18105 - C117467 * C18110 +
            C117460 * C18117 + C117465 * C2681 - C117466 * C2668 -
            C117465 * C2682 + C117459 * C2692 + C117463 * C2675 -
            C117464 * C2665 - C117463 * C2676 + C117458 * C2689 +
            C117461 * C651 - C117462 * C634 - C117461 * C652 + C117457 * C670) *
               C152696 * C152457 * C152873) *
              C152512 * C366 +
          ((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
            C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
            C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
            C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
            C117460 * C2688) *
               C152696 * C152457 * C152918 -
           (C117467 * C2683 - C117468 * C2669 - C117467 * C2684 +
            C117460 * C2693 + C117465 * C2673 - C117466 * C2664 -
            C117465 * C2674 + C117459 * C2688 + C117463 * C653 -
            C117464 * C635 - C117463 * C654 + C117458 * C671 + C117461 * C643 -
            C117462 * C630 - C117461 * C644 + C117457 * C666) *
               C152696 * C152457 * C152903 +
           (C117461 * C653 - C117462 * C635 - C117461 * C654 + C117457 * C671 +
            C117463 * C2673 - C117464 * C2664 - C117463 * C2674 +
            C117458 * C2688 + C117465 * C2683 - C117466 * C2669 -
            C117465 * C2684 + C117459 * C2693 + C117467 * C18631 -
            C117468 * C18630 - C117467 * C18632 + C117460 * C18633) *
               C152696 * C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152530 * C1429 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C152530 * C1430 +
           (C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
            C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
            C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
            C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
            C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
               C152696 * C152457 * C152530 * C152870) *
              C152914 +
          ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
            C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
            C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
            C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
            C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
               C152696 * C152457 * C152530 * C1430 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C152530 * C1429 -
           (C117467 * C9514 - C117468 * C9508 - C117467 * C9515 +
            C117460 * C9526 + C117465 * C1731 - C117466 * C1710 -
            C117465 * C1732 + C117459 * C1746 + C117463 * C1725 -
            C117464 * C1707 - C117463 * C1726 + C117458 * C1743 +
            C117461 * C390 - C117462 * C373 - C117461 * C391 + C117457 * C409) *
               C152696 * C152457 * C152530 * C152870) *
              C152897 +
          ((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
            C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
            C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
            C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
            C117460 * C2688) *
               C152696 * C152457 * C152530 * C1429 -
           (C117467 * C3217 - C117468 * C3211 - C117467 * C3218 +
            C117460 * C3223 + C117465 * C1715 - C117466 * C1702 -
            C117465 * C1716 + C117459 * C1738 + C117463 * C1237 -
            C117464 * C1229 - C117463 * C1238 + C117458 * C1247 +
            C117461 * C382 - C117462 * C369 - C117461 * C383 + C117457 * C405) *
               C152696 * C152457 * C152530 * C1430 +
           (C117461 * C392 - C117462 * C374 - C117461 * C393 + C117457 * C410 +
            C117463 * C1723 - C117464 * C1706 - C117463 * C1724 +
            C117458 * C1742 + C117465 * C1733 - C117466 * C1711 -
            C117465 * C1734 + C117459 * C1747 + C117467 * C10024 -
            C117468 * C10023 - C117467 * C10025 + C117460 * C10026) *
               C152696 * C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
           C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
           C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
           C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
           C117460 * C2690) *
              C152696 * C152457 * C152530 * C1517 -
          (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
           C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
           C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
           C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
           C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
              C152696 * C152457 * C152530 * C1518 +
          (C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
           C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
           C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
           C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
           C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
              C152696 * C152457 * C152530 * C1519 -
          (C117467 * C10240 - C117468 * C10238 - C117467 * C10241 +
           C117460 * C10244 + C117465 * C8185 - C117466 * C8178 -
           C117465 * C8186 + C117459 * C8196 + C117463 * C2269 -
           C117464 * C2265 - C117463 * C2270 + C117458 * C2277 +
           C117461 * C1537 - C117462 * C1526 - C117461 * C1538 +
           C117457 * C1550) *
              C152696 * C152457 * C152530 * C1520 +
          (C117461 * C1539 - C117462 * C1527 - C117461 * C1540 +
           C117457 * C1551 + C117463 * C8189 - C117464 * C8180 -
           C117463 * C8190 + C117458 * C8198 + C117465 * C8191 -
           C117466 * C8181 - C117465 * C8192 + C117459 * C8199 +
           C117467 * C61859 - C117468 * C61858 - C117467 * C61860 +
           C117460 * C61861) *
              C152696 * C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152918 -
           (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
            C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
            C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
            C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
            C117462 * C632 - C117461 * C648 + C117457 * C668) *
               C152696 * C152457 * C152903 +
           (C117461 * C649 - C117462 * C633 - C117461 * C650 + C117457 * C669 +
            C117463 * C2677 - C117464 * C2666 - C117463 * C2678 +
            C117458 * C2690 + C117465 * C2679 - C117466 * C2667 -
            C117465 * C2680 + C117459 * C2691 + C117467 * C18111 -
            C117468 * C18106 - C117467 * C18112 + C117460 * C18118) *
               C152696 * C152457 * C152873) *
              C1429 +
          ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
            C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
            C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
            C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
            C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
            C117460 * C9528) *
               C152696 * C152457 * C152903 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C152918 -
           (C117467 * C18851 - C117468 * C18849 - C117467 * C18852 +
            C117460 * C18855 + C117465 * C9518 - C117466 * C9510 -
            C117465 * C9519 + C117459 * C9528 + C117463 * C3213 -
            C117464 * C3209 - C117463 * C3214 + C117458 * C3221 +
            C117461 * C1719 - C117462 * C1704 - C117461 * C1720 +
            C117457 * C1740) *
               C152696 * C152457 * C152873) *
              C1430 +
          ((C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
            C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
            C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
            C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
            C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
               C152696 * C152457 * C152918 -
           (C117467 * C9520 - C117468 * C9511 - C117467 * C9521 +
            C117460 * C9529 + C117465 * C9516 - C117466 * C9509 -
            C117465 * C9517 + C117459 * C9527 + C117463 * C1729 -
            C117464 * C1709 - C117463 * C1730 + C117458 * C1745 +
            C117461 * C1727 - C117462 * C1708 - C117461 * C1728 +
            C117457 * C1744) *
               C152696 * C152457 * C152903 +
           (C117461 * C1729 - C117462 * C1709 - C117461 * C1730 +
            C117457 * C1745 + C117463 * C9516 - C117464 * C9509 -
            C117463 * C9517 + C117458 * C9527 + C117465 * C9520 -
            C117466 * C9511 - C117465 * C9521 + C117459 * C9529 +
            C117467 * C68735 - C117468 * C68734 - C117467 * C68736 +
            C117460 * C68737) *
               C152696 * C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C2427 -
           (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
            C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
            C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
            C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
            C117462 * C632 - C117461 * C648 + C117457 * C668) *
               C152696 * C152457 * C2428 +
           (C117461 * C649 - C117462 * C633 - C117461 * C650 + C117457 * C669 +
            C117463 * C2677 - C117464 * C2666 - C117463 * C2678 +
            C117458 * C2690 + C117465 * C2679 - C117466 * C2667 -
            C117465 * C2680 + C117459 * C2691 + C117467 * C18111 -
            C117468 * C18106 - C117467 * C18112 + C117460 * C18118) *
               C152696 * C152457 * C152873) *
              C152512 * C152914 +
          ((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
            C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
            C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
            C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
            C117467 * C2682 + C117460 * C2692) *
               C152696 * C152457 * C2428 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C2427 -
           (C117467 * C18109 - C117468 * C18105 - C117467 * C18110 +
            C117460 * C18117 + C117465 * C2681 - C117466 * C2668 -
            C117465 * C2682 + C117459 * C2692 + C117463 * C2675 -
            C117464 * C2665 - C117463 * C2676 + C117458 * C2689 +
            C117461 * C651 - C117462 * C634 - C117461 * C652 + C117457 * C670) *
               C152696 * C152457 * C152873) *
              C152512 * C152897 +
          ((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
            C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
            C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
            C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
            C117460 * C2688) *
               C152696 * C152457 * C2427 -
           (C117467 * C2683 - C117468 * C2669 - C117467 * C2684 +
            C117460 * C2693 + C117465 * C2673 - C117466 * C2664 -
            C117465 * C2674 + C117459 * C2688 + C117463 * C653 -
            C117464 * C635 - C117463 * C654 + C117458 * C671 + C117461 * C643 -
            C117462 * C630 - C117461 * C644 + C117457 * C666) *
               C152696 * C152457 * C2428 +
           (C117461 * C653 - C117462 * C635 - C117461 * C654 + C117457 * C671 +
            C117463 * C2673 - C117464 * C2664 - C117463 * C2674 +
            C117458 * C2688 + C117465 * C2683 - C117466 * C2669 -
            C117465 * C2684 + C117459 * C2693 + C117467 * C18631 -
            C117468 * C18630 - C117467 * C18632 + C117460 * C18633) *
               C152696 * C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C2427 -
           (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
            C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
            C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
            C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
            C117462 * C632 - C117461 * C648 + C117457 * C668) *
               C152696 * C152457 * C2428 +
           (C117461 * C649 - C117462 * C633 - C117461 * C650 + C117457 * C669 +
            C117463 * C2677 - C117464 * C2666 - C117463 * C2678 +
            C117458 * C2690 + C117465 * C2679 - C117466 * C2667 -
            C117465 * C2680 + C117459 * C2691 + C117467 * C18111 -
            C117468 * C18106 - C117467 * C18112 + C117460 * C18118) *
               C152696 * C152457 * C152873) *
              C152917 +
          ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
            C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
            C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
            C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
            C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
            C117460 * C9528) *
               C152696 * C152457 * C2428 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C2427 -
           (C117467 * C18851 - C117468 * C18849 - C117467 * C18852 +
            C117460 * C18855 + C117465 * C9518 - C117466 * C9510 -
            C117465 * C9519 + C117459 * C9528 + C117463 * C3213 -
            C117464 * C3209 - C117463 * C3214 + C117458 * C3221 +
            C117461 * C1719 - C117462 * C1704 - C117461 * C1720 +
            C117457 * C1740) *
               C152696 * C152457 * C152873) *
              C152901 +
          ((C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
            C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
            C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
            C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
            C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
               C152696 * C152457 * C2427 -
           (C117467 * C9520 - C117468 * C9511 - C117467 * C9521 +
            C117460 * C9529 + C117465 * C9516 - C117466 * C9509 -
            C117465 * C9517 + C117459 * C9527 + C117463 * C1729 -
            C117464 * C1709 - C117463 * C1730 + C117458 * C1745 +
            C117461 * C1727 - C117462 * C1708 - C117461 * C1728 +
            C117457 * C1744) *
               C152696 * C152457 * C2428 +
           (C117461 * C1729 - C117462 * C1709 - C117461 * C1730 +
            C117457 * C1745 + C117463 * C9516 - C117464 * C9509 -
            C117463 * C9517 + C117458 * C9527 + C117465 * C9520 -
            C117466 * C9511 - C117465 * C9521 + C117459 * C9529 +
            C117467 * C68735 - C117468 * C68734 - C117467 * C68736 +
            C117460 * C68737) *
               C152696 * C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
           C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
           C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
           C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
           C117460 * C2690) *
              C152696 * C152457 * C2658 -
          (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
           C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
           C117465 * C2678 + C117459 * C2690 + C117463 * C649 - C117464 * C633 -
           C117463 * C650 + C117458 * C669 + C117461 * C647 - C117462 * C632 -
           C117461 * C648 + C117457 * C668) *
              C152696 * C152457 * C2659 +
          (C117461 * C649 - C117462 * C633 - C117461 * C650 + C117457 * C669 +
           C117463 * C2677 - C117464 * C2666 - C117463 * C2678 +
           C117458 * C2690 + C117465 * C2679 - C117466 * C2667 -
           C117465 * C2680 + C117459 * C2691 + C117467 * C18111 -
           C117468 * C18106 - C117467 * C18112 + C117460 * C18118) *
              C152696 * C152457 * C2660 -
          (C117467 * C18113 - C117468 * C18107 - C117467 * C18114 +
           C117460 * C18119 + C117465 * C18111 - C117466 * C18106 -
           C117465 * C18112 + C117459 * C18118 + C117463 * C2679 -
           C117464 * C2667 - C117463 * C2680 + C117458 * C2691 +
           C117461 * C2677 - C117462 * C2666 - C117461 * C2678 +
           C117457 * C2690) *
              C152696 * C152457 * C2661 +
          (C117461 * C2679 - C117462 * C2667 - C117461 * C2680 +
           C117457 * C2691 + C117463 * C18111 - C117464 * C18106 -
           C117463 * C18112 + C117458 * C18118 + C117465 * C18113 -
           C117466 * C18107 - C117465 * C18114 + C117459 * C18119 +
           C117467 * C119418 - C117468 * C119417 - C117467 * C119419 +
           C117460 * C119420) *
              C152696 * C152457 * C2662) *
         C152512 * C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[313] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
                 C100532 * C160 + C100536 * C647 - C100537 * C632 -
                 C100536 * C648 + C152775 * C668) *
                    C152696 * C51245 +
                (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                   C152829 -
               (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
                (C100536 * C649 - C100537 * C633 - C100536 * C650 +
                 C152775 * C669 + C100534 * C647 - C100535 * C632 -
                 C100534 * C648 + C100532 * C668) *
                    C152696 * C51245) *
                   C152617) *
                  C152512 * C873 +
              (((C101214 + C101213) * C152696 * C51245 +
                (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                   C152617 -
               (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
                (C100600 + C100599) * C152696 * C51245) *
                   C152829) *
                  C152512 * C874 +
              ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
                C100614 * C51247) *
                   C152829 -
               ((C101645 + C101646) * C152696 * C51247 +
                (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
                   C152617) *
                  C152512 * C875 +
              ((C101640 * C51245 + (C101646 + C101645) * C152696 * C51246 +
                (C100534 * C661 - C100535 * C639 - C100534 * C662 +
                 C100532 * C675 + C100536 * C663 - C100537 * C640 -
                 C100536 * C664 + C152775 * C676) *
                    C152696 * C51247) *
                   C152617 -
               ((C100607 + C100608) * C152696 * C51247 +
                (C100606 + C100605) * C152696 * C51246 + C100613 * C51245) *
                   C152829) *
                  C152512 * C152874) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
                  C100532 * C160 + C100536 * C647 - C100537 * C632 -
                  C100536 * C648 + C152775 * C668) *
                     C152696 * C51245 +
                 (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                    C152829 -
                (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
                 (C100536 * C649 - C100537 * C633 - C100536 * C650 +
                  C152775 * C669 + C100534 * C647 - C100535 * C632 -
                  C100534 * C648 + C100532 * C668) *
                     C152696 * C51245) *
                    C152617) *
                   C1429 +
               (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
                  C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
                  C100536 * C1720 + C152775 * C1740) *
                     C152696 * C51245 +
                 (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                    C152617 -
                (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
                 (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
                  C152775 * C1245 + C100534 * C386 - C100535 * C371 -
                  C100534 * C387 + C100532 * C407) *
                     C152696 * C51245) *
                    C152829) *
                   C1430 +
               (((C100534 * C388 - C100535 * C372 - C100534 * C389 +
                  C100532 * C408 + C100536 * C1727 - C100537 * C1708 -
                  C100536 * C1728 + C152775 * C1744) *
                     C152696 * C51245 +
                 (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
                    C152829 -
                ((C103075 + C103076) * C152696 * C51247 +
                 (C103077 + C103078) * C152696 * C51246 +
                 (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
                  C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
                  C100534 * C1728 + C100532 * C1744) *
                     C152696 * C51245) *
                    C152617) *
                   C152870) *
                  C152814 +
              ((((C101214 + C101213) * C152696 * C51245 +
                 (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                    C152617 -
                (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
                 (C100600 + C100599) * C152696 * C51245) *
                    C152829) *
                   C1429 +
               (((C100908 + C100907) * C152696 * C51245 +
                 (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                    C152829 -
                ((C101977 + C101978) * C152696 * C51247 +
                 (C101976 + C101975) * C152696 * C51246 +
                 (C101974 + C101973) * C152696 * C51245) *
                    C152617) *
                   C1430 +
               (((C103078 + C103077) * C152696 * C51245 +
                 (C103076 + C103075) * C152696 * C51246 +
                 (C100534 * C1721 - C100535 * C1705 - C100534 * C1722 +
                  C100532 * C1741 + C100536 * C1735 - C100537 * C1712 -
                  C100536 * C1736 + C152775 * C1748) *
                     C152696 * C51247) *
                    C152617 -
                ((C100915 + C100916) * C152696 * C51247 +
                 (C100912 + C100911) * C152696 * C51246 +
                 (C100910 + C100909) * C152696 * C51245) *
                    C152829) *
                   C152870) *
                  C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C3047 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C3048 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C152696 * C51245 +
            (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
               C3049 -
           ((C104367 + C104368) * C152696 * C51247 +
            (C104369 + C104370) * C152696 * C51246 +
            (C100536 * C2679 - C100537 * C2667 - C100536 * C2680 +
             C152775 * C2691 + C100534 * C2677 - C100535 * C2666 -
             C100534 * C2678 + C100532 * C2690) *
                C152696 * C51245) *
               C152886) *
              C152512 * C152814 +
          (((C101214 + C101213) * C152696 * C51245 +
            (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
               C3048 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C3047 -
           ((C101221 + C101222) * C152696 * C51247 +
            (C101218 + C101217) * C152696 * C51246 +
            (C101216 + C101215) * C152696 * C51245) *
               C3049 +
           ((C104370 + C104369) * C152696 * C51245 +
            (C104368 + C104367) * C152696 * C51246 +
            (C100534 * C2671 - C100535 * C2663 - C100534 * C2672 +
             C100532 * C2687 + C100536 * C2685 - C100537 * C2670 -
             C100536 * C2686 + C152775 * C2694) *
                C152696 * C51247) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152829 -
           ((C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
             C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
             C100534 * C1728 + C100532 * C1744) *
                C6340 +
            (C100536 * C1719 - C100537 * C1704 - C100536 * C1720 +
             C152775 * C1740 + C100534 * C1233 - C100535 * C1227 -
             C100534 * C1234 + C100532 * C1245) *
                C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152617) *
              C152512 * C873 +
          (((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
            (C103078 + C103077) * C6340) *
               C152457 * C152617 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152829) *
              C152512 * C874 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152829 -
           ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
            C101223 * C6338) *
               C152457 * C152617) *
              C152512 * C875 +
          ((C101631 * C6338 + (C101978 + C101977) * C6339 +
            (C100534 * C1721 - C100535 * C1705 - C100534 * C1722 +
             C100532 * C1741 + C100536 * C1735 - C100537 * C1712 -
             C100536 * C1736 + C152775 * C1748) *
                C6340) *
               C152457 * C152617 -
           ((C100915 + C100916) * C6340 + (C100914 + C100913) * C6339 +
            C100610 * C6338) *
               C152457 * C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C152829 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152617) *
               C1429 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             (C110942 + C110943) * C6340) *
                C152457 * C152617 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C152829) *
               C1430 +
           ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
                C152457 * C152829 -
            ((C100536 * C8191 - C100537 * C8181 - C100536 * C8192 +
              C152775 * C8199 + C100534 * C8189 - C100535 * C8180 -
              C100534 * C8190 + C100532 * C8198) *
                 C6340 +
             (C110943 + C110942) * C6339 + C110889 * C6338) *
                C152457 * C152617) *
               C152870) *
              C152814 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C152617 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C152829) *
               C1429 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C152829 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C152617) *
               C1430 +
           ((C111446 * C6338 + (C111460 + C111459) * C6339 +
             (C100534 * C8187 - C100535 * C8179 - C100534 * C8188 +
              C100532 * C8197 + C100536 * C8193 - C100537 * C8182 -
              C100536 * C8194 + C152775 * C8200) *
                 C6340) *
                C152457 * C152617 -
            ((C111154 + C111155) * C6340 + (C102759 + C102760) * C6339 +
             C109357 * C6338) *
                C152457 * C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C3047 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C3048 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C110938 + C110939) * C6339 + C110946 * C6340) *
               C152457 * C3049 -
           ((C100536 * C9520 - C100537 * C9511 - C100536 * C9521 +
             C152775 * C9529 + C100534 * C9516 - C100535 * C9509 -
             C100534 * C9517 + C100532 * C9527) *
                C6340 +
            (C100536 * C9518 - C100537 * C9510 - C100536 * C9519 +
             C152775 * C9528 + C100534 * C3213 - C100535 * C3209 -
             C100534 * C3214 + C100532 * C3221) *
                C6339 +
            (C100536 * C2679 - C100537 * C2667 - C100536 * C2680 +
             C152775 * C2691 + C100534 * C2677 - C100535 * C2666 -
             C100534 * C2678 + C100532 * C2690) *
                C6338) *
               C152457 * C152886) *
              C152512 * C152814 +
          (((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
            C111446 * C6340) *
               C152457 * C3048 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C3047 -
           ((C112530 + C112531) * C6340 + (C104147 + C104148) * C6339 +
            (C101216 + C101215) * C6338) *
               C152457 * C3049 +
           ((C104370 + C104369) * C6338 +
            (C100534 * C3215 - C100535 * C3210 - C100534 * C3216 +
             C100532 * C3222 + C100536 * C9522 - C100537 * C9512 -
             C100536 * C9523 + C152775 * C9530) *
                C6339 +
            (C100534 * C9514 - C100535 * C9508 - C100534 * C9515 +
             C100532 * C9526 + C100536 * C9524 - C100537 * C9513 -
             C100536 * C9525 + C152775 * C9531) *
                C6340) *
               C152457 * C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152829 -
           (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
            C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
            C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
            C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
            C117462 * C632 - C117461 * C648 + C117457 * C668) *
               C152696 * C152457 * C152617) *
              C152512 * C873 +
          ((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
            C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
            C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
            C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
            C117467 * C2682 + C117460 * C2692) *
               C152696 * C152457 * C152617 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C152829) *
              C152512 * C874 +
          ((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
            C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
            C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
            C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
            C117460 * C2688) *
               C152696 * C152457 * C152829 -
           (C117467 * C2683 - C117468 * C2669 - C117467 * C2684 +
            C117460 * C2693 + C117465 * C2673 - C117466 * C2664 -
            C117465 * C2674 + C117459 * C2688 + C117463 * C653 -
            C117464 * C635 - C117463 * C654 + C117458 * C671 + C117461 * C643 -
            C117462 * C630 - C117461 * C644 + C117457 * C666) *
               C152696 * C152457 * C152617) *
              C152512 * C875 +
          ((C117461 * C641 - C117462 * C629 - C117461 * C642 + C117457 * C665 +
            C117463 * C655 - C117464 * C636 - C117463 * C656 + C117458 * C672 +
            C117465 * C2671 - C117466 * C2663 - C117465 * C2672 +
            C117459 * C2687 + C117467 * C2685 - C117468 * C2670 -
            C117467 * C2686 + C117460 * C2694) *
               C152696 * C152457 * C152617 -
           (C117467 * C2671 - C117468 * C2663 - C117467 * C2672 +
            C117460 * C2687 + C117465 * C655 - C117466 * C636 - C117465 * C656 +
            C117459 * C672 + C117463 * C641 - C117464 * C629 - C117463 * C642 +
            C117458 * C665 + C117461 * C150 - C117462 * C139 - C117461 * C151 +
            C117457 * C163) *
               C152696 * C152457 * C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
             C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
             C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
             C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
             C117460 * C2690) *
                C152696 * C152457 * C152829 -
            (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
             C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
             C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
             C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
             C117462 * C632 - C117461 * C648 + C117457 * C668) *
                C152696 * C152457 * C152617) *
               C1429 +
           ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
             C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
             C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
             C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
             C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
             C117460 * C9528) *
                C152696 * C152457 * C152617 -
            (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
             C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
             C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
             C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
             C117461 * C386 - C117462 * C371 - C117461 * C387 +
             C117457 * C407) *
                C152696 * C152457 * C152829) *
               C1430 +
           ((C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
             C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
             C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
             C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
             C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
                C152696 * C152457 * C152829 -
            (C117467 * C9520 - C117468 * C9511 - C117467 * C9521 +
             C117460 * C9529 + C117465 * C9516 - C117466 * C9509 -
             C117465 * C9517 + C117459 * C9527 + C117463 * C1729 -
             C117464 * C1709 - C117463 * C1730 + C117458 * C1745 +
             C117461 * C1727 - C117462 * C1708 - C117461 * C1728 +
             C117457 * C1744) *
                C152696 * C152457 * C152617) *
               C152870) *
              C152814 +
          (((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
             C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
             C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
             C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
             C117467 * C2682 + C117460 * C2692) *
                C152696 * C152457 * C152617 -
            (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
             C117460 * C2689 + C117465 * C651 - C117466 * C634 -
             C117465 * C652 + C117459 * C670 + C117463 * C645 - C117464 * C631 -
             C117463 * C646 + C117458 * C667 + C117461 * C146 - C117462 * C137 -
             C117461 * C147 + C117457 * C161) *
                C152696 * C152457 * C152829) *
               C1429 +
           ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
             C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
             C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
             C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
             C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
                C152696 * C152457 * C152829 -
            (C117467 * C9522 - C117468 * C9512 - C117467 * C9523 +
             C117460 * C9530 + C117465 * C3215 - C117466 * C3210 -
             C117465 * C3216 + C117459 * C3222 + C117463 * C1717 -
             C117464 * C1703 - C117463 * C1718 + C117458 * C1739 +
             C117461 * C1235 - C117462 * C1228 - C117461 * C1236 +
             C117457 * C1246) *
                C152696 * C152457 * C152617) *
               C1430 +
           ((C117461 * C1725 - C117462 * C1707 - C117461 * C1726 +
             C117457 * C1743 + C117463 * C1731 - C117464 * C1710 -
             C117463 * C1732 + C117458 * C1746 + C117465 * C9514 -
             C117466 * C9508 - C117465 * C9515 + C117459 * C9526 +
             C117467 * C9524 - C117468 * C9513 - C117467 * C9525 +
             C117460 * C9531) *
                C152696 * C152457 * C152617 -
            (C117467 * C9514 - C117468 * C9508 - C117467 * C9515 +
             C117460 * C9526 + C117465 * C1731 - C117466 * C1710 -
             C117465 * C1732 + C117459 * C1746 + C117463 * C1725 -
             C117464 * C1707 - C117463 * C1726 + C117458 * C1743 +
             C117461 * C390 - C117462 * C373 - C117461 * C391 +
             C117457 * C409) *
                C152696 * C152457 * C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C3047 -
           (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
            C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
            C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
            C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
            C117462 * C632 - C117461 * C648 + C117457 * C668) *
               C152696 * C152457 * C3048 +
           (C117461 * C649 - C117462 * C633 - C117461 * C650 + C117457 * C669 +
            C117463 * C2677 - C117464 * C2666 - C117463 * C2678 +
            C117458 * C2690 + C117465 * C2679 - C117466 * C2667 -
            C117465 * C2680 + C117459 * C2691 + C117467 * C18111 -
            C117468 * C18106 - C117467 * C18112 + C117460 * C18118) *
               C152696 * C152457 * C3049 -
           (C117467 * C18113 - C117468 * C18107 - C117467 * C18114 +
            C117460 * C18119 + C117465 * C18111 - C117466 * C18106 -
            C117465 * C18112 + C117459 * C18118 + C117463 * C2679 -
            C117464 * C2667 - C117463 * C2680 + C117458 * C2691 +
            C117461 * C2677 - C117462 * C2666 - C117461 * C2678 +
            C117457 * C2690) *
               C152696 * C152457 * C152886) *
              C152512 * C152814 +
          ((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
            C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
            C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
            C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
            C117467 * C2682 + C117460 * C2692) *
               C152696 * C152457 * C3048 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C3047 -
           (C117467 * C18109 - C117468 * C18105 - C117467 * C18110 +
            C117460 * C18117 + C117465 * C2681 - C117466 * C2668 -
            C117465 * C2682 + C117459 * C2692 + C117463 * C2675 -
            C117464 * C2665 - C117463 * C2676 + C117458 * C2689 +
            C117461 * C651 - C117462 * C634 - C117461 * C652 + C117457 * C670) *
               C152696 * C152457 * C3049 +
           (C117461 * C2675 - C117462 * C2665 - C117461 * C2676 +
            C117457 * C2689 + C117463 * C2681 - C117464 * C2668 -
            C117463 * C2682 + C117458 * C2692 + C117465 * C18109 -
            C117466 * C18105 - C117465 * C18110 + C117459 * C18117 +
            C117467 * C18115 - C117468 * C18108 - C117467 * C18116 +
            C117460 * C18120) *
               C152696 * C152457 * C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[314] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C152696 * C51245 +
           (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
              C152530 * C152512 * C129 -
          (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
           (C100600 + C100599) * C152696 * C51245) *
              C152530 * C152512 * C130 +
          (C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
           C100614 * C51247) *
              C152530 * C152512 * C131 -
          ((C100607 + C100608) * C152696 * C51247 +
           (C100606 + C100605) * C152696 * C51246 + C100613 * C51245) *
              C152530 * C152512 * C132 +
          (C100614 * C51245 + (C100608 + C100607) * C152696 * C51246 +
           (C100534 * C156 - C100535 * C142 - C100534 * C157 + C100532 * C166 +
            C100536 * C1022 - C100537 * C1021 - C100536 * C1023 +
            C152775 * C1024) *
               C152696 * C51247) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152530 * C152917 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152530 * C152901 +
           ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152530 * C152870) *
              C365 +
          (((C100908 + C100907) * C152696 * C51245 +
            (C100906 + C100905) * C152696 * C51246 +
            (C100913 + C100914) * C152696 * C51247) *
               C152530 * C152901 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152530 * C152917 -
           ((C100915 + C100916) * C152696 * C51247 +
            (C100912 + C100911) * C152696 * C51246 +
            (C100910 + C100909) * C152696 * C51245) *
               C152530 * C152870) *
              C366 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152530 * C152917 -
           ((C100536 * C1241 - C100537 * C1231 - C100536 * C1242 +
             C152775 * C1249 + C100534 * C396 - C100535 * C376 -
             C100534 * C397 + C100532 * C412) *
                C152696 * C51247 +
            (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
               C152530 * C152901 +
           (C100920 * C51245 + (C100916 + C100915) * C152696 * C51246 +
            (C100534 * C398 - C100535 * C377 - C100534 * C399 + C100532 * C413 +
             C100536 * C2108 - C100537 * C2107 - C100536 * C2109 +
             C152775 * C2110) *
                C152696 * C51247) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152530 * C1429 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152530 * C1430 +
           ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152530 * C152870) *
              C152914 +
          (((C100908 + C100907) * C152696 * C51245 +
            (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
               C152530 * C1430 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152530 * C1429 -
           ((C100915 + C100916) * C152696 * C51247 +
            (C100912 + C100911) * C152696 * C51246 +
            (C100910 + C100909) * C152696 * C51245) *
               C152530 * C152870) *
              C152897 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152530 * C1429 -
           ((C101435 + C101436) * C152696 * C51247 +
            (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
               C152530 * C1430 +
           (C100920 * C51245 + (C100916 + C100915) * C152696 * C51246 +
            (C100534 * C398 - C100535 * C377 - C100534 * C399 + C100532 * C413 +
             C100536 * C2108 - C100537 * C2107 - C100536 * C2109 +
             C152775 * C2110) *
                C152696 * C51247) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C152696 * C51245 +
           (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
              C152530 * C1517 -
          (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
           (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
            C152775 * C1245 + C100534 * C386 - C100535 * C371 - C100534 * C387 +
            C100532 * C407) *
               C152696 * C51245) *
              C152530 * C1518 +
          ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
            C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
            C152775 * C1744) *
               C152696 * C51245 +
           (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
              C152530 * C1519 -
          ((C100536 * C2273 - C100537 * C2267 - C100536 * C2274 +
            C152775 * C2279 + C100534 * C1533 - C100535 * C1524 -
            C100534 * C1534 + C100532 * C1548) *
               C152696 * C51247 +
           (C100536 * C2271 - C100537 * C2266 - C100536 * C2272 +
            C152775 * C2278 + C100534 * C1535 - C100535 * C1525 -
            C100534 * C1536 + C100532 * C1549) *
               C152696 * C51246 +
           (C100536 * C2269 - C100537 * C2265 - C100536 * C2270 +
            C152775 * C2277 + C100534 * C1537 - C100535 * C1526 -
            C100534 * C1538 + C100532 * C1550) *
               C152696 * C51245) *
              C152530 * C1520 +
          ((C100534 * C1539 - C100535 * C1527 - C100534 * C1540 +
            C100532 * C1551 + C100536 * C8189 - C100537 * C8180 -
            C100536 * C8190 + C152775 * C8198) *
               C152696 * C51245 +
           (C100534 * C1541 - C100535 * C1528 - C100534 * C1542 +
            C100532 * C1552 + C100536 * C8187 - C100537 * C8179 -
            C100536 * C8188 + C152775 * C8197) *
               C152696 * C51246 +
           (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
            C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
            C100536 * C8729 + C152775 * C8730) *
               C152696 * C51247) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C2427 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C2428 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C152696 * C51245 +
            (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
               C152873) *
              C152512 * C152914 +
          (((C101214 + C101213) * C152696 * C51245 +
            (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
               C2428 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C2427 -
           ((C101221 + C101222) * C152696 * C51247 +
            (C101218 + C101217) * C152696 * C51246 +
            (C101216 + C101215) * C152696 * C51245) *
               C152873) *
              C152512 * C152897 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C2427 -
           ((C101645 + C101646) * C152696 * C51247 +
            (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
               C2428 +
           (C101226 * C51245 + (C101222 + C101221) * C152696 * C51246 +
            (C100534 * C659 - C100535 * C638 - C100534 * C660 + C100532 * C674 +
             C100536 * C3052 - C100537 * C3051 - C100536 * C3053 +
             C152775 * C3054) *
                C152696 * C51247) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C2427 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C2428 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C152696 * C51245 +
            (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
               C152873) *
              C152917 +
          (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
             C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
             C100536 * C1720 + C152775 * C1740) *
                C152696 * C51245 +
            (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
               C2428 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C2427 -
           ((C100536 * C3217 - C100537 * C3211 - C100536 * C3218 +
             C152775 * C3223 + C100534 * C1715 - C100535 * C1702 -
             C100534 * C1716 + C100532 * C1738) *
                C152696 * C51247 +
            (C100536 * C3215 - C100537 * C3210 - C100536 * C3216 +
             C152775 * C3222 + C100534 * C1717 - C100535 * C1703 -
             C100534 * C1718 + C100532 * C1739) *
                C152696 * C51246 +
            (C100536 * C3213 - C100537 * C3209 - C100536 * C3214 +
             C152775 * C3221 + C100534 * C1719 - C100535 * C1704 -
             C100534 * C1720 + C100532 * C1740) *
                C152696 * C51245) *
               C152873) *
              C152901 +
          (((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C2427 -
           ((C103075 + C103076) * C152696 * C51247 +
            (C103077 + C103078) * C152696 * C51246 +
            (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
             C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
             C100534 * C1728 + C100532 * C1744) *
                C152696 * C51245) *
               C2428 +
           ((C100534 * C1729 - C100535 * C1709 - C100534 * C1730 +
             C100532 * C1745 + C100536 * C9516 - C100537 * C9509 -
             C100536 * C9517 + C152775 * C9527) *
                C152696 * C51245 +
            (C100534 * C1731 - C100535 * C1710 - C100534 * C1732 +
             C100532 * C1746 + C100536 * C9514 - C100537 * C9508 -
             C100536 * C9515 + C152775 * C9526) *
                C152696 * C51246 +
            (C100534 * C1733 - C100535 * C1711 - C100534 * C1734 +
             C100532 * C1747 + C100536 * C10024 - C100537 * C10023 -
             C100536 * C10025 + C152775 * C10026) *
                C152696 * C51247) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C6338 +
           (C100534 * C386 - C100535 * C371 - C100534 * C387 + C100532 * C407 +
            C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
            C152775 * C1245) *
               C6339 +
           (C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
            C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
            C152775 * C1744) *
               C6340) *
              C152457 * C152530 * C152512 * C129 -
          ((C100910 + C100909) * C6340 + (C100907 + C100908) * C6339 +
           (C100600 + C100599) * C6338) *
              C152457 * C152530 * C152512 * C130 +
          (C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
              C152457 * C152530 * C152512 * C131 -
          ((C100915 + C100916) * C6340 + (C100914 + C100913) * C6339 +
           C100610 * C6338) *
              C152457 * C152530 * C152512 * C132 +
          (C100611 * C6338 + (C101436 + C101435) * C6339 +
           (C100534 * C398 - C100535 * C377 - C100534 * C399 + C100532 * C413 +
            C100536 * C2108 - C100537 * C2107 - C100536 * C2109 +
            C152775 * C2110) *
               C6340) *
              C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C152917 -
           ((C109374 + C109375) * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C152901 +
           (C109376 * C6338 + (C109375 + C109374) * C6339 +
            (C100534 * C1539 - C100535 * C1527 - C100534 * C1540 +
             C100532 * C1551 + C100536 * C8189 - C100537 * C8180 -
             C100536 * C8190 + C152775 * C8198) *
                C6340) *
               C152457 * C152530 * C152870) *
              C365 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            (C102760 + C102759) * C6340) *
               C152457 * C152530 * C152901 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C152917 -
           ((C100536 * C8187 - C100537 * C8179 - C100536 * C8188 +
             C152775 * C8197 + C100534 * C1541 - C100535 * C1528 -
             C100534 * C1542 + C100532 * C1552) *
                C6340 +
            (C102759 + C102760) * C6339 + C109357 * C6338) *
               C152457 * C152530 * C152870) *
              C366 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152530 * C152917 -
           ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
            C100917 * C6338) *
               C152457 * C152530 * C152901 +
           (C100918 * C6338 + (C102758 + C102757) * C6339 +
            (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
             C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
             C100536 * C8729 + C152775 * C8730) *
                C6340) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C1429 -
           ((C109374 + C109375) * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C1430 +
           (C109376 * C6338 + (C109375 + C109374) * C6339 +
            (C100534 * C1539 - C100535 * C1527 - C100534 * C1540 +
             C100532 * C1551 + C100536 * C8189 - C100537 * C8180 -
             C100536 * C8190 + C152775 * C8198) *
                C6340) *
               C152457 * C152530 * C152870) *
              C152914 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            (C102760 + C102759) * C6340) *
               C152457 * C152530 * C1430 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C1429 -
           ((C100536 * C8187 - C100537 * C8179 - C100536 * C8188 +
             C152775 * C8197 + C100534 * C1541 - C100535 * C1528 -
             C100534 * C1542 + C100532 * C1552) *
                C6340 +
            (C102759 + C102760) * C6339 + C109357 * C6338) *
               C152457 * C152530 * C152870) *
              C152897 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152530 * C1429 -
           ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
            C100917 * C6338) *
               C152457 * C152530 * C1430 +
           (C100918 * C6338 + (C102758 + C102757) * C6339 +
            (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
             C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
             C100536 * C8729 + C152775 * C8730) *
                C6340) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C6338 +
           (C109370 + C109371) * C6339 + C109376 * C6340) *
              C152457 * C152530 * C1517 -
          (C110641 * C6340 + (C109373 + C109372) * C6339 +
           (C109371 + C109370) * C6338) *
              C152457 * C152530 * C1518 +
          (C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
              C152457 * C152530 * C1519 -
          ((C110668 + C110669) * C6340 + (C110667 + C110666) * C6339 +
           C110641 * C6338) *
              C152457 * C152530 * C1520 +
          (C110670 * C6338 + (C110669 + C110668) * C6339 +
           (C100534 * C7930 - C100535 * C7924 - C100534 * C7931 +
            C100532 * C7936 + C100536 * C61016 - C100537 * C61015 -
            C100536 * C61017 + C152775 * C61018) *
               C6340) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C2427 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C2428 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C110938 + C110939) * C6339 + C110946 * C6340) *
               C152457 * C152873) *
              C152512 * C152914 +
          (((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
            C111446 * C6340) *
               C152457 * C2428 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C2427 -
           ((C100536 * C9514 - C100537 * C9508 - C100536 * C9515 +
             C152775 * C9526 + C100534 * C1731 - C100535 * C1710 -
             C100534 * C1732 + C100532 * C1746) *
                C6340 +
            (C104147 + C104148) * C6339 + (C101216 + C101215) * C6338) *
               C152457 * C152873) *
              C152512 * C152897 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C2427 -
           ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
            C101223 * C6338) *
               C152457 * C2428 +
           (C101224 * C6338 + (C104146 + C104145) * C6339 +
            (C100534 * C1733 - C100535 * C1711 - C100534 * C1734 +
             C100532 * C1747 + C100536 * C10024 - C100537 * C10023 -
             C100536 * C10025 + C152775 * C10026) *
                C6340) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C2427 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C2428 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C110938 + C110939) * C6339 + C110946 * C6340) *
               C152457 * C152873) *
              C152917 +
          (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
            C111655 * C6340) *
               C152457 * C2428 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C2427 -
           ((C110944 + C110945) * C6340 + (C110941 + C110940) * C6339 +
            (C110939 + C110938) * C6338) *
               C152457 * C152873) *
              C152901 +
          ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C2427 -
           ((C111668 + C111669) * C6340 + (C110943 + C110942) * C6339 +
            C110889 * C6338) *
               C152457 * C2428 +
           (C110946 * C6338 + (C110945 + C110944) * C6339 +
            (C100534 * C8191 - C100535 * C8181 - C100534 * C8192 +
             C100532 * C8199 + C100536 * C61859 - C100537 * C61858 -
             C100536 * C61860 + C152775 * C61861) *
                C6340) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
           C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
           C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
           C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
           C117460 * C2690) *
              C152696 * C152457 * C152530 * C152512 * C129 -
          (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
           C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
           C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
           C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
           C117457 * C161) *
              C152696 * C152457 * C152530 * C152512 * C130 +
          (C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
           C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
           C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
           C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
           C117460 * C2688) *
              C152696 * C152457 * C152530 * C152512 * C131 -
          (C117467 * C2671 - C117468 * C2663 - C117467 * C2672 +
           C117460 * C2687 + C117465 * C655 - C117466 * C636 - C117465 * C656 +
           C117459 * C672 + C117463 * C641 - C117464 * C629 - C117463 * C642 +
           C117458 * C665 + C117461 * C150 - C117462 * C139 - C117461 * C151 +
           C117457 * C163) *
              C152696 * C152457 * C152530 * C152512 * C132 +
          (C117461 * C152 - C117462 * C140 - C117461 * C153 + C117457 * C164 +
           C117463 * C657 - C117464 * C637 - C117463 * C658 + C117458 * C673 +
           C117465 * C659 - C117466 * C638 - C117465 * C660 + C117459 * C674 +
           C117467 * C3052 - C117468 * C3051 - C117467 * C3053 +
           C117460 * C3054) *
              C152696 * C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152530 * C152917 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C152530 * C152901 +
           (C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
            C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
            C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
            C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
            C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
               C152696 * C152457 * C152530 * C152870) *
              C365 +
          ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
            C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
            C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
            C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
            C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
               C152696 * C152457 * C152530 * C152901 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C152530 * C152917 -
           (C117467 * C9514 - C117468 * C9508 - C117467 * C9515 +
            C117460 * C9526 + C117465 * C1731 - C117466 * C1710 -
            C117465 * C1732 + C117459 * C1746 + C117463 * C1725 -
            C117464 * C1707 - C117463 * C1726 + C117458 * C1743 +
            C117461 * C390 - C117462 * C373 - C117461 * C391 + C117457 * C409) *
               C152696 * C152457 * C152530 * C152870) *
              C366 +
          ((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
            C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
            C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
            C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
            C117460 * C2688) *
               C152696 * C152457 * C152530 * C152917 -
           (C117467 * C3217 - C117468 * C3211 - C117467 * C3218 +
            C117460 * C3223 + C117465 * C1715 - C117466 * C1702 -
            C117465 * C1716 + C117459 * C1738 + C117463 * C1237 -
            C117464 * C1229 - C117463 * C1238 + C117458 * C1247 +
            C117461 * C382 - C117462 * C369 - C117461 * C383 + C117457 * C405) *
               C152696 * C152457 * C152530 * C152901 +
           (C117461 * C392 - C117462 * C374 - C117461 * C393 + C117457 * C410 +
            C117463 * C1723 - C117464 * C1706 - C117463 * C1724 +
            C117458 * C1742 + C117465 * C1733 - C117466 * C1711 -
            C117465 * C1734 + C117459 * C1747 + C117467 * C10024 -
            C117468 * C10023 - C117467 * C10025 + C117460 * C10026) *
               C152696 * C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152530 * C1429 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C152530 * C1430 +
           (C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
            C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
            C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
            C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
            C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
               C152696 * C152457 * C152530 * C152870) *
              C152914 +
          ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
            C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
            C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
            C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
            C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
               C152696 * C152457 * C152530 * C1430 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C152530 * C1429 -
           (C117467 * C9514 - C117468 * C9508 - C117467 * C9515 +
            C117460 * C9526 + C117465 * C1731 - C117466 * C1710 -
            C117465 * C1732 + C117459 * C1746 + C117463 * C1725 -
            C117464 * C1707 - C117463 * C1726 + C117458 * C1743 +
            C117461 * C390 - C117462 * C373 - C117461 * C391 + C117457 * C409) *
               C152696 * C152457 * C152530 * C152870) *
              C152897 +
          ((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
            C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
            C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
            C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
            C117460 * C2688) *
               C152696 * C152457 * C152530 * C1429 -
           (C117467 * C3217 - C117468 * C3211 - C117467 * C3218 +
            C117460 * C3223 + C117465 * C1715 - C117466 * C1702 -
            C117465 * C1716 + C117459 * C1738 + C117463 * C1237 -
            C117464 * C1229 - C117463 * C1238 + C117458 * C1247 +
            C117461 * C382 - C117462 * C369 - C117461 * C383 + C117457 * C405) *
               C152696 * C152457 * C152530 * C1430 +
           (C117461 * C392 - C117462 * C374 - C117461 * C393 + C117457 * C410 +
            C117463 * C1723 - C117464 * C1706 - C117463 * C1724 +
            C117458 * C1742 + C117465 * C1733 - C117466 * C1711 -
            C117465 * C1734 + C117459 * C1747 + C117467 * C10024 -
            C117468 * C10023 - C117467 * C10025 + C117460 * C10026) *
               C152696 * C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
           C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
           C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
           C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
           C117460 * C2690) *
              C152696 * C152457 * C152530 * C1517 -
          (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
           C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
           C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
           C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
           C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
              C152696 * C152457 * C152530 * C1518 +
          (C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
           C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
           C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
           C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
           C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
              C152696 * C152457 * C152530 * C1519 -
          (C117467 * C10240 - C117468 * C10238 - C117467 * C10241 +
           C117460 * C10244 + C117465 * C8185 - C117466 * C8178 -
           C117465 * C8186 + C117459 * C8196 + C117463 * C2269 -
           C117464 * C2265 - C117463 * C2270 + C117458 * C2277 +
           C117461 * C1537 - C117462 * C1526 - C117461 * C1538 +
           C117457 * C1550) *
              C152696 * C152457 * C152530 * C1520 +
          (C117461 * C1539 - C117462 * C1527 - C117461 * C1540 +
           C117457 * C1551 + C117463 * C8189 - C117464 * C8180 -
           C117463 * C8190 + C117458 * C8198 + C117465 * C8191 -
           C117466 * C8181 - C117465 * C8192 + C117459 * C8199 +
           C117467 * C61859 - C117468 * C61858 - C117467 * C61860 +
           C117460 * C61861) *
              C152696 * C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C2427 -
           (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
            C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
            C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
            C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
            C117462 * C632 - C117461 * C648 + C117457 * C668) *
               C152696 * C152457 * C2428 +
           (C117461 * C649 - C117462 * C633 - C117461 * C650 + C117457 * C669 +
            C117463 * C2677 - C117464 * C2666 - C117463 * C2678 +
            C117458 * C2690 + C117465 * C2679 - C117466 * C2667 -
            C117465 * C2680 + C117459 * C2691 + C117467 * C18111 -
            C117468 * C18106 - C117467 * C18112 + C117460 * C18118) *
               C152696 * C152457 * C152873) *
              C152512 * C152914 +
          ((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
            C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
            C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
            C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
            C117467 * C2682 + C117460 * C2692) *
               C152696 * C152457 * C2428 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C2427 -
           (C117467 * C18109 - C117468 * C18105 - C117467 * C18110 +
            C117460 * C18117 + C117465 * C2681 - C117466 * C2668 -
            C117465 * C2682 + C117459 * C2692 + C117463 * C2675 -
            C117464 * C2665 - C117463 * C2676 + C117458 * C2689 +
            C117461 * C651 - C117462 * C634 - C117461 * C652 + C117457 * C670) *
               C152696 * C152457 * C152873) *
              C152512 * C152897 +
          ((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
            C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
            C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
            C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
            C117460 * C2688) *
               C152696 * C152457 * C2427 -
           (C117467 * C2683 - C117468 * C2669 - C117467 * C2684 +
            C117460 * C2693 + C117465 * C2673 - C117466 * C2664 -
            C117465 * C2674 + C117459 * C2688 + C117463 * C653 -
            C117464 * C635 - C117463 * C654 + C117458 * C671 + C117461 * C643 -
            C117462 * C630 - C117461 * C644 + C117457 * C666) *
               C152696 * C152457 * C2428 +
           (C117461 * C653 - C117462 * C635 - C117461 * C654 + C117457 * C671 +
            C117463 * C2673 - C117464 * C2664 - C117463 * C2674 +
            C117458 * C2688 + C117465 * C2683 - C117466 * C2669 -
            C117465 * C2684 + C117459 * C2693 + C117467 * C18631 -
            C117468 * C18630 - C117467 * C18632 + C117460 * C18633) *
               C152696 * C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C2427 -
           (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
            C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
            C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
            C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
            C117462 * C632 - C117461 * C648 + C117457 * C668) *
               C152696 * C152457 * C2428 +
           (C117461 * C649 - C117462 * C633 - C117461 * C650 + C117457 * C669 +
            C117463 * C2677 - C117464 * C2666 - C117463 * C2678 +
            C117458 * C2690 + C117465 * C2679 - C117466 * C2667 -
            C117465 * C2680 + C117459 * C2691 + C117467 * C18111 -
            C117468 * C18106 - C117467 * C18112 + C117460 * C18118) *
               C152696 * C152457 * C152873) *
              C152917 +
          ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
            C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
            C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
            C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
            C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
            C117460 * C9528) *
               C152696 * C152457 * C2428 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C2427 -
           (C117467 * C18851 - C117468 * C18849 - C117467 * C18852 +
            C117460 * C18855 + C117465 * C9518 - C117466 * C9510 -
            C117465 * C9519 + C117459 * C9528 + C117463 * C3213 -
            C117464 * C3209 - C117463 * C3214 + C117458 * C3221 +
            C117461 * C1719 - C117462 * C1704 - C117461 * C1720 +
            C117457 * C1740) *
               C152696 * C152457 * C152873) *
              C152901 +
          ((C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
            C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
            C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
            C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
            C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
               C152696 * C152457 * C2427 -
           (C117467 * C9520 - C117468 * C9511 - C117467 * C9521 +
            C117460 * C9529 + C117465 * C9516 - C117466 * C9509 -
            C117465 * C9517 + C117459 * C9527 + C117463 * C1729 -
            C117464 * C1709 - C117463 * C1730 + C117458 * C1745 +
            C117461 * C1727 - C117462 * C1708 - C117461 * C1728 +
            C117457 * C1744) *
               C152696 * C152457 * C2428 +
           (C117461 * C1729 - C117462 * C1709 - C117461 * C1730 +
            C117457 * C1745 + C117463 * C9516 - C117464 * C9509 -
            C117463 * C9517 + C117458 * C9527 + C117465 * C9520 -
            C117466 * C9511 - C117465 * C9521 + C117459 * C9529 +
            C117467 * C68735 - C117468 * C68734 - C117467 * C68736 +
            C117460 * C68737) *
               C152696 * C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[315] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C4361 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152617) *
               C152828 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             C111655 * C6340) *
                C152457 * C152617 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C4361) *
               C152575) *
              C152489 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C152617 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C4361) *
               C152828 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C4361 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C152617) *
               C152575) *
              C152498 +
          (((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
                C152457 * C4361 -
            ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
             C101223 * C6338) *
                C152457 * C152617) *
               C152828 +
           ((C101979 * C6338 + (C103076 + C103075) * C6339 +
             (C100534 * C2273 - C100535 * C2267 - C100534 * C2274 +
              C100532 * C2279 + C100536 * C9823 - C100537 * C9822 -
              C100536 * C9824 + C152775 * C9825) *
                 C6340) *
                C152457 * C152617 -
            ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
             C100917 * C6338) *
                C152457 * C4361) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C4361 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C152617) *
               C152828 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C152617 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C4361) *
               C152575) *
              C152489 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C152617 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C4361) *
               C152828 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C4361 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C152617) *
               C152575) *
              C152498 +
          (((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
             C100614 * C51247) *
                C4361 -
            ((C101645 + C101646) * C152696 * C51247 +
             (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
                C152617) *
               C152828 +
           ((C101980 * C51245 + (C101978 + C101977) * C152696 * C51246 +
             (C100534 * C1241 - C100535 * C1231 - C100534 * C1242 +
              C100532 * C1249 + C100536 * C2890 - C100537 * C2889 -
              C100536 * C2891 + C152775 * C2892) *
                 C152696 * C51247) *
                C152617 -
            ((C101435 + C101436) * C152696 * C51247 +
             (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
                C4361) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
             C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
             C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
             C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
             C117460 * C2690) *
                C152696 * C152457 * C4361 -
            (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
             C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
             C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
             C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
             C117462 * C632 - C117461 * C648 + C117457 * C668) *
                C152696 * C152457 * C152617) *
               C152828 +
           ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
             C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
             C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
             C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
             C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
             C117460 * C9528) *
                C152696 * C152457 * C152617 -
            (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
             C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
             C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
             C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
             C117461 * C386 - C117462 * C371 - C117461 * C387 +
             C117457 * C407) *
                C152696 * C152457 * C4361) *
               C152575) *
              C152489 +
          (((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
             C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
             C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
             C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
             C117467 * C2682 + C117460 * C2692) *
                C152696 * C152457 * C152617 -
            (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
             C117460 * C2689 + C117465 * C651 - C117466 * C634 -
             C117465 * C652 + C117459 * C670 + C117463 * C645 - C117464 * C631 -
             C117463 * C646 + C117458 * C667 + C117461 * C146 - C117462 * C137 -
             C117461 * C147 + C117457 * C161) *
                C152696 * C152457 * C4361) *
               C152828 +
           ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
             C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
             C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
             C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
             C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
                C152696 * C152457 * C4361 -
            (C117467 * C9522 - C117468 * C9512 - C117467 * C9523 +
             C117460 * C9530 + C117465 * C3215 - C117466 * C3210 -
             C117465 * C3216 + C117459 * C3222 + C117463 * C1717 -
             C117464 * C1703 - C117463 * C1718 + C117458 * C1739 +
             C117461 * C1235 - C117462 * C1228 - C117461 * C1236 +
             C117457 * C1246) *
                C152696 * C152457 * C152617) *
               C152575) *
              C152498 +
          (((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
             C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
             C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
             C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
             C117460 * C2688) *
                C152696 * C152457 * C4361 -
            (C117467 * C2683 - C117468 * C2669 - C117467 * C2684 +
             C117460 * C2693 + C117465 * C2673 - C117466 * C2664 -
             C117465 * C2674 + C117459 * C2688 + C117463 * C653 -
             C117464 * C635 - C117463 * C654 + C117458 * C671 + C117461 * C643 -
             C117462 * C630 - C117461 * C644 + C117457 * C666) *
                C152696 * C152457 * C152617) *
               C152828 +
           ((C117461 * C1237 - C117462 * C1229 - C117461 * C1238 +
             C117457 * C1247 + C117463 * C1715 - C117464 * C1702 -
             C117463 * C1716 + C117458 * C1738 + C117465 * C3217 -
             C117466 * C3211 - C117465 * C3218 + C117459 * C3223 +
             C117467 * C18412 - C117468 * C18411 - C117467 * C18413 +
             C117460 * C18414) *
                C152696 * C152457 * C152617 -
            (C117467 * C3217 - C117468 * C3211 - C117467 * C3218 +
             C117460 * C3223 + C117465 * C1715 - C117466 * C1702 -
             C117465 * C1716 + C117459 * C1738 + C117463 * C1237 -
             C117464 * C1229 - C117463 * C1238 + C117458 * C1247 +
             C117461 * C382 - C117462 * C369 - C117461 * C383 +
             C117457 * C405) *
                C152696 * C152457 * C4361) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q));
    d2ee[316] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C152613 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152620 +
            ((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C6338 +
             (C110938 + C110939) * C6339 + C110946 * C6340) *
                C152457 * C5033) *
               C152828 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             C111655 * C6340) *
                C152457 * C152620 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C152613 -
            ((C110944 + C110945) * C6340 + (C110941 + C110940) * C6339 +
             (C110939 + C110938) * C6338) *
                C152457 * C5033) *
               C152575) *
              C3495 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C152620 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C152613 -
            ((C112530 + C112531) * C6340 + (C104147 + C104148) * C6339 +
             (C101216 + C101215) * C6338) *
                C152457 * C5033) *
               C152828 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C152613 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C152620 +
            ((C104148 + C104147) * C6338 + (C112531 + C112530) * C6339 +
             (C100534 * C8183 - C100535 * C8177 - C100534 * C8184 +
              C100532 * C8195 + C100536 * C10242 - C100537 * C10239 -
              C100536 * C10243 + C152775 * C10245) *
                 C6340) *
                C152457 * C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C152613 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C152620 +
            ((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C152696 * C51245 +
             (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
                C5033) *
               C152828 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C152620 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C152613 -
            ((C104145 + C104146) * C152696 * C51247 +
             (C104147 + C104148) * C152696 * C51246 +
             (C100536 * C3213 - C100537 * C3209 - C100536 * C3214 +
              C152775 * C3221 + C100534 * C1719 - C100535 * C1704 -
              C100534 * C1720 + C100532 * C1740) *
                 C152696 * C51245) *
                C5033) *
               C152575) *
              C3495 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C152620 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C152613 -
            ((C101221 + C101222) * C152696 * C51247 +
             (C101218 + C101217) * C152696 * C51246 +
             (C101216 + C101215) * C152696 * C51245) *
                C5033) *
               C152828 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C152613 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C152620 +
            ((C104148 + C104147) * C152696 * C51245 +
             (C104146 + C104145) * C152696 * C51246 +
             (C100534 * C1713 - C100535 * C1701 - C100534 * C1714 +
              C100532 * C1737 + C100536 * C3219 - C100537 * C3212 -
              C100536 * C3220 + C152775 * C3224) *
                 C152696 * C51247) *
                C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
             C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
             C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
             C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
             C117460 * C2690) *
                C152696 * C152457 * C152613 -
            (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
             C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
             C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
             C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
             C117462 * C632 - C117461 * C648 + C117457 * C668) *
                C152696 * C152457 * C152620 +
            (C117461 * C649 - C117462 * C633 - C117461 * C650 + C117457 * C669 +
             C117463 * C2677 - C117464 * C2666 - C117463 * C2678 +
             C117458 * C2690 + C117465 * C2679 - C117466 * C2667 -
             C117465 * C2680 + C117459 * C2691 + C117467 * C18111 -
             C117468 * C18106 - C117467 * C18112 + C117460 * C18118) *
                C152696 * C152457 * C5033) *
               C152828 +
           ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
             C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
             C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
             C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
             C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
             C117460 * C9528) *
                C152696 * C152457 * C152620 -
            (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
             C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
             C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
             C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
             C117461 * C386 - C117462 * C371 - C117461 * C387 +
             C117457 * C407) *
                C152696 * C152457 * C152613 -
            (C117467 * C18851 - C117468 * C18849 - C117467 * C18852 +
             C117460 * C18855 + C117465 * C9518 - C117466 * C9510 -
             C117465 * C9519 + C117459 * C9528 + C117463 * C3213 -
             C117464 * C3209 - C117463 * C3214 + C117458 * C3221 +
             C117461 * C1719 - C117462 * C1704 - C117461 * C1720 +
             C117457 * C1740) *
                C152696 * C152457 * C5033) *
               C152575) *
              C3495 +
          (((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
             C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
             C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
             C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
             C117467 * C2682 + C117460 * C2692) *
                C152696 * C152457 * C152620 -
            (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
             C117460 * C2689 + C117465 * C651 - C117466 * C634 -
             C117465 * C652 + C117459 * C670 + C117463 * C645 - C117464 * C631 -
             C117463 * C646 + C117458 * C667 + C117461 * C146 - C117462 * C137 -
             C117461 * C147 + C117457 * C161) *
                C152696 * C152457 * C152613 -
            (C117467 * C18109 - C117468 * C18105 - C117467 * C18110 +
             C117460 * C18117 + C117465 * C2681 - C117466 * C2668 -
             C117465 * C2682 + C117459 * C2692 + C117463 * C2675 -
             C117464 * C2665 - C117463 * C2676 + C117458 * C2689 +
             C117461 * C651 - C117462 * C634 - C117461 * C652 +
             C117457 * C670) *
                C152696 * C152457 * C5033) *
               C152828 +
           ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
             C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
             C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
             C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
             C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
                C152696 * C152457 * C152613 -
            (C117467 * C9522 - C117468 * C9512 - C117467 * C9523 +
             C117460 * C9530 + C117465 * C3215 - C117466 * C3210 -
             C117465 * C3216 + C117459 * C3222 + C117463 * C1717 -
             C117464 * C1703 - C117463 * C1718 + C117458 * C1739 +
             C117461 * C1235 - C117462 * C1228 - C117461 * C1236 +
             C117457 * C1246) *
                C152696 * C152457 * C152620 +
            (C117461 * C1717 - C117462 * C1703 - C117461 * C1718 +
             C117457 * C1739 + C117463 * C3215 - C117464 * C3210 -
             C117463 * C3216 + C117458 * C3222 + C117465 * C9522 -
             C117466 * C9512 - C117465 * C9523 + C117459 * C9530 +
             C117467 * C18853 - C117468 * C18850 - C117467 * C18854 +
             C117460 * C18856) *
                C152696 * C152457 * C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[317] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
                 C100532 * C160 + C100536 * C647 - C100537 * C632 -
                 C100536 * C648 + C152775 * C668) *
                    C152696 * C51245 +
                (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                   C4361 -
               (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
                (C100536 * C649 - C100537 * C633 - C100536 * C650 +
                 C152775 * C669 + C100534 * C647 - C100535 * C632 -
                 C100534 * C648 + C100532 * C668) *
                    C152696 * C51245) *
                   C152617) *
                  C152512 * C152923 +
              (((C101214 + C101213) * C152696 * C51245 +
                (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                   C152617 -
               (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
                (C100600 + C100599) * C152696 * C51245) *
                   C4361) *
                  C152512 * C152916 +
              ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
                C100614 * C51247) *
                   C4361 -
               ((C101645 + C101646) * C152696 * C51247 +
                (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
                   C152617) *
                  C152512 * C152899 +
              ((C101640 * C51245 + (C101646 + C101645) * C152696 * C51246 +
                (C100534 * C661 - C100535 * C639 - C100534 * C662 +
                 C100532 * C675 + C100536 * C663 - C100537 * C640 -
                 C100536 * C664 + C152775 * C676) *
                    C152696 * C51247) *
                   C152617 -
               ((C100607 + C100608) * C152696 * C51247 +
                (C100606 + C100605) * C152696 * C51246 + C100613 * C51245) *
                   C4361) *
                  C152512 * C152874) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
                  C100532 * C160 + C100536 * C647 - C100537 * C632 -
                  C100536 * C648 + C152775 * C668) *
                     C152696 * C51245 +
                 (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                    C4361 -
                (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
                 (C100536 * C649 - C100537 * C633 - C100536 * C650 +
                  C152775 * C669 + C100534 * C647 - C100535 * C632 -
                  C100534 * C648 + C100532 * C668) *
                     C152696 * C51245) *
                    C152617) *
                   C152917 +
               (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
                  C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
                  C100536 * C1720 + C152775 * C1740) *
                     C152696 * C51245 +
                 (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                    C152617 -
                (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
                 (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
                  C152775 * C1245 + C100534 * C386 - C100535 * C371 -
                  C100534 * C387 + C100532 * C407) *
                     C152696 * C51245) *
                    C4361) *
                   C152901 +
               (((C100534 * C388 - C100535 * C372 - C100534 * C389 +
                  C100532 * C408 + C100536 * C1727 - C100537 * C1708 -
                  C100536 * C1728 + C152775 * C1744) *
                     C152696 * C51245 +
                 (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
                    C4361 -
                ((C103075 + C103076) * C152696 * C51247 +
                 (C103077 + C103078) * C152696 * C51246 +
                 (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
                  C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
                  C100534 * C1728 + C100532 * C1744) *
                     C152696 * C51245) *
                    C152617) *
                   C152870) *
                  C3495 +
              ((((C101214 + C101213) * C152696 * C51245 +
                 (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                    C152617 -
                (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
                 (C100600 + C100599) * C152696 * C51245) *
                    C4361) *
                   C152917 +
               (((C100908 + C100907) * C152696 * C51245 +
                 (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                    C4361 -
                ((C101977 + C101978) * C152696 * C51247 +
                 (C101976 + C101975) * C152696 * C51246 +
                 (C101974 + C101973) * C152696 * C51245) *
                    C152617) *
                   C152901 +
               (((C103078 + C103077) * C152696 * C51245 +
                 (C103076 + C103075) * C152696 * C51246 +
                 (C100534 * C1721 - C100535 * C1705 - C100534 * C1722 +
                  C100532 * C1741 + C100536 * C1735 - C100537 * C1712 -
                  C100536 * C1736 + C152775 * C1748) *
                     C152696 * C51247) *
                    C152617 -
                ((C100915 + C100916) * C152696 * C51247 +
                 (C100912 + C100911) * C152696 * C51246 +
                 (C100910 + C100909) * C152696 * C51245) *
                    C4361) *
                   C152870) *
                  C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152925 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C152922 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C152696 * C51245 +
            (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
               C152909 -
           ((C104367 + C104368) * C152696 * C51247 +
            (C104369 + C104370) * C152696 * C51246 +
            (C100536 * C2679 - C100537 * C2667 - C100536 * C2680 +
             C152775 * C2691 + C100534 * C2677 - C100535 * C2666 -
             C100534 * C2678 + C100532 * C2690) *
                C152696 * C51245) *
               C152886) *
              C152512 * C3495 +
          (((C101214 + C101213) * C152696 * C51245 +
            (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
               C152922 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152925 -
           ((C101221 + C101222) * C152696 * C51247 +
            (C101218 + C101217) * C152696 * C51246 +
            (C101216 + C101215) * C152696 * C51245) *
               C152909 +
           ((C104370 + C104369) * C152696 * C51245 +
            (C104368 + C104367) * C152696 * C51246 +
            (C100534 * C2671 - C100535 * C2663 - C100534 * C2672 +
             C100532 * C2687 + C100536 * C2685 - C100537 * C2670 -
             C100536 * C2686 + C152775 * C2694) *
                C152696 * C51247) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C4361 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152617) *
              C152512 * C152923 +
          (((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
            C111446 * C6340) *
               C152457 * C152617 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C4361) *
              C152512 * C152916 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C4361 -
           ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
            C101223 * C6338) *
               C152457 * C152617) *
              C152512 * C152899 +
          ((C101631 * C6338 + (C101978 + C101977) * C6339 +
            (C100534 * C1721 - C100535 * C1705 - C100534 * C1722 +
             C100532 * C1741 + C100536 * C1735 - C100537 * C1712 -
             C100536 * C1736 + C152775 * C1748) *
                C6340) *
               C152457 * C152617 -
           ((C100915 + C100916) * C6340 + (C100914 + C100913) * C6339 +
            C100610 * C6338) *
               C152457 * C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C4361 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152617) *
               C152917 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             C111655 * C6340) *
                C152457 * C152617 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C4361) *
               C152901 +
           ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
                C152457 * C4361 -
            ((C111668 + C111669) * C6340 + (C110943 + C110942) * C6339 +
             C110889 * C6338) *
                C152457 * C152617) *
               C152870) *
              C3495 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C152617 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C4361) *
               C152917 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C4361 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C152617) *
               C152901 +
           ((C111446 * C6338 + (C111460 + C111459) * C6339 +
             (C100534 * C8187 - C100535 * C8179 - C100534 * C8188 +
              C100532 * C8197 + C100536 * C8193 - C100537 * C8182 -
              C100536 * C8194 + C152775 * C8200) *
                 C6340) *
                C152457 * C152617 -
            ((C111154 + C111155) * C6340 + (C102759 + C102760) * C6339 +
             C109357 * C6338) *
                C152457 * C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152925 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152922 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C110938 + C110939) * C6339 + C110946 * C6340) *
               C152457 * C152909 -
           ((C112944 + C112945) * C6340 + (C112946 + C112947) * C6339 +
            (C100536 * C2679 - C100537 * C2667 - C100536 * C2680 +
             C152775 * C2691 + C100534 * C2677 - C100535 * C2666 -
             C100534 * C2678 + C100532 * C2690) *
                C6338) *
               C152457 * C152886) *
              C152512 * C3495 +
          (((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
            C111446 * C6340) *
               C152457 * C152922 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152925 -
           ((C112530 + C112531) * C6340 + (C104147 + C104148) * C6339 +
            (C101216 + C101215) * C6338) *
               C152457 * C152909 +
           ((C104370 + C104369) * C6338 +
            (C100534 * C3215 - C100535 * C3210 - C100534 * C3216 +
             C100532 * C3222 + C100536 * C9522 - C100537 * C9512 -
             C100536 * C9523 + C152775 * C9530) *
                C6339 +
            (C100534 * C9514 - C100535 * C9508 - C100534 * C9515 +
             C100532 * C9526 + C100536 * C9524 - C100537 * C9513 -
             C100536 * C9525 + C152775 * C9531) *
                C6340) *
               C152457 * C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C4361 -
           (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
            C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
            C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
            C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
            C117462 * C632 - C117461 * C648 + C117457 * C668) *
               C152696 * C152457 * C152617) *
              C152512 * C152923 +
          ((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
            C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
            C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
            C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
            C117467 * C2682 + C117460 * C2692) *
               C152696 * C152457 * C152617 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C4361) *
              C152512 * C152916 +
          ((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
            C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
            C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
            C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
            C117460 * C2688) *
               C152696 * C152457 * C4361 -
           (C117467 * C2683 - C117468 * C2669 - C117467 * C2684 +
            C117460 * C2693 + C117465 * C2673 - C117466 * C2664 -
            C117465 * C2674 + C117459 * C2688 + C117463 * C653 -
            C117464 * C635 - C117463 * C654 + C117458 * C671 + C117461 * C643 -
            C117462 * C630 - C117461 * C644 + C117457 * C666) *
               C152696 * C152457 * C152617) *
              C152512 * C152899 +
          ((C117461 * C641 - C117462 * C629 - C117461 * C642 + C117457 * C665 +
            C117463 * C655 - C117464 * C636 - C117463 * C656 + C117458 * C672 +
            C117465 * C2671 - C117466 * C2663 - C117465 * C2672 +
            C117459 * C2687 + C117467 * C2685 - C117468 * C2670 -
            C117467 * C2686 + C117460 * C2694) *
               C152696 * C152457 * C152617 -
           (C117467 * C2671 - C117468 * C2663 - C117467 * C2672 +
            C117460 * C2687 + C117465 * C655 - C117466 * C636 - C117465 * C656 +
            C117459 * C672 + C117463 * C641 - C117464 * C629 - C117463 * C642 +
            C117458 * C665 + C117461 * C150 - C117462 * C139 - C117461 * C151 +
            C117457 * C163) *
               C152696 * C152457 * C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
             C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
             C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
             C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
             C117460 * C2690) *
                C152696 * C152457 * C4361 -
            (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
             C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
             C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
             C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
             C117462 * C632 - C117461 * C648 + C117457 * C668) *
                C152696 * C152457 * C152617) *
               C152917 +
           ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
             C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
             C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
             C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
             C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
             C117460 * C9528) *
                C152696 * C152457 * C152617 -
            (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
             C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
             C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
             C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
             C117461 * C386 - C117462 * C371 - C117461 * C387 +
             C117457 * C407) *
                C152696 * C152457 * C4361) *
               C152901 +
           ((C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
             C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
             C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
             C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
             C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
                C152696 * C152457 * C4361 -
            (C117467 * C9520 - C117468 * C9511 - C117467 * C9521 +
             C117460 * C9529 + C117465 * C9516 - C117466 * C9509 -
             C117465 * C9517 + C117459 * C9527 + C117463 * C1729 -
             C117464 * C1709 - C117463 * C1730 + C117458 * C1745 +
             C117461 * C1727 - C117462 * C1708 - C117461 * C1728 +
             C117457 * C1744) *
                C152696 * C152457 * C152617) *
               C152870) *
              C3495 +
          (((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
             C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
             C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
             C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
             C117467 * C2682 + C117460 * C2692) *
                C152696 * C152457 * C152617 -
            (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
             C117460 * C2689 + C117465 * C651 - C117466 * C634 -
             C117465 * C652 + C117459 * C670 + C117463 * C645 - C117464 * C631 -
             C117463 * C646 + C117458 * C667 + C117461 * C146 - C117462 * C137 -
             C117461 * C147 + C117457 * C161) *
                C152696 * C152457 * C4361) *
               C152917 +
           ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
             C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
             C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
             C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
             C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
                C152696 * C152457 * C4361 -
            (C117467 * C9522 - C117468 * C9512 - C117467 * C9523 +
             C117460 * C9530 + C117465 * C3215 - C117466 * C3210 -
             C117465 * C3216 + C117459 * C3222 + C117463 * C1717 -
             C117464 * C1703 - C117463 * C1718 + C117458 * C1739 +
             C117461 * C1235 - C117462 * C1228 - C117461 * C1236 +
             C117457 * C1246) *
                C152696 * C152457 * C152617) *
               C152901 +
           ((C117461 * C1725 - C117462 * C1707 - C117461 * C1726 +
             C117457 * C1743 + C117463 * C1731 - C117464 * C1710 -
             C117463 * C1732 + C117458 * C1746 + C117465 * C9514 -
             C117466 * C9508 - C117465 * C9515 + C117459 * C9526 +
             C117467 * C9524 - C117468 * C9513 - C117467 * C9525 +
             C117460 * C9531) *
                C152696 * C152457 * C152617 -
            (C117467 * C9514 - C117468 * C9508 - C117467 * C9515 +
             C117460 * C9526 + C117465 * C1731 - C117466 * C1710 -
             C117465 * C1732 + C117459 * C1746 + C117463 * C1725 -
             C117464 * C1707 - C117463 * C1726 + C117458 * C1743 +
             C117461 * C390 - C117462 * C373 - C117461 * C391 +
             C117457 * C409) *
                C152696 * C152457 * C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152925 -
           (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
            C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
            C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
            C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
            C117462 * C632 - C117461 * C648 + C117457 * C668) *
               C152696 * C152457 * C152922 +
           (C117461 * C649 - C117462 * C633 - C117461 * C650 + C117457 * C669 +
            C117463 * C2677 - C117464 * C2666 - C117463 * C2678 +
            C117458 * C2690 + C117465 * C2679 - C117466 * C2667 -
            C117465 * C2680 + C117459 * C2691 + C117467 * C18111 -
            C117468 * C18106 - C117467 * C18112 + C117460 * C18118) *
               C152696 * C152457 * C152909 -
           (C117467 * C18113 - C117468 * C18107 - C117467 * C18114 +
            C117460 * C18119 + C117465 * C18111 - C117466 * C18106 -
            C117465 * C18112 + C117459 * C18118 + C117463 * C2679 -
            C117464 * C2667 - C117463 * C2680 + C117458 * C2691 +
            C117461 * C2677 - C117462 * C2666 - C117461 * C2678 +
            C117457 * C2690) *
               C152696 * C152457 * C152886) *
              C152512 * C3495 +
          ((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
            C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
            C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
            C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
            C117467 * C2682 + C117460 * C2692) *
               C152696 * C152457 * C152922 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C152925 -
           (C117467 * C18109 - C117468 * C18105 - C117467 * C18110 +
            C117460 * C18117 + C117465 * C2681 - C117466 * C2668 -
            C117465 * C2682 + C117459 * C2692 + C117463 * C2675 -
            C117464 * C2665 - C117463 * C2676 + C117458 * C2689 +
            C117461 * C651 - C117462 * C634 - C117461 * C652 + C117457 * C670) *
               C152696 * C152457 * C152909 +
           (C117461 * C2675 - C117462 * C2665 - C117461 * C2676 +
            C117457 * C2689 + C117463 * C2681 - C117464 * C2668 -
            C117463 * C2682 + C117458 * C2692 + C117465 * C18109 -
            C117466 * C18105 - C117465 * C18110 + C117459 * C18117 +
            C117467 * C18115 - C117468 * C18108 - C117467 * C18116 +
            C117460 * C18120) *
               C152696 * C152457 * C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[318] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152613 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152620 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C110938 + C110939) * C6339 + C110946 * C6340) *
               C152457 * C5033) *
              C152512 * C152489 +
          (((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
            C111446 * C6340) *
               C152457 * C152620 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152613 -
           ((C112530 + C112531) * C6340 + (C104147 + C104148) * C6339 +
            (C101216 + C101215) * C6338) *
               C152457 * C5033) *
              C152512 * C152498 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152613 -
           ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
            C101223 * C6338) *
               C152457 * C152620 +
           (C101224 * C6338 + (C104146 + C104145) * C6339 +
            (C100534 * C1733 - C100535 * C1711 - C100534 * C1734 +
             C100532 * C1747 + C100536 * C10024 - C100537 * C10023 -
             C100536 * C10025 + C152775 * C10026) *
                C6340) *
               C152457 * C5033) *
              C152512 * C3842)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152613 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C152620 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C152696 * C51245 +
            (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
               C5033) *
              C152512 * C152489 +
          (((C101214 + C101213) * C152696 * C51245 +
            (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
               C152620 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152613 -
           ((C101221 + C101222) * C152696 * C51247 +
            (C101218 + C101217) * C152696 * C51246 +
            (C101216 + C101215) * C152696 * C51245) *
               C5033) *
              C152512 * C152498 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152613 -
           ((C101645 + C101646) * C152696 * C51247 +
            (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
               C152620 +
           (C101226 * C51245 + (C101222 + C101221) * C152696 * C51246 +
            (C100534 * C659 - C100535 * C638 - C100534 * C660 + C100532 * C674 +
             C100536 * C3052 - C100537 * C3051 - C100536 * C3053 +
             C152775 * C3054) *
                C152696 * C51247) *
               C5033) *
              C152512 * C3842)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152613 -
           (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
            C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
            C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
            C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
            C117462 * C632 - C117461 * C648 + C117457 * C668) *
               C152696 * C152457 * C152620 +
           (C117461 * C649 - C117462 * C633 - C117461 * C650 + C117457 * C669 +
            C117463 * C2677 - C117464 * C2666 - C117463 * C2678 +
            C117458 * C2690 + C117465 * C2679 - C117466 * C2667 -
            C117465 * C2680 + C117459 * C2691 + C117467 * C18111 -
            C117468 * C18106 - C117467 * C18112 + C117460 * C18118) *
               C152696 * C152457 * C5033) *
              C152512 * C152489 +
          ((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
            C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
            C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
            C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
            C117467 * C2682 + C117460 * C2692) *
               C152696 * C152457 * C152620 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C152613 -
           (C117467 * C18109 - C117468 * C18105 - C117467 * C18110 +
            C117460 * C18117 + C117465 * C2681 - C117466 * C2668 -
            C117465 * C2682 + C117459 * C2692 + C117463 * C2675 -
            C117464 * C2665 - C117463 * C2676 + C117458 * C2689 +
            C117461 * C651 - C117462 * C634 - C117461 * C652 + C117457 * C670) *
               C152696 * C152457 * C5033) *
              C152512 * C152498 +
          ((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
            C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
            C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
            C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
            C117460 * C2688) *
               C152696 * C152457 * C152613 -
           (C117467 * C2683 - C117468 * C2669 - C117467 * C2684 +
            C117460 * C2693 + C117465 * C2673 - C117466 * C2664 -
            C117465 * C2674 + C117459 * C2688 + C117463 * C653 -
            C117464 * C635 - C117463 * C654 + C117458 * C671 + C117461 * C643 -
            C117462 * C630 - C117461 * C644 + C117457 * C666) *
               C152696 * C152457 * C152620 +
           (C117461 * C653 - C117462 * C635 - C117461 * C654 + C117457 * C671 +
            C117463 * C2673 - C117464 * C2664 - C117463 * C2674 +
            C117458 * C2688 + C117465 * C2683 - C117466 * C2669 -
            C117465 * C2684 + C117459 * C2693 + C117467 * C18631 -
            C117468 * C18630 - C117467 * C18632 + C117460 * C18633) *
               C152696 * C152457 * C5033) *
              C152512 * C3842)) /
            (p * q * std::sqrt(p + q));
    d2ee[319] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C4361 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C152617) *
               C152917 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C152617 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C4361) *
               C152901 +
           (((C100534 * C388 - C100535 * C372 - C100534 * C389 +
              C100532 * C408 + C100536 * C1727 - C100537 * C1708 -
              C100536 * C1728 + C152775 * C1744) *
                 C152696 * C51245 +
             (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
                C4361 -
            ((C103075 + C103076) * C152696 * C51247 +
             (C103077 + C103078) * C152696 * C51246 +
             (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
              C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
              C100534 * C1728 + C100532 * C1744) *
                 C152696 * C51245) *
                C152617) *
               C152870) *
              C3495 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C152617 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C4361) *
               C152917 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C4361 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C152617) *
               C152901 +
           (((C103078 + C103077) * C152696 * C51245 +
             (C103076 + C103075) * C152696 * C51246 +
             (C100534 * C1721 - C100535 * C1705 - C100534 * C1722 +
              C100532 * C1741 + C100536 * C1735 - C100537 * C1712 -
              C100536 * C1736 + C152775 * C1748) *
                 C152696 * C51247) *
                C152617 -
            ((C100915 + C100916) * C152696 * C51247 +
             (C100912 + C100911) * C152696 * C51246 +
             (C100910 + C100909) * C152696 * C51245) *
                C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C4361 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C152617) *
              C152512 * C152923 +
          (((C101214 + C101213) * C152696 * C51245 +
            (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
               C152617 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C4361) *
              C152512 * C152916 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C4361 -
           ((C101645 + C101646) * C152696 * C51247 +
            (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
               C152617) *
              C152512 * C152899 +
          ((C101640 * C51245 + (C101646 + C101645) * C152696 * C51246 +
            (C100534 * C661 - C100535 * C639 - C100534 * C662 + C100532 * C675 +
             C100536 * C663 - C100537 * C640 - C100536 * C664 +
             C152775 * C676) *
                C152696 * C51247) *
               C152617 -
           ((C100607 + C100608) * C152696 * C51247 +
            (C100606 + C100605) * C152696 * C51246 + C100613 * C51245) *
               C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C4361 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152617) *
              C152512 * C152923 +
          (((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
            C111446 * C6340) *
               C152457 * C152617 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C4361) *
              C152512 * C152916 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C4361 -
           ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
            C101223 * C6338) *
               C152457 * C152617) *
              C152512 * C152899 +
          ((C101631 * C6338 + (C101978 + C101977) * C6339 +
            (C100534 * C1721 - C100535 * C1705 - C100534 * C1722 +
             C100532 * C1741 + C100536 * C1735 - C100537 * C1712 -
             C100536 * C1736 + C152775 * C1748) *
                C6340) *
               C152457 * C152617 -
           ((C100915 + C100916) * C6340 + (C100914 + C100913) * C6339 +
            C100610 * C6338) *
               C152457 * C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C4361 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152617) *
               C152917 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             C111655 * C6340) *
                C152457 * C152617 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C4361) *
               C152901 +
           ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
                C152457 * C4361 -
            ((C111668 + C111669) * C6340 + (C110943 + C110942) * C6339 +
             C110889 * C6338) *
                C152457 * C152617) *
               C152870) *
              C3495 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C152617 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C4361) *
               C152917 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C4361 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C152617) *
               C152901 +
           ((C111446 * C6338 + (C111460 + C111459) * C6339 +
             (C100534 * C8187 - C100535 * C8179 - C100534 * C8188 +
              C100532 * C8197 + C100536 * C8193 - C100537 * C8182 -
              C100536 * C8194 + C152775 * C8200) *
                 C6340) *
                C152457 * C152617 -
            ((C111154 + C111155) * C6340 + (C102759 + C102760) * C6339 +
             C109357 * C6338) *
                C152457 * C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C4361 -
           (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
            C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
            C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
            C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
            C117462 * C632 - C117461 * C648 + C117457 * C668) *
               C152696 * C152457 * C152617) *
              C152512 * C152923 +
          ((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
            C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
            C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
            C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
            C117467 * C2682 + C117460 * C2692) *
               C152696 * C152457 * C152617 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C4361) *
              C152512 * C152916 +
          ((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
            C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
            C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
            C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
            C117460 * C2688) *
               C152696 * C152457 * C4361 -
           (C117467 * C2683 - C117468 * C2669 - C117467 * C2684 +
            C117460 * C2693 + C117465 * C2673 - C117466 * C2664 -
            C117465 * C2674 + C117459 * C2688 + C117463 * C653 -
            C117464 * C635 - C117463 * C654 + C117458 * C671 + C117461 * C643 -
            C117462 * C630 - C117461 * C644 + C117457 * C666) *
               C152696 * C152457 * C152617) *
              C152512 * C152899 +
          ((C117461 * C641 - C117462 * C629 - C117461 * C642 + C117457 * C665 +
            C117463 * C655 - C117464 * C636 - C117463 * C656 + C117458 * C672 +
            C117465 * C2671 - C117466 * C2663 - C117465 * C2672 +
            C117459 * C2687 + C117467 * C2685 - C117468 * C2670 -
            C117467 * C2686 + C117460 * C2694) *
               C152696 * C152457 * C152617 -
           (C117467 * C2671 - C117468 * C2663 - C117467 * C2672 +
            C117460 * C2687 + C117465 * C655 - C117466 * C636 - C117465 * C656 +
            C117459 * C672 + C117463 * C641 - C117464 * C629 - C117463 * C642 +
            C117458 * C665 + C117461 * C150 - C117462 * C139 - C117461 * C151 +
            C117457 * C163) *
               C152696 * C152457 * C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
             C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
             C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
             C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
             C117460 * C2690) *
                C152696 * C152457 * C4361 -
            (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
             C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
             C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
             C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
             C117462 * C632 - C117461 * C648 + C117457 * C668) *
                C152696 * C152457 * C152617) *
               C152917 +
           ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
             C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
             C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
             C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
             C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
             C117460 * C9528) *
                C152696 * C152457 * C152617 -
            (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
             C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
             C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
             C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
             C117461 * C386 - C117462 * C371 - C117461 * C387 +
             C117457 * C407) *
                C152696 * C152457 * C4361) *
               C152901 +
           ((C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
             C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
             C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
             C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
             C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
                C152696 * C152457 * C4361 -
            (C117467 * C9520 - C117468 * C9511 - C117467 * C9521 +
             C117460 * C9529 + C117465 * C9516 - C117466 * C9509 -
             C117465 * C9517 + C117459 * C9527 + C117463 * C1729 -
             C117464 * C1709 - C117463 * C1730 + C117458 * C1745 +
             C117461 * C1727 - C117462 * C1708 - C117461 * C1728 +
             C117457 * C1744) *
                C152696 * C152457 * C152617) *
               C152870) *
              C3495 +
          (((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
             C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
             C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
             C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
             C117467 * C2682 + C117460 * C2692) *
                C152696 * C152457 * C152617 -
            (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
             C117460 * C2689 + C117465 * C651 - C117466 * C634 -
             C117465 * C652 + C117459 * C670 + C117463 * C645 - C117464 * C631 -
             C117463 * C646 + C117458 * C667 + C117461 * C146 - C117462 * C137 -
             C117461 * C147 + C117457 * C161) *
                C152696 * C152457 * C4361) *
               C152917 +
           ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
             C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
             C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
             C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
             C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
                C152696 * C152457 * C4361 -
            (C117467 * C9522 - C117468 * C9512 - C117467 * C9523 +
             C117460 * C9530 + C117465 * C3215 - C117466 * C3210 -
             C117465 * C3216 + C117459 * C3222 + C117463 * C1717 -
             C117464 * C1703 - C117463 * C1718 + C117458 * C1739 +
             C117461 * C1235 - C117462 * C1228 - C117461 * C1236 +
             C117457 * C1246) *
                C152696 * C152457 * C152617) *
               C152901 +
           ((C117461 * C1725 - C117462 * C1707 - C117461 * C1726 +
             C117457 * C1743 + C117463 * C1731 - C117464 * C1710 -
             C117463 * C1732 + C117458 * C1746 + C117465 * C9514 -
             C117466 * C9508 - C117465 * C9515 + C117459 * C9526 +
             C117467 * C9524 - C117468 * C9513 - C117467 * C9525 +
             C117460 * C9531) *
                C152696 * C152457 * C152617 -
            (C117467 * C9514 - C117468 * C9508 - C117467 * C9515 +
             C117460 * C9526 + C117465 * C1731 - C117466 * C1710 -
             C117465 * C1732 + C117459 * C1746 + C117463 * C1725 -
             C117464 * C1707 - C117463 * C1726 + C117458 * C1743 +
             C117461 * C390 - C117462 * C373 - C117461 * C391 +
             C117457 * C409) *
                C152696 * C152457 * C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[320] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152530 * C1879 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152530 * C1880 +
           ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152530 * C1881 -
           ((C102757 + C102758) * C152696 * C51247 +
            (C102759 + C102760) * C152696 * C51246 +
            (C100536 * C2269 - C100537 * C2265 - C100536 * C2270 +
             C152775 * C2277 + C100534 * C1537 - C100535 * C1526 -
             C100534 * C1538 + C100532 * C1550) *
                C152696 * C51245) *
               C152530 * C152880) *
              C152814 +
          (((C100908 + C100907) * C152696 * C51245 +
            (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
               C152530 * C1880 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152530 * C1879 -
           ((C100915 + C100916) * C152696 * C51247 +
            (C100912 + C100911) * C152696 * C51246 +
            (C100910 + C100909) * C152696 * C51245) *
               C152530 * C1881 +
           ((C102760 + C102759) * C152696 * C51245 +
            (C102758 + C102757) * C152696 * C51246 +
            (C100534 * C1531 - C100535 * C1523 - C100534 * C1532 +
             C100532 * C1547 + C100536 * C2275 - C100537 * C2268 -
             C100536 * C2276 + C152775 * C2280) *
                C152696 * C51247) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152530 * C152828 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152530 * C152575) *
              C873 +
          (((C100908 + C100907) * C152696 * C51245 +
            (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
               C152530 * C152575 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152530 * C152828) *
              C874 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152530 * C152828 -
           ((C101435 + C101436) * C152696 * C51247 +
            (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
               C152530 * C152575) *
              C875 +
          ((C101430 * C51245 + (C101436 + C101435) * C152696 * C51246 +
            (C100534 * C400 - C100535 * C378 - C100534 * C401 + C100532 * C414 +
             C100536 * C1243 - C100537 * C1232 - C100536 * C1244 +
             C152775 * C1250) *
                C152696 * C51247) *
               C152530 * C152575 -
           ((C100607 + C100608) * C152696 * C51247 +
            (C100606 + C100605) * C152696 * C51246 + C100613 * C51245) *
               C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C152828 -
           ((C109374 + C109375) * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C152575) *
              C873 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            (C102760 + C102759) * C6340) *
               C152457 * C152530 * C152575 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C152828) *
              C874 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152530 * C152828 -
           ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
            C100917 * C6338) *
               C152457 * C152530 * C152575) *
              C875 +
          ((C101421 * C6338 + (C100916 + C100915) * C6339 +
            (C100534 * C1531 - C100535 * C1523 - C100534 * C1532 +
             C100532 * C1547 + C100536 * C2275 - C100537 * C2268 -
             C100536 * C2276 + C152775 * C2280) *
                C6340) *
               C152457 * C152530 * C152575 -
           ((C100915 + C100916) * C6340 + (C100914 + C100913) * C6339 +
            C100610 * C6338) *
               C152457 * C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C1879 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C1880 +
           (C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C152530 * C1881 -
           ((C110668 + C110669) * C6340 + (C110667 + C110666) * C6339 +
            C110641 * C6338) *
               C152457 * C152530 * C152880) *
              C152814 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            C111141 * C6340) *
               C152457 * C152530 * C1880 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C1879 -
           ((C111154 + C111155) * C6340 + (C102759 + C102760) * C6339 +
            C109357 * C6338) *
               C152457 * C152530 * C1881 +
           (C111141 * C6338 + (C111155 + C111154) * C6339 +
            (C100534 * C7926 - C100535 * C7922 - C100534 * C7927 +
             C100532 * C7934 + C100536 * C8939 - C100537 * C8936 -
             C100536 * C8940 + C152775 * C8942) *
                C6340) *
               C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152530 * C152828 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C152530 * C152575) *
              C873 +
          ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
            C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
            C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
            C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
            C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
               C152696 * C152457 * C152530 * C152575 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C152530 * C152828) *
              C874 +
          ((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
            C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
            C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
            C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
            C117460 * C2688) *
               C152696 * C152457 * C152530 * C152828 -
           (C117467 * C3217 - C117468 * C3211 - C117467 * C3218 +
            C117460 * C3223 + C117465 * C1715 - C117466 * C1702 -
            C117465 * C1716 + C117459 * C1738 + C117463 * C1237 -
            C117464 * C1229 - C117463 * C1238 + C117458 * C1247 +
            C117461 * C382 - C117462 * C369 - C117461 * C383 + C117457 * C405) *
               C152696 * C152457 * C152530 * C152575) *
              C875 +
          ((C117461 * C380 - C117462 * C368 - C117461 * C381 + C117457 * C404 +
            C117463 * C1239 - C117464 * C1230 - C117463 * C1240 +
            C117458 * C1248 + C117465 * C1713 - C117466 * C1701 -
            C117465 * C1714 + C117459 * C1737 + C117467 * C3219 -
            C117468 * C3212 - C117467 * C3220 + C117460 * C3224) *
               C152696 * C152457 * C152530 * C152575 -
           (C117467 * C2671 - C117468 * C2663 - C117467 * C2672 +
            C117460 * C2687 + C117465 * C655 - C117466 * C636 - C117465 * C656 +
            C117459 * C672 + C117463 * C641 - C117464 * C629 - C117463 * C642 +
            C117458 * C665 + C117461 * C150 - C117462 * C139 - C117461 * C151 +
            C117457 * C163) *
               C152696 * C152457 * C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152530 * C1879 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C152530 * C1880 +
           (C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
            C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
            C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
            C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
            C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
               C152696 * C152457 * C152530 * C1881 -
           (C117467 * C10240 - C117468 * C10238 - C117467 * C10241 +
            C117460 * C10244 + C117465 * C8185 - C117466 * C8178 -
            C117465 * C8186 + C117459 * C8196 + C117463 * C2269 -
            C117464 * C2265 - C117463 * C2270 + C117458 * C2277 +
            C117461 * C1537 - C117462 * C1526 - C117461 * C1538 +
            C117457 * C1550) *
               C152696 * C152457 * C152530 * C152880) *
              C152814 +
          ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
            C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
            C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
            C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
            C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
               C152696 * C152457 * C152530 * C1880 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C152530 * C1879 -
           (C117467 * C9514 - C117468 * C9508 - C117467 * C9515 +
            C117460 * C9526 + C117465 * C1731 - C117466 * C1710 -
            C117465 * C1732 + C117459 * C1746 + C117463 * C1725 -
            C117464 * C1707 - C117463 * C1726 + C117458 * C1743 +
            C117461 * C390 - C117462 * C373 - C117461 * C391 + C117457 * C409) *
               C152696 * C152457 * C152530 * C1881 +
           (C117461 * C1535 - C117462 * C1525 - C117461 * C1536 +
            C117457 * C1549 + C117463 * C2271 - C117464 * C2266 -
            C117463 * C2272 + C117458 * C2278 + C117465 * C8183 -
            C117466 * C8177 - C117465 * C8184 + C117459 * C8195 +
            C117467 * C10242 - C117468 * C10239 - C117467 * C10243 +
            C117460 * C10245) *
               C152696 * C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[321] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152829 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C152617) *
              C1879 +
          (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
             C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
             C100536 * C1720 + C152775 * C1740) *
                C152696 * C51245 +
            (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
               C152617 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152829) *
              C1880 +
          (((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152829 -
           ((C103075 + C103076) * C152696 * C51247 +
            (C103077 + C103078) * C152696 * C51246 +
            (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
             C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
             C100534 * C1728 + C100532 * C1744) *
                C152696 * C51245) *
               C152617) *
              C1881 +
          (((C100534 * C2269 - C100535 * C2265 - C100534 * C2270 +
             C100532 * C2277 + C100536 * C8185 - C100537 * C8178 -
             C100536 * C8186 + C152775 * C8196) *
                C152696 * C51245 +
            (C100534 * C2271 - C100535 * C2266 - C100534 * C2272 +
             C100532 * C2278 + C100536 * C8183 - C100537 * C8177 -
             C100536 * C8184 + C152775 * C8195) *
                C152696 * C51246 +
            (C100534 * C2273 - C100535 * C2267 - C100534 * C2274 +
             C100532 * C2279 + C100536 * C9823 - C100537 * C9822 -
             C100536 * C9824 + C152775 * C9825) *
                C152696 * C51247) *
               C152617 -
           ((C102757 + C102758) * C152696 * C51247 +
            (C102759 + C102760) * C152696 * C51246 +
            (C100536 * C2269 - C100537 * C2265 - C100536 * C2270 +
             C152775 * C2277 + C100534 * C1537 - C100535 * C1526 -
             C100534 * C1538 + C100532 * C1550) *
                C152696 * C51245) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C152829 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C152617) *
               C152828 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C152617 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C152829) *
               C152575) *
              C365 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C152617 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C152829) *
               C152828 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C152829 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C152617) *
               C152575) *
              C366 +
          (((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
             C100614 * C51247) *
                C152829 -
            ((C101645 + C101646) * C152696 * C51247 +
             (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
                C152617) *
               C152828 +
           ((C101980 * C51245 + (C101978 + C101977) * C152696 * C51246 +
             (C100534 * C1241 - C100535 * C1231 - C100534 * C1242 +
              C100532 * C1249 + C100536 * C2890 - C100537 * C2889 -
              C100536 * C2891 + C152775 * C2892) *
                 C152696 * C51247) *
                C152617 -
            ((C101435 + C101436) * C152696 * C51247 +
             (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
                C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C152829 -
            ((C110297 + C110298) * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152617) *
               C152828 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             (C100534 * C2269 - C100535 * C2265 - C100534 * C2270 +
              C100532 * C2277 + C100536 * C8185 - C100537 * C8178 -
              C100536 * C8186 + C152775 * C8196) *
                 C6340) *
                C152457 * C152617 -
            ((C109374 + C109375) * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C152829) *
               C152575) *
              C365 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             (C103078 + C103077) * C6340) *
                C152457 * C152617 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C152829) *
               C152828 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             (C102760 + C102759) * C6340) *
                C152457 * C152829 -
            ((C100536 * C8183 - C100537 * C8177 - C100536 * C8184 +
              C152775 * C8195 + C100534 * C2271 - C100535 * C2266 -
              C100534 * C2272 + C100532 * C2278) *
                 C6340 +
             (C103077 + C103078) * C6339 + (C101974 + C101973) * C6338) *
                C152457 * C152617) *
               C152575) *
              C366 +
          (((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
                C152457 * C152829 -
            ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
             C101223 * C6338) *
                C152457 * C152617) *
               C152828 +
           ((C101979 * C6338 + (C103076 + C103075) * C6339 +
             (C100534 * C2273 - C100535 * C2267 - C100534 * C2274 +
              C100532 * C2279 + C100536 * C9823 - C100537 * C9822 -
              C100536 * C9824 + C152775 * C9825) *
                 C6340) *
                C152457 * C152617 -
            ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
             C100917 * C6338) *
                C152457 * C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152829 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152617) *
              C1879 +
          (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
            C111655 * C6340) *
               C152457 * C152617 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152829) *
              C1880 +
          ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C152829 -
           ((C111668 + C111669) * C6340 + (C110943 + C110942) * C6339 +
            C110889 * C6338) *
               C152457 * C152617) *
              C1881 +
          ((C111655 * C6338 + (C111669 + C111668) * C6339 +
            (C100534 * C8937 - C100535 * C8935 - C100534 * C8938 +
             C100532 * C8941 + C100536 * C60551 - C100537 * C60550 -
             C100536 * C60552 + C152775 * C60553) *
                C6340) *
               C152457 * C152617 -
           ((C110668 + C110669) * C6340 + (C110667 + C110666) * C6339 +
            C110641 * C6338) *
               C152457 * C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
             C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
             C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
             C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
             C117460 * C2690) *
                C152696 * C152457 * C152829 -
            (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
             C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
             C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
             C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
             C117462 * C632 - C117461 * C648 + C117457 * C668) *
                C152696 * C152457 * C152617) *
               C152828 +
           ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
             C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
             C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
             C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
             C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
             C117460 * C9528) *
                C152696 * C152457 * C152617 -
            (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
             C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
             C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
             C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
             C117461 * C386 - C117462 * C371 - C117461 * C387 +
             C117457 * C407) *
                C152696 * C152457 * C152829) *
               C152575) *
              C365 +
          (((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
             C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
             C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
             C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
             C117467 * C2682 + C117460 * C2692) *
                C152696 * C152457 * C152617 -
            (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
             C117460 * C2689 + C117465 * C651 - C117466 * C634 -
             C117465 * C652 + C117459 * C670 + C117463 * C645 - C117464 * C631 -
             C117463 * C646 + C117458 * C667 + C117461 * C146 - C117462 * C137 -
             C117461 * C147 + C117457 * C161) *
                C152696 * C152457 * C152829) *
               C152828 +
           ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
             C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
             C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
             C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
             C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
                C152696 * C152457 * C152829 -
            (C117467 * C9522 - C117468 * C9512 - C117467 * C9523 +
             C117460 * C9530 + C117465 * C3215 - C117466 * C3210 -
             C117465 * C3216 + C117459 * C3222 + C117463 * C1717 -
             C117464 * C1703 - C117463 * C1718 + C117458 * C1739 +
             C117461 * C1235 - C117462 * C1228 - C117461 * C1236 +
             C117457 * C1246) *
                C152696 * C152457 * C152617) *
               C152575) *
              C366 +
          (((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
             C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
             C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
             C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
             C117460 * C2688) *
                C152696 * C152457 * C152829 -
            (C117467 * C2683 - C117468 * C2669 - C117467 * C2684 +
             C117460 * C2693 + C117465 * C2673 - C117466 * C2664 -
             C117465 * C2674 + C117459 * C2688 + C117463 * C653 -
             C117464 * C635 - C117463 * C654 + C117458 * C671 + C117461 * C643 -
             C117462 * C630 - C117461 * C644 + C117457 * C666) *
                C152696 * C152457 * C152617) *
               C152828 +
           ((C117461 * C1237 - C117462 * C1229 - C117461 * C1238 +
             C117457 * C1247 + C117463 * C1715 - C117464 * C1702 -
             C117463 * C1716 + C117458 * C1738 + C117465 * C3217 -
             C117466 * C3211 - C117465 * C3218 + C117459 * C3223 +
             C117467 * C18412 - C117468 * C18411 - C117467 * C18413 +
             C117460 * C18414) *
                C152696 * C152457 * C152617 -
            (C117467 * C3217 - C117468 * C3211 - C117467 * C3218 +
             C117460 * C3223 + C117465 * C1715 - C117466 * C1702 -
             C117465 * C1716 + C117459 * C1738 + C117463 * C1237 -
             C117464 * C1229 - C117463 * C1238 + C117458 * C1247 +
             C117461 * C382 - C117462 * C369 - C117461 * C383 +
             C117457 * C405) *
                C152696 * C152457 * C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152829 -
           (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
            C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
            C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
            C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
            C117462 * C632 - C117461 * C648 + C117457 * C668) *
               C152696 * C152457 * C152617) *
              C1879 +
          ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
            C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
            C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
            C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
            C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
            C117460 * C9528) *
               C152696 * C152457 * C152617 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C152829) *
              C1880 +
          ((C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
            C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
            C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
            C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
            C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
               C152696 * C152457 * C152829 -
           (C117467 * C9520 - C117468 * C9511 - C117467 * C9521 +
            C117460 * C9529 + C117465 * C9516 - C117466 * C9509 -
            C117465 * C9517 + C117459 * C9527 + C117463 * C1729 -
            C117464 * C1709 - C117463 * C1730 + C117458 * C1745 +
            C117461 * C1727 - C117462 * C1708 - C117461 * C1728 +
            C117457 * C1744) *
               C152696 * C152457 * C152617) *
              C1881 +
          ((C117461 * C2269 - C117462 * C2265 - C117461 * C2270 +
            C117457 * C2277 + C117463 * C8185 - C117464 * C8178 -
            C117463 * C8186 + C117458 * C8196 + C117465 * C10240 -
            C117466 * C10238 - C117465 * C10241 + C117459 * C10244 +
            C117467 * C61401 - C117468 * C61400 - C117467 * C61402 +
            C117460 * C61403) *
               C152696 * C152457 * C152617 -
           (C117467 * C10240 - C117468 * C10238 - C117467 * C10241 +
            C117460 * C10244 + C117465 * C8185 - C117466 * C8178 -
            C117465 * C8186 + C117459 * C8196 + C117463 * C2269 -
            C117464 * C2265 - C117463 * C2270 + C117458 * C2277 +
            C117461 * C1537 - C117462 * C1526 - C117461 * C1538 +
            C117457 * C1550) *
               C152696 * C152457 * C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[322] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C100534 * C144 - C100535 * C136 - C100534 * C145 +
                C100532 * C160 + C100536 * C647 - C100537 * C632 -
                C100536 * C648 + C152775 * C668) *
                   C152696 * C51245 +
               (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                  C152530 * C152512 * C129 -
              (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
               (C100600 + C100599) * C152696 * C51245) *
                  C152530 * C152512 * C130 +
              (C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
               C100614 * C51247) *
                  C152530 * C152512 * C131 -
              ((C100607 + C100608) * C152696 * C51247 +
               (C100606 + C100605) * C152696 * C51246 + C100613 * C51245) *
                  C152530 * C152512 * C132 +
              (C100614 * C51245 + (C100608 + C100607) * C152696 * C51246 +
               (C100534 * C156 - C100535 * C142 - C100534 * C157 +
                C100532 * C166 + C100536 * C1022 - C100537 * C1021 -
                C100536 * C1023 + C152775 * C1024) *
                   C152696 * C51247) *
                  C152530 * C152512 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
                 C100532 * C160 + C100536 * C647 - C100537 * C632 -
                 C100536 * C648 + C152775 * C668) *
                    C152696 * C51245 +
                (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                   C152530 * C152917 -
               (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
                (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
                 C152775 * C1245 + C100534 * C386 - C100535 * C371 -
                 C100534 * C387 + C100532 * C407) *
                    C152696 * C51245) *
                   C152530 * C152901 +
               ((C100534 * C388 - C100535 * C372 - C100534 * C389 +
                 C100532 * C408 + C100536 * C1727 - C100537 * C1708 -
                 C100536 * C1728 + C152775 * C1744) *
                    C152696 * C51245 +
                (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
                   C152530 * C152870) *
                  C365 +
              (((C100908 + C100907) * C152696 * C51245 +
                (C100906 + C100905) * C152696 * C51246 +
                (C100913 + C100914) * C152696 * C51247) *
                   C152530 * C152901 -
               (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
                (C100600 + C100599) * C152696 * C51245) *
                   C152530 * C152917 -
               ((C100915 + C100916) * C152696 * C51247 +
                (C100912 + C100911) * C152696 * C51246 +
                (C100910 + C100909) * C152696 * C51245) *
                   C152530 * C152870) *
                  C366 +
              ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
                C100614 * C51247) *
                   C152530 * C152917 -
               ((C100536 * C1241 - C100537 * C1231 - C100536 * C1242 +
                 C152775 * C1249 + C100534 * C396 - C100535 * C376 -
                 C100534 * C397 + C100532 * C412) *
                    C152696 * C51247 +
                (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
                   C152530 * C152901 +
               (C100920 * C51245 + (C100916 + C100915) * C152696 * C51246 +
                (C100534 * C398 - C100535 * C377 - C100534 * C399 +
                 C100532 * C413 + C100536 * C2108 - C100537 * C2107 -
                 C100536 * C2109 + C152775 * C2110) *
                    C152696 * C51247) *
                   C152530 * C152870) *
                  C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152918 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C152903 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C152696 * C51245 +
            (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
               C152873) *
              C152512 * C365 +
          (((C101214 + C101213) * C152696 * C51245 +
            (C101212 + C101211) * C152696 * C51246 +
            (C101219 + C101220) * C152696 * C51247) *
               C152903 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152918 -
           ((C101221 + C101222) * C152696 * C51247 +
            (C101218 + C101217) * C152696 * C51246 +
            (C101216 + C101215) * C152696 * C51245) *
               C152873) *
              C152512 * C366 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152918 -
           ((C100536 * C659 - C100537 * C638 - C100536 * C660 + C152775 * C674 +
             C100534 * C657 - C100535 * C637 - C100534 * C658 +
             C100532 * C673) *
                C152696 * C51247 +
            (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
               C152903 +
           (C101226 * C51245 + (C101222 + C101221) * C152696 * C51246 +
            (C100534 * C659 - C100535 * C638 - C100534 * C660 + C100532 * C674 +
             C100536 * C3052 - C100537 * C3051 - C100536 * C3053 +
             C152775 * C3054) *
                C152696 * C51247) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152530 * C1429 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152530 * C1430 +
           ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152530 * C152870) *
              C152914 +
          (((C100908 + C100907) * C152696 * C51245 +
            (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
               C152530 * C1430 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152530 * C1429 -
           ((C100915 + C100916) * C152696 * C51247 +
            (C100912 + C100911) * C152696 * C51246 +
            (C100910 + C100909) * C152696 * C51245) *
               C152530 * C152870) *
              C152897 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152530 * C1429 -
           ((C101435 + C101436) * C152696 * C51247 +
            (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
               C152530 * C1430 +
           (C100920 * C51245 + (C100916 + C100915) * C152696 * C51246 +
            (C100534 * C398 - C100535 * C377 - C100534 * C399 + C100532 * C413 +
             C100536 * C2108 - C100537 * C2107 - C100536 * C2109 +
             C152775 * C2110) *
                C152696 * C51247) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C152696 * C51245 +
           (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
              C152530 * C1517 -
          (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
           (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
            C152775 * C1245 + C100534 * C386 - C100535 * C371 - C100534 * C387 +
            C100532 * C407) *
               C152696 * C51245) *
              C152530 * C1518 +
          ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
            C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
            C152775 * C1744) *
               C152696 * C51245 +
           (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
              C152530 * C1519 -
          ((C100536 * C2273 - C100537 * C2267 - C100536 * C2274 +
            C152775 * C2279 + C100534 * C1533 - C100535 * C1524 -
            C100534 * C1534 + C100532 * C1548) *
               C152696 * C51247 +
           (C100536 * C2271 - C100537 * C2266 - C100536 * C2272 +
            C152775 * C2278 + C100534 * C1535 - C100535 * C1525 -
            C100534 * C1536 + C100532 * C1549) *
               C152696 * C51246 +
           (C100536 * C2269 - C100537 * C2265 - C100536 * C2270 +
            C152775 * C2277 + C100534 * C1537 - C100535 * C1526 -
            C100534 * C1538 + C100532 * C1550) *
               C152696 * C51245) *
              C152530 * C1520 +
          ((C100534 * C1539 - C100535 * C1527 - C100534 * C1540 +
            C100532 * C1551 + C100536 * C8189 - C100537 * C8180 -
            C100536 * C8190 + C152775 * C8198) *
               C152696 * C51245 +
           (C100534 * C1541 - C100535 * C1528 - C100534 * C1542 +
            C100532 * C1552 + C100536 * C8187 - C100537 * C8179 -
            C100536 * C8188 + C152775 * C8197) *
               C152696 * C51246 +
           (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
            C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
            C100536 * C8729 + C152775 * C8730) *
               C152696 * C51247) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152918 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C152903 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C152696 * C51245 +
            (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
               C152873) *
              C1429 +
          (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
             C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
             C100536 * C1720 + C152775 * C1740) *
                C152696 * C51245 +
            (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
               C152903 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152918 -
           ((C100536 * C3217 - C100537 * C3211 - C100536 * C3218 +
             C152775 * C3223 + C100534 * C1715 - C100535 * C1702 -
             C100534 * C1716 + C100532 * C1738) *
                C152696 * C51247 +
            (C100536 * C3215 - C100537 * C3210 - C100536 * C3216 +
             C152775 * C3222 + C100534 * C1717 - C100535 * C1703 -
             C100534 * C1718 + C100532 * C1739) *
                C152696 * C51246 +
            (C100536 * C3213 - C100537 * C3209 - C100536 * C3214 +
             C152775 * C3221 + C100534 * C1719 - C100535 * C1704 -
             C100534 * C1720 + C100532 * C1740) *
                C152696 * C51245) *
               C152873) *
              C1430 +
          (((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152918 -
           ((C100536 * C1733 - C100537 * C1711 - C100536 * C1734 +
             C152775 * C1747 + C100534 * C1723 - C100535 * C1706 -
             C100534 * C1724 + C100532 * C1742) *
                C152696 * C51247 +
            (C100536 * C1731 - C100537 * C1710 - C100536 * C1732 +
             C152775 * C1746 + C100534 * C1725 - C100535 * C1707 -
             C100534 * C1726 + C100532 * C1743) *
                C152696 * C51246 +
            (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
             C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
             C100534 * C1728 + C100532 * C1744) *
                C152696 * C51245) *
               C152903 +
           ((C100534 * C1729 - C100535 * C1709 - C100534 * C1730 +
             C100532 * C1745 + C100536 * C9516 - C100537 * C9509 -
             C100536 * C9517 + C152775 * C9527) *
                C152696 * C51245 +
            (C100534 * C1731 - C100535 * C1710 - C100534 * C1732 +
             C100532 * C1746 + C100536 * C9514 - C100537 * C9508 -
             C100536 * C9515 + C152775 * C9526) *
                C152696 * C51246 +
            (C100534 * C1733 - C100535 * C1711 - C100534 * C1734 +
             C100532 * C1747 + C100536 * C10024 - C100537 * C10023 -
             C100536 * C10025 + C152775 * C10026) *
                C152696 * C51247) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C6338 +
           (C100534 * C386 - C100535 * C371 - C100534 * C387 + C100532 * C407 +
            C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
            C152775 * C1245) *
               C6339 +
           (C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
            C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
            C152775 * C1744) *
               C6340) *
              C152457 * C152530 * C152512 * C129 -
          ((C100910 + C100909) * C6340 + (C100907 + C100908) * C6339 +
           (C100600 + C100599) * C6338) *
              C152457 * C152530 * C152512 * C130 +
          (C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
              C152457 * C152530 * C152512 * C131 -
          ((C100915 + C100916) * C6340 + (C100914 + C100913) * C6339 +
           C100610 * C6338) *
              C152457 * C152530 * C152512 * C132 +
          (C100611 * C6338 + (C101436 + C101435) * C6339 +
           (C100534 * C398 - C100535 * C377 - C100534 * C399 + C100532 * C413 +
            C100536 * C2108 - C100537 * C2107 - C100536 * C2109 +
            C152775 * C2110) *
               C6340) *
              C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C152917 -
           ((C109374 + C109375) * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C152901 +
           (C109376 * C6338 + (C109375 + C109374) * C6339 +
            (C100534 * C1539 - C100535 * C1527 - C100534 * C1540 +
             C100532 * C1551 + C100536 * C8189 - C100537 * C8180 -
             C100536 * C8190 + C152775 * C8198) *
                C6340) *
               C152457 * C152530 * C152870) *
              C365 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            (C102760 + C102759) * C6340) *
               C152457 * C152530 * C152901 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C152917 -
           ((C100536 * C8187 - C100537 * C8179 - C100536 * C8188 +
             C152775 * C8197 + C100534 * C1541 - C100535 * C1528 -
             C100534 * C1542 + C100532 * C1552) *
                C6340 +
            (C102759 + C102760) * C6339 + C109357 * C6338) *
               C152457 * C152530 * C152870) *
              C366 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152530 * C152917 -
           ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
            C100917 * C6338) *
               C152457 * C152530 * C152901 +
           (C100918 * C6338 + (C102758 + C102757) * C6339 +
            (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
             C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
             C100536 * C8729 + C152775 * C8730) *
                C6340) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152918 -
           ((C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
             C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
             C100534 * C1728 + C100532 * C1744) *
                C6340 +
            (C100536 * C1719 - C100537 * C1704 - C100536 * C1720 +
             C152775 * C1740 + C100534 * C1233 - C100535 * C1227 -
             C100534 * C1234 + C100532 * C1245) *
                C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152903 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C100534 * C1719 - C100535 * C1704 - C100534 * C1720 +
             C100532 * C1740 + C100536 * C3213 - C100537 * C3209 -
             C100536 * C3214 + C152775 * C3221) *
                C6339 +
            (C100534 * C1729 - C100535 * C1709 - C100534 * C1730 +
             C100532 * C1745 + C100536 * C9516 - C100537 * C9509 -
             C100536 * C9517 + C152775 * C9527) *
                C6340) *
               C152457 * C152873) *
              C152512 * C365 +
          (((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
            (C103078 + C103077) * C6340) *
               C152457 * C152903 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152918 -
           ((C100536 * C9514 - C100537 * C9508 - C100536 * C9515 +
             C152775 * C9526 + C100534 * C1731 - C100535 * C1710 -
             C100534 * C1732 + C100532 * C1746) *
                C6340 +
            (C104147 + C104148) * C6339 + (C101216 + C101215) * C6338) *
               C152457 * C152873) *
              C152512 * C366 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152918 -
           ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
            C101223 * C6338) *
               C152457 * C152903 +
           (C101224 * C6338 + (C104146 + C104145) * C6339 +
            (C100534 * C1733 - C100535 * C1711 - C100534 * C1734 +
             C100532 * C1747 + C100536 * C10024 - C100537 * C10023 -
             C100536 * C10025 + C152775 * C10026) *
                C6340) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C1429 -
           ((C109374 + C109375) * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C1430 +
           (C109376 * C6338 + (C109375 + C109374) * C6339 +
            (C100534 * C1539 - C100535 * C1527 - C100534 * C1540 +
             C100532 * C1551 + C100536 * C8189 - C100537 * C8180 -
             C100536 * C8190 + C152775 * C8198) *
                C6340) *
               C152457 * C152530 * C152870) *
              C152914 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            (C102760 + C102759) * C6340) *
               C152457 * C152530 * C1430 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C1429 -
           ((C100536 * C8187 - C100537 * C8179 - C100536 * C8188 +
             C152775 * C8197 + C100534 * C1541 - C100535 * C1528 -
             C100534 * C1542 + C100532 * C1552) *
                C6340 +
            (C102759 + C102760) * C6339 + C109357 * C6338) *
               C152457 * C152530 * C152870) *
              C152897 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152530 * C1429 -
           ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
            C100917 * C6338) *
               C152457 * C152530 * C1430 +
           (C100918 * C6338 + (C102758 + C102757) * C6339 +
            (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
             C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
             C100536 * C8729 + C152775 * C8730) *
                C6340) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C6338 +
           (C109370 + C109371) * C6339 + C109376 * C6340) *
              C152457 * C152530 * C1517 -
          (C110641 * C6340 + (C109373 + C109372) * C6339 +
           (C109371 + C109370) * C6338) *
              C152457 * C152530 * C1518 +
          (C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
              C152457 * C152530 * C1519 -
          ((C110668 + C110669) * C6340 + (C110667 + C110666) * C6339 +
           C110641 * C6338) *
              C152457 * C152530 * C1520 +
          (C110670 * C6338 + (C110669 + C110668) * C6339 +
           (C100534 * C7930 - C100535 * C7924 - C100534 * C7931 +
            C100532 * C7936 + C100536 * C61016 - C100537 * C61015 -
            C100536 * C61017 + C152775 * C61018) *
               C6340) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152918 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152903 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C110938 + C110939) * C6339 + C110946 * C6340) *
               C152457 * C152873) *
              C1429 +
          (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
            (C110942 + C110943) * C6340) *
               C152457 * C152903 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152918 -
           ((C110944 + C110945) * C6340 + (C110941 + C110940) * C6339 +
            (C110939 + C110938) * C6338) *
               C152457 * C152873) *
              C1430 +
          ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C152918 -
           ((C100536 * C8191 - C100537 * C8181 - C100536 * C8192 +
             C152775 * C8199 + C100534 * C8189 - C100535 * C8180 -
             C100534 * C8190 + C100532 * C8198) *
                C6340 +
            (C110943 + C110942) * C6339 + C110889 * C6338) *
               C152457 * C152903 +
           (C110946 * C6338 + (C110945 + C110944) * C6339 +
            (C100534 * C8191 - C100535 * C8181 - C100534 * C8192 +
             C100532 * C8199 + C100536 * C61859 - C100537 * C61858 -
             C100536 * C61860 + C152775 * C61861) *
                C6340) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
           C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
           C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
           C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
           C117460 * C2690) *
              C152696 * C152457 * C152530 * C152512 * C129 -
          (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
           C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
           C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
           C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
           C117457 * C161) *
              C152696 * C152457 * C152530 * C152512 * C130 +
          (C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
           C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
           C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
           C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
           C117460 * C2688) *
              C152696 * C152457 * C152530 * C152512 * C131 -
          (C117467 * C2671 - C117468 * C2663 - C117467 * C2672 +
           C117460 * C2687 + C117465 * C655 - C117466 * C636 - C117465 * C656 +
           C117459 * C672 + C117463 * C641 - C117464 * C629 - C117463 * C642 +
           C117458 * C665 + C117461 * C150 - C117462 * C139 - C117461 * C151 +
           C117457 * C163) *
              C152696 * C152457 * C152530 * C152512 * C132 +
          (C117461 * C152 - C117462 * C140 - C117461 * C153 + C117457 * C164 +
           C117463 * C657 - C117464 * C637 - C117463 * C658 + C117458 * C673 +
           C117465 * C659 - C117466 * C638 - C117465 * C660 + C117459 * C674 +
           C117467 * C3052 - C117468 * C3051 - C117467 * C3053 +
           C117460 * C3054) *
              C152696 * C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152530 * C152917 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C152530 * C152901 +
           (C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
            C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
            C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
            C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
            C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
               C152696 * C152457 * C152530 * C152870) *
              C365 +
          ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
            C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
            C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
            C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
            C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
               C152696 * C152457 * C152530 * C152901 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C152530 * C152917 -
           (C117467 * C9514 - C117468 * C9508 - C117467 * C9515 +
            C117460 * C9526 + C117465 * C1731 - C117466 * C1710 -
            C117465 * C1732 + C117459 * C1746 + C117463 * C1725 -
            C117464 * C1707 - C117463 * C1726 + C117458 * C1743 +
            C117461 * C390 - C117462 * C373 - C117461 * C391 + C117457 * C409) *
               C152696 * C152457 * C152530 * C152870) *
              C366 +
          ((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
            C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
            C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
            C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
            C117460 * C2688) *
               C152696 * C152457 * C152530 * C152917 -
           (C117467 * C3217 - C117468 * C3211 - C117467 * C3218 +
            C117460 * C3223 + C117465 * C1715 - C117466 * C1702 -
            C117465 * C1716 + C117459 * C1738 + C117463 * C1237 -
            C117464 * C1229 - C117463 * C1238 + C117458 * C1247 +
            C117461 * C382 - C117462 * C369 - C117461 * C383 + C117457 * C405) *
               C152696 * C152457 * C152530 * C152901 +
           (C117461 * C392 - C117462 * C374 - C117461 * C393 + C117457 * C410 +
            C117463 * C1723 - C117464 * C1706 - C117463 * C1724 +
            C117458 * C1742 + C117465 * C1733 - C117466 * C1711 -
            C117465 * C1734 + C117459 * C1747 + C117467 * C10024 -
            C117468 * C10023 - C117467 * C10025 + C117460 * C10026) *
               C152696 * C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152918 -
           (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
            C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
            C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
            C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
            C117462 * C632 - C117461 * C648 + C117457 * C668) *
               C152696 * C152457 * C152903 +
           (C117461 * C649 - C117462 * C633 - C117461 * C650 + C117457 * C669 +
            C117463 * C2677 - C117464 * C2666 - C117463 * C2678 +
            C117458 * C2690 + C117465 * C2679 - C117466 * C2667 -
            C117465 * C2680 + C117459 * C2691 + C117467 * C18111 -
            C117468 * C18106 - C117467 * C18112 + C117460 * C18118) *
               C152696 * C152457 * C152873) *
              C152512 * C365 +
          ((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
            C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
            C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
            C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
            C117467 * C2682 + C117460 * C2692) *
               C152696 * C152457 * C152903 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C152918 -
           (C117467 * C18109 - C117468 * C18105 - C117467 * C18110 +
            C117460 * C18117 + C117465 * C2681 - C117466 * C2668 -
            C117465 * C2682 + C117459 * C2692 + C117463 * C2675 -
            C117464 * C2665 - C117463 * C2676 + C117458 * C2689 +
            C117461 * C651 - C117462 * C634 - C117461 * C652 + C117457 * C670) *
               C152696 * C152457 * C152873) *
              C152512 * C366 +
          ((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
            C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
            C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
            C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
            C117460 * C2688) *
               C152696 * C152457 * C152918 -
           (C117467 * C2683 - C117468 * C2669 - C117467 * C2684 +
            C117460 * C2693 + C117465 * C2673 - C117466 * C2664 -
            C117465 * C2674 + C117459 * C2688 + C117463 * C653 -
            C117464 * C635 - C117463 * C654 + C117458 * C671 + C117461 * C643 -
            C117462 * C630 - C117461 * C644 + C117457 * C666) *
               C152696 * C152457 * C152903 +
           (C117461 * C653 - C117462 * C635 - C117461 * C654 + C117457 * C671 +
            C117463 * C2673 - C117464 * C2664 - C117463 * C2674 +
            C117458 * C2688 + C117465 * C2683 - C117466 * C2669 -
            C117465 * C2684 + C117459 * C2693 + C117467 * C18631 -
            C117468 * C18630 - C117467 * C18632 + C117460 * C18633) *
               C152696 * C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152530 * C1429 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C152530 * C1430 +
           (C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
            C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
            C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
            C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
            C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
               C152696 * C152457 * C152530 * C152870) *
              C152914 +
          ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
            C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
            C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
            C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
            C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
               C152696 * C152457 * C152530 * C1430 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C152530 * C1429 -
           (C117467 * C9514 - C117468 * C9508 - C117467 * C9515 +
            C117460 * C9526 + C117465 * C1731 - C117466 * C1710 -
            C117465 * C1732 + C117459 * C1746 + C117463 * C1725 -
            C117464 * C1707 - C117463 * C1726 + C117458 * C1743 +
            C117461 * C390 - C117462 * C373 - C117461 * C391 + C117457 * C409) *
               C152696 * C152457 * C152530 * C152870) *
              C152897 +
          ((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
            C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
            C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
            C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
            C117460 * C2688) *
               C152696 * C152457 * C152530 * C1429 -
           (C117467 * C3217 - C117468 * C3211 - C117467 * C3218 +
            C117460 * C3223 + C117465 * C1715 - C117466 * C1702 -
            C117465 * C1716 + C117459 * C1738 + C117463 * C1237 -
            C117464 * C1229 - C117463 * C1238 + C117458 * C1247 +
            C117461 * C382 - C117462 * C369 - C117461 * C383 + C117457 * C405) *
               C152696 * C152457 * C152530 * C1430 +
           (C117461 * C392 - C117462 * C374 - C117461 * C393 + C117457 * C410 +
            C117463 * C1723 - C117464 * C1706 - C117463 * C1724 +
            C117458 * C1742 + C117465 * C1733 - C117466 * C1711 -
            C117465 * C1734 + C117459 * C1747 + C117467 * C10024 -
            C117468 * C10023 - C117467 * C10025 + C117460 * C10026) *
               C152696 * C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
           C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
           C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
           C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
           C117460 * C2690) *
              C152696 * C152457 * C152530 * C1517 -
          (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
           C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
           C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
           C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
           C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
              C152696 * C152457 * C152530 * C1518 +
          (C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
           C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
           C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
           C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
           C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
              C152696 * C152457 * C152530 * C1519 -
          (C117467 * C10240 - C117468 * C10238 - C117467 * C10241 +
           C117460 * C10244 + C117465 * C8185 - C117466 * C8178 -
           C117465 * C8186 + C117459 * C8196 + C117463 * C2269 -
           C117464 * C2265 - C117463 * C2270 + C117458 * C2277 +
           C117461 * C1537 - C117462 * C1526 - C117461 * C1538 +
           C117457 * C1550) *
              C152696 * C152457 * C152530 * C1520 +
          (C117461 * C1539 - C117462 * C1527 - C117461 * C1540 +
           C117457 * C1551 + C117463 * C8189 - C117464 * C8180 -
           C117463 * C8190 + C117458 * C8198 + C117465 * C8191 -
           C117466 * C8181 - C117465 * C8192 + C117459 * C8199 +
           C117467 * C61859 - C117468 * C61858 - C117467 * C61860 +
           C117460 * C61861) *
              C152696 * C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152918 -
           (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
            C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
            C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
            C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
            C117462 * C632 - C117461 * C648 + C117457 * C668) *
               C152696 * C152457 * C152903 +
           (C117461 * C649 - C117462 * C633 - C117461 * C650 + C117457 * C669 +
            C117463 * C2677 - C117464 * C2666 - C117463 * C2678 +
            C117458 * C2690 + C117465 * C2679 - C117466 * C2667 -
            C117465 * C2680 + C117459 * C2691 + C117467 * C18111 -
            C117468 * C18106 - C117467 * C18112 + C117460 * C18118) *
               C152696 * C152457 * C152873) *
              C1429 +
          ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
            C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
            C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
            C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
            C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
            C117460 * C9528) *
               C152696 * C152457 * C152903 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C152918 -
           (C117467 * C18851 - C117468 * C18849 - C117467 * C18852 +
            C117460 * C18855 + C117465 * C9518 - C117466 * C9510 -
            C117465 * C9519 + C117459 * C9528 + C117463 * C3213 -
            C117464 * C3209 - C117463 * C3214 + C117458 * C3221 +
            C117461 * C1719 - C117462 * C1704 - C117461 * C1720 +
            C117457 * C1740) *
               C152696 * C152457 * C152873) *
              C1430 +
          ((C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
            C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
            C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
            C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
            C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
               C152696 * C152457 * C152918 -
           (C117467 * C9520 - C117468 * C9511 - C117467 * C9521 +
            C117460 * C9529 + C117465 * C9516 - C117466 * C9509 -
            C117465 * C9517 + C117459 * C9527 + C117463 * C1729 -
            C117464 * C1709 - C117463 * C1730 + C117458 * C1745 +
            C117461 * C1727 - C117462 * C1708 - C117461 * C1728 +
            C117457 * C1744) *
               C152696 * C152457 * C152903 +
           (C117461 * C1729 - C117462 * C1709 - C117461 * C1730 +
            C117457 * C1745 + C117463 * C9516 - C117464 * C9509 -
            C117463 * C9517 + C117458 * C9527 + C117465 * C9520 -
            C117466 * C9511 - C117465 * C9521 + C117459 * C9529 +
            C117467 * C68735 - C117468 * C68734 - C117467 * C68736 +
            C117460 * C68737) *
               C152696 * C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[323] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C152829 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C152617) *
               C1429 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C152617 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C152829) *
               C1430 +
           (((C100534 * C388 - C100535 * C372 - C100534 * C389 +
              C100532 * C408 + C100536 * C1727 - C100537 * C1708 -
              C100536 * C1728 + C152775 * C1744) *
                 C152696 * C51245 +
             (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
                C152829 -
            ((C103075 + C103076) * C152696 * C51247 +
             (C103077 + C103078) * C152696 * C51246 +
             (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
              C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
              C100534 * C1728 + C100532 * C1744) *
                 C152696 * C51245) *
                C152617) *
               C152870) *
              C152814 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C152617 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C152829) *
               C1429 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C152829 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C152617) *
               C1430 +
           (((C103078 + C103077) * C152696 * C51245 +
             (C103076 + C103075) * C152696 * C51246 +
             (C100534 * C1721 - C100535 * C1705 - C100534 * C1722 +
              C100532 * C1741 + C100536 * C1735 - C100537 * C1712 -
              C100536 * C1736 + C152775 * C1748) *
                 C152696 * C51247) *
                C152617 -
            ((C100915 + C100916) * C152696 * C51247 +
             (C100912 + C100911) * C152696 * C51246 +
             (C100910 + C100909) * C152696 * C51245) *
                C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152829 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C152617) *
              C152512 * C873 +
          (((C101214 + C101213) * C152696 * C51245 +
            (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
               C152617 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152829) *
              C152512 * C874 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152829 -
           ((C101645 + C101646) * C152696 * C51247 +
            (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
               C152617) *
              C152512 * C875 +
          ((C101640 * C51245 + (C101646 + C101645) * C152696 * C51246 +
            (C100534 * C661 - C100535 * C639 - C100534 * C662 + C100532 * C675 +
             C100536 * C663 - C100537 * C640 - C100536 * C664 +
             C152775 * C676) *
                C152696 * C51247) *
               C152617 -
           ((C100607 + C100608) * C152696 * C51247 +
            (C100606 + C100605) * C152696 * C51246 + C100613 * C51245) *
               C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152829 -
           ((C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
             C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
             C100534 * C1728 + C100532 * C1744) *
                C6340 +
            (C100536 * C1719 - C100537 * C1704 - C100536 * C1720 +
             C152775 * C1740 + C100534 * C1233 - C100535 * C1227 -
             C100534 * C1234 + C100532 * C1245) *
                C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152617) *
              C152512 * C873 +
          (((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
            (C103078 + C103077) * C6340) *
               C152457 * C152617 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152829) *
              C152512 * C874 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152829 -
           ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
            C101223 * C6338) *
               C152457 * C152617) *
              C152512 * C875 +
          ((C101631 * C6338 + (C101978 + C101977) * C6339 +
            (C100534 * C1721 - C100535 * C1705 - C100534 * C1722 +
             C100532 * C1741 + C100536 * C1735 - C100537 * C1712 -
             C100536 * C1736 + C152775 * C1748) *
                C6340) *
               C152457 * C152617 -
           ((C100915 + C100916) * C6340 + (C100914 + C100913) * C6339 +
            C100610 * C6338) *
               C152457 * C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C152829 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152617) *
               C1429 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             (C110942 + C110943) * C6340) *
                C152457 * C152617 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C152829) *
               C1430 +
           ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
                C152457 * C152829 -
            ((C100536 * C8191 - C100537 * C8181 - C100536 * C8192 +
              C152775 * C8199 + C100534 * C8189 - C100535 * C8180 -
              C100534 * C8190 + C100532 * C8198) *
                 C6340 +
             (C110943 + C110942) * C6339 + C110889 * C6338) *
                C152457 * C152617) *
               C152870) *
              C152814 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C152617 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C152829) *
               C1429 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C152829 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C152617) *
               C1430 +
           ((C111446 * C6338 + (C111460 + C111459) * C6339 +
             (C100534 * C8187 - C100535 * C8179 - C100534 * C8188 +
              C100532 * C8197 + C100536 * C8193 - C100537 * C8182 -
              C100536 * C8194 + C152775 * C8200) *
                 C6340) *
                C152457 * C152617 -
            ((C111154 + C111155) * C6340 + (C102759 + C102760) * C6339 +
             C109357 * C6338) *
                C152457 * C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152829 -
           (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
            C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
            C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
            C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
            C117462 * C632 - C117461 * C648 + C117457 * C668) *
               C152696 * C152457 * C152617) *
              C152512 * C873 +
          ((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
            C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
            C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
            C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
            C117467 * C2682 + C117460 * C2692) *
               C152696 * C152457 * C152617 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C152829) *
              C152512 * C874 +
          ((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
            C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
            C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
            C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
            C117460 * C2688) *
               C152696 * C152457 * C152829 -
           (C117467 * C2683 - C117468 * C2669 - C117467 * C2684 +
            C117460 * C2693 + C117465 * C2673 - C117466 * C2664 -
            C117465 * C2674 + C117459 * C2688 + C117463 * C653 -
            C117464 * C635 - C117463 * C654 + C117458 * C671 + C117461 * C643 -
            C117462 * C630 - C117461 * C644 + C117457 * C666) *
               C152696 * C152457 * C152617) *
              C152512 * C875 +
          ((C117461 * C641 - C117462 * C629 - C117461 * C642 + C117457 * C665 +
            C117463 * C655 - C117464 * C636 - C117463 * C656 + C117458 * C672 +
            C117465 * C2671 - C117466 * C2663 - C117465 * C2672 +
            C117459 * C2687 + C117467 * C2685 - C117468 * C2670 -
            C117467 * C2686 + C117460 * C2694) *
               C152696 * C152457 * C152617 -
           (C117467 * C2671 - C117468 * C2663 - C117467 * C2672 +
            C117460 * C2687 + C117465 * C655 - C117466 * C636 - C117465 * C656 +
            C117459 * C672 + C117463 * C641 - C117464 * C629 - C117463 * C642 +
            C117458 * C665 + C117461 * C150 - C117462 * C139 - C117461 * C151 +
            C117457 * C163) *
               C152696 * C152457 * C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
             C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
             C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
             C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
             C117460 * C2690) *
                C152696 * C152457 * C152829 -
            (C117467 * C2679 - C117468 * C2667 - C117467 * C2680 +
             C117460 * C2691 + C117465 * C2677 - C117466 * C2666 -
             C117465 * C2678 + C117459 * C2690 + C117463 * C649 -
             C117464 * C633 - C117463 * C650 + C117458 * C669 + C117461 * C647 -
             C117462 * C632 - C117461 * C648 + C117457 * C668) *
                C152696 * C152457 * C152617) *
               C1429 +
           ((C117461 * C1233 - C117462 * C1227 - C117461 * C1234 +
             C117457 * C1245 + C117463 * C1719 - C117464 * C1704 -
             C117463 * C1720 + C117458 * C1740 + C117465 * C3213 -
             C117466 * C3209 - C117465 * C3214 + C117459 * C3221 +
             C117467 * C9518 - C117468 * C9510 - C117467 * C9519 +
             C117460 * C9528) *
                C152696 * C152457 * C152617 -
            (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
             C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
             C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
             C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
             C117461 * C386 - C117462 * C371 - C117461 * C387 +
             C117457 * C407) *
                C152696 * C152457 * C152829) *
               C1430 +
           ((C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
             C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
             C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
             C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
             C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
                C152696 * C152457 * C152829 -
            (C117467 * C9520 - C117468 * C9511 - C117467 * C9521 +
             C117460 * C9529 + C117465 * C9516 - C117466 * C9509 -
             C117465 * C9517 + C117459 * C9527 + C117463 * C1729 -
             C117464 * C1709 - C117463 * C1730 + C117458 * C1745 +
             C117461 * C1727 - C117462 * C1708 - C117461 * C1728 +
             C117457 * C1744) *
                C152696 * C152457 * C152617) *
               C152870) *
              C152814 +
          (((C117461 * C645 - C117462 * C631 - C117461 * C646 + C117457 * C667 +
             C117463 * C651 - C117464 * C634 - C117463 * C652 + C117458 * C670 +
             C117465 * C2675 - C117466 * C2665 - C117465 * C2676 +
             C117459 * C2689 + C117467 * C2681 - C117468 * C2668 -
             C117467 * C2682 + C117460 * C2692) *
                C152696 * C152457 * C152617 -
            (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
             C117460 * C2689 + C117465 * C651 - C117466 * C634 -
             C117465 * C652 + C117459 * C670 + C117463 * C645 - C117464 * C631 -
             C117463 * C646 + C117458 * C667 + C117461 * C146 - C117462 * C137 -
             C117461 * C147 + C117457 * C161) *
                C152696 * C152457 * C152829) *
               C1429 +
           ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
             C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
             C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
             C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
             C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
                C152696 * C152457 * C152829 -
            (C117467 * C9522 - C117468 * C9512 - C117467 * C9523 +
             C117460 * C9530 + C117465 * C3215 - C117466 * C3210 -
             C117465 * C3216 + C117459 * C3222 + C117463 * C1717 -
             C117464 * C1703 - C117463 * C1718 + C117458 * C1739 +
             C117461 * C1235 - C117462 * C1228 - C117461 * C1236 +
             C117457 * C1246) *
                C152696 * C152457 * C152617) *
               C1430 +
           ((C117461 * C1725 - C117462 * C1707 - C117461 * C1726 +
             C117457 * C1743 + C117463 * C1731 - C117464 * C1710 -
             C117463 * C1732 + C117458 * C1746 + C117465 * C9514 -
             C117466 * C9508 - C117465 * C9515 + C117459 * C9526 +
             C117467 * C9524 - C117468 * C9513 - C117467 * C9525 +
             C117460 * C9531) *
                C152696 * C152457 * C152617 -
            (C117467 * C9514 - C117468 * C9508 - C117467 * C9515 +
             C117460 * C9526 + C117465 * C1731 - C117466 * C1710 -
             C117465 * C1732 + C117459 * C1746 + C117463 * C1725 -
             C117464 * C1707 - C117463 * C1726 + C117458 * C1743 +
             C117461 * C390 - C117462 * C373 - C117461 * C391 +
             C117457 * C409) *
                C152696 * C152457 * C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[324] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152530 * C152917 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152530 * C152901 +
           ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152530 * C152870) *
              C365 +
          (((C100908 + C100907) * C152696 * C51245 +
            (C100906 + C100905) * C152696 * C51246 +
            (C100913 + C100914) * C152696 * C51247) *
               C152530 * C152901 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152530 * C152917 -
           ((C100915 + C100916) * C152696 * C51247 +
            (C100912 + C100911) * C152696 * C51246 +
            (C100910 + C100909) * C152696 * C51245) *
               C152530 * C152870) *
              C366 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152530 * C152917 -
           ((C100536 * C1241 - C100537 * C1231 - C100536 * C1242 +
             C152775 * C1249 + C100534 * C396 - C100535 * C376 -
             C100534 * C397 + C100532 * C412) *
                C152696 * C51247 +
            (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
               C152530 * C152901 +
           (C100920 * C51245 + (C100916 + C100915) * C152696 * C51246 +
            (C100534 * C398 - C100535 * C377 - C100534 * C399 + C100532 * C413 +
             C100536 * C2108 - C100537 * C2107 - C100536 * C2109 +
             C152775 * C2110) *
                C152696 * C51247) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C152696 * C51245 +
           (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
              C152530 * C152512 * C129 -
          (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
           (C100600 + C100599) * C152696 * C51245) *
              C152530 * C152512 * C130 +
          (C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
           C100614 * C51247) *
              C152530 * C152512 * C131 -
          ((C100607 + C100608) * C152696 * C51247 +
           (C100606 + C100605) * C152696 * C51246 + C100613 * C51245) *
              C152530 * C152512 * C132 +
          (C100614 * C51245 + (C100608 + C100607) * C152696 * C51246 +
           (C100534 * C156 - C100535 * C142 - C100534 * C157 + C100532 * C166 +
            C100536 * C1022 - C100537 * C1021 - C100536 * C1023 +
            C152775 * C1024) *
               C152696 * C51247) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152530 * C1429 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152530 * C1430 +
           ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152530 * C152870) *
              C152914 +
          (((C100908 + C100907) * C152696 * C51245 +
            (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
               C152530 * C1430 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152530 * C1429 -
           ((C100915 + C100916) * C152696 * C51247 +
            (C100912 + C100911) * C152696 * C51246 +
            (C100910 + C100909) * C152696 * C51245) *
               C152530 * C152870) *
              C152897 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152530 * C1429 -
           ((C101435 + C101436) * C152696 * C51247 +
            (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
               C152530 * C1430 +
           (C100920 * C51245 + (C100916 + C100915) * C152696 * C51246 +
            (C100534 * C398 - C100535 * C377 - C100534 * C399 + C100532 * C413 +
             C100536 * C2108 - C100537 * C2107 - C100536 * C2109 +
             C152775 * C2110) *
                C152696 * C51247) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C152696 * C51245 +
           (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
              C152530 * C1517 -
          (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
           (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
            C152775 * C1245 + C100534 * C386 - C100535 * C371 - C100534 * C387 +
            C100532 * C407) *
               C152696 * C51245) *
              C152530 * C1518 +
          ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
            C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
            C152775 * C1744) *
               C152696 * C51245 +
           (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
              C152530 * C1519 -
          ((C100536 * C2273 - C100537 * C2267 - C100536 * C2274 +
            C152775 * C2279 + C100534 * C1533 - C100535 * C1524 -
            C100534 * C1534 + C100532 * C1548) *
               C152696 * C51247 +
           (C100536 * C2271 - C100537 * C2266 - C100536 * C2272 +
            C152775 * C2278 + C100534 * C1535 - C100535 * C1525 -
            C100534 * C1536 + C100532 * C1549) *
               C152696 * C51246 +
           (C100536 * C2269 - C100537 * C2265 - C100536 * C2270 +
            C152775 * C2277 + C100534 * C1537 - C100535 * C1526 -
            C100534 * C1538 + C100532 * C1550) *
               C152696 * C51245) *
              C152530 * C1520 +
          ((C100534 * C1539 - C100535 * C1527 - C100534 * C1540 +
            C100532 * C1551 + C100536 * C8189 - C100537 * C8180 -
            C100536 * C8190 + C152775 * C8198) *
               C152696 * C51245 +
           (C100534 * C1541 - C100535 * C1528 - C100534 * C1542 +
            C100532 * C1552 + C100536 * C8187 - C100537 * C8179 -
            C100536 * C8188 + C152775 * C8197) *
               C152696 * C51246 +
           (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
            C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
            C100536 * C8729 + C152775 * C8730) *
               C152696 * C51247) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C6338 +
           (C100534 * C386 - C100535 * C371 - C100534 * C387 + C100532 * C407 +
            C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
            C152775 * C1245) *
               C6339 +
           (C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
            C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
            C152775 * C1744) *
               C6340) *
              C152457 * C152530 * C152512 * C129 -
          ((C100910 + C100909) * C6340 + (C100907 + C100908) * C6339 +
           (C100600 + C100599) * C6338) *
              C152457 * C152530 * C152512 * C130 +
          (C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
              C152457 * C152530 * C152512 * C131 -
          ((C100915 + C100916) * C6340 + (C100914 + C100913) * C6339 +
           C100610 * C6338) *
              C152457 * C152530 * C152512 * C132 +
          (C100611 * C6338 + (C101436 + C101435) * C6339 +
           (C100534 * C398 - C100535 * C377 - C100534 * C399 + C100532 * C413 +
            C100536 * C2108 - C100537 * C2107 - C100536 * C2109 +
            C152775 * C2110) *
               C6340) *
              C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C152917 -
           ((C109374 + C109375) * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C152901 +
           (C109376 * C6338 + (C109375 + C109374) * C6339 +
            (C100534 * C1539 - C100535 * C1527 - C100534 * C1540 +
             C100532 * C1551 + C100536 * C8189 - C100537 * C8180 -
             C100536 * C8190 + C152775 * C8198) *
                C6340) *
               C152457 * C152530 * C152870) *
              C365 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            (C102760 + C102759) * C6340) *
               C152457 * C152530 * C152901 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C152917 -
           ((C100536 * C8187 - C100537 * C8179 - C100536 * C8188 +
             C152775 * C8197 + C100534 * C1541 - C100535 * C1528 -
             C100534 * C1542 + C100532 * C1552) *
                C6340 +
            (C102759 + C102760) * C6339 + C109357 * C6338) *
               C152457 * C152530 * C152870) *
              C366 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152530 * C152917 -
           ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
            C100917 * C6338) *
               C152457 * C152530 * C152901 +
           (C100918 * C6338 + (C102758 + C102757) * C6339 +
            (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
             C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
             C100536 * C8729 + C152775 * C8730) *
                C6340) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C1429 -
           ((C109374 + C109375) * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C1430 +
           (C109376 * C6338 + (C109375 + C109374) * C6339 +
            (C100534 * C1539 - C100535 * C1527 - C100534 * C1540 +
             C100532 * C1551 + C100536 * C8189 - C100537 * C8180 -
             C100536 * C8190 + C152775 * C8198) *
                C6340) *
               C152457 * C152530 * C152870) *
              C152914 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            (C102760 + C102759) * C6340) *
               C152457 * C152530 * C1430 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C1429 -
           ((C100536 * C8187 - C100537 * C8179 - C100536 * C8188 +
             C152775 * C8197 + C100534 * C1541 - C100535 * C1528 -
             C100534 * C1542 + C100532 * C1552) *
                C6340 +
            (C102759 + C102760) * C6339 + C109357 * C6338) *
               C152457 * C152530 * C152870) *
              C152897 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152530 * C1429 -
           ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
            C100917 * C6338) *
               C152457 * C152530 * C1430 +
           (C100918 * C6338 + (C102758 + C102757) * C6339 +
            (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
             C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
             C100536 * C8729 + C152775 * C8730) *
                C6340) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C6338 +
           (C109370 + C109371) * C6339 + C109376 * C6340) *
              C152457 * C152530 * C1517 -
          (C110641 * C6340 + (C109373 + C109372) * C6339 +
           (C109371 + C109370) * C6338) *
              C152457 * C152530 * C1518 +
          (C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
              C152457 * C152530 * C1519 -
          ((C110668 + C110669) * C6340 + (C110667 + C110666) * C6339 +
           C110641 * C6338) *
              C152457 * C152530 * C1520 +
          (C110670 * C6338 + (C110669 + C110668) * C6339 +
           (C100534 * C7930 - C100535 * C7924 - C100534 * C7931 +
            C100532 * C7936 + C100536 * C61016 - C100537 * C61015 -
            C100536 * C61017 + C152775 * C61018) *
               C6340) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
           C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
           C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
           C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
           C117460 * C2690) *
              C152696 * C152457 * C152530 * C152512 * C129 -
          (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
           C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
           C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
           C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
           C117457 * C161) *
              C152696 * C152457 * C152530 * C152512 * C130 +
          (C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
           C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
           C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
           C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
           C117460 * C2688) *
              C152696 * C152457 * C152530 * C152512 * C131 -
          (C117467 * C2671 - C117468 * C2663 - C117467 * C2672 +
           C117460 * C2687 + C117465 * C655 - C117466 * C636 - C117465 * C656 +
           C117459 * C672 + C117463 * C641 - C117464 * C629 - C117463 * C642 +
           C117458 * C665 + C117461 * C150 - C117462 * C139 - C117461 * C151 +
           C117457 * C163) *
              C152696 * C152457 * C152530 * C152512 * C132 +
          (C117461 * C152 - C117462 * C140 - C117461 * C153 + C117457 * C164 +
           C117463 * C657 - C117464 * C637 - C117463 * C658 + C117458 * C673 +
           C117465 * C659 - C117466 * C638 - C117465 * C660 + C117459 * C674 +
           C117467 * C3052 - C117468 * C3051 - C117467 * C3053 +
           C117460 * C3054) *
              C152696 * C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152530 * C152917 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C152530 * C152901 +
           (C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
            C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
            C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
            C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
            C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
               C152696 * C152457 * C152530 * C152870) *
              C365 +
          ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
            C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
            C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
            C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
            C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
               C152696 * C152457 * C152530 * C152901 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C152530 * C152917 -
           (C117467 * C9514 - C117468 * C9508 - C117467 * C9515 +
            C117460 * C9526 + C117465 * C1731 - C117466 * C1710 -
            C117465 * C1732 + C117459 * C1746 + C117463 * C1725 -
            C117464 * C1707 - C117463 * C1726 + C117458 * C1743 +
            C117461 * C390 - C117462 * C373 - C117461 * C391 + C117457 * C409) *
               C152696 * C152457 * C152530 * C152870) *
              C366 +
          ((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
            C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
            C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
            C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
            C117460 * C2688) *
               C152696 * C152457 * C152530 * C152917 -
           (C117467 * C3217 - C117468 * C3211 - C117467 * C3218 +
            C117460 * C3223 + C117465 * C1715 - C117466 * C1702 -
            C117465 * C1716 + C117459 * C1738 + C117463 * C1237 -
            C117464 * C1229 - C117463 * C1238 + C117458 * C1247 +
            C117461 * C382 - C117462 * C369 - C117461 * C383 + C117457 * C405) *
               C152696 * C152457 * C152530 * C152901 +
           (C117461 * C392 - C117462 * C374 - C117461 * C393 + C117457 * C410 +
            C117463 * C1723 - C117464 * C1706 - C117463 * C1724 +
            C117458 * C1742 + C117465 * C1733 - C117466 * C1711 -
            C117465 * C1734 + C117459 * C1747 + C117467 * C10024 -
            C117468 * C10023 - C117467 * C10025 + C117460 * C10026) *
               C152696 * C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
            C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
            C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
            C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
            C117460 * C2690) *
               C152696 * C152457 * C152530 * C1429 -
           (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
            C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
            C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
            C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
            C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
               C152696 * C152457 * C152530 * C1430 +
           (C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
            C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
            C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
            C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
            C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
               C152696 * C152457 * C152530 * C152870) *
              C152914 +
          ((C117461 * C384 - C117462 * C370 - C117461 * C385 + C117457 * C406 +
            C117463 * C1235 - C117464 * C1228 - C117463 * C1236 +
            C117458 * C1246 + C117465 * C1717 - C117466 * C1703 -
            C117465 * C1718 + C117459 * C1739 + C117467 * C3215 -
            C117468 * C3210 - C117467 * C3216 + C117460 * C3222) *
               C152696 * C152457 * C152530 * C1430 -
           (C117467 * C2675 - C117468 * C2665 - C117467 * C2676 +
            C117460 * C2689 + C117465 * C651 - C117466 * C634 - C117465 * C652 +
            C117459 * C670 + C117463 * C645 - C117464 * C631 - C117463 * C646 +
            C117458 * C667 + C117461 * C146 - C117462 * C137 - C117461 * C147 +
            C117457 * C161) *
               C152696 * C152457 * C152530 * C1429 -
           (C117467 * C9514 - C117468 * C9508 - C117467 * C9515 +
            C117460 * C9526 + C117465 * C1731 - C117466 * C1710 -
            C117465 * C1732 + C117459 * C1746 + C117463 * C1725 -
            C117464 * C1707 - C117463 * C1726 + C117458 * C1743 +
            C117461 * C390 - C117462 * C373 - C117461 * C391 + C117457 * C409) *
               C152696 * C152457 * C152530 * C152870) *
              C152897 +
          ((C117461 * C148 - C117462 * C138 - C117461 * C149 + C117457 * C162 +
            C117463 * C643 - C117464 * C630 - C117463 * C644 + C117458 * C666 +
            C117465 * C653 - C117466 * C635 - C117465 * C654 + C117459 * C671 +
            C117467 * C2673 - C117468 * C2664 - C117467 * C2674 +
            C117460 * C2688) *
               C152696 * C152457 * C152530 * C1429 -
           (C117467 * C3217 - C117468 * C3211 - C117467 * C3218 +
            C117460 * C3223 + C117465 * C1715 - C117466 * C1702 -
            C117465 * C1716 + C117459 * C1738 + C117463 * C1237 -
            C117464 * C1229 - C117463 * C1238 + C117458 * C1247 +
            C117461 * C382 - C117462 * C369 - C117461 * C383 + C117457 * C405) *
               C152696 * C152457 * C152530 * C1430 +
           (C117461 * C392 - C117462 * C374 - C117461 * C393 + C117457 * C410 +
            C117463 * C1723 - C117464 * C1706 - C117463 * C1724 +
            C117458 * C1742 + C117465 * C1733 - C117466 * C1711 -
            C117465 * C1734 + C117459 * C1747 + C117467 * C10024 -
            C117468 * C10023 - C117467 * C10025 + C117460 * C10026) *
               C152696 * C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C117461 * C144 - C117462 * C136 - C117461 * C145 + C117457 * C160 +
           C117463 * C647 - C117464 * C632 - C117463 * C648 + C117458 * C668 +
           C117465 * C649 - C117466 * C633 - C117465 * C650 + C117459 * C669 +
           C117467 * C2677 - C117468 * C2666 - C117467 * C2678 +
           C117460 * C2690) *
              C152696 * C152457 * C152530 * C1517 -
          (C117467 * C3213 - C117468 * C3209 - C117467 * C3214 +
           C117460 * C3221 + C117465 * C1719 - C117466 * C1704 -
           C117465 * C1720 + C117459 * C1740 + C117463 * C1233 -
           C117464 * C1227 - C117463 * C1234 + C117458 * C1245 +
           C117461 * C386 - C117462 * C371 - C117461 * C387 + C117457 * C407) *
              C152696 * C152457 * C152530 * C1518 +
          (C117461 * C388 - C117462 * C372 - C117461 * C389 + C117457 * C408 +
           C117463 * C1727 - C117464 * C1708 - C117463 * C1728 +
           C117458 * C1744 + C117465 * C1729 - C117466 * C1709 -
           C117465 * C1730 + C117459 * C1745 + C117467 * C9516 -
           C117468 * C9509 - C117467 * C9517 + C117460 * C9527) *
              C152696 * C152457 * C152530 * C1519 -
          (C117467 * C10240 - C117468 * C10238 - C117467 * C10241 +
           C117460 * C10244 + C117465 * C8185 - C117466 * C8178 -
           C117465 * C8186 + C117459 * C8196 + C117463 * C2269 -
           C117464 * C2265 - C117463 * C2270 + C117458 * C2277 +
           C117461 * C1537 - C117462 * C1526 - C117461 * C1538 +
           C117457 * C1550) *
              C152696 * C152457 * C152530 * C1520 +
          (C117461 * C1539 - C117462 * C1527 - C117461 * C1540 +
           C117457 * C1551 + C117463 * C8189 - C117464 * C8180 -
           C117463 * C8190 + C117458 * C8198 + C117465 * C8191 -
           C117466 * C8181 - C117465 * C8192 + C117459 * C8199 +
           C117467 * C61859 - C117468 * C61858 - C117467 * C61860 +
           C117460 * C61861) *
              C152696 * C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[325] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152696 * C152807 +
                     (C133894 + C133895 + C133896) * C152696 * C152462) *
                        C152530 * C152571 -
                    ((C134196 + C134197 + C134198) * C152696 * C152462 +
                     (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                      C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                      C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                      C133816 * C371 - C133815 * C387 + C152912 * C407) *
                         C152696 * C152807) *
                        C152530 * C152578 +
                    ((C133815 * C388 - C133816 * C372 - C133815 * C389 +
                      C152912 * C408 + C133817 * C1727 - C133818 * C1708 -
                      C133817 * C1728 + C152913 * C1744 + C133819 * C1729 -
                      C133820 * C1709 - C133819 * C1730 + C133814 * C1745) *
                         C152696 * C152807 +
                     (C134199 + C134200 + C134201) * C152696 * C152462) *
                        C152530 * C3839) *
                       C152489 +
                   (((C134198 + C134197 + C134196) * C152696 * C152807 +
                     (C134202 + C134203 + C134204) * C152696 * C152462) *
                        C152530 * C152578 -
                    ((C133897 + C133898 + C133899) * C152696 * C152462 +
                     (C133896 + C133895 + C133894) * C152696 * C152807) *
                        C152530 * C152571 -
                    ((C134205 + C134206 + C134207) * C152696 * C152462 +
                     (C134201 + C134200 + C134199) * C152696 * C152807) *
                        C152530 * C3839) *
                       C152498 +
                   (((C133899 + C133898 + C133897) * C152696 * C152807 +
                     (C133900 + C133901 + C133902) * C152696 * C152462) *
                        C152530 * C152571 -
                    ((C134722 + C134723 + C134724) * C152696 * C152462 +
                     (C134204 + C134203 + C134202) * C152696 * C152807) *
                        C152530 * C152578 +
                    ((C134207 + C134206 + C134205) * C152696 * C152807 +
                     (C133815 * C394 - C133816 * C375 - C133815 * C395 +
                      C152912 * C411 + C133817 * C1721 - C133818 * C1705 -
                      C133817 * C1722 + C152913 * C1741 + C133819 * C1735 -
                      C133820 * C1712 - C133819 * C1736 + C133814 * C1748) *
                         C152696 * C152462) *
                        C152530 * C3839) *
                       C3842)) /
                 (p * q * std::sqrt(p + q));
    d2ee[326] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152696 * C152807 +
                      (C133894 + C133895 + C133896) * C152696 * C152462) *
                         C152829 -
                     ((C134498 + C134499 + C134500) * C152696 * C152462 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152696 * C152807) *
                         C152617) *
                        C152571 +
                    (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
                       C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
                       C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
                       C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                          C152696 * C152807 +
                      (C135266 + C135267 + C135268) * C152696 * C152462) *
                         C152617 -
                     ((C134196 + C134197 + C134198) * C152696 * C152462 +
                      (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                       C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                       C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                       C133816 * C371 - C133815 * C387 + C152912 * C407) *
                          C152696 * C152807) *
                         C152829) *
                        C152578 +
                    (((C133815 * C388 - C133816 * C372 - C133815 * C389 +
                       C152912 * C408 + C133817 * C1727 - C133818 * C1708 -
                       C133817 * C1728 + C152913 * C1744 + C133819 * C1729 -
                       C133820 * C1709 - C133819 * C1730 + C133814 * C1745) *
                          C152696 * C152807 +
                      (C134199 + C134200 + C134201) * C152696 * C152462) *
                         C152829 -
                     ((C136353 + C136354 + C136355) * C152696 * C152462 +
                      (C133819 * C9516 - C133820 * C9509 - C133819 * C9517 +
                       C133814 * C9527 + C133817 * C1729 - C133818 * C1709 -
                       C133817 * C1730 + C152913 * C1745 + C133815 * C1727 -
                       C133816 * C1708 - C133815 * C1728 + C152912 * C1744) *
                          C152696 * C152807) *
                         C152617) *
                        C3839) *
                       C3495 +
                   ((((C134500 + C134499 + C134498) * C152696 * C152807 +
                      (C134504 + C134505 + C134506) * C152696 * C152462) *
                         C152617 -
                     ((C133897 + C133898 + C133899) * C152696 * C152462 +
                      (C133896 + C133895 + C133894) * C152696 * C152807) *
                         C152829) *
                        C152571 +
                    (((C134198 + C134197 + C134196) * C152696 * C152807 +
                      (C134202 + C134203 + C134204) * C152696 * C152462) *
                         C152829 -
                     ((C135269 + C135270 + C135271) * C152696 * C152462 +
                      (C135268 + C135267 + C135266) * C152696 * C152807) *
                         C152617) *
                        C152578 +
                    (((C136355 + C136354 + C136353) * C152696 * C152807 +
                      (C133815 * C1723 - C133816 * C1706 - C133815 * C1724 +
                       C152912 * C1742 + C133817 * C1733 - C133818 * C1711 -
                       C133817 * C1734 + C152913 * C1747 + C133819 * C10024 -
                       C133820 * C10023 - C133819 * C10025 + C133814 * C10026) *
                          C152696 * C152462) *
                         C152617 -
                     ((C134205 + C134206 + C134207) * C152696 * C152462 +
                      (C134201 + C134200 + C134199) * C152696 * C152807) *
                         C152829) *
                        C3839) *
                       C152495)) /
                 (p * q * std::sqrt(p + q));
    d2ee[327] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152696 * C152807 +
                     (C133894 + C133895 + C133896) * C152696 * C152462) *
                        C152530 * C152924 -
                    ((C134196 + C134197 + C134198) * C152696 * C152462 +
                     (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                      C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                      C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                      C133816 * C371 - C133815 * C387 + C152912 * C407) *
                         C152696 * C152807) *
                        C152530 * C152920 +
                    ((C133815 * C388 - C133816 * C372 - C133815 * C389 +
                      C152912 * C408 + C133817 * C1727 - C133818 * C1708 -
                      C133817 * C1728 + C152913 * C1744 + C133819 * C1729 -
                      C133820 * C1709 - C133819 * C1730 + C133814 * C1745) *
                         C152696 * C152807 +
                     (C134199 + C134200 + C134201) * C152696 * C152462) *
                        C152530 * C152906 -
                    ((C136042 + C136043 + C136044) * C152696 * C152462 +
                     (C133819 * C8185 - C133820 * C8178 - C133819 * C8186 +
                      C133814 * C8196 + C133817 * C2269 - C133818 * C2265 -
                      C133817 * C2270 + C152913 * C2277 + C133815 * C1537 -
                      C133816 * C1526 - C133815 * C1538 + C152912 * C1550) *
                         C152696 * C152807) *
                        C152530 * C152880) *
                       C3495 +
                   (((C134198 + C134197 + C134196) * C152696 * C152807 +
                     (C134202 + C134203 + C134204) * C152696 * C152462) *
                        C152530 * C152920 -
                    ((C133897 + C133898 + C133899) * C152696 * C152462 +
                     (C133896 + C133895 + C133894) * C152696 * C152807) *
                        C152530 * C152924 -
                    ((C134205 + C134206 + C134207) * C152696 * C152462 +
                     (C134201 + C134200 + C134199) * C152696 * C152807) *
                        C152530 * C152906 +
                    ((C136044 + C136043 + C136042) * C152696 * C152807 +
                     (C133815 * C1533 - C133816 * C1524 - C133815 * C1534 +
                      C152912 * C1548 + C133817 * C2273 - C133818 * C2267 -
                      C133817 * C2274 + C152913 * C2279 + C133819 * C9823 -
                      C133820 * C9822 - C133819 * C9824 + C133814 * C9825) *
                         C152696 * C152462) *
                        C152530 * C152880) *
                       C152495)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152696 * C152807 +
                     (C133894 + C133895 + C133896) * C152696 * C152462) *
                        C152530 * C3355 -
                    ((C134196 + C134197 + C134198) * C152696 * C152462 +
                     (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                      C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                      C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                      C133816 * C371 - C133815 * C387 + C152912 * C407) *
                         C152696 * C152807) *
                        C152530 * C152575) *
                       C152923 +
                   (((C134198 + C134197 + C134196) * C152696 * C152807 +
                     (C134202 + C134203 + C134204) * C152696 * C152462) *
                        C152530 * C152575 -
                    ((C133897 + C133898 + C133899) * C152696 * C152462 +
                     (C133896 + C133895 + C133894) * C152696 * C152807) *
                        C152530 * C3355) *
                       C152916 +
                   (((C133899 + C133898 + C133897) * C152696 * C152807 +
                     (C133900 + C133901 + C133902) * C152696 * C152462) *
                        C152530 * C3355 -
                    ((C134722 + C134723 + C134724) * C152696 * C152462 +
                     (C134204 + C134203 + C134202) * C152696 * C152807) *
                        C152530 * C152575) *
                       C152899 +
                   (((C134724 + C134723 + C134722) * C152696 * C152807 +
                     (C133815 * C396 - C133816 * C376 - C133815 * C397 +
                      C152912 * C412 + C133817 * C1241 - C133818 * C1231 -
                      C133817 * C1242 + C152913 * C1249 + C133819 * C2890 -
                      C133820 * C2889 - C133819 * C2891 + C133814 * C2892) *
                         C152696 * C152462) *
                        C152530 * C152575 -
                    ((C133903 + C133904 + C133905) * C152696 * C152462 +
                     (C133902 + C133901 + C133900) * C152696 * C152807) *
                        C152530 * C3355) *
                       C152874)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152696 * C152807 +
                      (C133894 + C133895 + C133896) * C152696 * C152462) *
                         C152918 -
                     ((C134498 + C134499 + C134500) * C152696 * C152462 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152696 * C152807) *
                         C152903 +
                     ((C133815 * C649 - C133816 * C633 - C133815 * C650 +
                       C152912 * C669 + C133817 * C2677 - C133818 * C2666 -
                       C133817 * C2678 + C152913 * C2690 + C133819 * C2679 -
                       C133820 * C2667 - C133819 * C2680 + C133814 * C2691) *
                          C152696 * C152807 +
                      (C134501 + C134502 + C134503) * C152696 * C152462) *
                         C152873) *
                        C3355 +
                    (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
                       C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
                       C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
                       C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                          C152696 * C152807 +
                      (C135266 + C135267 + C135268) * C152696 * C152462) *
                         C152903 -
                     ((C134196 + C134197 + C134198) * C152696 * C152462 +
                      (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                       C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                       C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                       C133816 * C371 - C133815 * C387 + C152912 * C407) *
                          C152696 * C152807) *
                         C152918 -
                     ((C137416 + C137417 + C137418) * C152696 * C152462 +
                      (C133819 * C9518 - C133820 * C9510 - C133819 * C9519 +
                       C133814 * C9528 + C133817 * C3213 - C133818 * C3209 -
                       C133817 * C3214 + C152913 * C3221 + C133815 * C1719 -
                       C133816 * C1704 - C133815 * C1720 + C152912 * C1740) *
                          C152696 * C152807) *
                         C152873) *
                        C152575) *
                       C3495 +
                   ((((C134500 + C134499 + C134498) * C152696 * C152807 +
                      (C134504 + C134505 + C134506) * C152696 * C152462) *
                         C152903 -
                     ((C133897 + C133898 + C133899) * C152696 * C152462 +
                      (C133896 + C133895 + C133894) * C152696 * C152807) *
                         C152918 -
                     ((C134507 + C134508 + C134509) * C152696 * C152462 +
                      (C134503 + C134502 + C134501) * C152696 * C152807) *
                         C152873) *
                        C3355 +
                    (((C134198 + C134197 + C134196) * C152696 * C152807 +
                      (C134202 + C134203 + C134204) * C152696 * C152462) *
                         C152918 -
                     ((C135269 + C135270 + C135271) * C152696 * C152462 +
                      (C135268 + C135267 + C135266) * C152696 * C152807) *
                         C152903 +
                     ((C137418 + C137417 + C137416) * C152696 * C152807 +
                      (C133815 * C1715 - C133816 * C1702 - C133815 * C1716 +
                       C152912 * C1738 + C133817 * C3217 - C133818 * C3211 -
                       C133817 * C3218 + C152913 * C3223 + C133819 * C18412 -
                       C133820 * C18411 - C133819 * C18413 + C133814 * C18414) *
                          C152696 * C152462) *
                         C152873) *
                        C152575) *
                       C152495)) /
                     (p * q * std::sqrt(p + q));
    d2ee[328] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152696 * C152807 +
                      (C133894 + C133895 + C133896) * C152696 * C152462) *
                         C152829 -
                     ((C134498 + C134499 + C134500) * C152696 * C152462 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152696 * C152807) *
                         C152617) *
                        C3355 +
                    (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
                       C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
                       C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
                       C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                          C152696 * C152807 +
                      (C135266 + C135267 + C135268) * C152696 * C152462) *
                         C152617 -
                     ((C134196 + C134197 + C134198) * C152696 * C152462 +
                      (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                       C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                       C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                       C133816 * C371 - C133815 * C387 + C152912 * C407) *
                          C152696 * C152807) *
                         C152829) *
                        C152575) *
                       C152489 +
                   ((((C134500 + C134499 + C134498) * C152696 * C152807 +
                      (C134504 + C134505 + C134506) * C152696 * C152462) *
                         C152617 -
                     ((C133897 + C133898 + C133899) * C152696 * C152462 +
                      (C133896 + C133895 + C133894) * C152696 * C152807) *
                         C152829) *
                        C3355 +
                    (((C134198 + C134197 + C134196) * C152696 * C152807 +
                      (C134202 + C134203 + C134204) * C152696 * C152462) *
                         C152829 -
                     ((C135269 + C135270 + C135271) * C152696 * C152462 +
                      (C135268 + C135267 + C135266) * C152696 * C152807) *
                         C152617) *
                        C152575) *
                       C152498 +
                   ((((C133899 + C133898 + C133897) * C152696 * C152807 +
                      (C133900 + C133901 + C133902) * C152696 * C152462) *
                         C152829 -
                     ((C134937 + C134938 + C134939) * C152696 * C152462 +
                      (C134506 + C134505 + C134504) * C152696 * C152807) *
                         C152617) *
                        C3355 +
                    (((C135271 + C135270 + C135269) * C152696 * C152807 +
                      (C133815 * C1239 - C133816 * C1230 - C133815 * C1240 +
                       C152912 * C1248 + C133817 * C1713 - C133818 * C1701 -
                       C133817 * C1714 + C152913 * C1737 + C133819 * C3219 -
                       C133820 * C3212 - C133819 * C3220 + C133814 * C3224) *
                          C152696 * C152462) *
                         C152617 -
                     ((C134722 + C134723 + C134724) * C152696 * C152462 +
                      (C134204 + C134203 + C134202) * C152696 * C152807) *
                         C152829) *
                        C152575) *
                       C3842)) /
                 (p * q * std::sqrt(p + q));
    d2ee[329] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152696 * C152807 +
                     (C133894 + C133895 + C133896) * C152696 * C152462) *
                        C152530 * C3355 -
                    ((C134196 + C134197 + C134198) * C152696 * C152462 +
                     (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                      C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                      C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                      C133816 * C371 - C133815 * C387 + C152912 * C407) *
                         C152696 * C152807) *
                        C152530 * C152575) *
                       C152923 +
                   (((C134198 + C134197 + C134196) * C152696 * C152807 +
                     (C134202 + C134203 + C134204) * C152696 * C152462) *
                        C152530 * C152575 -
                    ((C133897 + C133898 + C133899) * C152696 * C152462 +
                     (C133896 + C133895 + C133894) * C152696 * C152807) *
                        C152530 * C3355) *
                       C152916 +
                   (((C133899 + C133898 + C133897) * C152696 * C152807 +
                     (C133900 + C133901 + C133902) * C152696 * C152462) *
                        C152530 * C3355 -
                    ((C134722 + C134723 + C134724) * C152696 * C152462 +
                     (C134204 + C134203 + C134202) * C152696 * C152807) *
                        C152530 * C152575) *
                       C152899 +
                   (((C134724 + C134723 + C134722) * C152696 * C152807 +
                     (C133815 * C396 - C133816 * C376 - C133815 * C397 +
                      C152912 * C412 + C133817 * C1241 - C133818 * C1231 -
                      C133817 * C1242 + C152913 * C1249 + C133819 * C2890 -
                      C133820 * C2889 - C133819 * C2891 + C133814 * C2892) *
                         C152696 * C152462) *
                        C152530 * C152575 -
                    ((C133903 + C133904 + C133905) * C152696 * C152462 +
                     (C133902 + C133901 + C133900) * C152696 * C152807) *
                        C152530 * C3355) *
                       C152874)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152696 * C152807 +
                     (C133894 + C133895 + C133896) * C152696 * C152462) *
                        C152530 * C152924 -
                    ((C134196 + C134197 + C134198) * C152696 * C152462 +
                     (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                      C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                      C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                      C133816 * C371 - C133815 * C387 + C152912 * C407) *
                         C152696 * C152807) *
                        C152530 * C152920 +
                    ((C133815 * C388 - C133816 * C372 - C133815 * C389 +
                      C152912 * C408 + C133817 * C1727 - C133818 * C1708 -
                      C133817 * C1728 + C152913 * C1744 + C133819 * C1729 -
                      C133820 * C1709 - C133819 * C1730 + C133814 * C1745) *
                         C152696 * C152807 +
                     (C134199 + C134200 + C134201) * C152696 * C152462) *
                        C152530 * C152906 -
                    ((C136042 + C136043 + C136044) * C152696 * C152462 +
                     (C133819 * C8185 - C133820 * C8178 - C133819 * C8186 +
                      C133814 * C8196 + C133817 * C2269 - C133818 * C2265 -
                      C133817 * C2270 + C152913 * C2277 + C133815 * C1537 -
                      C133816 * C1526 - C133815 * C1538 + C152912 * C1550) *
                         C152696 * C152807) *
                        C152530 * C152880) *
                       C3495 +
                   (((C134198 + C134197 + C134196) * C152696 * C152807 +
                     (C134202 + C134203 + C134204) * C152696 * C152462) *
                        C152530 * C152920 -
                    ((C133897 + C133898 + C133899) * C152696 * C152462 +
                     (C133896 + C133895 + C133894) * C152696 * C152807) *
                        C152530 * C152924 -
                    ((C134205 + C134206 + C134207) * C152696 * C152462 +
                     (C134201 + C134200 + C134199) * C152696 * C152807) *
                        C152530 * C152906 +
                    ((C136044 + C136043 + C136042) * C152696 * C152807 +
                     (C133815 * C1533 - C133816 * C1524 - C133815 * C1534 +
                      C152912 * C1548 + C133817 * C2273 - C133818 * C2267 -
                      C133817 * C2274 + C152913 * C2279 + C133819 * C9823 -
                      C133820 * C9822 - C133819 * C9824 + C133814 * C9825) *
                         C152696 * C152462) *
                        C152530 * C152880) *
                       C152495)) /
                     (p * q * std::sqrt(p + q));
    d2ee[330] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152696 * C152807 +
                      (C133894 + C133895 + C133896) * C152696 * C152462) *
                         C4361 -
                     ((C134498 + C134499 + C134500) * C152696 * C152462 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152696 * C152807) *
                         C152617) *
                        C152571 +
                    (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
                       C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
                       C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
                       C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                          C152696 * C152807 +
                      (C135266 + C135267 + C135268) * C152696 * C152462) *
                         C152617 -
                     ((C134196 + C134197 + C134198) * C152696 * C152462 +
                      (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                       C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                       C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                       C133816 * C371 - C133815 * C387 + C152912 * C407) *
                          C152696 * C152807) *
                         C4361) *
                        C152578 +
                    (((C133815 * C388 - C133816 * C372 - C133815 * C389 +
                       C152912 * C408 + C133817 * C1727 - C133818 * C1708 -
                       C133817 * C1728 + C152913 * C1744 + C133819 * C1729 -
                       C133820 * C1709 - C133819 * C1730 + C133814 * C1745) *
                          C152696 * C152807 +
                      (C134199 + C134200 + C134201) * C152696 * C152462) *
                         C4361 -
                     ((C136353 + C136354 + C136355) * C152696 * C152462 +
                      (C133819 * C9516 - C133820 * C9509 - C133819 * C9517 +
                       C133814 * C9527 + C133817 * C1729 - C133818 * C1709 -
                       C133817 * C1730 + C152913 * C1745 + C133815 * C1727 -
                       C133816 * C1708 - C133815 * C1728 + C152912 * C1744) *
                          C152696 * C152807) *
                         C152617) *
                        C3839) *
                       C152814 +
                   ((((C134500 + C134499 + C134498) * C152696 * C152807 +
                      (C134504 + C134505 + C134506) * C152696 * C152462) *
                         C152617 -
                     ((C133897 + C133898 + C133899) * C152696 * C152462 +
                      (C133896 + C133895 + C133894) * C152696 * C152807) *
                         C4361) *
                        C152571 +
                    (((C134198 + C134197 + C134196) * C152696 * C152807 +
                      (C134202 + C134203 + C134204) * C152696 * C152462) *
                         C4361 -
                     ((C135269 + C135270 + C135271) * C152696 * C152462 +
                      (C135268 + C135267 + C135266) * C152696 * C152807) *
                         C152617) *
                        C152578 +
                    (((C136355 + C136354 + C136353) * C152696 * C152807 +
                      (C133815 * C1723 - C133816 * C1706 - C133815 * C1724 +
                       C152912 * C1742 + C133817 * C1733 - C133818 * C1711 -
                       C133817 * C1734 + C152913 * C1747 + C133819 * C10024 -
                       C133820 * C10023 - C133819 * C10025 + C133814 * C10026) *
                          C152696 * C152462) *
                         C152617 -
                     ((C134205 + C134206 + C134207) * C152696 * C152462 +
                      (C134201 + C134200 + C134199) * C152696 * C152807) *
                         C4361) *
                        C3839) *
                       C152495)) /
                 (p * q * std::sqrt(p + q));
    d2ee[331] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152696 * C152807 +
                     (C133894 + C133895 + C133896) * C152696 * C152462) *
                        C152613 -
                    ((C134498 + C134499 + C134500) * C152696 * C152462 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152696 * C152807) *
                        C152620 +
                    ((C133815 * C649 - C133816 * C633 - C133815 * C650 +
                      C152912 * C669 + C133817 * C2677 - C133818 * C2666 -
                      C133817 * C2678 + C152913 * C2690 + C133819 * C2679 -
                      C133820 * C2667 - C133819 * C2680 + C133814 * C2691) *
                         C152696 * C152807 +
                     (C134501 + C134502 + C134503) * C152696 * C152462) *
                        C5033) *
                       C152571 +
                   (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
                      C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
                      C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
                      C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                         C152696 * C152807 +
                     (C135266 + C135267 + C135268) * C152696 * C152462) *
                        C152620 -
                    ((C134196 + C134197 + C134198) * C152696 * C152462 +
                     (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                      C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                      C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                      C133816 * C371 - C133815 * C387 + C152912 * C407) *
                         C152696 * C152807) *
                        C152613 -
                    ((C137416 + C137417 + C137418) * C152696 * C152462 +
                     (C133819 * C9518 - C133820 * C9510 - C133819 * C9519 +
                      C133814 * C9528 + C133817 * C3213 - C133818 * C3209 -
                      C133817 * C3214 + C152913 * C3221 + C133815 * C1719 -
                      C133816 * C1704 - C133815 * C1720 + C152912 * C1740) *
                         C152696 * C152807) *
                        C5033) *
                       C152578 +
                   (((C133815 * C388 - C133816 * C372 - C133815 * C389 +
                      C152912 * C408 + C133817 * C1727 - C133818 * C1708 -
                      C133817 * C1728 + C152913 * C1744 + C133819 * C1729 -
                      C133820 * C1709 - C133819 * C1730 + C133814 * C1745) *
                         C152696 * C152807 +
                     (C134199 + C134200 + C134201) * C152696 * C152462) *
                        C152613 -
                    ((C136353 + C136354 + C136355) * C152696 * C152462 +
                     (C133819 * C9516 - C133820 * C9509 - C133819 * C9517 +
                      C133814 * C9527 + C133817 * C1729 - C133818 * C1709 -
                      C133817 * C1730 + C152913 * C1745 + C133815 * C1727 -
                      C133816 * C1708 - C133815 * C1728 + C152912 * C1744) *
                         C152696 * C152807) *
                        C152620 +
                    ((C133815 * C1729 - C133816 * C1709 - C133815 * C1730 +
                      C152912 * C1745 + C133817 * C9516 - C133818 * C9509 -
                      C133817 * C9517 + C152913 * C9527 + C133819 * C9520 -
                      C133820 * C9511 - C133819 * C9521 + C133814 * C9529) *
                         C152696 * C152807 +
                     (C133815 * C1731 - C133816 * C1710 - C133815 * C1732 +
                      C152912 * C1746 + C133817 * C9514 - C133818 * C9508 -
                      C133817 * C9515 + C152913 * C9526 + C133819 * C9524 -
                      C133820 * C9513 - C133819 * C9525 + C133814 * C9531) *
                         C152696 * C152462) *
                        C5033) *
                       C3839) *
                  C152484) /
                 (p * q * std::sqrt(p + q));
    d2ee[332] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152696 * C152807 +
                     (C133894 + C133895 + C133896) * C152696 * C152462) *
                        C4361 -
                    ((C134498 + C134499 + C134500) * C152696 * C152462 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152696 * C152807) *
                        C152617) *
                       C152924 +
                   (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
                      C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
                      C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
                      C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                         C152696 * C152807 +
                     (C135266 + C135267 + C135268) * C152696 * C152462) *
                        C152617 -
                    ((C134196 + C134197 + C134198) * C152696 * C152462 +
                     (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                      C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                      C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                      C133816 * C371 - C133815 * C387 + C152912 * C407) *
                         C152696 * C152807) *
                        C4361) *
                       C152920 +
                   (((C133815 * C388 - C133816 * C372 - C133815 * C389 +
                      C152912 * C408 + C133817 * C1727 - C133818 * C1708 -
                      C133817 * C1728 + C152913 * C1744 + C133819 * C1729 -
                      C133820 * C1709 - C133819 * C1730 + C133814 * C1745) *
                         C152696 * C152807 +
                     (C134199 + C134200 + C134201) * C152696 * C152462) *
                        C4361 -
                    ((C136353 + C136354 + C136355) * C152696 * C152462 +
                     (C133819 * C9516 - C133820 * C9509 - C133819 * C9517 +
                      C133814 * C9527 + C133817 * C1729 - C133818 * C1709 -
                      C133817 * C1730 + C152913 * C1745 + C133815 * C1727 -
                      C133816 * C1708 - C133815 * C1728 + C152912 * C1744) *
                         C152696 * C152807) *
                        C152617) *
                       C152906 +
                   (((C133815 * C2269 - C133816 * C2265 - C133815 * C2270 +
                      C152912 * C2277 + C133817 * C8185 - C133818 * C8178 -
                      C133817 * C8186 + C152913 * C8196 + C133819 * C10240 -
                      C133820 * C10238 - C133819 * C10241 + C133814 * C10244) *
                         C152696 * C152807 +
                     (C133815 * C2271 - C133816 * C2266 - C133815 * C2272 +
                      C152912 * C2278 + C133817 * C8183 - C133818 * C8177 -
                      C133817 * C8184 + C152913 * C8195 + C133819 * C10242 -
                      C133820 * C10239 - C133819 * C10243 + C133814 * C10245) *
                         C152696 * C152462) *
                        C152617 -
                    ((C136042 + C136043 + C136044) * C152696 * C152462 +
                     (C133819 * C8185 - C133820 * C8178 - C133819 * C8186 +
                      C133814 * C8196 + C133817 * C2269 - C133818 * C2265 -
                      C133817 * C2270 + C152913 * C2277 + C133815 * C1537 -
                      C133816 * C1526 - C133815 * C1538 + C152912 * C1550) *
                         C152696 * C152807) *
                        C4361) *
                       C152880) *
                  C152484) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152696 * C152807 +
                      (C133894 + C133895 + C133896) * C152696 * C152462) *
                         C4361 -
                     ((C134498 + C134499 + C134500) * C152696 * C152462 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152696 * C152807) *
                         C152617) *
                        C3355 +
                    (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
                       C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
                       C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
                       C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                          C152696 * C152807 +
                      (C135266 + C135267 + C135268) * C152696 * C152462) *
                         C152617 -
                     ((C134196 + C134197 + C134198) * C152696 * C152462 +
                      (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                       C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                       C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                       C133816 * C371 - C133815 * C387 + C152912 * C407) *
                          C152696 * C152807) *
                         C4361) *
                        C152575) *
                       C152914 +
                   ((((C134500 + C134499 + C134498) * C152696 * C152807 +
                      (C134504 + C134505 + C134506) * C152696 * C152462) *
                         C152617 -
                     ((C133897 + C133898 + C133899) * C152696 * C152462 +
                      (C133896 + C133895 + C133894) * C152696 * C152807) *
                         C4361) *
                        C3355 +
                    (((C134198 + C134197 + C134196) * C152696 * C152807 +
                      (C134202 + C134203 + C134204) * C152696 * C152462) *
                         C4361 -
                     ((C135269 + C135270 + C135271) * C152696 * C152462 +
                      (C135268 + C135267 + C135266) * C152696 * C152807) *
                         C152617) *
                        C152575) *
                       C152897 +
                   ((((C133899 + C133898 + C133897) * C152696 * C152807 +
                      (C133900 + C133901 + C133902) * C152696 * C152462) *
                         C4361 -
                     ((C134937 + C134938 + C134939) * C152696 * C152462 +
                      (C134506 + C134505 + C134504) * C152696 * C152807) *
                         C152617) *
                        C3355 +
                    (((C135271 + C135270 + C135269) * C152696 * C152807 +
                      (C133815 * C1239 - C133816 * C1230 - C133815 * C1240 +
                       C152912 * C1248 + C133817 * C1713 - C133818 * C1701 -
                       C133817 * C1714 + C152913 * C1737 + C133819 * C3219 -
                       C133820 * C3212 - C133819 * C3220 + C133814 * C3224) *
                          C152696 * C152462) *
                         C152617 -
                     ((C134722 + C134723 + C134724) * C152696 * C152462 +
                      (C134204 + C134203 + C134202) * C152696 * C152807) *
                         C4361) *
                        C152575) *
                       C152864)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152696 * C152807 +
                     (C133894 + C133895 + C133896) * C152696 * C152462) *
                        C152925 -
                    ((C134498 + C134499 + C134500) * C152696 * C152462 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152696 * C152807) *
                        C152922 +
                    ((C133815 * C649 - C133816 * C633 - C133815 * C650 +
                      C152912 * C669 + C133817 * C2677 - C133818 * C2666 -
                      C133817 * C2678 + C152913 * C2690 + C133819 * C2679 -
                      C133820 * C2667 - C133819 * C2680 + C133814 * C2691) *
                         C152696 * C152807 +
                     (C134501 + C134502 + C134503) * C152696 * C152462) *
                        C152909 -
                    ((C137631 + C137632 + C137633) * C152696 * C152462 +
                     (C133819 * C18111 - C133820 * C18106 - C133819 * C18112 +
                      C133814 * C18118 + C133817 * C2679 - C133818 * C2667 -
                      C133817 * C2680 + C152913 * C2691 + C133815 * C2677 -
                      C133816 * C2666 - C133815 * C2678 + C152912 * C2690) *
                         C152696 * C152807) *
                        C152886) *
                       C3355 +
                   (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
                      C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
                      C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
                      C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                         C152696 * C152807 +
                     (C135266 + C135267 + C135268) * C152696 * C152462) *
                        C152922 -
                    ((C134196 + C134197 + C134198) * C152696 * C152462 +
                     (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                      C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                      C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                      C133816 * C371 - C133815 * C387 + C152912 * C407) *
                         C152696 * C152807) *
                        C152925 -
                    ((C137416 + C137417 + C137418) * C152696 * C152462 +
                     (C133819 * C9518 - C133820 * C9510 - C133819 * C9519 +
                      C133814 * C9528 + C133817 * C3213 - C133818 * C3209 -
                      C133817 * C3214 + C152913 * C3221 + C133815 * C1719 -
                      C133816 * C1704 - C133815 * C1720 + C152912 * C1740) *
                         C152696 * C152807) *
                        C152909 +
                    ((C133815 * C3213 - C133816 * C3209 - C133815 * C3214 +
                      C152912 * C3221 + C133817 * C9518 - C133818 * C9510 -
                      C133817 * C9519 + C152913 * C9528 + C133819 * C18851 -
                      C133820 * C18849 - C133819 * C18852 + C133814 * C18855) *
                         C152696 * C152807 +
                     (C133815 * C3215 - C133816 * C3210 - C133815 * C3216 +
                      C152912 * C3222 + C133817 * C9522 - C133818 * C9512 -
                      C133817 * C9523 + C152913 * C9530 + C133819 * C18853 -
                      C133820 * C18850 - C133819 * C18854 + C133814 * C18856) *
                         C152696 * C152462) *
                        C152886) *
                       C152575) *
                  C152484) /
                     (p * q * std::sqrt(p + q));
    d2ee[333] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152696 * C152807 +
                      (C133894 + C133895 + C133896) * C152696 * C152462) *
                         C152613 -
                     ((C134498 + C134499 + C134500) * C152696 * C152462 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152696 * C152807) *
                         C152620 +
                     ((C133815 * C649 - C133816 * C633 - C133815 * C650 +
                       C152912 * C669 + C133817 * C2677 - C133818 * C2666 -
                       C133817 * C2678 + C152913 * C2690 + C133819 * C2679 -
                       C133820 * C2667 - C133819 * C2680 + C133814 * C2691) *
                          C152696 * C152807 +
                      (C134501 + C134502 + C134503) * C152696 * C152462) *
                         C5033) *
                        C3355 +
                    (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
                       C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
                       C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
                       C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                          C152696 * C152807 +
                      (C135266 + C135267 + C135268) * C152696 * C152462) *
                         C152620 -
                     ((C134196 + C134197 + C134198) * C152696 * C152462 +
                      (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                       C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                       C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                       C133816 * C371 - C133815 * C387 + C152912 * C407) *
                          C152696 * C152807) *
                         C152613 -
                     ((C137416 + C137417 + C137418) * C152696 * C152462 +
                      (C133819 * C9518 - C133820 * C9510 - C133819 * C9519 +
                       C133814 * C9528 + C133817 * C3213 - C133818 * C3209 -
                       C133817 * C3214 + C152913 * C3221 + C133815 * C1719 -
                       C133816 * C1704 - C133815 * C1720 + C152912 * C1740) *
                          C152696 * C152807) *
                         C5033) *
                        C152575) *
                       C152814 +
                   ((((C134500 + C134499 + C134498) * C152696 * C152807 +
                      (C134504 + C134505 + C134506) * C152696 * C152462) *
                         C152620 -
                     ((C133897 + C133898 + C133899) * C152696 * C152462 +
                      (C133896 + C133895 + C133894) * C152696 * C152807) *
                         C152613 -
                     ((C134507 + C134508 + C134509) * C152696 * C152462 +
                      (C134503 + C134502 + C134501) * C152696 * C152807) *
                         C5033) *
                        C3355 +
                    (((C134198 + C134197 + C134196) * C152696 * C152807 +
                      (C134202 + C134203 + C134204) * C152696 * C152462) *
                         C152613 -
                     ((C135269 + C135270 + C135271) * C152696 * C152462 +
                      (C135268 + C135267 + C135266) * C152696 * C152807) *
                         C152620 +
                     ((C137418 + C137417 + C137416) * C152696 * C152807 +
                      (C133815 * C1715 - C133816 * C1702 - C133815 * C1716 +
                       C152912 * C1738 + C133817 * C3217 - C133818 * C3211 -
                       C133817 * C3218 + C152913 * C3223 + C133819 * C18412 -
                       C133820 * C18411 - C133819 * C18413 + C133814 * C18414) *
                          C152696 * C152462) *
                         C5033) *
                        C152575) *
                       C152495)) /
                 (p * q * std::sqrt(p + q));
    d2ee[334] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152696 * C152807 +
                      (C133894 + C133895 + C133896) * C152696 * C152462) *
                         C4361 -
                     ((C134498 + C134499 + C134500) * C152696 * C152462 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152696 * C152807) *
                         C152617) *
                        C3355 +
                    (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
                       C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
                       C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
                       C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                          C152696 * C152807 +
                      (C135266 + C135267 + C135268) * C152696 * C152462) *
                         C152617 -
                     ((C134196 + C134197 + C134198) * C152696 * C152462 +
                      (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                       C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                       C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                       C133816 * C371 - C133815 * C387 + C152912 * C407) *
                          C152696 * C152807) *
                         C4361) *
                        C152575) *
                       C152914 +
                   ((((C134500 + C134499 + C134498) * C152696 * C152807 +
                      (C134504 + C134505 + C134506) * C152696 * C152462) *
                         C152617 -
                     ((C133897 + C133898 + C133899) * C152696 * C152462 +
                      (C133896 + C133895 + C133894) * C152696 * C152807) *
                         C4361) *
                        C3355 +
                    (((C134198 + C134197 + C134196) * C152696 * C152807 +
                      (C134202 + C134203 + C134204) * C152696 * C152462) *
                         C4361 -
                     ((C135269 + C135270 + C135271) * C152696 * C152462 +
                      (C135268 + C135267 + C135266) * C152696 * C152807) *
                         C152617) *
                        C152575) *
                       C152897 +
                   ((((C133899 + C133898 + C133897) * C152696 * C152807 +
                      (C133900 + C133901 + C133902) * C152696 * C152462) *
                         C4361 -
                     ((C134937 + C134938 + C134939) * C152696 * C152462 +
                      (C134506 + C134505 + C134504) * C152696 * C152807) *
                         C152617) *
                        C3355 +
                    (((C135271 + C135270 + C135269) * C152696 * C152807 +
                      (C133815 * C1239 - C133816 * C1230 - C133815 * C1240 +
                       C152912 * C1248 + C133817 * C1713 - C133818 * C1701 -
                       C133817 * C1714 + C152913 * C1737 + C133819 * C3219 -
                       C133820 * C3212 - C133819 * C3220 + C133814 * C3224) *
                          C152696 * C152462) *
                         C152617 -
                     ((C134722 + C134723 + C134724) * C152696 * C152462 +
                      (C134204 + C134203 + C134202) * C152696 * C152807) *
                         C4361) *
                        C152575) *
                       C152864)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152696 * C152807 +
                     (C133894 + C133895 + C133896) * C152696 * C152462) *
                        C4361 -
                    ((C134498 + C134499 + C134500) * C152696 * C152462 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152696 * C152807) *
                        C152617) *
                       C152924 +
                   (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
                      C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
                      C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
                      C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                         C152696 * C152807 +
                     (C135266 + C135267 + C135268) * C152696 * C152462) *
                        C152617 -
                    ((C134196 + C134197 + C134198) * C152696 * C152462 +
                     (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                      C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                      C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                      C133816 * C371 - C133815 * C387 + C152912 * C407) *
                         C152696 * C152807) *
                        C4361) *
                       C152920 +
                   (((C133815 * C388 - C133816 * C372 - C133815 * C389 +
                      C152912 * C408 + C133817 * C1727 - C133818 * C1708 -
                      C133817 * C1728 + C152913 * C1744 + C133819 * C1729 -
                      C133820 * C1709 - C133819 * C1730 + C133814 * C1745) *
                         C152696 * C152807 +
                     (C134199 + C134200 + C134201) * C152696 * C152462) *
                        C4361 -
                    ((C136353 + C136354 + C136355) * C152696 * C152462 +
                     (C133819 * C9516 - C133820 * C9509 - C133819 * C9517 +
                      C133814 * C9527 + C133817 * C1729 - C133818 * C1709 -
                      C133817 * C1730 + C152913 * C1745 + C133815 * C1727 -
                      C133816 * C1708 - C133815 * C1728 + C152912 * C1744) *
                         C152696 * C152807) *
                        C152617) *
                       C152906 +
                   (((C133815 * C2269 - C133816 * C2265 - C133815 * C2270 +
                      C152912 * C2277 + C133817 * C8185 - C133818 * C8178 -
                      C133817 * C8186 + C152913 * C8196 + C133819 * C10240 -
                      C133820 * C10238 - C133819 * C10241 + C133814 * C10244) *
                         C152696 * C152807 +
                     (C133815 * C2271 - C133816 * C2266 - C133815 * C2272 +
                      C152912 * C2278 + C133817 * C8183 - C133818 * C8177 -
                      C133817 * C8184 + C152913 * C8195 + C133819 * C10242 -
                      C133820 * C10239 - C133819 * C10243 + C133814 * C10245) *
                         C152696 * C152462) *
                        C152617 -
                    ((C136042 + C136043 + C136044) * C152696 * C152462 +
                     (C133819 * C8185 - C133820 * C8178 - C133819 * C8186 +
                      C133814 * C8196 + C133817 * C2269 - C133818 * C2265 -
                      C133817 * C2270 + C152913 * C2277 + C133815 * C1537 -
                      C133816 * C1526 - C133815 * C1538 + C152912 * C1550) *
                         C152696 * C152807) *
                        C4361) *
                       C152880) *
                  C152484) /
                     (p * q * std::sqrt(p + q));
    d2ee[335] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152696 * C152807 +
                     (C133894 + C133895 + C133896) * C152696 * C152462) *
                        C152530 * C1879 -
                    ((C134196 + C134197 + C134198) * C152696 * C152462 +
                     (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                      C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                      C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                      C133816 * C371 - C133815 * C387 + C152912 * C407) *
                         C152696 * C152807) *
                        C152530 * C1880 +
                    ((C133815 * C388 - C133816 * C372 - C133815 * C389 +
                      C152912 * C408 + C133817 * C1727 - C133818 * C1708 -
                      C133817 * C1728 + C152913 * C1744 + C133819 * C1729 -
                      C133820 * C1709 - C133819 * C1730 + C133814 * C1745) *
                         C152696 * C152807 +
                     (C134199 + C134200 + C134201) * C152696 * C152462) *
                        C152530 * C1881 -
                    ((C136042 + C136043 + C136044) * C152696 * C152462 +
                     (C133819 * C8185 - C133820 * C8178 - C133819 * C8186 +
                      C133814 * C8196 + C133817 * C2269 - C133818 * C2265 -
                      C133817 * C2270 + C152913 * C2277 + C133815 * C1537 -
                      C133816 * C1526 - C133815 * C1538 + C152912 * C1550) *
                         C152696 * C152807) *
                        C152530 * C152880) *
                       C152814 +
                   (((C134198 + C134197 + C134196) * C152696 * C152807 +
                     (C134202 + C134203 + C134204) * C152696 * C152462) *
                        C152530 * C1880 -
                    ((C133897 + C133898 + C133899) * C152696 * C152462 +
                     (C133896 + C133895 + C133894) * C152696 * C152807) *
                        C152530 * C1879 -
                    ((C134205 + C134206 + C134207) * C152696 * C152462 +
                     (C134201 + C134200 + C134199) * C152696 * C152807) *
                        C152530 * C1881 +
                    ((C136044 + C136043 + C136042) * C152696 * C152807 +
                     (C133815 * C1533 - C133816 * C1524 - C133815 * C1534 +
                      C152912 * C1548 + C133817 * C2273 - C133818 * C2267 -
                      C133817 * C2274 + C152913 * C2279 + C133819 * C9823 -
                      C133820 * C9822 - C133819 * C9824 + C133814 * C9825) *
                         C152696 * C152462) *
                        C152530 * C152880) *
                       C152495)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152696 * C152807 +
                     (C133894 + C133895 + C133896) * C152696 * C152462) *
                        C152530 * C152828 -
                    ((C134196 + C134197 + C134198) * C152696 * C152462 +
                     (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                      C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                      C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                      C133816 * C371 - C133815 * C387 + C152912 * C407) *
                         C152696 * C152807) *
                        C152530 * C152575) *
                       C873 +
                   (((C134198 + C134197 + C134196) * C152696 * C152807 +
                     (C134202 + C134203 + C134204) * C152696 * C152462) *
                        C152530 * C152575 -
                    ((C133897 + C133898 + C133899) * C152696 * C152462 +
                     (C133896 + C133895 + C133894) * C152696 * C152807) *
                        C152530 * C152828) *
                       C874 +
                   (((C133899 + C133898 + C133897) * C152696 * C152807 +
                     (C133900 + C133901 + C133902) * C152696 * C152462) *
                        C152530 * C152828 -
                    ((C134722 + C134723 + C134724) * C152696 * C152462 +
                     (C134204 + C134203 + C134202) * C152696 * C152807) *
                        C152530 * C152575) *
                       C875 +
                   (((C134724 + C134723 + C134722) * C152696 * C152807 +
                     (C133815 * C396 - C133816 * C376 - C133815 * C397 +
                      C152912 * C412 + C133817 * C1241 - C133818 * C1231 -
                      C133817 * C1242 + C152913 * C1249 + C133819 * C2890 -
                      C133820 * C2889 - C133819 * C2891 + C133814 * C2892) *
                         C152696 * C152462) *
                        C152530 * C152575 -
                    ((C133903 + C133904 + C133905) * C152696 * C152462 +
                     (C133902 + C133901 + C133900) * C152696 * C152807) *
                        C152530 * C152828) *
                       C152874)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152696 * C152807 +
                      (C133894 + C133895 + C133896) * C152696 * C152462) *
                         C2427 -
                     ((C134498 + C134499 + C134500) * C152696 * C152462 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152696 * C152807) *
                         C2428 +
                     ((C133815 * C649 - C133816 * C633 - C133815 * C650 +
                       C152912 * C669 + C133817 * C2677 - C133818 * C2666 -
                       C133817 * C2678 + C152913 * C2690 + C133819 * C2679 -
                       C133820 * C2667 - C133819 * C2680 + C133814 * C2691) *
                          C152696 * C152807 +
                      (C134501 + C134502 + C134503) * C152696 * C152462) *
                         C152873) *
                        C152828 +
                    (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
                       C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
                       C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
                       C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                          C152696 * C152807 +
                      (C135266 + C135267 + C135268) * C152696 * C152462) *
                         C2428 -
                     ((C134196 + C134197 + C134198) * C152696 * C152462 +
                      (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                       C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                       C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                       C133816 * C371 - C133815 * C387 + C152912 * C407) *
                          C152696 * C152807) *
                         C2427 -
                     ((C137416 + C137417 + C137418) * C152696 * C152462 +
                      (C133819 * C9518 - C133820 * C9510 - C133819 * C9519 +
                       C133814 * C9528 + C133817 * C3213 - C133818 * C3209 -
                       C133817 * C3214 + C152913 * C3221 + C133815 * C1719 -
                       C133816 * C1704 - C133815 * C1720 + C152912 * C1740) *
                          C152696 * C152807) *
                         C152873) *
                        C152575) *
                       C152814 +
                   ((((C134500 + C134499 + C134498) * C152696 * C152807 +
                      (C134504 + C134505 + C134506) * C152696 * C152462) *
                         C2428 -
                     ((C133897 + C133898 + C133899) * C152696 * C152462 +
                      (C133896 + C133895 + C133894) * C152696 * C152807) *
                         C2427 -
                     ((C134507 + C134508 + C134509) * C152696 * C152462 +
                      (C134503 + C134502 + C134501) * C152696 * C152807) *
                         C152873) *
                        C152828 +
                    (((C134198 + C134197 + C134196) * C152696 * C152807 +
                      (C134202 + C134203 + C134204) * C152696 * C152462) *
                         C2427 -
                     ((C135269 + C135270 + C135271) * C152696 * C152462 +
                      (C135268 + C135267 + C135266) * C152696 * C152807) *
                         C2428 +
                     ((C137418 + C137417 + C137416) * C152696 * C152807 +
                      (C133815 * C1715 - C133816 * C1702 - C133815 * C1716 +
                       C152912 * C1738 + C133817 * C3217 - C133818 * C3211 -
                       C133817 * C3218 + C152913 * C3223 + C133819 * C18412 -
                       C133820 * C18411 - C133819 * C18413 + C133814 * C18414) *
                          C152696 * C152462) *
                         C152873) *
                        C152575) *
                       C152495)) /
                     (p * q * std::sqrt(p + q));
    d2ee[336] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152696 * C152807 +
                     (C133894 + C133895 + C133896) * C152696 * C152462) *
                        C152829 -
                    ((C134498 + C134499 + C134500) * C152696 * C152462 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152696 * C152807) *
                        C152617) *
                       C1879 +
                   (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
                      C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
                      C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
                      C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                         C152696 * C152807 +
                     (C135266 + C135267 + C135268) * C152696 * C152462) *
                        C152617 -
                    ((C134196 + C134197 + C134198) * C152696 * C152462 +
                     (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                      C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                      C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                      C133816 * C371 - C133815 * C387 + C152912 * C407) *
                         C152696 * C152807) *
                        C152829) *
                       C1880 +
                   (((C133815 * C388 - C133816 * C372 - C133815 * C389 +
                      C152912 * C408 + C133817 * C1727 - C133818 * C1708 -
                      C133817 * C1728 + C152913 * C1744 + C133819 * C1729 -
                      C133820 * C1709 - C133819 * C1730 + C133814 * C1745) *
                         C152696 * C152807 +
                     (C134199 + C134200 + C134201) * C152696 * C152462) *
                        C152829 -
                    ((C136353 + C136354 + C136355) * C152696 * C152462 +
                     (C133819 * C9516 - C133820 * C9509 - C133819 * C9517 +
                      C133814 * C9527 + C133817 * C1729 - C133818 * C1709 -
                      C133817 * C1730 + C152913 * C1745 + C133815 * C1727 -
                      C133816 * C1708 - C133815 * C1728 + C152912 * C1744) *
                         C152696 * C152807) *
                        C152617) *
                       C1881 +
                   (((C133815 * C2269 - C133816 * C2265 - C133815 * C2270 +
                      C152912 * C2277 + C133817 * C8185 - C133818 * C8178 -
                      C133817 * C8186 + C152913 * C8196 + C133819 * C10240 -
                      C133820 * C10238 - C133819 * C10241 + C133814 * C10244) *
                         C152696 * C152807 +
                     (C133815 * C2271 - C133816 * C2266 - C133815 * C2272 +
                      C152912 * C2278 + C133817 * C8183 - C133818 * C8177 -
                      C133817 * C8184 + C152913 * C8195 + C133819 * C10242 -
                      C133820 * C10239 - C133819 * C10243 + C133814 * C10245) *
                         C152696 * C152462) *
                        C152617 -
                    ((C136042 + C136043 + C136044) * C152696 * C152462 +
                     (C133819 * C8185 - C133820 * C8178 - C133819 * C8186 +
                      C133814 * C8196 + C133817 * C2269 - C133818 * C2265 -
                      C133817 * C2270 + C152913 * C2277 + C133815 * C1537 -
                      C133816 * C1526 - C133815 * C1538 + C152912 * C1550) *
                         C152696 * C152807) *
                        C152829) *
                       C152880) *
                  C152484) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152696 * C152807 +
                      (C133894 + C133895 + C133896) * C152696 * C152462) *
                         C152829 -
                     ((C134498 + C134499 + C134500) * C152696 * C152462 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152696 * C152807) *
                         C152617) *
                        C152828 +
                    (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
                       C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
                       C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
                       C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                          C152696 * C152807 +
                      (C135266 + C135267 + C135268) * C152696 * C152462) *
                         C152617 -
                     ((C134196 + C134197 + C134198) * C152696 * C152462 +
                      (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                       C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                       C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                       C133816 * C371 - C133815 * C387 + C152912 * C407) *
                          C152696 * C152807) *
                         C152829) *
                        C152575) *
                       C365 +
                   ((((C134500 + C134499 + C134498) * C152696 * C152807 +
                      (C134504 + C134505 + C134506) * C152696 * C152462) *
                         C152617 -
                     ((C133897 + C133898 + C133899) * C152696 * C152462 +
                      (C133896 + C133895 + C133894) * C152696 * C152807) *
                         C152829) *
                        C152828 +
                    (((C134198 + C134197 + C134196) * C152696 * C152807 +
                      (C134202 + C134203 + C134204) * C152696 * C152462) *
                         C152829 -
                     ((C135269 + C135270 + C135271) * C152696 * C152462 +
                      (C135268 + C135267 + C135266) * C152696 * C152807) *
                         C152617) *
                        C152575) *
                       C366 +
                   ((((C133899 + C133898 + C133897) * C152696 * C152807 +
                      (C133900 + C133901 + C133902) * C152696 * C152462) *
                         C152829 -
                     ((C134937 + C134938 + C134939) * C152696 * C152462 +
                      (C134506 + C134505 + C134504) * C152696 * C152807) *
                         C152617) *
                        C152828 +
                    (((C135271 + C135270 + C135269) * C152696 * C152807 +
                      (C133815 * C1239 - C133816 * C1230 - C133815 * C1240 +
                       C152912 * C1248 + C133817 * C1713 - C133818 * C1701 -
                       C133817 * C1714 + C152913 * C1737 + C133819 * C3219 -
                       C133820 * C3212 - C133819 * C3220 + C133814 * C3224) *
                          C152696 * C152462) *
                         C152617 -
                     ((C134722 + C134723 + C134724) * C152696 * C152462 +
                      (C134204 + C134203 + C134202) * C152696 * C152807) *
                         C152829) *
                        C152575) *
                       C152864)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152696 * C152807 +
                     (C133894 + C133895 + C133896) * C152696 * C152462) *
                        C3047 -
                    ((C134498 + C134499 + C134500) * C152696 * C152462 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152696 * C152807) *
                        C3048 +
                    ((C133815 * C649 - C133816 * C633 - C133815 * C650 +
                      C152912 * C669 + C133817 * C2677 - C133818 * C2666 -
                      C133817 * C2678 + C152913 * C2690 + C133819 * C2679 -
                      C133820 * C2667 - C133819 * C2680 + C133814 * C2691) *
                         C152696 * C152807 +
                     (C134501 + C134502 + C134503) * C152696 * C152462) *
                        C3049 -
                    ((C137631 + C137632 + C137633) * C152696 * C152462 +
                     (C133819 * C18111 - C133820 * C18106 - C133819 * C18112 +
                      C133814 * C18118 + C133817 * C2679 - C133818 * C2667 -
                      C133817 * C2680 + C152913 * C2691 + C133815 * C2677 -
                      C133816 * C2666 - C133815 * C2678 + C152912 * C2690) *
                         C152696 * C152807) *
                        C152886) *
                       C152828 +
                   (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
                      C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
                      C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
                      C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                         C152696 * C152807 +
                     (C135266 + C135267 + C135268) * C152696 * C152462) *
                        C3048 -
                    ((C134196 + C134197 + C134198) * C152696 * C152462 +
                     (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                      C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                      C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                      C133816 * C371 - C133815 * C387 + C152912 * C407) *
                         C152696 * C152807) *
                        C3047 -
                    ((C137416 + C137417 + C137418) * C152696 * C152462 +
                     (C133819 * C9518 - C133820 * C9510 - C133819 * C9519 +
                      C133814 * C9528 + C133817 * C3213 - C133818 * C3209 -
                      C133817 * C3214 + C152913 * C3221 + C133815 * C1719 -
                      C133816 * C1704 - C133815 * C1720 + C152912 * C1740) *
                         C152696 * C152807) *
                        C3049 +
                    ((C133815 * C3213 - C133816 * C3209 - C133815 * C3214 +
                      C152912 * C3221 + C133817 * C9518 - C133818 * C9510 -
                      C133817 * C9519 + C152913 * C9528 + C133819 * C18851 -
                      C133820 * C18849 - C133819 * C18852 + C133814 * C18855) *
                         C152696 * C152807 +
                     (C133815 * C3215 - C133816 * C3210 - C133815 * C3216 +
                      C152912 * C3222 + C133817 * C9522 - C133818 * C9512 -
                      C133817 * C9523 + C152913 * C9530 + C133819 * C18853 -
                      C133820 * C18850 - C133819 * C18854 + C133814 * C18856) *
                         C152696 * C152462) *
                        C152886) *
                       C152575) *
                  C152484) /
                     (p * q * std::sqrt(p + q));
    d2ee[337] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                C152912 * C160 + C133817 * C647 - C133818 * C632 -
                C133817 * C648 + C152913 * C668 + C133819 * C649 -
                C133820 * C633 - C133819 * C650 + C133814 * C669) *
                   C152696 * C152807 +
               (C133894 + C133895 + C133896) * C152696 * C152462) *
                  C152530 * C152512 * C129 -
              ((C133897 + C133898 + C133899) * C152696 * C152462 +
               (C133896 + C133895 + C133894) * C152696 * C152807) *
                  C152530 * C152512 * C130 +
              ((C133899 + C133898 + C133897) * C152696 * C152807 +
               (C133900 + C133901 + C133902) * C152696 * C152462) *
                  C152530 * C152512 * C131 -
              ((C133903 + C133904 + C133905) * C152696 * C152462 +
               (C133902 + C133901 + C133900) * C152696 * C152807) *
                  C152530 * C152512 * C132 +
              ((C133905 + C133904 + C133903) * C152696 * C152807 +
               (C133815 * C154 - C133816 * C141 - C133815 * C155 +
                C152912 * C165 + C133817 * C661 - C133818 * C639 -
                C133817 * C662 + C152913 * C675 + C133819 * C663 -
                C133820 * C640 - C133819 * C664 + C133814 * C676) *
                   C152696 * C152462) *
                  C152530 * C152512 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                 C152912 * C160 + C133817 * C647 - C133818 * C632 -
                 C133817 * C648 + C152913 * C668 + C133819 * C649 -
                 C133820 * C633 - C133819 * C650 + C133814 * C669) *
                    C152696 * C152807 +
                (C133894 + C133895 + C133896) * C152696 * C152462) *
                   C152530 * C152917 -
               ((C134196 + C134197 + C134198) * C152696 * C152462 +
                (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                 C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                 C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                 C133816 * C371 - C133815 * C387 + C152912 * C407) *
                    C152696 * C152807) *
                   C152530 * C152901 +
               ((C133815 * C388 - C133816 * C372 - C133815 * C389 +
                 C152912 * C408 + C133817 * C1727 - C133818 * C1708 -
                 C133817 * C1728 + C152913 * C1744 + C133819 * C1729 -
                 C133820 * C1709 - C133819 * C1730 + C133814 * C1745) *
                    C152696 * C152807 +
                (C134199 + C134200 + C134201) * C152696 * C152462) *
                   C152530 * C152870) *
                  C365 +
              (((C134198 + C134197 + C134196) * C152696 * C152807 +
                (C134202 + C134203 + C134204) * C152696 * C152462) *
                   C152530 * C152901 -
               ((C133897 + C133898 + C133899) * C152696 * C152462 +
                (C133896 + C133895 + C133894) * C152696 * C152807) *
                   C152530 * C152917 -
               ((C134205 + C134206 + C134207) * C152696 * C152462 +
                (C134201 + C134200 + C134199) * C152696 * C152807) *
                   C152530 * C152870) *
                  C366 +
              (((C133899 + C133898 + C133897) * C152696 * C152807 +
                (C133900 + C133901 + C133902) * C152696 * C152462) *
                   C152530 * C152917 -
               ((C133819 * C1713 - C133820 * C1701 - C133819 * C1714 +
                 C133814 * C1737 + C133817 * C1239 - C133818 * C1230 -
                 C133817 * C1240 + C152913 * C1248 + C133815 * C380 -
                 C133816 * C368 - C133815 * C381 + C152912 * C404) *
                    C152696 * C152462 +
                (C134204 + C134203 + C134202) * C152696 * C152807) *
                   C152530 * C152901 +
               ((C134207 + C134206 + C134205) * C152696 * C152807 +
                (C133815 * C394 - C133816 * C375 - C133815 * C395 +
                 C152912 * C411 + C133817 * C1721 - C133818 * C1705 -
                 C133817 * C1722 + C152913 * C1741 + C133819 * C1735 -
                 C133820 * C1712 - C133819 * C1736 + C133814 * C1748) *
                    C152696 * C152462) *
                   C152530 * C152870) *
                  C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152696 * C152807 +
            (C133894 + C133895 + C133896) * C152696 * C152462) *
               C152918 -
           ((C134498 + C134499 + C134500) * C152696 * C152462 +
            (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
             C133814 * C2690 + C133817 * C649 - C133818 * C633 -
             C133817 * C650 + C152913 * C669 + C133815 * C647 - C133816 * C632 -
             C133815 * C648 + C152912 * C668) *
                C152696 * C152807) *
               C152903 +
           ((C133815 * C649 - C133816 * C633 - C133815 * C650 + C152912 * C669 +
             C133817 * C2677 - C133818 * C2666 - C133817 * C2678 +
             C152913 * C2690 + C133819 * C2679 - C133820 * C2667 -
             C133819 * C2680 + C133814 * C2691) *
                C152696 * C152807 +
            (C134501 + C134502 + C134503) * C152696 * C152462) *
               C152873) *
              C152512 * C365 +
          (((C134500 + C134499 + C134498) * C152696 * C152807 +
            (C134504 + C134505 + C134506) * C152696 * C152462) *
               C152903 -
           ((C133897 + C133898 + C133899) * C152696 * C152462 +
            (C133896 + C133895 + C133894) * C152696 * C152807) *
               C152918 -
           ((C134507 + C134508 + C134509) * C152696 * C152462 +
            (C134503 + C134502 + C134501) * C152696 * C152807) *
               C152873) *
              C152512 * C366 +
          (((C133899 + C133898 + C133897) * C152696 * C152807 +
            (C133900 + C133901 + C133902) * C152696 * C152462) *
               C152918 -
           ((C133819 * C2671 - C133820 * C2663 - C133819 * C2672 +
             C133814 * C2687 + C133817 * C655 - C133818 * C636 -
             C133817 * C656 + C152913 * C672 + C133815 * C641 - C133816 * C629 -
             C133815 * C642 + C152912 * C665) *
                C152696 * C152462 +
            (C134506 + C134505 + C134504) * C152696 * C152807) *
               C152903 +
           ((C134509 + C134508 + C134507) * C152696 * C152807 +
            (C133815 * C655 - C133816 * C636 - C133815 * C656 + C152912 * C672 +
             C133817 * C2671 - C133818 * C2663 - C133817 * C2672 +
             C152913 * C2687 + C133819 * C2685 - C133820 * C2670 -
             C133819 * C2686 + C133814 * C2694) *
                C152696 * C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152696 * C152807 +
            (C133894 + C133895 + C133896) * C152696 * C152462) *
               C152530 * C1429 -
           ((C134196 + C134197 + C134198) * C152696 * C152462 +
            (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
             C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
             C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
             C133816 * C371 - C133815 * C387 + C152912 * C407) *
                C152696 * C152807) *
               C152530 * C1430 +
           ((C133815 * C388 - C133816 * C372 - C133815 * C389 + C152912 * C408 +
             C133817 * C1727 - C133818 * C1708 - C133817 * C1728 +
             C152913 * C1744 + C133819 * C1729 - C133820 * C1709 -
             C133819 * C1730 + C133814 * C1745) *
                C152696 * C152807 +
            (C134199 + C134200 + C134201) * C152696 * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C134198 + C134197 + C134196) * C152696 * C152807 +
            (C134202 + C134203 + C134204) * C152696 * C152462) *
               C152530 * C1430 -
           ((C133897 + C133898 + C133899) * C152696 * C152462 +
            (C133896 + C133895 + C133894) * C152696 * C152807) *
               C152530 * C1429 -
           ((C134205 + C134206 + C134207) * C152696 * C152462 +
            (C134201 + C134200 + C134199) * C152696 * C152807) *
               C152530 * C152870) *
              C152897 +
          (((C133899 + C133898 + C133897) * C152696 * C152807 +
            (C133900 + C133901 + C133902) * C152696 * C152462) *
               C152530 * C1429 -
           ((C134722 + C134723 + C134724) * C152696 * C152462 +
            (C134204 + C134203 + C134202) * C152696 * C152807) *
               C152530 * C1430 +
           ((C134207 + C134206 + C134205) * C152696 * C152807 +
            (C133815 * C394 - C133816 * C375 - C133815 * C395 + C152912 * C411 +
             C133817 * C1721 - C133818 * C1705 - C133817 * C1722 +
             C152913 * C1741 + C133819 * C1735 - C133820 * C1712 -
             C133819 * C1736 + C133814 * C1748) *
                C152696 * C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
            C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
            C133819 * C649 - C133820 * C633 - C133819 * C650 + C133814 * C669) *
               C152696 * C152807 +
           (C133894 + C133895 + C133896) * C152696 * C152462) *
              C152530 * C1517 -
          ((C134196 + C134197 + C134198) * C152696 * C152462 +
           (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
            C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
            C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
            C133816 * C371 - C133815 * C387 + C152912 * C407) *
               C152696 * C152807) *
              C152530 * C1518 +
          ((C133815 * C388 - C133816 * C372 - C133815 * C389 + C152912 * C408 +
            C133817 * C1727 - C133818 * C1708 - C133817 * C1728 +
            C152913 * C1744 + C133819 * C1729 - C133820 * C1709 -
            C133819 * C1730 + C133814 * C1745) *
               C152696 * C152807 +
           (C134199 + C134200 + C134201) * C152696 * C152462) *
              C152530 * C1519 -
          ((C133819 * C8183 - C133820 * C8177 - C133819 * C8184 +
            C133814 * C8195 + C133817 * C2271 - C133818 * C2266 -
            C133817 * C2272 + C152913 * C2278 + C133815 * C1535 -
            C133816 * C1525 - C133815 * C1536 + C152912 * C1549) *
               C152696 * C152462 +
           (C133819 * C8185 - C133820 * C8178 - C133819 * C8186 +
            C133814 * C8196 + C133817 * C2269 - C133818 * C2265 -
            C133817 * C2270 + C152913 * C2277 + C133815 * C1537 -
            C133816 * C1526 - C133815 * C1538 + C152912 * C1550) *
               C152696 * C152807) *
              C152530 * C1520 +
          ((C133815 * C1539 - C133816 * C1527 - C133815 * C1540 +
            C152912 * C1551 + C133817 * C8189 - C133818 * C8180 -
            C133817 * C8190 + C152913 * C8198 + C133819 * C8191 -
            C133820 * C8181 - C133819 * C8192 + C133814 * C8199) *
               C152696 * C152807 +
           (C133815 * C1541 - C133816 * C1528 - C133815 * C1542 +
            C152912 * C1552 + C133817 * C8187 - C133818 * C8179 -
            C133817 * C8188 + C152913 * C8197 + C133819 * C8193 -
            C133820 * C8182 - C133819 * C8194 + C133814 * C8200) *
               C152696 * C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152696 * C152807 +
            (C133894 + C133895 + C133896) * C152696 * C152462) *
               C152918 -
           ((C134498 + C134499 + C134500) * C152696 * C152462 +
            (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
             C133814 * C2690 + C133817 * C649 - C133818 * C633 -
             C133817 * C650 + C152913 * C669 + C133815 * C647 - C133816 * C632 -
             C133815 * C648 + C152912 * C668) *
                C152696 * C152807) *
               C152903 +
           ((C133815 * C649 - C133816 * C633 - C133815 * C650 + C152912 * C669 +
             C133817 * C2677 - C133818 * C2666 - C133817 * C2678 +
             C152913 * C2690 + C133819 * C2679 - C133820 * C2667 -
             C133819 * C2680 + C133814 * C2691) *
                C152696 * C152807 +
            (C134501 + C134502 + C134503) * C152696 * C152462) *
               C152873) *
              C1429 +
          (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
             C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
             C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
             C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                C152696 * C152807 +
            (C135266 + C135267 + C135268) * C152696 * C152462) *
               C152903 -
           ((C134196 + C134197 + C134198) * C152696 * C152462 +
            (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
             C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
             C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
             C133816 * C371 - C133815 * C387 + C152912 * C407) *
                C152696 * C152807) *
               C152918 -
           ((C133819 * C9522 - C133820 * C9512 - C133819 * C9523 +
             C133814 * C9530 + C133817 * C3215 - C133818 * C3210 -
             C133817 * C3216 + C152913 * C3222 + C133815 * C1717 -
             C133816 * C1703 - C133815 * C1718 + C152912 * C1739) *
                C152696 * C152462 +
            (C133819 * C9518 - C133820 * C9510 - C133819 * C9519 +
             C133814 * C9528 + C133817 * C3213 - C133818 * C3209 -
             C133817 * C3214 + C152913 * C3221 + C133815 * C1719 -
             C133816 * C1704 - C133815 * C1720 + C152912 * C1740) *
                C152696 * C152807) *
               C152873) *
              C1430 +
          (((C133815 * C388 - C133816 * C372 - C133815 * C389 + C152912 * C408 +
             C133817 * C1727 - C133818 * C1708 - C133817 * C1728 +
             C152913 * C1744 + C133819 * C1729 - C133820 * C1709 -
             C133819 * C1730 + C133814 * C1745) *
                C152696 * C152807 +
            (C134199 + C134200 + C134201) * C152696 * C152462) *
               C152918 -
           ((C133819 * C9514 - C133820 * C9508 - C133819 * C9515 +
             C133814 * C9526 + C133817 * C1731 - C133818 * C1710 -
             C133817 * C1732 + C152913 * C1746 + C133815 * C1725 -
             C133816 * C1707 - C133815 * C1726 + C152912 * C1743) *
                C152696 * C152462 +
            (C133819 * C9516 - C133820 * C9509 - C133819 * C9517 +
             C133814 * C9527 + C133817 * C1729 - C133818 * C1709 -
             C133817 * C1730 + C152913 * C1745 + C133815 * C1727 -
             C133816 * C1708 - C133815 * C1728 + C152912 * C1744) *
                C152696 * C152807) *
               C152903 +
           ((C133815 * C1729 - C133816 * C1709 - C133815 * C1730 +
             C152912 * C1745 + C133817 * C9516 - C133818 * C9509 -
             C133817 * C9517 + C152913 * C9527 + C133819 * C9520 -
             C133820 * C9511 - C133819 * C9521 + C133814 * C9529) *
                C152696 * C152807 +
            (C133815 * C1731 - C133816 * C1710 - C133815 * C1732 +
             C152912 * C1746 + C133817 * C9514 - C133818 * C9508 -
             C133817 * C9515 + C152913 * C9526 + C133819 * C9524 -
             C133820 * C9513 - C133819 * C9525 + C133814 * C9531) *
                C152696 * C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152696 * C152807 +
            (C133894 + C133895 + C133896) * C152696 * C152462) *
               C2427 -
           ((C134498 + C134499 + C134500) * C152696 * C152462 +
            (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
             C133814 * C2690 + C133817 * C649 - C133818 * C633 -
             C133817 * C650 + C152913 * C669 + C133815 * C647 - C133816 * C632 -
             C133815 * C648 + C152912 * C668) *
                C152696 * C152807) *
               C2428 +
           ((C133815 * C649 - C133816 * C633 - C133815 * C650 + C152912 * C669 +
             C133817 * C2677 - C133818 * C2666 - C133817 * C2678 +
             C152913 * C2690 + C133819 * C2679 - C133820 * C2667 -
             C133819 * C2680 + C133814 * C2691) *
                C152696 * C152807 +
            (C134501 + C134502 + C134503) * C152696 * C152462) *
               C152873) *
              C152512 * C152914 +
          (((C134500 + C134499 + C134498) * C152696 * C152807 +
            (C134504 + C134505 + C134506) * C152696 * C152462) *
               C2428 -
           ((C133897 + C133898 + C133899) * C152696 * C152462 +
            (C133896 + C133895 + C133894) * C152696 * C152807) *
               C2427 -
           ((C134507 + C134508 + C134509) * C152696 * C152462 +
            (C134503 + C134502 + C134501) * C152696 * C152807) *
               C152873) *
              C152512 * C152897 +
          (((C133899 + C133898 + C133897) * C152696 * C152807 +
            (C133900 + C133901 + C133902) * C152696 * C152462) *
               C2427 -
           ((C134937 + C134938 + C134939) * C152696 * C152462 +
            (C134506 + C134505 + C134504) * C152696 * C152807) *
               C2428 +
           ((C134509 + C134508 + C134507) * C152696 * C152807 +
            (C133815 * C655 - C133816 * C636 - C133815 * C656 + C152912 * C672 +
             C133817 * C2671 - C133818 * C2663 - C133817 * C2672 +
             C152913 * C2687 + C133819 * C2685 - C133820 * C2670 -
             C133819 * C2686 + C133814 * C2694) *
                C152696 * C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152696 * C152807 +
            (C133894 + C133895 + C133896) * C152696 * C152462) *
               C2427 -
           ((C134498 + C134499 + C134500) * C152696 * C152462 +
            (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
             C133814 * C2690 + C133817 * C649 - C133818 * C633 -
             C133817 * C650 + C152913 * C669 + C133815 * C647 - C133816 * C632 -
             C133815 * C648 + C152912 * C668) *
                C152696 * C152807) *
               C2428 +
           ((C133815 * C649 - C133816 * C633 - C133815 * C650 + C152912 * C669 +
             C133817 * C2677 - C133818 * C2666 - C133817 * C2678 +
             C152913 * C2690 + C133819 * C2679 - C133820 * C2667 -
             C133819 * C2680 + C133814 * C2691) *
                C152696 * C152807 +
            (C134501 + C134502 + C134503) * C152696 * C152462) *
               C152873) *
              C152917 +
          (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
             C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
             C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
             C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                C152696 * C152807 +
            (C135266 + C135267 + C135268) * C152696 * C152462) *
               C2428 -
           ((C134196 + C134197 + C134198) * C152696 * C152462 +
            (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
             C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
             C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
             C133816 * C371 - C133815 * C387 + C152912 * C407) *
                C152696 * C152807) *
               C2427 -
           ((C133819 * C9522 - C133820 * C9512 - C133819 * C9523 +
             C133814 * C9530 + C133817 * C3215 - C133818 * C3210 -
             C133817 * C3216 + C152913 * C3222 + C133815 * C1717 -
             C133816 * C1703 - C133815 * C1718 + C152912 * C1739) *
                C152696 * C152462 +
            (C133819 * C9518 - C133820 * C9510 - C133819 * C9519 +
             C133814 * C9528 + C133817 * C3213 - C133818 * C3209 -
             C133817 * C3214 + C152913 * C3221 + C133815 * C1719 -
             C133816 * C1704 - C133815 * C1720 + C152912 * C1740) *
                C152696 * C152807) *
               C152873) *
              C152901 +
          (((C133815 * C388 - C133816 * C372 - C133815 * C389 + C152912 * C408 +
             C133817 * C1727 - C133818 * C1708 - C133817 * C1728 +
             C152913 * C1744 + C133819 * C1729 - C133820 * C1709 -
             C133819 * C1730 + C133814 * C1745) *
                C152696 * C152807 +
            (C134199 + C134200 + C134201) * C152696 * C152462) *
               C2427 -
           ((C136353 + C136354 + C136355) * C152696 * C152462 +
            (C133819 * C9516 - C133820 * C9509 - C133819 * C9517 +
             C133814 * C9527 + C133817 * C1729 - C133818 * C1709 -
             C133817 * C1730 + C152913 * C1745 + C133815 * C1727 -
             C133816 * C1708 - C133815 * C1728 + C152912 * C1744) *
                C152696 * C152807) *
               C2428 +
           ((C133815 * C1729 - C133816 * C1709 - C133815 * C1730 +
             C152912 * C1745 + C133817 * C9516 - C133818 * C9509 -
             C133817 * C9517 + C152913 * C9527 + C133819 * C9520 -
             C133820 * C9511 - C133819 * C9521 + C133814 * C9529) *
                C152696 * C152807 +
            (C133815 * C1731 - C133816 * C1710 - C133815 * C1732 +
             C152912 * C1746 + C133817 * C9514 - C133818 * C9508 -
             C133817 * C9515 + C152913 * C9526 + C133819 * C9524 -
             C133820 * C9513 - C133819 * C9525 + C133814 * C9531) *
                C152696 * C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
            C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
            C133819 * C649 - C133820 * C633 - C133819 * C650 + C133814 * C669) *
               C152696 * C152807 +
           (C133894 + C133895 + C133896) * C152696 * C152462) *
              C2658 -
          ((C134498 + C134499 + C134500) * C152696 * C152462 +
           (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
            C133814 * C2690 + C133817 * C649 - C133818 * C633 - C133817 * C650 +
            C152913 * C669 + C133815 * C647 - C133816 * C632 - C133815 * C648 +
            C152912 * C668) *
               C152696 * C152807) *
              C2659 +
          ((C133815 * C649 - C133816 * C633 - C133815 * C650 + C152912 * C669 +
            C133817 * C2677 - C133818 * C2666 - C133817 * C2678 +
            C152913 * C2690 + C133819 * C2679 - C133820 * C2667 -
            C133819 * C2680 + C133814 * C2691) *
               C152696 * C152807 +
           (C134501 + C134502 + C134503) * C152696 * C152462) *
              C2660 -
          ((C133819 * C18109 - C133820 * C18105 - C133819 * C18110 +
            C133814 * C18117 + C133817 * C2681 - C133818 * C2668 -
            C133817 * C2682 + C152913 * C2692 + C133815 * C2675 -
            C133816 * C2665 - C133815 * C2676 + C152912 * C2689) *
               C152696 * C152462 +
           (C133819 * C18111 - C133820 * C18106 - C133819 * C18112 +
            C133814 * C18118 + C133817 * C2679 - C133818 * C2667 -
            C133817 * C2680 + C152913 * C2691 + C133815 * C2677 -
            C133816 * C2666 - C133815 * C2678 + C152912 * C2690) *
               C152696 * C152807) *
              C2661 +
          ((C133815 * C2679 - C133816 * C2667 - C133815 * C2680 +
            C152912 * C2691 + C133817 * C18111 - C133818 * C18106 -
            C133817 * C18112 + C152913 * C18118 + C133819 * C18113 -
            C133820 * C18107 - C133819 * C18114 + C133814 * C18119) *
               C152696 * C152807 +
           (C133815 * C2681 - C133816 * C2668 - C133815 * C2682 +
            C152912 * C2692 + C133817 * C18109 - C133818 * C18105 -
            C133817 * C18110 + C152913 * C18117 + C133819 * C18115 -
            C133820 * C18108 - C133819 * C18116 + C133814 * C18120) *
               C152696 * C152462) *
              C2662) *
         C152512 * C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[338] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152696 * C152807 +
                      (C133894 + C133895 + C133896) * C152696 * C152462) *
                         C152829 -
                     ((C134498 + C134499 + C134500) * C152696 * C152462 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152696 * C152807) *
                         C152617) *
                        C1429 +
                    (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
                       C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
                       C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
                       C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                          C152696 * C152807 +
                      (C135266 + C135267 + C135268) * C152696 * C152462) *
                         C152617 -
                     ((C134196 + C134197 + C134198) * C152696 * C152462 +
                      (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                       C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                       C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                       C133816 * C371 - C133815 * C387 + C152912 * C407) *
                          C152696 * C152807) *
                         C152829) *
                        C1430 +
                    (((C133815 * C388 - C133816 * C372 - C133815 * C389 +
                       C152912 * C408 + C133817 * C1727 - C133818 * C1708 -
                       C133817 * C1728 + C152913 * C1744 + C133819 * C1729 -
                       C133820 * C1709 - C133819 * C1730 + C133814 * C1745) *
                          C152696 * C152807 +
                      (C134199 + C134200 + C134201) * C152696 * C152462) *
                         C152829 -
                     ((C136353 + C136354 + C136355) * C152696 * C152462 +
                      (C133819 * C9516 - C133820 * C9509 - C133819 * C9517 +
                       C133814 * C9527 + C133817 * C1729 - C133818 * C1709 -
                       C133817 * C1730 + C152913 * C1745 + C133815 * C1727 -
                       C133816 * C1708 - C133815 * C1728 + C152912 * C1744) *
                          C152696 * C152807) *
                         C152617) *
                        C152870) *
                       C152814 +
                   ((((C134500 + C134499 + C134498) * C152696 * C152807 +
                      (C134504 + C134505 + C134506) * C152696 * C152462) *
                         C152617 -
                     ((C133897 + C133898 + C133899) * C152696 * C152462 +
                      (C133896 + C133895 + C133894) * C152696 * C152807) *
                         C152829) *
                        C1429 +
                    (((C134198 + C134197 + C134196) * C152696 * C152807 +
                      (C134202 + C134203 + C134204) * C152696 * C152462) *
                         C152829 -
                     ((C135269 + C135270 + C135271) * C152696 * C152462 +
                      (C135268 + C135267 + C135266) * C152696 * C152807) *
                         C152617) *
                        C1430 +
                    (((C136355 + C136354 + C136353) * C152696 * C152807 +
                      (C133815 * C1723 - C133816 * C1706 - C133815 * C1724 +
                       C152912 * C1742 + C133817 * C1733 - C133818 * C1711 -
                       C133817 * C1734 + C152913 * C1747 + C133819 * C10024 -
                       C133820 * C10023 - C133819 * C10025 + C133814 * C10026) *
                          C152696 * C152462) *
                         C152617 -
                     ((C134205 + C134206 + C134207) * C152696 * C152462 +
                      (C134201 + C134200 + C134199) * C152696 * C152807) *
                         C152829) *
                        C152870) *
                       C152495)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152696 * C152807 +
                     (C133894 + C133895 + C133896) * C152696 * C152462) *
                        C152829 -
                    ((C134498 + C134499 + C134500) * C152696 * C152462 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152696 * C152807) *
                        C152617) *
                       C152512 * C873 +
                   (((C134500 + C134499 + C134498) * C152696 * C152807 +
                     (C134504 + C134505 + C134506) * C152696 * C152462) *
                        C152617 -
                    ((C133897 + C133898 + C133899) * C152696 * C152462 +
                     (C133896 + C133895 + C133894) * C152696 * C152807) *
                        C152829) *
                       C152512 * C874 +
                   (((C133899 + C133898 + C133897) * C152696 * C152807 +
                     (C133900 + C133901 + C133902) * C152696 * C152462) *
                        C152829 -
                    ((C134937 + C134938 + C134939) * C152696 * C152462 +
                     (C134506 + C134505 + C134504) * C152696 * C152807) *
                        C152617) *
                       C152512 * C875 +
                   (((C134939 + C134938 + C134937) * C152696 * C152807 +
                     (C133815 * C657 - C133816 * C637 - C133815 * C658 +
                      C152912 * C673 + C133817 * C659 - C133818 * C638 -
                      C133817 * C660 + C152913 * C674 + C133819 * C3052 -
                      C133820 * C3051 - C133819 * C3053 + C133814 * C3054) *
                         C152696 * C152462) *
                        C152617 -
                    ((C133903 + C133904 + C133905) * C152696 * C152462 +
                     (C133902 + C133901 + C133900) * C152696 * C152807) *
                        C152829) *
                       C152512 * C152874)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152696 * C152807 +
                     (C133894 + C133895 + C133896) * C152696 * C152462) *
                        C3047 -
                    ((C134498 + C134499 + C134500) * C152696 * C152462 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152696 * C152807) *
                        C3048 +
                    ((C133815 * C649 - C133816 * C633 - C133815 * C650 +
                      C152912 * C669 + C133817 * C2677 - C133818 * C2666 -
                      C133817 * C2678 + C152913 * C2690 + C133819 * C2679 -
                      C133820 * C2667 - C133819 * C2680 + C133814 * C2691) *
                         C152696 * C152807 +
                     (C134501 + C134502 + C134503) * C152696 * C152462) *
                        C3049 -
                    ((C137631 + C137632 + C137633) * C152696 * C152462 +
                     (C133819 * C18111 - C133820 * C18106 - C133819 * C18112 +
                      C133814 * C18118 + C133817 * C2679 - C133818 * C2667 -
                      C133817 * C2680 + C152913 * C2691 + C133815 * C2677 -
                      C133816 * C2666 - C133815 * C2678 + C152912 * C2690) *
                         C152696 * C152807) *
                        C152886) *
                       C152512 * C152814 +
                   (((C134500 + C134499 + C134498) * C152696 * C152807 +
                     (C134504 + C134505 + C134506) * C152696 * C152462) *
                        C3048 -
                    ((C133897 + C133898 + C133899) * C152696 * C152462 +
                     (C133896 + C133895 + C133894) * C152696 * C152807) *
                        C3047 -
                    ((C134507 + C134508 + C134509) * C152696 * C152462 +
                     (C134503 + C134502 + C134501) * C152696 * C152807) *
                        C3049 +
                    ((C137633 + C137632 + C137631) * C152696 * C152807 +
                     (C133815 * C2673 - C133816 * C2664 - C133815 * C2674 +
                      C152912 * C2688 + C133817 * C2683 - C133818 * C2669 -
                      C133817 * C2684 + C152913 * C2693 + C133819 * C18631 -
                      C133820 * C18630 - C133819 * C18632 + C133814 * C18633) *
                         C152696 * C152462) *
                        C152886) *
                       C152512 * C152495)) /
                     (p * q * std::sqrt(p + q));
    d2ee[339] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152696 * C152807 +
            (C133894 + C133895 + C133896) * C152696 * C152462) *
               C152530 * C152917 -
           ((C134196 + C134197 + C134198) * C152696 * C152462 +
            (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
             C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
             C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
             C133816 * C371 - C133815 * C387 + C152912 * C407) *
                C152696 * C152807) *
               C152530 * C152901 +
           ((C133815 * C388 - C133816 * C372 - C133815 * C389 + C152912 * C408 +
             C133817 * C1727 - C133818 * C1708 - C133817 * C1728 +
             C152913 * C1744 + C133819 * C1729 - C133820 * C1709 -
             C133819 * C1730 + C133814 * C1745) *
                C152696 * C152807 +
            (C134199 + C134200 + C134201) * C152696 * C152462) *
               C152530 * C152870) *
              C365 +
          (((C134198 + C134197 + C134196) * C152696 * C152807 +
            (C134202 + C134203 + C134204) * C152696 * C152462) *
               C152530 * C152901 -
           ((C133897 + C133898 + C133899) * C152696 * C152462 +
            (C133896 + C133895 + C133894) * C152696 * C152807) *
               C152530 * C152917 -
           ((C134205 + C134206 + C134207) * C152696 * C152462 +
            (C134201 + C134200 + C134199) * C152696 * C152807) *
               C152530 * C152870) *
              C366 +
          (((C133899 + C133898 + C133897) * C152696 * C152807 +
            (C133900 + C133901 + C133902) * C152696 * C152462) *
               C152530 * C152917 -
           ((C133819 * C1713 - C133820 * C1701 - C133819 * C1714 +
             C133814 * C1737 + C133817 * C1239 - C133818 * C1230 -
             C133817 * C1240 + C152913 * C1248 + C133815 * C380 -
             C133816 * C368 - C133815 * C381 + C152912 * C404) *
                C152696 * C152462 +
            (C134204 + C134203 + C134202) * C152696 * C152807) *
               C152530 * C152901 +
           ((C134207 + C134206 + C134205) * C152696 * C152807 +
            (C133815 * C394 - C133816 * C375 - C133815 * C395 + C152912 * C411 +
             C133817 * C1721 - C133818 * C1705 - C133817 * C1722 +
             C152913 * C1741 + C133819 * C1735 - C133820 * C1712 -
             C133819 * C1736 + C133814 * C1748) *
                C152696 * C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
            C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
            C133819 * C649 - C133820 * C633 - C133819 * C650 + C133814 * C669) *
               C152696 * C152807 +
           (C133894 + C133895 + C133896) * C152696 * C152462) *
              C152530 * C152512 * C129 -
          ((C133897 + C133898 + C133899) * C152696 * C152462 +
           (C133896 + C133895 + C133894) * C152696 * C152807) *
              C152530 * C152512 * C130 +
          ((C133899 + C133898 + C133897) * C152696 * C152807 +
           (C133900 + C133901 + C133902) * C152696 * C152462) *
              C152530 * C152512 * C131 -
          ((C133903 + C133904 + C133905) * C152696 * C152462 +
           (C133902 + C133901 + C133900) * C152696 * C152807) *
              C152530 * C152512 * C132 +
          ((C133905 + C133904 + C133903) * C152696 * C152807 +
           (C133815 * C154 - C133816 * C141 - C133815 * C155 + C152912 * C165 +
            C133817 * C661 - C133818 * C639 - C133817 * C662 + C152913 * C675 +
            C133819 * C663 - C133820 * C640 - C133819 * C664 + C133814 * C676) *
               C152696 * C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152696 * C152807 +
            (C133894 + C133895 + C133896) * C152696 * C152462) *
               C152530 * C1429 -
           ((C134196 + C134197 + C134198) * C152696 * C152462 +
            (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
             C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
             C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
             C133816 * C371 - C133815 * C387 + C152912 * C407) *
                C152696 * C152807) *
               C152530 * C1430 +
           ((C133815 * C388 - C133816 * C372 - C133815 * C389 + C152912 * C408 +
             C133817 * C1727 - C133818 * C1708 - C133817 * C1728 +
             C152913 * C1744 + C133819 * C1729 - C133820 * C1709 -
             C133819 * C1730 + C133814 * C1745) *
                C152696 * C152807 +
            (C134199 + C134200 + C134201) * C152696 * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C134198 + C134197 + C134196) * C152696 * C152807 +
            (C134202 + C134203 + C134204) * C152696 * C152462) *
               C152530 * C1430 -
           ((C133897 + C133898 + C133899) * C152696 * C152462 +
            (C133896 + C133895 + C133894) * C152696 * C152807) *
               C152530 * C1429 -
           ((C134205 + C134206 + C134207) * C152696 * C152462 +
            (C134201 + C134200 + C134199) * C152696 * C152807) *
               C152530 * C152870) *
              C152897 +
          (((C133899 + C133898 + C133897) * C152696 * C152807 +
            (C133900 + C133901 + C133902) * C152696 * C152462) *
               C152530 * C1429 -
           ((C134722 + C134723 + C134724) * C152696 * C152462 +
            (C134204 + C134203 + C134202) * C152696 * C152807) *
               C152530 * C1430 +
           ((C134207 + C134206 + C134205) * C152696 * C152807 +
            (C133815 * C394 - C133816 * C375 - C133815 * C395 + C152912 * C411 +
             C133817 * C1721 - C133818 * C1705 - C133817 * C1722 +
             C152913 * C1741 + C133819 * C1735 - C133820 * C1712 -
             C133819 * C1736 + C133814 * C1748) *
                C152696 * C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
            C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
            C133819 * C649 - C133820 * C633 - C133819 * C650 + C133814 * C669) *
               C152696 * C152807 +
           (C133894 + C133895 + C133896) * C152696 * C152462) *
              C152530 * C1517 -
          ((C134196 + C134197 + C134198) * C152696 * C152462 +
           (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
            C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
            C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
            C133816 * C371 - C133815 * C387 + C152912 * C407) *
               C152696 * C152807) *
              C152530 * C1518 +
          ((C133815 * C388 - C133816 * C372 - C133815 * C389 + C152912 * C408 +
            C133817 * C1727 - C133818 * C1708 - C133817 * C1728 +
            C152913 * C1744 + C133819 * C1729 - C133820 * C1709 -
            C133819 * C1730 + C133814 * C1745) *
               C152696 * C152807 +
           (C134199 + C134200 + C134201) * C152696 * C152462) *
              C152530 * C1519 -
          ((C133819 * C8183 - C133820 * C8177 - C133819 * C8184 +
            C133814 * C8195 + C133817 * C2271 - C133818 * C2266 -
            C133817 * C2272 + C152913 * C2278 + C133815 * C1535 -
            C133816 * C1525 - C133815 * C1536 + C152912 * C1549) *
               C152696 * C152462 +
           (C133819 * C8185 - C133820 * C8178 - C133819 * C8186 +
            C133814 * C8196 + C133817 * C2269 - C133818 * C2265 -
            C133817 * C2270 + C152913 * C2277 + C133815 * C1537 -
            C133816 * C1526 - C133815 * C1538 + C152912 * C1550) *
               C152696 * C152807) *
              C152530 * C1520 +
          ((C133815 * C1539 - C133816 * C1527 - C133815 * C1540 +
            C152912 * C1551 + C133817 * C8189 - C133818 * C8180 -
            C133817 * C8190 + C152913 * C8198 + C133819 * C8191 -
            C133820 * C8181 - C133819 * C8192 + C133814 * C8199) *
               C152696 * C152807 +
           (C133815 * C1541 - C133816 * C1528 - C133815 * C1542 +
            C152912 * C1552 + C133817 * C8187 - C133818 * C8179 -
            C133817 * C8188 + C152913 * C8197 + C133819 * C8193 -
            C133820 * C8182 - C133819 * C8194 + C133814 * C8200) *
               C152696 * C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152696 * C152807 +
            (C133894 + C133895 + C133896) * C152696 * C152462) *
               C2427 -
           ((C134498 + C134499 + C134500) * C152696 * C152462 +
            (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
             C133814 * C2690 + C133817 * C649 - C133818 * C633 -
             C133817 * C650 + C152913 * C669 + C133815 * C647 - C133816 * C632 -
             C133815 * C648 + C152912 * C668) *
                C152696 * C152807) *
               C2428 +
           ((C133815 * C649 - C133816 * C633 - C133815 * C650 + C152912 * C669 +
             C133817 * C2677 - C133818 * C2666 - C133817 * C2678 +
             C152913 * C2690 + C133819 * C2679 - C133820 * C2667 -
             C133819 * C2680 + C133814 * C2691) *
                C152696 * C152807 +
            (C134501 + C134502 + C134503) * C152696 * C152462) *
               C152873) *
              C152512 * C152914 +
          (((C134500 + C134499 + C134498) * C152696 * C152807 +
            (C134504 + C134505 + C134506) * C152696 * C152462) *
               C2428 -
           ((C133897 + C133898 + C133899) * C152696 * C152462 +
            (C133896 + C133895 + C133894) * C152696 * C152807) *
               C2427 -
           ((C134507 + C134508 + C134509) * C152696 * C152462 +
            (C134503 + C134502 + C134501) * C152696 * C152807) *
               C152873) *
              C152512 * C152897 +
          (((C133899 + C133898 + C133897) * C152696 * C152807 +
            (C133900 + C133901 + C133902) * C152696 * C152462) *
               C2427 -
           ((C134937 + C134938 + C134939) * C152696 * C152462 +
            (C134506 + C134505 + C134504) * C152696 * C152807) *
               C2428 +
           ((C134509 + C134508 + C134507) * C152696 * C152807 +
            (C133815 * C655 - C133816 * C636 - C133815 * C656 + C152912 * C672 +
             C133817 * C2671 - C133818 * C2663 - C133817 * C2672 +
             C152913 * C2687 + C133819 * C2685 - C133820 * C2670 -
             C133819 * C2686 + C133814 * C2694) *
                C152696 * C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152696 * C152807 +
            (C133894 + C133895 + C133896) * C152696 * C152462) *
               C2427 -
           ((C134498 + C134499 + C134500) * C152696 * C152462 +
            (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
             C133814 * C2690 + C133817 * C649 - C133818 * C633 -
             C133817 * C650 + C152913 * C669 + C133815 * C647 - C133816 * C632 -
             C133815 * C648 + C152912 * C668) *
                C152696 * C152807) *
               C2428 +
           ((C133815 * C649 - C133816 * C633 - C133815 * C650 + C152912 * C669 +
             C133817 * C2677 - C133818 * C2666 - C133817 * C2678 +
             C152913 * C2690 + C133819 * C2679 - C133820 * C2667 -
             C133819 * C2680 + C133814 * C2691) *
                C152696 * C152807 +
            (C134501 + C134502 + C134503) * C152696 * C152462) *
               C152873) *
              C152917 +
          (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
             C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
             C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
             C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                C152696 * C152807 +
            (C135266 + C135267 + C135268) * C152696 * C152462) *
               C2428 -
           ((C134196 + C134197 + C134198) * C152696 * C152462 +
            (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
             C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
             C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
             C133816 * C371 - C133815 * C387 + C152912 * C407) *
                C152696 * C152807) *
               C2427 -
           ((C133819 * C9522 - C133820 * C9512 - C133819 * C9523 +
             C133814 * C9530 + C133817 * C3215 - C133818 * C3210 -
             C133817 * C3216 + C152913 * C3222 + C133815 * C1717 -
             C133816 * C1703 - C133815 * C1718 + C152912 * C1739) *
                C152696 * C152462 +
            (C133819 * C9518 - C133820 * C9510 - C133819 * C9519 +
             C133814 * C9528 + C133817 * C3213 - C133818 * C3209 -
             C133817 * C3214 + C152913 * C3221 + C133815 * C1719 -
             C133816 * C1704 - C133815 * C1720 + C152912 * C1740) *
                C152696 * C152807) *
               C152873) *
              C152901 +
          (((C133815 * C388 - C133816 * C372 - C133815 * C389 + C152912 * C408 +
             C133817 * C1727 - C133818 * C1708 - C133817 * C1728 +
             C152913 * C1744 + C133819 * C1729 - C133820 * C1709 -
             C133819 * C1730 + C133814 * C1745) *
                C152696 * C152807 +
            (C134199 + C134200 + C134201) * C152696 * C152462) *
               C2427 -
           ((C136353 + C136354 + C136355) * C152696 * C152462 +
            (C133819 * C9516 - C133820 * C9509 - C133819 * C9517 +
             C133814 * C9527 + C133817 * C1729 - C133818 * C1709 -
             C133817 * C1730 + C152913 * C1745 + C133815 * C1727 -
             C133816 * C1708 - C133815 * C1728 + C152912 * C1744) *
                C152696 * C152807) *
               C2428 +
           ((C133815 * C1729 - C133816 * C1709 - C133815 * C1730 +
             C152912 * C1745 + C133817 * C9516 - C133818 * C9509 -
             C133817 * C9517 + C152913 * C9527 + C133819 * C9520 -
             C133820 * C9511 - C133819 * C9521 + C133814 * C9529) *
                C152696 * C152807 +
            (C133815 * C1731 - C133816 * C1710 - C133815 * C1732 +
             C152912 * C1746 + C133817 * C9514 - C133818 * C9508 -
             C133817 * C9515 + C152913 * C9526 + C133819 * C9524 -
             C133820 * C9513 - C133819 * C9525 + C133814 * C9531) *
                C152696 * C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[340] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152696 * C152807 +
                      (C133894 + C133895 + C133896) * C152696 * C152462) *
                         C4361 -
                     ((C134498 + C134499 + C134500) * C152696 * C152462 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152696 * C152807) *
                         C152617) *
                        C152828 +
                    (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
                       C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
                       C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
                       C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                          C152696 * C152807 +
                      (C135266 + C135267 + C135268) * C152696 * C152462) *
                         C152617 -
                     ((C134196 + C134197 + C134198) * C152696 * C152462 +
                      (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                       C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                       C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                       C133816 * C371 - C133815 * C387 + C152912 * C407) *
                          C152696 * C152807) *
                         C4361) *
                        C152575) *
                       C152489 +
                   ((((C134500 + C134499 + C134498) * C152696 * C152807 +
                      (C134504 + C134505 + C134506) * C152696 * C152462) *
                         C152617 -
                     ((C133897 + C133898 + C133899) * C152696 * C152462 +
                      (C133896 + C133895 + C133894) * C152696 * C152807) *
                         C4361) *
                        C152828 +
                    (((C134198 + C134197 + C134196) * C152696 * C152807 +
                      (C134202 + C134203 + C134204) * C152696 * C152462) *
                         C4361 -
                     ((C135269 + C135270 + C135271) * C152696 * C152462 +
                      (C135268 + C135267 + C135266) * C152696 * C152807) *
                         C152617) *
                        C152575) *
                       C152498 +
                   ((((C133899 + C133898 + C133897) * C152696 * C152807 +
                      (C133900 + C133901 + C133902) * C152696 * C152462) *
                         C4361 -
                     ((C134937 + C134938 + C134939) * C152696 * C152462 +
                      (C134506 + C134505 + C134504) * C152696 * C152807) *
                         C152617) *
                        C152828 +
                    (((C135271 + C135270 + C135269) * C152696 * C152807 +
                      (C133815 * C1239 - C133816 * C1230 - C133815 * C1240 +
                       C152912 * C1248 + C133817 * C1713 - C133818 * C1701 -
                       C133817 * C1714 + C152913 * C1737 + C133819 * C3219 -
                       C133820 * C3212 - C133819 * C3220 + C133814 * C3224) *
                          C152696 * C152462) *
                         C152617 -
                     ((C134722 + C134723 + C134724) * C152696 * C152462 +
                      (C134204 + C134203 + C134202) * C152696 * C152807) *
                         C4361) *
                        C152575) *
                       C3842)) /
                 (p * q * std::sqrt(p + q));
    d2ee[341] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152696 * C152807 +
                      (C133894 + C133895 + C133896) * C152696 * C152462) *
                         C152613 -
                     ((C134498 + C134499 + C134500) * C152696 * C152462 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152696 * C152807) *
                         C152620 +
                     ((C133815 * C649 - C133816 * C633 - C133815 * C650 +
                       C152912 * C669 + C133817 * C2677 - C133818 * C2666 -
                       C133817 * C2678 + C152913 * C2690 + C133819 * C2679 -
                       C133820 * C2667 - C133819 * C2680 + C133814 * C2691) *
                          C152696 * C152807 +
                      (C134501 + C134502 + C134503) * C152696 * C152462) *
                         C5033) *
                        C152828 +
                    (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
                       C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
                       C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
                       C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                          C152696 * C152807 +
                      (C135266 + C135267 + C135268) * C152696 * C152462) *
                         C152620 -
                     ((C134196 + C134197 + C134198) * C152696 * C152462 +
                      (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                       C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                       C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                       C133816 * C371 - C133815 * C387 + C152912 * C407) *
                          C152696 * C152807) *
                         C152613 -
                     ((C137416 + C137417 + C137418) * C152696 * C152462 +
                      (C133819 * C9518 - C133820 * C9510 - C133819 * C9519 +
                       C133814 * C9528 + C133817 * C3213 - C133818 * C3209 -
                       C133817 * C3214 + C152913 * C3221 + C133815 * C1719 -
                       C133816 * C1704 - C133815 * C1720 + C152912 * C1740) *
                          C152696 * C152807) *
                         C5033) *
                        C152575) *
                       C3495 +
                   ((((C134500 + C134499 + C134498) * C152696 * C152807 +
                      (C134504 + C134505 + C134506) * C152696 * C152462) *
                         C152620 -
                     ((C133897 + C133898 + C133899) * C152696 * C152462 +
                      (C133896 + C133895 + C133894) * C152696 * C152807) *
                         C152613 -
                     ((C134507 + C134508 + C134509) * C152696 * C152462 +
                      (C134503 + C134502 + C134501) * C152696 * C152807) *
                         C5033) *
                        C152828 +
                    (((C134198 + C134197 + C134196) * C152696 * C152807 +
                      (C134202 + C134203 + C134204) * C152696 * C152462) *
                         C152613 -
                     ((C135269 + C135270 + C135271) * C152696 * C152462 +
                      (C135268 + C135267 + C135266) * C152696 * C152807) *
                         C152620 +
                     ((C137418 + C137417 + C137416) * C152696 * C152807 +
                      (C133815 * C1715 - C133816 * C1702 - C133815 * C1716 +
                       C152912 * C1738 + C133817 * C3217 - C133818 * C3211 -
                       C133817 * C3218 + C152913 * C3223 + C133819 * C18412 -
                       C133820 * C18411 - C133819 * C18413 + C133814 * C18414) *
                          C152696 * C152462) *
                         C5033) *
                        C152575) *
                       C152495)) /
                 (p * q * std::sqrt(p + q));
    d2ee[342] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152696 * C152807 +
                      (C133894 + C133895 + C133896) * C152696 * C152462) *
                         C4361 -
                     ((C134498 + C134499 + C134500) * C152696 * C152462 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152696 * C152807) *
                         C152617) *
                        C152917 +
                    (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
                       C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
                       C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
                       C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                          C152696 * C152807 +
                      (C135266 + C135267 + C135268) * C152696 * C152462) *
                         C152617 -
                     ((C134196 + C134197 + C134198) * C152696 * C152462 +
                      (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                       C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                       C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                       C133816 * C371 - C133815 * C387 + C152912 * C407) *
                          C152696 * C152807) *
                         C4361) *
                        C152901 +
                    (((C133815 * C388 - C133816 * C372 - C133815 * C389 +
                       C152912 * C408 + C133817 * C1727 - C133818 * C1708 -
                       C133817 * C1728 + C152913 * C1744 + C133819 * C1729 -
                       C133820 * C1709 - C133819 * C1730 + C133814 * C1745) *
                          C152696 * C152807 +
                      (C134199 + C134200 + C134201) * C152696 * C152462) *
                         C4361 -
                     ((C136353 + C136354 + C136355) * C152696 * C152462 +
                      (C133819 * C9516 - C133820 * C9509 - C133819 * C9517 +
                       C133814 * C9527 + C133817 * C1729 - C133818 * C1709 -
                       C133817 * C1730 + C152913 * C1745 + C133815 * C1727 -
                       C133816 * C1708 - C133815 * C1728 + C152912 * C1744) *
                          C152696 * C152807) *
                         C152617) *
                        C152870) *
                       C3495 +
                   ((((C134500 + C134499 + C134498) * C152696 * C152807 +
                      (C134504 + C134505 + C134506) * C152696 * C152462) *
                         C152617 -
                     ((C133897 + C133898 + C133899) * C152696 * C152462 +
                      (C133896 + C133895 + C133894) * C152696 * C152807) *
                         C4361) *
                        C152917 +
                    (((C134198 + C134197 + C134196) * C152696 * C152807 +
                      (C134202 + C134203 + C134204) * C152696 * C152462) *
                         C4361 -
                     ((C135269 + C135270 + C135271) * C152696 * C152462 +
                      (C135268 + C135267 + C135266) * C152696 * C152807) *
                         C152617) *
                        C152901 +
                    (((C136355 + C136354 + C136353) * C152696 * C152807 +
                      (C133815 * C1723 - C133816 * C1706 - C133815 * C1724 +
                       C152912 * C1742 + C133817 * C1733 - C133818 * C1711 -
                       C133817 * C1734 + C152913 * C1747 + C133819 * C10024 -
                       C133820 * C10023 - C133819 * C10025 + C133814 * C10026) *
                          C152696 * C152462) *
                         C152617 -
                     ((C134205 + C134206 + C134207) * C152696 * C152462 +
                      (C134201 + C134200 + C134199) * C152696 * C152807) *
                         C4361) *
                        C152870) *
                       C152495)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152696 * C152807 +
                     (C133894 + C133895 + C133896) * C152696 * C152462) *
                        C4361 -
                    ((C134498 + C134499 + C134500) * C152696 * C152462 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152696 * C152807) *
                        C152617) *
                       C152512 * C152923 +
                   (((C134500 + C134499 + C134498) * C152696 * C152807 +
                     (C134504 + C134505 + C134506) * C152696 * C152462) *
                        C152617 -
                    ((C133897 + C133898 + C133899) * C152696 * C152462 +
                     (C133896 + C133895 + C133894) * C152696 * C152807) *
                        C4361) *
                       C152512 * C152916 +
                   (((C133899 + C133898 + C133897) * C152696 * C152807 +
                     (C133900 + C133901 + C133902) * C152696 * C152462) *
                        C4361 -
                    ((C134937 + C134938 + C134939) * C152696 * C152462 +
                     (C134506 + C134505 + C134504) * C152696 * C152807) *
                        C152617) *
                       C152512 * C152899 +
                   (((C134939 + C134938 + C134937) * C152696 * C152807 +
                     (C133815 * C657 - C133816 * C637 - C133815 * C658 +
                      C152912 * C673 + C133817 * C659 - C133818 * C638 -
                      C133817 * C660 + C152913 * C674 + C133819 * C3052 -
                      C133820 * C3051 - C133819 * C3053 + C133814 * C3054) *
                         C152696 * C152462) *
                        C152617 -
                    ((C133903 + C133904 + C133905) * C152696 * C152462 +
                     (C133902 + C133901 + C133900) * C152696 * C152807) *
                        C4361) *
                       C152512 * C152874)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152696 * C152807 +
                     (C133894 + C133895 + C133896) * C152696 * C152462) *
                        C152925 -
                    ((C134498 + C134499 + C134500) * C152696 * C152462 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152696 * C152807) *
                        C152922 +
                    ((C133815 * C649 - C133816 * C633 - C133815 * C650 +
                      C152912 * C669 + C133817 * C2677 - C133818 * C2666 -
                      C133817 * C2678 + C152913 * C2690 + C133819 * C2679 -
                      C133820 * C2667 - C133819 * C2680 + C133814 * C2691) *
                         C152696 * C152807 +
                     (C134501 + C134502 + C134503) * C152696 * C152462) *
                        C152909 -
                    ((C137631 + C137632 + C137633) * C152696 * C152462 +
                     (C133819 * C18111 - C133820 * C18106 - C133819 * C18112 +
                      C133814 * C18118 + C133817 * C2679 - C133818 * C2667 -
                      C133817 * C2680 + C152913 * C2691 + C133815 * C2677 -
                      C133816 * C2666 - C133815 * C2678 + C152912 * C2690) *
                         C152696 * C152807) *
                        C152886) *
                       C152512 * C3495 +
                   (((C134500 + C134499 + C134498) * C152696 * C152807 +
                     (C134504 + C134505 + C134506) * C152696 * C152462) *
                        C152922 -
                    ((C133897 + C133898 + C133899) * C152696 * C152462 +
                     (C133896 + C133895 + C133894) * C152696 * C152807) *
                        C152925 -
                    ((C134507 + C134508 + C134509) * C152696 * C152462 +
                     (C134503 + C134502 + C134501) * C152696 * C152807) *
                        C152909 +
                    ((C137633 + C137632 + C137631) * C152696 * C152807 +
                     (C133815 * C2673 - C133816 * C2664 - C133815 * C2674 +
                      C152912 * C2688 + C133817 * C2683 - C133818 * C2669 -
                      C133817 * C2684 + C152913 * C2693 + C133819 * C18631 -
                      C133820 * C18630 - C133819 * C18632 + C133814 * C18633) *
                         C152696 * C152462) *
                        C152886) *
                       C152512 * C152495)) /
                     (p * q * std::sqrt(p + q));
    d2ee[343] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152696 * C152807 +
                     (C133894 + C133895 + C133896) * C152696 * C152462) *
                        C152613 -
                    ((C134498 + C134499 + C134500) * C152696 * C152462 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152696 * C152807) *
                        C152620 +
                    ((C133815 * C649 - C133816 * C633 - C133815 * C650 +
                      C152912 * C669 + C133817 * C2677 - C133818 * C2666 -
                      C133817 * C2678 + C152913 * C2690 + C133819 * C2679 -
                      C133820 * C2667 - C133819 * C2680 + C133814 * C2691) *
                         C152696 * C152807 +
                     (C134501 + C134502 + C134503) * C152696 * C152462) *
                        C5033) *
                       C152512 * C152489 +
                   (((C134500 + C134499 + C134498) * C152696 * C152807 +
                     (C134504 + C134505 + C134506) * C152696 * C152462) *
                        C152620 -
                    ((C133897 + C133898 + C133899) * C152696 * C152462 +
                     (C133896 + C133895 + C133894) * C152696 * C152807) *
                        C152613 -
                    ((C134507 + C134508 + C134509) * C152696 * C152462 +
                     (C134503 + C134502 + C134501) * C152696 * C152807) *
                        C5033) *
                       C152512 * C152498 +
                   (((C133899 + C133898 + C133897) * C152696 * C152807 +
                     (C133900 + C133901 + C133902) * C152696 * C152462) *
                        C152613 -
                    ((C134937 + C134938 + C134939) * C152696 * C152462 +
                     (C134506 + C134505 + C134504) * C152696 * C152807) *
                        C152620 +
                    ((C134509 + C134508 + C134507) * C152696 * C152807 +
                     (C133815 * C655 - C133816 * C636 - C133815 * C656 +
                      C152912 * C672 + C133817 * C2671 - C133818 * C2663 -
                      C133817 * C2672 + C152913 * C2687 + C133819 * C2685 -
                      C133820 * C2670 - C133819 * C2686 + C133814 * C2694) *
                         C152696 * C152462) *
                        C5033) *
                       C152512 * C3842)) /
                 (p * q * std::sqrt(p + q));
    d2ee[344] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152696 * C152807 +
                     (C133894 + C133895 + C133896) * C152696 * C152462) *
                        C4361 -
                    ((C134498 + C134499 + C134500) * C152696 * C152462 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152696 * C152807) *
                        C152617) *
                       C152512 * C152923 +
                   (((C134500 + C134499 + C134498) * C152696 * C152807 +
                     (C134504 + C134505 + C134506) * C152696 * C152462) *
                        C152617 -
                    ((C133897 + C133898 + C133899) * C152696 * C152462 +
                     (C133896 + C133895 + C133894) * C152696 * C152807) *
                        C4361) *
                       C152512 * C152916 +
                   (((C133899 + C133898 + C133897) * C152696 * C152807 +
                     (C133900 + C133901 + C133902) * C152696 * C152462) *
                        C4361 -
                    ((C134937 + C134938 + C134939) * C152696 * C152462 +
                     (C134506 + C134505 + C134504) * C152696 * C152807) *
                        C152617) *
                       C152512 * C152899 +
                   (((C134939 + C134938 + C134937) * C152696 * C152807 +
                     (C133815 * C657 - C133816 * C637 - C133815 * C658 +
                      C152912 * C673 + C133817 * C659 - C133818 * C638 -
                      C133817 * C660 + C152913 * C674 + C133819 * C3052 -
                      C133820 * C3051 - C133819 * C3053 + C133814 * C3054) *
                         C152696 * C152462) *
                        C152617 -
                    ((C133903 + C133904 + C133905) * C152696 * C152462 +
                     (C133902 + C133901 + C133900) * C152696 * C152807) *
                        C4361) *
                       C152512 * C152874)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152696 * C152807 +
                      (C133894 + C133895 + C133896) * C152696 * C152462) *
                         C4361 -
                     ((C134498 + C134499 + C134500) * C152696 * C152462 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152696 * C152807) *
                         C152617) *
                        C152917 +
                    (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
                       C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
                       C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
                       C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                          C152696 * C152807 +
                      (C135266 + C135267 + C135268) * C152696 * C152462) *
                         C152617 -
                     ((C134196 + C134197 + C134198) * C152696 * C152462 +
                      (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                       C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                       C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                       C133816 * C371 - C133815 * C387 + C152912 * C407) *
                          C152696 * C152807) *
                         C4361) *
                        C152901 +
                    (((C133815 * C388 - C133816 * C372 - C133815 * C389 +
                       C152912 * C408 + C133817 * C1727 - C133818 * C1708 -
                       C133817 * C1728 + C152913 * C1744 + C133819 * C1729 -
                       C133820 * C1709 - C133819 * C1730 + C133814 * C1745) *
                          C152696 * C152807 +
                      (C134199 + C134200 + C134201) * C152696 * C152462) *
                         C4361 -
                     ((C136353 + C136354 + C136355) * C152696 * C152462 +
                      (C133819 * C9516 - C133820 * C9509 - C133819 * C9517 +
                       C133814 * C9527 + C133817 * C1729 - C133818 * C1709 -
                       C133817 * C1730 + C152913 * C1745 + C133815 * C1727 -
                       C133816 * C1708 - C133815 * C1728 + C152912 * C1744) *
                          C152696 * C152807) *
                         C152617) *
                        C152870) *
                       C3495 +
                   ((((C134500 + C134499 + C134498) * C152696 * C152807 +
                      (C134504 + C134505 + C134506) * C152696 * C152462) *
                         C152617 -
                     ((C133897 + C133898 + C133899) * C152696 * C152462 +
                      (C133896 + C133895 + C133894) * C152696 * C152807) *
                         C4361) *
                        C152917 +
                    (((C134198 + C134197 + C134196) * C152696 * C152807 +
                      (C134202 + C134203 + C134204) * C152696 * C152462) *
                         C4361 -
                     ((C135269 + C135270 + C135271) * C152696 * C152462 +
                      (C135268 + C135267 + C135266) * C152696 * C152807) *
                         C152617) *
                        C152901 +
                    (((C136355 + C136354 + C136353) * C152696 * C152807 +
                      (C133815 * C1723 - C133816 * C1706 - C133815 * C1724 +
                       C152912 * C1742 + C133817 * C1733 - C133818 * C1711 -
                       C133817 * C1734 + C152913 * C1747 + C133819 * C10024 -
                       C133820 * C10023 - C133819 * C10025 + C133814 * C10026) *
                          C152696 * C152462) *
                         C152617 -
                     ((C134205 + C134206 + C134207) * C152696 * C152462 +
                      (C134201 + C134200 + C134199) * C152696 * C152807) *
                         C4361) *
                        C152870) *
                       C152495)) /
                     (p * q * std::sqrt(p + q));
    d2ee[345] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152696 * C152807 +
                     (C133894 + C133895 + C133896) * C152696 * C152462) *
                        C152530 * C152828 -
                    ((C134196 + C134197 + C134198) * C152696 * C152462 +
                     (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                      C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                      C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                      C133816 * C371 - C133815 * C387 + C152912 * C407) *
                         C152696 * C152807) *
                        C152530 * C152575) *
                       C873 +
                   (((C134198 + C134197 + C134196) * C152696 * C152807 +
                     (C134202 + C134203 + C134204) * C152696 * C152462) *
                        C152530 * C152575 -
                    ((C133897 + C133898 + C133899) * C152696 * C152462 +
                     (C133896 + C133895 + C133894) * C152696 * C152807) *
                        C152530 * C152828) *
                       C874 +
                   (((C133899 + C133898 + C133897) * C152696 * C152807 +
                     (C133900 + C133901 + C133902) * C152696 * C152462) *
                        C152530 * C152828 -
                    ((C134722 + C134723 + C134724) * C152696 * C152462 +
                     (C134204 + C134203 + C134202) * C152696 * C152807) *
                        C152530 * C152575) *
                       C875 +
                   (((C134724 + C134723 + C134722) * C152696 * C152807 +
                     (C133815 * C396 - C133816 * C376 - C133815 * C397 +
                      C152912 * C412 + C133817 * C1241 - C133818 * C1231 -
                      C133817 * C1242 + C152913 * C1249 + C133819 * C2890 -
                      C133820 * C2889 - C133819 * C2891 + C133814 * C2892) *
                         C152696 * C152462) *
                        C152530 * C152575 -
                    ((C133903 + C133904 + C133905) * C152696 * C152462 +
                     (C133902 + C133901 + C133900) * C152696 * C152807) *
                        C152530 * C152828) *
                       C152874)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152696 * C152807 +
                     (C133894 + C133895 + C133896) * C152696 * C152462) *
                        C152530 * C1879 -
                    ((C134196 + C134197 + C134198) * C152696 * C152462 +
                     (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                      C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                      C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                      C133816 * C371 - C133815 * C387 + C152912 * C407) *
                         C152696 * C152807) *
                        C152530 * C1880 +
                    ((C133815 * C388 - C133816 * C372 - C133815 * C389 +
                      C152912 * C408 + C133817 * C1727 - C133818 * C1708 -
                      C133817 * C1728 + C152913 * C1744 + C133819 * C1729 -
                      C133820 * C1709 - C133819 * C1730 + C133814 * C1745) *
                         C152696 * C152807 +
                     (C134199 + C134200 + C134201) * C152696 * C152462) *
                        C152530 * C1881 -
                    ((C136042 + C136043 + C136044) * C152696 * C152462 +
                     (C133819 * C8185 - C133820 * C8178 - C133819 * C8186 +
                      C133814 * C8196 + C133817 * C2269 - C133818 * C2265 -
                      C133817 * C2270 + C152913 * C2277 + C133815 * C1537 -
                      C133816 * C1526 - C133815 * C1538 + C152912 * C1550) *
                         C152696 * C152807) *
                        C152530 * C152880) *
                       C152814 +
                   (((C134198 + C134197 + C134196) * C152696 * C152807 +
                     (C134202 + C134203 + C134204) * C152696 * C152462) *
                        C152530 * C1880 -
                    ((C133897 + C133898 + C133899) * C152696 * C152462 +
                     (C133896 + C133895 + C133894) * C152696 * C152807) *
                        C152530 * C1879 -
                    ((C134205 + C134206 + C134207) * C152696 * C152462 +
                     (C134201 + C134200 + C134199) * C152696 * C152807) *
                        C152530 * C1881 +
                    ((C136044 + C136043 + C136042) * C152696 * C152807 +
                     (C133815 * C1533 - C133816 * C1524 - C133815 * C1534 +
                      C152912 * C1548 + C133817 * C2273 - C133818 * C2267 -
                      C133817 * C2274 + C152913 * C2279 + C133819 * C9823 -
                      C133820 * C9822 - C133819 * C9824 + C133814 * C9825) *
                         C152696 * C152462) *
                        C152530 * C152880) *
                       C152495)) /
                     (p * q * std::sqrt(p + q));
    d2ee[346] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152696 * C152807 +
                      (C133894 + C133895 + C133896) * C152696 * C152462) *
                         C152829 -
                     ((C134498 + C134499 + C134500) * C152696 * C152462 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152696 * C152807) *
                         C152617) *
                        C152828 +
                    (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
                       C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
                       C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
                       C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                          C152696 * C152807 +
                      (C135266 + C135267 + C135268) * C152696 * C152462) *
                         C152617 -
                     ((C134196 + C134197 + C134198) * C152696 * C152462 +
                      (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                       C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                       C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                       C133816 * C371 - C133815 * C387 + C152912 * C407) *
                          C152696 * C152807) *
                         C152829) *
                        C152575) *
                       C365 +
                   ((((C134500 + C134499 + C134498) * C152696 * C152807 +
                      (C134504 + C134505 + C134506) * C152696 * C152462) *
                         C152617 -
                     ((C133897 + C133898 + C133899) * C152696 * C152462 +
                      (C133896 + C133895 + C133894) * C152696 * C152807) *
                         C152829) *
                        C152828 +
                    (((C134198 + C134197 + C134196) * C152696 * C152807 +
                      (C134202 + C134203 + C134204) * C152696 * C152462) *
                         C152829 -
                     ((C135269 + C135270 + C135271) * C152696 * C152462 +
                      (C135268 + C135267 + C135266) * C152696 * C152807) *
                         C152617) *
                        C152575) *
                       C366 +
                   ((((C133899 + C133898 + C133897) * C152696 * C152807 +
                      (C133900 + C133901 + C133902) * C152696 * C152462) *
                         C152829 -
                     ((C134937 + C134938 + C134939) * C152696 * C152462 +
                      (C134506 + C134505 + C134504) * C152696 * C152807) *
                         C152617) *
                        C152828 +
                    (((C135271 + C135270 + C135269) * C152696 * C152807 +
                      (C133815 * C1239 - C133816 * C1230 - C133815 * C1240 +
                       C152912 * C1248 + C133817 * C1713 - C133818 * C1701 -
                       C133817 * C1714 + C152913 * C1737 + C133819 * C3219 -
                       C133820 * C3212 - C133819 * C3220 + C133814 * C3224) *
                          C152696 * C152462) *
                         C152617 -
                     ((C134722 + C134723 + C134724) * C152696 * C152462 +
                      (C134204 + C134203 + C134202) * C152696 * C152807) *
                         C152829) *
                        C152575) *
                       C152864)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152696 * C152807 +
                     (C133894 + C133895 + C133896) * C152696 * C152462) *
                        C152829 -
                    ((C134498 + C134499 + C134500) * C152696 * C152462 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152696 * C152807) *
                        C152617) *
                       C1879 +
                   (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
                      C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
                      C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
                      C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                         C152696 * C152807 +
                     (C135266 + C135267 + C135268) * C152696 * C152462) *
                        C152617 -
                    ((C134196 + C134197 + C134198) * C152696 * C152462 +
                     (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                      C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                      C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                      C133816 * C371 - C133815 * C387 + C152912 * C407) *
                         C152696 * C152807) *
                        C152829) *
                       C1880 +
                   (((C133815 * C388 - C133816 * C372 - C133815 * C389 +
                      C152912 * C408 + C133817 * C1727 - C133818 * C1708 -
                      C133817 * C1728 + C152913 * C1744 + C133819 * C1729 -
                      C133820 * C1709 - C133819 * C1730 + C133814 * C1745) *
                         C152696 * C152807 +
                     (C134199 + C134200 + C134201) * C152696 * C152462) *
                        C152829 -
                    ((C136353 + C136354 + C136355) * C152696 * C152462 +
                     (C133819 * C9516 - C133820 * C9509 - C133819 * C9517 +
                      C133814 * C9527 + C133817 * C1729 - C133818 * C1709 -
                      C133817 * C1730 + C152913 * C1745 + C133815 * C1727 -
                      C133816 * C1708 - C133815 * C1728 + C152912 * C1744) *
                         C152696 * C152807) *
                        C152617) *
                       C1881 +
                   (((C133815 * C2269 - C133816 * C2265 - C133815 * C2270 +
                      C152912 * C2277 + C133817 * C8185 - C133818 * C8178 -
                      C133817 * C8186 + C152913 * C8196 + C133819 * C10240 -
                      C133820 * C10238 - C133819 * C10241 + C133814 * C10244) *
                         C152696 * C152807 +
                     (C133815 * C2271 - C133816 * C2266 - C133815 * C2272 +
                      C152912 * C2278 + C133817 * C8183 - C133818 * C8177 -
                      C133817 * C8184 + C152913 * C8195 + C133819 * C10242 -
                      C133820 * C10239 - C133819 * C10243 + C133814 * C10245) *
                         C152696 * C152462) *
                        C152617 -
                    ((C136042 + C136043 + C136044) * C152696 * C152462 +
                     (C133819 * C8185 - C133820 * C8178 - C133819 * C8186 +
                      C133814 * C8196 + C133817 * C2269 - C133818 * C2265 -
                      C133817 * C2270 + C152913 * C2277 + C133815 * C1537 -
                      C133816 * C1526 - C133815 * C1538 + C152912 * C1550) *
                         C152696 * C152807) *
                        C152829) *
                       C152880) *
                  C152484) /
                     (p * q * std::sqrt(p + q));
    d2ee[347] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152696 * C152807 +
            (C133894 + C133895 + C133896) * C152696 * C152462) *
               C152530 * C152917 -
           ((C134196 + C134197 + C134198) * C152696 * C152462 +
            (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
             C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
             C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
             C133816 * C371 - C133815 * C387 + C152912 * C407) *
                C152696 * C152807) *
               C152530 * C152901 +
           ((C133815 * C388 - C133816 * C372 - C133815 * C389 + C152912 * C408 +
             C133817 * C1727 - C133818 * C1708 - C133817 * C1728 +
             C152913 * C1744 + C133819 * C1729 - C133820 * C1709 -
             C133819 * C1730 + C133814 * C1745) *
                C152696 * C152807 +
            (C134199 + C134200 + C134201) * C152696 * C152462) *
               C152530 * C152870) *
              C365 +
          (((C134198 + C134197 + C134196) * C152696 * C152807 +
            (C134202 + C134203 + C134204) * C152696 * C152462) *
               C152530 * C152901 -
           ((C133897 + C133898 + C133899) * C152696 * C152462 +
            (C133896 + C133895 + C133894) * C152696 * C152807) *
               C152530 * C152917 -
           ((C134205 + C134206 + C134207) * C152696 * C152462 +
            (C134201 + C134200 + C134199) * C152696 * C152807) *
               C152530 * C152870) *
              C366 +
          (((C133899 + C133898 + C133897) * C152696 * C152807 +
            (C133900 + C133901 + C133902) * C152696 * C152462) *
               C152530 * C152917 -
           ((C133819 * C1713 - C133820 * C1701 - C133819 * C1714 +
             C133814 * C1737 + C133817 * C1239 - C133818 * C1230 -
             C133817 * C1240 + C152913 * C1248 + C133815 * C380 -
             C133816 * C368 - C133815 * C381 + C152912 * C404) *
                C152696 * C152462 +
            (C134204 + C134203 + C134202) * C152696 * C152807) *
               C152530 * C152901 +
           ((C134207 + C134206 + C134205) * C152696 * C152807 +
            (C133815 * C394 - C133816 * C375 - C133815 * C395 + C152912 * C411 +
             C133817 * C1721 - C133818 * C1705 - C133817 * C1722 +
             C152913 * C1741 + C133819 * C1735 - C133820 * C1712 -
             C133819 * C1736 + C133814 * C1748) *
                C152696 * C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
            C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
            C133819 * C649 - C133820 * C633 - C133819 * C650 + C133814 * C669) *
               C152696 * C152807 +
           (C133894 + C133895 + C133896) * C152696 * C152462) *
              C152530 * C152512 * C129 -
          ((C133897 + C133898 + C133899) * C152696 * C152462 +
           (C133896 + C133895 + C133894) * C152696 * C152807) *
              C152530 * C152512 * C130 +
          ((C133899 + C133898 + C133897) * C152696 * C152807 +
           (C133900 + C133901 + C133902) * C152696 * C152462) *
              C152530 * C152512 * C131 -
          ((C133903 + C133904 + C133905) * C152696 * C152462 +
           (C133902 + C133901 + C133900) * C152696 * C152807) *
              C152530 * C152512 * C132 +
          ((C133905 + C133904 + C133903) * C152696 * C152807 +
           (C133815 * C154 - C133816 * C141 - C133815 * C155 + C152912 * C165 +
            C133817 * C661 - C133818 * C639 - C133817 * C662 + C152913 * C675 +
            C133819 * C663 - C133820 * C640 - C133819 * C664 + C133814 * C676) *
               C152696 * C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152696 * C152807 +
            (C133894 + C133895 + C133896) * C152696 * C152462) *
               C152918 -
           ((C134498 + C134499 + C134500) * C152696 * C152462 +
            (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
             C133814 * C2690 + C133817 * C649 - C133818 * C633 -
             C133817 * C650 + C152913 * C669 + C133815 * C647 - C133816 * C632 -
             C133815 * C648 + C152912 * C668) *
                C152696 * C152807) *
               C152903 +
           ((C133815 * C649 - C133816 * C633 - C133815 * C650 + C152912 * C669 +
             C133817 * C2677 - C133818 * C2666 - C133817 * C2678 +
             C152913 * C2690 + C133819 * C2679 - C133820 * C2667 -
             C133819 * C2680 + C133814 * C2691) *
                C152696 * C152807 +
            (C134501 + C134502 + C134503) * C152696 * C152462) *
               C152873) *
              C152512 * C365 +
          (((C134500 + C134499 + C134498) * C152696 * C152807 +
            (C134504 + C134505 + C134506) * C152696 * C152462) *
               C152903 -
           ((C133897 + C133898 + C133899) * C152696 * C152462 +
            (C133896 + C133895 + C133894) * C152696 * C152807) *
               C152918 -
           ((C134507 + C134508 + C134509) * C152696 * C152462 +
            (C134503 + C134502 + C134501) * C152696 * C152807) *
               C152873) *
              C152512 * C366 +
          (((C133899 + C133898 + C133897) * C152696 * C152807 +
            (C133900 + C133901 + C133902) * C152696 * C152462) *
               C152918 -
           ((C133819 * C2671 - C133820 * C2663 - C133819 * C2672 +
             C133814 * C2687 + C133817 * C655 - C133818 * C636 -
             C133817 * C656 + C152913 * C672 + C133815 * C641 - C133816 * C629 -
             C133815 * C642 + C152912 * C665) *
                C152696 * C152462 +
            (C134506 + C134505 + C134504) * C152696 * C152807) *
               C152903 +
           ((C134509 + C134508 + C134507) * C152696 * C152807 +
            (C133815 * C655 - C133816 * C636 - C133815 * C656 + C152912 * C672 +
             C133817 * C2671 - C133818 * C2663 - C133817 * C2672 +
             C152913 * C2687 + C133819 * C2685 - C133820 * C2670 -
             C133819 * C2686 + C133814 * C2694) *
                C152696 * C152462) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152696 * C152807 +
            (C133894 + C133895 + C133896) * C152696 * C152462) *
               C152530 * C1429 -
           ((C134196 + C134197 + C134198) * C152696 * C152462 +
            (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
             C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
             C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
             C133816 * C371 - C133815 * C387 + C152912 * C407) *
                C152696 * C152807) *
               C152530 * C1430 +
           ((C133815 * C388 - C133816 * C372 - C133815 * C389 + C152912 * C408 +
             C133817 * C1727 - C133818 * C1708 - C133817 * C1728 +
             C152913 * C1744 + C133819 * C1729 - C133820 * C1709 -
             C133819 * C1730 + C133814 * C1745) *
                C152696 * C152807 +
            (C134199 + C134200 + C134201) * C152696 * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C134198 + C134197 + C134196) * C152696 * C152807 +
            (C134202 + C134203 + C134204) * C152696 * C152462) *
               C152530 * C1430 -
           ((C133897 + C133898 + C133899) * C152696 * C152462 +
            (C133896 + C133895 + C133894) * C152696 * C152807) *
               C152530 * C1429 -
           ((C134205 + C134206 + C134207) * C152696 * C152462 +
            (C134201 + C134200 + C134199) * C152696 * C152807) *
               C152530 * C152870) *
              C152897 +
          (((C133899 + C133898 + C133897) * C152696 * C152807 +
            (C133900 + C133901 + C133902) * C152696 * C152462) *
               C152530 * C1429 -
           ((C134722 + C134723 + C134724) * C152696 * C152462 +
            (C134204 + C134203 + C134202) * C152696 * C152807) *
               C152530 * C1430 +
           ((C134207 + C134206 + C134205) * C152696 * C152807 +
            (C133815 * C394 - C133816 * C375 - C133815 * C395 + C152912 * C411 +
             C133817 * C1721 - C133818 * C1705 - C133817 * C1722 +
             C152913 * C1741 + C133819 * C1735 - C133820 * C1712 -
             C133819 * C1736 + C133814 * C1748) *
                C152696 * C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
            C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
            C133819 * C649 - C133820 * C633 - C133819 * C650 + C133814 * C669) *
               C152696 * C152807 +
           (C133894 + C133895 + C133896) * C152696 * C152462) *
              C152530 * C1517 -
          ((C134196 + C134197 + C134198) * C152696 * C152462 +
           (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
            C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
            C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
            C133816 * C371 - C133815 * C387 + C152912 * C407) *
               C152696 * C152807) *
              C152530 * C1518 +
          ((C133815 * C388 - C133816 * C372 - C133815 * C389 + C152912 * C408 +
            C133817 * C1727 - C133818 * C1708 - C133817 * C1728 +
            C152913 * C1744 + C133819 * C1729 - C133820 * C1709 -
            C133819 * C1730 + C133814 * C1745) *
               C152696 * C152807 +
           (C134199 + C134200 + C134201) * C152696 * C152462) *
              C152530 * C1519 -
          ((C133819 * C8183 - C133820 * C8177 - C133819 * C8184 +
            C133814 * C8195 + C133817 * C2271 - C133818 * C2266 -
            C133817 * C2272 + C152913 * C2278 + C133815 * C1535 -
            C133816 * C1525 - C133815 * C1536 + C152912 * C1549) *
               C152696 * C152462 +
           (C133819 * C8185 - C133820 * C8178 - C133819 * C8186 +
            C133814 * C8196 + C133817 * C2269 - C133818 * C2265 -
            C133817 * C2270 + C152913 * C2277 + C133815 * C1537 -
            C133816 * C1526 - C133815 * C1538 + C152912 * C1550) *
               C152696 * C152807) *
              C152530 * C1520 +
          ((C133815 * C1539 - C133816 * C1527 - C133815 * C1540 +
            C152912 * C1551 + C133817 * C8189 - C133818 * C8180 -
            C133817 * C8190 + C152913 * C8198 + C133819 * C8191 -
            C133820 * C8181 - C133819 * C8192 + C133814 * C8199) *
               C152696 * C152807 +
           (C133815 * C1541 - C133816 * C1528 - C133815 * C1542 +
            C152912 * C1552 + C133817 * C8187 - C133818 * C8179 -
            C133817 * C8188 + C152913 * C8197 + C133819 * C8193 -
            C133820 * C8182 - C133819 * C8194 + C133814 * C8200) *
               C152696 * C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152696 * C152807 +
            (C133894 + C133895 + C133896) * C152696 * C152462) *
               C152918 -
           ((C134498 + C134499 + C134500) * C152696 * C152462 +
            (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
             C133814 * C2690 + C133817 * C649 - C133818 * C633 -
             C133817 * C650 + C152913 * C669 + C133815 * C647 - C133816 * C632 -
             C133815 * C648 + C152912 * C668) *
                C152696 * C152807) *
               C152903 +
           ((C133815 * C649 - C133816 * C633 - C133815 * C650 + C152912 * C669 +
             C133817 * C2677 - C133818 * C2666 - C133817 * C2678 +
             C152913 * C2690 + C133819 * C2679 - C133820 * C2667 -
             C133819 * C2680 + C133814 * C2691) *
                C152696 * C152807 +
            (C134501 + C134502 + C134503) * C152696 * C152462) *
               C152873) *
              C1429 +
          (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
             C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
             C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
             C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                C152696 * C152807 +
            (C135266 + C135267 + C135268) * C152696 * C152462) *
               C152903 -
           ((C134196 + C134197 + C134198) * C152696 * C152462 +
            (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
             C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
             C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
             C133816 * C371 - C133815 * C387 + C152912 * C407) *
                C152696 * C152807) *
               C152918 -
           ((C133819 * C9522 - C133820 * C9512 - C133819 * C9523 +
             C133814 * C9530 + C133817 * C3215 - C133818 * C3210 -
             C133817 * C3216 + C152913 * C3222 + C133815 * C1717 -
             C133816 * C1703 - C133815 * C1718 + C152912 * C1739) *
                C152696 * C152462 +
            (C133819 * C9518 - C133820 * C9510 - C133819 * C9519 +
             C133814 * C9528 + C133817 * C3213 - C133818 * C3209 -
             C133817 * C3214 + C152913 * C3221 + C133815 * C1719 -
             C133816 * C1704 - C133815 * C1720 + C152912 * C1740) *
                C152696 * C152807) *
               C152873) *
              C1430 +
          (((C133815 * C388 - C133816 * C372 - C133815 * C389 + C152912 * C408 +
             C133817 * C1727 - C133818 * C1708 - C133817 * C1728 +
             C152913 * C1744 + C133819 * C1729 - C133820 * C1709 -
             C133819 * C1730 + C133814 * C1745) *
                C152696 * C152807 +
            (C134199 + C134200 + C134201) * C152696 * C152462) *
               C152918 -
           ((C133819 * C9514 - C133820 * C9508 - C133819 * C9515 +
             C133814 * C9526 + C133817 * C1731 - C133818 * C1710 -
             C133817 * C1732 + C152913 * C1746 + C133815 * C1725 -
             C133816 * C1707 - C133815 * C1726 + C152912 * C1743) *
                C152696 * C152462 +
            (C133819 * C9516 - C133820 * C9509 - C133819 * C9517 +
             C133814 * C9527 + C133817 * C1729 - C133818 * C1709 -
             C133817 * C1730 + C152913 * C1745 + C133815 * C1727 -
             C133816 * C1708 - C133815 * C1728 + C152912 * C1744) *
                C152696 * C152807) *
               C152903 +
           ((C133815 * C1729 - C133816 * C1709 - C133815 * C1730 +
             C152912 * C1745 + C133817 * C9516 - C133818 * C9509 -
             C133817 * C9517 + C152913 * C9527 + C133819 * C9520 -
             C133820 * C9511 - C133819 * C9521 + C133814 * C9529) *
                C152696 * C152807 +
            (C133815 * C1731 - C133816 * C1710 - C133815 * C1732 +
             C152912 * C1746 + C133817 * C9514 - C133818 * C9508 -
             C133817 * C9515 + C152913 * C9526 + C133819 * C9524 -
             C133820 * C9513 - C133819 * C9525 + C133814 * C9531) *
                C152696 * C152462) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[348] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                      C152912 * C160 + C133817 * C647 - C133818 * C632 -
                      C133817 * C648 + C152913 * C668 + C133819 * C649 -
                      C133820 * C633 - C133819 * C650 + C133814 * C669) *
                         C152696 * C152807 +
                     (C133894 + C133895 + C133896) * C152696 * C152462) *
                        C152829 -
                    ((C134498 + C134499 + C134500) * C152696 * C152462 +
                     (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                      C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                      C133817 * C650 + C152913 * C669 + C133815 * C647 -
                      C133816 * C632 - C133815 * C648 + C152912 * C668) *
                         C152696 * C152807) *
                        C152617) *
                       C152512 * C873 +
                   (((C134500 + C134499 + C134498) * C152696 * C152807 +
                     (C134504 + C134505 + C134506) * C152696 * C152462) *
                        C152617 -
                    ((C133897 + C133898 + C133899) * C152696 * C152462 +
                     (C133896 + C133895 + C133894) * C152696 * C152807) *
                        C152829) *
                       C152512 * C874 +
                   (((C133899 + C133898 + C133897) * C152696 * C152807 +
                     (C133900 + C133901 + C133902) * C152696 * C152462) *
                        C152829 -
                    ((C134937 + C134938 + C134939) * C152696 * C152462 +
                     (C134506 + C134505 + C134504) * C152696 * C152807) *
                        C152617) *
                       C152512 * C875 +
                   (((C134939 + C134938 + C134937) * C152696 * C152807 +
                     (C133815 * C657 - C133816 * C637 - C133815 * C658 +
                      C152912 * C673 + C133817 * C659 - C133818 * C638 -
                      C133817 * C660 + C152913 * C674 + C133819 * C3052 -
                      C133820 * C3051 - C133819 * C3053 + C133814 * C3054) *
                         C152696 * C152462) *
                        C152617 -
                    ((C133903 + C133904 + C133905) * C152696 * C152462 +
                     (C133902 + C133901 + C133900) * C152696 * C152807) *
                        C152829) *
                       C152512 * C152874)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C133815 * C144 - C133816 * C136 - C133815 * C145 +
                       C152912 * C160 + C133817 * C647 - C133818 * C632 -
                       C133817 * C648 + C152913 * C668 + C133819 * C649 -
                       C133820 * C633 - C133819 * C650 + C133814 * C669) *
                          C152696 * C152807 +
                      (C133894 + C133895 + C133896) * C152696 * C152462) *
                         C152829 -
                     ((C134498 + C134499 + C134500) * C152696 * C152462 +
                      (C133819 * C2677 - C133820 * C2666 - C133819 * C2678 +
                       C133814 * C2690 + C133817 * C649 - C133818 * C633 -
                       C133817 * C650 + C152913 * C669 + C133815 * C647 -
                       C133816 * C632 - C133815 * C648 + C152912 * C668) *
                          C152696 * C152807) *
                         C152617) *
                        C1429 +
                    (((C133815 * C1233 - C133816 * C1227 - C133815 * C1234 +
                       C152912 * C1245 + C133817 * C1719 - C133818 * C1704 -
                       C133817 * C1720 + C152913 * C1740 + C133819 * C3213 -
                       C133820 * C3209 - C133819 * C3214 + C133814 * C3221) *
                          C152696 * C152807 +
                      (C135266 + C135267 + C135268) * C152696 * C152462) *
                         C152617 -
                     ((C134196 + C134197 + C134198) * C152696 * C152462 +
                      (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
                       C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
                       C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
                       C133816 * C371 - C133815 * C387 + C152912 * C407) *
                          C152696 * C152807) *
                         C152829) *
                        C1430 +
                    (((C133815 * C388 - C133816 * C372 - C133815 * C389 +
                       C152912 * C408 + C133817 * C1727 - C133818 * C1708 -
                       C133817 * C1728 + C152913 * C1744 + C133819 * C1729 -
                       C133820 * C1709 - C133819 * C1730 + C133814 * C1745) *
                          C152696 * C152807 +
                      (C134199 + C134200 + C134201) * C152696 * C152462) *
                         C152829 -
                     ((C136353 + C136354 + C136355) * C152696 * C152462 +
                      (C133819 * C9516 - C133820 * C9509 - C133819 * C9517 +
                       C133814 * C9527 + C133817 * C1729 - C133818 * C1709 -
                       C133817 * C1730 + C152913 * C1745 + C133815 * C1727 -
                       C133816 * C1708 - C133815 * C1728 + C152912 * C1744) *
                          C152696 * C152807) *
                         C152617) *
                        C152870) *
                       C152814 +
                   ((((C134500 + C134499 + C134498) * C152696 * C152807 +
                      (C134504 + C134505 + C134506) * C152696 * C152462) *
                         C152617 -
                     ((C133897 + C133898 + C133899) * C152696 * C152462 +
                      (C133896 + C133895 + C133894) * C152696 * C152807) *
                         C152829) *
                        C1429 +
                    (((C134198 + C134197 + C134196) * C152696 * C152807 +
                      (C134202 + C134203 + C134204) * C152696 * C152462) *
                         C152829 -
                     ((C135269 + C135270 + C135271) * C152696 * C152462 +
                      (C135268 + C135267 + C135266) * C152696 * C152807) *
                         C152617) *
                        C1430 +
                    (((C136355 + C136354 + C136353) * C152696 * C152807 +
                      (C133815 * C1723 - C133816 * C1706 - C133815 * C1724 +
                       C152912 * C1742 + C133817 * C1733 - C133818 * C1711 -
                       C133817 * C1734 + C152913 * C1747 + C133819 * C10024 -
                       C133820 * C10023 - C133819 * C10025 + C133814 * C10026) *
                          C152696 * C152462) *
                         C152617 -
                     ((C134205 + C134206 + C134207) * C152696 * C152462 +
                      (C134201 + C134200 + C134199) * C152696 * C152807) *
                         C152829) *
                        C152870) *
                       C152495)) /
                     (p * q * std::sqrt(p + q));
    d2ee[349] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
            C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
            C133819 * C649 - C133820 * C633 - C133819 * C650 + C133814 * C669) *
               C152696 * C152807 +
           (C133894 + C133895 + C133896) * C152696 * C152462) *
              C152530 * C152512 * C129 -
          ((C133897 + C133898 + C133899) * C152696 * C152462 +
           (C133896 + C133895 + C133894) * C152696 * C152807) *
              C152530 * C152512 * C130 +
          ((C133899 + C133898 + C133897) * C152696 * C152807 +
           (C133900 + C133901 + C133902) * C152696 * C152462) *
              C152530 * C152512 * C131 -
          ((C133903 + C133904 + C133905) * C152696 * C152462 +
           (C133902 + C133901 + C133900) * C152696 * C152807) *
              C152530 * C152512 * C132 +
          ((C133905 + C133904 + C133903) * C152696 * C152807 +
           (C133815 * C154 - C133816 * C141 - C133815 * C155 + C152912 * C165 +
            C133817 * C661 - C133818 * C639 - C133817 * C662 + C152913 * C675 +
            C133819 * C663 - C133820 * C640 - C133819 * C664 + C133814 * C676) *
               C152696 * C152462) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152696 * C152807 +
            (C133894 + C133895 + C133896) * C152696 * C152462) *
               C152530 * C152917 -
           ((C134196 + C134197 + C134198) * C152696 * C152462 +
            (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
             C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
             C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
             C133816 * C371 - C133815 * C387 + C152912 * C407) *
                C152696 * C152807) *
               C152530 * C152901 +
           ((C133815 * C388 - C133816 * C372 - C133815 * C389 + C152912 * C408 +
             C133817 * C1727 - C133818 * C1708 - C133817 * C1728 +
             C152913 * C1744 + C133819 * C1729 - C133820 * C1709 -
             C133819 * C1730 + C133814 * C1745) *
                C152696 * C152807 +
            (C134199 + C134200 + C134201) * C152696 * C152462) *
               C152530 * C152870) *
              C365 +
          (((C134198 + C134197 + C134196) * C152696 * C152807 +
            (C134202 + C134203 + C134204) * C152696 * C152462) *
               C152530 * C152901 -
           ((C133897 + C133898 + C133899) * C152696 * C152462 +
            (C133896 + C133895 + C133894) * C152696 * C152807) *
               C152530 * C152917 -
           ((C134205 + C134206 + C134207) * C152696 * C152462 +
            (C134201 + C134200 + C134199) * C152696 * C152807) *
               C152530 * C152870) *
              C366 +
          (((C133899 + C133898 + C133897) * C152696 * C152807 +
            (C133900 + C133901 + C133902) * C152696 * C152462) *
               C152530 * C152917 -
           ((C133819 * C1713 - C133820 * C1701 - C133819 * C1714 +
             C133814 * C1737 + C133817 * C1239 - C133818 * C1230 -
             C133817 * C1240 + C152913 * C1248 + C133815 * C380 -
             C133816 * C368 - C133815 * C381 + C152912 * C404) *
                C152696 * C152462 +
            (C134204 + C134203 + C134202) * C152696 * C152807) *
               C152530 * C152901 +
           ((C134207 + C134206 + C134205) * C152696 * C152807 +
            (C133815 * C394 - C133816 * C375 - C133815 * C395 + C152912 * C411 +
             C133817 * C1721 - C133818 * C1705 - C133817 * C1722 +
             C152913 * C1741 + C133819 * C1735 - C133820 * C1712 -
             C133819 * C1736 + C133814 * C1748) *
                C152696 * C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
             C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
             C133819 * C649 - C133820 * C633 - C133819 * C650 +
             C133814 * C669) *
                C152696 * C152807 +
            (C133894 + C133895 + C133896) * C152696 * C152462) *
               C152530 * C1429 -
           ((C134196 + C134197 + C134198) * C152696 * C152462 +
            (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
             C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
             C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
             C133816 * C371 - C133815 * C387 + C152912 * C407) *
                C152696 * C152807) *
               C152530 * C1430 +
           ((C133815 * C388 - C133816 * C372 - C133815 * C389 + C152912 * C408 +
             C133817 * C1727 - C133818 * C1708 - C133817 * C1728 +
             C152913 * C1744 + C133819 * C1729 - C133820 * C1709 -
             C133819 * C1730 + C133814 * C1745) *
                C152696 * C152807 +
            (C134199 + C134200 + C134201) * C152696 * C152462) *
               C152530 * C152870) *
              C152914 +
          (((C134198 + C134197 + C134196) * C152696 * C152807 +
            (C134202 + C134203 + C134204) * C152696 * C152462) *
               C152530 * C1430 -
           ((C133897 + C133898 + C133899) * C152696 * C152462 +
            (C133896 + C133895 + C133894) * C152696 * C152807) *
               C152530 * C1429 -
           ((C134205 + C134206 + C134207) * C152696 * C152462 +
            (C134201 + C134200 + C134199) * C152696 * C152807) *
               C152530 * C152870) *
              C152897 +
          (((C133899 + C133898 + C133897) * C152696 * C152807 +
            (C133900 + C133901 + C133902) * C152696 * C152462) *
               C152530 * C1429 -
           ((C134722 + C134723 + C134724) * C152696 * C152462 +
            (C134204 + C134203 + C134202) * C152696 * C152807) *
               C152530 * C1430 +
           ((C134207 + C134206 + C134205) * C152696 * C152807 +
            (C133815 * C394 - C133816 * C375 - C133815 * C395 + C152912 * C411 +
             C133817 * C1721 - C133818 * C1705 - C133817 * C1722 +
             C152913 * C1741 + C133819 * C1735 - C133820 * C1712 -
             C133819 * C1736 + C133814 * C1748) *
                C152696 * C152462) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C133815 * C144 - C133816 * C136 - C133815 * C145 + C152912 * C160 +
            C133817 * C647 - C133818 * C632 - C133817 * C648 + C152913 * C668 +
            C133819 * C649 - C133820 * C633 - C133819 * C650 + C133814 * C669) *
               C152696 * C152807 +
           (C133894 + C133895 + C133896) * C152696 * C152462) *
              C152530 * C1517 -
          ((C134196 + C134197 + C134198) * C152696 * C152462 +
           (C133819 * C1719 - C133820 * C1704 - C133819 * C1720 +
            C133814 * C1740 + C133817 * C1233 - C133818 * C1227 -
            C133817 * C1234 + C152913 * C1245 + C133815 * C386 -
            C133816 * C371 - C133815 * C387 + C152912 * C407) *
               C152696 * C152807) *
              C152530 * C1518 +
          ((C133815 * C388 - C133816 * C372 - C133815 * C389 + C152912 * C408 +
            C133817 * C1727 - C133818 * C1708 - C133817 * C1728 +
            C152913 * C1744 + C133819 * C1729 - C133820 * C1709 -
            C133819 * C1730 + C133814 * C1745) *
               C152696 * C152807 +
           (C134199 + C134200 + C134201) * C152696 * C152462) *
              C152530 * C1519 -
          ((C133819 * C8183 - C133820 * C8177 - C133819 * C8184 +
            C133814 * C8195 + C133817 * C2271 - C133818 * C2266 -
            C133817 * C2272 + C152913 * C2278 + C133815 * C1535 -
            C133816 * C1525 - C133815 * C1536 + C152912 * C1549) *
               C152696 * C152462 +
           (C133819 * C8185 - C133820 * C8178 - C133819 * C8186 +
            C133814 * C8196 + C133817 * C2269 - C133818 * C2265 -
            C133817 * C2270 + C152913 * C2277 + C133815 * C1537 -
            C133816 * C1526 - C133815 * C1538 + C152912 * C1550) *
               C152696 * C152807) *
              C152530 * C1520 +
          ((C133815 * C1539 - C133816 * C1527 - C133815 * C1540 +
            C152912 * C1551 + C133817 * C8189 - C133818 * C8180 -
            C133817 * C8190 + C152913 * C8198 + C133819 * C8191 -
            C133820 * C8181 - C133819 * C8192 + C133814 * C8199) *
               C152696 * C152807 +
           (C133815 * C1541 - C133816 * C1528 - C133815 * C1542 +
            C152912 * C1552 + C133817 * C8187 - C133818 * C8179 -
            C133817 * C8188 + C152913 * C8197 + C133819 * C8193 -
            C133820 * C8182 - C133819 * C8194 + C133814 * C8200) *
               C152696 * C152462) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[350] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152530 * C152571 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152530 * C152578 +
           ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152530 * C3839) *
              C152489 +
          (((C100908 + C100907) * C152696 * C51245 +
            (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
               C152530 * C152578 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152530 * C152571 -
           ((C100915 + C100916) * C152696 * C51247 +
            (C100912 + C100911) * C152696 * C51246 +
            (C100910 + C100909) * C152696 * C51245) *
               C152530 * C3839) *
              C152498 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152530 * C152571 -
           ((C101435 + C101436) * C152696 * C51247 +
            (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
               C152530 * C152578 +
           (C100920 * C51245 + (C100916 + C100915) * C152696 * C51246 +
            (C100534 * C398 - C100535 * C377 - C100534 * C399 + C100532 * C413 +
             C100536 * C2108 - C100537 * C2107 - C100536 * C2109 +
             C152775 * C2110) *
                C152696 * C51247) *
               C152530 * C3839) *
              C3842)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C152571 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C152578 +
           (C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C152530 * C3839) *
              C152489 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            C111141 * C6340) *
               C152457 * C152530 * C152578 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C152571 -
           ((C111154 + C111155) * C6340 + (C102759 + C102760) * C6339 +
            C109357 * C6338) *
               C152457 * C152530 * C3839) *
              C152498 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152530 * C152571 -
           ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
            C100917 * C6338) *
               C152457 * C152530 * C152578 +
           (C100918 * C6338 + (C102758 + C102757) * C6339 +
            (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
             C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
             C100536 * C8729 + C152775 * C8730) *
                C6340) *
               C152457 * C152530 * C3839) *
              C3842)) /
            (p * q * std::sqrt(p + q));
    d2ee[351] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C152829 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C152617) *
               C152571 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C152617 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C152829) *
               C152578 +
           (((C100534 * C388 - C100535 * C372 - C100534 * C389 +
              C100532 * C408 + C100536 * C1727 - C100537 * C1708 -
              C100536 * C1728 + C152775 * C1744) *
                 C152696 * C51245 +
             (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
                C152829 -
            ((C103075 + C103076) * C152696 * C51247 +
             (C103077 + C103078) * C152696 * C51246 +
             (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
              C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
              C100534 * C1728 + C100532 * C1744) *
                 C152696 * C51245) *
                C152617) *
               C3839) *
              C3495 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C152617 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C152829) *
               C152571 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C152829 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C152617) *
               C152578 +
           (((C103078 + C103077) * C152696 * C51245 +
             (C103076 + C103075) * C152696 * C51246 +
             (C100534 * C1721 - C100535 * C1705 - C100534 * C1722 +
              C100532 * C1741 + C100536 * C1735 - C100537 * C1712 -
              C100536 * C1736 + C152775 * C1748) *
                 C152696 * C51247) *
                C152617 -
            ((C100915 + C100916) * C152696 * C51247 +
             (C100912 + C100911) * C152696 * C51246 +
             (C100910 + C100909) * C152696 * C51245) *
                C152829) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C152829 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152617) *
               C152571 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             C111655 * C6340) *
                C152457 * C152617 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C152829) *
               C152578 +
           ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
                C152457 * C152829 -
            ((C111668 + C111669) * C6340 + (C110943 + C110942) * C6339 +
             C110889 * C6338) *
                C152457 * C152617) *
               C3839) *
              C3495 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C152617 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C152829) *
               C152571 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C152829 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C152617) *
               C152578 +
           ((C111446 * C6338 + (C111460 + C111459) * C6339 +
             (C100534 * C8187 - C100535 * C8179 - C100534 * C8188 +
              C100532 * C8197 + C100536 * C8193 - C100537 * C8182 -
              C100536 * C8194 + C152775 * C8200) *
                 C6340) *
                C152457 * C152617 -
            ((C111154 + C111155) * C6340 + (C102759 + C102760) * C6339 +
             C109357 * C6338) *
                C152457 * C152829) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[352] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152530 * C152924 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152530 * C152920 +
           ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152530 * C152906 -
           ((C102757 + C102758) * C152696 * C51247 +
            (C102759 + C102760) * C152696 * C51246 +
            (C100536 * C2269 - C100537 * C2265 - C100536 * C2270 +
             C152775 * C2277 + C100534 * C1537 - C100535 * C1526 -
             C100534 * C1538 + C100532 * C1550) *
                C152696 * C51245) *
               C152530 * C152880) *
              C3495 +
          (((C100908 + C100907) * C152696 * C51245 +
            (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
               C152530 * C152920 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152530 * C152924 -
           ((C100915 + C100916) * C152696 * C51247 +
            (C100912 + C100911) * C152696 * C51246 +
            (C100910 + C100909) * C152696 * C51245) *
               C152530 * C152906 +
           ((C102760 + C102759) * C152696 * C51245 +
            (C102758 + C102757) * C152696 * C51246 +
            (C100534 * C1531 - C100535 * C1523 - C100534 * C1532 +
             C100532 * C1547 + C100536 * C2275 - C100537 * C2268 -
             C100536 * C2276 + C152775 * C2280) *
                C152696 * C51247) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152530 * C3355 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152530 * C152575) *
              C152923 +
          (((C100908 + C100907) * C152696 * C51245 +
            (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
               C152530 * C152575 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152530 * C3355) *
              C152916 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152530 * C3355 -
           ((C101435 + C101436) * C152696 * C51247 +
            (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
               C152530 * C152575) *
              C152899 +
          ((C101430 * C51245 + (C101436 + C101435) * C152696 * C51246 +
            (C100534 * C400 - C100535 * C378 - C100534 * C401 + C100532 * C414 +
             C100536 * C1243 - C100537 * C1232 - C100536 * C1244 +
             C152775 * C1250) *
                C152696 * C51247) *
               C152530 * C152575 -
           ((C100607 + C100608) * C152696 * C51247 +
            (C100606 + C100605) * C152696 * C51246 + C100613 * C51245) *
               C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C152918 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C152903 +
            ((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C152696 * C51245 +
             (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
                C152873) *
               C3355 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C152903 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C152918 -
            ((C104145 + C104146) * C152696 * C51247 +
             (C104147 + C104148) * C152696 * C51246 +
             (C100536 * C3213 - C100537 * C3209 - C100536 * C3214 +
              C152775 * C3221 + C100534 * C1719 - C100535 * C1704 -
              C100534 * C1720 + C100532 * C1740) *
                 C152696 * C51245) *
                C152873) *
               C152575) *
              C3495 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C152903 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C152918 -
            ((C101221 + C101222) * C152696 * C51247 +
             (C101218 + C101217) * C152696 * C51246 +
             (C101216 + C101215) * C152696 * C51245) *
                C152873) *
               C3355 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C152918 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C152903 +
            ((C104148 + C104147) * C152696 * C51245 +
             (C104146 + C104145) * C152696 * C51246 +
             (C100534 * C1713 - C100535 * C1701 - C100534 * C1714 +
              C100532 * C1737 + C100536 * C3219 - C100537 * C3212 -
              C100536 * C3220 + C152775 * C3224) *
                 C152696 * C51247) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C3355 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C152575) *
              C152923 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            C111141 * C6340) *
               C152457 * C152530 * C152575 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C3355) *
              C152916 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152530 * C3355 -
           ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
            C100917 * C6338) *
               C152457 * C152530 * C152575) *
              C152899 +
          ((C101421 * C6338 + (C100916 + C100915) * C6339 +
            (C100534 * C1531 - C100535 * C1523 - C100534 * C1532 +
             C100532 * C1547 + C100536 * C2275 - C100537 * C2268 -
             C100536 * C2276 + C152775 * C2280) *
                C6340) *
               C152457 * C152530 * C152575 -
           ((C100915 + C100916) * C6340 + (C100914 + C100913) * C6339 +
            C100610 * C6338) *
               C152457 * C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C152924 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C152920 +
           (C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C152530 * C152906 -
           ((C110668 + C110669) * C6340 + (C110667 + C110666) * C6339 +
            C110641 * C6338) *
               C152457 * C152530 * C152880) *
              C3495 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            C111141 * C6340) *
               C152457 * C152530 * C152920 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C152924 -
           ((C111154 + C111155) * C6340 + (C102759 + C102760) * C6339 +
            C109357 * C6338) *
               C152457 * C152530 * C152906 +
           (C111141 * C6338 + (C111155 + C111154) * C6339 +
            (C100534 * C7926 - C100535 * C7922 - C100534 * C7927 +
             C100532 * C7934 + C100536 * C8939 - C100537 * C8936 -
             C100536 * C8940 + C152775 * C8942) *
                C6340) *
               C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C152918 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152903 +
            ((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C6338 +
             (C110938 + C110939) * C6339 + C110946 * C6340) *
                C152457 * C152873) *
               C3355 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             C111655 * C6340) *
                C152457 * C152903 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C152918 -
            ((C110944 + C110945) * C6340 + (C110941 + C110940) * C6339 +
             (C110939 + C110938) * C6338) *
                C152457 * C152873) *
               C152575) *
              C3495 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C152903 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C152918 -
            ((C112530 + C112531) * C6340 + (C104147 + C104148) * C6339 +
             (C101216 + C101215) * C6338) *
                C152457 * C152873) *
               C3355 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C152918 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C152903 +
            ((C104148 + C104147) * C6338 + (C112531 + C112530) * C6339 +
             (C100534 * C8183 - C100535 * C8177 - C100534 * C8184 +
              C100532 * C8195 + C100536 * C10242 - C100537 * C10239 -
              C100536 * C10243 + C152775 * C10245) *
                 C6340) *
                C152457 * C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[353] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C152829 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C152617) *
               C3355 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C152617 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C152829) *
               C152575) *
              C152489 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C152617 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C152829) *
               C3355 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C152829 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C152617) *
               C152575) *
              C152498 +
          (((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
             C100614 * C51247) *
                C152829 -
            ((C101645 + C101646) * C152696 * C51247 +
             (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
                C152617) *
               C3355 +
           ((C101980 * C51245 + (C101978 + C101977) * C152696 * C51246 +
             (C100534 * C1241 - C100535 * C1231 - C100534 * C1242 +
              C100532 * C1249 + C100536 * C2890 - C100537 * C2889 -
              C100536 * C2891 + C152775 * C2892) *
                 C152696 * C51247) *
                C152617 -
            ((C101435 + C101436) * C152696 * C51247 +
             (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
                C152829) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C152829 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152617) *
               C3355 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             C111655 * C6340) *
                C152457 * C152617 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C152829) *
               C152575) *
              C152489 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C152617 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C152829) *
               C3355 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C152829 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C152617) *
               C152575) *
              C152498 +
          (((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
                C152457 * C152829 -
            ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
             C101223 * C6338) *
                C152457 * C152617) *
               C3355 +
           ((C101979 * C6338 + (C103076 + C103075) * C6339 +
             (C100534 * C2273 - C100535 * C2267 - C100534 * C2274 +
              C100532 * C2279 + C100536 * C9823 - C100537 * C9822 -
              C100536 * C9824 + C152775 * C9825) *
                 C6340) *
                C152457 * C152617 -
            ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
             C100917 * C6338) *
                C152457 * C152829) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q));
    d2ee[354] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152530 * C3355 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152530 * C152575) *
              C152923 +
          (((C100908 + C100907) * C152696 * C51245 +
            (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
               C152530 * C152575 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152530 * C3355) *
              C152916 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152530 * C3355 -
           ((C101435 + C101436) * C152696 * C51247 +
            (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
               C152530 * C152575) *
              C152899 +
          ((C101430 * C51245 + (C101436 + C101435) * C152696 * C51246 +
            (C100534 * C400 - C100535 * C378 - C100534 * C401 + C100532 * C414 +
             C100536 * C1243 - C100537 * C1232 - C100536 * C1244 +
             C152775 * C1250) *
                C152696 * C51247) *
               C152530 * C152575 -
           ((C100607 + C100608) * C152696 * C51247 +
            (C100606 + C100605) * C152696 * C51246 + C100613 * C51245) *
               C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152530 * C152924 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152530 * C152920 +
           ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152530 * C152906 -
           ((C102757 + C102758) * C152696 * C51247 +
            (C102759 + C102760) * C152696 * C51246 +
            (C100536 * C2269 - C100537 * C2265 - C100536 * C2270 +
             C152775 * C2277 + C100534 * C1537 - C100535 * C1526 -
             C100534 * C1538 + C100532 * C1550) *
                C152696 * C51245) *
               C152530 * C152880) *
              C3495 +
          (((C100908 + C100907) * C152696 * C51245 +
            (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
               C152530 * C152920 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152530 * C152924 -
           ((C100915 + C100916) * C152696 * C51247 +
            (C100912 + C100911) * C152696 * C51246 +
            (C100910 + C100909) * C152696 * C51245) *
               C152530 * C152906 +
           ((C102760 + C102759) * C152696 * C51245 +
            (C102758 + C102757) * C152696 * C51246 +
            (C100534 * C1531 - C100535 * C1523 - C100534 * C1532 +
             C100532 * C1547 + C100536 * C2275 - C100537 * C2268 -
             C100536 * C2276 + C152775 * C2280) *
                C152696 * C51247) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C3355 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C152575) *
              C152923 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            C111141 * C6340) *
               C152457 * C152530 * C152575 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C3355) *
              C152916 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152530 * C3355 -
           ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
            C100917 * C6338) *
               C152457 * C152530 * C152575) *
              C152899 +
          ((C101421 * C6338 + (C100916 + C100915) * C6339 +
            (C100534 * C1531 - C100535 * C1523 - C100534 * C1532 +
             C100532 * C1547 + C100536 * C2275 - C100537 * C2268 -
             C100536 * C2276 + C152775 * C2280) *
                C6340) *
               C152457 * C152530 * C152575 -
           ((C100915 + C100916) * C6340 + (C100914 + C100913) * C6339 +
            C100610 * C6338) *
               C152457 * C152530 * C3355) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C152924 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C152920 +
           (C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C152530 * C152906 -
           ((C110668 + C110669) * C6340 + (C110667 + C110666) * C6339 +
            C110641 * C6338) *
               C152457 * C152530 * C152880) *
              C3495 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            C111141 * C6340) *
               C152457 * C152530 * C152920 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C152924 -
           ((C111154 + C111155) * C6340 + (C102759 + C102760) * C6339 +
            C109357 * C6338) *
               C152457 * C152530 * C152906 +
           (C111141 * C6338 + (C111155 + C111154) * C6339 +
            (C100534 * C7926 - C100535 * C7922 - C100534 * C7927 +
             C100532 * C7934 + C100536 * C8939 - C100537 * C8936 -
             C100536 * C8940 + C152775 * C8942) *
                C6340) *
               C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[355] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C4361 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C152617) *
               C152571 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C152617 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C4361) *
               C152578 +
           (((C100534 * C388 - C100535 * C372 - C100534 * C389 +
              C100532 * C408 + C100536 * C1727 - C100537 * C1708 -
              C100536 * C1728 + C152775 * C1744) *
                 C152696 * C51245 +
             (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
                C4361 -
            ((C103075 + C103076) * C152696 * C51247 +
             (C103077 + C103078) * C152696 * C51246 +
             (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
              C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
              C100534 * C1728 + C100532 * C1744) *
                 C152696 * C51245) *
                C152617) *
               C3839) *
              C152814 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C152617 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C4361) *
               C152571 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C4361 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C152617) *
               C152578 +
           (((C103078 + C103077) * C152696 * C51245 +
             (C103076 + C103075) * C152696 * C51246 +
             (C100534 * C1721 - C100535 * C1705 - C100534 * C1722 +
              C100532 * C1741 + C100536 * C1735 - C100537 * C1712 -
              C100536 * C1736 + C152775 * C1748) *
                 C152696 * C51247) *
                C152617 -
            ((C100915 + C100916) * C152696 * C51247 +
             (C100912 + C100911) * C152696 * C51246 +
             (C100910 + C100909) * C152696 * C51245) *
                C4361) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C4361 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152617) *
               C152571 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             C111655 * C6340) *
                C152457 * C152617 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C4361) *
               C152578 +
           ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
                C152457 * C4361 -
            ((C111668 + C111669) * C6340 + (C110943 + C110942) * C6339 +
             C110889 * C6338) *
                C152457 * C152617) *
               C3839) *
              C152814 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C152617 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C4361) *
               C152571 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C4361 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C152617) *
               C152578 +
           ((C111446 * C6338 + (C111460 + C111459) * C6339 +
             (C100534 * C8187 - C100535 * C8179 - C100534 * C8188 +
              C100532 * C8197 + C100536 * C8193 - C100537 * C8182 -
              C100536 * C8194 + C152775 * C8200) *
                 C6340) *
                C152457 * C152617 -
            ((C111154 + C111155) * C6340 + (C102759 + C102760) * C6339 +
             C109357 * C6338) *
                C152457 * C4361) *
               C3839) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[356] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152613 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C152620 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C152696 * C51245 +
            (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
               C5033) *
              C152571 +
          (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
             C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
             C100536 * C1720 + C152775 * C1740) *
                C152696 * C51245 +
            (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
               C152620 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152613 -
           ((C104145 + C104146) * C152696 * C51247 +
            (C104147 + C104148) * C152696 * C51246 +
            (C100536 * C3213 - C100537 * C3209 - C100536 * C3214 +
             C152775 * C3221 + C100534 * C1719 - C100535 * C1704 -
             C100534 * C1720 + C100532 * C1740) *
                C152696 * C51245) *
               C5033) *
              C152578 +
          (((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152613 -
           ((C103075 + C103076) * C152696 * C51247 +
            (C103077 + C103078) * C152696 * C51246 +
            (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
             C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
             C100534 * C1728 + C100532 * C1744) *
                C152696 * C51245) *
               C152620 +
           ((C100534 * C1729 - C100535 * C1709 - C100534 * C1730 +
             C100532 * C1745 + C100536 * C9516 - C100537 * C9509 -
             C100536 * C9517 + C152775 * C9527) *
                C152696 * C51245 +
            (C100534 * C1731 - C100535 * C1710 - C100534 * C1732 +
             C100532 * C1746 + C100536 * C9514 - C100537 * C9508 -
             C100536 * C9515 + C152775 * C9526) *
                C152696 * C51246 +
            (C100534 * C1733 - C100535 * C1711 - C100534 * C1734 +
             C100532 * C1747 + C100536 * C10024 - C100537 * C10023 -
             C100536 * C10025 + C152775 * C10026) *
                C152696 * C51247) *
               C5033) *
              C3839) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152613 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152620 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C110938 + C110939) * C6339 + C110946 * C6340) *
               C152457 * C5033) *
              C152571 +
          (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
            C111655 * C6340) *
               C152457 * C152620 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152613 -
           ((C110944 + C110945) * C6340 + (C110941 + C110940) * C6339 +
            (C110939 + C110938) * C6338) *
               C152457 * C5033) *
              C152578 +
          ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C152613 -
           ((C111668 + C111669) * C6340 + (C110943 + C110942) * C6339 +
            C110889 * C6338) *
               C152457 * C152620 +
           (C110946 * C6338 + (C110945 + C110944) * C6339 +
            (C100534 * C8191 - C100535 * C8181 - C100534 * C8192 +
             C100532 * C8199 + C100536 * C61859 - C100537 * C61858 -
             C100536 * C61860 + C152775 * C61861) *
                C6340) *
               C152457 * C5033) *
              C3839) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[357] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C4361 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C152617) *
              C152924 +
          (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
             C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
             C100536 * C1720 + C152775 * C1740) *
                C152696 * C51245 +
            (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
               C152617 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C4361) *
              C152920 +
          (((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C4361 -
           ((C103075 + C103076) * C152696 * C51247 +
            (C103077 + C103078) * C152696 * C51246 +
            (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
             C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
             C100534 * C1728 + C100532 * C1744) *
                C152696 * C51245) *
               C152617) *
              C152906 +
          (((C100534 * C2269 - C100535 * C2265 - C100534 * C2270 +
             C100532 * C2277 + C100536 * C8185 - C100537 * C8178 -
             C100536 * C8186 + C152775 * C8196) *
                C152696 * C51245 +
            (C100534 * C2271 - C100535 * C2266 - C100534 * C2272 +
             C100532 * C2278 + C100536 * C8183 - C100537 * C8177 -
             C100536 * C8184 + C152775 * C8195) *
                C152696 * C51246 +
            (C100534 * C2273 - C100535 * C2267 - C100534 * C2274 +
             C100532 * C2279 + C100536 * C9823 - C100537 * C9822 -
             C100536 * C9824 + C152775 * C9825) *
                C152696 * C51247) *
               C152617 -
           ((C102757 + C102758) * C152696 * C51247 +
            (C102759 + C102760) * C152696 * C51246 +
            (C100536 * C2269 - C100537 * C2265 - C100536 * C2270 +
             C152775 * C2277 + C100534 * C1537 - C100535 * C1526 -
             C100534 * C1538 + C100532 * C1550) *
                C152696 * C51245) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C4361 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C152617) *
               C3355 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C152617 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C4361) *
               C152575) *
              C152914 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C152617 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C4361) *
               C3355 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C4361 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C152617) *
               C152575) *
              C152897 +
          (((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
             C100614 * C51247) *
                C4361 -
            ((C101645 + C101646) * C152696 * C51247 +
             (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
                C152617) *
               C3355 +
           ((C101980 * C51245 + (C101978 + C101977) * C152696 * C51246 +
             (C100534 * C1241 - C100535 * C1231 - C100534 * C1242 +
              C100532 * C1249 + C100536 * C2890 - C100537 * C2889 -
              C100536 * C2891 + C152775 * C2892) *
                 C152696 * C51247) *
                C152617 -
            ((C101435 + C101436) * C152696 * C51247 +
             (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
                C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152925 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C152922 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C152696 * C51245 +
            (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
               C152909 -
           ((C104367 + C104368) * C152696 * C51247 +
            (C104369 + C104370) * C152696 * C51246 +
            (C100536 * C2679 - C100537 * C2667 - C100536 * C2680 +
             C152775 * C2691 + C100534 * C2677 - C100535 * C2666 -
             C100534 * C2678 + C100532 * C2690) *
                C152696 * C51245) *
               C152886) *
              C3355 +
          (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
             C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
             C100536 * C1720 + C152775 * C1740) *
                C152696 * C51245 +
            (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
               C152922 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152925 -
           ((C104145 + C104146) * C152696 * C51247 +
            (C104147 + C104148) * C152696 * C51246 +
            (C100536 * C3213 - C100537 * C3209 - C100536 * C3214 +
             C152775 * C3221 + C100534 * C1719 - C100535 * C1704 -
             C100534 * C1720 + C100532 * C1740) *
                C152696 * C51245) *
               C152909 +
           ((C100534 * C3213 - C100535 * C3209 - C100534 * C3214 +
             C100532 * C3221 + C100536 * C9518 - C100537 * C9510 -
             C100536 * C9519 + C152775 * C9528) *
                C152696 * C51245 +
            (C100534 * C3215 - C100535 * C3210 - C100534 * C3216 +
             C100532 * C3222 + C100536 * C9522 - C100537 * C9512 -
             C100536 * C9523 + C152775 * C9530) *
                C152696 * C51246 +
            (C100534 * C3217 - C100535 * C3211 - C100534 * C3218 +
             C100532 * C3223 + C100536 * C18412 - C100537 * C18411 -
             C100536 * C18413 + C152775 * C18414) *
                C152696 * C51247) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C4361 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152617) *
               C3355 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             C111655 * C6340) *
                C152457 * C152617 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C4361) *
               C152575) *
              C152914 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C152617 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C4361) *
               C3355 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C4361 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C152617) *
               C152575) *
              C152897 +
          (((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
                C152457 * C4361 -
            ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
             C101223 * C6338) *
                C152457 * C152617) *
               C3355 +
           ((C101979 * C6338 + (C103076 + C103075) * C6339 +
             (C100534 * C2273 - C100535 * C2267 - C100534 * C2274 +
              C100532 * C2279 + C100536 * C9823 - C100537 * C9822 -
              C100536 * C9824 + C152775 * C9825) *
                 C6340) *
                C152457 * C152617 -
            ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
             C100917 * C6338) *
                C152457 * C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C4361 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152617) *
              C152924 +
          (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
            C111655 * C6340) *
               C152457 * C152617 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C4361) *
              C152920 +
          ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C4361 -
           ((C111668 + C111669) * C6340 + (C110943 + C110942) * C6339 +
            C110889 * C6338) *
               C152457 * C152617) *
              C152906 +
          ((C111655 * C6338 + (C111669 + C111668) * C6339 +
            (C100534 * C8937 - C100535 * C8935 - C100534 * C8938 +
             C100532 * C8941 + C100536 * C60551 - C100537 * C60550 -
             C100536 * C60552 + C152775 * C60553) *
                C6340) *
               C152457 * C152617 -
           ((C110668 + C110669) * C6340 + (C110667 + C110666) * C6339 +
            C110641 * C6338) *
               C152457 * C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152925 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152922 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C110938 + C110939) * C6339 + C110946 * C6340) *
               C152457 * C152909 -
           ((C112944 + C112945) * C6340 + (C112946 + C112947) * C6339 +
            (C100536 * C2679 - C100537 * C2667 - C100536 * C2680 +
             C152775 * C2691 + C100534 * C2677 - C100535 * C2666 -
             C100534 * C2678 + C100532 * C2690) *
                C6338) *
               C152457 * C152886) *
              C3355 +
          (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
            C111655 * C6340) *
               C152457 * C152922 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152925 -
           ((C110944 + C110945) * C6340 + (C110941 + C110940) * C6339 +
            (C110939 + C110938) * C6338) *
               C152457 * C152909 +
           ((C112947 + C112946) * C6338 + (C112945 + C112944) * C6339 +
            (C100534 * C10240 - C100535 * C10238 - C100534 * C10241 +
             C100532 * C10244 + C100536 * C61401 - C100537 * C61400 -
             C100536 * C61402 + C152775 * C61403) *
                C6340) *
               C152457 * C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[358] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C152613 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C152620 +
            ((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C152696 * C51245 +
             (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
                C5033) *
               C3355 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C152620 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C152613 -
            ((C104145 + C104146) * C152696 * C51247 +
             (C104147 + C104148) * C152696 * C51246 +
             (C100536 * C3213 - C100537 * C3209 - C100536 * C3214 +
              C152775 * C3221 + C100534 * C1719 - C100535 * C1704 -
              C100534 * C1720 + C100532 * C1740) *
                 C152696 * C51245) *
                C5033) *
               C152575) *
              C152814 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C152620 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C152613 -
            ((C101221 + C101222) * C152696 * C51247 +
             (C101218 + C101217) * C152696 * C51246 +
             (C101216 + C101215) * C152696 * C51245) *
                C5033) *
               C3355 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C152613 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C152620 +
            ((C104148 + C104147) * C152696 * C51245 +
             (C104146 + C104145) * C152696 * C51246 +
             (C100534 * C1713 - C100535 * C1701 - C100534 * C1714 +
              C100532 * C1737 + C100536 * C3219 - C100537 * C3212 -
              C100536 * C3220 + C152775 * C3224) *
                 C152696 * C51247) *
                C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C152613 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152620 +
            ((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C6338 +
             (C110938 + C110939) * C6339 + C110946 * C6340) *
                C152457 * C5033) *
               C3355 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             C111655 * C6340) *
                C152457 * C152620 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C152613 -
            ((C110944 + C110945) * C6340 + (C110941 + C110940) * C6339 +
             (C110939 + C110938) * C6338) *
                C152457 * C5033) *
               C152575) *
              C152814 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C152620 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C152613 -
            ((C112530 + C112531) * C6340 + (C104147 + C104148) * C6339 +
             (C101216 + C101215) * C6338) *
                C152457 * C5033) *
               C3355 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C152613 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C152620 +
            ((C104148 + C104147) * C6338 + (C112531 + C112530) * C6339 +
             (C100534 * C8183 - C100535 * C8177 - C100534 * C8184 +
              C100532 * C8195 + C100536 * C10242 - C100537 * C10239 -
              C100536 * C10243 + C152775 * C10245) *
                 C6340) *
                C152457 * C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[359] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C4361 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C152617) *
               C3355 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C152617 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C4361) *
               C152575) *
              C152914 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C152617 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C4361) *
               C3355 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C4361 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C152617) *
               C152575) *
              C152897 +
          (((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
             C100614 * C51247) *
                C4361 -
            ((C101645 + C101646) * C152696 * C51247 +
             (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
                C152617) *
               C3355 +
           ((C101980 * C51245 + (C101978 + C101977) * C152696 * C51246 +
             (C100534 * C1241 - C100535 * C1231 - C100534 * C1242 +
              C100532 * C1249 + C100536 * C2890 - C100537 * C2889 -
              C100536 * C2891 + C152775 * C2892) *
                 C152696 * C51247) *
                C152617 -
            ((C101435 + C101436) * C152696 * C51247 +
             (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
                C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C4361 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C152617) *
              C152924 +
          (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
             C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
             C100536 * C1720 + C152775 * C1740) *
                C152696 * C51245 +
            (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
               C152617 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C4361) *
              C152920 +
          (((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C4361 -
           ((C103075 + C103076) * C152696 * C51247 +
            (C103077 + C103078) * C152696 * C51246 +
            (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
             C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
             C100534 * C1728 + C100532 * C1744) *
                C152696 * C51245) *
               C152617) *
              C152906 +
          (((C100534 * C2269 - C100535 * C2265 - C100534 * C2270 +
             C100532 * C2277 + C100536 * C8185 - C100537 * C8178 -
             C100536 * C8186 + C152775 * C8196) *
                C152696 * C51245 +
            (C100534 * C2271 - C100535 * C2266 - C100534 * C2272 +
             C100532 * C2278 + C100536 * C8183 - C100537 * C8177 -
             C100536 * C8184 + C152775 * C8195) *
                C152696 * C51246 +
            (C100534 * C2273 - C100535 * C2267 - C100534 * C2274 +
             C100532 * C2279 + C100536 * C9823 - C100537 * C9822 -
             C100536 * C9824 + C152775 * C9825) *
                C152696 * C51247) *
               C152617 -
           ((C102757 + C102758) * C152696 * C51247 +
            (C102759 + C102760) * C152696 * C51246 +
            (C100536 * C2269 - C100537 * C2265 - C100536 * C2270 +
             C152775 * C2277 + C100534 * C1537 - C100535 * C1526 -
             C100534 * C1538 + C100532 * C1550) *
                C152696 * C51245) *
               C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C4361 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152617) *
               C3355 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             C111655 * C6340) *
                C152457 * C152617 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C4361) *
               C152575) *
              C152914 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C152617 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C4361) *
               C3355 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C4361 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C152617) *
               C152575) *
              C152897 +
          (((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
                C152457 * C4361 -
            ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
             C101223 * C6338) *
                C152457 * C152617) *
               C3355 +
           ((C101979 * C6338 + (C103076 + C103075) * C6339 +
             (C100534 * C2273 - C100535 * C2267 - C100534 * C2274 +
              C100532 * C2279 + C100536 * C9823 - C100537 * C9822 -
              C100536 * C9824 + C152775 * C9825) *
                 C6340) *
                C152457 * C152617 -
            ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
             C100917 * C6338) *
                C152457 * C4361) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C4361 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152617) *
              C152924 +
          (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
            C111655 * C6340) *
               C152457 * C152617 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C4361) *
              C152920 +
          ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C4361 -
           ((C111668 + C111669) * C6340 + (C110943 + C110942) * C6339 +
            C110889 * C6338) *
               C152457 * C152617) *
              C152906 +
          ((C111655 * C6338 + (C111669 + C111668) * C6339 +
            (C100534 * C8937 - C100535 * C8935 - C100534 * C8938 +
             C100532 * C8941 + C100536 * C60551 - C100537 * C60550 -
             C100536 * C60552 + C152775 * C60553) *
                C6340) *
               C152457 * C152617 -
           ((C110668 + C110669) * C6340 + (C110667 + C110666) * C6339 +
            C110641 * C6338) *
               C152457 * C4361) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[360] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152530 * C1879 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152530 * C1880 +
           ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152530 * C1881 -
           ((C102757 + C102758) * C152696 * C51247 +
            (C102759 + C102760) * C152696 * C51246 +
            (C100536 * C2269 - C100537 * C2265 - C100536 * C2270 +
             C152775 * C2277 + C100534 * C1537 - C100535 * C1526 -
             C100534 * C1538 + C100532 * C1550) *
                C152696 * C51245) *
               C152530 * C152880) *
              C152814 +
          (((C100908 + C100907) * C152696 * C51245 +
            (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
               C152530 * C1880 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152530 * C1879 -
           ((C100915 + C100916) * C152696 * C51247 +
            (C100912 + C100911) * C152696 * C51246 +
            (C100910 + C100909) * C152696 * C51245) *
               C152530 * C1881 +
           ((C102760 + C102759) * C152696 * C51245 +
            (C102758 + C102757) * C152696 * C51246 +
            (C100534 * C1531 - C100535 * C1523 - C100534 * C1532 +
             C100532 * C1547 + C100536 * C2275 - C100537 * C2268 -
             C100536 * C2276 + C152775 * C2280) *
                C152696 * C51247) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152530 * C152828 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152530 * C152575) *
              C873 +
          (((C100908 + C100907) * C152696 * C51245 +
            (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
               C152530 * C152575 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152530 * C152828) *
              C874 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152530 * C152828 -
           ((C101435 + C101436) * C152696 * C51247 +
            (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
               C152530 * C152575) *
              C875 +
          ((C101430 * C51245 + (C101436 + C101435) * C152696 * C51246 +
            (C100534 * C400 - C100535 * C378 - C100534 * C401 + C100532 * C414 +
             C100536 * C1243 - C100537 * C1232 - C100536 * C1244 +
             C152775 * C1250) *
                C152696 * C51247) *
               C152530 * C152575 -
           ((C100607 + C100608) * C152696 * C51247 +
            (C100606 + C100605) * C152696 * C51246 + C100613 * C51245) *
               C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C2427 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C2428 +
            ((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C152696 * C51245 +
             (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
                C152873) *
               C152828 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C2428 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C2427 -
            ((C104145 + C104146) * C152696 * C51247 +
             (C104147 + C104148) * C152696 * C51246 +
             (C100536 * C3213 - C100537 * C3209 - C100536 * C3214 +
              C152775 * C3221 + C100534 * C1719 - C100535 * C1704 -
              C100534 * C1720 + C100532 * C1740) *
                 C152696 * C51245) *
                C152873) *
               C152575) *
              C152814 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C2428 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C2427 -
            ((C101221 + C101222) * C152696 * C51247 +
             (C101218 + C101217) * C152696 * C51246 +
             (C101216 + C101215) * C152696 * C51245) *
                C152873) *
               C152828 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C2427 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C2428 +
            ((C104148 + C104147) * C152696 * C51245 +
             (C104146 + C104145) * C152696 * C51246 +
             (C100534 * C1713 - C100535 * C1701 - C100534 * C1714 +
              C100532 * C1737 + C100536 * C3219 - C100537 * C3212 -
              C100536 * C3220 + C152775 * C3224) *
                 C152696 * C51247) *
                C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C152828 -
           ((C109374 + C109375) * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C152575) *
              C873 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            (C102760 + C102759) * C6340) *
               C152457 * C152530 * C152575 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C152828) *
              C874 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152530 * C152828 -
           ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
            C100917 * C6338) *
               C152457 * C152530 * C152575) *
              C875 +
          ((C101421 * C6338 + (C100916 + C100915) * C6339 +
            (C100534 * C1531 - C100535 * C1523 - C100534 * C1532 +
             C100532 * C1547 + C100536 * C2275 - C100537 * C2268 -
             C100536 * C2276 + C152775 * C2280) *
                C6340) *
               C152457 * C152530 * C152575 -
           ((C100915 + C100916) * C6340 + (C100914 + C100913) * C6339 +
            C100610 * C6338) *
               C152457 * C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C1879 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C1880 +
           (C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C152530 * C1881 -
           ((C110668 + C110669) * C6340 + (C110667 + C110666) * C6339 +
            C110641 * C6338) *
               C152457 * C152530 * C152880) *
              C152814 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            C111141 * C6340) *
               C152457 * C152530 * C1880 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C1879 -
           ((C111154 + C111155) * C6340 + (C102759 + C102760) * C6339 +
            C109357 * C6338) *
               C152457 * C152530 * C1881 +
           (C111141 * C6338 + (C111155 + C111154) * C6339 +
            (C100534 * C7926 - C100535 * C7922 - C100534 * C7927 +
             C100532 * C7934 + C100536 * C8939 - C100537 * C8936 -
             C100536 * C8940 + C152775 * C8942) *
                C6340) *
               C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C2427 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C2428 +
            ((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C6338 +
             (C110938 + C110939) * C6339 + C110946 * C6340) *
                C152457 * C152873) *
               C152828 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             C111655 * C6340) *
                C152457 * C2428 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C2427 -
            ((C110944 + C110945) * C6340 + (C110941 + C110940) * C6339 +
             (C110939 + C110938) * C6338) *
                C152457 * C152873) *
               C152575) *
              C152814 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C2428 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C2427 -
            ((C112530 + C112531) * C6340 + (C104147 + C104148) * C6339 +
             (C101216 + C101215) * C6338) *
                C152457 * C152873) *
               C152828 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C2427 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C2428 +
            ((C104148 + C104147) * C6338 + (C112531 + C112530) * C6339 +
             (C100534 * C8183 - C100535 * C8177 - C100534 * C8184 +
              C100532 * C8195 + C100536 * C10242 - C100537 * C10239 -
              C100536 * C10243 + C152775 * C10245) *
                 C6340) *
                C152457 * C152873) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[361] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152829 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C152617) *
              C1879 +
          (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
             C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
             C100536 * C1720 + C152775 * C1740) *
                C152696 * C51245 +
            (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
               C152617 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152829) *
              C1880 +
          (((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152829 -
           ((C103075 + C103076) * C152696 * C51247 +
            (C103077 + C103078) * C152696 * C51246 +
            (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
             C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
             C100534 * C1728 + C100532 * C1744) *
                C152696 * C51245) *
               C152617) *
              C1881 +
          (((C100534 * C2269 - C100535 * C2265 - C100534 * C2270 +
             C100532 * C2277 + C100536 * C8185 - C100537 * C8178 -
             C100536 * C8186 + C152775 * C8196) *
                C152696 * C51245 +
            (C100534 * C2271 - C100535 * C2266 - C100534 * C2272 +
             C100532 * C2278 + C100536 * C8183 - C100537 * C8177 -
             C100536 * C8184 + C152775 * C8195) *
                C152696 * C51246 +
            (C100534 * C2273 - C100535 * C2267 - C100534 * C2274 +
             C100532 * C2279 + C100536 * C9823 - C100537 * C9822 -
             C100536 * C9824 + C152775 * C9825) *
                C152696 * C51247) *
               C152617 -
           ((C102757 + C102758) * C152696 * C51247 +
            (C102759 + C102760) * C152696 * C51246 +
            (C100536 * C2269 - C100537 * C2265 - C100536 * C2270 +
             C152775 * C2277 + C100534 * C1537 - C100535 * C1526 -
             C100534 * C1538 + C100532 * C1550) *
                C152696 * C51245) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C152829 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C152617) *
               C152828 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C152617 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C152829) *
               C152575) *
              C365 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C152617 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C152829) *
               C152828 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C152829 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C152617) *
               C152575) *
              C366 +
          (((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
             C100614 * C51247) *
                C152829 -
            ((C101645 + C101646) * C152696 * C51247 +
             (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
                C152617) *
               C152828 +
           ((C101980 * C51245 + (C101978 + C101977) * C152696 * C51246 +
             (C100534 * C1241 - C100535 * C1231 - C100534 * C1242 +
              C100532 * C1249 + C100536 * C2890 - C100537 * C2889 -
              C100536 * C2891 + C152775 * C2892) *
                 C152696 * C51247) *
                C152617 -
            ((C101435 + C101436) * C152696 * C51247 +
             (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
                C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C3047 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C3048 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C152696 * C51245 +
            (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
               C3049 -
           ((C104367 + C104368) * C152696 * C51247 +
            (C104369 + C104370) * C152696 * C51246 +
            (C100536 * C2679 - C100537 * C2667 - C100536 * C2680 +
             C152775 * C2691 + C100534 * C2677 - C100535 * C2666 -
             C100534 * C2678 + C100532 * C2690) *
                C152696 * C51245) *
               C152886) *
              C152828 +
          (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
             C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
             C100536 * C1720 + C152775 * C1740) *
                C152696 * C51245 +
            (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
               C3048 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C3047 -
           ((C104145 + C104146) * C152696 * C51247 +
            (C104147 + C104148) * C152696 * C51246 +
            (C100536 * C3213 - C100537 * C3209 - C100536 * C3214 +
             C152775 * C3221 + C100534 * C1719 - C100535 * C1704 -
             C100534 * C1720 + C100532 * C1740) *
                C152696 * C51245) *
               C3049 +
           ((C100534 * C3213 - C100535 * C3209 - C100534 * C3214 +
             C100532 * C3221 + C100536 * C9518 - C100537 * C9510 -
             C100536 * C9519 + C152775 * C9528) *
                C152696 * C51245 +
            (C100534 * C3215 - C100535 * C3210 - C100534 * C3216 +
             C100532 * C3222 + C100536 * C9522 - C100537 * C9512 -
             C100536 * C9523 + C152775 * C9530) *
                C152696 * C51246 +
            (C100534 * C3217 - C100535 * C3211 - C100534 * C3218 +
             C100532 * C3223 + C100536 * C18412 - C100537 * C18411 -
             C100536 * C18413 + C152775 * C18414) *
                C152696 * C51247) *
               C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C152829 -
            ((C110297 + C110298) * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152617) *
               C152828 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             (C100534 * C2269 - C100535 * C2265 - C100534 * C2270 +
              C100532 * C2277 + C100536 * C8185 - C100537 * C8178 -
              C100536 * C8186 + C152775 * C8196) *
                 C6340) *
                C152457 * C152617 -
            ((C109374 + C109375) * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C152829) *
               C152575) *
              C365 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             (C103078 + C103077) * C6340) *
                C152457 * C152617 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C152829) *
               C152828 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             (C102760 + C102759) * C6340) *
                C152457 * C152829 -
            ((C100536 * C8183 - C100537 * C8177 - C100536 * C8184 +
              C152775 * C8195 + C100534 * C2271 - C100535 * C2266 -
              C100534 * C2272 + C100532 * C2278) *
                 C6340 +
             (C103077 + C103078) * C6339 + (C101974 + C101973) * C6338) *
                C152457 * C152617) *
               C152575) *
              C366 +
          (((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
                C152457 * C152829 -
            ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
             C101223 * C6338) *
                C152457 * C152617) *
               C152828 +
           ((C101979 * C6338 + (C103076 + C103075) * C6339 +
             (C100534 * C2273 - C100535 * C2267 - C100534 * C2274 +
              C100532 * C2279 + C100536 * C9823 - C100537 * C9822 -
              C100536 * C9824 + C152775 * C9825) *
                 C6340) *
                C152457 * C152617 -
            ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
             C100917 * C6338) *
                C152457 * C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152829 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152617) *
              C1879 +
          (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
            C111655 * C6340) *
               C152457 * C152617 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152829) *
              C1880 +
          ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C152829 -
           ((C111668 + C111669) * C6340 + (C110943 + C110942) * C6339 +
            C110889 * C6338) *
               C152457 * C152617) *
              C1881 +
          ((C111655 * C6338 + (C111669 + C111668) * C6339 +
            (C100534 * C8937 - C100535 * C8935 - C100534 * C8938 +
             C100532 * C8941 + C100536 * C60551 - C100537 * C60550 -
             C100536 * C60552 + C152775 * C60553) *
                C6340) *
               C152457 * C152617 -
           ((C110668 + C110669) * C6340 + (C110667 + C110666) * C6339 +
            C110641 * C6338) *
               C152457 * C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C3047 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C3048 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C110938 + C110939) * C6339 + C110946 * C6340) *
               C152457 * C3049 -
           ((C112944 + C112945) * C6340 + (C112946 + C112947) * C6339 +
            (C100536 * C2679 - C100537 * C2667 - C100536 * C2680 +
             C152775 * C2691 + C100534 * C2677 - C100535 * C2666 -
             C100534 * C2678 + C100532 * C2690) *
                C6338) *
               C152457 * C152886) *
              C152828 +
          (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
            C111655 * C6340) *
               C152457 * C3048 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C3047 -
           ((C110944 + C110945) * C6340 + (C110941 + C110940) * C6339 +
            (C110939 + C110938) * C6338) *
               C152457 * C3049 +
           ((C112947 + C112946) * C6338 + (C112945 + C112944) * C6339 +
            (C100534 * C10240 - C100535 * C10238 - C100534 * C10241 +
             C100532 * C10244 + C100536 * C61401 - C100537 * C61400 -
             C100536 * C61402 + C152775 * C61403) *
                C6340) *
               C152457 * C152886) *
              C152575) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[362] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C100534 * C144 - C100535 * C136 - C100534 * C145 +
                C100532 * C160 + C100536 * C647 - C100537 * C632 -
                C100536 * C648 + C152775 * C668) *
                   C152696 * C51245 +
               (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                  C152530 * C152512 * C129 -
              (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
               (C100600 + C100599) * C152696 * C51245) *
                  C152530 * C152512 * C130 +
              (C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
               C100614 * C51247) *
                  C152530 * C152512 * C131 -
              ((C100607 + C100608) * C152696 * C51247 +
               (C100606 + C100605) * C152696 * C51246 + C100613 * C51245) *
                  C152530 * C152512 * C132 +
              (C100614 * C51245 + (C100608 + C100607) * C152696 * C51246 +
               (C100534 * C156 - C100535 * C142 - C100534 * C157 +
                C100532 * C166 + C100536 * C1022 - C100537 * C1021 -
                C100536 * C1023 + C152775 * C1024) *
                   C152696 * C51247) *
                  C152530 * C152512 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
                 C100532 * C160 + C100536 * C647 - C100537 * C632 -
                 C100536 * C648 + C152775 * C668) *
                    C152696 * C51245 +
                (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                   C152530 * C152917 -
               (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
                (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
                 C152775 * C1245 + C100534 * C386 - C100535 * C371 -
                 C100534 * C387 + C100532 * C407) *
                    C152696 * C51245) *
                   C152530 * C152901 +
               ((C100534 * C388 - C100535 * C372 - C100534 * C389 +
                 C100532 * C408 + C100536 * C1727 - C100537 * C1708 -
                 C100536 * C1728 + C152775 * C1744) *
                    C152696 * C51245 +
                (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
                   C152530 * C152870) *
                  C365 +
              (((C100908 + C100907) * C152696 * C51245 +
                (C100906 + C100905) * C152696 * C51246 +
                (C100913 + C100914) * C152696 * C51247) *
                   C152530 * C152901 -
               (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
                (C100600 + C100599) * C152696 * C51245) *
                   C152530 * C152917 -
               ((C100915 + C100916) * C152696 * C51247 +
                (C100912 + C100911) * C152696 * C51246 +
                (C100910 + C100909) * C152696 * C51245) *
                   C152530 * C152870) *
                  C366 +
              ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
                C100614 * C51247) *
                   C152530 * C152917 -
               ((C100536 * C1241 - C100537 * C1231 - C100536 * C1242 +
                 C152775 * C1249 + C100534 * C396 - C100535 * C376 -
                 C100534 * C397 + C100532 * C412) *
                    C152696 * C51247 +
                (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
                   C152530 * C152901 +
               (C100920 * C51245 + (C100916 + C100915) * C152696 * C51246 +
                (C100534 * C398 - C100535 * C377 - C100534 * C399 +
                 C100532 * C413 + C100536 * C2108 - C100537 * C2107 -
                 C100536 * C2109 + C152775 * C2110) *
                    C152696 * C51247) *
                   C152530 * C152870) *
                  C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152918 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C152903 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C152696 * C51245 +
            (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
               C152873) *
              C152512 * C365 +
          (((C101214 + C101213) * C152696 * C51245 +
            (C101212 + C101211) * C152696 * C51246 +
            (C101219 + C101220) * C152696 * C51247) *
               C152903 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152918 -
           ((C101221 + C101222) * C152696 * C51247 +
            (C101218 + C101217) * C152696 * C51246 +
            (C101216 + C101215) * C152696 * C51245) *
               C152873) *
              C152512 * C366 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152918 -
           ((C100536 * C659 - C100537 * C638 - C100536 * C660 + C152775 * C674 +
             C100534 * C657 - C100535 * C637 - C100534 * C658 +
             C100532 * C673) *
                C152696 * C51247 +
            (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
               C152903 +
           (C101226 * C51245 + (C101222 + C101221) * C152696 * C51246 +
            (C100534 * C659 - C100535 * C638 - C100534 * C660 + C100532 * C674 +
             C100536 * C3052 - C100537 * C3051 - C100536 * C3053 +
             C152775 * C3054) *
                C152696 * C51247) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152530 * C1429 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152530 * C1430 +
           ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152530 * C152870) *
              C152914 +
          (((C100908 + C100907) * C152696 * C51245 +
            (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
               C152530 * C1430 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152530 * C1429 -
           ((C100915 + C100916) * C152696 * C51247 +
            (C100912 + C100911) * C152696 * C51246 +
            (C100910 + C100909) * C152696 * C51245) *
               C152530 * C152870) *
              C152897 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152530 * C1429 -
           ((C101435 + C101436) * C152696 * C51247 +
            (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
               C152530 * C1430 +
           (C100920 * C51245 + (C100916 + C100915) * C152696 * C51246 +
            (C100534 * C398 - C100535 * C377 - C100534 * C399 + C100532 * C413 +
             C100536 * C2108 - C100537 * C2107 - C100536 * C2109 +
             C152775 * C2110) *
                C152696 * C51247) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C152696 * C51245 +
           (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
              C152530 * C1517 -
          (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
           (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
            C152775 * C1245 + C100534 * C386 - C100535 * C371 - C100534 * C387 +
            C100532 * C407) *
               C152696 * C51245) *
              C152530 * C1518 +
          ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
            C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
            C152775 * C1744) *
               C152696 * C51245 +
           (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
              C152530 * C1519 -
          ((C100536 * C2273 - C100537 * C2267 - C100536 * C2274 +
            C152775 * C2279 + C100534 * C1533 - C100535 * C1524 -
            C100534 * C1534 + C100532 * C1548) *
               C152696 * C51247 +
           (C100536 * C2271 - C100537 * C2266 - C100536 * C2272 +
            C152775 * C2278 + C100534 * C1535 - C100535 * C1525 -
            C100534 * C1536 + C100532 * C1549) *
               C152696 * C51246 +
           (C100536 * C2269 - C100537 * C2265 - C100536 * C2270 +
            C152775 * C2277 + C100534 * C1537 - C100535 * C1526 -
            C100534 * C1538 + C100532 * C1550) *
               C152696 * C51245) *
              C152530 * C1520 +
          ((C100534 * C1539 - C100535 * C1527 - C100534 * C1540 +
            C100532 * C1551 + C100536 * C8189 - C100537 * C8180 -
            C100536 * C8190 + C152775 * C8198) *
               C152696 * C51245 +
           (C100534 * C1541 - C100535 * C1528 - C100534 * C1542 +
            C100532 * C1552 + C100536 * C8187 - C100537 * C8179 -
            C100536 * C8188 + C152775 * C8197) *
               C152696 * C51246 +
           (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
            C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
            C100536 * C8729 + C152775 * C8730) *
               C152696 * C51247) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152918 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C152903 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C152696 * C51245 +
            (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
               C152873) *
              C1429 +
          (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
             C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
             C100536 * C1720 + C152775 * C1740) *
                C152696 * C51245 +
            (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
               C152903 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152918 -
           ((C100536 * C3217 - C100537 * C3211 - C100536 * C3218 +
             C152775 * C3223 + C100534 * C1715 - C100535 * C1702 -
             C100534 * C1716 + C100532 * C1738) *
                C152696 * C51247 +
            (C100536 * C3215 - C100537 * C3210 - C100536 * C3216 +
             C152775 * C3222 + C100534 * C1717 - C100535 * C1703 -
             C100534 * C1718 + C100532 * C1739) *
                C152696 * C51246 +
            (C100536 * C3213 - C100537 * C3209 - C100536 * C3214 +
             C152775 * C3221 + C100534 * C1719 - C100535 * C1704 -
             C100534 * C1720 + C100532 * C1740) *
                C152696 * C51245) *
               C152873) *
              C1430 +
          (((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152918 -
           ((C100536 * C1733 - C100537 * C1711 - C100536 * C1734 +
             C152775 * C1747 + C100534 * C1723 - C100535 * C1706 -
             C100534 * C1724 + C100532 * C1742) *
                C152696 * C51247 +
            (C100536 * C1731 - C100537 * C1710 - C100536 * C1732 +
             C152775 * C1746 + C100534 * C1725 - C100535 * C1707 -
             C100534 * C1726 + C100532 * C1743) *
                C152696 * C51246 +
            (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
             C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
             C100534 * C1728 + C100532 * C1744) *
                C152696 * C51245) *
               C152903 +
           ((C100534 * C1729 - C100535 * C1709 - C100534 * C1730 +
             C100532 * C1745 + C100536 * C9516 - C100537 * C9509 -
             C100536 * C9517 + C152775 * C9527) *
                C152696 * C51245 +
            (C100534 * C1731 - C100535 * C1710 - C100534 * C1732 +
             C100532 * C1746 + C100536 * C9514 - C100537 * C9508 -
             C100536 * C9515 + C152775 * C9526) *
                C152696 * C51246 +
            (C100534 * C1733 - C100535 * C1711 - C100534 * C1734 +
             C100532 * C1747 + C100536 * C10024 - C100537 * C10023 -
             C100536 * C10025 + C152775 * C10026) *
                C152696 * C51247) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C2427 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C2428 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C152696 * C51245 +
            (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
               C152873) *
              C152512 * C152914 +
          (((C101214 + C101213) * C152696 * C51245 +
            (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
               C2428 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C2427 -
           ((C101221 + C101222) * C152696 * C51247 +
            (C101218 + C101217) * C152696 * C51246 +
            (C101216 + C101215) * C152696 * C51245) *
               C152873) *
              C152512 * C152897 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C2427 -
           ((C101645 + C101646) * C152696 * C51247 +
            (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
               C2428 +
           (C101226 * C51245 + (C101222 + C101221) * C152696 * C51246 +
            (C100534 * C659 - C100535 * C638 - C100534 * C660 + C100532 * C674 +
             C100536 * C3052 - C100537 * C3051 - C100536 * C3053 +
             C152775 * C3054) *
                C152696 * C51247) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C2427 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C2428 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C152696 * C51245 +
            (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
               C152873) *
              C152917 +
          (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
             C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
             C100536 * C1720 + C152775 * C1740) *
                C152696 * C51245 +
            (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
               C2428 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C2427 -
           ((C100536 * C3217 - C100537 * C3211 - C100536 * C3218 +
             C152775 * C3223 + C100534 * C1715 - C100535 * C1702 -
             C100534 * C1716 + C100532 * C1738) *
                C152696 * C51247 +
            (C100536 * C3215 - C100537 * C3210 - C100536 * C3216 +
             C152775 * C3222 + C100534 * C1717 - C100535 * C1703 -
             C100534 * C1718 + C100532 * C1739) *
                C152696 * C51246 +
            (C100536 * C3213 - C100537 * C3209 - C100536 * C3214 +
             C152775 * C3221 + C100534 * C1719 - C100535 * C1704 -
             C100534 * C1720 + C100532 * C1740) *
                C152696 * C51245) *
               C152873) *
              C152901 +
          (((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C2427 -
           ((C103075 + C103076) * C152696 * C51247 +
            (C103077 + C103078) * C152696 * C51246 +
            (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
             C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
             C100534 * C1728 + C100532 * C1744) *
                C152696 * C51245) *
               C2428 +
           ((C100534 * C1729 - C100535 * C1709 - C100534 * C1730 +
             C100532 * C1745 + C100536 * C9516 - C100537 * C9509 -
             C100536 * C9517 + C152775 * C9527) *
                C152696 * C51245 +
            (C100534 * C1731 - C100535 * C1710 - C100534 * C1732 +
             C100532 * C1746 + C100536 * C9514 - C100537 * C9508 -
             C100536 * C9515 + C152775 * C9526) *
                C152696 * C51246 +
            (C100534 * C1733 - C100535 * C1711 - C100534 * C1734 +
             C100532 * C1747 + C100536 * C10024 - C100537 * C10023 -
             C100536 * C10025 + C152775 * C10026) *
                C152696 * C51247) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C152696 * C51245 +
           (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
              C2658 -
          (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
           (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
            C100534 * C647 - C100535 * C632 - C100534 * C648 + C100532 * C668) *
               C152696 * C51245) *
              C2659 +
          ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
            C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
            C152775 * C2690) *
               C152696 * C51245 +
           (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
              C2660 -
          ((C100536 * C2683 - C100537 * C2669 - C100536 * C2684 +
            C152775 * C2693 + C100534 * C2673 - C100535 * C2664 -
            C100534 * C2674 + C100532 * C2688) *
               C152696 * C51247 +
           (C100536 * C2681 - C100537 * C2668 - C100536 * C2682 +
            C152775 * C2692 + C100534 * C2675 - C100535 * C2665 -
            C100534 * C2676 + C100532 * C2689) *
               C152696 * C51246 +
           (C100536 * C2679 - C100537 * C2667 - C100536 * C2680 +
            C152775 * C2691 + C100534 * C2677 - C100535 * C2666 -
            C100534 * C2678 + C100532 * C2690) *
               C152696 * C51245) *
              C2661 +
          ((C100534 * C2679 - C100535 * C2667 - C100534 * C2680 +
            C100532 * C2691 + C100536 * C18111 - C100537 * C18106 -
            C100536 * C18112 + C152775 * C18118) *
               C152696 * C51245 +
           (C100534 * C2681 - C100535 * C2668 - C100534 * C2682 +
            C100532 * C2692 + C100536 * C18109 - C100537 * C18105 -
            C100536 * C18110 + C152775 * C18117) *
               C152696 * C51246 +
           (C100534 * C2683 - C100535 * C2669 - C100534 * C2684 +
            C100532 * C2693 + C100536 * C18631 - C100537 * C18630 -
            C100536 * C18632 + C152775 * C18633) *
               C152696 * C51247) *
              C2662) *
         C152512 * C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C6338 +
           (C100534 * C386 - C100535 * C371 - C100534 * C387 + C100532 * C407 +
            C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
            C152775 * C1245) *
               C6339 +
           (C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
            C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
            C152775 * C1744) *
               C6340) *
              C152457 * C152530 * C152512 * C129 -
          ((C100910 + C100909) * C6340 + (C100907 + C100908) * C6339 +
           (C100600 + C100599) * C6338) *
              C152457 * C152530 * C152512 * C130 +
          (C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
              C152457 * C152530 * C152512 * C131 -
          ((C100915 + C100916) * C6340 + (C100914 + C100913) * C6339 +
           C100610 * C6338) *
              C152457 * C152530 * C152512 * C132 +
          (C100611 * C6338 + (C101436 + C101435) * C6339 +
           (C100534 * C398 - C100535 * C377 - C100534 * C399 + C100532 * C413 +
            C100536 * C2108 - C100537 * C2107 - C100536 * C2109 +
            C152775 * C2110) *
               C6340) *
              C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C152917 -
           ((C109374 + C109375) * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C152901 +
           (C109376 * C6338 + (C109375 + C109374) * C6339 +
            (C100534 * C1539 - C100535 * C1527 - C100534 * C1540 +
             C100532 * C1551 + C100536 * C8189 - C100537 * C8180 -
             C100536 * C8190 + C152775 * C8198) *
                C6340) *
               C152457 * C152530 * C152870) *
              C365 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            (C102760 + C102759) * C6340) *
               C152457 * C152530 * C152901 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C152917 -
           ((C100536 * C8187 - C100537 * C8179 - C100536 * C8188 +
             C152775 * C8197 + C100534 * C1541 - C100535 * C1528 -
             C100534 * C1542 + C100532 * C1552) *
                C6340 +
            (C102759 + C102760) * C6339 + C109357 * C6338) *
               C152457 * C152530 * C152870) *
              C366 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152530 * C152917 -
           ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
            C100917 * C6338) *
               C152457 * C152530 * C152901 +
           (C100918 * C6338 + (C102758 + C102757) * C6339 +
            (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
             C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
             C100536 * C8729 + C152775 * C8730) *
                C6340) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152918 -
           ((C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
             C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
             C100534 * C1728 + C100532 * C1744) *
                C6340 +
            (C100536 * C1719 - C100537 * C1704 - C100536 * C1720 +
             C152775 * C1740 + C100534 * C1233 - C100535 * C1227 -
             C100534 * C1234 + C100532 * C1245) *
                C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152903 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C100534 * C1719 - C100535 * C1704 - C100534 * C1720 +
             C100532 * C1740 + C100536 * C3213 - C100537 * C3209 -
             C100536 * C3214 + C152775 * C3221) *
                C6339 +
            (C100534 * C1729 - C100535 * C1709 - C100534 * C1730 +
             C100532 * C1745 + C100536 * C9516 - C100537 * C9509 -
             C100536 * C9517 + C152775 * C9527) *
                C6340) *
               C152457 * C152873) *
              C152512 * C365 +
          (((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
            (C103078 + C103077) * C6340) *
               C152457 * C152903 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152918 -
           ((C100536 * C9514 - C100537 * C9508 - C100536 * C9515 +
             C152775 * C9526 + C100534 * C1731 - C100535 * C1710 -
             C100534 * C1732 + C100532 * C1746) *
                C6340 +
            (C104147 + C104148) * C6339 + (C101216 + C101215) * C6338) *
               C152457 * C152873) *
              C152512 * C366 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152918 -
           ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
            C101223 * C6338) *
               C152457 * C152903 +
           (C101224 * C6338 + (C104146 + C104145) * C6339 +
            (C100534 * C1733 - C100535 * C1711 - C100534 * C1734 +
             C100532 * C1747 + C100536 * C10024 - C100537 * C10023 -
             C100536 * C10025 + C152775 * C10026) *
                C6340) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C1429 -
           ((C109374 + C109375) * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C1430 +
           (C109376 * C6338 + (C109375 + C109374) * C6339 +
            (C100534 * C1539 - C100535 * C1527 - C100534 * C1540 +
             C100532 * C1551 + C100536 * C8189 - C100537 * C8180 -
             C100536 * C8190 + C152775 * C8198) *
                C6340) *
               C152457 * C152530 * C152870) *
              C152914 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            (C102760 + C102759) * C6340) *
               C152457 * C152530 * C1430 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C1429 -
           ((C100536 * C8187 - C100537 * C8179 - C100536 * C8188 +
             C152775 * C8197 + C100534 * C1541 - C100535 * C1528 -
             C100534 * C1542 + C100532 * C1552) *
                C6340 +
            (C102759 + C102760) * C6339 + C109357 * C6338) *
               C152457 * C152530 * C152870) *
              C152897 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152530 * C1429 -
           ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
            C100917 * C6338) *
               C152457 * C152530 * C1430 +
           (C100918 * C6338 + (C102758 + C102757) * C6339 +
            (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
             C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
             C100536 * C8729 + C152775 * C8730) *
                C6340) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C6338 +
           (C109370 + C109371) * C6339 + C109376 * C6340) *
              C152457 * C152530 * C1517 -
          (C110641 * C6340 + (C109373 + C109372) * C6339 +
           (C109371 + C109370) * C6338) *
              C152457 * C152530 * C1518 +
          (C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
              C152457 * C152530 * C1519 -
          ((C110668 + C110669) * C6340 + (C110667 + C110666) * C6339 +
           C110641 * C6338) *
              C152457 * C152530 * C1520 +
          (C110670 * C6338 + (C110669 + C110668) * C6339 +
           (C100534 * C7930 - C100535 * C7924 - C100534 * C7931 +
            C100532 * C7936 + C100536 * C61016 - C100537 * C61015 -
            C100536 * C61017 + C152775 * C61018) *
               C6340) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152918 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152903 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C110938 + C110939) * C6339 + C110946 * C6340) *
               C152457 * C152873) *
              C1429 +
          (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
            (C110942 + C110943) * C6340) *
               C152457 * C152903 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152918 -
           ((C110944 + C110945) * C6340 + (C110941 + C110940) * C6339 +
            (C110939 + C110938) * C6338) *
               C152457 * C152873) *
              C1430 +
          ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C152918 -
           ((C100536 * C8191 - C100537 * C8181 - C100536 * C8192 +
             C152775 * C8199 + C100534 * C8189 - C100535 * C8180 -
             C100534 * C8190 + C100532 * C8198) *
                C6340 +
            (C110943 + C110942) * C6339 + C110889 * C6338) *
               C152457 * C152903 +
           (C110946 * C6338 + (C110945 + C110944) * C6339 +
            (C100534 * C8191 - C100535 * C8181 - C100534 * C8192 +
             C100532 * C8199 + C100536 * C61859 - C100537 * C61858 -
             C100536 * C61860 + C152775 * C61861) *
                C6340) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C2427 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C2428 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C110938 + C110939) * C6339 + C110946 * C6340) *
               C152457 * C152873) *
              C152512 * C152914 +
          (((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
            C111446 * C6340) *
               C152457 * C2428 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C2427 -
           ((C100536 * C9514 - C100537 * C9508 - C100536 * C9515 +
             C152775 * C9526 + C100534 * C1731 - C100535 * C1710 -
             C100534 * C1732 + C100532 * C1746) *
                C6340 +
            (C104147 + C104148) * C6339 + (C101216 + C101215) * C6338) *
               C152457 * C152873) *
              C152512 * C152897 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C2427 -
           ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
            C101223 * C6338) *
               C152457 * C2428 +
           (C101224 * C6338 + (C104146 + C104145) * C6339 +
            (C100534 * C1733 - C100535 * C1711 - C100534 * C1734 +
             C100532 * C1747 + C100536 * C10024 - C100537 * C10023 -
             C100536 * C10025 + C152775 * C10026) *
                C6340) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C2427 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C2428 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C110938 + C110939) * C6339 + C110946 * C6340) *
               C152457 * C152873) *
              C152917 +
          (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
            C111655 * C6340) *
               C152457 * C2428 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C2427 -
           ((C110944 + C110945) * C6340 + (C110941 + C110940) * C6339 +
            (C110939 + C110938) * C6338) *
               C152457 * C152873) *
              C152901 +
          ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C2427 -
           ((C111668 + C111669) * C6340 + (C110943 + C110942) * C6339 +
            C110889 * C6338) *
               C152457 * C2428 +
           (C110946 * C6338 + (C110945 + C110944) * C6339 +
            (C100534 * C8191 - C100535 * C8181 - C100534 * C8192 +
             C100532 * C8199 + C100536 * C61859 - C100537 * C61858 -
             C100536 * C61860 + C152775 * C61861) *
                C6340) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C6338 +
           (C109370 + C109371) * C6339 + C109376 * C6340) *
              C152457 * C2658 -
          (C110889 * C6340 + (C110299 + C110300) * C6339 +
           (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
            C100534 * C647 - C100535 * C632 - C100534 * C648 + C100532 * C668) *
               C6338) *
              C152457 * C2659 +
          ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
            C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
            C152775 * C2690) *
               C6338 +
           (C110938 + C110939) * C6339 + C110946 * C6340) *
              C152457 * C2660 -
          ((C100536 * C9520 - C100537 * C9511 - C100536 * C9521 +
            C152775 * C9529 + C100534 * C9516 - C100535 * C9509 -
            C100534 * C9517 + C100532 * C9527) *
               C6340 +
           (C100536 * C9518 - C100537 * C9510 - C100536 * C9519 +
            C152775 * C9528 + C100534 * C3213 - C100535 * C3209 -
            C100534 * C3214 + C100532 * C3221) *
               C6339 +
           (C100536 * C2679 - C100537 * C2667 - C100536 * C2680 +
            C152775 * C2691 + C100534 * C2677 - C100535 * C2666 -
            C100534 * C2678 + C100532 * C2690) *
               C6338) *
              C152457 * C2661 +
          ((C100534 * C2679 - C100535 * C2667 - C100534 * C2680 +
            C100532 * C2691 + C100536 * C18111 - C100537 * C18106 -
            C100536 * C18112 + C152775 * C18118) *
               C6338 +
           (C100534 * C9518 - C100535 * C9510 - C100534 * C9519 +
            C100532 * C9528 + C100536 * C18851 - C100537 * C18849 -
            C100536 * C18852 + C152775 * C18855) *
               C6339 +
           (C100534 * C9520 - C100535 * C9511 - C100534 * C9521 +
            C100532 * C9529 + C100536 * C68735 - C100537 * C68734 -
            C100536 * C68736 + C152775 * C68737) *
               C6340) *
              C152457 * C2662) *
         C152512 * C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[363] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C152829 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C152617) *
               C1429 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C152617 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C152829) *
               C1430 +
           (((C100534 * C388 - C100535 * C372 - C100534 * C389 +
              C100532 * C408 + C100536 * C1727 - C100537 * C1708 -
              C100536 * C1728 + C152775 * C1744) *
                 C152696 * C51245 +
             (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
                C152829 -
            ((C103075 + C103076) * C152696 * C51247 +
             (C103077 + C103078) * C152696 * C51246 +
             (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
              C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
              C100534 * C1728 + C100532 * C1744) *
                 C152696 * C51245) *
                C152617) *
               C152870) *
              C152814 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C152617 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C152829) *
               C1429 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C152829 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C152617) *
               C1430 +
           (((C103078 + C103077) * C152696 * C51245 +
             (C103076 + C103075) * C152696 * C51246 +
             (C100534 * C1721 - C100535 * C1705 - C100534 * C1722 +
              C100532 * C1741 + C100536 * C1735 - C100537 * C1712 -
              C100536 * C1736 + C152775 * C1748) *
                 C152696 * C51247) *
                C152617 -
            ((C100915 + C100916) * C152696 * C51247 +
             (C100912 + C100911) * C152696 * C51246 +
             (C100910 + C100909) * C152696 * C51245) *
                C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152829 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C152617) *
              C152512 * C873 +
          (((C101214 + C101213) * C152696 * C51245 +
            (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
               C152617 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152829) *
              C152512 * C874 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152829 -
           ((C101645 + C101646) * C152696 * C51247 +
            (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
               C152617) *
              C152512 * C875 +
          ((C101640 * C51245 + (C101646 + C101645) * C152696 * C51246 +
            (C100534 * C661 - C100535 * C639 - C100534 * C662 + C100532 * C675 +
             C100536 * C663 - C100537 * C640 - C100536 * C664 +
             C152775 * C676) *
                C152696 * C51247) *
               C152617 -
           ((C100607 + C100608) * C152696 * C51247 +
            (C100606 + C100605) * C152696 * C51246 + C100613 * C51245) *
               C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C3047 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C3048 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C152696 * C51245 +
            (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
               C3049 -
           ((C104367 + C104368) * C152696 * C51247 +
            (C104369 + C104370) * C152696 * C51246 +
            (C100536 * C2679 - C100537 * C2667 - C100536 * C2680 +
             C152775 * C2691 + C100534 * C2677 - C100535 * C2666 -
             C100534 * C2678 + C100532 * C2690) *
                C152696 * C51245) *
               C152886) *
              C152512 * C152814 +
          (((C101214 + C101213) * C152696 * C51245 +
            (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
               C3048 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C3047 -
           ((C101221 + C101222) * C152696 * C51247 +
            (C101218 + C101217) * C152696 * C51246 +
            (C101216 + C101215) * C152696 * C51245) *
               C3049 +
           ((C104370 + C104369) * C152696 * C51245 +
            (C104368 + C104367) * C152696 * C51246 +
            (C100534 * C2671 - C100535 * C2663 - C100534 * C2672 +
             C100532 * C2687 + C100536 * C2685 - C100537 * C2670 -
             C100536 * C2686 + C152775 * C2694) *
                C152696 * C51247) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152829 -
           ((C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
             C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
             C100534 * C1728 + C100532 * C1744) *
                C6340 +
            (C100536 * C1719 - C100537 * C1704 - C100536 * C1720 +
             C152775 * C1740 + C100534 * C1233 - C100535 * C1227 -
             C100534 * C1234 + C100532 * C1245) *
                C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152617) *
              C152512 * C873 +
          (((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
            (C103078 + C103077) * C6340) *
               C152457 * C152617 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152829) *
              C152512 * C874 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152829 -
           ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
            C101223 * C6338) *
               C152457 * C152617) *
              C152512 * C875 +
          ((C101631 * C6338 + (C101978 + C101977) * C6339 +
            (C100534 * C1721 - C100535 * C1705 - C100534 * C1722 +
             C100532 * C1741 + C100536 * C1735 - C100537 * C1712 -
             C100536 * C1736 + C152775 * C1748) *
                C6340) *
               C152457 * C152617 -
           ((C100915 + C100916) * C6340 + (C100914 + C100913) * C6339 +
            C100610 * C6338) *
               C152457 * C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C152829 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152617) *
               C1429 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             (C110942 + C110943) * C6340) *
                C152457 * C152617 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C152829) *
               C1430 +
           ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
                C152457 * C152829 -
            ((C100536 * C8191 - C100537 * C8181 - C100536 * C8192 +
              C152775 * C8199 + C100534 * C8189 - C100535 * C8180 -
              C100534 * C8190 + C100532 * C8198) *
                 C6340 +
             (C110943 + C110942) * C6339 + C110889 * C6338) *
                C152457 * C152617) *
               C152870) *
              C152814 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C152617 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C152829) *
               C1429 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C152829 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C152617) *
               C1430 +
           ((C111446 * C6338 + (C111460 + C111459) * C6339 +
             (C100534 * C8187 - C100535 * C8179 - C100534 * C8188 +
              C100532 * C8197 + C100536 * C8193 - C100537 * C8182 -
              C100536 * C8194 + C152775 * C8200) *
                 C6340) *
                C152457 * C152617 -
            ((C111154 + C111155) * C6340 + (C102759 + C102760) * C6339 +
             C109357 * C6338) *
                C152457 * C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C3047 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C3048 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C110938 + C110939) * C6339 + C110946 * C6340) *
               C152457 * C3049 -
           ((C100536 * C9520 - C100537 * C9511 - C100536 * C9521 +
             C152775 * C9529 + C100534 * C9516 - C100535 * C9509 -
             C100534 * C9517 + C100532 * C9527) *
                C6340 +
            (C100536 * C9518 - C100537 * C9510 - C100536 * C9519 +
             C152775 * C9528 + C100534 * C3213 - C100535 * C3209 -
             C100534 * C3214 + C100532 * C3221) *
                C6339 +
            (C100536 * C2679 - C100537 * C2667 - C100536 * C2680 +
             C152775 * C2691 + C100534 * C2677 - C100535 * C2666 -
             C100534 * C2678 + C100532 * C2690) *
                C6338) *
               C152457 * C152886) *
              C152512 * C152814 +
          (((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
            C111446 * C6340) *
               C152457 * C3048 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C3047 -
           ((C112530 + C112531) * C6340 + (C104147 + C104148) * C6339 +
            (C101216 + C101215) * C6338) *
               C152457 * C3049 +
           ((C104370 + C104369) * C6338 +
            (C100534 * C3215 - C100535 * C3210 - C100534 * C3216 +
             C100532 * C3222 + C100536 * C9522 - C100537 * C9512 -
             C100536 * C9523 + C152775 * C9530) *
                C6339 +
            (C100534 * C9514 - C100535 * C9508 - C100534 * C9515 +
             C100532 * C9526 + C100536 * C9524 - C100537 * C9513 -
             C100536 * C9525 + C152775 * C9531) *
                C6340) *
               C152457 * C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[364] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152530 * C152917 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152530 * C152901 +
           ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152530 * C152870) *
              C365 +
          (((C100908 + C100907) * C152696 * C51245 +
            (C100906 + C100905) * C152696 * C51246 +
            (C100913 + C100914) * C152696 * C51247) *
               C152530 * C152901 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152530 * C152917 -
           ((C100915 + C100916) * C152696 * C51247 +
            (C100912 + C100911) * C152696 * C51246 +
            (C100910 + C100909) * C152696 * C51245) *
               C152530 * C152870) *
              C366 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152530 * C152917 -
           ((C100536 * C1241 - C100537 * C1231 - C100536 * C1242 +
             C152775 * C1249 + C100534 * C396 - C100535 * C376 -
             C100534 * C397 + C100532 * C412) *
                C152696 * C51247 +
            (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
               C152530 * C152901 +
           (C100920 * C51245 + (C100916 + C100915) * C152696 * C51246 +
            (C100534 * C398 - C100535 * C377 - C100534 * C399 + C100532 * C413 +
             C100536 * C2108 - C100537 * C2107 - C100536 * C2109 +
             C152775 * C2110) *
                C152696 * C51247) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C152696 * C51245 +
           (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
              C152530 * C152512 * C129 -
          (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
           (C100600 + C100599) * C152696 * C51245) *
              C152530 * C152512 * C130 +
          (C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
           C100614 * C51247) *
              C152530 * C152512 * C131 -
          ((C100607 + C100608) * C152696 * C51247 +
           (C100606 + C100605) * C152696 * C51246 + C100613 * C51245) *
              C152530 * C152512 * C132 +
          (C100614 * C51245 + (C100608 + C100607) * C152696 * C51246 +
           (C100534 * C156 - C100535 * C142 - C100534 * C157 + C100532 * C166 +
            C100536 * C1022 - C100537 * C1021 - C100536 * C1023 +
            C152775 * C1024) *
               C152696 * C51247) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152530 * C1429 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152530 * C1430 +
           ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152530 * C152870) *
              C152914 +
          (((C100908 + C100907) * C152696 * C51245 +
            (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
               C152530 * C1430 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152530 * C1429 -
           ((C100915 + C100916) * C152696 * C51247 +
            (C100912 + C100911) * C152696 * C51246 +
            (C100910 + C100909) * C152696 * C51245) *
               C152530 * C152870) *
              C152897 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152530 * C1429 -
           ((C101435 + C101436) * C152696 * C51247 +
            (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
               C152530 * C1430 +
           (C100920 * C51245 + (C100916 + C100915) * C152696 * C51246 +
            (C100534 * C398 - C100535 * C377 - C100534 * C399 + C100532 * C413 +
             C100536 * C2108 - C100537 * C2107 - C100536 * C2109 +
             C152775 * C2110) *
                C152696 * C51247) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C152696 * C51245 +
           (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
              C152530 * C1517 -
          (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
           (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
            C152775 * C1245 + C100534 * C386 - C100535 * C371 - C100534 * C387 +
            C100532 * C407) *
               C152696 * C51245) *
              C152530 * C1518 +
          ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
            C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
            C152775 * C1744) *
               C152696 * C51245 +
           (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
              C152530 * C1519 -
          ((C100536 * C2273 - C100537 * C2267 - C100536 * C2274 +
            C152775 * C2279 + C100534 * C1533 - C100535 * C1524 -
            C100534 * C1534 + C100532 * C1548) *
               C152696 * C51247 +
           (C100536 * C2271 - C100537 * C2266 - C100536 * C2272 +
            C152775 * C2278 + C100534 * C1535 - C100535 * C1525 -
            C100534 * C1536 + C100532 * C1549) *
               C152696 * C51246 +
           (C100536 * C2269 - C100537 * C2265 - C100536 * C2270 +
            C152775 * C2277 + C100534 * C1537 - C100535 * C1526 -
            C100534 * C1538 + C100532 * C1550) *
               C152696 * C51245) *
              C152530 * C1520 +
          ((C100534 * C1539 - C100535 * C1527 - C100534 * C1540 +
            C100532 * C1551 + C100536 * C8189 - C100537 * C8180 -
            C100536 * C8190 + C152775 * C8198) *
               C152696 * C51245 +
           (C100534 * C1541 - C100535 * C1528 - C100534 * C1542 +
            C100532 * C1552 + C100536 * C8187 - C100537 * C8179 -
            C100536 * C8188 + C152775 * C8197) *
               C152696 * C51246 +
           (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
            C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
            C100536 * C8729 + C152775 * C8730) *
               C152696 * C51247) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C2427 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C2428 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C152696 * C51245 +
            (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
               C152873) *
              C152512 * C152914 +
          (((C101214 + C101213) * C152696 * C51245 +
            (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
               C2428 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C2427 -
           ((C101221 + C101222) * C152696 * C51247 +
            (C101218 + C101217) * C152696 * C51246 +
            (C101216 + C101215) * C152696 * C51245) *
               C152873) *
              C152512 * C152897 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C2427 -
           ((C101645 + C101646) * C152696 * C51247 +
            (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
               C2428 +
           (C101226 * C51245 + (C101222 + C101221) * C152696 * C51246 +
            (C100534 * C659 - C100535 * C638 - C100534 * C660 + C100532 * C674 +
             C100536 * C3052 - C100537 * C3051 - C100536 * C3053 +
             C152775 * C3054) *
                C152696 * C51247) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C2427 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C2428 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C152696 * C51245 +
            (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
               C152873) *
              C152917 +
          (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
             C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
             C100536 * C1720 + C152775 * C1740) *
                C152696 * C51245 +
            (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
               C2428 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C2427 -
           ((C100536 * C3217 - C100537 * C3211 - C100536 * C3218 +
             C152775 * C3223 + C100534 * C1715 - C100535 * C1702 -
             C100534 * C1716 + C100532 * C1738) *
                C152696 * C51247 +
            (C100536 * C3215 - C100537 * C3210 - C100536 * C3216 +
             C152775 * C3222 + C100534 * C1717 - C100535 * C1703 -
             C100534 * C1718 + C100532 * C1739) *
                C152696 * C51246 +
            (C100536 * C3213 - C100537 * C3209 - C100536 * C3214 +
             C152775 * C3221 + C100534 * C1719 - C100535 * C1704 -
             C100534 * C1720 + C100532 * C1740) *
                C152696 * C51245) *
               C152873) *
              C152901 +
          (((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C2427 -
           ((C103075 + C103076) * C152696 * C51247 +
            (C103077 + C103078) * C152696 * C51246 +
            (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
             C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
             C100534 * C1728 + C100532 * C1744) *
                C152696 * C51245) *
               C2428 +
           ((C100534 * C1729 - C100535 * C1709 - C100534 * C1730 +
             C100532 * C1745 + C100536 * C9516 - C100537 * C9509 -
             C100536 * C9517 + C152775 * C9527) *
                C152696 * C51245 +
            (C100534 * C1731 - C100535 * C1710 - C100534 * C1732 +
             C100532 * C1746 + C100536 * C9514 - C100537 * C9508 -
             C100536 * C9515 + C152775 * C9526) *
                C152696 * C51246 +
            (C100534 * C1733 - C100535 * C1711 - C100534 * C1734 +
             C100532 * C1747 + C100536 * C10024 - C100537 * C10023 -
             C100536 * C10025 + C152775 * C10026) *
                C152696 * C51247) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C6338 +
           (C100534 * C386 - C100535 * C371 - C100534 * C387 + C100532 * C407 +
            C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
            C152775 * C1245) *
               C6339 +
           (C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
            C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
            C152775 * C1744) *
               C6340) *
              C152457 * C152530 * C152512 * C129 -
          ((C100910 + C100909) * C6340 + (C100907 + C100908) * C6339 +
           (C100600 + C100599) * C6338) *
              C152457 * C152530 * C152512 * C130 +
          (C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
              C152457 * C152530 * C152512 * C131 -
          ((C100915 + C100916) * C6340 + (C100914 + C100913) * C6339 +
           C100610 * C6338) *
              C152457 * C152530 * C152512 * C132 +
          (C100611 * C6338 + (C101436 + C101435) * C6339 +
           (C100534 * C398 - C100535 * C377 - C100534 * C399 + C100532 * C413 +
            C100536 * C2108 - C100537 * C2107 - C100536 * C2109 +
            C152775 * C2110) *
               C6340) *
              C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C152917 -
           ((C109374 + C109375) * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C152901 +
           (C109376 * C6338 + (C109375 + C109374) * C6339 +
            (C100534 * C1539 - C100535 * C1527 - C100534 * C1540 +
             C100532 * C1551 + C100536 * C8189 - C100537 * C8180 -
             C100536 * C8190 + C152775 * C8198) *
                C6340) *
               C152457 * C152530 * C152870) *
              C365 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            (C102760 + C102759) * C6340) *
               C152457 * C152530 * C152901 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C152917 -
           ((C100536 * C8187 - C100537 * C8179 - C100536 * C8188 +
             C152775 * C8197 + C100534 * C1541 - C100535 * C1528 -
             C100534 * C1542 + C100532 * C1552) *
                C6340 +
            (C102759 + C102760) * C6339 + C109357 * C6338) *
               C152457 * C152530 * C152870) *
              C366 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152530 * C152917 -
           ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
            C100917 * C6338) *
               C152457 * C152530 * C152901 +
           (C100918 * C6338 + (C102758 + C102757) * C6339 +
            (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
             C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
             C100536 * C8729 + C152775 * C8730) *
                C6340) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C1429 -
           ((C109374 + C109375) * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C1430 +
           (C109376 * C6338 + (C109375 + C109374) * C6339 +
            (C100534 * C1539 - C100535 * C1527 - C100534 * C1540 +
             C100532 * C1551 + C100536 * C8189 - C100537 * C8180 -
             C100536 * C8190 + C152775 * C8198) *
                C6340) *
               C152457 * C152530 * C152870) *
              C152914 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            (C102760 + C102759) * C6340) *
               C152457 * C152530 * C1430 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C1429 -
           ((C100536 * C8187 - C100537 * C8179 - C100536 * C8188 +
             C152775 * C8197 + C100534 * C1541 - C100535 * C1528 -
             C100534 * C1542 + C100532 * C1552) *
                C6340 +
            (C102759 + C102760) * C6339 + C109357 * C6338) *
               C152457 * C152530 * C152870) *
              C152897 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152530 * C1429 -
           ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
            C100917 * C6338) *
               C152457 * C152530 * C1430 +
           (C100918 * C6338 + (C102758 + C102757) * C6339 +
            (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
             C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
             C100536 * C8729 + C152775 * C8730) *
                C6340) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C6338 +
           (C109370 + C109371) * C6339 + C109376 * C6340) *
              C152457 * C152530 * C1517 -
          (C110641 * C6340 + (C109373 + C109372) * C6339 +
           (C109371 + C109370) * C6338) *
              C152457 * C152530 * C1518 +
          (C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
              C152457 * C152530 * C1519 -
          ((C110668 + C110669) * C6340 + (C110667 + C110666) * C6339 +
           C110641 * C6338) *
              C152457 * C152530 * C1520 +
          (C110670 * C6338 + (C110669 + C110668) * C6339 +
           (C100534 * C7930 - C100535 * C7924 - C100534 * C7931 +
            C100532 * C7936 + C100536 * C61016 - C100537 * C61015 -
            C100536 * C61017 + C152775 * C61018) *
               C6340) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C2427 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C2428 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C110938 + C110939) * C6339 + C110946 * C6340) *
               C152457 * C152873) *
              C152512 * C152914 +
          (((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
            C111446 * C6340) *
               C152457 * C2428 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C2427 -
           ((C100536 * C9514 - C100537 * C9508 - C100536 * C9515 +
             C152775 * C9526 + C100534 * C1731 - C100535 * C1710 -
             C100534 * C1732 + C100532 * C1746) *
                C6340 +
            (C104147 + C104148) * C6339 + (C101216 + C101215) * C6338) *
               C152457 * C152873) *
              C152512 * C152897 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C2427 -
           ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
            C101223 * C6338) *
               C152457 * C2428 +
           (C101224 * C6338 + (C104146 + C104145) * C6339 +
            (C100534 * C1733 - C100535 * C1711 - C100534 * C1734 +
             C100532 * C1747 + C100536 * C10024 - C100537 * C10023 -
             C100536 * C10025 + C152775 * C10026) *
                C6340) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C2427 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C2428 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C110938 + C110939) * C6339 + C110946 * C6340) *
               C152457 * C152873) *
              C152917 +
          (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
            C111655 * C6340) *
               C152457 * C2428 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C2427 -
           ((C110944 + C110945) * C6340 + (C110941 + C110940) * C6339 +
            (C110939 + C110938) * C6338) *
               C152457 * C152873) *
              C152901 +
          ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C2427 -
           ((C111668 + C111669) * C6340 + (C110943 + C110942) * C6339 +
            C110889 * C6338) *
               C152457 * C2428 +
           (C110946 * C6338 + (C110945 + C110944) * C6339 +
            (C100534 * C8191 - C100535 * C8181 - C100534 * C8192 +
             C100532 * C8199 + C100536 * C61859 - C100537 * C61858 -
             C100536 * C61860 + C152775 * C61861) *
                C6340) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[365] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C4361 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C152617) *
               C152828 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C152617 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C4361) *
               C152575) *
              C152489 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C152617 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C4361) *
               C152828 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C4361 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C152617) *
               C152575) *
              C152498 +
          (((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
             C100614 * C51247) *
                C4361 -
            ((C101645 + C101646) * C152696 * C51247 +
             (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
                C152617) *
               C152828 +
           ((C101980 * C51245 + (C101978 + C101977) * C152696 * C51246 +
             (C100534 * C1241 - C100535 * C1231 - C100534 * C1242 +
              C100532 * C1249 + C100536 * C2890 - C100537 * C2889 -
              C100536 * C2891 + C152775 * C2892) *
                 C152696 * C51247) *
                C152617 -
            ((C101435 + C101436) * C152696 * C51247 +
             (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
                C4361) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C4361 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152617) *
               C152828 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             C111655 * C6340) *
                C152457 * C152617 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C4361) *
               C152575) *
              C152489 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C152617 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C4361) *
               C152828 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C4361 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C152617) *
               C152575) *
              C152498 +
          (((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
                C152457 * C4361 -
            ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
             C101223 * C6338) *
                C152457 * C152617) *
               C152828 +
           ((C101979 * C6338 + (C103076 + C103075) * C6339 +
             (C100534 * C2273 - C100535 * C2267 - C100534 * C2274 +
              C100532 * C2279 + C100536 * C9823 - C100537 * C9822 -
              C100536 * C9824 + C152775 * C9825) *
                 C6340) *
                C152457 * C152617 -
            ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
             C100917 * C6338) *
                C152457 * C4361) *
               C152575) *
              C3842)) /
            (p * q * std::sqrt(p + q));
    d2ee[366] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C152613 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C152620 +
            ((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C152696 * C51245 +
             (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
                C5033) *
               C152828 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C152620 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C152613 -
            ((C104145 + C104146) * C152696 * C51247 +
             (C104147 + C104148) * C152696 * C51246 +
             (C100536 * C3213 - C100537 * C3209 - C100536 * C3214 +
              C152775 * C3221 + C100534 * C1719 - C100535 * C1704 -
              C100534 * C1720 + C100532 * C1740) *
                 C152696 * C51245) *
                C5033) *
               C152575) *
              C3495 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C152620 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C152613 -
            ((C101221 + C101222) * C152696 * C51247 +
             (C101218 + C101217) * C152696 * C51246 +
             (C101216 + C101215) * C152696 * C51245) *
                C5033) *
               C152828 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C152613 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C152620 +
            ((C104148 + C104147) * C152696 * C51245 +
             (C104146 + C104145) * C152696 * C51246 +
             (C100534 * C1713 - C100535 * C1701 - C100534 * C1714 +
              C100532 * C1737 + C100536 * C3219 - C100537 * C3212 -
              C100536 * C3220 + C152775 * C3224) *
                 C152696 * C51247) *
                C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C152613 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152620 +
            ((C100534 * C649 - C100535 * C633 - C100534 * C650 +
              C100532 * C669 + C100536 * C2677 - C100537 * C2666 -
              C100536 * C2678 + C152775 * C2690) *
                 C6338 +
             (C110938 + C110939) * C6339 + C110946 * C6340) *
                C152457 * C5033) *
               C152828 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             C111655 * C6340) *
                C152457 * C152620 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C152613 -
            ((C110944 + C110945) * C6340 + (C110941 + C110940) * C6339 +
             (C110939 + C110938) * C6338) *
                C152457 * C5033) *
               C152575) *
              C3495 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C152620 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C152613 -
            ((C112530 + C112531) * C6340 + (C104147 + C104148) * C6339 +
             (C101216 + C101215) * C6338) *
                C152457 * C5033) *
               C152828 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C152613 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C152620 +
            ((C104148 + C104147) * C6338 + (C112531 + C112530) * C6339 +
             (C100534 * C8183 - C100535 * C8177 - C100534 * C8184 +
              C100532 * C8195 + C100536 * C10242 - C100537 * C10239 -
              C100536 * C10243 + C152775 * C10245) *
                 C6340) *
                C152457 * C5033) *
               C152575) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[367] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C4361 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C152617) *
               C152917 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C152617 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C4361) *
               C152901 +
           (((C100534 * C388 - C100535 * C372 - C100534 * C389 +
              C100532 * C408 + C100536 * C1727 - C100537 * C1708 -
              C100536 * C1728 + C152775 * C1744) *
                 C152696 * C51245 +
             (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
                C4361 -
            ((C103075 + C103076) * C152696 * C51247 +
             (C103077 + C103078) * C152696 * C51246 +
             (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
              C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
              C100534 * C1728 + C100532 * C1744) *
                 C152696 * C51245) *
                C152617) *
               C152870) *
              C3495 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C152617 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C4361) *
               C152917 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C4361 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C152617) *
               C152901 +
           (((C103078 + C103077) * C152696 * C51245 +
             (C103076 + C103075) * C152696 * C51246 +
             (C100534 * C1721 - C100535 * C1705 - C100534 * C1722 +
              C100532 * C1741 + C100536 * C1735 - C100537 * C1712 -
              C100536 * C1736 + C152775 * C1748) *
                 C152696 * C51247) *
                C152617 -
            ((C100915 + C100916) * C152696 * C51247 +
             (C100912 + C100911) * C152696 * C51246 +
             (C100910 + C100909) * C152696 * C51245) *
                C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C4361 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C152617) *
              C152512 * C152923 +
          (((C101214 + C101213) * C152696 * C51245 +
            (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
               C152617 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C4361) *
              C152512 * C152916 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C4361 -
           ((C101645 + C101646) * C152696 * C51247 +
            (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
               C152617) *
              C152512 * C152899 +
          ((C101640 * C51245 + (C101646 + C101645) * C152696 * C51246 +
            (C100534 * C661 - C100535 * C639 - C100534 * C662 + C100532 * C675 +
             C100536 * C663 - C100537 * C640 - C100536 * C664 +
             C152775 * C676) *
                C152696 * C51247) *
               C152617 -
           ((C100607 + C100608) * C152696 * C51247 +
            (C100606 + C100605) * C152696 * C51246 + C100613 * C51245) *
               C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152925 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C152922 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C152696 * C51245 +
            (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
               C152909 -
           ((C104367 + C104368) * C152696 * C51247 +
            (C104369 + C104370) * C152696 * C51246 +
            (C100536 * C2679 - C100537 * C2667 - C100536 * C2680 +
             C152775 * C2691 + C100534 * C2677 - C100535 * C2666 -
             C100534 * C2678 + C100532 * C2690) *
                C152696 * C51245) *
               C152886) *
              C152512 * C3495 +
          (((C101214 + C101213) * C152696 * C51245 +
            (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
               C152922 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152925 -
           ((C101221 + C101222) * C152696 * C51247 +
            (C101218 + C101217) * C152696 * C51246 +
            (C101216 + C101215) * C152696 * C51245) *
               C152909 +
           ((C104370 + C104369) * C152696 * C51245 +
            (C104368 + C104367) * C152696 * C51246 +
            (C100534 * C2671 - C100535 * C2663 - C100534 * C2672 +
             C100532 * C2687 + C100536 * C2685 - C100537 * C2670 -
             C100536 * C2686 + C152775 * C2694) *
                C152696 * C51247) *
               C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C4361 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152617) *
              C152512 * C152923 +
          (((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
            C111446 * C6340) *
               C152457 * C152617 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C4361) *
              C152512 * C152916 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C4361 -
           ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
            C101223 * C6338) *
               C152457 * C152617) *
              C152512 * C152899 +
          ((C101631 * C6338 + (C101978 + C101977) * C6339 +
            (C100534 * C1721 - C100535 * C1705 - C100534 * C1722 +
             C100532 * C1741 + C100536 * C1735 - C100537 * C1712 -
             C100536 * C1736 + C152775 * C1748) *
                C6340) *
               C152457 * C152617 -
           ((C100915 + C100916) * C6340 + (C100914 + C100913) * C6339 +
            C100610 * C6338) *
               C152457 * C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C4361 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152617) *
               C152917 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             C111655 * C6340) *
                C152457 * C152617 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C4361) *
               C152901 +
           ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
                C152457 * C4361 -
            ((C111668 + C111669) * C6340 + (C110943 + C110942) * C6339 +
             C110889 * C6338) *
                C152457 * C152617) *
               C152870) *
              C3495 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C152617 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C4361) *
               C152917 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C4361 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C152617) *
               C152901 +
           ((C111446 * C6338 + (C111460 + C111459) * C6339 +
             (C100534 * C8187 - C100535 * C8179 - C100534 * C8188 +
              C100532 * C8197 + C100536 * C8193 - C100537 * C8182 -
              C100536 * C8194 + C152775 * C8200) *
                 C6340) *
                C152457 * C152617 -
            ((C111154 + C111155) * C6340 + (C102759 + C102760) * C6339 +
             C109357 * C6338) *
                C152457 * C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152925 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152922 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C110938 + C110939) * C6339 + C110946 * C6340) *
               C152457 * C152909 -
           ((C112944 + C112945) * C6340 + (C112946 + C112947) * C6339 +
            (C100536 * C2679 - C100537 * C2667 - C100536 * C2680 +
             C152775 * C2691 + C100534 * C2677 - C100535 * C2666 -
             C100534 * C2678 + C100532 * C2690) *
                C6338) *
               C152457 * C152886) *
              C152512 * C3495 +
          (((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
            C111446 * C6340) *
               C152457 * C152922 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152925 -
           ((C112530 + C112531) * C6340 + (C104147 + C104148) * C6339 +
            (C101216 + C101215) * C6338) *
               C152457 * C152909 +
           ((C104370 + C104369) * C6338 +
            (C100534 * C3215 - C100535 * C3210 - C100534 * C3216 +
             C100532 * C3222 + C100536 * C9522 - C100537 * C9512 -
             C100536 * C9523 + C152775 * C9530) *
                C6339 +
            (C100534 * C9514 - C100535 * C9508 - C100534 * C9515 +
             C100532 * C9526 + C100536 * C9524 - C100537 * C9513 -
             C100536 * C9525 + C152775 * C9531) *
                C6340) *
               C152457 * C152886) *
              C152512 * C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[368] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152613 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C152620 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C152696 * C51245 +
            (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
               C5033) *
              C152512 * C152489 +
          (((C101214 + C101213) * C152696 * C51245 +
            (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
               C152620 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152613 -
           ((C101221 + C101222) * C152696 * C51247 +
            (C101218 + C101217) * C152696 * C51246 +
            (C101216 + C101215) * C152696 * C51245) *
               C5033) *
              C152512 * C152498 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152613 -
           ((C101645 + C101646) * C152696 * C51247 +
            (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
               C152620 +
           (C101226 * C51245 + (C101222 + C101221) * C152696 * C51246 +
            (C100534 * C659 - C100535 * C638 - C100534 * C660 + C100532 * C674 +
             C100536 * C3052 - C100537 * C3051 - C100536 * C3053 +
             C152775 * C3054) *
                C152696 * C51247) *
               C5033) *
              C152512 * C3842)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152613 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152620 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C110938 + C110939) * C6339 + C110946 * C6340) *
               C152457 * C5033) *
              C152512 * C152489 +
          (((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
            C111446 * C6340) *
               C152457 * C152620 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152613 -
           ((C112530 + C112531) * C6340 + (C104147 + C104148) * C6339 +
            (C101216 + C101215) * C6338) *
               C152457 * C5033) *
              C152512 * C152498 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152613 -
           ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
            C101223 * C6338) *
               C152457 * C152620 +
           (C101224 * C6338 + (C104146 + C104145) * C6339 +
            (C100534 * C1733 - C100535 * C1711 - C100534 * C1734 +
             C100532 * C1747 + C100536 * C10024 - C100537 * C10023 -
             C100536 * C10025 + C152775 * C10026) *
                C6340) *
               C152457 * C5033) *
              C152512 * C3842)) /
            (p * q * std::sqrt(p + q));
    d2ee[369] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C4361 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C152617) *
              C152512 * C152923 +
          (((C101214 + C101213) * C152696 * C51245 +
            (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
               C152617 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C4361) *
              C152512 * C152916 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C4361 -
           ((C101645 + C101646) * C152696 * C51247 +
            (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
               C152617) *
              C152512 * C152899 +
          ((C101640 * C51245 + (C101646 + C101645) * C152696 * C51246 +
            (C100534 * C661 - C100535 * C639 - C100534 * C662 + C100532 * C675 +
             C100536 * C663 - C100537 * C640 - C100536 * C664 +
             C152775 * C676) *
                C152696 * C51247) *
               C152617 -
           ((C100607 + C100608) * C152696 * C51247 +
            (C100606 + C100605) * C152696 * C51246 + C100613 * C51245) *
               C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C4361 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C152617) *
               C152917 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C152617 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C4361) *
               C152901 +
           (((C100534 * C388 - C100535 * C372 - C100534 * C389 +
              C100532 * C408 + C100536 * C1727 - C100537 * C1708 -
              C100536 * C1728 + C152775 * C1744) *
                 C152696 * C51245 +
             (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
                C4361 -
            ((C103075 + C103076) * C152696 * C51247 +
             (C103077 + C103078) * C152696 * C51246 +
             (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
              C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
              C100534 * C1728 + C100532 * C1744) *
                 C152696 * C51245) *
                C152617) *
               C152870) *
              C3495 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C152617 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C4361) *
               C152917 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C4361 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C152617) *
               C152901 +
           (((C103078 + C103077) * C152696 * C51245 +
             (C103076 + C103075) * C152696 * C51246 +
             (C100534 * C1721 - C100535 * C1705 - C100534 * C1722 +
              C100532 * C1741 + C100536 * C1735 - C100537 * C1712 -
              C100536 * C1736 + C152775 * C1748) *
                 C152696 * C51247) *
                C152617 -
            ((C100915 + C100916) * C152696 * C51247 +
             (C100912 + C100911) * C152696 * C51246 +
             (C100910 + C100909) * C152696 * C51245) *
                C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C4361 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152617) *
              C152512 * C152923 +
          (((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
            C111446 * C6340) *
               C152457 * C152617 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C4361) *
              C152512 * C152916 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C4361 -
           ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
            C101223 * C6338) *
               C152457 * C152617) *
              C152512 * C152899 +
          ((C101631 * C6338 + (C101978 + C101977) * C6339 +
            (C100534 * C1721 - C100535 * C1705 - C100534 * C1722 +
             C100532 * C1741 + C100536 * C1735 - C100537 * C1712 -
             C100536 * C1736 + C152775 * C1748) *
                C6340) *
               C152457 * C152617 -
           ((C100915 + C100916) * C6340 + (C100914 + C100913) * C6339 +
            C100610 * C6338) *
               C152457 * C4361) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C4361 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152617) *
               C152917 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             C111655 * C6340) *
                C152457 * C152617 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C4361) *
               C152901 +
           ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
                C152457 * C4361 -
            ((C111668 + C111669) * C6340 + (C110943 + C110942) * C6339 +
             C110889 * C6338) *
                C152457 * C152617) *
               C152870) *
              C3495 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C152617 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C4361) *
               C152917 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C4361 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C152617) *
               C152901 +
           ((C111446 * C6338 + (C111460 + C111459) * C6339 +
             (C100534 * C8187 - C100535 * C8179 - C100534 * C8188 +
              C100532 * C8197 + C100536 * C8193 - C100537 * C8182 -
              C100536 * C8194 + C152775 * C8200) *
                 C6340) *
                C152457 * C152617 -
            ((C111154 + C111155) * C6340 + (C102759 + C102760) * C6339 +
             C109357 * C6338) *
                C152457 * C4361) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[370] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152530 * C152828 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152530 * C152575) *
              C873 +
          (((C100908 + C100907) * C152696 * C51245 +
            (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
               C152530 * C152575 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152530 * C152828) *
              C874 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152530 * C152828 -
           ((C101435 + C101436) * C152696 * C51247 +
            (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
               C152530 * C152575) *
              C875 +
          ((C101430 * C51245 + (C101436 + C101435) * C152696 * C51246 +
            (C100534 * C400 - C100535 * C378 - C100534 * C401 + C100532 * C414 +
             C100536 * C1243 - C100537 * C1232 - C100536 * C1244 +
             C152775 * C1250) *
                C152696 * C51247) *
               C152530 * C152575 -
           ((C100607 + C100608) * C152696 * C51247 +
            (C100606 + C100605) * C152696 * C51246 + C100613 * C51245) *
               C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152530 * C1879 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152530 * C1880 +
           ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152530 * C1881 -
           ((C102757 + C102758) * C152696 * C51247 +
            (C102759 + C102760) * C152696 * C51246 +
            (C100536 * C2269 - C100537 * C2265 - C100536 * C2270 +
             C152775 * C2277 + C100534 * C1537 - C100535 * C1526 -
             C100534 * C1538 + C100532 * C1550) *
                C152696 * C51245) *
               C152530 * C152880) *
              C152814 +
          (((C100908 + C100907) * C152696 * C51245 +
            (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
               C152530 * C1880 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152530 * C1879 -
           ((C100915 + C100916) * C152696 * C51247 +
            (C100912 + C100911) * C152696 * C51246 +
            (C100910 + C100909) * C152696 * C51245) *
               C152530 * C1881 +
           ((C102760 + C102759) * C152696 * C51245 +
            (C102758 + C102757) * C152696 * C51246 +
            (C100534 * C1531 - C100535 * C1523 - C100534 * C1532 +
             C100532 * C1547 + C100536 * C2275 - C100537 * C2268 -
             C100536 * C2276 + C152775 * C2280) *
                C152696 * C51247) *
               C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C152828 -
           ((C109374 + C109375) * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C152575) *
              C873 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            (C102760 + C102759) * C6340) *
               C152457 * C152530 * C152575 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C152828) *
              C874 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152530 * C152828 -
           ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
            C100917 * C6338) *
               C152457 * C152530 * C152575) *
              C875 +
          ((C101421 * C6338 + (C100916 + C100915) * C6339 +
            (C100534 * C1531 - C100535 * C1523 - C100534 * C1532 +
             C100532 * C1547 + C100536 * C2275 - C100537 * C2268 -
             C100536 * C2276 + C152775 * C2280) *
                C6340) *
               C152457 * C152530 * C152575 -
           ((C100915 + C100916) * C6340 + (C100914 + C100913) * C6339 +
            C100610 * C6338) *
               C152457 * C152530 * C152828) *
              C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C1879 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C1880 +
           (C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C152530 * C1881 -
           ((C110668 + C110669) * C6340 + (C110667 + C110666) * C6339 +
            C110641 * C6338) *
               C152457 * C152530 * C152880) *
              C152814 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            C111141 * C6340) *
               C152457 * C152530 * C1880 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C1879 -
           ((C111154 + C111155) * C6340 + (C102759 + C102760) * C6339 +
            C109357 * C6338) *
               C152457 * C152530 * C1881 +
           (C111141 * C6338 + (C111155 + C111154) * C6339 +
            (C100534 * C7926 - C100535 * C7922 - C100534 * C7927 +
             C100532 * C7934 + C100536 * C8939 - C100537 * C8936 -
             C100536 * C8940 + C152775 * C8942) *
                C6340) *
               C152457 * C152530 * C152880) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[371] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C152829 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C152617) *
               C152828 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C152617 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C152829) *
               C152575) *
              C365 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C152617 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C152829) *
               C152828 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C152829 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C152617) *
               C152575) *
              C366 +
          (((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
             C100614 * C51247) *
                C152829 -
            ((C101645 + C101646) * C152696 * C51247 +
             (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
                C152617) *
               C152828 +
           ((C101980 * C51245 + (C101978 + C101977) * C152696 * C51246 +
             (C100534 * C1241 - C100535 * C1231 - C100534 * C1242 +
              C100532 * C1249 + C100536 * C2890 - C100537 * C2889 -
              C100536 * C2891 + C152775 * C2892) *
                 C152696 * C51247) *
                C152617 -
            ((C101435 + C101436) * C152696 * C51247 +
             (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
                C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152829 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C152617) *
              C1879 +
          (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
             C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
             C100536 * C1720 + C152775 * C1740) *
                C152696 * C51245 +
            (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
               C152617 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152829) *
              C1880 +
          (((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152829 -
           ((C103075 + C103076) * C152696 * C51247 +
            (C103077 + C103078) * C152696 * C51246 +
            (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
             C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
             C100534 * C1728 + C100532 * C1744) *
                C152696 * C51245) *
               C152617) *
              C1881 +
          (((C100534 * C2269 - C100535 * C2265 - C100534 * C2270 +
             C100532 * C2277 + C100536 * C8185 - C100537 * C8178 -
             C100536 * C8186 + C152775 * C8196) *
                C152696 * C51245 +
            (C100534 * C2271 - C100535 * C2266 - C100534 * C2272 +
             C100532 * C2278 + C100536 * C8183 - C100537 * C8177 -
             C100536 * C8184 + C152775 * C8195) *
                C152696 * C51246 +
            (C100534 * C2273 - C100535 * C2267 - C100534 * C2274 +
             C100532 * C2279 + C100536 * C9823 - C100537 * C9822 -
             C100536 * C9824 + C152775 * C9825) *
                C152696 * C51247) *
               C152617 -
           ((C102757 + C102758) * C152696 * C51247 +
            (C102759 + C102760) * C152696 * C51246 +
            (C100536 * C2269 - C100537 * C2265 - C100536 * C2270 +
             C152775 * C2277 + C100534 * C1537 - C100535 * C1526 -
             C100534 * C1538 + C100532 * C1550) *
                C152696 * C51245) *
               C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C152829 -
            ((C110297 + C110298) * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152617) *
               C152828 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             (C100534 * C2269 - C100535 * C2265 - C100534 * C2270 +
              C100532 * C2277 + C100536 * C8185 - C100537 * C8178 -
              C100536 * C8186 + C152775 * C8196) *
                 C6340) *
                C152457 * C152617 -
            ((C109374 + C109375) * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C152829) *
               C152575) *
              C365 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             (C103078 + C103077) * C6340) *
                C152457 * C152617 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C152829) *
               C152828 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             (C102760 + C102759) * C6340) *
                C152457 * C152829 -
            ((C100536 * C8183 - C100537 * C8177 - C100536 * C8184 +
              C152775 * C8195 + C100534 * C2271 - C100535 * C2266 -
              C100534 * C2272 + C100532 * C2278) *
                 C6340 +
             (C103077 + C103078) * C6339 + (C101974 + C101973) * C6338) *
                C152457 * C152617) *
               C152575) *
              C366 +
          (((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
                C152457 * C152829 -
            ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
             C101223 * C6338) *
                C152457 * C152617) *
               C152828 +
           ((C101979 * C6338 + (C103076 + C103075) * C6339 +
             (C100534 * C2273 - C100535 * C2267 - C100534 * C2274 +
              C100532 * C2279 + C100536 * C9823 - C100537 * C9822 -
              C100536 * C9824 + C152775 * C9825) *
                 C6340) *
                C152457 * C152617 -
            ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
             C100917 * C6338) *
                C152457 * C152829) *
               C152575) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152829 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152617) *
              C1879 +
          (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
            C111655 * C6340) *
               C152457 * C152617 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152829) *
              C1880 +
          ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C152829 -
           ((C111668 + C111669) * C6340 + (C110943 + C110942) * C6339 +
            C110889 * C6338) *
               C152457 * C152617) *
              C1881 +
          ((C111655 * C6338 + (C111669 + C111668) * C6339 +
            (C100534 * C8937 - C100535 * C8935 - C100534 * C8938 +
             C100532 * C8941 + C100536 * C60551 - C100537 * C60550 -
             C100536 * C60552 + C152775 * C60553) *
                C6340) *
               C152457 * C152617 -
           ((C110668 + C110669) * C6340 + (C110667 + C110666) * C6339 +
            C110641 * C6338) *
               C152457 * C152829) *
              C152880) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[372] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152530 * C152917 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152530 * C152901 +
           ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152530 * C152870) *
              C365 +
          (((C100908 + C100907) * C152696 * C51245 +
            (C100906 + C100905) * C152696 * C51246 +
            (C100913 + C100914) * C152696 * C51247) *
               C152530 * C152901 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152530 * C152917 -
           ((C100915 + C100916) * C152696 * C51247 +
            (C100912 + C100911) * C152696 * C51246 +
            (C100910 + C100909) * C152696 * C51245) *
               C152530 * C152870) *
              C366 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152530 * C152917 -
           ((C100536 * C1241 - C100537 * C1231 - C100536 * C1242 +
             C152775 * C1249 + C100534 * C396 - C100535 * C376 -
             C100534 * C397 + C100532 * C412) *
                C152696 * C51247 +
            (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
               C152530 * C152901 +
           (C100920 * C51245 + (C100916 + C100915) * C152696 * C51246 +
            (C100534 * C398 - C100535 * C377 - C100534 * C399 + C100532 * C413 +
             C100536 * C2108 - C100537 * C2107 - C100536 * C2109 +
             C152775 * C2110) *
                C152696 * C51247) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C152696 * C51245 +
           (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
              C152530 * C152512 * C129 -
          (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
           (C100600 + C100599) * C152696 * C51245) *
              C152530 * C152512 * C130 +
          (C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
           C100614 * C51247) *
              C152530 * C152512 * C131 -
          ((C100607 + C100608) * C152696 * C51247 +
           (C100606 + C100605) * C152696 * C51246 + C100613 * C51245) *
              C152530 * C152512 * C132 +
          (C100614 * C51245 + (C100608 + C100607) * C152696 * C51246 +
           (C100534 * C156 - C100535 * C142 - C100534 * C157 + C100532 * C166 +
            C100536 * C1022 - C100537 * C1021 - C100536 * C1023 +
            C152775 * C1024) *
               C152696 * C51247) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152918 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C152903 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C152696 * C51245 +
            (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
               C152873) *
              C152512 * C365 +
          (((C101214 + C101213) * C152696 * C51245 +
            (C101212 + C101211) * C152696 * C51246 +
            (C101219 + C101220) * C152696 * C51247) *
               C152903 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152918 -
           ((C101221 + C101222) * C152696 * C51247 +
            (C101218 + C101217) * C152696 * C51246 +
            (C101216 + C101215) * C152696 * C51245) *
               C152873) *
              C152512 * C366 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152918 -
           ((C100536 * C659 - C100537 * C638 - C100536 * C660 + C152775 * C674 +
             C100534 * C657 - C100535 * C637 - C100534 * C658 +
             C100532 * C673) *
                C152696 * C51247 +
            (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
               C152903 +
           (C101226 * C51245 + (C101222 + C101221) * C152696 * C51246 +
            (C100534 * C659 - C100535 * C638 - C100534 * C660 + C100532 * C674 +
             C100536 * C3052 - C100537 * C3051 - C100536 * C3053 +
             C152775 * C3054) *
                C152696 * C51247) *
               C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152530 * C1429 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152530 * C1430 +
           ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152530 * C152870) *
              C152914 +
          (((C100908 + C100907) * C152696 * C51245 +
            (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
               C152530 * C1430 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152530 * C1429 -
           ((C100915 + C100916) * C152696 * C51247 +
            (C100912 + C100911) * C152696 * C51246 +
            (C100910 + C100909) * C152696 * C51245) *
               C152530 * C152870) *
              C152897 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152530 * C1429 -
           ((C101435 + C101436) * C152696 * C51247 +
            (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
               C152530 * C1430 +
           (C100920 * C51245 + (C100916 + C100915) * C152696 * C51246 +
            (C100534 * C398 - C100535 * C377 - C100534 * C399 + C100532 * C413 +
             C100536 * C2108 - C100537 * C2107 - C100536 * C2109 +
             C152775 * C2110) *
                C152696 * C51247) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C152696 * C51245 +
           (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
              C152530 * C1517 -
          (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
           (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
            C152775 * C1245 + C100534 * C386 - C100535 * C371 - C100534 * C387 +
            C100532 * C407) *
               C152696 * C51245) *
              C152530 * C1518 +
          ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
            C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
            C152775 * C1744) *
               C152696 * C51245 +
           (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
              C152530 * C1519 -
          ((C100536 * C2273 - C100537 * C2267 - C100536 * C2274 +
            C152775 * C2279 + C100534 * C1533 - C100535 * C1524 -
            C100534 * C1534 + C100532 * C1548) *
               C152696 * C51247 +
           (C100536 * C2271 - C100537 * C2266 - C100536 * C2272 +
            C152775 * C2278 + C100534 * C1535 - C100535 * C1525 -
            C100534 * C1536 + C100532 * C1549) *
               C152696 * C51246 +
           (C100536 * C2269 - C100537 * C2265 - C100536 * C2270 +
            C152775 * C2277 + C100534 * C1537 - C100535 * C1526 -
            C100534 * C1538 + C100532 * C1550) *
               C152696 * C51245) *
              C152530 * C1520 +
          ((C100534 * C1539 - C100535 * C1527 - C100534 * C1540 +
            C100532 * C1551 + C100536 * C8189 - C100537 * C8180 -
            C100536 * C8190 + C152775 * C8198) *
               C152696 * C51245 +
           (C100534 * C1541 - C100535 * C1528 - C100534 * C1542 +
            C100532 * C1552 + C100536 * C8187 - C100537 * C8179 -
            C100536 * C8188 + C152775 * C8197) *
               C152696 * C51246 +
           (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
            C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
            C100536 * C8729 + C152775 * C8730) *
               C152696 * C51247) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152918 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C152903 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C152696 * C51245 +
            (C101215 + C101216) * C152696 * C51246 + C101226 * C51247) *
               C152873) *
              C1429 +
          (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
             C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
             C100536 * C1720 + C152775 * C1740) *
                C152696 * C51245 +
            (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
               C152903 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152918 -
           ((C100536 * C3217 - C100537 * C3211 - C100536 * C3218 +
             C152775 * C3223 + C100534 * C1715 - C100535 * C1702 -
             C100534 * C1716 + C100532 * C1738) *
                C152696 * C51247 +
            (C100536 * C3215 - C100537 * C3210 - C100536 * C3216 +
             C152775 * C3222 + C100534 * C1717 - C100535 * C1703 -
             C100534 * C1718 + C100532 * C1739) *
                C152696 * C51246 +
            (C100536 * C3213 - C100537 * C3209 - C100536 * C3214 +
             C152775 * C3221 + C100534 * C1719 - C100535 * C1704 -
             C100534 * C1720 + C100532 * C1740) *
                C152696 * C51245) *
               C152873) *
              C1430 +
          (((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152918 -
           ((C100536 * C1733 - C100537 * C1711 - C100536 * C1734 +
             C152775 * C1747 + C100534 * C1723 - C100535 * C1706 -
             C100534 * C1724 + C100532 * C1742) *
                C152696 * C51247 +
            (C100536 * C1731 - C100537 * C1710 - C100536 * C1732 +
             C152775 * C1746 + C100534 * C1725 - C100535 * C1707 -
             C100534 * C1726 + C100532 * C1743) *
                C152696 * C51246 +
            (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
             C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
             C100534 * C1728 + C100532 * C1744) *
                C152696 * C51245) *
               C152903 +
           ((C100534 * C1729 - C100535 * C1709 - C100534 * C1730 +
             C100532 * C1745 + C100536 * C9516 - C100537 * C9509 -
             C100536 * C9517 + C152775 * C9527) *
                C152696 * C51245 +
            (C100534 * C1731 - C100535 * C1710 - C100534 * C1732 +
             C100532 * C1746 + C100536 * C9514 - C100537 * C9508 -
             C100536 * C9515 + C152775 * C9526) *
                C152696 * C51246 +
            (C100534 * C1733 - C100535 * C1711 - C100534 * C1734 +
             C100532 * C1747 + C100536 * C10024 - C100537 * C10023 -
             C100536 * C10025 + C152775 * C10026) *
                C152696 * C51247) *
               C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C6338 +
           (C100534 * C386 - C100535 * C371 - C100534 * C387 + C100532 * C407 +
            C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
            C152775 * C1245) *
               C6339 +
           (C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
            C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
            C152775 * C1744) *
               C6340) *
              C152457 * C152530 * C152512 * C129 -
          ((C100910 + C100909) * C6340 + (C100907 + C100908) * C6339 +
           (C100600 + C100599) * C6338) *
              C152457 * C152530 * C152512 * C130 +
          (C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
              C152457 * C152530 * C152512 * C131 -
          ((C100915 + C100916) * C6340 + (C100914 + C100913) * C6339 +
           C100610 * C6338) *
              C152457 * C152530 * C152512 * C132 +
          (C100611 * C6338 + (C101436 + C101435) * C6339 +
           (C100534 * C398 - C100535 * C377 - C100534 * C399 + C100532 * C413 +
            C100536 * C2108 - C100537 * C2107 - C100536 * C2109 +
            C152775 * C2110) *
               C6340) *
              C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C152917 -
           ((C109374 + C109375) * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C152901 +
           (C109376 * C6338 + (C109375 + C109374) * C6339 +
            (C100534 * C1539 - C100535 * C1527 - C100534 * C1540 +
             C100532 * C1551 + C100536 * C8189 - C100537 * C8180 -
             C100536 * C8190 + C152775 * C8198) *
                C6340) *
               C152457 * C152530 * C152870) *
              C365 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            (C102760 + C102759) * C6340) *
               C152457 * C152530 * C152901 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C152917 -
           ((C100536 * C8187 - C100537 * C8179 - C100536 * C8188 +
             C152775 * C8197 + C100534 * C1541 - C100535 * C1528 -
             C100534 * C1542 + C100532 * C1552) *
                C6340 +
            (C102759 + C102760) * C6339 + C109357 * C6338) *
               C152457 * C152530 * C152870) *
              C366 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152530 * C152917 -
           ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
            C100917 * C6338) *
               C152457 * C152530 * C152901 +
           (C100918 * C6338 + (C102758 + C102757) * C6339 +
            (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
             C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
             C100536 * C8729 + C152775 * C8730) *
                C6340) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152918 -
           ((C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
             C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
             C100534 * C1728 + C100532 * C1744) *
                C6340 +
            (C100536 * C1719 - C100537 * C1704 - C100536 * C1720 +
             C152775 * C1740 + C100534 * C1233 - C100535 * C1227 -
             C100534 * C1234 + C100532 * C1245) *
                C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152903 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C100534 * C1719 - C100535 * C1704 - C100534 * C1720 +
             C100532 * C1740 + C100536 * C3213 - C100537 * C3209 -
             C100536 * C3214 + C152775 * C3221) *
                C6339 +
            (C100534 * C1729 - C100535 * C1709 - C100534 * C1730 +
             C100532 * C1745 + C100536 * C9516 - C100537 * C9509 -
             C100536 * C9517 + C152775 * C9527) *
                C6340) *
               C152457 * C152873) *
              C152512 * C365 +
          (((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
            (C103078 + C103077) * C6340) *
               C152457 * C152903 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152918 -
           ((C100536 * C9514 - C100537 * C9508 - C100536 * C9515 +
             C152775 * C9526 + C100534 * C1731 - C100535 * C1710 -
             C100534 * C1732 + C100532 * C1746) *
                C6340 +
            (C104147 + C104148) * C6339 + (C101216 + C101215) * C6338) *
               C152457 * C152873) *
              C152512 * C366 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152918 -
           ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
            C101223 * C6338) *
               C152457 * C152903 +
           (C101224 * C6338 + (C104146 + C104145) * C6339 +
            (C100534 * C1733 - C100535 * C1711 - C100534 * C1734 +
             C100532 * C1747 + C100536 * C10024 - C100537 * C10023 -
             C100536 * C10025 + C152775 * C10026) *
                C6340) *
               C152457 * C152873) *
              C152512 * C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C1429 -
           ((C109374 + C109375) * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C1430 +
           (C109376 * C6338 + (C109375 + C109374) * C6339 +
            (C100534 * C1539 - C100535 * C1527 - C100534 * C1540 +
             C100532 * C1551 + C100536 * C8189 - C100537 * C8180 -
             C100536 * C8190 + C152775 * C8198) *
                C6340) *
               C152457 * C152530 * C152870) *
              C152914 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            (C102760 + C102759) * C6340) *
               C152457 * C152530 * C1430 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C1429 -
           ((C100536 * C8187 - C100537 * C8179 - C100536 * C8188 +
             C152775 * C8197 + C100534 * C1541 - C100535 * C1528 -
             C100534 * C1542 + C100532 * C1552) *
                C6340 +
            (C102759 + C102760) * C6339 + C109357 * C6338) *
               C152457 * C152530 * C152870) *
              C152897 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152530 * C1429 -
           ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
            C100917 * C6338) *
               C152457 * C152530 * C1430 +
           (C100918 * C6338 + (C102758 + C102757) * C6339 +
            (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
             C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
             C100536 * C8729 + C152775 * C8730) *
                C6340) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C6338 +
           (C109370 + C109371) * C6339 + C109376 * C6340) *
              C152457 * C152530 * C1517 -
          (C110641 * C6340 + (C109373 + C109372) * C6339 +
           (C109371 + C109370) * C6338) *
              C152457 * C152530 * C1518 +
          (C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
              C152457 * C152530 * C1519 -
          ((C110668 + C110669) * C6340 + (C110667 + C110666) * C6339 +
           C110641 * C6338) *
              C152457 * C152530 * C1520 +
          (C110670 * C6338 + (C110669 + C110668) * C6339 +
           (C100534 * C7930 - C100535 * C7924 - C100534 * C7931 +
            C100532 * C7936 + C100536 * C61016 - C100537 * C61015 -
            C100536 * C61017 + C152775 * C61018) *
               C6340) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152918 -
           (C110889 * C6340 + (C110299 + C110300) * C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152903 +
           ((C100534 * C649 - C100535 * C633 - C100534 * C650 + C100532 * C669 +
             C100536 * C2677 - C100537 * C2666 - C100536 * C2678 +
             C152775 * C2690) *
                C6338 +
            (C110938 + C110939) * C6339 + C110946 * C6340) *
               C152457 * C152873) *
              C1429 +
          (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
            (C110942 + C110943) * C6340) *
               C152457 * C152903 -
           (C110641 * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152918 -
           ((C110944 + C110945) * C6340 + (C110941 + C110940) * C6339 +
            (C110939 + C110938) * C6338) *
               C152457 * C152873) *
              C1430 +
          ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
               C152457 * C152918 -
           ((C100536 * C8191 - C100537 * C8181 - C100536 * C8192 +
             C152775 * C8199 + C100534 * C8189 - C100535 * C8180 -
             C100534 * C8190 + C100532 * C8198) *
                C6340 +
            (C110943 + C110942) * C6339 + C110889 * C6338) *
               C152457 * C152903 +
           (C110946 * C6338 + (C110945 + C110944) * C6339 +
            (C100534 * C8191 - C100535 * C8181 - C100534 * C8192 +
             C100532 * C8199 + C100536 * C61859 - C100537 * C61858 -
             C100536 * C61860 + C152775 * C61861) *
                C6340) *
               C152457 * C152873) *
              C152870) *
         C152484) /
            (p * q * std::sqrt(p + q));
    d2ee[373] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152829 -
           (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C152696 * C51245) *
               C152617) *
              C152512 * C873 +
          (((C101214 + C101213) * C152696 * C51245 +
            (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
               C152617 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152829) *
              C152512 * C874 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152829 -
           ((C101645 + C101646) * C152696 * C51247 +
            (C101220 + C101219) * C152696 * C51246 + C101225 * C51245) *
               C152617) *
              C152512 * C875 +
          ((C101640 * C51245 + (C101646 + C101645) * C152696 * C51246 +
            (C100534 * C661 - C100535 * C639 - C100534 * C662 + C100532 * C675 +
             C100536 * C663 - C100537 * C640 - C100536 * C664 +
             C152775 * C676) *
                C152696 * C51247) *
               C152617 -
           ((C100607 + C100608) * C152696 * C51247 +
            (C100606 + C100605) * C152696 * C51246 + C100613 * C51245) *
               C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C152696 * C51245 +
             (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
                C152829 -
            (C101225 * C51247 + (C101213 + C101214) * C152696 * C51246 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C152696 * C51245) *
                C152617) *
               C1429 +
           (((C100534 * C1233 - C100535 * C1227 - C100534 * C1234 +
              C100532 * C1245 + C100536 * C1719 - C100537 * C1704 -
              C100536 * C1720 + C152775 * C1740) *
                 C152696 * C51245 +
             (C101973 + C101974) * C152696 * C51246 + C101980 * C51247) *
                C152617 -
            (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
             (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
              C152775 * C1245 + C100534 * C386 - C100535 * C371 -
              C100534 * C387 + C100532 * C407) *
                 C152696 * C51245) *
                C152829) *
               C1430 +
           (((C100534 * C388 - C100535 * C372 - C100534 * C389 +
              C100532 * C408 + C100536 * C1727 - C100537 * C1708 -
              C100536 * C1728 + C152775 * C1744) *
                 C152696 * C51245 +
             (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
                C152829 -
            ((C103075 + C103076) * C152696 * C51247 +
             (C103077 + C103078) * C152696 * C51246 +
             (C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
              C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
              C100534 * C1728 + C100532 * C1744) *
                 C152696 * C51245) *
                C152617) *
               C152870) *
              C152814 +
          ((((C101214 + C101213) * C152696 * C51245 +
             (C101212 + C101211) * C152696 * C51246 + C101640 * C51247) *
                C152617 -
            (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
             (C100600 + C100599) * C152696 * C51245) *
                C152829) *
               C1429 +
           (((C100908 + C100907) * C152696 * C51245 +
             (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
                C152829 -
            ((C101977 + C101978) * C152696 * C51247 +
             (C101976 + C101975) * C152696 * C51246 +
             (C101974 + C101973) * C152696 * C51245) *
                C152617) *
               C1430 +
           (((C103078 + C103077) * C152696 * C51245 +
             (C103076 + C103075) * C152696 * C51246 +
             (C100534 * C1721 - C100535 * C1705 - C100534 * C1722 +
              C100532 * C1741 + C100536 * C1735 - C100537 * C1712 -
              C100536 * C1736 + C152775 * C1748) *
                 C152696 * C51247) *
                C152617 -
            ((C100915 + C100916) * C152696 * C51247 +
             (C100912 + C100911) * C152696 * C51246 +
             (C100910 + C100909) * C152696 * C51245) *
                C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152829 -
           ((C100536 * C1729 - C100537 * C1709 - C100536 * C1730 +
             C152775 * C1745 + C100534 * C1727 - C100535 * C1708 -
             C100534 * C1728 + C100532 * C1744) *
                C6340 +
            (C100536 * C1719 - C100537 * C1704 - C100536 * C1720 +
             C152775 * C1740 + C100534 * C1233 - C100535 * C1227 -
             C100534 * C1234 + C100532 * C1245) *
                C6339 +
            (C100536 * C649 - C100537 * C633 - C100536 * C650 + C152775 * C669 +
             C100534 * C647 - C100535 * C632 - C100534 * C648 +
             C100532 * C668) *
                C6338) *
               C152457 * C152617) *
              C152512 * C873 +
          (((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
            (C103078 + C103077) * C6340) *
               C152457 * C152617 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152829) *
              C152512 * C874 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152829 -
           ((C103075 + C103076) * C6340 + (C101976 + C101975) * C6339 +
            C101223 * C6338) *
               C152457 * C152617) *
              C152512 * C875 +
          ((C101631 * C6338 + (C101978 + C101977) * C6339 +
            (C100534 * C1721 - C100535 * C1705 - C100534 * C1722 +
             C100532 * C1741 + C100536 * C1735 - C100537 * C1712 -
             C100536 * C1736 + C152775 * C1748) *
                C6340) *
               C152457 * C152617 -
           ((C100915 + C100916) * C6340 + (C100914 + C100913) * C6339 +
            C100610 * C6338) *
               C152457 * C152829) *
              C152512 * C152874)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C100534 * C144 - C100535 * C136 - C100534 * C145 +
              C100532 * C160 + C100536 * C647 - C100537 * C632 -
              C100536 * C648 + C152775 * C668) *
                 C6338 +
             (C109370 + C109371) * C6339 + C109376 * C6340) *
                C152457 * C152829 -
            (C110889 * C6340 + (C110299 + C110300) * C6339 +
             (C100536 * C649 - C100537 * C633 - C100536 * C650 +
              C152775 * C669 + C100534 * C647 - C100535 * C632 -
              C100534 * C648 + C100532 * C668) *
                 C6338) *
                C152457 * C152617) *
               C1429 +
           (((C110300 + C110299) * C6338 + (C110298 + C110297) * C6339 +
             (C110942 + C110943) * C6340) *
                C152457 * C152617 -
            (C110641 * C6340 + (C109373 + C109372) * C6339 +
             (C109371 + C109370) * C6338) *
                C152457 * C152829) *
               C1430 +
           ((C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
                C152457 * C152829 -
            ((C100536 * C8191 - C100537 * C8181 - C100536 * C8192 +
              C152775 * C8199 + C100534 * C8189 - C100535 * C8180 -
              C100534 * C8190 + C100532 * C8198) *
                 C6340 +
             (C110943 + C110942) * C6339 + C110889 * C6338) *
                C152457 * C152617) *
               C152870) *
              C152814 +
          ((((C101214 + C101213) * C6338 + (C101973 + C101974) * C6339 +
             C111446 * C6340) *
                C152457 * C152617 -
            (C109357 * C6340 + (C100907 + C100908) * C6339 +
             (C100600 + C100599) * C6338) *
                C152457 * C152829) *
               C1429 +
           (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
             C111141 * C6340) *
                C152457 * C152829 -
            ((C111459 + C111460) * C6340 + (C103077 + C103078) * C6339 +
             (C101974 + C101973) * C6338) *
                C152457 * C152617) *
               C1430 +
           ((C111446 * C6338 + (C111460 + C111459) * C6339 +
             (C100534 * C8187 - C100535 * C8179 - C100534 * C8188 +
              C100532 * C8197 + C100536 * C8193 - C100537 * C8182 -
              C100536 * C8194 + C152775 * C8200) *
                 C6340) *
                C152457 * C152617 -
            ((C111154 + C111155) * C6340 + (C102759 + C102760) * C6339 +
             C109357 * C6338) *
                C152457 * C152829) *
               C152870) *
              C152495)) /
            (p * q * std::sqrt(p + q));
    d2ee[374] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C152696 * C51245 +
           (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
              C152530 * C152512 * C129 -
          (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
           (C100600 + C100599) * C152696 * C51245) *
              C152530 * C152512 * C130 +
          (C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
           C100614 * C51247) *
              C152530 * C152512 * C131 -
          ((C100607 + C100608) * C152696 * C51247 +
           (C100606 + C100605) * C152696 * C51246 + C100613 * C51245) *
              C152530 * C152512 * C132 +
          (C100614 * C51245 + (C100608 + C100607) * C152696 * C51246 +
           (C100534 * C156 - C100535 * C142 - C100534 * C157 + C100532 * C166 +
            C100536 * C1022 - C100537 * C1021 - C100536 * C1023 +
            C152775 * C1024) *
               C152696 * C51247) *
              C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152530 * C152917 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152530 * C152901 +
           ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152530 * C152870) *
              C365 +
          (((C100908 + C100907) * C152696 * C51245 +
            (C100906 + C100905) * C152696 * C51246 +
            (C100913 + C100914) * C152696 * C51247) *
               C152530 * C152901 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152530 * C152917 -
           ((C100915 + C100916) * C152696 * C51247 +
            (C100912 + C100911) * C152696 * C51246 +
            (C100910 + C100909) * C152696 * C51245) *
               C152530 * C152870) *
              C366 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152530 * C152917 -
           ((C100536 * C1241 - C100537 * C1231 - C100536 * C1242 +
             C152775 * C1249 + C100534 * C396 - C100535 * C376 -
             C100534 * C397 + C100532 * C412) *
                C152696 * C51247 +
            (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
               C152530 * C152901 +
           (C100920 * C51245 + (C100916 + C100915) * C152696 * C51246 +
            (C100534 * C398 - C100535 * C377 - C100534 * C399 + C100532 * C413 +
             C100536 * C2108 - C100537 * C2107 - C100536 * C2109 +
             C152775 * C2110) *
                C152696 * C51247) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C152696 * C51245 +
            (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
               C152530 * C1429 -
           (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
            (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
             C152775 * C1245 + C100534 * C386 - C100535 * C371 -
             C100534 * C387 + C100532 * C407) *
                C152696 * C51245) *
               C152530 * C1430 +
           ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
             C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
             C152775 * C1744) *
                C152696 * C51245 +
            (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
               C152530 * C152870) *
              C152914 +
          (((C100908 + C100907) * C152696 * C51245 +
            (C100906 + C100905) * C152696 * C51246 + C101430 * C51247) *
               C152530 * C1430 -
           (C100613 * C51247 + (C100602 + C100601) * C152696 * C51246 +
            (C100600 + C100599) * C152696 * C51245) *
               C152530 * C1429 -
           ((C100915 + C100916) * C152696 * C51247 +
            (C100912 + C100911) * C152696 * C51246 +
            (C100910 + C100909) * C152696 * C51245) *
               C152530 * C152870) *
              C152897 +
          ((C100612 * C51245 + (C100604 + C100603) * C152696 * C51246 +
            C100614 * C51247) *
               C152530 * C1429 -
           ((C101435 + C101436) * C152696 * C51247 +
            (C100914 + C100913) * C152696 * C51246 + C100919 * C51245) *
               C152530 * C1430 +
           (C100920 * C51245 + (C100916 + C100915) * C152696 * C51246 +
            (C100534 * C398 - C100535 * C377 - C100534 * C399 + C100532 * C413 +
             C100536 * C2108 - C100537 * C2107 - C100536 * C2109 +
             C152775 * C2110) *
                C152696 * C51247) *
               C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C152696 * C51245 +
           (C100599 + C100600) * C152696 * C51246 + C100612 * C51247) *
              C152530 * C1517 -
          (C100919 * C51247 + (C100907 + C100908) * C152696 * C51246 +
           (C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
            C152775 * C1245 + C100534 * C386 - C100535 * C371 - C100534 * C387 +
            C100532 * C407) *
               C152696 * C51245) *
              C152530 * C1518 +
          ((C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
            C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
            C152775 * C1744) *
               C152696 * C51245 +
           (C100909 + C100910) * C152696 * C51246 + C100920 * C51247) *
              C152530 * C1519 -
          ((C100536 * C2273 - C100537 * C2267 - C100536 * C2274 +
            C152775 * C2279 + C100534 * C1533 - C100535 * C1524 -
            C100534 * C1534 + C100532 * C1548) *
               C152696 * C51247 +
           (C100536 * C2271 - C100537 * C2266 - C100536 * C2272 +
            C152775 * C2278 + C100534 * C1535 - C100535 * C1525 -
            C100534 * C1536 + C100532 * C1549) *
               C152696 * C51246 +
           (C100536 * C2269 - C100537 * C2265 - C100536 * C2270 +
            C152775 * C2277 + C100534 * C1537 - C100535 * C1526 -
            C100534 * C1538 + C100532 * C1550) *
               C152696 * C51245) *
              C152530 * C1520 +
          ((C100534 * C1539 - C100535 * C1527 - C100534 * C1540 +
            C100532 * C1551 + C100536 * C8189 - C100537 * C8180 -
            C100536 * C8190 + C152775 * C8198) *
               C152696 * C51245 +
           (C100534 * C1541 - C100535 * C1528 - C100534 * C1542 +
            C100532 * C1552 + C100536 * C8187 - C100537 * C8179 -
            C100536 * C8188 + C152775 * C8197) *
               C152696 * C51246 +
           (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
            C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
            C100536 * C8729 + C152775 * C8730) *
               C152696 * C51247) *
              C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C6338 +
           (C100534 * C386 - C100535 * C371 - C100534 * C387 + C100532 * C407 +
            C100536 * C1233 - C100537 * C1227 - C100536 * C1234 +
            C152775 * C1245) *
               C6339 +
           (C100534 * C388 - C100535 * C372 - C100534 * C389 + C100532 * C408 +
            C100536 * C1727 - C100537 * C1708 - C100536 * C1728 +
            C152775 * C1744) *
               C6340) *
              C152457 * C152530 * C152512 * C129 -
          ((C100910 + C100909) * C6340 + (C100907 + C100908) * C6339 +
           (C100600 + C100599) * C6338) *
              C152457 * C152530 * C152512 * C130 +
          (C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
              C152457 * C152530 * C152512 * C131 -
          ((C100915 + C100916) * C6340 + (C100914 + C100913) * C6339 +
           C100610 * C6338) *
              C152457 * C152530 * C152512 * C132 +
          (C100611 * C6338 + (C101436 + C101435) * C6339 +
           (C100534 * C398 - C100535 * C377 - C100534 * C399 + C100532 * C413 +
            C100536 * C2108 - C100537 * C2107 - C100536 * C2109 +
            C152775 * C2110) *
               C6340) *
              C152457 * C152530 * C152512 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C152917 -
           ((C109374 + C109375) * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C152901 +
           (C109376 * C6338 + (C109375 + C109374) * C6339 +
            (C100534 * C1539 - C100535 * C1527 - C100534 * C1540 +
             C100532 * C1551 + C100536 * C8189 - C100537 * C8180 -
             C100536 * C8190 + C152775 * C8198) *
                C6340) *
               C152457 * C152530 * C152870) *
              C365 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            (C102760 + C102759) * C6340) *
               C152457 * C152530 * C152901 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C152917 -
           ((C100536 * C8187 - C100537 * C8179 - C100536 * C8188 +
             C152775 * C8197 + C100534 * C1541 - C100535 * C1528 -
             C100534 * C1542 + C100532 * C1552) *
                C6340 +
            (C102759 + C102760) * C6339 + C109357 * C6338) *
               C152457 * C152530 * C152870) *
              C366 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152530 * C152917 -
           ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
            C100917 * C6338) *
               C152457 * C152530 * C152901 +
           (C100918 * C6338 + (C102758 + C102757) * C6339 +
            (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
             C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
             C100536 * C8729 + C152775 * C8730) *
                C6340) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
             C100536 * C647 - C100537 * C632 - C100536 * C648 +
             C152775 * C668) *
                C6338 +
            (C109370 + C109371) * C6339 + C109376 * C6340) *
               C152457 * C152530 * C1429 -
           ((C109374 + C109375) * C6340 + (C109373 + C109372) * C6339 +
            (C109371 + C109370) * C6338) *
               C152457 * C152530 * C1430 +
           (C109376 * C6338 + (C109375 + C109374) * C6339 +
            (C100534 * C1539 - C100535 * C1527 - C100534 * C1540 +
             C100532 * C1551 + C100536 * C8189 - C100537 * C8180 -
             C100536 * C8190 + C152775 * C8198) *
                C6340) *
               C152457 * C152530 * C152870) *
              C152914 +
          (((C100908 + C100907) * C6338 + (C100909 + C100910) * C6339 +
            (C102760 + C102759) * C6340) *
               C152457 * C152530 * C1430 -
           (C109357 * C6340 + (C100907 + C100908) * C6339 +
            (C100600 + C100599) * C6338) *
               C152457 * C152530 * C1429 -
           ((C100536 * C8187 - C100537 * C8179 - C100536 * C8188 +
             C152775 * C8197 + C100534 * C1541 - C100535 * C1528 -
             C100534 * C1542 + C100532 * C1552) *
                C6340 +
            (C102759 + C102760) * C6339 + C109357 * C6338) *
               C152457 * C152530 * C152870) *
              C152897 +
          ((C100609 * C6338 + (C100906 + C100905) * C6339 + C100918 * C6340) *
               C152457 * C152530 * C1429 -
           ((C102757 + C102758) * C6340 + (C100912 + C100911) * C6339 +
            C100917 * C6338) *
               C152457 * C152530 * C1430 +
           (C100918 * C6338 + (C102758 + C102757) * C6339 +
            (C100534 * C1543 - C100535 * C1529 - C100534 * C1544 +
             C100532 * C1553 + C100536 * C8728 - C100537 * C8727 -
             C100536 * C8729 + C152775 * C8730) *
                C6340) *
               C152457 * C152530 * C152870) *
              C152864)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C100534 * C144 - C100535 * C136 - C100534 * C145 + C100532 * C160 +
            C100536 * C647 - C100537 * C632 - C100536 * C648 + C152775 * C668) *
               C6338 +
           (C109370 + C109371) * C6339 + C109376 * C6340) *
              C152457 * C152530 * C1517 -
          (C110641 * C6340 + (C109373 + C109372) * C6339 +
           (C109371 + C109370) * C6338) *
              C152457 * C152530 * C1518 +
          (C109376 * C6338 + (C109375 + C109374) * C6339 + C110670 * C6340) *
              C152457 * C152530 * C1519 -
          ((C110668 + C110669) * C6340 + (C110667 + C110666) * C6339 +
           C110641 * C6338) *
              C152457 * C152530 * C1520 +
          (C110670 * C6338 + (C110669 + C110668) * C6339 +
           (C100534 * C7930 - C100535 * C7924 - C100534 * C7931 +
            C100532 * C7936 + C100536 * C61016 - C100537 * C61015 -
            C100536 * C61017 + C152775 * C61018) *
               C6340) *
              C152457 * C152530 * C1521) *
         C152484) /
            (p * q * std::sqrt(p + q));
}
