/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pddp_AC_xx.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1221_13_11(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49938 = 0 * ae;
    const double C49937 = ae * be;
    const double C49936 = 0 * be;
    const double C49935 = ae + be;
    const double C49934 = 0 * be;
    const double C49933 = xA - xB;
    const double C49984 = 0 * ce;
    const double C49983 = ce * de;
    const double C49982 = 0 * de;
    const double C49981 = ce + de;
    const double C49980 = 0 * de;
    const double C49979 = xC - xD;
    const double C50063 = p + q;
    const double C50062 = p * q;
    const double C50068 = xP - xQ;
    const double C50067 = bs[2];
    const double C50077 = ae * ce;
    const double C50073 = bs[3];
    const double C50086 = bs[4];
    const double C50107 = bs[5];
    const double C50149 = bs[6];
    const double C50218 = bs[7];
    const double C50299 = yP - yQ;
    const double C50346 = zP - zQ;
    const double C125 = bs[0];
    const double C50907 = yC - yD;
    const double C50912 = zC - zD;
    const double C51005 = yA - yB;
    const double C51017 = zA - zB;
    const double C49943 = C49938 / C49935;
    const double C49940 = 2 * C49935;
    const double C49939 = std::pow(C49935, 2);
    const double C49942 = C49937 * C49933;
    const double C49941 = C49933 * C49936;
    const double C50858 = C49933 * be;
    const double C50857 = C49933 * ae;
    const double C50856 = std::pow(C49933, 2);
    const double C49989 = C49984 / C49981;
    const double C49986 = 2 * C49981;
    const double C49985 = std::pow(C49981, 2);
    const double C50069 = C49981 * C49935;
    const double C49988 = C49983 * C49979;
    const double C49987 = C49979 * C49982;
    const double C50876 = C49979 * de;
    const double C50875 = C49979 * ce;
    const double C50874 = std::pow(C49979, 2);
    const double C50064 = 2 * C50062;
    const double C50078 = C50068 * ae;
    const double C50076 = std::pow(C50068, 2);
    const double C50074 = C50068 * ce;
    const double C50394 = std::pow(C50299, 2);
    const double C50441 = std::pow(C50346, 2);
    const double C50921 = std::pow(C50907, 2);
    const double C50935 = C50907 * de;
    const double C50934 = C50907 * ce;
    const double C50947 = std::pow(C50912, 2);
    const double C50959 = C50912 * de;
    const double C50958 = C50912 * ce;
    const double C51006 = std::pow(C51005, 2);
    const double C51056 = C51005 * be;
    const double C51055 = C51005 * ae;
    const double C51018 = std::pow(C51017, 2);
    const double C51082 = C51017 * be;
    const double C51081 = C51017 * ae;
    const double C50866 = std::pow(C49940, -1);
    const double C51164 = std::pow(C49940, -2);
    const double C49944 = 2 * C49939;
    const double C51142 = 4 * C49939;
    const double C49945 = C49941 / C49935;
    const double C50859 = C50856 * C49937;
    const double C50884 = std::pow(C49986, -1);
    const double C51150 = std::pow(C49986, -2);
    const double C49990 = 2 * C49985;
    const double C51149 = 4 * C49985;
    const double C49991 = C49987 / C49981;
    const double C50877 = C50874 * C49983;
    const double C50066 = C50064 / C50063;
    const double C146 =
        (-((std::pow(xP - xQ, 2) * bs[2] * std::pow(C50064 / C50063, 2) -
            (bs[1] * C50064) / C50063) *
           ae * ce) /
         C49981) /
        C49935;
    const double C126 = -(C50068 * bs[1] * C50064) / C50063;
    const double C263 = -(C50299 * bs[1] * C50064) / C50063;
    const double C387 = -(C50346 * bs[1] * C50064) / C50063;
    const double C50081 = C50073 * C50078;
    const double C50092 = C50086 * C50078;
    const double C50116 = C50107 * C50078;
    const double C50164 = C50149 * C50078;
    const double C50239 = C50218 * C50078;
    const double C132 = (-(bs[1] * C50078 * C50064) / C50063) / C49935;
    const double C50088 = C50076 * C50086;
    const double C50111 = C50076 * C50107;
    const double C50158 = C50076 * C50149;
    const double C50232 = C50076 * C50218;
    const double C50080 = C50073 * C50074;
    const double C50089 = C50086 * C50074;
    const double C50112 = C50107 * C50074;
    const double C50160 = C50149 * C50074;
    const double C50235 = C50218 * C50074;
    const double C136 = (bs[1] * C50074 * C50064) / (C50063 * C49981);
    const double C50922 = C50921 * C49983;
    const double C50948 = C50947 * C49983;
    const double C51007 = C51006 * C49937;
    const double C51019 = C51018 * C49937;
    const double C49950 = C49936 / C49944;
    const double C49948 = C49934 / C49944;
    const double C49947 = 0 - C49945;
    const double C50860 = C50859 / C49935;
    const double C49996 = C49982 / C49990;
    const double C49994 = C49980 / C49990;
    const double C49993 = 0 - C49991;
    const double C50878 = C50877 / C49981;
    const double C50070 = std::pow(C50066, 2);
    const double C50072 = -C50066;
    const double C50087 = std::pow(C50066, 4);
    const double C50150 = std::pow(C50066, 6);
    const double C50923 = C50922 / C49981;
    const double C50949 = C50948 / C49981;
    const double C51008 = C51007 / C49935;
    const double C51020 = C51019 / C49935;
    const double C49952 = C49947 * ae;
    const double C50861 = -C50860;
    const double C49998 = C49993 * ce;
    const double C50879 = -C50878;
    const double C50075 = C50067 * C50070;
    const double C147 =
        (-(C50070 * C50067 * C50068 * ae * ce) / C49981) / C49935 -
        (ae * C50070 * C50067 * C50068 * ce) / C50069 -
        (C50068 *
         (C50067 * C50070 +
          std::pow(C50068, 2) * bs[3] * std::pow(-C50066, 3)) *
         ae * ce) /
            C50069;
    const double C133 = (C50068 * C50070 * C50067 * C50078) / C49935 -
                        (ae * bs[1] * C50064) / (C50063 * C49935);
    const double C137 = (ce * bs[1] * C50064) / (C50063 * C49981) -
                        (C50068 * C50070 * C50067 * C50074) / C49981;
    const double C272 = -(C50299 * C50070 * C50067 * C50074) / C49981;
    const double C273 = (C50299 * C50070 * C50067 * C50078) / C49935;
    const double C396 = -(C50346 * C50070 * C50067 * C50074) / C49981;
    const double C397 = (C50346 * C50070 * C50067 * C50078) / C49935;
    const double C50079 = std::pow(C50072, 3);
    const double C50108 = std::pow(C50072, 5);
    const double C50219 = std::pow(C50072, 7);
    const double C50096 = C50087 * C50092;
    const double C50095 = C50087 * C50089;
    const double C50094 = C50088 * C50087;
    const double C50106 = C50086 * C50087;
    const double C50172 = C50150 * C50164;
    const double C50169 = C50150 * C50160;
    const double C50168 = C50158 * C50150;
    const double C50217 = C50149 * C50150;
    const double C50924 = -C50923;
    const double C50950 = -C50949;
    const double C51009 = -C51008;
    const double C51021 = -C51020;
    const double C49955 = C49952 / C49935;
    const double C50862 = std::exp(C50861);
    const double C50001 = C49998 / C49981;
    const double C50880 = std::exp(C50879);
    const double C127 = C50075 * C50076 - (bs[1] * C50064) / C50063;
    const double C259 = C50299 * C50068 * C50075;
    const double C383 = C50346 * C50068 * C50075;
    const double C512 = C50075 * C50394 - (bs[1] * C50064) / C50063;
    const double C718 = C50346 * C50299 * C50075;
    const double C851 = C50075 * C50441 - (bs[1] * C50064) / C50063;
    const double C50083 = C50079 * C50081;
    const double C50082 = C50079 * C50080;
    const double C50085 = C50073 * C50079;
    const double C280 =
        (-(C50299 * (C50075 + C50076 * C50073 * C50079) * C50077) / C49981) /
        C49935;
    const double C404 =
        (-(C50346 * (C50075 + C50076 * C50073 * C50079) * C50077) / C49981) /
        C49935;
    const double C50123 = C50108 * C50116;
    const double C50120 = C50108 * C50112;
    const double C50119 = C50111 * C50108;
    const double C50148 = C50107 * C50108;
    const double C50248 = C50219 * C50239;
    const double C50245 = C50219 * C50235;
    const double C50244 = C50232 * C50219;
    const double C50099 = C50068 * C50096;
    const double C50104 = C50096 * ce;
    const double C50680 = C50299 * C50096;
    const double C50098 = C50068 * C50095;
    const double C50105 = ae * C50095;
    const double C50676 = C50299 * C50095;
    const double C50117 = C50106 * ae;
    const double C50115 = C50106 * C50076;
    const double C50114 = C50068 * C50106;
    const double C50113 = C50106 * ce;
    const double C50800 = C50106 * C50394;
    const double C50824 = C50299 * C50106;
    const double C50829 = C50106 * C50441;
    const double C50848 = C50346 * C50106;
    const double C50180 = C50068 * C50172;
    const double C50215 = C50172 * ce;
    const double C50322 = C50299 * C50172;
    const double C50369 = C50346 * C50172;
    const double C50403 = C50172 * C50394;
    const double C50450 = C50172 * C50441;
    const double C50177 = C50068 * C50169;
    const double C50216 = ae * C50169;
    const double C50323 = C50299 * C50169;
    const double C50370 = C50346 * C50169;
    const double C50404 = C50169 * C50394;
    const double C50451 = C50169 * C50441;
    const double C50240 = C50217 * ae;
    const double C50238 = C50217 * C50076;
    const double C50237 = C50068 * C50217;
    const double C50236 = C50217 * ce;
    const double C50925 = std::exp(C50924);
    const double C50951 = std::exp(C50950);
    const double C51010 = std::exp(C51009);
    const double C51022 = std::exp(C51021);
    const double C49957 = C49955 - C49948;
    const double C19936 = C50862 * C273;
    const double C22238 = C50862 * C397;
    const double C49946 = C49942 * C50862;
    const double C50863 = C50862 * C50857;
    const double C50867 = C50866 * C50862;
    const double C51139 = C50862 * C50858;
    const double C51136 = C50862 / C49940;
    const double C17048 = C51164 * C50862;
    const double C50003 = C50001 - C49994;
    const double C49992 = C49988 * C50880;
    const double C50881 = C50880 * C50875;
    const double C50885 = C50884 * C50880;
    const double C51145 = C50880 / C49986;
    const double C51144 = C50880 * C50876;
    const double C253 = C51150 * C50880;
    const double C134 =
        (C50070 * C50067 * C50078 + C50068 * (C50068 * C50083 + C50075 * ae) +
         C50068 * C50075 * ae) /
        C49935;
    const double C265 = (C50299 * (C50068 * C50083 + C50075 * ae)) / C49935;
    const double C389 = (C50346 * (C50068 * C50083 + C50075 * ae)) / C49935;
    const double C517 = (C50070 * C50067 * C50078 + C50083 * C50394) / C49935;
    const double C615 =
        (2 * C50299 * C50083 + C50299 * (C50083 + C50096 * C50394)) / C49935;
    const double C726 = (C50346 * C50299 * C50083) / C49935;
    const double C741 = (C50346 * (C50083 + C50096 * C50394)) / C49935;
    const double C856 = (C50070 * C50067 * C50078 + C50083 * C50441) / C49935;
    const double C980 = (C50299 * C50083 + C50299 * C50096 * C50441) / C49935;
    const double C1066 =
        (2 * C50346 * C50083 + C50346 * (C50083 + C50096 * C50441)) / C49935;
    const double C148 =
        (-(ae * (C50068 * C50082 + C50075 * ce)) / C49981) / C49935 -
        ((C50075 + C50076 * C50073 * C50079) * C50077) / C50069 -
        ((C50068 * C50083 + C50075 * ae) * ce) / C50069 +
        C50068 * ((-(C50083 * ce) / C49981) / C49935 - (ae * C50082) / C50069 -
                  (C50068 *
                   (C50073 * C50079 + C50076 * bs[4] * std::pow(C50066, 4)) *
                   C50077) /
                      C50069);
    const double C138 = -(C50068 * (C50068 * C50082 + C50075 * ce) +
                          C50070 * C50067 * C50074 + C50068 * C50075 * ce) /
                        C49981;
    const double C271 = -(C50299 * (C50068 * C50082 + C50075 * ce)) / C49981;
    const double C395 = -(C50346 * (C50068 * C50082 + C50075 * ce)) / C49981;
    const double C521 = -(C50082 * C50394 + C50070 * C50067 * C50074) / C49981;
    const double C611 = (-2 * C50299 * C50082) / C49981 -
                        (C50299 * (C50095 * C50394 + C50082)) / C49981;
    const double C730 = -(C50346 * C50299 * C50082) / C49981;
    const double C737 = -(C50346 * (C50095 * C50394 + C50082)) / C49981;
    const double C860 = -(C50082 * C50441 + C50070 * C50067 * C50074) / C49981;
    const double C976 = -(C50299 * C50095 * C50441 + C50299 * C50082) / C49981;
    const double C1062 = (-2 * C50346 * C50082) / C49981 -
                         (C50346 * (C50095 * C50441 + C50082)) / C49981;
    const double C50093 = C50085 * ae;
    const double C50091 = C50068 * C50085;
    const double C50090 = C50085 * ce;
    const double C50097 = C50085 + C50094;
    const double C50816 = C50299 * C50085;
    const double C128 =
        2 * C50068 * C50075 + C50068 * (C50075 + C50085 * C50076);
    const double C260 = C50299 * (C50075 + C50085 * C50076);
    const double C384 = C50346 * (C50075 + C50085 * C50076);
    const double C607 =
        2 * C50299 * C50075 + C50299 * (C50075 + C50085 * C50394);
    const double C725 = C50346 * (C50075 + C50085 * C50394);
    const double C972 = C50299 * C50075 + C50299 * C50085 * C50441;
    const double C1058 =
        2 * C50346 * C50075 + C50346 * (C50075 + C50085 * C50441);
    const double C2688 =
        3 * (C50075 + C50085 * C50394) +
        C50299 * (2 * C50299 * C50085 + C50299 * (C50085 + C50106 * C50394));
    const double C6008 =
        3 * (C50075 + C50085 * C50441) +
        C50346 * (2 * C50346 * C50085 + C50346 * (C50085 + C50106 * C50441));
    const double C19938 = C50862 * C280;
    const double C22240 = C50862 * C404;
    const double C50128 = C50068 * C50123;
    const double C50146 = C50123 * ce;
    const double C50305 = C50299 * C50123;
    const double C50352 = C50346 * C50123;
    const double C50649 = C50123 * C50394;
    const double C50703 = C50123 * C50441;
    const double C2691 =
        (3 * (C50083 + C50096 * C50394) +
         C50299 * (2 * C50299 * C50096 + C50299 * (C50096 + C50123 * C50394))) /
        C49935;
    const double C6011 =
        (3 * (C50083 + C50096 * C50441) +
         C50346 * (2 * C50346 * C50096 + C50346 * (C50096 + C50123 * C50441))) /
        C49935;
    const double C50127 = C50068 * C50120;
    const double C50147 = ae * C50120;
    const double C50306 = C50299 * C50120;
    const double C50353 = C50346 * C50120;
    const double C50643 = C50120 * C50394;
    const double C50697 = C50120 * C50441;
    const double C2693 =
        (-3 * (C50095 * C50394 + C50082)) / C49981 +
        C50299 * ((-2 * C50299 * C50095) / C49981 -
                  (C50299 * (C50120 * C50394 + C50095)) / C49981);
    const double C6013 =
        (-3 * (C50095 * C50441 + C50082)) / C49981 +
        C50346 * ((-2 * C50346 * C50095) / C49981 -
                  (C50346 * (C50120 * C50441 + C50095)) / C49981);
    const double C50126 = C50106 + C50119;
    const double C50165 = C50148 * ae;
    const double C50163 = C50148 * C50076;
    const double C50162 = C50068 * C50148;
    const double C50161 = C50148 * ce;
    const double C50176 = C50148 + C50168;
    const double C50835 = C50148 * C50394;
    const double C50844 = C50299 * C50148;
    const double C50849 = C50148 * C50441;
    const double C50257 = C50068 * C50248;
    const double C50254 = C50068 * C50245;
    const double C50253 = C50217 + C50244;
    const double C50109 = C50104 / C49981;
    const double C50110 = C50105 / C50069;
    const double C50122 = C50085 + C50115;
    const double C50124 = C50114 * ae;
    const double C50121 = C50114 * ce;
    const double C50152 = 2 * C50114;
    const double C50814 = C50299 * C50114;
    const double C50801 = C50085 + C50800;
    const double C50834 = 2 * C50824;
    const double C50830 = C50085 + C50829;
    const double C50850 = 2 * C50848;
    const double C50230 = C50215 / C49981;
    const double C50327 = C50322 * ce;
    const double C50486 = C50346 * C50322;
    const double C50731 = C50322 * C50441;
    const double C50374 = C50369 * ce;
    const double C50406 = C50123 + C50403;
    const double C50453 = C50123 + C50450;
    const double C50231 = C50216 / C50069;
    const double C50328 = ae * C50323;
    const double C50487 = C50346 * C50323;
    const double C50728 = C50323 * C50441;
    const double C50375 = ae * C50370;
    const double C50407 = C50404 + C50120;
    const double C50454 = C50451 + C50120;
    const double C50247 = C50148 + C50238;
    const double C50249 = C50237 * ae;
    const double C50246 = C50237 * ce;
    const double C50936 = C50925 * C50934;
    const double C50939 = C50884 * C50925;
    const double C51154 = C50925 * C50935;
    const double C51153 = C50925 / C49986;
    const double C509 = C51150 * C50925;
    const double C50960 = C50951 * C50958;
    const double C50963 = C50884 * C50951;
    const double C51159 = C50951 * C50959;
    const double C51158 = C50951 / C49986;
    const double C850 = C51150 * C50951;
    const double C51057 = C51010 * C51055;
    const double C51060 = C50866 * C51010;
    const double C51168 = C51010 * C51056;
    const double C51163 = C51010 / C49940;
    const double C2175 = C51164 * C51010;
    const double C51083 = C51022 * C51081;
    const double C51086 = C50866 * C51022;
    const double C51172 = C51022 * C51082;
    const double C51165 = C51022 / C49940;
    const double C5107 = C51164 * C51022;
    const double C49951 = C49946 / C49939;
    const double C49949 = 2 * C49946;
    const double C51140 = C50863 / C49944;
    const double C51138 = C50863 / C49935;
    const double C51137 = C50863 * C50858;
    const double C17047 = (2 * C50866 * C50863) / C49935;
    const double C51141 = C50867 * C50858;
    const double C108 = C50867 / C51142;
    const double C7938 = C50867 / C49940;
    const double C51177 = C51139 / C49935;
    const double C17046 = (C50862 * std::pow(C50857, 2)) / C49939 + C51136;
    const double C49997 = C49992 / C49985;
    const double C49995 = 2 * C49992;
    const double C51147 = C50881 / C49990;
    const double C51146 = C50881 * C50876;
    const double C51143 = C50881 / C49981;
    const double C50888 = C50885 * C50876;
    const double C112 = C50885 / C51149;
    const double C1171 = C50885 / C49986;
    const double C251 = (C50880 * std::pow(C50876, 2)) / C49985 + C51145;
    const double C51179 = C51144 / C49981;
    const double C252 = (-2 * C50884 * C51144) / C49981;
    const double C2328 = C50867 * C265;
    const double C19940 = C50862 * C265;
    const double C24975 = C50867 * C265;
    const double C5404 = C50867 * C389;
    const double C22242 = C50862 * C389;
    const double C28112 = C50867 * C389;
    const double C19948 = C50862 * C517;
    const double C19960 = C50862 * C615;
    const double C20440 = C50862 * C726;
    const double C20436 = C50862 * C741;
    const double C22250 = C50862 * C856;
    const double C20664 = C50862 * C980;
    const double C22876 = C50862 * C1066;
    const double C50102 = C50099 + C50093;
    const double C513 = C50068 * C50075 + C50091 * C50394;
    const double C606 =
        2 * C50299 * C50091 + C50299 * (C50091 + C50114 * C50394);
    const double C719 = C50346 * C50299 * C50091;
    const double C724 = C50346 * (C50091 + C50114 * C50394);
    const double C852 = C50068 * C50075 + C50091 * C50441;
    const double C971 = C50299 * C50091 + C50299 * C50114 * C50441;
    const double C1057 =
        2 * C50346 * C50091 + C50346 * (C50091 + C50114 * C50441);
    const double C50101 = C50098 + C50090;
    const double C50100 = C50097 * C50077;
    const double C3501 =
        2 * C50346 * C50816 + C50346 * (C50816 + C50299 * C50106 * C50441);
    const double C6203 =
        3 * (C50816 + C50824 * C50441) +
        C50346 * (2 * C50346 * C50824 +
                  C50346 * (C50824 + C50299 * C50148 * C50441));
    const double C50132 = C50128 + C50117;
    const double C50156 = C50146 / C49981;
    const double C50308 = C50305 * ce;
    const double C50716 = 2 * C50305;
    const double C3509 =
        (2 * C50346 * C50680 + C50346 * (C50680 + C50305 * C50441)) / C49935;
    const double C6207 =
        (3 * (C50680 + C50305 * C50441) +
         C50346 * (2 * C50346 * C50305 + C50346 * (C50305 + C50322 * C50441))) /
        C49935;
    const double C50355 = C50352 * ce;
    const double C50740 = 2 * C50352;
    const double C50650 = C50096 + C50649;
    const double C50704 = C50096 + C50703;
    const double C20220 = C50862 * C2691;
    const double C23179 = C50862 * C6011;
    const double C50131 = C50127 + C50113;
    const double C50157 = C50147 / C50069;
    const double C50309 = ae * C50306;
    const double C50710 = -2 * C50306;
    const double C3507 = (-2 * C50346 * C50676) / C49981 -
                         (C50346 * (C50306 * C50441 + C50676)) / C49981;
    const double C6205 =
        (-3 * (C50306 * C50441 + C50676)) / C49981 +
        C50346 * ((-2 * C50346 * C50306) / C49981 -
                  (C50346 * (C50323 * C50441 + C50306)) / C49981);
    const double C50356 = ae * C50353;
    const double C50734 = -2 * C50353;
    const double C50644 = C50643 + C50095;
    const double C50698 = C50697 + C50095;
    const double C50130 = C50126 * C50077;
    const double C50188 = C50180 + C50165;
    const double C50171 = C50106 + C50163;
    const double C50173 = C50162 * ae;
    const double C50170 = C50162 * ce;
    const double C50222 = 2 * C50162;
    const double C50797 = C50162 * C50394;
    const double C50822 = C50299 * C50162;
    const double C50826 = C50162 * C50441;
    const double C2689 =
        3 * (C50091 + C50114 * C50394) +
        C50299 * (2 * C50299 * C50114 + C50299 * (C50114 + C50162 * C50394));
    const double C6009 =
        3 * (C50091 + C50114 * C50441) +
        C50346 * (2 * C50346 * C50114 + C50346 * (C50114 + C50162 * C50441));
    const double C50185 = C50177 + C50161;
    const double C50184 = C50176 * C50077;
    const double C50836 = C50106 + C50835;
    const double C50845 = C50844 * C50441;
    const double C50851 = C50106 + C50849;
    const double C50265 = C50257 + C50240;
    const double C50262 = C50254 + C50236;
    const double C50261 = C50253 * C50077;
    const double C50118 = -C50109;
    const double C129 = 3 * (C50075 + C50085 * C50076) +
                        C50068 * (2 * C50091 + C50068 * C50122);
    const double C261 = C50299 * (2 * C50091 + C50068 * C50122);
    const double C385 = C50346 * (2 * C50091 + C50068 * C50122);
    const double C514 = C50075 + C50085 * C50076 + C50122 * C50394;
    const double C720 = C50346 * C50299 * C50122;
    const double C853 = C50075 + C50085 * C50076 + C50122 * C50441;
    const double C3500 =
        2 * C50346 * C50814 + C50346 * (C50814 + C50299 * C50162 * C50441);
    const double C2834 =
        4 * (2 * C50299 * C50085 + C50299 * C50801) +
        C50299 * (3 * C50801 + C50299 * (2 * C50299 * C50106 +
                                         C50299 * (C50106 + C50148 * C50394)));
    const double C3007 = C50346 * (2 * C50299 * C50085 + C50299 * C50801);
    const double C3010 =
        C50346 * (3 * C50801 + C50299 * (2 * C50299 * C50106 +
                                         C50299 * (C50106 + C50148 * C50394)));
    const double C3210 = C50075 + C50085 * C50394 + C50801 * C50441;
    const double C3369 =
        2 * C50299 * C50085 + C50299 * C50801 +
        (2 * C50299 * C50106 + C50299 * (C50106 + C50148 * C50394)) * C50441;
    const double C3499 =
        2 * C50346 * C50801 +
        C50346 * (C50801 + (C50106 + C50148 * C50394) * C50441);
    const double C6331 =
        4 * (2 * C50346 * C50085 + C50346 * C50830) +
        C50346 * (3 * C50830 + C50346 * (2 * C50346 * C50106 +
                                         C50346 * (C50106 + C50148 * C50441)));
    const double C50243 = -C50230;
    const double C50332 = C50327 / C49981;
    const double C50489 = C50486 * ce;
    const double C50732 = C50305 + C50731;
    const double C50379 = C50374 / C49981;
    const double C50409 = C50406 * ce;
    const double C50717 = C50299 * C50406;
    const double C50456 = C50453 * ce;
    const double C50741 = C50346 * C50453;
    const double C50333 = C50328 / C50069;
    const double C50490 = ae * C50487;
    const double C50729 = C50728 + C50306;
    const double C50380 = C50375 / C50069;
    const double C50410 = ae * C50407;
    const double C50711 = C50299 * C50407;
    const double C50457 = ae * C50454;
    const double C50735 = C50346 * C50454;
    const double C50258 = C50247 * ae;
    const double C50256 = C50068 * C50247;
    const double C50255 = C50247 * ce;
    const double C51156 = C50936 / C49990;
    const double C51155 = C50936 * C50935;
    const double C51151 = C50936 / C49981;
    const double C50942 = C50939 * C50935;
    const double C602 = C50939 / C51149;
    const double C1279 = C50939 / C49986;
    const double C51182 = C51154 / C49981;
    const double C508 = (-2 * C50884 * C51154) / C49981;
    const double C507 = (C50925 * std::pow(C50935, 2)) / C49985 + C51153;
    const double C51161 = C50960 / C49990;
    const double C51160 = C50960 * C50959;
    const double C51152 = C50960 / C49981;
    const double C50966 = C50963 * C50959;
    const double C1054 = C50963 / C51149;
    const double C1746 = C50963 / C49986;
    const double C51185 = C51159 / C49981;
    const double C849 = (-2 * C50884 * C51159) / C49981;
    const double C848 = (C50951 * std::pow(C50959, 2)) / C49985 + C51158;
    const double C51170 = C51057 / C49944;
    const double C51169 = C51057 * C51056;
    const double C51166 = C51057 / C49935;
    const double C2174 = (2 * C50866 * C51057) / C49935;
    const double C51171 = C51060 * C51056;
    const double C19834 = C51060 / C51142;
    const double C24822 = C51060 / C49940;
    const double C51188 = C51168 / C49935;
    const double C2173 = (C51010 * std::pow(C51055, 2)) / C49939 + C51163;
    const double C51174 = C51083 / C49944;
    const double C51173 = C51083 * C51082;
    const double C51167 = C51083 / C49935;
    const double C5106 = (2 * C50866 * C51083) / C49935;
    const double C51175 = C51086 * C51082;
    const double C39329 = C51086 / C51142;
    const double C44682 = C51086 / C49940;
    const double C51191 = C51172 / C49935;
    const double C5105 = (C51022 * std::pow(C51081, 2)) / C49939 + C51165;
    const double C49954 = C49943 - C49951;
    const double C49953 = C49933 * C49949;
    const double C2177 = (-C49949 / C49935) / C49940 - (0 * be) / C49935;
    const double C19835 = -C49949 / C49935;
    const double C24997 = C51138 * C517;
    const double C24983 = C51138 * C265;
    const double C24977 = C51138 * C280;
    const double C24973 = C51138 * C273;
    const double C25351 = C51138 * C615;
    const double C25474 = C51138 * C2691;
    const double C25650 = C51138 * C726;
    const double C25642 = C51138 * C741;
    const double C25969 = C51138 * C980;
    const double C28120 = C51138 * C389;
    const double C28114 = C51138 * C404;
    const double C28110 = C51138 * C397;
    const double C28883 = C51138 * C856;
    const double C29255 = C51138 * C1066;
    const double C45800 = C51138 * C6011;
    const double C51176 = C51137 / C49939;
    const double C17204 = C17047 * C265;
    const double C34290 = C17047 * C389;
    const double C51178 = C51141 / C49935;
    const double C2171 = -C51177;
    const double C17218 = C17046 * C265;
    const double C17208 = C17046 * C280;
    const double C17202 = C17046 * C273;
    const double C17564 = C17046 * C517;
    const double C17682 = C17046 * C615;
    const double C17858 = C17046 * C741;
    const double C17856 = C17046 * C726;
    const double C18174 = C17046 * C980;
    const double C34304 = C17046 * C389;
    const double C34294 = C17046 * C404;
    const double C34288 = C17046 * C397;
    const double C34894 = C17046 * C856;
    const double C35158 = C17046 * C1066;
    const double C50000 = C49989 - C49997;
    const double C49999 = C49979 * C49995;
    const double C258 =
        ((-C49995 / C49981) / C49986 - (0 * de) / C49981) / C49986 -
        (0 * de) / C49981;
    const double C603 = -C49995 / C49981;
    const double C1281 = (-C49995 / C49981) / C49986 - (0 * de) / C49981;
    const double C51180 = C51146 / C49985;
    const double C51148 = C50888 / C49981;
    const double C1275 = -C51179;
    const double C135 = (2 * (C50068 * C50083 + C50075 * ae) +
                         C50068 * (C50083 + C50068 * C50102 + C50091 * ae) +
                         (C50075 + C50085 * C50076) * ae) /
                        C49935;
    const double C266 =
        (C50299 * (C50083 + C50068 * C50102 + C50091 * ae)) / C49935;
    const double C390 =
        (C50346 * (C50083 + C50068 * C50102 + C50091 * ae)) / C49935;
    const double C518 =
        (C50068 * C50083 + C50075 * ae + C50102 * C50394) / C49935;
    const double C727 = (C50346 * C50299 * C50102) / C49935;
    const double C857 =
        (C50068 * C50083 + C50075 * ae + C50102 * C50441) / C49935;
    const double C139 =
        (-2 * (C50068 * C50082 + C50075 * ce)) / C49981 -
        (C50068 * (C50068 * C50101 + C50082 + C50091 * ce)) / C49981 -
        ((C50075 + C50085 * C50076) * ce) / C49981;
    const double C270 =
        -(C50299 * (C50068 * C50101 + C50082 + C50091 * ce)) / C49981;
    const double C394 =
        -(C50346 * (C50068 * C50101 + C50082 + C50091 * ce)) / C49981;
    const double C522 =
        -(C50101 * C50394 + C50068 * C50082 + C50075 * ce) / C49981;
    const double C731 = -(C50346 * C50299 * C50101) / C49981;
    const double C861 =
        -(C50101 * C50441 + C50068 * C50082 + C50075 * ce) / C49981;
    const double C149 =
        2 * ((-(C50083 * ce) / C49981) / C49935 - (ae * C50082) / C50069 -
             (C50068 * C50100) / C50069) -
        (ae * (C50068 * C50101 + C50082 + C50091 * ce)) / C50069 -
        ((C50083 + C50068 * C50102 + C50091 * ae) * ce) / C50069 +
        C50068 *
            ((-(ae * C50101) / C49981) / C49935 - C50100 / C50069 -
             (C50102 * ce) / C50069 +
             C50068 *
                 ((-(C50096 * ce) / C49981) / C49935 - (ae * C50095) / C50069 -
                  (C50068 *
                   (C50086 * C50087 + C50076 * bs[5] * std::pow(C50072, 5)) *
                   C50077) /
                      C50069));
    const double C279 = (-(C50299 * C50083 * ce) / C49981) / C49935 -
                        (ae * C50299 * C50082) / C50069 -
                        (C50068 * C50299 * C50100) / C50069;
    const double C403 = (-(C50346 * C50083 * ce) / C49981) / C49935 -
                        (ae * C50346 * C50082) / C50069 -
                        (C50068 * C50346 * C50100) / C50069;
    const double C527 = (-(C50100 * std::pow(C50299, 2)) / C49981) / C49935 -
                        ((C50075 + C50076 * C50073 * C50079) * C50077) / C50069;
    const double C742 = (-(C50346 * C50299 * C50100) / C49981) / C49935;
    const double C866 = (-(C50100 * std::pow(C50346, 2)) / C49981) / C49935 -
                        ((C50075 + C50076 * C50073 * C50079) * C50077) / C50069;
    const double C50135 = C50068 * C50132;
    const double C50153 = 2 * C50132;
    const double C50145 = C50132 * ce;
    const double C50678 = C50299 * C50132;
    const double C614 =
        (2 * C50299 * C50102 + C50299 * (C50102 + C50132 * C50394)) / C49935;
    const double C740 = (C50346 * (C50102 + C50132 * C50394)) / C49935;
    const double C979 = (C50299 * C50102 + C50299 * C50132 * C50441) / C49935;
    const double C1065 =
        (2 * C50346 * C50102 + C50346 * (C50102 + C50132 * C50441)) / C49935;
    const double C50167 = -C50156;
    const double C50311 = C50308 / C49981;
    const double C22698 = C50862 * C3509;
    const double C29107 = C51138 * C3509;
    const double C23062 = C50862 * C6207;
    const double C50358 = C50355 / C49981;
    const double C2838 =
        (4 * (2 * C50299 * C50096 + C50299 * C50650) +
         C50299 * (3 * C50650 + C50299 * (2 * C50305 + C50299 * C50406))) /
        C49935;
    const double C3011 =
        (C50346 * (2 * C50299 * C50096 + C50299 * C50650)) / C49935;
    const double C3018 =
        (C50346 * (3 * C50650 + C50299 * (2 * C50305 + C50299 * C50406))) /
        C49935;
    const double C3213 = (C50083 + C50096 * C50394 + C50650 * C50441) / C49935;
    const double C3373 = (2 * C50299 * C50096 + C50299 * C50650 +
                          (2 * C50305 + C50299 * C50406) * C50441) /
                         C49935;
    const double C3505 =
        (2 * C50346 * C50650 + C50346 * (C50650 + C50406 * C50441)) / C49935;
    const double C23052 =
        (3 * (C50650 + C50406 * C50441) +
         C50346 * (2 * C50346 * C50406 +
                   C50346 * (C50406 + (C50172 + C50248 * C50394) * C50441))) /
        C49935;
    const double C6335 =
        (4 * (2 * C50346 * C50096 + C50346 * C50704) +
         C50346 * (3 * C50704 + C50346 * (2 * C50352 + C50346 * C50453))) /
        C49935;
    const double C50134 = C50068 * C50131;
    const double C50151 = -2 * C50131;
    const double C50143 = ae * C50131;
    const double C50674 = C50299 * C50131;
    const double C610 = (-2 * C50299 * C50101) / C49981 -
                        (C50299 * (C50131 * C50394 + C50101)) / C49981;
    const double C736 = -(C50346 * (C50131 * C50394 + C50101)) / C49981;
    const double C975 = -(C50299 * C50131 * C50441 + C50299 * C50101) / C49981;
    const double C1061 = (-2 * C50346 * C50101) / C49981 -
                         (C50346 * (C50131 * C50441 + C50101)) / C49981;
    const double C50312 = C50309 / C50069;
    const double C50712 = C50710 / C49981;
    const double C50359 = C50356 / C50069;
    const double C50736 = C50734 / C49981;
    const double C2836 =
        4 * ((-2 * C50299 * C50095) / C49981 - (C50299 * C50644) / C49981) +
        C50299 *
            ((-3 * C50644) / C49981 +
             C50299 * ((-2 * C50306) / C49981 - (C50299 * C50407) / C49981));
    const double C3013 =
        C50346 * ((-2 * C50299 * C50095) / C49981 - (C50299 * C50644) / C49981);
    const double C3016 =
        C50346 *
        ((-3 * C50644) / C49981 +
         C50299 * ((-2 * C50306) / C49981 - (C50299 * C50407) / C49981));
    const double C3215 = -(C50644 * C50441 + C50095 * C50394 + C50082) / C49981;
    const double C3371 =
        (-2 * C50299 * C50095) / C49981 - (C50299 * C50644) / C49981 +
        ((-2 * C50306) / C49981 - (C50299 * C50407) / C49981) * C50441;
    const double C3503 = (-2 * C50346 * C50644) / C49981 -
                         (C50346 * (C50407 * C50441 + C50644)) / C49981;
    const double C23051 =
        (-3 * (C50407 * C50441 + C50644)) / C49981 +
        C50346 * ((-2 * C50346 * C50407) / C49981 -
                  (C50346 * ((C50245 * C50394 + C50169) * C50441 + C50407)) /
                      C49981);
    const double C6333 =
        4 * ((-2 * C50346 * C50095) / C49981 - (C50346 * C50698) / C49981) +
        C50346 *
            ((-3 * C50698) / C49981 +
             C50346 * ((-2 * C50353) / C49981 - (C50346 * C50454) / C49981));
    const double C50133 = C50068 * C50130;
    const double C50144 = C50130 / C50069;
    const double C50300 = C50299 * C50130;
    const double C50347 = C50346 * C50130;
    const double C528 =
        (-((C50083 + C50096 * C50394) * ce) / C49981) / C49935 -
        (ae * (C50095 * C50394 + C50082)) / C50069 +
        C50068 * ((-(C50130 * C50394) / C49981) / C49935 - C50100 / C50069);
    const double C619 =
        (-2 * C50299 * C50100) / C50069 +
        C50299 * ((-(C50130 * C50394) / C49981) / C49935 - C50100 / C50069);
    const double C749 =
        C50346 * ((-(C50130 * C50394) / C49981) / C49935 - C50100 / C50069);
    const double C867 =
        (-((C50083 + C50096 * C50441) * ce) / C49981) / C49935 -
        (ae * (C50095 * C50441 + C50082)) / C50069 +
        C50068 * ((-(C50130 * C50441) / C49981) / C49935 - C50100 / C50069);
    const double C1070 =
        (-2 * C50346 * C50100) / C50069 +
        C50346 * ((-(C50130 * C50441) / C49981) / C49935 - C50100 / C50069);
    const double C50192 = C50068 * C50188;
    const double C50225 = 2 * C50188;
    const double C50214 = C50188 * ce;
    const double C50321 = C50299 * C50188;
    const double C50368 = C50346 * C50188;
    const double C50646 = C50188 * C50394;
    const double C50700 = C50188 * C50441;
    const double C2692 =
        (3 * (C50102 + C50132 * C50394) +
         C50299 * (2 * C50299 * C50132 + C50299 * (C50132 + C50188 * C50394))) /
        C49935;
    const double C6012 =
        (3 * (C50102 + C50132 * C50441) +
         C50346 * (2 * C50346 * C50132 + C50346 * (C50132 + C50188 * C50441))) /
        C49935;
    const double C50181 = C50171 * ae;
    const double C50179 = C50068 * C50171;
    const double C50178 = C50171 * ce;
    const double C50223 = 3 * C50171;
    const double C50832 = C50299 * C50171;
    const double C605 =
        2 * C50299 * C50122 + C50299 * (C50122 + C50171 * C50394);
    const double C723 = C50346 * (C50122 + C50171 * C50394);
    const double C970 = C50299 * C50122 + C50299 * C50171 * C50441;
    const double C1056 =
        2 * C50346 * C50122 + C50346 * (C50122 + C50171 * C50441);
    const double C2690 =
        3 * (C50122 + C50171 * C50394) +
        C50299 * (2 * C50299 * C50171 + C50299 * (C50171 + C50247 * C50394));
    const double C3212 =
        C50122 + C50171 * C50394 + (C50171 + C50247 * C50394) * C50441;
    const double C4007 =
        C50346 * (2 * C50299 * C50171 + C50299 * (C50171 + C50247 * C50394));
    const double C6010 =
        3 * (C50122 + C50171 * C50441) +
        C50346 * (2 * C50346 * C50171 + C50346 * (C50171 + C50247 * C50441));
    const double C50798 = C50114 + C50797;
    const double C6202 =
        3 * (C50814 + C50822 * C50441) +
        C50346 * (2 * C50346 * C50822 +
                  C50346 * (C50822 + C50299 * C50237 * C50441));
    const double C50827 = C50114 + C50826;
    const double C50191 = C50068 * C50185;
    const double C50221 = -2 * C50185;
    const double C50212 = ae * C50185;
    const double C50319 = C50299 * C50185;
    const double C50366 = C50346 * C50185;
    const double C50640 = C50185 * C50394;
    const double C50694 = C50185 * C50441;
    const double C2694 =
        (-3 * (C50131 * C50394 + C50101)) / C49981 +
        C50299 * ((-2 * C50299 * C50131) / C49981 -
                  (C50299 * (C50185 * C50394 + C50131)) / C49981);
    const double C6014 =
        (-3 * (C50131 * C50441 + C50101)) / C49981 +
        C50346 * ((-2 * C50346 * C50131) / C49981 -
                  (C50346 * (C50185 * C50441 + C50131)) / C49981);
    const double C50190 = C50068 * C50184;
    const double C50213 = C50184 / C50069;
    const double C50307 = C50299 * C50184;
    const double C50354 = C50346 * C50184;
    const double C50397 = C50184 * C50394;
    const double C50444 = C50184 * C50441;
    const double C50837 = C50299 * C50836;
    const double C23050 =
        3 * (C50801 + C50836 * C50441) +
        C50346 * (2 * C50346 * C50836 +
                  C50346 * (C50836 + (C50148 + C50217 * C50394) * C50441));
    const double C50846 = C50824 + C50845;
    const double C50852 = C50346 * C50851;
    const double C50271 = C50068 * C50265;
    const double C50268 = C50068 * C50262;
    const double C50267 = C50068 * C50261;
    const double C50324 = C50299 * C50261;
    const double C50371 = C50346 * C50261;
    const double C50405 = C50261 * C50394;
    const double C50452 = C50261 * C50441;
    const double C50125 = C50118 / C49935;
    const double C50252 = C50243 / C49935;
    const double C50336 = -C50332;
    const double C50492 = C50489 / C49981;
    const double C23173 =
        (4 * (2 * C50346 * C50305 + C50346 * C50732) +
         C50346 * (3 * C50732 +
                   C50346 * (2 * C50486 +
                             C50346 * (C50322 + C50299 * C50248 * C50441)))) /
        C49935;
    const double C50383 = -C50379;
    const double C50412 = C50409 / C49981;
    const double C50718 = C50716 + C50717;
    const double C50459 = C50456 / C49981;
    const double C50742 = C50740 + C50741;
    const double C50493 = C50490 / C50069;
    const double C23172 =
        4 * ((-2 * C50346 * C50306) / C49981 - (C50346 * C50729) / C49981) +
        C50346 * ((-3 * C50729) / C49981 +
                  C50346 * ((-2 * C50487) / C49981 -
                            (C50346 * (C50299 * C50245 * C50441 + C50323)) /
                                C49981));
    const double C50413 = C50410 / C50069;
    const double C50713 = C50711 / C49981;
    const double C50460 = C50457 / C50069;
    const double C50737 = C50735 / C49981;
    const double C50264 = C50222 + C50256;
    const double C50263 = C50255 / C49981;
    const double C51183 = C51155 / C49985;
    const double C51157 = C50942 / C49981;
    const double C1172 = -C51182;
    const double C51186 = C51160 / C49985;
    const double C51162 = C50966 / C49981;
    const double C1514 = -C51185;
    const double C51189 = C51169 / C49939;
    const double C51190 = C51171 / C49935;
    const double C17049 = -C51188;
    const double C51192 = C51173 / C49939;
    const double C51193 = C51175 / C49935;
    const double C33992 = -C51191;
    const double C25004 = C49954 * C514;
    const double C24998 = C49954 * C513;
    const double C24990 = C49954 * C261;
    const double C24980 = C49954 * C260;
    const double C24978 = C49954 * C271;
    const double C24974 = C49954 * C259;
    const double C25348 = C49954 * C606;
    const double C25475 = C49954 * C2689;
    const double C25647 = C49954 * C719;
    const double C25639 = C49954 * C724;
    const double C25970 = C49954 * C971;
    const double C26585 = C49954 * C720;
    const double C28127 = C49954 * C385;
    const double C28117 = C49954 * C384;
    const double C28115 = C49954 * C395;
    const double C28111 = C49954 * C383;
    const double C28880 = C49954 * C852;
    const double C28874 = C49954 * C853;
    const double C29108 = C49954 * C3500;
    const double C29256 = C49954 * C1057;
    const double C45801 = C49954 * C6009;
    const double C120 =
        (C49954 / C49940 - (0 * be) / C49935) / C49940 + (0 * ae) / C49935;
    const double C7943 = C49954 / C49940 - (0 * be) / C49935;
    const double C17053 = C49954 / C49940 + (0 * ae) / C49935;
    const double C49956 = C49953 / C49935;
    const double C2357 = C2177 * C514;
    const double C2351 = C2177 * C513;
    const double C2343 = C2177 * C261;
    const double C2333 = C2177 * C260;
    const double C2331 = C2177 * C271;
    const double C2327 = C2177 * C259;
    const double C2713 = C2177 * C606;
    const double C2848 = C2177 * C2689;
    const double C3036 = C2177 * C719;
    const double C3028 = C2177 * C724;
    const double C3379 = C2177 * C971;
    const double C4014 = C2177 * C720;
    const double C5433 = C2177 * C853;
    const double C5427 = C2177 * C852;
    const double C5419 = C2177 * C385;
    const double C5409 = C2177 * C384;
    const double C5407 = C2177 * C395;
    const double C5403 = C2177 * C383;
    const double C6033 = C2177 * C1057;
    const double C6215 = C2177 * C3500;
    const double C6343 = C2177 * C6009;
    const double C19963 = C19835 * C606;
    const double C19961 = C19835 * C611;
    const double C19959 = C19835 * C607;
    const double C19955 = C19835 * C514;
    const double C19951 = C19835 * C513;
    const double C19949 = C19835 * C521;
    const double C19947 = C19835 * C512;
    const double C19943 = C19835 * C260;
    const double C19941 = C19835 * C271;
    const double C19939 = C19835 * C259;
    const double C19937 = C19835 * C272;
    const double C19935 = C19835 * C263;
    const double C20219 = C19835 * C2688;
    const double C20217 = C19835 * C2693;
    const double C20215 = C19835 * C2689;
    const double C20315 = C19835 * C2834;
    const double C20441 = C19835 * C3010;
    const double C20439 = C19835 * C718;
    const double C20437 = C19835 * C730;
    const double C20435 = C19835 * C725;
    const double C20433 = C19835 * C737;
    const double C20431 = C19835 * C3007;
    const double C20671 = C19835 * C3369;
    const double C20667 = C19835 * C3210;
    const double C20665 = C19835 * C976;
    const double C20663 = C19835 * C972;
    const double C21129 = C19835 * C724;
    const double C21123 = C19835 * C719;
    const double C22071 = C19835 * C971;
    const double C22065 = C19835 * C720;
    const double C22257 = C19835 * C853;
    const double C22253 = C19835 * C852;
    const double C22251 = C19835 * C860;
    const double C22249 = C19835 * C851;
    const double C22245 = C19835 * C384;
    const double C22243 = C19835 * C395;
    const double C22241 = C19835 * C383;
    const double C22239 = C19835 * C396;
    const double C22237 = C19835 * C387;
    const double C22703 = C19835 * C3499;
    const double C22697 = C19835 * C3501;
    const double C22695 = C19835 * C3507;
    const double C22879 = C19835 * C3500;
    const double C22875 = C19835 * C1058;
    const double C22873 = C19835 * C1062;
    const double C22871 = C19835 * C1057;
    const double C23063 = C19835 * C6205;
    const double C23061 = C19835 * C6203;
    const double C23180 = C19835 * C6013;
    const double C23178 = C19835 * C6008;
    const double C39901 = C19835 * C6009;
    const double C40089 = C19835 * C6331;
    const double C51194 = C51136 - C51176;
    const double C51195 = C51140 - C51178;
    const double C2350 = C2171 * C517;
    const double C2336 = C2171 * C265;
    const double C2330 = C2171 * C280;
    const double C2326 = C2171 * C273;
    const double C2716 = C2171 * C615;
    const double C2847 = C2171 * C2691;
    const double C3039 = C2171 * C726;
    const double C3031 = C2171 * C741;
    const double C3378 = C2171 * C980;
    const double C5426 = C2171 * C856;
    const double C5412 = C2171 * C389;
    const double C5406 = C2171 * C404;
    const double C5402 = C2171 * C397;
    const double C6036 = C2171 * C1066;
    const double C6214 = C2171 * C3509;
    const double C6342 = C2171 * C6011;
    const double C124 =
        (C50000 / C49986 - (0 * de) / C49981) / C49986 - (0 * de) / C49981;
    const double C1176 = C50000 / C49986 - (0 * de) / C49981;
    const double C50002 = C49999 / C49981;
    const double C51196 = C51145 - C51180;
    const double C51181 = C51147 - C51148;
    const double C2342 = C2171 * C266;
    const double C2334 = C50867 * C266;
    const double C8096 = C7938 * C266;
    const double C17226 = C17046 * C266;
    const double C17216 = C17047 * C266;
    const double C17206 = C17048 * C266;
    const double C19944 = C50862 * C266;
    const double C24989 = C51138 * C266;
    const double C24981 = C50867 * C266;
    const double C5418 = C2171 * C390;
    const double C5410 = C50867 * C390;
    const double C11052 = C7938 * C390;
    const double C22246 = C50862 * C390;
    const double C28126 = C51138 * C390;
    const double C28118 = C50867 * C390;
    const double C34312 = C17046 * C390;
    const double C34302 = C17047 * C390;
    const double C34292 = C17048 * C390;
    const double C2360 = C2171 * C518;
    const double C2352 = C50867 * C518;
    const double C17562 = C17047 * C518;
    const double C17548 = C17046 * C518;
    const double C19952 = C50862 * C518;
    const double C25007 = C51138 * C518;
    const double C24999 = C50867 * C518;
    const double C3037 = C50867 * C727;
    const double C4013 = C2171 * C727;
    const double C17854 = C17047 * C727;
    const double C18776 = C17046 * C727;
    const double C21124 = C50862 * C727;
    const double C25648 = C50867 * C727;
    const double C26584 = C51138 * C727;
    const double C5436 = C2171 * C857;
    const double C5428 = C50867 * C857;
    const double C22254 = C50862 * C857;
    const double C28881 = C50867 * C857;
    const double C28873 = C51138 * C857;
    const double C34892 = C17047 * C857;
    const double C34878 = C17046 * C857;
    const double C2337 = C2177 * C270;
    const double C19945 = C19835 * C270;
    const double C24984 = C49954 * C270;
    const double C5413 = C2177 * C394;
    const double C22247 = C19835 * C394;
    const double C28121 = C49954 * C394;
    const double C2355 = C2177 * C522;
    const double C19953 = C19835 * C522;
    const double C25002 = C49954 * C522;
    const double C3032 = C2177 * C731;
    const double C21127 = C19835 * C731;
    const double C25643 = C49954 * C731;
    const double C5431 = C2177 * C861;
    const double C22255 = C19835 * C861;
    const double C28876 = C49954 * C861;
    const double C2340 = C2171 * C279;
    const double C2332 = C50867 * C279;
    const double C17224 = C17046 * C279;
    const double C17210 = C17047 * C279;
    const double C19942 = C50862 * C279;
    const double C24987 = C51138 * C279;
    const double C24979 = C50867 * C279;
    const double C5416 = C2171 * C403;
    const double C5408 = C50867 * C403;
    const double C22244 = C50862 * C403;
    const double C28124 = C51138 * C403;
    const double C28116 = C50867 * C403;
    const double C34310 = C17046 * C403;
    const double C34296 = C17047 * C403;
    const double C2354 = C2171 * C527;
    const double C17558 = C17046 * C527;
    const double C19950 = C50862 * C527;
    const double C25001 = C51138 * C527;
    const double C3035 = C2171 * C742;
    const double C17850 = C17046 * C742;
    const double C20438 = C50862 * C742;
    const double C25646 = C51138 * C742;
    const double C5430 = C2171 * C866;
    const double C22252 = C50862 * C866;
    const double C28879 = C51138 * C866;
    const double C34888 = C17046 * C866;
    const double C50138 = C50096 + C50135;
    const double C50155 = C50145 / C50069;
    const double C2714 = C50867 * C614;
    const double C2706 = C2171 * C614;
    const double C17684 = C17047 * C614;
    const double C19964 = C50862 * C614;
    const double C25349 = C50867 * C614;
    const double C25341 = C51138 * C614;
    const double C3029 = C50867 * C740;
    const double C4021 = C2171 * C740;
    const double C17860 = C17047 * C740;
    const double C21130 = C50862 * C740;
    const double C25640 = C50867 * C740;
    const double C26592 = C51138 * C740;
    const double C3380 = C50867 * C979;
    const double C6848 = C2171 * C979;
    const double C18176 = C17047 * C979;
    const double C22072 = C50862 * C979;
    const double C25971 = C50867 * C979;
    const double C28889 = C51138 * C979;
    const double C6034 = C50867 * C1065;
    const double C6026 = C2171 * C1065;
    const double C22872 = C50862 * C1065;
    const double C29257 = C50867 * C1065;
    const double C35160 = C17047 * C1065;
    const double C45529 = C51138 * C1065;
    const double C50175 = C50167 / C49935;
    const double C50314 = -C50311;
    const double C50361 = -C50358;
    const double C20316 = C50862 * C2838;
    const double C3041 = C2171 * C3011;
    const double C20432 = C50862 * C3011;
    const double C25652 = C51138 * C3011;
    const double C20442 = C50862 * C3018;
    const double C3386 = C2171 * C3213;
    const double C20668 = C50862 * C3213;
    const double C25977 = C51138 * C3213;
    const double C20672 = C50862 * C3373;
    const double C22704 = C50862 * C3505;
    const double C40090 = C50862 * C6335;
    const double C50137 = C50134 + C50095;
    const double C50159 = C50151 / C49981;
    const double C50154 = C50143 / C49981;
    const double C2709 = C2177 * C610;
    const double C19965 = C19835 * C610;
    const double C25344 = C49954 * C610;
    const double C3024 = C2177 * C736;
    const double C21133 = C19835 * C736;
    const double C25635 = C49954 * C736;
    const double C3383 = C2177 * C975;
    const double C22073 = C19835 * C975;
    const double C25974 = C49954 * C975;
    const double C6029 = C2177 * C1061;
    const double C22877 = C19835 * C1061;
    const double C29260 = C49954 * C1061;
    const double C20317 = C19835 * C2836;
    const double C20429 = C19835 * C3013;
    const double C20443 = C19835 * C3016;
    const double C20669 = C19835 * C3215;
    const double C20673 = C19835 * C3371;
    const double C22705 = C19835 * C3503;
    const double C40091 = C19835 * C6333;
    const double C50136 = C50133 / C50069;
    const double C529 =
        (-(C50130 * C50394) / C49981) / C49935 - C50100 / C50069 -
        (ae * (C50131 * C50394 + C50101)) / C50069 -
        ((C50102 + C50132 * C50394) * ce) / C50069 +
        C50068 * ((-((C50096 + C50123 * C50394) * ce) / C49981) / C49935 -
                  (ae * (C50120 * C50394 + C50095)) / C50069 +
                  C50068 * ((-(C50184 * C50394) / C49981) / C49935 - C50144));
    const double C868 =
        (-(C50130 * C50441) / C49981) / C49935 - C50100 / C50069 -
        (ae * (C50131 * C50441 + C50101)) / C50069 -
        ((C50102 + C50132 * C50441) * ce) / C50069 +
        C50068 * ((-((C50096 + C50123 * C50441) * ce) / C49981) / C49935 -
                  (ae * (C50120 * C50441 + C50095)) / C50069 +
                  C50068 * ((-(C50184 * C50441) / C49981) / C49935 - C50144));
    const double C278 =
        (-(ae * C50299 * C50101) / C49981) / C49935 -
        (C50299 * C50100) / C50069 - (C50299 * C50102 * ce) / C50069 +
        C50068 * ((-(C50299 * C50096 * ce) / C49981) / C49935 -
                  (ae * C50299 * C50095) / C50069 - (C50068 * C50300) / C50069);
    const double C743 = (-(C50346 * C50299 * C50096 * ce) / C49981) / C49935 -
                        (ae * C50346 * C50299 * C50095) / C50069 -
                        (C50068 * C50346 * C50300) / C50069;
    const double C984 =
        (-(C50300 * C50441) / C49981) / C49935 - (C50299 * C50100) / C50069;
    const double C402 =
        (-(ae * C50346 * C50101) / C49981) / C49935 -
        (C50346 * C50100) / C50069 - (C50346 * C50102 * ce) / C50069 +
        C50068 * ((-(C50346 * C50096 * ce) / C49981) / C49935 -
                  (ae * C50346 * C50095) / C50069 - (C50068 * C50347) / C50069);
    const double C2364 = C2171 * C528;
    const double C2356 = C50867 * C528;
    const double C17566 = C17046 * C528;
    const double C17556 = C17047 * C528;
    const double C19954 = C50862 * C528;
    const double C25011 = C51138 * C528;
    const double C25003 = C50867 * C528;
    const double C2712 = C2171 * C619;
    const double C17688 = C17046 * C619;
    const double C19962 = C50862 * C619;
    const double C25347 = C51138 * C619;
    const double C3027 = C2171 * C749;
    const double C17864 = C17046 * C749;
    const double C20434 = C50862 * C749;
    const double C25638 = C51138 * C749;
    const double C5440 = C2171 * C867;
    const double C5432 = C50867 * C867;
    const double C22256 = C50862 * C867;
    const double C28885 = C51138 * C867;
    const double C28877 = C50867 * C867;
    const double C34896 = C17046 * C867;
    const double C34886 = C17047 * C867;
    const double C6032 = C2171 * C1070;
    const double C22874 = C50862 * C1070;
    const double C29259 = C51138 * C1070;
    const double C35164 = C17046 * C1070;
    const double C50195 = C50123 + C50192;
    const double C50229 = C50214 / C50069;
    const double C50326 = C50321 * ce;
    const double C3508 =
        (2 * C50346 * C50678 + C50346 * (C50678 + C50321 * C50441)) / C49935;
    const double C6206 =
        (3 * (C50678 + C50321 * C50441) +
         C50346 * (2 * C50346 * C50321 +
                   C50346 * (C50321 + C50299 * C50265 * C50441))) /
        C49935;
    const double C50373 = C50368 * ce;
    const double C50647 = C50132 + C50646;
    const double C50701 = C50132 + C50700;
    const double C2849 = C50867 * C2692;
    const double C20216 = C50862 * C2692;
    const double C25476 = C50867 * C2692;
    const double C6344 = C50867 * C6012;
    const double C39902 = C50862 * C6012;
    const double C45802 = C50867 * C6012;
    const double C50187 = C50152 + C50179;
    const double C50186 = C50178 / C49981;
    const double C6842 =
        2 * C50346 * C50832 + C50346 * (C50832 + C50299 * C50247 * C50441);
    const double C2707 = C2177 * C605;
    const double C19967 = C19835 * C605;
    const double C25342 = C49954 * C605;
    const double C4022 = C2177 * C723;
    const double C26593 = C49954 * C723;
    const double C31484 = C19835 * C723;
    const double C6849 = C2177 * C970;
    const double C22075 = C19835 * C970;
    const double C28890 = C49954 * C970;
    const double C6027 = C2177 * C1056;
    const double C39531 = C19835 * C1056;
    const double C45530 = C49954 * C1056;
    const double C2833 =
        4 * (2 * C50299 * C50114 + C50299 * C50798) +
        C50299 * (3 * C50798 + C50299 * (2 * C50299 * C50162 +
                                         C50299 * (C50162 + C50237 * C50394)));
    const double C3008 = C50346 * (2 * C50299 * C50114 + C50299 * C50798);
    const double C3009 =
        C50346 * (3 * C50798 + C50299 * (2 * C50299 * C50162 +
                                         C50299 * (C50162 + C50237 * C50394)));
    const double C3211 = C50091 + C50114 * C50394 + C50798 * C50441;
    const double C3368 =
        2 * C50299 * C50114 + C50299 * C50798 +
        (2 * C50299 * C50162 + C50299 * (C50162 + C50237 * C50394)) * C50441;
    const double C3498 =
        2 * C50346 * C50798 +
        C50346 * (C50798 + (C50162 + C50237 * C50394) * C50441);
    const double C6330 =
        4 * (2 * C50346 * C50114 + C50346 * C50827) +
        C50346 * (3 * C50827 + C50346 * (2 * C50346 * C50162 +
                                         C50346 * (C50162 + C50237 * C50441)));
    const double C50194 = C50191 + C50120;
    const double C50234 = C50221 / C49981;
    const double C50228 = C50212 / C49981;
    const double C50325 = ae * C50319;
    const double C3506 = (-2 * C50346 * C50674) / C49981 -
                         (C50346 * (C50319 * C50441 + C50674)) / C49981;
    const double C6204 =
        (-3 * (C50319 * C50441 + C50674)) / C49981 +
        C50346 * ((-2 * C50346 * C50319) / C49981 -
                  (C50346 * (C50299 * C50262 * C50441 + C50319)) / C49981);
    const double C50372 = ae * C50366;
    const double C50641 = C50640 + C50131;
    const double C50695 = C50694 + C50131;
    const double C2852 = C2177 * C2694;
    const double C20221 = C19835 * C2694;
    const double C25479 = C49954 * C2694;
    const double C6347 = C2177 * C6014;
    const double C39905 = C19835 * C6014;
    const double C45805 = C49954 * C6014;
    const double C50193 = C50190 / C50069;
    const double C50310 = C50068 * C50307;
    const double C50320 = C50307 / C50069;
    const double C50422 = -2 * C50307;
    const double C50433 = C50346 * C50307;
    const double C744 = (-(ae * C50346 * C50299 * C50131) / C49981) / C49935 -
                        (C50346 * C50300) / C50069 -
                        (C50346 * C50299 * C50132 * ce) / C50069 +
                        C50068 * ((-(C50346 * C50305 * ce) / C49981) / C49935 -
                                  (ae * C50346 * C50306) / C50069 -
                                  (C50068 * C50346 * C50307) / C50069);
    const double C983 =
        (-((C50299 * C50096 + C50305 * C50441) * ce) / C49981) / C49935 -
        (ae * (C50306 * C50441 + C50299 * C50095)) / C50069 +
        C50068 * ((-(C50307 * C50441) / C49981) / C49935 - C50300 / C50069);
    const double C3513 =
        (-2 * C50346 * C50300) / C50069 +
        C50346 * ((-(C50307 * C50441) / C49981) / C49935 - C50300 / C50069);
    const double C50357 = C50068 * C50354;
    const double C50367 = C50354 / C50069;
    const double C50478 = -2 * C50354;
    const double C50398 = C50397 / C49981;
    const double C50445 = C50444 / C49981;
    const double C50838 = C50834 + C50837;
    const double C23171 =
        4 * (2 * C50346 * C50824 + C50346 * C50846) +
        C50346 * (3 * C50846 +
                  C50346 * (2 * C50346 * C50844 +
                            C50346 * (C50844 + C50299 * C50217 * C50441)));
    const double C50853 = C50850 + C50852;
    const double C50277 = C50172 + C50271;
    const double C50274 = C50268 + C50169;
    const double C50273 = C50267 / C50069;
    const double C50329 = C50068 * C50324;
    const double C50469 = C50324 * C50441;
    const double C50488 = C50346 * C50324;
    const double C50376 = C50068 * C50371;
    const double C50408 = C50405 / C49981;
    const double C50455 = C50452 / C49981;
    const double C50129 = C50125 - C50110;
    const double C50260 = C50252 - C50231;
    const double C50338 = C50336 / C49935;
    const double C50495 = -C50492;
    const double C50385 = C50383 / C49935;
    const double C50415 = -C50412;
    const double C20304 =
        (5 * (3 * C50650 + C50299 * C50718) +
         C50299 * (4 * C50718 +
                   C50299 * (3 * C50406 +
                             C50299 * (2 * C50322 +
                                       C50299 * (C50172 + C50248 * C50394))))) /
        C49935;
    const double C20426 =
        (C50346 * (4 * C50718 +
                   C50299 * (3 * C50406 +
                             C50299 * (2 * C50322 +
                                       C50299 * (C50172 + C50248 * C50394))))) /
        C49935;
    const double C20660 =
        (3 * C50650 + C50299 * C50718 +
         (3 * C50406 +
          C50299 * (2 * C50322 + C50299 * (C50172 + C50248 * C50394))) *
             C50441) /
        C49935;
    const double C20754 =
        (2 * C50346 * C50718 +
         C50346 * (C50718 + (2 * C50322 + C50299 * (C50172 + C50248 * C50394)) *
                                C50441)) /
        C49935;
    const double C50462 = -C50459;
    const double C40084 =
        (5 * (3 * C50704 + C50346 * C50742) +
         C50346 * (4 * C50742 +
                   C50346 * (3 * C50453 +
                             C50346 * (2 * C50369 +
                                       C50346 * (C50172 + C50248 * C50441))))) /
        C49935;
    const double C50714 = C50712 - C50713;
    const double C50738 = C50736 - C50737;
    const double C50272 = C50264 * ae;
    const double C50270 = C50068 * C50264;
    const double C50269 = C50264 * ce;
    const double C51197 = C51153 - C51183;
    const double C51184 = C51156 - C51157;
    const double C51198 = C51158 - C51186;
    const double C51187 = C51161 - C51162;
    const double C51199 = C51163 - C51189;
    const double C51200 = C51170 - C51190;
    const double C51201 = C51165 - C51192;
    const double C51202 = C51174 - C51193;
    const double C25021 = C24974 + C24975;
    const double C28134 = C28111 + C28112;
    const double C8103 = C7943 * C261;
    const double C8101 = C7943 * C270;
    const double C8095 = C7943 * C260;
    const double C8449 = C7943 * C514;
    const double C8575 = C7943 * C605;
    const double C8751 = C7943 * C723;
    const double C8741 = C7943 * C720;
    const double C9067 = C7943 * C970;
    const double C11059 = C7943 * C385;
    const double C11057 = C7943 * C394;
    const double C11051 = C7943 * C384;
    const double C11649 = C7943 * C853;
    const double C11921 = C7943 * C1056;
    const double C17213 = C17053 * C261;
    const double C17211 = C17053 * C270;
    const double C17205 = C17053 * C260;
    const double C17559 = C17053 * C514;
    const double C17685 = C17053 * C605;
    const double C17861 = C17053 * C723;
    const double C17851 = C17053 * C720;
    const double C18177 = C17053 * C970;
    const double C34299 = C17053 * C385;
    const double C34297 = C17053 * C394;
    const double C34291 = C17053 * C384;
    const double C34889 = C17053 * C853;
    const double C35161 = C17053 * C1056;
    const double C49958 = C50862 - C49956;
    const double C2374 = C2327 + C2328;
    const double C5450 = C5403 + C5404;
    const double C19983 = C19959 + C19960;
    const double C19977 = C19947 + C19948;
    const double C19973 = C19939 + C19940;
    const double C19972 = C19937 + C19938;
    const double C19971 = C19935 + C19936;
    const double C20227 = C20219 + C20220;
    const double C20450 = C20439 + C20440;
    const double C20448 = C20435 + C20436;
    const double C20675 = C20663 + C20664;
    const double C22267 = C22249 + C22250;
    const double C22263 = C22241 + C22242;
    const double C22262 = C22239 + C22240;
    const double C22261 = C22237 + C22238;
    const double C22709 = C22697 + C22698;
    const double C22889 = C22875 + C22876;
    const double C23068 = C23061 + C23062;
    const double C23183 = C23178 + C23179;
    const double C8116 = C51194 * C266;
    const double C8114 = C51194 * C279;
    const double C8108 = C51194 * C265;
    const double C8098 = C51194 * C280;
    const double C8092 = C51194 * C273;
    const double C8456 = C51194 * C528;
    const double C8454 = C51194 * C517;
    const double C8448 = C51194 * C527;
    const double C8438 = C51194 * C518;
    const double C8578 = C51194 * C619;
    const double C8572 = C51194 * C615;
    const double C8754 = C51194 * C749;
    const double C8748 = C51194 * C741;
    const double C8746 = C51194 * C726;
    const double C8740 = C51194 * C742;
    const double C9064 = C51194 * C980;
    const double C9666 = C51194 * C727;
    const double C11072 = C51194 * C390;
    const double C11070 = C51194 * C403;
    const double C11064 = C51194 * C389;
    const double C11054 = C51194 * C404;
    const double C11048 = C51194 * C397;
    const double C11656 = C51194 * C867;
    const double C11654 = C51194 * C856;
    const double C11648 = C51194 * C866;
    const double C11638 = C51194 * C857;
    const double C11924 = C51194 * C1070;
    const double C11918 = C51194 * C1066;
    const double C105 = (C51194 * C50857) / C49935 + (C51138 - C51177) / C49940;
    const double C8106 = C51195 * C266;
    const double C8100 = C51195 * C279;
    const double C8094 = C51195 * C265;
    const double C8452 = C51195 * C518;
    const double C8446 = C51195 * C528;
    const double C8574 = C51195 * C614;
    const double C8750 = C51195 * C740;
    const double C8744 = C51195 * C727;
    const double C9066 = C51195 * C979;
    const double C11062 = C51195 * C390;
    const double C11056 = C51195 * C403;
    const double C11050 = C51195 * C389;
    const double C11652 = C51195 * C857;
    const double C11646 = C51195 * C867;
    const double C11920 = C51195 * C1065;
    const double C106 =
        (C51195 * C50857) / C49935 + (2 * C50867 + C51194) / C49940;
    const double C107 = (C50857 * C50867) / C49944 + C51195 / C49940;
    const double C50004 = C50880 - C50002;
    const double C109 = (C51143 - C51179) / C49986 - (C51196 * C50876) / C49981;
    const double C110 =
        (2 * C50885 + C51196) / C49986 - (C51181 * C50876) / C49981;
    const double C111 = C51181 / C49986 - C50888 / C49990;
    const double C2377 = C2333 + C2334;
    const double C19975 = C19943 + C19944;
    const double C25024 = C24980 + C24981;
    const double C5453 = C5409 + C5410;
    const double C22265 = C22245 + C22246;
    const double C28137 = C28117 + C28118;
    const double C2386 = C2351 + C2352;
    const double C19979 = C19951 + C19952;
    const double C25033 = C24998 + C24999;
    const double C3054 = C3036 + C3037;
    const double C21141 = C21123 + C21124;
    const double C25665 = C25647 + C25648;
    const double C5462 = C5427 + C5428;
    const double C22269 = C22253 + C22254;
    const double C28900 = C28880 + C28881;
    const double C2376 = C2331 + C2332;
    const double C19974 = C19941 + C19942;
    const double C25023 = C24978 + C24979;
    const double C5452 = C5407 + C5408;
    const double C22264 = C22243 + C22244;
    const double C28136 = C28115 + C28116;
    const double C19978 = C19949 + C19950;
    const double C20449 = C20437 + C20438;
    const double C22268 = C22251 + C22252;
    const double C50141 = C50138 + C50124;
    const double C2729 = C2713 + C2714;
    const double C19985 = C19963 + C19964;
    const double C25364 = C25348 + C25349;
    const double C3050 = C3028 + C3029;
    const double C21143 = C21129 + C21130;
    const double C25661 = C25639 + C25640;
    const double C3394 = C3379 + C3380;
    const double C22081 = C22071 + C22072;
    const double C25985 = C25970 + C25971;
    const double C6049 = C6033 + C6034;
    const double C22887 = C22871 + C22872;
    const double C29263 = C29256 + C29257;
    const double C50183 = C50175 - C50157;
    const double C50315 = C50314 / C49935;
    const double C50362 = C50361 / C49935;
    const double C20323 = C20315 + C20316;
    const double C20446 = C20431 + C20432;
    const double C20451 = C20441 + C20442;
    const double C20677 = C20667 + C20668;
    const double C20679 = C20671 + C20672;
    const double C22710 = C22703 + C22704;
    const double C40094 = C40089 + C40090;
    const double C50140 = C50137 + C50121;
    const double C50166 = -C50154;
    const double C2370 = C2171 * C529;
    const double C2362 = C50867 * C529;
    const double C8458 = C51195 * C529;
    const double C8444 = C7938 * C529;
    const double C17568 = C17047 * C529;
    const double C17554 = C17048 * C529;
    const double C19958 = C50862 * C529;
    const double C25017 = C51138 * C529;
    const double C25009 = C50867 * C529;
    const double C5446 = C2171 * C868;
    const double C5438 = C50867 * C868;
    const double C11658 = C51195 * C868;
    const double C11644 = C7938 * C868;
    const double C22260 = C50862 * C868;
    const double C28887 = C50867 * C868;
    const double C34898 = C17047 * C868;
    const double C34884 = C17048 * C868;
    const double C44981 = C51138 * C868;
    const double C2346 = C2171 * C278;
    const double C2338 = C50867 * C278;
    const double C8122 = C51194 * C278;
    const double C8112 = C51195 * C278;
    const double C8102 = C7938 * C278;
    const double C17232 = C17046 * C278;
    const double C17222 = C17047 * C278;
    const double C17212 = C17048 * C278;
    const double C19946 = C50862 * C278;
    const double C24993 = C51138 * C278;
    const double C24985 = C50867 * C278;
    const double C3033 = C50867 * C743;
    const double C4017 = C2171 * C743;
    const double C8738 = C51195 * C743;
    const double C9672 = C51194 * C743;
    const double C17848 = C17047 * C743;
    const double C18782 = C17046 * C743;
    const double C21128 = C50862 * C743;
    const double C25644 = C50867 * C743;
    const double C26588 = C51138 * C743;
    const double C3382 = C2171 * C984;
    const double C9070 = C51194 * C984;
    const double C18180 = C17046 * C984;
    const double C20666 = C50862 * C984;
    const double C25973 = C51138 * C984;
    const double C5422 = C2171 * C402;
    const double C5414 = C50867 * C402;
    const double C11078 = C51194 * C402;
    const double C11068 = C51195 * C402;
    const double C11058 = C7938 * C402;
    const double C22248 = C50862 * C402;
    const double C28130 = C51138 * C402;
    const double C28122 = C50867 * C402;
    const double C34318 = C17046 * C402;
    const double C34308 = C17047 * C402;
    const double C34298 = C17048 * C402;
    const double C2388 = C2355 + C2356;
    const double C19980 = C19953 + C19954;
    const double C25035 = C25002 + C25003;
    const double C19984 = C19961 + C19962;
    const double C20447 = C20433 + C20434;
    const double C5464 = C5431 + C5432;
    const double C22270 = C22255 + C22256;
    const double C28898 = C28876 + C28877;
    const double C22888 = C22873 + C22874;
    const double C50198 = C50195 + C50173;
    const double C50331 = C50326 / C50069;
    const double C6216 = C50867 * C3508;
    const double C22880 = C50862 * C3508;
    const double C29109 = C50867 * C3508;
    const double C50378 = C50373 / C50069;
    const double C2837 =
        (4 * (2 * C50299 * C50132 + C50299 * C50647) +
         C50299 *
             (3 * C50647 +
              C50299 * (2 * C50321 + C50299 * (C50188 + C50265 * C50394)))) /
        C49935;
    const double C3012 =
        (C50346 * (2 * C50299 * C50132 + C50299 * C50647)) / C49935;
    const double C3017 =
        (C50346 *
         (3 * C50647 +
          C50299 * (2 * C50321 + C50299 * (C50188 + C50265 * C50394)))) /
        C49935;
    const double C3214 = (C50102 + C50132 * C50394 + C50647 * C50441) / C49935;
    const double C3372 =
        (2 * C50299 * C50132 + C50299 * C50647 +
         (2 * C50321 + C50299 * (C50188 + C50265 * C50394)) * C50441) /
        C49935;
    const double C3504 =
        (2 * C50346 * C50647 +
         C50346 * (C50647 + (C50188 + C50265 * C50394) * C50441)) /
        C49935;
    const double C6334 =
        (4 * (2 * C50346 * C50132 + C50346 * C50701) +
         C50346 *
             (3 * C50701 +
              C50346 * (2 * C50368 + C50346 * (C50188 + C50265 * C50441)))) /
        C49935;
    const double C2858 = C2848 + C2849;
    const double C20225 = C20215 + C20216;
    const double C25485 = C25475 + C25476;
    const double C6352 = C6343 + C6344;
    const double C39908 = C39901 + C39902;
    const double C45810 = C45801 + C45802;
    const double C130 = 4 * (2 * C50091 + C50068 * C50122) +
                        C50068 * (3 * C50122 + C50068 * C50187);
    const double C262 = C50299 * (3 * C50122 + C50068 * C50187);
    const double C386 = C50346 * (3 * C50122 + C50068 * C50187);
    const double C515 = 2 * C50091 + C50068 * C50122 + C50187 * C50394;
    const double C604 =
        2 * C50299 * C50187 + C50299 * (C50187 + C50264 * C50394);
    const double C721 = C50346 * C50299 * C50187;
    const double C722 = C50346 * (C50187 + C50264 * C50394);
    const double C854 = 2 * C50091 + C50068 * C50122 + C50187 * C50441;
    const double C969 = C50299 * C50187 + C50299 * C50264 * C50441;
    const double C1055 =
        2 * C50346 * C50187 + C50346 * (C50187 + C50264 * C50441);
    const double C3042 = C2177 * C3008;
    const double C21135 = C19835 * C3008;
    const double C25653 = C49954 * C3008;
    const double C3387 = C2177 * C3211;
    const double C22435 = C19835 * C3211;
    const double C25978 = C49954 * C3211;
    const double C50197 = C50194 + C50170;
    const double C50242 = -C50228;
    const double C50330 = C50325 / C49981;
    const double C6219 = C2177 * C3506;
    const double C22883 = C19835 * C3506;
    const double C29112 = C49954 * C3506;
    const double C50377 = C50372 / C49981;
    const double C2835 =
        4 * ((-2 * C50299 * C50131) / C49981 - (C50299 * C50641) / C49981) +
        C50299 * ((-3 * C50641) / C49981 +
                  C50299 * ((-2 * C50319) / C49981 -
                            (C50299 * (C50262 * C50394 + C50185)) / C49981));
    const double C3014 =
        C50346 * ((-2 * C50299 * C50131) / C49981 - (C50299 * C50641) / C49981);
    const double C3015 =
        C50346 * ((-3 * C50641) / C49981 +
                  C50299 * ((-2 * C50319) / C49981 -
                            (C50299 * (C50262 * C50394 + C50185)) / C49981));
    const double C3216 = -(C50641 * C50441 + C50131 * C50394 + C50101) / C49981;
    const double C3370 = (-2 * C50299 * C50131) / C49981 -
                         (C50299 * C50641) / C49981 +
                         ((-2 * C50319) / C49981 -
                          (C50299 * (C50262 * C50394 + C50185)) / C49981) *
                             C50441;
    const double C3502 =
        (-2 * C50346 * C50641) / C49981 -
        (C50346 * ((C50262 * C50394 + C50185) * C50441 + C50641)) / C49981;
    const double C6332 =
        4 * ((-2 * C50346 * C50131) / C49981 - (C50346 * C50695) / C49981) +
        C50346 * ((-3 * C50695) / C49981 +
                  C50346 * ((-2 * C50366) / C49981 -
                            (C50346 * (C50262 * C50441 + C50185)) / C49981));
    const double C50313 = C50310 / C50069;
    const double C50424 = C50422 / C50069;
    const double C4019 = C50867 * C744;
    const double C8736 = C7938 * C744;
    const double C9674 = C51195 * C744;
    const double C13722 = C2171 * C744;
    const double C17846 = C17048 * C744;
    const double C18784 = C17047 * C744;
    const double C22068 = C50862 * C744;
    const double C26590 = C50867 * C744;
    const double C27908 = C51138 * C744;
    const double C3384 = C50867 * C983;
    const double C6852 = C2171 * C983;
    const double C9072 = C51195 * C983;
    const double C18182 = C17047 * C983;
    const double C22074 = C50862 * C983;
    const double C25975 = C50867 * C983;
    const double C28893 = C51138 * C983;
    const double C6218 = C2171 * C3513;
    const double C22696 = C50862 * C3513;
    const double C29111 = C51138 * C3513;
    const double C50360 = C50357 / C50069;
    const double C50480 = C50478 / C50069;
    const double C50399 = -C50398;
    const double C50446 = -C50445;
    const double C20302 =
        5 * (3 * C50801 + C50299 * C50838) +
        C50299 * (4 * C50838 +
                  C50299 * (3 * C50836 +
                            C50299 * (2 * C50299 * C50148 +
                                      C50299 * (C50148 + C50217 * C50394))));
    const double C20424 =
        C50346 * (4 * C50838 +
                  C50299 * (3 * C50836 +
                            C50299 * (2 * C50299 * C50148 +
                                      C50299 * (C50148 + C50217 * C50394))));
    const double C20658 =
        3 * C50801 + C50299 * C50838 +
        (3 * C50836 +
         C50299 * (2 * C50299 * C50148 + C50299 * (C50148 + C50217 * C50394))) *
            C50441;
    const double C20752 =
        2 * C50346 * C50838 +
        C50346 * (C50838 +
                  (2 * C50299 * C50148 + C50299 * (C50148 + C50217 * C50394)) *
                      C50441);
    const double C40082 =
        5 * (3 * C50830 + C50346 * C50853) +
        C50346 * (4 * C50853 +
                  C50346 * (3 * C50851 +
                            C50346 * (2 * C50346 * C50148 +
                                      C50346 * (C50148 + C50217 * C50441))));
    const double C50280 = C50277 + C50249;
    const double C50279 = C50274 + C50246;
    const double C50334 = C50329 / C50069;
    const double C50470 = C50469 / C49981;
    const double C50491 = C50068 * C50488;
    const double C50381 = C50376 / C50069;
    const double C50411 = -C50408;
    const double C50458 = -C50455;
    const double C50139 = C50129 - C50136;
    const double C50278 = C50260 - C50273;
    const double C50340 = C50338 - C50333;
    const double C50496 = C50495 / C49935;
    const double C50387 = C50385 - C50380;
    const double C50417 = C50415 / C49935;
    const double C50464 = C50462 / C49935;
    const double C20303 =
        5 * ((-3 * C50644) / C49981 + C50299 * C50714) +
        C50299 * (4 * C50714 +
                  C50299 * ((-3 * C50407) / C49981 +
                            C50299 * ((-2 * C50323) / C49981 -
                                      (C50299 * (C50245 * C50394 + C50169)) /
                                          C49981)));
    const double C20425 =
        C50346 *
        (4 * C50714 +
         C50299 * ((-3 * C50407) / C49981 +
                   C50299 * ((-2 * C50323) / C49981 -
                             (C50299 * (C50245 * C50394 + C50169)) / C49981)));
    const double C20659 =
        (-3 * C50644) / C49981 + C50299 * C50714 +
        ((-3 * C50407) / C49981 +
         C50299 * ((-2 * C50323) / C49981 -
                   (C50299 * (C50245 * C50394 + C50169)) / C49981)) *
            C50441;
    const double C20753 =
        2 * C50346 * C50714 +
        C50346 * (C50714 + ((-2 * C50323) / C49981 -
                            (C50299 * (C50245 * C50394 + C50169)) / C49981) *
                               C50441);
    const double C40083 =
        5 * ((-3 * C50698) / C49981 + C50346 * C50738) +
        C50346 * (4 * C50738 +
                  C50346 * ((-3 * C50454) / C49981 +
                            C50346 * ((-2 * C50370) / C49981 -
                                      (C50346 * (C50245 * C50441 + C50169)) /
                                          C49981)));
    const double C50276 = C50223 + C50270;
    const double C50275 = C50269 / C49981;
    const double C599 = (C51151 - C51182) / C49986 - (C51197 * C50935) / C49981;
    const double C600 =
        (2 * C50939 + C51197) / C49986 - (C51184 * C50935) / C49981;
    const double C601 = C51184 / C49986 - C50942 / C49990;
    const double C1051 =
        (C51152 - C51185) / C49986 - (C51198 * C50959) / C49981;
    const double C1052 =
        (2 * C50963 + C51198) / C49986 - (C51187 * C50959) / C49981;
    const double C1053 = C51187 / C49986 - C50966 / C49990;
    const double C19831 =
        (C51199 * C51055) / C49935 + (C51166 - C51188) / C49940;
    const double C19832 =
        (C51200 * C51055) / C49935 + (2 * C51060 + C51199) / C49940;
    const double C19833 = (C51055 * C51060) / C49944 + C51200 / C49940;
    const double C39326 =
        (C51201 * C51081) / C49935 + (C51167 - C51191) / C49940;
    const double C39327 =
        (C51202 * C51081) / C49935 + (2 * C51086 + C51201) / C49940;
    const double C39328 = (C51081 * C51086) / C49944 + C51202 / C49940;
    const double C8129 = C8095 + C8096;
    const double C11085 = C11051 + C11052;
    const double C17239 = C17205 + C17206;
    const double C34325 = C34291 + C34292;
    const double C49959 = C49958 * ae;
    const double C2176 = (-C49936 / C49935) / C49940 - (C49958 * be) / C49935;
    const double C20311 = C19983 * C603;
    const double C20309 = C19977 * C603;
    const double C20205 = C19973 * C50000;
    const double C20973 = C19973 * C1281;
    const double C19990 = C19972 * C251;
    const double C20204 = C19972 * C51143;
    const double C20308 = C19972 * C50880;
    const double C20856 = C19972 * C51196;
    const double C20972 = C19972 * C1275;
    const double C20307 = C19971 * C603;
    const double C20314 = C20227 * C603;
    const double C20458 = C20450 * C603;
    const double C20456 = C20448 * C603;
    const double C20681 = C20675 * C603;
    const double C22692 = C22267 * C603;
    const double C22864 = C22263 * C50000;
    const double C23696 = C22263 * C1281;
    const double C22274 = C22262 * C251;
    const double C22690 = C22262 * C50880;
    const double C22863 = C22262 * C51143;
    const double C23695 = C22262 * C1275;
    const double C23865 = C22262 * C51196;
    const double C22689 = C22261 * C603;
    const double C22713 = C22709 * C603;
    const double C23059 = C22889 * C603;
    const double C23072 = C23068 * C603;
    const double C23186 = C23183 * C603;
    const double C50005 = C50004 * ce;
    const double C256 =
        ((-C49980 / C49981) / C49986 - (C49993 * de) / C49981) / C49986 -
        ((C49979 * ((-C49982 / C49981) / C49986 - (C50004 * de) / C49981) +
          C1275) *
         de) /
            C49981 +
        (-C49995 / C49981) / C49986 - (0 * de) / C49981;
    const double C257 =
        ((-C49982 / C49981) / C49986 - (C50004 * de) / C49981) / C49986 -
        ((C49979 * ((-C49995 / C49981) / C49986 - (0 * de) / C49981) + C50885) *
         de) /
            C49981;
    const double C1280 = (-C49982 / C49981) / C49986 - (C50004 * de) / C49981;
    const double C19993 = C19975 * C258;
    const double C20859 = C19975 * C1176;
    const double C22277 = C22265 * C258;
    const double C23868 = C22265 * C1176;
    const double C20209 = C19979 * C50000;
    const double C20977 = C19979 * C1281;
    const double C21147 = C21141 * C1281;
    const double C21609 = C21141 * C50000;
    const double C22868 = C22269 * C50000;
    const double C23701 = C22269 * C1281;
    const double C19992 = C19974 * C252;
    const double C20206 = C19974 * C50885;
    const double C20858 = C19974 * C51181;
    const double C20974 = C19974 * C50885;
    const double C22276 = C22264 * C252;
    const double C22865 = C22264 * C50885;
    const double C23697 = C22264 * C50885;
    const double C23867 = C22264 * C51181;
    const double C19996 = C19978 * C251;
    const double C20208 = C19978 * C51143;
    const double C20310 = C19978 * C50880;
    const double C20862 = C19978 * C51196;
    const double C20976 = C19978 * C1275;
    const double C20457 = C20449 * C50880;
    const double C21125 = C20449 * C1275;
    const double C21610 = C20449 * C51143;
    const double C22062 = C20449 * C251;
    const double C23335 = C20449 * C51196;
    const double C22280 = C22268 * C251;
    const double C22693 = C22268 * C50880;
    const double C22867 = C22268 * C51143;
    const double C23700 = C22268 * C1275;
    const double C23871 = C22268 * C51196;
    const double C140 = (3 * (C50083 + C50068 * C50102 + C50091 * ae) +
                         C50068 * (2 * C50102 + C50068 * C50141 + C50122 * ae) +
                         (2 * C50091 + C50068 * C50122) * ae) /
                        C49935;
    const double C267 =
        (C50299 * (2 * C50102 + C50068 * C50141 + C50122 * ae)) / C49935;
    const double C391 =
        (C50346 * (2 * C50102 + C50068 * C50141 + C50122 * ae)) / C49935;
    const double C519 =
        (C50083 + C50068 * C50102 + C50091 * ae + C50141 * C50394) / C49935;
    const double C728 = (C50346 * C50299 * C50141) / C49935;
    const double C858 =
        (C50083 + C50068 * C50102 + C50091 * ae + C50141 * C50441) / C49935;
    const double C20213 = C19985 * C50000;
    const double C20981 = C19985 * C1281;
    const double C21149 = C21143 * C1281;
    const double C21613 = C21143 * C50000;
    const double C22433 = C22081 * C50000;
    const double C23494 = C22081 * C1281;
    const double C22895 = C22887 * C50000;
    const double C24218 = C22887 * C1281;
    const double C50196 = C50183 - C50193;
    const double C50316 = C50315 - C50312;
    const double C50363 = C50362 - C50359;
    const double C20325 = C20323 * C603;
    const double C20454 = C20446 * C603;
    const double C20459 = C20451 * C603;
    const double C20683 = C20677 * C603;
    const double C20685 = C20679 * C603;
    const double C22714 = C22710 * C603;
    const double C40096 = C40094 * C603;
    const double C277 =
        2 * ((-(C50299 * C50096 * ce) / C49981) / C49935 -
             (ae * C50299 * C50095) / C50069 - (C50068 * C50300) / C50069) -
        (ae * C50299 * C50140) / C50069 - (C50299 * C50141 * ce) / C50069 +
        C50068 * ((-(ae * C50299 * C50131) / C49981) / C49935 -
                  C50300 / C50069 - (C50299 * C50132 * ce) / C50069 +
                  C50068 * ((-(C50299 * C50123 * ce) / C49981) / C49935 -
                            (ae * C50299 * C50120) / C50069 -
                            (C50068 * C50299 * C50184) / C50069));
    const double C401 =
        2 * ((-(C50346 * C50096 * ce) / C49981) / C49935 -
             (ae * C50346 * C50095) / C50069 - (C50068 * C50347) / C50069) -
        (ae * C50346 * C50140) / C50069 - (C50346 * C50141 * ce) / C50069 +
        C50068 * ((-(ae * C50346 * C50131) / C49981) / C49935 -
                  C50347 / C50069 - (C50346 * C50132 * ce) / C50069 +
                  C50068 * ((-(C50346 * C50123 * ce) / C49981) / C49935 -
                            (ae * C50346 * C50120) / C50069 -
                            (C50068 * C50346 * C50184) / C50069));
    const double C141 =
        (-3 * (C50068 * C50101 + C50082 + C50091 * ce)) / C49981 +
        C50068 * ((-2 * C50101) / C49981 - (C50068 * C50140) / C49981 -
                  (C50122 * ce) / C49981) -
        ((2 * C50091 + C50068 * C50122) * ce) / C49981;
    const double C269 =
        C50299 * ((-2 * C50101) / C49981 - (C50068 * C50140) / C49981 -
                  (C50122 * ce) / C49981);
    const double C393 =
        C50346 * ((-2 * C50101) / C49981 - (C50068 * C50140) / C49981 -
                  (C50122 * ce) / C49981);
    const double C523 =
        -(C50140 * C50394 + C50068 * C50101 + C50082 + C50091 * ce) / C49981;
    const double C732 = -(C50346 * C50299 * C50140) / C49981;
    const double C862 =
        -(C50140 * C50441 + C50068 * C50101 + C50082 + C50091 * ce) / C49981;
    const double C50174 = C50166 / C49935;
    const double C2379 = C2337 + C2338;
    const double C8132 = C8101 + C8102;
    const double C17242 = C17211 + C17212;
    const double C19976 = C19945 + C19946;
    const double C25026 = C24984 + C24985;
    const double C3052 = C3032 + C3033;
    const double C21142 = C21127 + C21128;
    const double C25663 = C25643 + C25644;
    const double C20676 = C20665 + C20666;
    const double C5455 = C5413 + C5414;
    const double C11088 = C11057 + C11058;
    const double C22266 = C22247 + C22248;
    const double C28139 = C28121 + C28122;
    const double C34328 = C34297 + C34298;
    const double C19998 = C19980 * C252;
    const double C20210 = C19980 * C50885;
    const double C20864 = C19980 * C51181;
    const double C20978 = C19980 * C50885;
    const double C20002 = C19984 * C251;
    const double C20212 = C19984 * C51143;
    const double C20312 = C19984 * C50880;
    const double C20868 = C19984 * C51196;
    const double C20980 = C19984 * C1275;
    const double C20455 = C20447 * C50880;
    const double C21131 = C20447 * C1275;
    const double C21614 = C20447 * C51143;
    const double C31481 = C20447 * C251;
    const double C32569 = C20447 * C51196;
    const double C22282 = C22270 * C252;
    const double C22869 = C22270 * C50885;
    const double C23702 = C22270 * C50885;
    const double C23873 = C22270 * C51181;
    const double C22896 = C22888 * C51143;
    const double C23058 = C22888 * C50880;
    const double C24219 = C22888 * C1275;
    const double C39528 = C22888 * C251;
    const double C40523 = C22888 * C51196;
    const double C50201 = C50068 * C50198;
    const double C50224 = 3 * C50198;
    const double C50211 = C50198 * ce;
    const double C50706 = C50299 * C50198;
    const double C613 =
        (2 * C50299 * C50141 + C50299 * (C50141 + C50198 * C50394)) / C49935;
    const double C739 = (C50346 * (C50141 + C50198 * C50394)) / C49935;
    const double C978 = (C50299 * C50141 + C50299 * C50198 * C50441) / C49935;
    const double C1064 =
        (2 * C50346 * C50141 + C50346 * (C50141 + C50198 * C50441)) / C49935;
    const double C6225 = C6215 + C6216;
    const double C22891 = C22879 + C22880;
    const double C29119 = C29108 + C29109;
    const double C3043 = C50867 * C3012;
    const double C21136 = C50862 * C3012;
    const double C25654 = C50867 * C3012;
    const double C3388 = C50867 * C3214;
    const double C22436 = C50862 * C3214;
    const double C25979 = C50867 * C3214;
    const double C20231 = C20225 * C50000;
    const double C20983 = C20225 * C1281;
    const double C39911 = C39908 * C50000;
    const double C40758 = C39908 * C1281;
    const double C8119 = C7943 * C262;
    const double C17229 = C17053 * C262;
    const double C11075 = C7943 * C386;
    const double C34315 = C17053 * C386;
    const double C2367 = C2177 * C515;
    const double C8441 = C7943 * C515;
    const double C17551 = C17053 * C515;
    const double C25014 = C49954 * C515;
    const double C9669 = C7943 * C721;
    const double C13719 = C2177 * C721;
    const double C18779 = C17053 * C721;
    const double C27905 = C49954 * C721;
    const double C5443 = C2177 * C854;
    const double C11641 = C7943 * C854;
    const double C34881 = C17053 * C854;
    const double C44978 = C49954 * C854;
    const double C50200 = C50068 * C50197;
    const double C50220 = -3 * C50197;
    const double C50210 = ae * C50197;
    const double C745 =
        2 * ((-(C50346 * C50305 * ce) / C49981) / C49935 -
             (ae * C50346 * C50306) / C50069 - (C50068 * C50433) / C50069) -
        (ae * C50346 * C50299 * C50197) / C50069 -
        (C50346 * C50299 * C50198 * ce) / C50069 +
        C50068 * ((-(ae * C50346 * C50319) / C49981) / C49935 -
                  C50433 / C50069 - (C50346 * C50321 * ce) / C50069 +
                  C50068 * ((-(C50346 * C50322 * ce) / C49981) / C49935 -
                            (ae * C50346 * C50323) / C50069 -
                            (C50068 * C50346 * C50324) / C50069));
    const double C50708 = C50299 * C50197;
    const double C609 = (-2 * C50299 * C50140) / C49981 -
                        (C50299 * (C50197 * C50394 + C50140)) / C49981;
    const double C735 = -(C50346 * (C50197 * C50394 + C50140)) / C49981;
    const double C974 = -(C50299 * C50197 * C50441 + C50299 * C50140) / C49981;
    const double C1060 = (-2 * C50346 * C50140) / C49981 -
                         (C50346 * (C50197 * C50441 + C50140)) / C49981;
    const double C50251 = C50242 / C49935;
    const double C50335 = -C50330;
    const double C50382 = -C50377;
    const double C3046 = C2177 * C3014;
    const double C21139 = C19835 * C3014;
    const double C25657 = C49954 * C3014;
    const double C3391 = C2177 * C3216;
    const double C22439 = C19835 * C3216;
    const double C25982 = C49954 * C3216;
    const double C3396 = C3383 + C3384;
    const double C22082 = C22073 + C22074;
    const double C25987 = C25974 + C25975;
    const double C22708 = C22695 + C22696;
    const double C50400 = C50399 / C49935;
    const double C50447 = C50446 / C49935;
    const double C50283 = C50068 * C50280;
    const double C2695 =
        (3 * (C50141 + C50198 * C50394) +
         C50299 * (2 * C50299 * C50198 + C50299 * (C50198 + C50280 * C50394))) /
        C49935;
    const double C3217 =
        (C50141 + C50198 * C50394 + (C50198 + C50280 * C50394) * C50441) /
        C49935;
    const double C4008 =
        (C50346 * (2 * C50299 * C50198 + C50299 * (C50198 + C50280 * C50394))) /
        C49935;
    const double C6015 =
        (3 * (C50141 + C50198 * C50441) +
         C50346 * (2 * C50346 * C50198 + C50346 * (C50198 + C50280 * C50441))) /
        C49935;
    const double C50282 = C50068 * C50279;
    const double C2696 =
        (-3 * (C50197 * C50394 + C50140)) / C49981 +
        C50299 * ((-2 * C50299 * C50197) / C49981 -
                  (C50299 * (C50279 * C50394 + C50197)) / C49981);
    const double C3218 =
        -((C50279 * C50394 + C50197) * C50441 + C50197 * C50394 + C50140) /
        C49981;
    const double C4009 =
        C50346 * ((-2 * C50299 * C50197) / C49981 -
                  (C50299 * (C50279 * C50394 + C50197)) / C49981);
    const double C6016 =
        (-3 * (C50197 * C50441 + C50140)) / C49981 +
        C50346 * ((-2 * C50346 * C50197) / C49981 -
                  (C50346 * (C50279 * C50441 + C50197)) / C49981);
    const double C50471 = -C50470;
    const double C50494 = C50491 / C50069;
    const double C50414 = C50411 / C49935;
    const double C50461 = C50458 / C49935;
    const double C150 =
        3 * ((-(ae * C50101) / C49981) / C49935 - C50100 / C50069 -
             (C50102 * ce) / C50069 + C50068 * C50139) +
        (((-2 * C50101) / C49981 - (C50068 * C50140) / C49981 -
          (C50122 * ce) / C49981) *
         ae) /
            C49935 -
        ((2 * C50102 + C50068 * C50141 + C50122 * ae) * ce) / C50069 +
        C50068 * (2 * C50139 - (ae * C50140) / C50069 - (C50141 * ce) / C50069 +
                  C50068 * ((-(ae * C50131) / C49981) / C49935 -
                            C50130 / C50069 - (C50132 * ce) / C50069 +
                            C50068 * ((-(C50123 * ce) / C49981) / C49935 -
                                      (ae * C50120) / C50069 -
                                      (C50068 *
                                       (C50107 * C50108 +
                                        C50076 * bs[6] * std::pow(C50066, 6)) *
                                       C50077) /
                                          C50069)));
    const double C50281 = C50068 * C50278;
    const double C50342 = C50340 - C50334;
    const double C50497 = C50496 - C50493;
    const double C50389 = C50387 - C50381;
    const double C50419 = C50417 - C50413;
    const double C50466 = C50464 - C50460;
    const double C131 = 5 * (3 * C50122 + C50068 * C50187) +
                        C50068 * (4 * C50187 + C50068 * C50276);
    const double C264 = C50299 * (4 * C50187 + C50068 * C50276);
    const double C388 = C50346 * (4 * C50187 + C50068 * C50276);
    const double C516 = 3 * C50122 + C50068 * C50187 + C50276 * C50394;
    const double C855 = 3 * C50122 + C50068 * C50187 + C50276 * C50441;
    const double C1412 = C50346 * C50299 * C50276;
    const double C49960 = C49959 / C49935;
    const double C2365 = C2176 * C514;
    const double C2363 = C2176 * C522;
    const double C2359 = C2176 * C513;
    const double C2353 = C2176 * C521;
    const double C2349 = C2176 * C512;
    const double C2345 = C2176 * C270;
    const double C2341 = C2176 * C260;
    const double C2339 = C2176 * C271;
    const double C2335 = C2176 * C259;
    const double C2329 = C2176 * C272;
    const double C2325 = C2176 * C263;
    const double C2717 = C2176 * C610;
    const double C2715 = C2176 * C607;
    const double C2711 = C2176 * C611;
    const double C2705 = C2176 * C606;
    const double C2850 = C2176 * C2693;
    const double C2846 = C2176 * C2688;
    const double C3044 = C2176 * C3013;
    const double C3040 = C2176 * C3007;
    const double C3038 = C2176 * C718;
    const double C3034 = C2176 * C730;
    const double C3030 = C2176 * C725;
    const double C3026 = C2176 * C737;
    const double C3389 = C2176 * C3215;
    const double C3385 = C2176 * C3210;
    const double C3381 = C2176 * C976;
    const double C3377 = C2176 * C972;
    const double C4024 = C2176 * C736;
    const double C4020 = C2176 * C724;
    const double C4016 = C2176 * C731;
    const double C4012 = C2176 * C719;
    const double C5441 = C2176 * C853;
    const double C5439 = C2176 * C861;
    const double C5435 = C2176 * C852;
    const double C5429 = C2176 * C860;
    const double C5425 = C2176 * C851;
    const double C5421 = C2176 * C394;
    const double C5417 = C2176 * C384;
    const double C5415 = C2176 * C395;
    const double C5411 = C2176 * C383;
    const double C5405 = C2176 * C396;
    const double C5401 = C2176 * C387;
    const double C6037 = C2176 * C1061;
    const double C6035 = C2176 * C1058;
    const double C6031 = C2176 * C1062;
    const double C6025 = C2176 * C1057;
    const double C6217 = C2176 * C3507;
    const double C6213 = C2176 * C3501;
    const double C6345 = C2176 * C6013;
    const double C6341 = C2176 * C6008;
    const double C6851 = C2176 * C975;
    const double C6847 = C2176 * C971;
    const double C13717 = C2176 * C720;
    const double C50006 = C50005 / C49981;
    const double C20001 = C19983 * C256;
    const double C19995 = C19977 * C256;
    const double C19989 = C19971 * C256;
    const double C22069 = C20675 * C256;
    const double C22061 = C20450 * C256;
    const double C22279 = C22267 * C256;
    const double C22273 = C22261 * C256;
    const double C31480 = C20448 * C256;
    const double C39527 = C22889 * C256;
    const double C20003 = C19985 * C257;
    const double C19997 = C19979 * C257;
    const double C19991 = C19973 * C257;
    const double C22063 = C21141 * C257;
    const double C22087 = C22081 * C257;
    const double C22281 = C22269 * C257;
    const double C22275 = C22263 * C257;
    const double C31482 = C21143 * C257;
    const double C39529 = C22887 * C257;
    const double C20985 = C20227 * C1280;
    const double C20979 = C19983 * C1280;
    const double C20975 = C19977 * C1280;
    const double C20971 = C19971 * C1280;
    const double C21138 = C20446 * C1280;
    const double C21132 = C20448 * C1280;
    const double C21126 = C20450 * C1280;
    const double C23498 = C20677 * C1280;
    const double C23492 = C20675 * C1280;
    const double C23708 = C22709 * C1280;
    const double C23699 = C22267 * C1280;
    const double C23694 = C22261 * C1280;
    const double C24220 = C22889 * C1280;
    const double C40760 = C23183 * C1280;
    const double C20319 = C20309 + C20310;
    const double C22700 = C20457 + C20458;
    const double C22691 = C20458 + C20457;
    const double C23055 = C22692 + C22693;
    const double C2344 = C50867 * C267;
    const double C8118 = C51195 * C267;
    const double C8104 = C7938 * C267;
    const double C17228 = C17047 * C267;
    const double C17214 = C17048 * C267;
    const double C24991 = C50867 * C267;
    const double C5420 = C50867 * C391;
    const double C11074 = C51195 * C391;
    const double C11060 = C7938 * C391;
    const double C28128 = C50867 * C391;
    const double C34314 = C17047 * C391;
    const double C34300 = C17048 * C391;
    const double C2366 = C2171 * C519;
    const double C2358 = C50867 * C519;
    const double C8450 = C7938 * C519;
    const double C8440 = C51195 * C519;
    const double C17560 = C17048 * C519;
    const double C17550 = C17047 * C519;
    const double C19956 = C50862 * C519;
    const double C25013 = C51138 * C519;
    const double C25005 = C50867 * C519;
    const double C4015 = C50867 * C728;
    const double C8742 = C7938 * C728;
    const double C9668 = C51195 * C728;
    const double C13718 = C2171 * C728;
    const double C17852 = C17048 * C728;
    const double C18778 = C17047 * C728;
    const double C22066 = C50862 * C728;
    const double C26586 = C50867 * C728;
    const double C27904 = C51138 * C728;
    const double C5442 = C2171 * C858;
    const double C5434 = C50867 * C858;
    const double C11650 = C7938 * C858;
    const double C11640 = C51195 * C858;
    const double C22258 = C50862 * C858;
    const double C28875 = C50867 * C858;
    const double C34890 = C17048 * C858;
    const double C34880 = C17047 * C858;
    const double C44977 = C51138 * C858;
    const double C50199 = C50068 * C50196;
    const double C50209 = 2 * C50196;
    const double C50317 = C50316 - C50313;
    const double C50364 = C50363 - C50360;
    const double C2348 = C50867 * C277;
    const double C8124 = C51195 * C277;
    const double C8110 = C7938 * C277;
    const double C17234 = C17047 * C277;
    const double C17220 = C17048 * C277;
    const double C24995 = C50867 * C277;
    const double C5424 = C50867 * C401;
    const double C11080 = C51195 * C401;
    const double C11066 = C7938 * C401;
    const double C28132 = C50867 * C401;
    const double C34320 = C17047 * C401;
    const double C34306 = C17048 * C401;
    const double C2347 = C2177 * C269;
    const double C8109 = C7943 * C269;
    const double C17219 = C17053 * C269;
    const double C24994 = C49954 * C269;
    const double C5423 = C2177 * C393;
    const double C11065 = C7943 * C393;
    const double C28131 = C49954 * C393;
    const double C34305 = C17053 * C393;
    const double C2369 = C2176 * C523;
    const double C2361 = C2177 * C523;
    const double C8443 = C7943 * C523;
    const double C17553 = C17053 * C523;
    const double C19957 = C19835 * C523;
    const double C25008 = C49954 * C523;
    const double C4018 = C2177 * C732;
    const double C8735 = C7943 * C732;
    const double C13721 = C2176 * C732;
    const double C17845 = C17053 * C732;
    const double C22067 = C19835 * C732;
    const double C26589 = C49954 * C732;
    const double C5445 = C2176 * C862;
    const double C5437 = C2177 * C862;
    const double C11643 = C7943 * C862;
    const double C22259 = C19835 * C862;
    const double C28886 = C49954 * C862;
    const double C34883 = C17053 * C862;
    const double C50182 = C50174 - C50144;
    const double C19994 = C19976 * C253;
    const double C20860 = C19976 * C1171;
    const double C21148 = C21142 * C50885;
    const double C21612 = C21142 * C50885;
    const double C22064 = C21142 * C252;
    const double C23337 = C21142 * C51181;
    const double C20682 = C20676 * C50880;
    const double C22070 = C20676 * C251;
    const double C22432 = C20676 * C51143;
    const double C23341 = C20676 * C51196;
    const double C23493 = C20676 * C1275;
    const double C22278 = C22266 * C253;
    const double C23869 = C22266 * C1171;
    const double C20322 = C20312 + C20311;
    const double C20320 = C20311 + C20312;
    const double C20462 = C20455 + C20456;
    const double C22701 = C20456 + C20455;
    const double C23177 = C23058 + C23059;
    const double C40013 = C23059 + C23058;
    const double C50204 = C50153 + C50201;
    const double C50227 = C50211 / C50069;
    const double C6843 =
        (2 * C50346 * C50706 + C50346 * (C50706 + C50299 * C50280 * C50441)) /
        C49935;
    const double C2708 = C50867 * C613;
    const double C8576 = C7938 * C613;
    const double C17686 = C17048 * C613;
    const double C19968 = C50862 * C613;
    const double C25343 = C50867 * C613;
    const double C4023 = C50867 * C739;
    const double C8752 = C7938 * C739;
    const double C17862 = C17048 * C739;
    const double C26594 = C50867 * C739;
    const double C31485 = C50862 * C739;
    const double C6850 = C50867 * C978;
    const double C9068 = C7938 * C978;
    const double C18178 = C17048 * C978;
    const double C22076 = C50862 * C978;
    const double C28891 = C50867 * C978;
    const double C6028 = C50867 * C1064;
    const double C11922 = C7938 * C1064;
    const double C35162 = C17048 * C1064;
    const double C39532 = C50862 * C1064;
    const double C45531 = C50867 * C1064;
    const double C22899 = C22891 * C50000;
    const double C23706 = C22891 * C1281;
    const double C3057 = C3042 + C3043;
    const double C21145 = C21135 + C21136;
    const double C25668 = C25653 + C25654;
    const double C3398 = C3387 + C3388;
    const double C22441 = C22435 + C22436;
    const double C25989 = C25978 + C25979;
    const double C50203 = C50200 / C49981;
    const double C50233 = C50220 / C49981;
    const double C50226 = C50210 / C50069;
    const double C9676 = C7938 * C745;
    const double C13724 = C50867 * C745;
    const double C18786 = C17048 * C745;
    const double C27910 = C50867 * C745;
    const double C6844 =
        (-2 * C50346 * C50708) / C49981 -
        (C50346 * (C50299 * C50279 * C50441 + C50708)) / C49981;
    const double C2719 = C2177 * C609;
    const double C8581 = C7943 * C609;
    const double C17691 = C17053 * C609;
    const double C19969 = C19835 * C609;
    const double C25354 = C49954 * C609;
    const double C4026 = C2177 * C735;
    const double C8757 = C7943 * C735;
    const double C17867 = C17053 * C735;
    const double C26597 = C49954 * C735;
    const double C31486 = C19835 * C735;
    const double C6853 = C2177 * C974;
    const double C9073 = C7943 * C974;
    const double C18183 = C17053 * C974;
    const double C22077 = C19835 * C974;
    const double C28894 = C49954 * C974;
    const double C6039 = C2177 * C1060;
    const double C11927 = C7943 * C1060;
    const double C35167 = C17053 * C1060;
    const double C39533 = C19835 * C1060;
    const double C45534 = C49954 * C1060;
    const double C50259 = C50251 - C50213;
    const double C50337 = C50335 / C49935;
    const double C50384 = C50382 / C49935;
    const double C22088 = C22082 * C252;
    const double C22434 = C22082 * C50885;
    const double C23343 = C22082 * C51181;
    const double C23495 = C22082 * C50885;
    const double C22712 = C22708 * C50880;
    const double C22881 = C22708 * C51143;
    const double C23707 = C22708 * C1275;
    const double C50401 = C50400 - C50144;
    const double C50448 = C50447 - C50144;
    const double C50286 = C50225 + C50283;
    const double C50285 = C50282 / C49981;
    const double C50472 = C50471 / C49935;
    const double C50416 = C50414 - C50213;
    const double C50463 = C50461 - C50213;
    const double C50343 = C50068 * C50342;
    const double C50498 = C50497 - C50494;
    const double C50390 = C50068 * C50389;
    const double C49961 = C49960 - C49950;
    const double C2392 = C2363 + C2364;
    const double C2390 = C2359 + C2360;
    const double C2387 = C2353 + C2354;
    const double C2385 = C2349 + C2350;
    const double C2383 = C2345 + C2346;
    const double C2381 = C2341 + C2342;
    const double C2380 = C2339 + C2340;
    const double C2378 = C2335 + C2336;
    const double C2375 = C2329 + C2330;
    const double C2373 = C2325 + C2326;
    const double C2730 = C2715 + C2716;
    const double C2728 = C2711 + C2712;
    const double C2725 = C2705 + C2706;
    const double C2857 = C2846 + C2847;
    const double C3056 = C3040 + C3041;
    const double C3055 = C3038 + C3039;
    const double C3053 = C3034 + C3035;
    const double C3051 = C3030 + C3031;
    const double C3049 = C3026 + C3027;
    const double C3397 = C3385 + C3386;
    const double C3395 = C3381 + C3382;
    const double C3393 = C3377 + C3378;
    const double C4032 = C4020 + C4021;
    const double C4030 = C4016 + C4017;
    const double C4028 = C4012 + C4013;
    const double C5468 = C5439 + C5440;
    const double C5466 = C5435 + C5436;
    const double C5463 = C5429 + C5430;
    const double C5461 = C5425 + C5426;
    const double C5459 = C5421 + C5422;
    const double C5457 = C5417 + C5418;
    const double C5456 = C5415 + C5416;
    const double C5454 = C5411 + C5412;
    const double C5451 = C5405 + C5406;
    const double C5449 = C5401 + C5402;
    const double C6050 = C6035 + C6036;
    const double C6048 = C6031 + C6032;
    const double C6045 = C6025 + C6026;
    const double C6226 = C6217 + C6218;
    const double C6224 = C6213 + C6214;
    const double C6351 = C6341 + C6342;
    const double C6857 = C6851 + C6852;
    const double C6855 = C6847 + C6848;
    const double C50007 = C50006 - C49996;
    const double C20988 = C20979 + C20980;
    const double C20987 = C20975 + C20976;
    const double C32720 = C21132 + C21131;
    const double C32917 = C21131 + C21132;
    const double C23704 = C21125 + C21126;
    const double C23698 = C21126 + C21125;
    const double C24216 = C23699 + C23700;
    const double C40757 = C24220 + C24219;
    const double C23067 = C23055 * C17049;
    const double C40012 = C23055 * C51010;
    const double C48356 = C23055 * C51166;
    const double C2382 = C2343 + C2344;
    const double C8133 = C8103 + C8104;
    const double C17243 = C17213 + C17214;
    const double C25029 = C24990 + C24991;
    const double C5458 = C5419 + C5420;
    const double C11089 = C11059 + C11060;
    const double C28142 = C28127 + C28128;
    const double C34329 = C34299 + C34300;
    const double C2393 = C2365 + C2366;
    const double C2389 = C2357 + C2358;
    const double C8467 = C8449 + C8450;
    const double C17577 = C17559 + C17560;
    const double C19981 = C19955 + C19956;
    const double C25036 = C25004 + C25005;
    const double C4029 = C4014 + C4015;
    const double C8762 = C8741 + C8742;
    const double C13725 = C13717 + C13718;
    const double C17872 = C17851 + C17852;
    const double C22079 = C22065 + C22066;
    const double C26600 = C26585 + C26586;
    const double C5469 = C5441 + C5442;
    const double C5465 = C5433 + C5434;
    const double C11667 = C11649 + C11650;
    const double C22271 = C22257 + C22258;
    const double C28897 = C28874 + C28875;
    const double C34907 = C34889 + C34890;
    const double C2384 = C2347 + C2348;
    const double C8136 = C8109 + C8110;
    const double C17246 = C17219 + C17220;
    const double C25031 = C24994 + C24995;
    const double C5460 = C5423 + C5424;
    const double C11092 = C11065 + C11066;
    const double C28144 = C28131 + C28132;
    const double C34332 = C34305 + C34306;
    const double C2395 = C2369 + C2370;
    const double C2391 = C2361 + C2362;
    const double C8464 = C8443 + C8444;
    const double C17574 = C17553 + C17554;
    const double C19982 = C19957 + C19958;
    const double C25038 = C25008 + C25009;
    const double C4031 = C4018 + C4019;
    const double C8759 = C8735 + C8736;
    const double C13727 = C13721 + C13722;
    const double C17869 = C17845 + C17846;
    const double C22080 = C22067 + C22068;
    const double C26602 = C26589 + C26590;
    const double C5471 = C5445 + C5446;
    const double C5467 = C5437 + C5438;
    const double C11664 = C11643 + C11644;
    const double C22272 = C22259 + C22260;
    const double C28903 = C28886 + C28887;
    const double C34904 = C34883 + C34884;
    const double C50189 = C50182 - C50155;
    const double C22699 = C20682 + C20681;
    const double C22694 = C20681 + C20682;
    const double C23705 = C23493 + C23492;
    const double C23703 = C23492 + C23493;
    const double C23182 = C23177 * C17049;
    const double C40088 = C23177 * C51010;
    const double C48461 = C23177 * C51166;
    const double C40016 = C40013 * C51010;
    const double C50206 = C50204 + C50181;
    const double C2726 = C2707 + C2708;
    const double C8585 = C8575 + C8576;
    const double C17695 = C17685 + C17686;
    const double C19987 = C19967 + C19968;
    const double C25361 = C25342 + C25343;
    const double C4033 = C4022 + C4023;
    const double C8767 = C8751 + C8752;
    const double C17877 = C17861 + C17862;
    const double C26604 = C26593 + C26594;
    const double C31488 = C31484 + C31485;
    const double C6856 = C6849 + C6850;
    const double C9077 = C9067 + C9068;
    const double C18187 = C18177 + C18178;
    const double C22083 = C22075 + C22076;
    const double C28905 = C28890 + C28891;
    const double C6046 = C6027 + C6028;
    const double C11931 = C11921 + C11922;
    const double C35171 = C35161 + C35162;
    const double C39535 = C39531 + C39532;
    const double C45541 = C45530 + C45531;
    const double C21151 = C21145 * C1281;
    const double C21617 = C21145 * C50000;
    const double C22443 = C22441 * C50000;
    const double C23496 = C22441 * C1281;
    const double C50205 = C50159 - C50203;
    const double C50241 = C50209 - C50226;
    const double C50266 = C50259 - C50229;
    const double C50339 = C50337 - C50320;
    const double C50386 = C50384 - C50367;
    const double C23060 = C22713 + C22712;
    const double C23057 = C22712 + C22713;
    const double C530 =
        2 * ((-((C50096 + C50123 * C50394) * ce) / C49981) / C49935 -
             (ae * (C50120 * C50394 + C50095)) / C50069 + C50068 * C50401) -
        (ae * (C50197 * C50394 + C50140)) / C50069 -
        ((C50141 + C50198 * C50394) * ce) / C50069 +
        C50068 *
            (C50401 - (ae * (C50185 * C50394 + C50131)) / C50069 -
             ((C50132 + C50188 * C50394) * ce) / C50069 +
             C50068 *
                 ((-((C50123 + C50172 * C50394) * ce) / C49981) / C49935 -
                  (ae * (C50169 * C50394 + C50120)) / C50069 +
                  C50068 * ((-(C50261 * C50394) / C49981) / C49935 - C50213)));
    const double C618 =
        (((-2 * C50299 * C50095) / C49981 -
          (C50299 * (C50120 * C50394 + C50095)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50299 * C50096 + C50299 * (C50096 + C50123 * C50394)) * ce) /
            C50069 +
        C50068 * ((-2 * C50300) / C50069 + C50299 * C50401);
    const double C748 =
        (-(C50346 * (C50096 + C50123 * C50394) * ce) / C49981) / C49935 -
        (ae * C50346 * (C50120 * C50394 + C50095)) / C50069 +
        C50068 * C50346 * C50401;
    const double C2697 =
        3 * ((-(C50130 * C50394) / C49981) / C49935 - C50100 / C50069) +
        C50299 * ((-2 * C50300) / C50069 + C50299 * C50401);
    const double C3019 = C50346 * ((-2 * C50300) / C50069 + C50299 * C50401);
    const double C3219 = (-(C50130 * C50394) / C49981) / C49935 -
                         C50100 / C50069 + C50401 * C50441;
    const double C869 =
        2 * ((-((C50096 + C50123 * C50441) * ce) / C49981) / C49935 -
             (ae * (C50120 * C50441 + C50095)) / C50069 + C50068 * C50448) -
        (ae * (C50197 * C50441 + C50140)) / C50069 -
        ((C50141 + C50198 * C50441) * ce) / C50069 +
        C50068 *
            (C50448 - (ae * (C50185 * C50441 + C50131)) / C50069 -
             ((C50132 + C50188 * C50441) * ce) / C50069 +
             C50068 *
                 ((-((C50123 + C50172 * C50441) * ce) / C49981) / C49935 -
                  (ae * (C50169 * C50441 + C50120)) / C50069 +
                  C50068 * ((-(C50261 * C50441) / C49981) / C49935 - C50213)));
    const double C1069 =
        (((-2 * C50346 * C50095) / C49981 -
          (C50346 * (C50120 * C50441 + C50095)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50346 * C50096 + C50346 * (C50096 + C50123 * C50441)) * ce) /
            C50069 +
        C50068 * ((-2 * C50347) / C50069 + C50346 * C50448);
    const double C6017 =
        3 * ((-(C50130 * C50441) / C49981) / C49935 - C50100 / C50069) +
        C50346 * ((-2 * C50347) / C50069 + C50346 * C50448);
    const double C50289 = C50286 + C50258;
    const double C50288 = C50234 - C50285;
    const double C50473 = C50472 - C50320;
    const double C50418 = C50068 * C50416;
    const double C50423 = C50299 * C50416;
    const double C50435 = C50346 * C50416;
    const double C3021 =
        (C50346 *
         ((-3 * C50407) / C49981 +
          C50299 * ((-2 * C50323) / C49981 -
                    (C50299 * (C50245 * C50394 + C50169)) / C49981)) *
         ae) /
            C49935 -
        (C50346 *
         (3 * C50406 +
          C50299 * (2 * C50322 + C50299 * (C50172 + C50248 * C50394))) *
         ce) /
            C50069 +
        C50068 * C50346 *
            (3 * C50416 +
             C50299 * ((-2 * C50324) / C50069 +
                       C50299 * ((-((C50218 * C50219 +
                                     C50076 * bs[8] * std::pow(C50066, 8)) *
                                    C50077 * C50394) /
                                  C49981) /
                                     C49935 -
                                 C50261 / C50069)));
    const double C3220 =
        (-((C50096 + C50123 * C50394 + C50406 * C50441) * ce) / C49981) /
            C49935 -
        (ae * (C50407 * C50441 + C50120 * C50394 + C50095)) / C50069 +
        C50068 * (C50401 + C50416 * C50441);
    const double C3221 =
        C50401 + C50416 * C50441 -
        (ae *
         ((C50262 * C50394 + C50185) * C50441 + C50185 * C50394 + C50131)) /
            C50069 -
        ((C50132 + C50188 * C50394 + (C50188 + C50265 * C50394) * C50441) *
         ce) /
            C50069 +
        C50068 *
            ((-((C50406 + (C50172 + C50248 * C50394) * C50441) * ce) / C49981) /
                 C49935 -
             (ae * ((C50245 * C50394 + C50169) * C50441 + C50407)) / C50069 +
             C50068 *
                 (C50416 +
                  ((-((C50218 * C50219 + C50076 * bs[8] * std::pow(C50066, 8)) *
                      C50077 * C50394) /
                    C49981) /
                       C49935 -
                   C50261 / C50069) *
                      C50441));
    const double C3511 =
        2 * C50346 * C50401 + C50346 * (C50401 + C50416 * C50441);
    const double C50465 = C50068 * C50463;
    const double C50479 = C50346 * C50463;
    const double C25016 = C49961 * C523;
    const double C25012 = C49961 * C514;
    const double C25010 = C49961 * C522;
    const double C25006 = C49961 * C513;
    const double C25000 = C49961 * C521;
    const double C24996 = C49961 * C512;
    const double C24992 = C49961 * C270;
    const double C24988 = C49961 * C260;
    const double C24986 = C49961 * C271;
    const double C24982 = C49961 * C259;
    const double C24976 = C49961 * C272;
    const double C24972 = C49961 * C263;
    const double C25352 = C49961 * C610;
    const double C25350 = C49961 * C607;
    const double C25346 = C49961 * C611;
    const double C25340 = C49961 * C606;
    const double C25477 = C49961 * C2693;
    const double C25473 = C49961 * C2688;
    const double C25655 = C49961 * C3013;
    const double C25651 = C49961 * C3007;
    const double C25649 = C49961 * C718;
    const double C25645 = C49961 * C730;
    const double C25641 = C49961 * C725;
    const double C25637 = C49961 * C737;
    const double C25980 = C49961 * C3215;
    const double C25976 = C49961 * C3210;
    const double C25972 = C49961 * C976;
    const double C25968 = C49961 * C972;
    const double C26595 = C49961 * C736;
    const double C26591 = C49961 * C724;
    const double C26587 = C49961 * C731;
    const double C26583 = C49961 * C719;
    const double C27907 = C49961 * C732;
    const double C27903 = C49961 * C720;
    const double C28129 = C49961 * C394;
    const double C28125 = C49961 * C384;
    const double C28123 = C49961 * C395;
    const double C28119 = C49961 * C383;
    const double C28113 = C49961 * C396;
    const double C28109 = C49961 * C387;
    const double C28892 = C49961 * C975;
    const double C28888 = C49961 * C971;
    const double C28884 = C49961 * C861;
    const double C28882 = C49961 * C851;
    const double C28878 = C49961 * C860;
    const double C28872 = C49961 * C852;
    const double C29110 = C49961 * C3507;
    const double C29106 = C49961 * C3501;
    const double C29258 = C49961 * C1062;
    const double C29254 = C49961 * C1058;
    const double C44980 = C49961 * C862;
    const double C44976 = C49961 * C853;
    const double C45532 = C49961 * C1061;
    const double C45528 = C49961 * C1057;
    const double C45803 = C49961 * C6013;
    const double C45799 = C49961 * C6008;
    const double C117 =
        ((((0 - (C49933 * C49934) / C49935) * ae) / C49935 - (0 * be) / C49944 +
          C49936 / C49935) /
             C49940 -
         ((C49933 * C49957 + 0) * be) / C49935) /
            C49940 +
        ((C49933 * (C49957 / C49940 -
                    ((C49933 * C49961 + C51138) * be) / C49935 + C49954) +
          C51194) *
         ae) /
            C49935 +
        C49961 / C49940 - ((C49933 * C49954 + C50867) * be) / C49935;
    const double C118 =
        (C49957 / C49940 - ((C49933 * C49961 + C51138) * be) / C49935 +
         C49954) /
            C49940 +
        ((C49933 *
              (C49961 / C49940 - ((C49933 * C49954 + C50867) * be) / C49935) +
          C51195) *
         ae) /
            C49935 +
        2 * (C49954 / C49940 - (0 * be) / C49935);
    const double C119 =
        (C49961 / C49940 - ((C49933 * C49954 + C50867) * be) / C49935) /
            C49940 +
        ((C49933 * (C49954 / C49940 - (0 * be) / C49935) + C7938) * ae) /
            C49935;
    const double C7941 =
        C49957 / C49940 - ((C49933 * C49961 + C51138) * be) / C49935 + C49954;
    const double C7942 =
        C49961 / C49940 - ((C49933 * C49954 + C50867) * be) / C49935;
    const double C17051 =
        C49957 / C49940 + ((C49933 * C49961 + C51138) * ae) / C49935 + C49954;
    const double C17052 =
        C49961 / C49940 + ((C49933 * C49954 + C50867) * ae) / C49935;
    const double C2702 = C2387 + C2388;
    const double C2701 = C2385 + C2386;
    const double C2845 = C2729 + C2730;
    const double C14444 = C3054 + C3055;
    const double C14441 = C3055 + C3054;
    const double C14443 = C3052 + C3053;
    const double C14442 = C3053 + C3052;
    const double C3061 = C3050 + C3051;
    const double C14445 = C3051 + C3050;
    const double C6221 = C3396 + C3395;
    const double C14845 = C3395 + C3396;
    const double C6222 = C3394 + C3393;
    const double C14844 = C3393 + C3394;
    const double C6022 = C5463 + C5464;
    const double C6021 = C5461 + C5462;
    const double C6340 = C6049 + C6050;
    const double C20211 = C19983 * C50007;
    const double C20207 = C19977 * C50007;
    const double C20203 = C19971 * C50007;
    const double C20233 = C20227 * C50007;
    const double C21619 = C20446 * C50007;
    const double C21615 = C20448 * C50007;
    const double C21611 = C20450 * C50007;
    const double C22438 = C20677 * C50007;
    const double C22431 = C20675 * C50007;
    const double C22882 = C22709 * C50007;
    const double C22866 = C22267 * C50007;
    const double C22862 = C22261 * C50007;
    const double C22897 = C22889 * C50007;
    const double C39904 = C23183 * C50007;
    const double C121 =
        ((((0 - (C49979 * C49980) / C49981) * ce) / C49981 - (0 * de) / C49990 +
          C49982 / C49981) /
             C49986 -
         ((C49979 * C50003 + 0) * de) / C49981) /
            C49986 -
        ((C49979 * (C50003 / C49986 -
                    ((C49979 * C50007 + C51143) * de) / C49981 + C50000) +
          C51196) *
         de) /
            C49981 +
        C50007 / C49986 - ((C49979 * C50000 + C50885) * de) / C49981;
    const double C122 =
        (C50003 / C49986 - ((C49979 * C50007 + C51143) * de) / C49981 +
         C50000) /
            C49986 -
        ((C49979 *
              (C50007 / C49986 - ((C49979 * C50000 + C50885) * de) / C49981) +
          C51181) *
         de) /
            C49981 +
        2 * (C50000 / C49986 - (0 * de) / C49981);
    const double C123 =
        (C50007 / C49986 - ((C49979 * C50000 + C50885) * de) / C49981) /
            C49986 -
        ((C49979 * (C50000 / C49986 - (0 * de) / C49981) + C1171) * de) /
            C49981;
    const double C1174 =
        C50003 / C49986 - ((C49979 * C50007 + C51143) * de) / C49981 + C50000;
    const double C1175 =
        C50007 / C49986 - ((C49979 * C50000 + C50885) * de) / C49981;
    const double C20990 = C20988 - C20981;
    const double C20989 = C20987 - C20977;
    const double C32721 = C32720 - C21149;
    const double C32918 = C21149 - C32917;
    const double C23712 = C21147 - C23704;
    const double C23710 = C23698 - C21147;
    const double C24222 = C24216 - C23701;
    const double C40762 = C40757 - C24218;
    const double C2703 = C2389 + C2390;
    const double C19999 = C19981 * C258;
    const double C20865 = C19981 * C1176;
    const double C15629 = C4028 + C4029;
    const double C15627 = C4029 + C4028;
    const double C22085 = C22079 * C258;
    const double C23338 = C22079 * C1176;
    const double C6023 = C5465 + C5466;
    const double C22283 = C22271 * C258;
    const double C23874 = C22271 * C1176;
    const double C2704 = C2391 + C2392;
    const double C20000 = C19982 * C253;
    const double C20866 = C19982 * C1171;
    const double C15632 = C4030 + C4031;
    const double C15628 = C4031 + C4030;
    const double C22086 = C22080 * C253;
    const double C23339 = C22080 * C1171;
    const double C6024 = C5467 + C5468;
    const double C22284 = C22272 * C253;
    const double C23875 = C22272 * C1171;
    const double C50202 = C50189 + C50199;
    const double C23066 = C22699 * C17049;
    const double C40015 = C22699 * C51010;
    const double C48359 = C22699 * C51166;
    const double C23056 = C22694 * C51060;
    const double C48357 = C22694 * C51060;
    const double C23713 = C23494 - C23705;
    const double C23711 = C23703 - C23494;
    const double C142 = (4 * (2 * C50102 + C50068 * C50141 + C50122 * ae) +
                         C50068 * (3 * C50141 + C50068 * C50206 + C50187 * ae) +
                         (3 * C50122 + C50068 * C50187) * ae) /
                        C49935;
    const double C268 =
        (C50299 * (3 * C50141 + C50068 * C50206 + C50187 * ae)) / C49935;
    const double C392 =
        (C50346 * (3 * C50141 + C50068 * C50206 + C50187 * ae)) / C49935;
    const double C520 =
        (2 * C50102 + C50068 * C50141 + C50122 * ae + C50206 * C50394) / C49935;
    const double C729 = (C50346 * C50299 * C50206) / C49935;
    const double C859 =
        (2 * C50102 + C50068 * C50141 + C50122 * ae + C50206 * C50441) / C49935;
    const double C20005 = C19987 * C258;
    const double C20871 = C19987 * C1176;
    const double C31490 = C31488 * C258;
    const double C32572 = C31488 * C1176;
    const double C22089 = C22083 * C258;
    const double C23344 = C22083 * C1176;
    const double C39537 = C39535 * C258;
    const double C40526 = C39535 * C1176;
    const double C50207 = C50205 - C50186;
    const double C50250 = C50241 - C50227;
    const double C50284 = C50266 + C50281;
    const double C50341 = C50339 - C50331;
    const double C50388 = C50386 - C50378;
    const double C23176 = C23057 * C51060;
    const double C40014 = C23057 * C51010;
    const double C48460 = C23057 * C51060;
    const double C2372 = C50867 * C530;
    const double C8460 = C7938 * C530;
    const double C17570 = C17048 * C530;
    const double C25019 = C50867 * C530;
    const double C2718 = C2171 * C618;
    const double C2710 = C50867 * C618;
    const double C8580 = C51195 * C618;
    const double C17690 = C17047 * C618;
    const double C19966 = C50862 * C618;
    const double C25353 = C51138 * C618;
    const double C25345 = C50867 * C618;
    const double C3025 = C50867 * C748;
    const double C4025 = C2171 * C748;
    const double C8756 = C51195 * C748;
    const double C17866 = C17047 * C748;
    const double C21134 = C50862 * C748;
    const double C25636 = C50867 * C748;
    const double C26596 = C51138 * C748;
    const double C2851 = C2171 * C2697;
    const double C20218 = C50862 * C2697;
    const double C25478 = C51138 * C2697;
    const double C3045 = C2171 * C3019;
    const double C20430 = C50862 * C3019;
    const double C25656 = C51138 * C3019;
    const double C3390 = C2171 * C3219;
    const double C20670 = C50862 * C3219;
    const double C25981 = C51138 * C3219;
    const double C5448 = C50867 * C869;
    const double C11660 = C7938 * C869;
    const double C34900 = C17048 * C869;
    const double C44983 = C50867 * C869;
    const double C6038 = C2171 * C1069;
    const double C6030 = C50867 * C1069;
    const double C11926 = C51195 * C1069;
    const double C22878 = C50862 * C1069;
    const double C29261 = C50867 * C1069;
    const double C35166 = C17047 * C1069;
    const double C45533 = C51138 * C1069;
    const double C6346 = C2171 * C6017;
    const double C23181 = C50862 * C6017;
    const double C45804 = C51138 * C6017;
    const double C50292 = C50068 * C50289;
    const double C612 =
        (2 * C50299 * C50206 + C50299 * (C50206 + C50289 * C50394)) / C49935;
    const double C738 = (C50346 * (C50206 + C50289 * C50394)) / C49935;
    const double C977 = (C50299 * C50206 + C50299 * C50289 * C50441) / C49935;
    const double C1063 =
        (2 * C50346 * C50206 + C50346 * (C50206 + C50289 * C50441)) / C49935;
    const double C50291 = C50288 - C50263;
    const double C981 =
        2 * ((-((C50305 + C50322 * C50441) * ce) / C49981) / C49935 -
             (ae * (C50323 * C50441 + C50306)) / C50069 + C50068 * C50473) -
        (ae * (C50299 * C50279 * C50441 + C50299 * C50197)) / C50069 -
        ((C50299 * C50198 + C50299 * C50280 * C50441) * ce) / C50069 +
        C50068 *
            (C50473 - (ae * (C50299 * C50262 * C50441 + C50319)) / C50069 -
             ((C50321 + C50299 * C50265 * C50441) * ce) / C50069 +
             C50068 * ((-((C50322 + C50299 * C50248 * C50441) * ce) / C49981) /
                           C49935 -
                       (ae * (C50299 * C50245 * C50441 + C50323)) / C50069 +
                       C50068 * ((-(C50299 *
                                    (C50218 * C50219 +
                                     C50076 * bs[8] * std::pow(C50066, 8)) *
                                    C50077 * C50441) /
                                  C49981) /
                                     C49935 -
                                 C50324 / C50069)));
    const double C982 =
        (-(C50307 * C50441) / C49981) / C49935 - C50300 / C50069 -
        (ae * (C50319 * C50441 + C50299 * C50131)) / C50069 -
        ((C50299 * C50132 + C50321 * C50441) * ce) / C50069 +
        C50068 * ((-((C50305 + C50322 * C50441) * ce) / C49981) / C49935 -
                  (ae * (C50323 * C50441 + C50306)) / C50069 + C50068 * C50473);
    const double C3512 =
        (((-2 * C50346 * C50306) / C49981 -
          (C50346 * (C50323 * C50441 + C50306)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50346 * C50305 + C50346 * (C50305 + C50322 * C50441)) * ce) /
            C50069 +
        C50068 * ((-2 * C50433) / C50069 + C50346 * C50473);
    const double C6208 =
        (((-3 * (C50323 * C50441 + C50306)) / C49981 +
          C50346 * ((-2 * C50487) / C49981 -
                    (C50346 * (C50299 * C50245 * C50441 + C50323)) / C49981)) *
         ae) /
            C49935 -
        ((3 * (C50305 + C50322 * C50441) +
          C50346 *
              (2 * C50486 + C50346 * (C50322 + C50299 * C50248 * C50441))) *
         ce) /
            C50069 +
        C50068 *
            (3 * C50473 +
             C50346 * ((-2 * C50488) / C50069 +
                       C50346 * ((-(C50299 *
                                    (C50218 * C50219 +
                                     C50076 * bs[8] * std::pow(C50066, 8)) *
                                    C50077 * C50441) /
                                  C49981) /
                                     C49935 -
                                 C50324 / C50069)));
    const double C6209 =
        3 * ((-(C50307 * C50441) / C49981) / C49935 - C50300 / C50069) +
        C50346 * ((-2 * C50433) / C50069 + C50346 * C50473);
    const double C6845 =
        (-2 * C50433) / C50069 + C50346 * C50473 +
        (((-2 * C50346 * C50319) / C49981 -
          (C50346 * (C50299 * C50262 * C50441 + C50319)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50346 * C50321 + C50346 * (C50321 + C50299 * C50265 * C50441)) *
         ce) /
            C50069 +
        C50068 *
            ((((-2 * C50487) / C49981 -
               (C50346 * (C50299 * C50245 * C50441 + C50323)) / C49981) *
              ae) /
                 C49935 -
             ((2 * C50486 + C50346 * (C50322 + C50299 * C50248 * C50441)) *
              ce) /
                 C50069 +
             C50068 * ((-2 * C50488) / C50069 +
                       C50346 * ((-(C50299 *
                                    (C50218 * C50219 +
                                     C50076 * bs[8] * std::pow(C50066, 8)) *
                                    C50077 * C50441) /
                                  C49981) /
                                     C49935 -
                                 C50324 / C50069)));
    const double C23174 =
        4 * ((-2 * C50433) / C50069 + C50346 * C50473) +
        C50346 *
            (3 * C50473 +
             C50346 * ((-2 * C50488) / C50069 +
                       C50346 * ((-(C50299 *
                                    (C50218 * C50219 +
                                     C50076 * bs[8] * std::pow(C50066, 8)) *
                                    C50077 * C50441) /
                                  C49981) /
                                     C49935 -
                                 C50324 / C50069)));
    const double C50420 = C50419 + C50418;
    const double C50425 = C50424 + C50423;
    const double C746 =
        2 * ((-(C50346 * C50406 * ce) / C49981) / C49935 -
             (ae * C50346 * C50407) / C50069 + C50068 * C50435) -
        (ae * C50346 * (C50279 * C50394 + C50197)) / C50069 -
        (C50346 * (C50198 + C50280 * C50394) * ce) / C50069 +
        C50068 *
            (C50435 - (ae * C50346 * (C50262 * C50394 + C50185)) / C50069 -
             (C50346 * (C50188 + C50265 * C50394) * ce) / C50069 +
             C50068 * ((-(C50346 * (C50172 + C50248 * C50394) * ce) / C49981) /
                           C49935 -
                       (ae * C50346 * (C50245 * C50394 + C50169)) / C50069 +
                       C50068 * C50346 *
                           ((-((C50218 * C50219 +
                                C50076 * bs[8] * std::pow(C50066, 8)) *
                               C50077 * C50394) /
                             C49981) /
                                C49935 -
                            C50261 / C50069)));
    const double C747 =
        C50346 * C50401 - (ae * C50346 * (C50185 * C50394 + C50131)) / C50069 -
        (C50346 * (C50132 + C50188 * C50394) * ce) / C50069 +
        C50068 * ((-(C50346 * C50406 * ce) / C49981) / C49935 -
                  (ae * C50346 * C50407) / C50069 + C50068 * C50435);
    const double C3510 =
        (((-2 * C50346 * C50407) / C49981 -
          (C50346 * ((C50245 * C50394 + C50169) * C50441 + C50407)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50346 * C50406 +
          C50346 * (C50406 + (C50172 + C50248 * C50394) * C50441)) *
         ce) /
            C50069 +
        C50068 *
            (2 * C50435 +
             C50346 *
                 (C50416 +
                  ((-((C50218 * C50219 + C50076 * bs[8] * std::pow(C50066, 8)) *
                      C50077 * C50394) /
                    C49981) /
                       C49935 -
                   C50261 / C50069) *
                      C50441));
    const double C23053 =
        3 * (C50401 + C50416 * C50441) +
        C50346 *
            (2 * C50435 +
             C50346 *
                 (C50416 +
                  ((-((C50218 * C50219 + C50076 * bs[8] * std::pow(C50066, 8)) *
                      C50077 * C50394) /
                    C49981) /
                       C49935 -
                   C50261 / C50069) *
                      C50441));
    const double C3392 = C50867 * C3220;
    const double C22440 = C50862 * C3220;
    const double C25983 = C50867 * C3220;
    const double C22706 = C50862 * C3511;
    const double C50467 = C50466 + C50465;
    const double C50481 = C50480 + C50479;
    const double C25042 = C25016 + C25017;
    const double C25040 = C25012 + C25013;
    const double C25039 = C25010 + C25011;
    const double C25037 = C25006 + C25007;
    const double C25034 = C25000 + C25001;
    const double C25032 = C24996 + C24997;
    const double C25030 = C24992 + C24993;
    const double C25028 = C24988 + C24989;
    const double C25027 = C24986 + C24987;
    const double C25025 = C24982 + C24983;
    const double C25022 = C24976 + C24977;
    const double C25020 = C24972 + C24973;
    const double C25365 = C25350 + C25351;
    const double C25363 = C25346 + C25347;
    const double C25360 = C25340 + C25341;
    const double C25484 = C25473 + C25474;
    const double C25667 = C25651 + C25652;
    const double C25666 = C25649 + C25650;
    const double C25664 = C25645 + C25646;
    const double C25662 = C25641 + C25642;
    const double C25660 = C25637 + C25638;
    const double C25988 = C25976 + C25977;
    const double C25986 = C25972 + C25973;
    const double C25984 = C25968 + C25969;
    const double C26603 = C26591 + C26592;
    const double C26601 = C26587 + C26588;
    const double C26599 = C26583 + C26584;
    const double C27913 = C27907 + C27908;
    const double C27911 = C27903 + C27904;
    const double C28143 = C28129 + C28130;
    const double C28141 = C28125 + C28126;
    const double C28140 = C28123 + C28124;
    const double C28138 = C28119 + C28120;
    const double C28135 = C28113 + C28114;
    const double C28133 = C28109 + C28110;
    const double C28906 = C28892 + C28893;
    const double C28904 = C28888 + C28889;
    const double C28902 = C28884 + C28885;
    const double C28901 = C28882 + C28883;
    const double C28899 = C28878 + C28879;
    const double C28896 = C28872 + C28873;
    const double C29120 = C29110 + C29111;
    const double C29118 = C29106 + C29107;
    const double C29264 = C29258 + C29259;
    const double C29262 = C29254 + C29255;
    const double C44986 = C44980 + C44981;
    const double C44984 = C44976 + C44977;
    const double C45540 = C45528 + C45529;
    const double C45809 = C45799 + C45800;
    const double C8121 = C7941 * C270;
    const double C8115 = C7941 * C260;
    const double C8113 = C7941 * C271;
    const double C8107 = C7941 * C259;
    const double C8097 = C7941 * C272;
    const double C8091 = C7941 * C263;
    const double C8455 = C7941 * C522;
    const double C8453 = C7941 * C512;
    const double C8447 = C7941 * C521;
    const double C8437 = C7941 * C513;
    const double C8577 = C7941 * C611;
    const double C8571 = C7941 * C607;
    const double C8753 = C7941 * C737;
    const double C8747 = C7941 * C725;
    const double C8745 = C7941 * C718;
    const double C8739 = C7941 * C730;
    const double C9069 = C7941 * C976;
    const double C9063 = C7941 * C972;
    const double C9671 = C7941 * C731;
    const double C9665 = C7941 * C719;
    const double C11077 = C7941 * C394;
    const double C11071 = C7941 * C384;
    const double C11069 = C7941 * C395;
    const double C11063 = C7941 * C383;
    const double C11053 = C7941 * C396;
    const double C11047 = C7941 * C387;
    const double C11655 = C7941 * C861;
    const double C11653 = C7941 * C851;
    const double C11647 = C7941 * C860;
    const double C11637 = C7941 * C852;
    const double C11923 = C7941 * C1062;
    const double C11917 = C7941 * C1058;
    const double C8123 = C7942 * C269;
    const double C8117 = C7942 * C261;
    const double C8111 = C7942 * C270;
    const double C8105 = C7942 * C260;
    const double C8099 = C7942 * C271;
    const double C8093 = C7942 * C259;
    const double C8457 = C7942 * C523;
    const double C8451 = C7942 * C513;
    const double C8445 = C7942 * C522;
    const double C8439 = C7942 * C514;
    const double C8579 = C7942 * C610;
    const double C8573 = C7942 * C606;
    const double C8755 = C7942 * C736;
    const double C8749 = C7942 * C724;
    const double C8743 = C7942 * C719;
    const double C8737 = C7942 * C731;
    const double C9071 = C7942 * C975;
    const double C9065 = C7942 * C971;
    const double C9673 = C7942 * C732;
    const double C9667 = C7942 * C720;
    const double C11079 = C7942 * C393;
    const double C11073 = C7942 * C385;
    const double C11067 = C7942 * C394;
    const double C11061 = C7942 * C384;
    const double C11055 = C7942 * C395;
    const double C11049 = C7942 * C383;
    const double C11657 = C7942 * C862;
    const double C11651 = C7942 * C852;
    const double C11645 = C7942 * C861;
    const double C11639 = C7942 * C853;
    const double C11925 = C7942 * C1061;
    const double C11919 = C7942 * C1057;
    const double C17231 = C17051 * C270;
    const double C17225 = C17051 * C260;
    const double C17223 = C17051 * C271;
    const double C17217 = C17051 * C259;
    const double C17207 = C17051 * C272;
    const double C17201 = C17051 * C263;
    const double C17565 = C17051 * C522;
    const double C17563 = C17051 * C512;
    const double C17557 = C17051 * C521;
    const double C17547 = C17051 * C513;
    const double C17687 = C17051 * C611;
    const double C17681 = C17051 * C607;
    const double C17863 = C17051 * C737;
    const double C17857 = C17051 * C725;
    const double C17855 = C17051 * C718;
    const double C17849 = C17051 * C730;
    const double C18179 = C17051 * C976;
    const double C18173 = C17051 * C972;
    const double C18781 = C17051 * C731;
    const double C18775 = C17051 * C719;
    const double C34317 = C17051 * C394;
    const double C34311 = C17051 * C384;
    const double C34309 = C17051 * C395;
    const double C34303 = C17051 * C383;
    const double C34293 = C17051 * C396;
    const double C34287 = C17051 * C387;
    const double C34895 = C17051 * C861;
    const double C34893 = C17051 * C851;
    const double C34887 = C17051 * C860;
    const double C34877 = C17051 * C852;
    const double C35163 = C17051 * C1062;
    const double C35157 = C17051 * C1058;
    const double C17233 = C17052 * C269;
    const double C17227 = C17052 * C261;
    const double C17221 = C17052 * C270;
    const double C17215 = C17052 * C260;
    const double C17209 = C17052 * C271;
    const double C17203 = C17052 * C259;
    const double C17567 = C17052 * C523;
    const double C17561 = C17052 * C513;
    const double C17555 = C17052 * C522;
    const double C17549 = C17052 * C514;
    const double C17689 = C17052 * C610;
    const double C17683 = C17052 * C606;
    const double C17865 = C17052 * C736;
    const double C17859 = C17052 * C724;
    const double C17853 = C17052 * C719;
    const double C17847 = C17052 * C731;
    const double C18181 = C17052 * C975;
    const double C18175 = C17052 * C971;
    const double C18783 = C17052 * C732;
    const double C18777 = C17052 * C720;
    const double C34319 = C17052 * C393;
    const double C34313 = C17052 * C385;
    const double C34307 = C17052 * C394;
    const double C34301 = C17052 * C384;
    const double C34295 = C17052 * C395;
    const double C34289 = C17052 * C383;
    const double C34897 = C17052 * C862;
    const double C34891 = C17052 * C852;
    const double C34885 = C17052 * C861;
    const double C34879 = C17052 * C853;
    const double C35165 = C17052 * C1061;
    const double C35159 = C17052 * C1057;
    const double C2722 = C2702 * C51143;
    const double C2843 = C2702 * C50880;
    const double C3808 = C2702 * C1275;
    const double C2721 = C2701 * C50007;
    const double C2842 = C2701 * C603;
    const double C3807 = C2701 * C1280;
    const double C2856 = C2845 * C603;
    const double C14450 = C14444 * C603;
    const double C15631 = C14444 * C1280;
    const double C16553 = C14444 * C50007;
    const double C14447 = C14441 * C603;
    const double C15625 = C14441 * C1280;
    const double C16547 = C14441 * C50007;
    const double C14449 = C14443 * C50880;
    const double C15630 = C14443 * C1275;
    const double C16552 = C14443 * C51143;
    const double C14448 = C14442 * C50880;
    const double C15626 = C14442 * C1275;
    const double C16548 = C14442 * C51143;
    const double C3063 = C3061 * C603;
    const double C14451 = C14445 * C603;
    const double C6228 = C6221 * C50880;
    const double C14847 = C14845 * C50880;
    const double C6229 = C6222 * C603;
    const double C14846 = C14844 * C603;
    const double C6042 = C6022 * C51143;
    const double C6212 = C6022 * C50880;
    const double C7346 = C6022 * C1275;
    const double C6041 = C6021 * C50007;
    const double C6211 = C6021 * C603;
    const double C7345 = C6021 * C1280;
    const double C6350 = C6340 * C603;
    const double C20224 = C20211 + C20212;
    const double C20223 = C20207 + C20208;
    const double C31784 = C21615 + C21614;
    const double C33600 = C21614 + C21615;
    const double C24421 = C21610 + C21611;
    const double C24420 = C21611 + C21610;
    const double C22870 = C22431 + C22432;
    const double C24422 = C22432 + C22431;
    const double C22885 = C22866 + C22867;
    const double C39900 = C22897 + C22896;
    const double C20867 = C19983 * C1174;
    const double C20861 = C19977 * C1174;
    const double C20855 = C19971 * C1174;
    const double C23340 = C20675 * C1174;
    const double C23334 = C20450 * C1174;
    const double C23870 = C22267 * C1174;
    const double C23864 = C22261 * C1174;
    const double C32568 = C20448 * C1174;
    const double C40522 = C22889 * C1174;
    const double C20869 = C19985 * C1175;
    const double C20863 = C19979 * C1175;
    const double C20857 = C19973 * C1175;
    const double C23342 = C22081 * C1175;
    const double C23336 = C21141 * C1175;
    const double C23872 = C22269 * C1175;
    const double C23866 = C22263 * C1175;
    const double C32570 = C21143 * C1175;
    const double C40524 = C22887 * C1175;
    const double C20991 = C20989 - C20978;
    const double C23716 = C23712 + C21148;
    const double C23714 = C23710 - C21148;
    const double C24223 = C24222 - C23702;
    const double C2723 = C2703 * C50000;
    const double C3809 = C2703 * C1281;
    const double C15636 = C15629 * C1281;
    const double C16551 = C15629 * C50000;
    const double C15634 = C15627 * C1281;
    const double C16549 = C15627 * C50000;
    const double C6043 = C6023 * C50000;
    const double C7347 = C6023 * C1281;
    const double C2724 = C2704 * C50885;
    const double C3810 = C2704 * C50885;
    const double C15638 = C15632 * C50885;
    const double C16554 = C15632 * C50885;
    const double C15635 = C15628 * C50885;
    const double C16550 = C15628 * C50885;
    const double C6044 = C6024 * C50885;
    const double C7348 = C6024 * C50885;
    const double C23071 = C23067 + C23056;
    const double C48360 = C48356 + C48357;
    const double C23717 = C23713 + C23495;
    const double C23715 = C23711 - C23495;
    const double C8120 = C7938 * C268;
    const double C17230 = C17048 * C268;
    const double C11076 = C7938 * C392;
    const double C34316 = C17048 * C392;
    const double C2368 = C50867 * C520;
    const double C8442 = C7938 * C520;
    const double C17552 = C17048 * C520;
    const double C25015 = C50867 * C520;
    const double C9670 = C7938 * C729;
    const double C13720 = C50867 * C729;
    const double C18780 = C17048 * C729;
    const double C27906 = C50867 * C729;
    const double C5444 = C50867 * C859;
    const double C11642 = C7938 * C859;
    const double C34882 = C17048 * C859;
    const double C44979 = C50867 * C859;
    const double C151 =
        4 * (2 * C50139 - (ae * C50140) / C50069 - (C50141 * ce) / C50069 +
             C50068 * C50202) +
        (((-3 * C50140) / C49981 + C50068 * C50207 - (C50187 * ce) / C49981) *
         ae) /
            C49935 -
        ((3 * C50141 + C50068 * C50206 + C50187 * ae) * ce) / C50069 +
        C50068 *
            (3 * C50202 + (C50207 * ae) / C49935 - (C50206 * ce) / C50069 +
             C50068 *
                 (2 * C50196 - (ae * C50197) / C50069 - (C50198 * ce) / C50069 +
                  C50068 * ((-(ae * C50185) / C49981) / C49935 -
                            C50184 / C50069 - (C50188 * ce) / C50069 +
                            C50068 * ((-(C50172 * ce) / C49981) / C49935 -
                                      (ae * C50169) / C50069 -
                                      (C50068 *
                                       (C50149 * C50150 +
                                        C50076 * bs[7] * std::pow(C50072, 7)) *
                                       C50077) /
                                          C50069))));
    const double C281 =
        3 * ((-(ae * C50299 * C50131) / C49981) / C49935 - C50300 / C50069 -
             (C50299 * C50132 * ce) / C50069 + C50068 * C50317) +
        (C50299 * C50207 * ae) / C49935 - (C50299 * C50206 * ce) / C50069 +
        C50068 *
            (2 * C50317 - (ae * C50299 * C50197) / C50069 -
             (C50299 * C50198 * ce) / C50069 +
             C50068 * ((-(ae * C50299 * C50185) / C49981) / C49935 -
                       C50307 / C50069 - (C50299 * C50188 * ce) / C50069 +
                       C50068 * ((-(C50299 * C50172 * ce) / C49981) / C49935 -
                                 (ae * C50299 * C50169) / C50069 -
                                 (C50068 * C50299 * C50261) / C50069)));
    const double C405 =
        3 * ((-(ae * C50346 * C50131) / C49981) / C49935 - C50347 / C50069 -
             (C50346 * C50132 * ce) / C50069 + C50068 * C50364) +
        (C50346 * C50207 * ae) / C49935 - (C50346 * C50206 * ce) / C50069 +
        C50068 *
            (2 * C50364 - (ae * C50346 * C50197) / C50069 -
             (C50346 * C50198 * ce) / C50069 +
             C50068 * ((-(ae * C50346 * C50185) / C49981) / C49935 -
                       C50354 / C50069 - (C50346 * C50188 * ce) / C50069 +
                       C50068 * ((-(C50346 * C50172 * ce) / C49981) / C49935 -
                                 (ae * C50346 * C50169) / C50069 -
                                 (C50068 * C50346 * C50261) / C50069)));
    const double C143 =
        4 * ((-2 * C50101) / C49981 - (C50068 * C50140) / C49981 -
             (C50122 * ce) / C49981) +
        C50068 * ((-3 * C50140) / C49981 + C50068 * C50207 -
                  (C50187 * ce) / C49981) -
        ((3 * C50122 + C50068 * C50187) * ce) / C49981;
    const double C274 = C50299 * ((-3 * C50140) / C49981 + C50068 * C50207 -
                                  (C50187 * ce) / C49981);
    const double C398 = C50346 * ((-3 * C50140) / C49981 + C50068 * C50207 -
                                  (C50187 * ce) / C49981);
    const double C524 = (-2 * C50101) / C49981 - (C50068 * C50140) / C49981 -
                        (C50122 * ce) / C49981 + C50207 * C50394;
    const double C733 = C50346 * C50299 * C50207;
    const double C863 = (-2 * C50101) / C49981 - (C50068 * C50140) / C49981 -
                        (C50122 * ce) / C49981 + C50207 * C50441;
    const double C50287 = C50068 * C50284;
    const double C50344 = C50341 + C50343;
    const double C50391 = C50388 + C50390;
    const double C23185 = C23176 + C23182;
    const double C48462 = C48460 + C48461;
    const double C2731 = C2717 + C2718;
    const double C2727 = C2709 + C2710;
    const double C19986 = C19965 + C19966;
    const double C25366 = C25352 + C25353;
    const double C25362 = C25344 + C25345;
    const double C3048 = C3024 + C3025;
    const double C4034 = C4024 + C4025;
    const double C21144 = C21133 + C21134;
    const double C25659 = C25635 + C25636;
    const double C26605 = C26595 + C26596;
    const double C2859 = C2850 + C2851;
    const double C20226 = C20217 + C20218;
    const double C25486 = C25477 + C25478;
    const double C3058 = C3044 + C3045;
    const double C20445 = C20429 + C20430;
    const double C25669 = C25655 + C25656;
    const double C3399 = C3389 + C3390;
    const double C20678 = C20669 + C20670;
    const double C25990 = C25980 + C25981;
    const double C6051 = C6037 + C6038;
    const double C6047 = C6029 + C6030;
    const double C22890 = C22877 + C22878;
    const double C29265 = C29260 + C29261;
    const double C45542 = C45532 + C45533;
    const double C6353 = C6345 + C6346;
    const double C23184 = C23180 + C23181;
    const double C45811 = C45803 + C45804;
    const double C50294 = C50224 + C50292;
    const double C50293 = C50068 * C50291;
    const double C1415 =
        3 * ((-(ae * C50346 * C50319) / C49981) / C49935 - C50433 / C50069 -
             (C50346 * C50321 * ce) / C50069 + C50068 * C50498) +
        (C50346 * C50299 * C50291 * ae) / C49935 -
        (C50346 * C50299 * C50289 * ce) / C50069 +
        C50068 *
            (2 * C50498 - (ae * C50346 * C50299 * C50279) / C50069 -
             (C50346 * C50299 * C50280 * ce) / C50069 +
             C50068 *
                 ((-(ae * C50346 * C50299 * C50262) / C49981) / C49935 -
                  C50488 / C50069 - (C50346 * C50299 * C50265 * ce) / C50069 +
                  C50068 *
                      ((-(C50346 * C50299 * C50248 * ce) / C49981) / C49935 -
                       (ae * C50346 * C50299 * C50245) / C50069 -
                       (C50068 * C50346 * C50299 *
                        (C50218 * C50219 +
                         C50076 * bs[8] * std::pow(C50066, 8)) *
                        C50077) /
                           C50069)));
    const double C608 =
        2 * C50299 * C50207 + C50299 * (C50207 + C50291 * C50394);
    const double C734 = C50346 * (C50207 + C50291 * C50394);
    const double C973 = C50299 * C50207 + C50299 * C50291 * C50441;
    const double C1059 =
        2 * C50346 * C50207 + C50346 * (C50207 + C50291 * C50441);
    const double C6854 = C50867 * C982;
    const double C9074 = C7938 * C982;
    const double C18184 = C17048 * C982;
    const double C22078 = C50862 * C982;
    const double C28895 = C50867 * C982;
    const double C6220 = C50867 * C3512;
    const double C22884 = C50862 * C3512;
    const double C29113 = C50867 * C3512;
    const double C23064 = C50862 * C6209;
    const double C531 =
        3 * (C50401 - (ae * (C50185 * C50394 + C50131)) / C50069 -
             ((C50132 + C50188 * C50394) * ce) / C50069 + C50068 * C50420) +
        ((C50207 + C50291 * C50394) * ae) / C49935 -
        ((C50206 + C50289 * C50394) * ce) / C50069 +
        C50068 *
            (2 * C50420 - (ae * (C50279 * C50394 + C50197)) / C50069 -
             ((C50198 + C50280 * C50394) * ce) / C50069 +
             C50068 *
                 (C50416 - (ae * (C50262 * C50394 + C50185)) / C50069 -
                  ((C50188 + C50265 * C50394) * ce) / C50069 +
                  C50068 *
                      ((-((C50172 + C50248 * C50394) * ce) / C49981) / C49935 -
                       (ae * (C50245 * C50394 + C50169)) / C50069 +
                       C50068 * ((-((C50218 * C50219 +
                                     C50076 * bs[8] * std::pow(C50066, 8)) *
                                    C50077 * C50394) /
                                  C49981) /
                                     C49935 -
                                 C50261 / C50069))));
    const double C616 =
        2 * ((((-2 * C50306) / C49981 - (C50299 * C50407) / C49981) * ae) /
                 C49935 -
             ((2 * C50305 + C50299 * C50406) * ce) / C50069 + C50068 * C50425) +
        (((-2 * C50299 * C50197) / C49981 -
          (C50299 * (C50279 * C50394 + C50197)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50299 * C50198 + C50299 * (C50198 + C50280 * C50394)) * ce) /
            C50069 +
        C50068 *
            (C50425 +
             (((-2 * C50319) / C49981 -
               (C50299 * (C50262 * C50394 + C50185)) / C49981) *
              ae) /
                 C49935 -
             ((2 * C50321 + C50299 * (C50188 + C50265 * C50394)) * ce) /
                 C50069 +
             C50068 *
                 ((((-2 * C50323) / C49981 -
                    (C50299 * (C50245 * C50394 + C50169)) / C49981) *
                   ae) /
                      C49935 -
                  ((2 * C50322 + C50299 * (C50172 + C50248 * C50394)) * ce) /
                      C50069 +
                  C50068 *
                      ((-2 * C50324) / C50069 +
                       C50299 * ((-((C50218 * C50219 +
                                     C50076 * bs[8] * std::pow(C50066, 8)) *
                                    C50077 * C50394) /
                                  C49981) /
                                     C49935 -
                                 C50261 / C50069))));
    const double C617 =
        (-2 * C50300) / C50069 + C50299 * C50401 +
        (((-2 * C50299 * C50131) / C49981 -
          (C50299 * (C50185 * C50394 + C50131)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50299 * C50132 + C50299 * (C50132 + C50188 * C50394)) * ce) /
            C50069 +
        C50068 *
            ((((-2 * C50306) / C49981 - (C50299 * C50407) / C49981) * ae) /
                 C49935 -
             ((2 * C50305 + C50299 * C50406) * ce) / C50069 + C50068 * C50425);
    const double C2698 =
        (((-3 * (C50120 * C50394 + C50095)) / C49981 +
          C50299 * ((-2 * C50306) / C49981 - (C50299 * C50407) / C49981)) *
         ae) /
            C49935 -
        ((3 * (C50096 + C50123 * C50394) +
          C50299 * (2 * C50305 + C50299 * C50406)) *
         ce) /
            C50069 +
        C50068 * (3 * C50401 + C50299 * C50425);
    const double C2699 =
        3 * C50401 + C50299 * C50425 +
        (((-3 * (C50185 * C50394 + C50131)) / C49981 +
          C50299 * ((-2 * C50319) / C49981 -
                    (C50299 * (C50262 * C50394 + C50185)) / C49981)) *
         ae) /
            C49935 -
        ((3 * (C50132 + C50188 * C50394) +
          C50299 * (2 * C50321 + C50299 * (C50188 + C50265 * C50394))) *
         ce) /
            C50069 +
        C50068 *
            ((((-3 * C50407) / C49981 +
               C50299 * ((-2 * C50323) / C49981 -
                         (C50299 * (C50245 * C50394 + C50169)) / C49981)) *
              ae) /
                 C49935 -
             ((3 * C50406 +
               C50299 * (2 * C50322 + C50299 * (C50172 + C50248 * C50394))) *
              ce) /
                 C50069 +
             C50068 *
                 (3 * C50416 +
                  C50299 *
                      ((-2 * C50324) / C50069 +
                       C50299 * ((-((C50218 * C50219 +
                                     C50076 * bs[8] * std::pow(C50066, 8)) *
                                    C50077 * C50394) /
                                  C49981) /
                                     C49935 -
                                 C50261 / C50069))));
    const double C2839 =
        ((4 * ((-2 * C50306) / C49981 - (C50299 * C50407) / C49981) +
          C50299 *
              ((-3 * C50407) / C49981 +
               C50299 * ((-2 * C50323) / C49981 -
                         (C50299 * (C50245 * C50394 + C50169)) / C49981))) *
         ae) /
            C49935 -
        ((4 * (2 * C50305 + C50299 * C50406) +
          C50299 *
              (3 * C50406 +
               C50299 * (2 * C50322 + C50299 * (C50172 + C50248 * C50394)))) *
         ce) /
            C50069 +
        C50068 * (4 * C50425 +
                  C50299 * (3 * C50416 +
                            C50299 * ((-2 * C50324) / C50069 +
                                      C50299 * ((-((C50218 * C50219 +
                                                    C50076 * bs[8] *
                                                        std::pow(C50066, 8)) *
                                                   C50077 * C50394) /
                                                 C49981) /
                                                    C49935 -
                                                C50261 / C50069))));
    const double C2840 = 4 * ((-2 * C50300) / C50069 + C50299 * C50401) +
                         C50299 * (3 * C50401 + C50299 * C50425);
    const double C3020 =
        (C50346 * ((-2 * C50306) / C49981 - (C50299 * C50407) / C49981) * ae) /
            C49935 -
        (C50346 * (2 * C50305 + C50299 * C50406) * ce) / C50069 +
        C50068 * C50346 * C50425;
    const double C3022 = C50346 * (3 * C50401 + C50299 * C50425);
    const double C3374 =
        (((-2 * C50306) / C49981 - (C50299 * C50407) / C49981 +
          ((-2 * C50323) / C49981 -
           (C50299 * (C50245 * C50394 + C50169)) / C49981) *
              C50441) *
         ae) /
            C49935 -
        ((2 * C50305 + C50299 * C50406 +
          (2 * C50322 + C50299 * (C50172 + C50248 * C50394)) * C50441) *
         ce) /
            C50069 +
        C50068 *
            (C50425 +
             ((-2 * C50324) / C50069 +
              C50299 *
                  ((-((C50218 * C50219 + C50076 * bs[8] * std::pow(C50066, 8)) *
                      C50077 * C50394) /
                    C49981) /
                       C49935 -
                   C50261 / C50069)) *
                 C50441);
    const double C3375 =
        (-2 * C50300) / C50069 + C50299 * C50401 + C50425 * C50441;
    const double C4010 =
        C50346 * C50425 +
        (C50346 *
         ((-2 * C50319) / C49981 -
          (C50299 * (C50262 * C50394 + C50185)) / C49981) *
         ae) /
            C49935 -
        (C50346 * (2 * C50321 + C50299 * (C50188 + C50265 * C50394)) * ce) /
            C50069 +
        C50068 * ((C50346 *
                   ((-2 * C50323) / C49981 -
                    (C50299 * (C50245 * C50394 + C50169)) / C49981) *
                   ae) /
                      C49935 -
                  (C50346 * (2 * C50322 + C50299 * (C50172 + C50248 * C50394)) *
                   ce) /
                      C50069 +
                  C50068 * C50346 *
                      ((-2 * C50324) / C50069 +
                       C50299 * ((-((C50218 * C50219 +
                                     C50076 * bs[8] * std::pow(C50066, 8)) *
                                    C50077 * C50394) /
                                  C49981) /
                                     C49935 -
                                 C50261 / C50069)));
    const double C20305 =
        5 * (3 * C50401 + C50299 * C50425) +
        C50299 * (4 * C50425 +
                  C50299 * (3 * C50416 +
                            C50299 * ((-2 * C50324) / C50069 +
                                      C50299 * ((-((C50218 * C50219 +
                                                    C50076 * bs[8] *
                                                        std::pow(C50066, 8)) *
                                                   C50077 * C50394) /
                                                 C49981) /
                                                    C49935 -
                                                C50261 / C50069))));
    const double C20427 =
        C50346 *
        (4 * C50425 +
         C50299 *
             (3 * C50416 +
              C50299 * ((-2 * C50324) / C50069 +
                        C50299 * ((-((C50218 * C50219 +
                                      C50076 * bs[8] * std::pow(C50066, 8)) *
                                     C50077 * C50394) /
                                   C49981) /
                                      C49935 -
                                  C50261 / C50069))));
    const double C20661 =
        3 * C50401 + C50299 * C50425 +
        (3 * C50416 +
         C50299 *
             ((-2 * C50324) / C50069 +
              C50299 *
                  ((-((C50218 * C50219 + C50076 * bs[8] * std::pow(C50066, 8)) *
                      C50077 * C50394) /
                    C49981) /
                       C49935 -
                   C50261 / C50069))) *
            C50441;
    const double C20755 =
        2 * C50346 * C50425 +
        C50346 *
            (C50425 +
             ((-2 * C50324) / C50069 +
              C50299 *
                  ((-((C50218 * C50219 + C50076 * bs[8] * std::pow(C50066, 8)) *
                      C50077 * C50394) /
                    C49981) /
                       C49935 -
                   C50261 / C50069)) *
                 C50441);
    const double C4027 = C50867 * C747;
    const double C8758 = C7938 * C747;
    const double C17868 = C17048 * C747;
    const double C26598 = C50867 * C747;
    const double C31487 = C50862 * C747;
    const double C3400 = C3391 + C3392;
    const double C22442 = C22439 + C22440;
    const double C25991 = C25982 + C25983;
    const double C22711 = C22705 + C22706;
    const double C870 =
        3 * (C50448 - (ae * (C50185 * C50441 + C50131)) / C50069 -
             ((C50132 + C50188 * C50441) * ce) / C50069 + C50068 * C50467) +
        ((C50207 + C50291 * C50441) * ae) / C49935 -
        ((C50206 + C50289 * C50441) * ce) / C50069 +
        C50068 *
            (2 * C50467 - (ae * (C50279 * C50441 + C50197)) / C50069 -
             ((C50198 + C50280 * C50441) * ce) / C50069 +
             C50068 *
                 (C50463 - (ae * (C50262 * C50441 + C50185)) / C50069 -
                  ((C50188 + C50265 * C50441) * ce) / C50069 +
                  C50068 *
                      ((-((C50172 + C50248 * C50441) * ce) / C49981) / C49935 -
                       (ae * (C50245 * C50441 + C50169)) / C50069 +
                       C50068 * ((-((C50218 * C50219 +
                                     C50076 * bs[8] * std::pow(C50066, 8)) *
                                    C50077 * C50441) /
                                  C49981) /
                                     C49935 -
                                 C50261 / C50069))));
    const double C1067 =
        2 * ((((-2 * C50353) / C49981 - (C50346 * C50454) / C49981) * ae) /
                 C49935 -
             ((2 * C50352 + C50346 * C50453) * ce) / C50069 + C50068 * C50481) +
        (((-2 * C50346 * C50197) / C49981 -
          (C50346 * (C50279 * C50441 + C50197)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50346 * C50198 + C50346 * (C50198 + C50280 * C50441)) * ce) /
            C50069 +
        C50068 *
            (C50481 +
             (((-2 * C50366) / C49981 -
               (C50346 * (C50262 * C50441 + C50185)) / C49981) *
              ae) /
                 C49935 -
             ((2 * C50368 + C50346 * (C50188 + C50265 * C50441)) * ce) /
                 C50069 +
             C50068 *
                 ((((-2 * C50370) / C49981 -
                    (C50346 * (C50245 * C50441 + C50169)) / C49981) *
                   ae) /
                      C49935 -
                  ((2 * C50369 + C50346 * (C50172 + C50248 * C50441)) * ce) /
                      C50069 +
                  C50068 *
                      ((-2 * C50371) / C50069 +
                       C50346 * ((-((C50218 * C50219 +
                                     C50076 * bs[8] * std::pow(C50066, 8)) *
                                    C50077 * C50441) /
                                  C49981) /
                                     C49935 -
                                 C50261 / C50069))));
    const double C1068 =
        (-2 * C50347) / C50069 + C50346 * C50448 +
        (((-2 * C50346 * C50131) / C49981 -
          (C50346 * (C50185 * C50441 + C50131)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50346 * C50132 + C50346 * (C50132 + C50188 * C50441)) * ce) /
            C50069 +
        C50068 *
            ((((-2 * C50353) / C49981 - (C50346 * C50454) / C49981) * ae) /
                 C49935 -
             ((2 * C50352 + C50346 * C50453) * ce) / C50069 + C50068 * C50481);
    const double C6018 =
        (((-3 * (C50120 * C50441 + C50095)) / C49981 +
          C50346 * ((-2 * C50353) / C49981 - (C50346 * C50454) / C49981)) *
         ae) /
            C49935 -
        ((3 * (C50096 + C50123 * C50441) +
          C50346 * (2 * C50352 + C50346 * C50453)) *
         ce) /
            C50069 +
        C50068 * (3 * C50448 + C50346 * C50481);
    const double C6019 =
        3 * C50448 + C50346 * C50481 +
        (((-3 * (C50185 * C50441 + C50131)) / C49981 +
          C50346 * ((-2 * C50366) / C49981 -
                    (C50346 * (C50262 * C50441 + C50185)) / C49981)) *
         ae) /
            C49935 -
        ((3 * (C50132 + C50188 * C50441) +
          C50346 * (2 * C50368 + C50346 * (C50188 + C50265 * C50441))) *
         ce) /
            C50069 +
        C50068 *
            ((((-3 * C50454) / C49981 +
               C50346 * ((-2 * C50370) / C49981 -
                         (C50346 * (C50245 * C50441 + C50169)) / C49981)) *
              ae) /
                 C49935 -
             ((3 * C50453 +
               C50346 * (2 * C50369 + C50346 * (C50172 + C50248 * C50441))) *
              ce) /
                 C50069 +
             C50068 *
                 (3 * C50463 +
                  C50346 *
                      ((-2 * C50371) / C50069 +
                       C50346 * ((-((C50218 * C50219 +
                                     C50076 * bs[8] * std::pow(C50066, 8)) *
                                    C50077 * C50441) /
                                  C49981) /
                                     C49935 -
                                 C50261 / C50069))));
    const double C6336 =
        ((4 * ((-2 * C50353) / C49981 - (C50346 * C50454) / C49981) +
          C50346 *
              ((-3 * C50454) / C49981 +
               C50346 * ((-2 * C50370) / C49981 -
                         (C50346 * (C50245 * C50441 + C50169)) / C49981))) *
         ae) /
            C49935 -
        ((4 * (2 * C50352 + C50346 * C50453) +
          C50346 *
              (3 * C50453 +
               C50346 * (2 * C50369 + C50346 * (C50172 + C50248 * C50441)))) *
         ce) /
            C50069 +
        C50068 * (4 * C50481 +
                  C50346 * (3 * C50463 +
                            C50346 * ((-2 * C50371) / C50069 +
                                      C50346 * ((-((C50218 * C50219 +
                                                    C50076 * bs[8] *
                                                        std::pow(C50066, 8)) *
                                                   C50077 * C50441) /
                                                 C49981) /
                                                    C49935 -
                                                C50261 / C50069))));
    const double C6337 = 4 * ((-2 * C50347) / C50069 + C50346 * C50448) +
                         C50346 * (3 * C50448 + C50346 * C50481);
    const double C40085 =
        5 * (3 * C50448 + C50346 * C50481) +
        C50346 * (4 * C50481 +
                  C50346 * (3 * C50463 +
                            C50346 * ((-2 * C50371) / C50069 +
                                      C50346 * ((-((C50218 * C50219 +
                                                    C50076 * bs[8] *
                                                        std::pow(C50066, 8)) *
                                                   C50077 * C50441) /
                                                 C49981) /
                                                    C49935 -
                                                C50261 / C50069))));
    const double C25339 = C25038 + C25039;
    const double C25338 = C25036 + C25037;
    const double C25337 = C25034 + C25035;
    const double C25336 = C25032 + C25033;
    const double C25472 = C25364 + C25365;
    const double C28666 = C25665 + C25666;
    const double C28663 = C25666 + C25665;
    const double C28665 = C25663 + C25664;
    const double C28664 = C25664 + C25663;
    const double C25672 = C25661 + C25662;
    const double C28667 = C25662 + C25661;
    const double C29105 = C25986 + C25987;
    const double C29102 = C25987 + C25986;
    const double C29104 = C25984 + C25985;
    const double C29103 = C25985 + C25984;
    const double C29919 = C26601 + C26602;
    const double C29915 = C26602 + C26601;
    const double C29916 = C26599 + C26600;
    const double C29914 = C26600 + C26599;
    const double C45527 = C28903 + C28902;
    const double C45524 = C28901 + C28900;
    const double C45525 = C28899 + C28898;
    const double C45526 = C28897 + C28896;
    const double C45798 = C29263 + C29262;
    const double C8142 = C8121 + C8122;
    const double C8139 = C8115 + C8116;
    const double C8138 = C8113 + C8114;
    const double C8135 = C8107 + C8108;
    const double C8130 = C8097 + C8098;
    const double C8127 = C8091 + C8092;
    const double C8470 = C8455 + C8456;
    const double C8469 = C8453 + C8454;
    const double C8466 = C8447 + C8448;
    const double C8461 = C8437 + C8438;
    const double C8586 = C8577 + C8578;
    const double C8583 = C8571 + C8572;
    const double C8768 = C8753 + C8754;
    const double C8765 = C8747 + C8748;
    const double C8764 = C8745 + C8746;
    const double C8761 = C8739 + C8740;
    const double C9078 = C9069 + C9070;
    const double C9075 = C9063 + C9064;
    const double C9680 = C9671 + C9672;
    const double C9677 = C9665 + C9666;
    const double C11098 = C11077 + C11078;
    const double C11095 = C11071 + C11072;
    const double C11094 = C11069 + C11070;
    const double C11091 = C11063 + C11064;
    const double C11086 = C11053 + C11054;
    const double C11083 = C11047 + C11048;
    const double C11670 = C11655 + C11656;
    const double C11669 = C11653 + C11654;
    const double C11666 = C11647 + C11648;
    const double C11661 = C11637 + C11638;
    const double C11932 = C11923 + C11924;
    const double C11929 = C11917 + C11918;
    const double C8143 = C8123 + C8124;
    const double C8140 = C8117 + C8118;
    const double C8137 = C8111 + C8112;
    const double C8134 = C8105 + C8106;
    const double C8131 = C8099 + C8100;
    const double C8128 = C8093 + C8094;
    const double C8471 = C8457 + C8458;
    const double C8468 = C8451 + C8452;
    const double C8465 = C8445 + C8446;
    const double C8462 = C8439 + C8440;
    const double C8587 = C8579 + C8580;
    const double C8584 = C8573 + C8574;
    const double C8769 = C8755 + C8756;
    const double C8766 = C8749 + C8750;
    const double C8763 = C8743 + C8744;
    const double C8760 = C8737 + C8738;
    const double C9079 = C9071 + C9072;
    const double C9076 = C9065 + C9066;
    const double C9681 = C9673 + C9674;
    const double C9678 = C9667 + C9668;
    const double C11099 = C11079 + C11080;
    const double C11096 = C11073 + C11074;
    const double C11093 = C11067 + C11068;
    const double C11090 = C11061 + C11062;
    const double C11087 = C11055 + C11056;
    const double C11084 = C11049 + C11050;
    const double C11671 = C11657 + C11658;
    const double C11668 = C11651 + C11652;
    const double C11665 = C11645 + C11646;
    const double C11662 = C11639 + C11640;
    const double C11933 = C11925 + C11926;
    const double C11930 = C11919 + C11920;
    const double C17252 = C17231 + C17232;
    const double C17249 = C17225 + C17226;
    const double C17248 = C17223 + C17224;
    const double C17245 = C17217 + C17218;
    const double C17240 = C17207 + C17208;
    const double C17237 = C17201 + C17202;
    const double C17580 = C17565 + C17566;
    const double C17579 = C17563 + C17564;
    const double C17576 = C17557 + C17558;
    const double C17571 = C17547 + C17548;
    const double C17696 = C17687 + C17688;
    const double C17693 = C17681 + C17682;
    const double C17878 = C17863 + C17864;
    const double C17875 = C17857 + C17858;
    const double C17874 = C17855 + C17856;
    const double C17871 = C17849 + C17850;
    const double C18188 = C18179 + C18180;
    const double C18185 = C18173 + C18174;
    const double C18790 = C18781 + C18782;
    const double C18787 = C18775 + C18776;
    const double C34338 = C34317 + C34318;
    const double C34335 = C34311 + C34312;
    const double C34334 = C34309 + C34310;
    const double C34331 = C34303 + C34304;
    const double C34326 = C34293 + C34294;
    const double C34323 = C34287 + C34288;
    const double C34910 = C34895 + C34896;
    const double C34909 = C34893 + C34894;
    const double C34906 = C34887 + C34888;
    const double C34901 = C34877 + C34878;
    const double C35172 = C35163 + C35164;
    const double C35169 = C35157 + C35158;
    const double C17253 = C17233 + C17234;
    const double C17250 = C17227 + C17228;
    const double C17247 = C17221 + C17222;
    const double C17244 = C17215 + C17216;
    const double C17241 = C17209 + C17210;
    const double C17238 = C17203 + C17204;
    const double C17581 = C17567 + C17568;
    const double C17578 = C17561 + C17562;
    const double C17575 = C17555 + C17556;
    const double C17572 = C17549 + C17550;
    const double C17697 = C17689 + C17690;
    const double C17694 = C17683 + C17684;
    const double C17879 = C17865 + C17866;
    const double C17876 = C17859 + C17860;
    const double C17873 = C17853 + C17854;
    const double C17870 = C17847 + C17848;
    const double C18189 = C18181 + C18182;
    const double C18186 = C18175 + C18176;
    const double C18791 = C18783 + C18784;
    const double C18788 = C18777 + C18778;
    const double C34339 = C34319 + C34320;
    const double C34336 = C34313 + C34314;
    const double C34333 = C34307 + C34308;
    const double C34330 = C34301 + C34302;
    const double C34327 = C34295 + C34296;
    const double C34324 = C34289 + C34290;
    const double C34911 = C34897 + C34898;
    const double C34908 = C34891 + C34892;
    const double C34905 = C34885 + C34886;
    const double C34902 = C34879 + C34880;
    const double C35173 = C35165 + C35166;
    const double C35170 = C35159 + C35160;
    const double C2733 = C2721 + C2722;
    const double C2854 = C2842 + C2843;
    const double C3811 = C3807 + C3808;
    const double C14454 = C14449 + C14450;
    const double C15637 = C15630 + C15631;
    const double C16556 = C16552 + C16553;
    const double C14453 = C14447 + C14448;
    const double C15633 = C15625 + C15626;
    const double C16555 = C16547 + C16548;
    const double C6231 = C6228 + C6229;
    const double C14848 = C14846 + C14847;
    const double C6053 = C6041 + C6042;
    const double C6223 = C6211 + C6212;
    const double C7349 = C7345 + C7346;
    const double C20230 = C20224 - C20213;
    const double C20229 = C20223 - C20209;
    const double C31785 = C31784 - C21613;
    const double C33601 = C21613 - C33600;
    const double C24424 = C21609 - C24421;
    const double C24423 = C24420 - C21609;
    const double C22886 = C22870 - C22433;
    const double C24425 = C22433 - C24422;
    const double C22893 = C22885 - C22868;
    const double C39907 = C39900 - C22895;
    const double C24224 = C24223 * C17049;
    const double C40756 = C24223 * C51010;
    const double C49435 = C24223 * C51166;
    const double C24217 = C23715 * C51060;
    const double C49436 = C23715 * C51060;
    const double C8141 = C8119 + C8120;
    const double C17251 = C17229 + C17230;
    const double C11097 = C11075 + C11076;
    const double C34337 = C34315 + C34316;
    const double C2394 = C2367 + C2368;
    const double C8463 = C8441 + C8442;
    const double C17573 = C17551 + C17552;
    const double C25041 = C25014 + C25015;
    const double C9679 = C9669 + C9670;
    const double C13726 = C13719 + C13720;
    const double C18789 = C18779 + C18780;
    const double C27912 = C27905 + C27906;
    const double C5470 = C5443 + C5444;
    const double C11663 = C11641 + C11642;
    const double C34903 = C34881 + C34882;
    const double C44985 = C44978 + C44979;
    const double C8126 = C7938 * C281;
    const double C17236 = C17048 * C281;
    const double C11082 = C7938 * C405;
    const double C34322 = C17048 * C405;
    const double C8125 = C7943 * C274;
    const double C17235 = C17053 * C274;
    const double C11081 = C7943 * C398;
    const double C34321 = C17053 * C398;
    const double C2371 = C2177 * C524;
    const double C8459 = C7943 * C524;
    const double C17569 = C17053 * C524;
    const double C25018 = C49954 * C524;
    const double C9675 = C7943 * C733;
    const double C13723 = C2177 * C733;
    const double C18785 = C17053 * C733;
    const double C27909 = C49954 * C733;
    const double C5447 = C2177 * C863;
    const double C11659 = C7943 * C863;
    const double C34899 = C17053 * C863;
    const double C44982 = C49954 * C863;
    const double C50290 = C50250 + C50287;
    const double C2844 = C2727 + C2728;
    const double C20004 = C19986 * C252;
    const double C20214 = C19986 * C50885;
    const double C20870 = C19986 * C51181;
    const double C20982 = C19986 * C50885;
    const double C25471 = C25362 + C25363;
    const double C3060 = C3048 + C3049;
    const double C14446 = C3049 + C3048;
    const double C21150 = C21144 * C50885;
    const double C21616 = C21144 * C50885;
    const double C31483 = C21144 * C252;
    const double C32571 = C21144 * C51181;
    const double C25671 = C25659 + C25660;
    const double C28668 = C25660 + C25659;
    const double C20232 = C20226 * C51143;
    const double C20313 = C20226 * C50880;
    const double C20984 = C20226 * C1275;
    const double C20453 = C20445 * C50880;
    const double C21137 = C20445 * C1275;
    const double C21618 = C20445 * C51143;
    const double C20684 = C20678 * C50880;
    const double C22437 = C20678 * C51143;
    const double C23497 = C20678 * C1275;
    const double C6339 = C6047 + C6048;
    const double C22898 = C22890 * C50885;
    const double C24221 = C22890 * C50885;
    const double C39530 = C22890 * C252;
    const double C40525 = C22890 * C51181;
    const double C45797 = C29265 + C29264;
    const double C23187 = C23184 * C50880;
    const double C39903 = C23184 * C51143;
    const double C40759 = C23184 * C1275;
    const double C50296 = C50294 + C50272;
    const double C50295 = C50233 + C50293;
    const double C6858 = C6853 + C6854;
    const double C9080 = C9073 + C9074;
    const double C18190 = C18183 + C18184;
    const double C22084 = C22077 + C22078;
    const double C28907 = C28894 + C28895;
    const double C6227 = C6219 + C6220;
    const double C22892 = C22883 + C22884;
    const double C29121 = C29112 + C29113;
    const double C23069 = C23063 + C23064;
    const double C2720 = C50867 * C617;
    const double C8582 = C7938 * C617;
    const double C17692 = C17048 * C617;
    const double C19970 = C50862 * C617;
    const double C25355 = C50867 * C617;
    const double C2853 = C50867 * C2698;
    const double C20222 = C50862 * C2698;
    const double C25480 = C50867 * C2698;
    const double C20318 = C50862 * C2840;
    const double C3047 = C50867 * C3020;
    const double C21140 = C50862 * C3020;
    const double C25658 = C50867 * C3020;
    const double C20444 = C50862 * C3022;
    const double C20674 = C50862 * C3375;
    const double C4035 = C4026 + C4027;
    const double C8770 = C8757 + C8758;
    const double C17880 = C17867 + C17868;
    const double C26606 = C26597 + C26598;
    const double C31489 = C31486 + C31487;
    const double C22444 = C22442 * C50885;
    const double C23499 = C22442 * C50885;
    const double C22715 = C22711 * C50880;
    const double C6040 = C50867 * C1068;
    const double C11928 = C7938 * C1068;
    const double C35168 = C17048 * C1068;
    const double C39534 = C50862 * C1068;
    const double C45535 = C50867 * C1068;
    const double C6348 = C50867 * C6018;
    const double C39906 = C50862 * C6018;
    const double C45806 = C50867 * C6018;
    const double C40092 = C50862 * C6337;
    const double C25359 = C25339 * C50885;
    const double C26385 = C25339 * C50885;
    const double C25358 = C25338 * C50000;
    const double C26384 = C25338 * C1281;
    const double C25357 = C25337 * C51143;
    const double C25470 = C25337 * C50880;
    const double C26383 = C25337 * C1275;
    const double C25356 = C25336 * C50007;
    const double C25469 = C25336 * C603;
    const double C26382 = C25336 * C1280;
    const double C25483 = C25472 * C603;
    const double C28672 = C28666 * C603;
    const double C29918 = C28666 * C1280;
    const double C30840 = C28666 * C50007;
    const double C28669 = C28663 * C603;
    const double C29912 = C28663 * C1280;
    const double C30834 = C28663 * C50007;
    const double C28671 = C28665 * C50880;
    const double C29917 = C28665 * C1275;
    const double C30839 = C28665 * C51143;
    const double C28670 = C28664 * C50880;
    const double C29913 = C28664 * C1275;
    const double C30835 = C28664 * C51143;
    const double C25674 = C25672 * C603;
    const double C28673 = C28667 * C603;
    const double C29117 = C29105 * C50880;
    const double C29114 = C29102 * C50880;
    const double C29116 = C29104 * C603;
    const double C29115 = C29103 * C603;
    const double C29925 = C29919 * C50885;
    const double C30841 = C29919 * C50885;
    const double C29922 = C29915 * C50885;
    const double C30837 = C29915 * C50885;
    const double C29923 = C29916 * C1281;
    const double C30838 = C29916 * C50000;
    const double C29921 = C29914 * C1281;
    const double C30836 = C29914 * C50000;
    const double C45539 = C45527 * C50885;
    const double C46790 = C45527 * C50885;
    const double C45536 = C45524 * C50007;
    const double C45694 = C45524 * C603;
    const double C46787 = C45524 * C1280;
    const double C45537 = C45525 * C51143;
    const double C45695 = C45525 * C50880;
    const double C46788 = C45525 * C1275;
    const double C45538 = C45526 * C50000;
    const double C46789 = C45526 * C1281;
    const double C45808 = C45798 * C603;
    const double C2734 = C2733 - C2723;
    const double C3812 = C3811 - C3809;
    const double C15640 = C15636 - C15637;
    const double C16558 = C16551 - C16556;
    const double C15639 = C15633 - C15634;
    const double C16557 = C16555 - C16549;
    const double C6232 = C6231 * C51010;
    const double C6054 = C6053 - C6043;
    const double C6230 = C6223 * C51010;
    const double C7350 = C7349 - C7347;
    const double C20235 = C20229 - C20210;
    const double C24427 = C24424 + C21612;
    const double C24426 = C24423 - C21612;
    const double C22894 = C22886 - C22434;
    const double C24428 = C24425 + C22434;
    const double C22901 = C22893 - C22869;
    const double C24225 = C24224 + C24217;
    const double C49437 = C49435 + C49436;
    const double C8144 = C8125 + C8126;
    const double C17254 = C17235 + C17236;
    const double C11100 = C11081 + C11082;
    const double C34340 = C34321 + C34322;
    const double C2396 = C2371 + C2372;
    const double C8472 = C8459 + C8460;
    const double C17582 = C17569 + C17570;
    const double C25043 = C25018 + C25019;
    const double C9682 = C9675 + C9676;
    const double C13728 = C13723 + C13724;
    const double C18792 = C18785 + C18786;
    const double C27914 = C27909 + C27910;
    const double C5472 = C5447 + C5448;
    const double C11672 = C11659 + C11660;
    const double C34912 = C34899 + C34900;
    const double C44987 = C44982 + C44983;
    const double C2855 = C2844 * C50880;
    const double C20236 = C20230 - C20214;
    const double C20992 = C20990 - C20982;
    const double C25482 = C25471 * C50880;
    const double C3062 = C3060 * C50880;
    const double C14452 = C14446 * C50880;
    const double C32722 = C32721 - C21150;
    const double C32919 = C32918 + C21150;
    const double C31786 = C31785 - C21616;
    const double C33602 = C33601 + C21616;
    const double C25673 = C25671 * C50880;
    const double C28674 = C28668 * C50880;
    const double C20321 = C20313 + C20314;
    const double C20461 = C20453 + C20454;
    const double C32031 = C20454 + C20453;
    const double C22707 = C20684 + C20683;
    const double C22702 = C20683 + C20684;
    const double C6349 = C6339 * C50880;
    const double C39910 = C39907 - C22898;
    const double C40763 = C40762 - C24221;
    const double C45807 = C45797 * C50880;
    const double C40087 = C23187 + C23186;
    const double C144 = (5 * (3 * C50141 + C50068 * C50206 + C50187 * ae) +
                         C50068 * (4 * C50206 + C50068 * C50296 + C50276 * ae) +
                         (4 * C50187 + C50068 * C50276) * ae) /
                        C49935;
    const double C275 =
        (C50299 * (4 * C50206 + C50068 * C50296 + C50276 * ae)) / C49935;
    const double C399 =
        (C50346 * (4 * C50206 + C50068 * C50296 + C50276 * ae)) / C49935;
    const double C525 =
        (3 * C50141 + C50068 * C50206 + C50187 * ae + C50296 * C50394) / C49935;
    const double C864 =
        (3 * C50141 + C50068 * C50206 + C50187 * ae + C50296 * C50441) / C49935;
    const double C1413 = (C50346 * C50299 * C50296) / C49935;
    const double C50297 = C50295 - C50275;
    const double C22090 = C22084 * C253;
    const double C23345 = C22084 * C1171;
    const double C22900 = C22892 * C50885;
    const double C23709 = C22892 * C50885;
    const double C23073 = C23069 * C50880;
    const double C2732 = C2719 + C2720;
    const double C8588 = C8581 + C8582;
    const double C17698 = C17691 + C17692;
    const double C19988 = C19969 + C19970;
    const double C25367 = C25354 + C25355;
    const double C2860 = C2852 + C2853;
    const double C20228 = C20221 + C20222;
    const double C25487 = C25479 + C25480;
    const double C20324 = C20317 + C20318;
    const double C3059 = C3046 + C3047;
    const double C21146 = C21139 + C21140;
    const double C25670 = C25657 + C25658;
    const double C20452 = C20443 + C20444;
    const double C20680 = C20673 + C20674;
    const double C31491 = C31489 * C253;
    const double C32573 = C31489 * C1171;
    const double C6052 = C6039 + C6040;
    const double C11934 = C11927 + C11928;
    const double C35174 = C35167 + C35168;
    const double C39536 = C39533 + C39534;
    const double C45543 = C45534 + C45535;
    const double C6354 = C6347 + C6348;
    const double C39909 = C39905 + C39906;
    const double C45812 = C45805 + C45806;
    const double C40095 = C40091 + C40092;
    const double C25368 = C25356 + C25357;
    const double C25481 = C25469 + C25470;
    const double C26386 = C26382 + C26383;
    const double C28676 = C28671 + C28672;
    const double C29924 = C29917 + C29918;
    const double C30843 = C30839 + C30840;
    const double C28675 = C28669 + C28670;
    const double C29920 = C29912 + C29913;
    const double C30842 = C30834 + C30835;
    const double C29123 = C29116 + C29117;
    const double C29122 = C29114 + C29115;
    const double C45544 = C45536 + C45537;
    const double C45697 = C45694 + C45695;
    const double C46791 = C46787 + C46788;
    const double C2735 = C2734 - C2724;
    const double C3813 = C3812 - C3810;
    const double C15642 = C15640 + C15638;
    const double C16560 = C16558 + C16554;
    const double C15641 = C15639 - C15635;
    const double C16559 = C16557 - C16550;
    const double C6055 = C6054 - C6044;
    const double C7351 = C7350 - C7348;
    const double C22902 = C22894 * C51060;
    const double C48208 = C22894 * C51060;
    const double C22903 = C22901 * C17049;
    const double C39899 = C22901 * C51010;
    const double C48207 = C22901 * C51166;
    const double C2861 = C2855 + C2856;
    const double C25488 = C25482 + C25483;
    const double C3064 = C3062 + C3063;
    const double C14455 = C14451 + C14452;
    const double C25675 = C25673 + C25674;
    const double C28677 = C28673 + C28674;
    const double C23065 = C22707 * C51060;
    const double C48358 = C22707 * C51060;
    const double C6355 = C6349 + C6350;
    const double C39913 = C39910 * C51010;
    const double C40764 = C40763 * C51010;
    const double C45813 = C45807 + C45808;
    const double C40093 = C40087 * C51010;
    const double C152 =
        5 * (3 * C50202 + (C50207 * ae) / C49935 - (C50206 * ce) / C50069 +
             C50068 * C50290) +
        ((4 * C50207 + C50068 * C50297 - (C50276 * ce) / C49981) * ae) /
            C49935 -
        ((4 * C50206 + C50068 * C50296 + C50276 * ae) * ce) / C50069 +
        C50068 *
            (4 * C50290 + (C50297 * ae) / C49935 - (C50296 * ce) / C50069 +
             C50068 *
                 (3 * C50284 + (C50291 * ae) / C49935 - (C50289 * ce) / C50069 +
                  C50068 *
                      (2 * C50278 - (ae * C50279) / C50069 -
                       (C50280 * ce) / C50069 +
                       C50068 *
                           ((-(ae * C50262) / C49981) / C49935 -
                            C50261 / C50069 - (C50265 * ce) / C50069 +
                            C50068 * ((-(C50248 * ce) / C49981) / C49935 -
                                      (ae * C50245) / C50069 -
                                      (C50068 *
                                       (C50218 * C50219 +
                                        C50076 * bs[8] * std::pow(C50066, 8)) *
                                       C50077) /
                                          C50069)))));
    const double C282 =
        4 * (2 * C50317 - (ae * C50299 * C50197) / C50069 -
             (C50299 * C50198 * ce) / C50069 + C50068 * C50344) +
        (C50299 * C50297 * ae) / C49935 - (C50299 * C50296 * ce) / C50069 +
        C50068 *
            (3 * C50344 + (C50299 * C50291 * ae) / C49935 -
             (C50299 * C50289 * ce) / C50069 +
             C50068 *
                 (2 * C50342 - (ae * C50299 * C50279) / C50069 -
                  (C50299 * C50280 * ce) / C50069 +
                  C50068 *
                      ((-(ae * C50299 * C50262) / C49981) / C49935 -
                       C50324 / C50069 - (C50299 * C50265 * ce) / C50069 +
                       C50068 * ((-(C50299 * C50248 * ce) / C49981) / C49935 -
                                 (ae * C50299 * C50245) / C50069 -
                                 (C50068 * C50299 *
                                  (C50218 * C50219 +
                                   C50076 * bs[8] * std::pow(C50066, 8)) *
                                  C50077) /
                                     C50069))));
    const double C406 =
        4 * (2 * C50364 - (ae * C50346 * C50197) / C50069 -
             (C50346 * C50198 * ce) / C50069 + C50068 * C50391) +
        (C50346 * C50297 * ae) / C49935 - (C50346 * C50296 * ce) / C50069 +
        C50068 *
            (3 * C50391 + (C50346 * C50291 * ae) / C49935 -
             (C50346 * C50289 * ce) / C50069 +
             C50068 *
                 (2 * C50389 - (ae * C50346 * C50279) / C50069 -
                  (C50346 * C50280 * ce) / C50069 +
                  C50068 *
                      ((-(ae * C50346 * C50262) / C49981) / C49935 -
                       C50371 / C50069 - (C50346 * C50265 * ce) / C50069 +
                       C50068 * ((-(C50346 * C50248 * ce) / C49981) / C49935 -
                                 (ae * C50346 * C50245) / C50069 -
                                 (C50068 * C50346 *
                                  (C50218 * C50219 +
                                   C50076 * bs[8] * std::pow(C50066, 8)) *
                                  C50077) /
                                     C50069))));
    const double C145 =
        5 * ((-3 * C50140) / C49981 + C50068 * C50207 -
             (C50187 * ce) / C49981) +
        C50068 * (4 * C50207 + C50068 * C50297 - (C50276 * ce) / C49981) -
        ((4 * C50187 + C50068 * C50276) * ce) / C49981;
    const double C276 =
        C50299 * (4 * C50207 + C50068 * C50297 - (C50276 * ce) / C49981);
    const double C400 =
        C50346 * (4 * C50207 + C50068 * C50297 - (C50276 * ce) / C49981);
    const double C526 = (-3 * C50140) / C49981 + C50068 * C50207 -
                        (C50187 * ce) / C49981 + C50297 * C50394;
    const double C865 = (-3 * C50140) / C49981 + C50068 * C50207 -
                        (C50187 * ce) / C49981 + C50297 * C50441;
    const double C1414 = C50346 * C50299 * C50297;
    const double C20006 = C19988 * C253;
    const double C20872 = C19988 * C1171;
    const double C20234 = C20228 * C50885;
    const double C20986 = C20228 * C50885;
    const double C20326 = C20324 * C50880;
    const double C21152 = C21146 * C50885;
    const double C21620 = C21146 * C50885;
    const double C20460 = C20452 * C50880;
    const double C20686 = C20680 * C50880;
    const double C39538 = C39536 * C253;
    const double C40527 = C39536 * C1171;
    const double C39912 = C39909 * C50885;
    const double C40761 = C39909 * C50885;
    const double C40097 = C40095 * C50880;
    const double C25369 = C25368 - C25358;
    const double C26387 = C26386 - C26384;
    const double C29927 = C29923 - C29924;
    const double C30845 = C30838 - C30843;
    const double C29926 = C29920 - C29921;
    const double C30844 = C30842 - C30836;
    const double C45696 = C29122 * C51010;
    const double C45545 = C45544 - C45538;
    const double C45698 = C45697 * C51010;
    const double C46792 = C46791 - C46789;
    const double C6056 = C6055 * C51010;
    const double C7352 = C7351 * C51010;
    const double C22904 = C22903 + C22902;
    const double C48209 = C48207 + C48208;
    const double C23070 = C23065 + C23066;
    const double C48361 = C48358 + C48359;
    const double C6356 = C6355 * C51010;
    const double C45814 = C45813 * C51010;
    const double C25370 = C25369 - C25359;
    const double C26388 = C26387 - C26385;
    const double C29929 = C29927 + C29925;
    const double C30847 = C30845 + C30841;
    const double C29928 = C29926 - C29922;
    const double C30846 = C30844 - C30837;
    const double C45546 = C45545 - C45539;
    const double C46793 = C46792 - C46790;
    const double C45547 = C45546 * C51010;
    const double C46794 = C46793 * C51010;
    d2ee[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51194 * C132 + C7942 * C126 + C51195 * C133 +
             C7943 * C127 + C7938 * C134) *
                C1174 +
            (C7941 * C136 + C51194 * C146 + C7942 * C137 + C51195 * C147 +
             C7943 * C138 + C7938 * C148) *
                C51196 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51195 * C134 +
             C7941 * C126 + C51194 * C133) *
                C1175 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51195 * C148 +
             C7941 * C137 + C51194 * C147) *
                C51181 +
            (C7941 * C127 + C51194 * C134 + C7942 * C128 + C51195 * C135 +
             C7943 * C129 + C7938 * C140) *
                C1176 +
            (C7941 * C138 + C51194 * C148 + C7942 * C139 + C51195 * C149 +
             C7943 * C141 + C7938 * C150) *
                C1171) *
               C51166 +
           ((C8127 + C8128 + C8129) * C1174 + (C8130 + C8131 + C8132) * C51196 -
            (C8133 + C8134 + C8135) * C1175 - (C8136 + C8137 + C8138) * C51181 +
            (C8139 + C8140 + C8141) * C1176 + (C8142 + C8143 + C8144) * C1171) *
               C51060) *
              C51022 * C50951 * C1172 +
          (((C8135 + C8134 + C8133) * C1175 -
            ((C8132 + C8131 + C8130) * C51196 +
             (C8129 + C8128 + C8127) * C1174) +
            (C8138 + C8137 + C8136) * C51181 - (C8141 + C8140 + C8139) * C1176 -
            (C8144 + C8143 + C8142) * C1171) *
               C51166 +
           ((C8461 + C8462 + C8463) * C1175 -
            ((C8464 + C8465 + C8466) * C51196 +
             (C8467 + C8468 + C8469) * C1174) +
            (C8470 + C8471 + C8472) * C51181 -
            (C7943 * C516 + C7938 * C525 + C7942 * C515 + C51195 * C520 +
             C7941 * C514 + C51194 * C519) *
                C1176 -
            (C7943 * C526 + C7938 * C531 + C7942 * C524 + C51195 * C530 +
             C7941 * C523 + C51194 * C529) *
                C1171) *
               C51060) *
              C51022 * C50951 * C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51194 * C132 + C7942 * C126 + C51195 * C133 +
             C7943 * C127 + C7938 * C134) *
                C1280 +
            (C7941 * C136 + C51194 * C146 + C7942 * C137 + C51195 * C147 +
             C7943 * C138 + C7938 * C148) *
                C1275 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51195 * C134 +
             C7941 * C126 + C51194 * C133) *
                C1281 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51195 * C148 +
             C7941 * C137 + C51194 * C147) *
                C50885) *
               C51166 +
           ((C8127 + C8128 + C8129) * C1280 + (C8130 + C8131 + C8132) * C1275 -
            (C8133 + C8134 + C8135) * C1281 -
            (C8136 + C8137 + C8138) * C50885) *
               C51060) *
              C51022 * C50951 * C51197 +
          (((C8135 + C8134 + C8133) * C1281 -
            ((C8132 + C8131 + C8130) * C1275 +
             (C8129 + C8128 + C8127) * C1280) +
            (C8138 + C8137 + C8136) * C50885) *
               C51166 +
           ((C8461 + C8462 + C8463) * C1281 -
            ((C8464 + C8465 + C8466) * C1275 +
             (C8467 + C8468 + C8469) * C1280) +
            (C8470 + C8471 + C8472) * C50885) *
               C51060) *
              C51022 * C50951 * C51184 +
          (((C8469 + C8468 + C8467) * C1280 + (C8466 + C8465 + C8464) * C1275 -
            (C8463 + C8462 + C8461) * C1281 -
            (C8472 + C8471 + C8470) * C50885) *
               C51166 +
           ((C8583 + C8584 + C8585) * C1280 + (C8586 + C8587 + C8588) * C1275 -
            (C7943 * C604 + C7938 * C612 + C7942 * C605 + C51195 * C613 +
             C7941 * C606 + C51194 * C614) *
                C1281 -
            (C7943 * C608 + C7938 * C616 + C7942 * C609 + C51195 * C617 +
             C7941 * C610 + C51194 * C618) *
                C50885) *
               C51060) *
              C51022 * C50951 * C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7941 * C125 + C51194 * C132 + C7942 * C126 + C51195 * C133 +
              C7943 * C127 + C7938 * C134) *
                 C1280 +
             (C7941 * C136 + C51194 * C146 + C7942 * C137 + C51195 * C147 +
              C7943 * C138 + C7938 * C148) *
                 C1275 -
             (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51195 * C134 +
              C7941 * C126 + C51194 * C133) *
                 C1281 -
             (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51195 * C148 +
              C7941 * C137 + C51194 * C147) *
                 C50885) *
                C51166 +
            ((C8127 + C8128 + C8129) * C1280 + (C8130 + C8131 + C8132) * C1275 -
             (C8133 + C8134 + C8135) * C1281 -
             (C8136 + C8137 + C8138) * C50885) *
                C51060) *
               C51022 * C51152 +
           (((C7941 * C383 + C51194 * C389 + C7942 * C384 + C51195 * C390 +
              C7943 * C385 + C7938 * C391) *
                 C1281 -
             ((C7943 * C394 + C7938 * C402 + C7942 * C395 + C51195 * C403 +
               C7941 * C396 + C51194 * C404) *
                  C1275 +
              (C7943 * C384 + C7938 * C390 + C7942 * C383 + C51195 * C389 +
               C7941 * C387 + C51194 * C397) *
                  C1280) +
             (C7941 * C395 + C51194 * C403 + C7942 * C394 + C51195 * C402 +
              C7943 * C393 + C7938 * C401) *
                 C50885) *
                C51166 +
            ((C9677 + C9678 + C9679) * C1281 -
             ((C8759 + C8760 + C8761) * C1275 +
              (C8762 + C8763 + C8764) * C1280) +
             (C9680 + C9681 + C9682) * C50885) *
                C51060) *
               C51022 * C50963) *
              C1172 +
          ((((C8135 + C8134 + C8133) * C1281 -
             ((C8132 + C8131 + C8130) * C1275 +
              (C8129 + C8128 + C8127) * C1280) +
             (C8138 + C8137 + C8136) * C50885) *
                C51166 +
            ((C8461 + C8462 + C8463) * C1281 -
             ((C8464 + C8465 + C8466) * C1275 +
              (C8467 + C8468 + C8469) * C1280) +
             (C8470 + C8471 + C8472) * C50885) *
                C51060) *
               C51022 * C51152 +
           (((C8764 + C8763 + C8762) * C1280 + (C8761 + C8760 + C8759) * C1275 -
             (C9679 + C9678 + C9677) * C1281 -
             (C9682 + C9681 + C9680) * C50885) *
                C51166 +
            ((C8765 + C8766 + C8767) * C1280 + (C8768 + C8769 + C8770) * C1275 -
             (C7943 * C722 + C7938 * C738 + C7942 * C723 + C51195 * C739 +
              C7941 * C724 + C51194 * C740) *
                 C1281 -
             (C7943 * C734 + C7938 * C746 + C7942 * C735 + C51195 * C747 +
              C7941 * C736 + C51194 * C748) *
                 C50885) *
                C51060) *
               C51022 * C50963) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C7941 * C125 + C51194 * C132 + C7942 * C126 +
                     C51195 * C133 + C7943 * C127 + C7938 * C134) *
                        C50007 +
                    (C7941 * C136 + C51194 * C146 + C7942 * C137 +
                     C51195 * C147 + C7943 * C138 + C7938 * C148) *
                        C51143 -
                    (C7943 * C128 + C7938 * C135 + C7942 * C127 +
                     C51195 * C134 + C7941 * C126 + C51194 * C133) *
                        C50000 -
                    (C7943 * C139 + C7938 * C149 + C7942 * C138 +
                     C51195 * C148 + C7941 * C137 + C51194 * C147) *
                        C50885) *
                       C51166 +
                   ((C8127 + C8128 + C8129) * C50007 +
                    (C8130 + C8131 + C8132) * C51143 -
                    (C8133 + C8134 + C8135) * C50000 -
                    (C8136 + C8137 + C8138) * C50885) *
                       C51060) *
                      C51022 * C1514 +
                  (((C7941 * C383 + C51194 * C389 + C7942 * C384 +
                     C51195 * C390 + C7943 * C385 + C7938 * C391) *
                        C50000 -
                    ((C7943 * C394 + C7938 * C402 + C7942 * C395 +
                      C51195 * C403 + C7941 * C396 + C51194 * C404) *
                         C51143 +
                     (C7943 * C384 + C7938 * C390 + C7942 * C383 +
                      C51195 * C389 + C7941 * C387 + C51194 * C397) *
                         C50007) +
                    (C7941 * C395 + C51194 * C403 + C7942 * C394 +
                     C51195 * C402 + C7943 * C393 + C7938 * C401) *
                        C50885) *
                       C51166 +
                   ((C9677 + C9678 + C9679) * C50000 -
                    ((C8759 + C8760 + C8761) * C51143 +
                     (C8762 + C8763 + C8764) * C50007) +
                    (C9680 + C9681 + C9682) * C50885) *
                       C51060) *
                      C51022 * C50963) *
                     C1172 +
                 ((((C8135 + C8134 + C8133) * C50000 -
                    ((C8132 + C8131 + C8130) * C51143 +
                     (C8129 + C8128 + C8127) * C50007) +
                    (C8138 + C8137 + C8136) * C50885) *
                       C51166 +
                   ((C8461 + C8462 + C8463) * C50000 -
                    ((C8464 + C8465 + C8466) * C51143 +
                     (C8467 + C8468 + C8469) * C50007) +
                    (C8470 + C8471 + C8472) * C50885) *
                       C51060) *
                      C51022 * C1514 +
                  (((C8764 + C8763 + C8762) * C50007 +
                    (C8761 + C8760 + C8759) * C51143 -
                    (C9679 + C9678 + C9677) * C50000 -
                    (C9682 + C9681 + C9680) * C50885) *
                       C51166 +
                   ((C8765 + C8766 + C8767) * C50007 +
                    (C8768 + C8769 + C8770) * C51143 -
                    (C7943 * C722 + C7938 * C738 + C7942 * C723 +
                     C51195 * C739 + C7941 * C724 + C51194 * C740) *
                        C50000 -
                    (C7943 * C734 + C7938 * C746 + C7942 * C735 +
                     C51195 * C747 + C7941 * C736 + C51194 * C748) *
                        C50885) *
                       C51060) *
                      C51022 * C50963) *
                     C50939)) /
               (p * q * std::sqrt(p + q));
    d2ee[4] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C7941 * C125 + C51194 * C132 + C7942 * C126 +
                     C51195 * C133 + C7943 * C127 + C7938 * C134) *
                        C603 +
                    (C7941 * C136 + C51194 * C146 + C7942 * C137 +
                     C51195 * C147 + C7943 * C138 + C7938 * C148) *
                        C50880) *
                       C51166 +
                   ((C8127 + C8128 + C8129) * C603 +
                    (C8130 + C8131 + C8132) * C50880) *
                       C51060) *
                      C51022 * C1514 -
                  (((C8759 + C8760 + C8761) * C50880 +
                    (C8762 + C8763 + C8764) * C603) *
                       C51060 +
                   ((C7943 * C394 + C7938 * C402 + C7942 * C395 +
                     C51195 * C403 + C7941 * C396 + C51194 * C404) *
                        C50880 +
                    (C7943 * C384 + C7938 * C390 + C7942 * C383 +
                     C51195 * C389 + C7941 * C387 + C51194 * C397) *
                        C603) *
                       C51166) *
                      C51022 * C50963) *
                     C51197 +
                 ((((C8764 + C8763 + C8762) * C603 +
                    (C8761 + C8760 + C8759) * C50880) *
                       C51166 +
                   ((C8765 + C8766 + C8767) * C603 +
                    (C8768 + C8769 + C8770) * C50880) *
                       C51060) *
                      C51022 * C50963 -
                  (((C8464 + C8465 + C8466) * C50880 +
                    (C8467 + C8468 + C8469) * C603) *
                       C51060 +
                   ((C8132 + C8131 + C8130) * C50880 +
                    (C8129 + C8128 + C8127) * C603) *
                       C51166) *
                      C51022 * C1514) *
                     C51184 +
                 ((((C8469 + C8468 + C8467) * C603 +
                    (C8466 + C8465 + C8464) * C50880) *
                       C51166 +
                   ((C8583 + C8584 + C8585) * C603 +
                    (C8586 + C8587 + C8588) * C50880) *
                       C51060) *
                      C51022 * C1514 -
                  (((C7943 * C4009 + C7938 * C4010 + C7942 * C3014 +
                     C51195 * C3020 + C7941 * C3013 + C51194 * C3019) *
                        C50880 +
                    (C7943 * C4007 + C7938 * C4008 + C7942 * C3008 +
                     C51195 * C3012 + C7941 * C3007 + C51194 * C3011) *
                        C603) *
                       C51060 +
                   ((C8770 + C8769 + C8768) * C50880 +
                    (C8767 + C8766 + C8765) * C603) *
                       C51166) *
                      C51022 * C50963) *
                     C1279)) /
               (p * q * std::sqrt(p + q));
    d2ee[5] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C7941 * C125 + C51194 * C132 + C7942 * C126 +
                     C51195 * C133 + C7943 * C127 + C7938 * C134) *
                        C603 +
                    (C7941 * C136 + C51194 * C146 + C7942 * C137 +
                     C51195 * C147 + C7943 * C138 + C7938 * C148) *
                        C50880) *
                       C51166 +
                   ((C8127 + C8128 + C8129) * C603 +
                    (C8130 + C8131 + C8132) * C50880) *
                       C51060) *
                      C51022 * C51198 -
                  (((C8759 + C8760 + C8761) * C50880 +
                    (C8762 + C8763 + C8764) * C603) *
                       C51060 +
                   ((C7943 * C394 + C7938 * C402 + C7942 * C395 +
                     C51195 * C403 + C7941 * C396 + C51194 * C404) *
                        C50880 +
                    (C7943 * C384 + C7938 * C390 + C7942 * C383 +
                     C51195 * C389 + C7941 * C387 + C51194 * C397) *
                        C603) *
                       C51166) *
                      C51022 * C51187 +
                  (((C7941 * C851 + C51194 * C856 + C7942 * C852 +
                     C51195 * C857 + C7943 * C853 + C7938 * C858) *
                        C603 +
                    (C7941 * C860 + C51194 * C866 + C7942 * C861 +
                     C51195 * C867 + C7943 * C862 + C7938 * C868) *
                        C50880) *
                       C51166 +
                   ((C9075 + C9076 + C9077) * C603 +
                    (C9078 + C9079 + C9080) * C50880) *
                       C51060) *
                      C51022 * C1746) *
                     C1172 +
                 ((((C8764 + C8763 + C8762) * C603 +
                    (C8761 + C8760 + C8759) * C50880) *
                       C51166 +
                   ((C8765 + C8766 + C8767) * C603 +
                    (C8768 + C8769 + C8770) * C50880) *
                       C51060) *
                      C51022 * C51187 -
                  (((C8464 + C8465 + C8466) * C50880 +
                    (C8467 + C8468 + C8469) * C603) *
                       C51060 +
                   ((C8132 + C8131 + C8130) * C50880 +
                    (C8129 + C8128 + C8127) * C603) *
                       C51166) *
                      C51022 * C51198 -
                  (((C7943 * C3218 + C7938 * C3221 + C7942 * C3216 +
                     C51195 * C3220 + C7941 * C3215 + C51194 * C3219) *
                        C50880 +
                    (C7943 * C3212 + C7938 * C3217 + C7942 * C3211 +
                     C51195 * C3214 + C7941 * C3210 + C51194 * C3213) *
                        C603) *
                       C51060 +
                   ((C9080 + C9079 + C9078) * C50880 +
                    (C9077 + C9076 + C9075) * C603) *
                       C51166) *
                      C51022 * C1746) *
                     C50939)) /
               (p * q * std::sqrt(p + q));
    d2ee[6] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C7941 * C125 + C51194 * C132 + C7942 * C126 +
                    C51195 * C133 + C7943 * C127 + C7938 * C134) *
                       C50007 +
                   (C7941 * C136 + C51194 * C146 + C7942 * C137 +
                    C51195 * C147 + C7943 * C138 + C7938 * C148) *
                       C51143 -
                   (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51195 * C134 +
                    C7941 * C126 + C51194 * C133) *
                       C50000 -
                   (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51195 * C148 +
                    C7941 * C137 + C51194 * C147) *
                       C50885) *
                      C51166 +
                  ((C8127 + C8128 + C8129) * C50007 +
                   (C8130 + C8131 + C8132) * C51143 -
                   (C8133 + C8134 + C8135) * C50000 -
                   (C8136 + C8137 + C8138) * C50885) *
                      C51060) *
                     C51022 * C50951 * C507 +
                 (((C8135 + C8134 + C8133) * C50000 -
                   ((C8132 + C8131 + C8130) * C51143 +
                    (C8129 + C8128 + C8127) * C50007) +
                   (C8138 + C8137 + C8136) * C50885) *
                      C51166 +
                  ((C8461 + C8462 + C8463) * C50000 -
                   ((C8464 + C8465 + C8466) * C51143 +
                    (C8467 + C8468 + C8469) * C50007) +
                   (C8470 + C8471 + C8472) * C50885) *
                      C51060) *
                     C51022 * C50951 * C508 +
                 (((C8469 + C8468 + C8467) * C50007 +
                   (C8466 + C8465 + C8464) * C51143 -
                   (C8463 + C8462 + C8461) * C50000 -
                   (C8472 + C8471 + C8470) * C50885) *
                      C51166 +
                  ((C7941 * C607 + C51194 * C615 + C7942 * C606 +
                    C51195 * C614 + C7943 * C605 + C7938 * C613) *
                       C50007 +
                   (C7941 * C611 + C51194 * C619 + C7942 * C610 +
                    C51195 * C618 + C7943 * C609 + C7938 * C617) *
                       C51143 -
                   (C7943 * C604 + C7938 * C612 + C7942 * C605 + C51195 * C613 +
                    C7941 * C606 + C51194 * C614) *
                       C50000 -
                   (C7943 * C608 + C7938 * C616 + C7942 * C609 + C51195 * C617 +
                    C7941 * C610 + C51194 * C618) *
                       C50885) *
                      C51060) *
                     C51022 * C50951 * C509)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((C7941 * C125 + C51194 * C132 + C7942 * C126 + C51195 * C133 +
                   C7943 * C127 + C7938 * C134) *
                      C121 +
                  (C7941 * C136 + C51194 * C146 + C7942 * C137 + C51195 * C147 +
                   C7943 * C138 + C7938 * C148) *
                      C109 -
                  (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51195 * C134 +
                   C7941 * C126 + C51194 * C133) *
                      C122 -
                  (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51195 * C148 +
                   C7941 * C137 + C51194 * C147) *
                      C110 +
                  (C7941 * C127 + C51194 * C134 + C7942 * C128 + C51195 * C135 +
                   C7943 * C129 + C7938 * C140) *
                      C123 +
                  (C7941 * C138 + C51194 * C148 + C7942 * C139 + C51195 * C149 +
                   C7943 * C141 + C7938 * C150) *
                      C111 -
                  (C7943 * C130 + C7938 * C142 + C7942 * C129 + C51195 * C140 +
                   C7941 * C128 + C51194 * C135) *
                      C124 -
                  (C7943 * C143 + C7938 * C151 + C7942 * C141 + C51195 * C150 +
                   C7941 * C139 + C51194 * C149) *
                      C112) *
                     C51166 +
                 ((C7941 * C263 + C51194 * C273 + C7942 * C259 + C51195 * C265 +
                   C7943 * C260 + C7938 * C266) *
                      C121 +
                  (C7941 * C272 + C51194 * C280 + C7942 * C271 + C51195 * C279 +
                   C7943 * C270 + C7938 * C278) *
                      C109 -
                  (C7943 * C261 + C7938 * C267 + C7942 * C260 + C51195 * C266 +
                   C7941 * C259 + C51194 * C265) *
                      C122 -
                  (C7943 * C269 + C7938 * C277 + C7942 * C270 + C51195 * C278 +
                   C7941 * C271 + C51194 * C279) *
                      C110 +
                  (C7941 * C260 + C51194 * C266 + C7942 * C261 + C51195 * C267 +
                   C7943 * C262 + C7938 * C268) *
                      C123 +
                  (C7941 * C270 + C51194 * C278 + C7942 * C269 + C51195 * C277 +
                   C7943 * C274 + C7938 * C281) *
                      C111 -
                  (C7943 * C264 + C7938 * C275 + C7942 * C262 + C51195 * C268 +
                   C7941 * C261 + C51194 * C267) *
                      C124 -
                  (C7943 * C276 + C7938 * C282 + C7942 * C274 + C51195 * C281 +
                   C7941 * C269 + C51194 * C277) *
                      C112) *
                     C51060) *
                C51022 * C50951 * C50925) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                ((((C7941 * C125 + C51194 * C132 + C7942 * C126 +
                    C51195 * C133 + C7943 * C127 + C7938 * C134) *
                       C50007 +
                   (C7941 * C136 + C51194 * C146 + C7942 * C137 +
                    C51195 * C147 + C7943 * C138 + C7938 * C148) *
                       C51143 -
                   (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51195 * C134 +
                    C7941 * C126 + C51194 * C133) *
                       C50000 -
                   (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51195 * C148 +
                    C7941 * C137 + C51194 * C147) *
                       C50885) *
                      C51166 +
                  ((C8127 + C8128 + C8129) * C50007 +
                   (C8130 + C8131 + C8132) * C51143 -
                   (C8133 + C8134 + C8135) * C50000 -
                   (C8136 + C8137 + C8138) * C50885) *
                      C51060) *
                     C51022 * C848 +
                 (((C7941 * C383 + C51194 * C389 + C7942 * C384 +
                    C51195 * C390 + C7943 * C385 + C7938 * C391) *
                       C50000 -
                   ((C7943 * C394 + C7938 * C402 + C7942 * C395 +
                     C51195 * C403 + C7941 * C396 + C51194 * C404) *
                        C51143 +
                    (C7943 * C384 + C7938 * C390 + C7942 * C383 +
                     C51195 * C389 + C7941 * C387 + C51194 * C397) *
                        C50007) +
                   (C7941 * C395 + C51194 * C403 + C7942 * C394 +
                    C51195 * C402 + C7943 * C393 + C7938 * C401) *
                       C50885) *
                      C51166 +
                  ((C7941 * C719 + C51194 * C727 + C7942 * C720 +
                    C51195 * C728 + C7943 * C721 + C7938 * C729) *
                       C50000 -
                   ((C8759 + C8760 + C8761) * C51143 +
                    (C8762 + C8763 + C8764) * C50007) +
                   (C7941 * C731 + C51194 * C743 + C7942 * C732 +
                    C51195 * C744 + C7943 * C733 + C7938 * C745) *
                       C50885) *
                      C51060) *
                     C51022 * C849 +
                 (((C7941 * C851 + C51194 * C856 + C7942 * C852 +
                    C51195 * C857 + C7943 * C853 + C7938 * C858) *
                       C50007 +
                   (C7941 * C860 + C51194 * C866 + C7942 * C861 +
                    C51195 * C867 + C7943 * C862 + C7938 * C868) *
                       C51143 -
                   (C7943 * C854 + C7938 * C859 + C7942 * C853 + C51195 * C858 +
                    C7941 * C852 + C51194 * C857) *
                       C50000 -
                   (C7943 * C863 + C7938 * C869 + C7942 * C862 + C51195 * C868 +
                    C7941 * C861 + C51194 * C867) *
                       C50885) *
                      C51166 +
                  ((C7941 * C972 + C51194 * C980 + C7942 * C971 +
                    C51195 * C979 + C7943 * C970 + C7938 * C978) *
                       C50007 +
                   (C7941 * C976 + C51194 * C984 + C7942 * C975 +
                    C51195 * C983 + C7943 * C974 + C7938 * C982) *
                       C51143 -
                   (C7943 * C969 + C7938 * C977 + C7942 * C970 + C51195 * C978 +
                    C7941 * C971 + C51194 * C979) *
                       C50000 -
                   (C7943 * C973 + C7938 * C981 + C7942 * C974 + C51195 * C982 +
                    C7941 * C975 + C51194 * C983) *
                       C50885) *
                      C51060) *
                     C51022 * C850) *
                C50925) /
                   (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51194 * C132 + C7942 * C126 + C51195 * C133 +
             C7943 * C127 + C7938 * C134) *
                C603 +
            (C7941 * C136 + C51194 * C146 + C7942 * C137 + C51195 * C147 +
             C7943 * C138 + C7938 * C148) *
                C50880) *
               C51166 +
           ((C8127 + C8128 + C8129) * C603 + (C8130 + C8131 + C8132) * C50880) *
               C51060) *
              C51022 * C50951 * C599 -
          (((C8464 + C8465 + C8466) * C50880 + (C8467 + C8468 + C8469) * C603) *
               C51060 +
           ((C8132 + C8131 + C8130) * C50880 + (C8129 + C8128 + C8127) * C603) *
               C51166) *
              C51022 * C50951 * C600 +
          (((C8469 + C8468 + C8467) * C603 + (C8466 + C8465 + C8464) * C50880) *
               C51166 +
           ((C8583 + C8584 + C8585) * C603 + (C8586 + C8587 + C8588) * C50880) *
               C51060) *
              C51022 * C50951 * C601 -
          (((C7943 * C2696 + C7938 * C2699 + C7942 * C2694 + C51195 * C2698 +
             C7941 * C2693 + C51194 * C2697) *
                C50880 +
            (C7943 * C2690 + C7938 * C2695 + C7942 * C2689 + C51195 * C2692 +
             C7941 * C2688 + C51194 * C2691) *
                C603) *
               C51060 +
           ((C8588 + C8587 + C8586) * C50880 + (C8585 + C8584 + C8583) * C603) *
               C51166) *
              C51022 * C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51194 * C132 + C7942 * C126 + C51195 * C133 +
             C7943 * C127 + C7938 * C134) *
                C256 +
            (C7941 * C136 + C51194 * C146 + C7942 * C137 + C51195 * C147 +
             C7943 * C138 + C7938 * C148) *
                C251 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51195 * C134 +
             C7941 * C126 + C51194 * C133) *
                C257 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51195 * C148 +
             C7941 * C137 + C51194 * C147) *
                C252 +
            (C7941 * C127 + C51194 * C134 + C7942 * C128 + C51195 * C135 +
             C7943 * C129 + C7938 * C140) *
                C258 +
            (C7941 * C138 + C51194 * C148 + C7942 * C139 + C51195 * C149 +
             C7943 * C141 + C7938 * C150) *
                C253) *
               C51166 +
           ((C8127 + C8128 + C8129) * C256 + (C8130 + C8131 + C8132) * C251 -
            (C8133 + C8134 + C8135) * C257 - (C8136 + C8137 + C8138) * C252 +
            (C8139 + C8140 + C8141) * C258 + (C8142 + C8143 + C8144) * C253) *
               C51060) *
              C51022 * C50951 * C51151 +
          (((C8135 + C8134 + C8133) * C257 -
            ((C8132 + C8131 + C8130) * C251 + (C8129 + C8128 + C8127) * C256) +
            (C8138 + C8137 + C8136) * C252 - (C8141 + C8140 + C8139) * C258 -
            (C8144 + C8143 + C8142) * C253) *
               C51166 +
           ((C7941 * C513 + C51194 * C518 + C7942 * C514 + C51195 * C519 +
             C7943 * C515 + C7938 * C520) *
                C257 -
            ((C7943 * C523 + C7938 * C529 + C7942 * C522 + C51195 * C528 +
              C7941 * C521 + C51194 * C527) *
                 C251 +
             (C7943 * C514 + C7938 * C519 + C7942 * C513 + C51195 * C518 +
              C7941 * C512 + C51194 * C517) *
                 C256) +
            (C7941 * C522 + C51194 * C528 + C7942 * C523 + C51195 * C529 +
             C7943 * C524 + C7938 * C530) *
                C252 -
            (C7943 * C516 + C7938 * C525 + C7942 * C515 + C51195 * C520 +
             C7941 * C514 + C51194 * C519) *
                C258 -
            (C7943 * C526 + C7938 * C531 + C7942 * C524 + C51195 * C530 +
             C7941 * C523 + C51194 * C529) *
                C253) *
               C51060) *
              C51022 * C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C7941 * C125 + C51194 * C132 + C7942 * C126 + C51195 * C133 +
              C7943 * C127 + C7938 * C134) *
                 C603 +
             (C7941 * C136 + C51194 * C146 + C7942 * C137 + C51195 * C147 +
              C7943 * C138 + C7938 * C148) *
                 C50880) *
                C51166 +
            ((C8127 + C8128 + C8129) * C603 +
             (C8130 + C8131 + C8132) * C50880) *
                C51060) *
               C51022 * C848 -
           (((C8759 + C8760 + C8761) * C50880 +
             (C8762 + C8763 + C8764) * C603) *
                C51060 +
            ((C7943 * C394 + C7938 * C402 + C7942 * C395 + C51195 * C403 +
              C7941 * C396 + C51194 * C404) *
                 C50880 +
             (C7943 * C384 + C7938 * C390 + C7942 * C383 + C51195 * C389 +
              C7941 * C387 + C51194 * C397) *
                 C603) *
                C51166) *
               C51022 * C849 +
           (((C7941 * C851 + C51194 * C856 + C7942 * C852 + C51195 * C857 +
              C7943 * C853 + C7938 * C858) *
                 C603 +
             (C7941 * C860 + C51194 * C866 + C7942 * C861 + C51195 * C867 +
              C7943 * C862 + C7938 * C868) *
                 C50880) *
                C51166 +
            ((C9075 + C9076 + C9077) * C603 +
             (C9078 + C9079 + C9080) * C50880) *
                C51060) *
               C51022 * C850) *
              C51151 +
          ((((C8764 + C8763 + C8762) * C603 +
             (C8761 + C8760 + C8759) * C50880) *
                C51166 +
            ((C8765 + C8766 + C8767) * C603 +
             (C8768 + C8769 + C8770) * C50880) *
                C51060) *
               C51022 * C849 -
           (((C8464 + C8465 + C8466) * C50880 +
             (C8467 + C8468 + C8469) * C603) *
                C51060 +
            ((C8132 + C8131 + C8130) * C50880 +
             (C8129 + C8128 + C8127) * C603) *
                C51166) *
               C51022 * C848 -
           (((C7943 * C3218 + C7938 * C3221 + C7942 * C3216 + C51195 * C3220 +
              C7941 * C3215 + C51194 * C3219) *
                 C50880 +
             (C7943 * C3212 + C7938 * C3217 + C7942 * C3211 + C51195 * C3214 +
              C7941 * C3210 + C51194 * C3213) *
                 C603) *
                C51060 +
            ((C9080 + C9079 + C9078) * C50880 +
             (C9077 + C9076 + C9075) * C603) *
                C51166) *
               C51022 * C850) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7941 * C125 + C51194 * C132 + C7942 * C126 + C51195 * C133 +
              C7943 * C127 + C7938 * C134) *
                 C603 +
             (C7941 * C136 + C51194 * C146 + C7942 * C137 + C51195 * C147 +
              C7943 * C138 + C7938 * C148) *
                 C50880) *
                C51166 +
            ((C8127 + C8128 + C8129) * C603 +
             (C8130 + C8131 + C8132) * C50880) *
                C51060) *
               C51022 * C51152 -
           (((C8759 + C8760 + C8761) * C50880 +
             (C8762 + C8763 + C8764) * C603) *
                C51060 +
            ((C7943 * C394 + C7938 * C402 + C7942 * C395 + C51195 * C403 +
              C7941 * C396 + C51194 * C404) *
                 C50880 +
             (C7943 * C384 + C7938 * C390 + C7942 * C383 + C51195 * C389 +
              C7941 * C387 + C51194 * C397) *
                 C603) *
                C51166) *
               C51022 * C50963) *
              C507 +
          ((((C8764 + C8763 + C8762) * C603 +
             (C8761 + C8760 + C8759) * C50880) *
                C51166 +
            ((C8765 + C8766 + C8767) * C603 +
             (C8768 + C8769 + C8770) * C50880) *
                C51060) *
               C51022 * C50963 -
           (((C8464 + C8465 + C8466) * C50880 +
             (C8467 + C8468 + C8469) * C603) *
                C51060 +
            ((C8132 + C8131 + C8130) * C50880 +
             (C8129 + C8128 + C8127) * C603) *
                C51166) *
               C51022 * C51152) *
              C508 +
          ((((C8469 + C8468 + C8467) * C603 +
             (C8466 + C8465 + C8464) * C50880) *
                C51166 +
            ((C8583 + C8584 + C8585) * C603 +
             (C8586 + C8587 + C8588) * C50880) *
                C51060) *
               C51022 * C51152 -
           (((C7943 * C4009 + C7938 * C4010 + C7942 * C3014 + C51195 * C3020 +
              C7941 * C3013 + C51194 * C3019) *
                 C50880 +
             (C7943 * C4007 + C7938 * C4008 + C7942 * C3008 + C51195 * C3012 +
              C7941 * C3007 + C51194 * C3011) *
                 C603) *
                C51060 +
            ((C8770 + C8769 + C8768) * C50880 +
             (C8767 + C8766 + C8765) * C603) *
                C51166) *
               C51022 * C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51194 * C132 + C7942 * C126 + C51195 * C133 +
             C7943 * C127 + C7938 * C134) *
                C256 +
            (C7941 * C136 + C51194 * C146 + C7942 * C137 + C51195 * C147 +
             C7943 * C138 + C7938 * C148) *
                C251 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51195 * C134 +
             C7941 * C126 + C51194 * C133) *
                C257 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51195 * C148 +
             C7941 * C137 + C51194 * C147) *
                C252 +
            (C7941 * C127 + C51194 * C134 + C7942 * C128 + C51195 * C135 +
             C7943 * C129 + C7938 * C140) *
                C258 +
            (C7941 * C138 + C51194 * C148 + C7942 * C139 + C51195 * C149 +
             C7943 * C141 + C7938 * C150) *
                C253) *
               C51166 +
           ((C8127 + C8128 + C8129) * C256 + (C8130 + C8131 + C8132) * C251 -
            (C8133 + C8134 + C8135) * C257 - (C8136 + C8137 + C8138) * C252 +
            (C8139 + C8140 + C8141) * C258 + (C8142 + C8143 + C8144) * C253) *
               C51060) *
              C51022 * C51152 +
          (((C7941 * C383 + C51194 * C389 + C7942 * C384 + C51195 * C390 +
             C7943 * C385 + C7938 * C391) *
                C257 -
            ((C7943 * C394 + C7938 * C402 + C7942 * C395 + C51195 * C403 +
              C7941 * C396 + C51194 * C404) *
                 C251 +
             (C7943 * C384 + C7938 * C390 + C7942 * C383 + C51195 * C389 +
              C7941 * C387 + C51194 * C397) *
                 C256) +
            (C7941 * C395 + C51194 * C403 + C7942 * C394 + C51195 * C402 +
             C7943 * C393 + C7938 * C401) *
                C252 -
            (C7943 * C386 + C7938 * C392 + C7942 * C385 + C51195 * C391 +
             C7941 * C384 + C51194 * C390) *
                C258 -
            (C7943 * C398 + C7938 * C405 + C7942 * C393 + C51195 * C401 +
             C7941 * C394 + C51194 * C402) *
                C253) *
               C51166 +
           ((C7941 * C719 + C51194 * C727 + C7942 * C720 + C51195 * C728 +
             C7943 * C721 + C7938 * C729) *
                C257 -
            ((C7943 * C732 + C7938 * C744 + C7942 * C731 + C51195 * C743 +
              C7941 * C730 + C51194 * C742) *
                 C251 +
             (C7943 * C720 + C7938 * C728 + C7942 * C719 + C51195 * C727 +
              C7941 * C718 + C51194 * C726) *
                 C256) +
            (C7941 * C731 + C51194 * C743 + C7942 * C732 + C51195 * C744 +
             C7943 * C733 + C7938 * C745) *
                C252 -
            (C7943 * C1412 + C7938 * C1413 + C7942 * C721 + C51195 * C729 +
             C7941 * C720 + C51194 * C728) *
                C258 -
            (C7943 * C1414 + C7938 * C1415 + C7942 * C733 + C51195 * C745 +
             C7941 * C732 + C51194 * C744) *
                C253) *
               C51060) *
              C51022 * C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51194 * C132 + C7942 * C126 + C51195 * C133 +
             C7943 * C127 + C7938 * C134) *
                C603 +
            (C7941 * C136 + C51194 * C146 + C7942 * C137 + C51195 * C147 +
             C7943 * C138 + C7938 * C148) *
                C50880) *
               C51166 +
           ((C8127 + C8128 + C8129) * C603 + (C8130 + C8131 + C8132) * C50880) *
               C51060) *
              C51022 * C1051 -
          (((C8759 + C8760 + C8761) * C50880 + (C8762 + C8763 + C8764) * C603) *
               C51060 +
           ((C7943 * C394 + C7938 * C402 + C7942 * C395 + C51195 * C403 +
             C7941 * C396 + C51194 * C404) *
                C50880 +
            (C7943 * C384 + C7938 * C390 + C7942 * C383 + C51195 * C389 +
             C7941 * C387 + C51194 * C397) *
                C603) *
               C51166) *
              C51022 * C1052 +
          (((C7941 * C851 + C51194 * C856 + C7942 * C852 + C51195 * C857 +
             C7943 * C853 + C7938 * C858) *
                C603 +
            (C7941 * C860 + C51194 * C866 + C7942 * C861 + C51195 * C867 +
             C7943 * C862 + C7938 * C868) *
                C50880) *
               C51166 +
           ((C9075 + C9076 + C9077) * C603 + (C9078 + C9079 + C9080) * C50880) *
               C51060) *
              C51022 * C1053 -
          (((C7943 * C6844 + C7938 * C6845 + C7942 * C3506 + C51195 * C3512 +
             C7941 * C3507 + C51194 * C3513) *
                C50880 +
            (C7943 * C6842 + C7938 * C6843 + C7942 * C3500 + C51195 * C3508 +
             C7941 * C3501 + C51194 * C3509) *
                C603) *
               C51060 +
           ((C7943 * C1060 + C7938 * C1068 + C7942 * C1061 + C51195 * C1069 +
             C7941 * C1062 + C51194 * C1070) *
                C50880 +
            (C7943 * C1056 + C7938 * C1064 + C7942 * C1057 + C51195 * C1065 +
             C7941 * C1058 + C51194 * C1066) *
                C603) *
               C51166) *
              C51022 * C1054) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51194 * C132 + C7942 * C126 + C51195 * C133 +
             C7943 * C127 + C7938 * C134) *
                C1174 +
            (C7941 * C136 + C51194 * C146 + C7942 * C137 + C51195 * C147 +
             C7943 * C138 + C7938 * C148) *
                C51196 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51195 * C134 +
             C7941 * C126 + C51194 * C133) *
                C1175 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51195 * C148 +
             C7941 * C137 + C51194 * C147) *
                C51181 +
            (C7941 * C127 + C51194 * C134 + C7942 * C128 + C51195 * C135 +
             C7943 * C129 + C7938 * C140) *
                C1176 +
            (C7941 * C138 + C51194 * C148 + C7942 * C139 + C51195 * C149 +
             C7943 * C141 + C7938 * C150) *
                C1171) *
               C51166 +
           ((C8127 + C8128 + C8129) * C1174 + (C8130 + C8131 + C8132) * C51196 -
            (C8133 + C8134 + C8135) * C1175 - (C8136 + C8137 + C8138) * C51181 +
            (C8139 + C8140 + C8141) * C1176 + (C8142 + C8143 + C8144) * C1171) *
               C51060) *
              C51022 * C1514 +
          (((C7941 * C383 + C51194 * C389 + C7942 * C384 + C51195 * C390 +
             C7943 * C385 + C7938 * C391) *
                C1175 -
            ((C7943 * C394 + C7938 * C402 + C7942 * C395 + C51195 * C403 +
              C7941 * C396 + C51194 * C404) *
                 C51196 +
             (C7943 * C384 + C7938 * C390 + C7942 * C383 + C51195 * C389 +
              C7941 * C387 + C51194 * C397) *
                 C1174) +
            (C7941 * C395 + C51194 * C403 + C7942 * C394 + C51195 * C402 +
             C7943 * C393 + C7938 * C401) *
                C51181 -
            (C7943 * C386 + C7938 * C392 + C7942 * C385 + C51195 * C391 +
             C7941 * C384 + C51194 * C390) *
                C1176 -
            (C7943 * C398 + C7938 * C405 + C7942 * C393 + C51195 * C401 +
             C7941 * C394 + C51194 * C402) *
                C1171) *
               C51166 +
           ((C9677 + C9678 + C9679) * C1175 -
            ((C8759 + C8760 + C8761) * C51196 +
             (C8762 + C8763 + C8764) * C1174) +
            (C9680 + C9681 + C9682) * C51181 -
            (C7943 * C1412 + C7938 * C1413 + C7942 * C721 + C51195 * C729 +
             C7941 * C720 + C51194 * C728) *
                C1176 -
            (C7943 * C1414 + C7938 * C1415 + C7942 * C733 + C51195 * C745 +
             C7941 * C732 + C51194 * C744) *
                C1171) *
               C51060) *
              C51022 * C50963) *
         C50925) /
        (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7941 * C125 + C51194 * C132 + C7942 * C126 + C51195 * C133 +
              C7943 * C127 + C7938 * C134) *
                 C1280 +
             (C7941 * C136 + C51194 * C146 + C7942 * C137 + C51195 * C147 +
              C7943 * C138 + C7938 * C148) *
                 C1275 -
             (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51195 * C134 +
              C7941 * C126 + C51194 * C133) *
                 C1281 -
             (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51195 * C148 +
              C7941 * C137 + C51194 * C147) *
                 C50885) *
                C51166 +
            ((C8127 + C8128 + C8129) * C1280 + (C8130 + C8131 + C8132) * C1275 -
             (C8133 + C8134 + C8135) * C1281 -
             (C8136 + C8137 + C8138) * C50885) *
                C51060) *
               C51022 * C1514 +
           (((C7941 * C383 + C51194 * C389 + C7942 * C384 + C51195 * C390 +
              C7943 * C385 + C7938 * C391) *
                 C1281 -
             ((C7943 * C394 + C7938 * C402 + C7942 * C395 + C51195 * C403 +
               C7941 * C396 + C51194 * C404) *
                  C1275 +
              (C7943 * C384 + C7938 * C390 + C7942 * C383 + C51195 * C389 +
               C7941 * C387 + C51194 * C397) *
                  C1280) +
             (C7941 * C395 + C51194 * C403 + C7942 * C394 + C51195 * C402 +
              C7943 * C393 + C7938 * C401) *
                 C50885) *
                C51166 +
            ((C9677 + C9678 + C9679) * C1281 -
             ((C8759 + C8760 + C8761) * C1275 +
              (C8762 + C8763 + C8764) * C1280) +
             (C9680 + C9681 + C9682) * C50885) *
                C51060) *
               C51022 * C50963) *
              C51151 +
          ((((C8135 + C8134 + C8133) * C1281 -
             ((C8132 + C8131 + C8130) * C1275 +
              (C8129 + C8128 + C8127) * C1280) +
             (C8138 + C8137 + C8136) * C50885) *
                C51166 +
            ((C8461 + C8462 + C8463) * C1281 -
             ((C8464 + C8465 + C8466) * C1275 +
              (C8467 + C8468 + C8469) * C1280) +
             (C8470 + C8471 + C8472) * C50885) *
                C51060) *
               C51022 * C1514 +
           (((C8764 + C8763 + C8762) * C1280 + (C8761 + C8760 + C8759) * C1275 -
             (C9679 + C9678 + C9677) * C1281 -
             (C9682 + C9681 + C9680) * C50885) *
                C51166 +
            ((C8765 + C8766 + C8767) * C1280 + (C8768 + C8769 + C8770) * C1275 -
             (C7943 * C722 + C7938 * C738 + C7942 * C723 + C51195 * C739 +
              C7941 * C724 + C51194 * C740) *
                 C1281 -
             (C7943 * C734 + C7938 * C746 + C7942 * C735 + C51195 * C747 +
              C7941 * C736 + C51194 * C748) *
                 C50885) *
                C51060) *
               C51022 * C50963) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51194 * C132 + C7942 * C126 + C51195 * C133 +
             C7943 * C127 + C7938 * C134) *
                C1280 +
            (C7941 * C136 + C51194 * C146 + C7942 * C137 + C51195 * C147 +
             C7943 * C138 + C7938 * C148) *
                C1275 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51195 * C134 +
             C7941 * C126 + C51194 * C133) *
                C1281 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51195 * C148 +
             C7941 * C137 + C51194 * C147) *
                C50885) *
               C51166 +
           ((C8127 + C8128 + C8129) * C1280 + (C8130 + C8131 + C8132) * C1275 -
            (C8133 + C8134 + C8135) * C1281 -
            (C8136 + C8137 + C8138) * C50885) *
               C51060) *
              C51022 * C51198 +
          (((C7941 * C383 + C51194 * C389 + C7942 * C384 + C51195 * C390 +
             C7943 * C385 + C7938 * C391) *
                C1281 -
            ((C7943 * C394 + C7938 * C402 + C7942 * C395 + C51195 * C403 +
              C7941 * C396 + C51194 * C404) *
                 C1275 +
             (C7943 * C384 + C7938 * C390 + C7942 * C383 + C51195 * C389 +
              C7941 * C387 + C51194 * C397) *
                 C1280) +
            (C7941 * C395 + C51194 * C403 + C7942 * C394 + C51195 * C402 +
             C7943 * C393 + C7938 * C401) *
                C50885) *
               C51166 +
           ((C9677 + C9678 + C9679) * C1281 -
            ((C8759 + C8760 + C8761) * C1275 +
             (C8762 + C8763 + C8764) * C1280) +
            (C9680 + C9681 + C9682) * C50885) *
               C51060) *
              C51022 * C51187 +
          (((C7941 * C851 + C51194 * C856 + C7942 * C852 + C51195 * C857 +
             C7943 * C853 + C7938 * C858) *
                C1280 +
            (C7941 * C860 + C51194 * C866 + C7942 * C861 + C51195 * C867 +
             C7943 * C862 + C7938 * C868) *
                C1275 -
            (C7943 * C854 + C7938 * C859 + C7942 * C853 + C51195 * C858 +
             C7941 * C852 + C51194 * C857) *
                C1281 -
            (C7943 * C863 + C7938 * C869 + C7942 * C862 + C51195 * C868 +
             C7941 * C861 + C51194 * C867) *
                C50885) *
               C51166 +
           ((C9075 + C9076 + C9077) * C1280 + (C9078 + C9079 + C9080) * C1275 -
            (C7943 * C969 + C7938 * C977 + C7942 * C970 + C51195 * C978 +
             C7941 * C971 + C51194 * C979) *
                C1281 -
            (C7943 * C973 + C7938 * C981 + C7942 * C974 + C51195 * C982 +
             C7941 * C975 + C51194 * C983) *
                C50885) *
               C51060) *
              C51022 * C1746) *
         C50925) /
        (p * q * std::sqrt(p + q));
    d2ee[12] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C7941 * C125 + C51194 * C132 + C7942 * C126 +
                    C51195 * C133 + C7943 * C127 + C7938 * C134) *
                       C121 +
                   (C7941 * C136 + C51194 * C146 + C7942 * C137 +
                    C51195 * C147 + C7943 * C138 + C7938 * C148) *
                       C109 -
                   (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51195 * C134 +
                    C7941 * C126 + C51194 * C133) *
                       C122 -
                   (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51195 * C148 +
                    C7941 * C137 + C51194 * C147) *
                       C110 +
                   (C7941 * C127 + C51194 * C134 + C7942 * C128 +
                    C51195 * C135 + C7943 * C129 + C7938 * C140) *
                       C123 +
                   (C7941 * C138 + C51194 * C148 + C7942 * C139 +
                    C51195 * C149 + C7943 * C141 + C7938 * C150) *
                       C111 -
                   (C7943 * C130 + C7938 * C142 + C7942 * C129 + C51195 * C140 +
                    C7941 * C128 + C51194 * C135) *
                       C124 -
                   (C7943 * C143 + C7938 * C151 + C7942 * C141 + C51195 * C150 +
                    C7941 * C139 + C51194 * C149) *
                       C112) *
                      C51166 +
                  ((C7941 * C263 + C51194 * C273 + C7942 * C259 +
                    C51195 * C265 + C7943 * C260 + C7938 * C266) *
                       C121 +
                   (C7941 * C272 + C51194 * C280 + C7942 * C271 +
                    C51195 * C279 + C7943 * C270 + C7938 * C278) *
                       C109 -
                   (C7943 * C261 + C7938 * C267 + C7942 * C260 + C51195 * C266 +
                    C7941 * C259 + C51194 * C265) *
                       C122 -
                   (C7943 * C269 + C7938 * C277 + C7942 * C270 + C51195 * C278 +
                    C7941 * C271 + C51194 * C279) *
                       C110 +
                   (C7941 * C260 + C51194 * C266 + C7942 * C261 +
                    C51195 * C267 + C7943 * C262 + C7938 * C268) *
                       C123 +
                   (C7941 * C270 + C51194 * C278 + C7942 * C269 +
                    C51195 * C277 + C7943 * C274 + C7938 * C281) *
                       C111 -
                   (C7943 * C264 + C7938 * C275 + C7942 * C262 + C51195 * C268 +
                    C7941 * C261 + C51194 * C267) *
                       C124 -
                   (C7943 * C276 + C7938 * C282 + C7942 * C274 + C51195 * C281 +
                    C7941 * C269 + C51194 * C277) *
                       C112) *
                      C51060) *
                 C51022 * C50951 * C50925) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C7941 * C125 + C51194 * C132 + C7942 * C126 +
                     C51195 * C133 + C7943 * C127 + C7938 * C134) *
                        C50007 +
                    (C7941 * C136 + C51194 * C146 + C7942 * C137 +
                     C51195 * C147 + C7943 * C138 + C7938 * C148) *
                        C51143 -
                    (C7943 * C128 + C7938 * C135 + C7942 * C127 +
                     C51195 * C134 + C7941 * C126 + C51194 * C133) *
                        C50000 -
                    (C7943 * C139 + C7938 * C149 + C7942 * C138 +
                     C51195 * C148 + C7941 * C137 + C51194 * C147) *
                        C50885) *
                       C51166 +
                   ((C8127 + C8128 + C8129) * C50007 +
                    (C8130 + C8131 + C8132) * C51143 -
                    (C8133 + C8134 + C8135) * C50000 -
                    (C8136 + C8137 + C8138) * C50885) *
                       C51060) *
                      C51022 * C50951 * C507 +
                  (((C8135 + C8134 + C8133) * C50000 -
                    ((C8132 + C8131 + C8130) * C51143 +
                     (C8129 + C8128 + C8127) * C50007) +
                    (C8138 + C8137 + C8136) * C50885) *
                       C51166 +
                   ((C8461 + C8462 + C8463) * C50000 -
                    ((C8464 + C8465 + C8466) * C51143 +
                     (C8467 + C8468 + C8469) * C50007) +
                    (C8470 + C8471 + C8472) * C50885) *
                       C51060) *
                      C51022 * C50951 * C508 +
                  (((C8469 + C8468 + C8467) * C50007 +
                    (C8466 + C8465 + C8464) * C51143 -
                    (C8463 + C8462 + C8461) * C50000 -
                    (C8472 + C8471 + C8470) * C50885) *
                       C51166 +
                   ((C7941 * C607 + C51194 * C615 + C7942 * C606 +
                     C51195 * C614 + C7943 * C605 + C7938 * C613) *
                        C50007 +
                    (C7941 * C611 + C51194 * C619 + C7942 * C610 +
                     C51195 * C618 + C7943 * C609 + C7938 * C617) *
                        C51143 -
                    (C7943 * C604 + C7938 * C612 + C7942 * C605 +
                     C51195 * C613 + C7941 * C606 + C51194 * C614) *
                        C50000 -
                    (C7943 * C608 + C7938 * C616 + C7942 * C609 +
                     C51195 * C617 + C7941 * C610 + C51194 * C618) *
                        C50885) *
                       C51060) *
                      C51022 * C50951 * C509)) /
                    (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51194 * C132 + C7942 * C126 + C51195 * C133 +
             C7943 * C127 + C7938 * C134) *
                C256 +
            (C7941 * C136 + C51194 * C146 + C7942 * C137 + C51195 * C147 +
             C7943 * C138 + C7938 * C148) *
                C251 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51195 * C134 +
             C7941 * C126 + C51194 * C133) *
                C257 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51195 * C148 +
             C7941 * C137 + C51194 * C147) *
                C252 +
            (C7941 * C127 + C51194 * C134 + C7942 * C128 + C51195 * C135 +
             C7943 * C129 + C7938 * C140) *
                C258 +
            (C7941 * C138 + C51194 * C148 + C7942 * C139 + C51195 * C149 +
             C7943 * C141 + C7938 * C150) *
                C253) *
               C51166 +
           ((C8127 + C8128 + C8129) * C256 + (C8130 + C8131 + C8132) * C251 -
            (C8133 + C8134 + C8135) * C257 - (C8136 + C8137 + C8138) * C252 +
            (C8139 + C8140 + C8141) * C258 + (C8142 + C8143 + C8144) * C253) *
               C51060) *
              C51022 * C50951 * C51151 +
          (((C8135 + C8134 + C8133) * C257 -
            ((C8132 + C8131 + C8130) * C251 + (C8129 + C8128 + C8127) * C256) +
            (C8138 + C8137 + C8136) * C252 - (C8141 + C8140 + C8139) * C258 -
            (C8144 + C8143 + C8142) * C253) *
               C51166 +
           ((C7941 * C513 + C51194 * C518 + C7942 * C514 + C51195 * C519 +
             C7943 * C515 + C7938 * C520) *
                C257 -
            ((C7943 * C523 + C7938 * C529 + C7942 * C522 + C51195 * C528 +
              C7941 * C521 + C51194 * C527) *
                 C251 +
             (C7943 * C514 + C7938 * C519 + C7942 * C513 + C51195 * C518 +
              C7941 * C512 + C51194 * C517) *
                 C256) +
            (C7941 * C522 + C51194 * C528 + C7942 * C523 + C51195 * C529 +
             C7943 * C524 + C7938 * C530) *
                C252 -
            (C7943 * C516 + C7938 * C525 + C7942 * C515 + C51195 * C520 +
             C7941 * C514 + C51194 * C519) *
                C258 -
            (C7943 * C526 + C7938 * C531 + C7942 * C524 + C51195 * C530 +
             C7941 * C523 + C51194 * C529) *
                C253) *
               C51060) *
              C51022 * C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51194 * C132 + C7942 * C126 + C51195 * C133 +
             C7943 * C127 + C7938 * C134) *
                C603 +
            (C7941 * C136 + C51194 * C146 + C7942 * C137 + C51195 * C147 +
             C7943 * C138 + C7938 * C148) *
                C50880) *
               C51166 +
           ((C8127 + C8128 + C8129) * C603 + (C8130 + C8131 + C8132) * C50880) *
               C51060) *
              C51022 * C50951 * C599 -
          (((C8464 + C8465 + C8466) * C50880 + (C8467 + C8468 + C8469) * C603) *
               C51060 +
           ((C8132 + C8131 + C8130) * C50880 + (C8129 + C8128 + C8127) * C603) *
               C51166) *
              C51022 * C50951 * C600 +
          (((C8469 + C8468 + C8467) * C603 + (C8466 + C8465 + C8464) * C50880) *
               C51166 +
           ((C8583 + C8584 + C8585) * C603 + (C8586 + C8587 + C8588) * C50880) *
               C51060) *
              C51022 * C50951 * C601 -
          (((C7943 * C2696 + C7938 * C2699 + C7942 * C2694 + C51195 * C2698 +
             C7941 * C2693 + C51194 * C2697) *
                C50880 +
            (C7943 * C2690 + C7938 * C2695 + C7942 * C2689 + C51195 * C2692 +
             C7941 * C2688 + C51194 * C2691) *
                C603) *
               C51060 +
           ((C8588 + C8587 + C8586) * C50880 + (C8585 + C8584 + C8583) * C603) *
               C51166) *
              C51022 * C50951 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51194 * C132 + C7942 * C126 + C51195 * C133 +
             C7943 * C127 + C7938 * C134) *
                C256 +
            (C7941 * C136 + C51194 * C146 + C7942 * C137 + C51195 * C147 +
             C7943 * C138 + C7938 * C148) *
                C251 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51195 * C134 +
             C7941 * C126 + C51194 * C133) *
                C257 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51195 * C148 +
             C7941 * C137 + C51194 * C147) *
                C252 +
            (C7941 * C127 + C51194 * C134 + C7942 * C128 + C51195 * C135 +
             C7943 * C129 + C7938 * C140) *
                C258 +
            (C7941 * C138 + C51194 * C148 + C7942 * C139 + C51195 * C149 +
             C7943 * C141 + C7938 * C150) *
                C253) *
               C51166 +
           ((C8127 + C8128 + C8129) * C256 + (C8130 + C8131 + C8132) * C251 -
            (C8133 + C8134 + C8135) * C257 - (C8136 + C8137 + C8138) * C252 +
            (C8139 + C8140 + C8141) * C258 + (C8142 + C8143 + C8144) * C253) *
               C51060) *
              C51022 * C51152 +
          (((C7941 * C383 + C51194 * C389 + C7942 * C384 + C51195 * C390 +
             C7943 * C385 + C7938 * C391) *
                C257 -
            ((C7943 * C394 + C7938 * C402 + C7942 * C395 + C51195 * C403 +
              C7941 * C396 + C51194 * C404) *
                 C251 +
             (C7943 * C384 + C7938 * C390 + C7942 * C383 + C51195 * C389 +
              C7941 * C387 + C51194 * C397) *
                 C256) +
            (C7941 * C395 + C51194 * C403 + C7942 * C394 + C51195 * C402 +
             C7943 * C393 + C7938 * C401) *
                C252 -
            (C7943 * C386 + C7938 * C392 + C7942 * C385 + C51195 * C391 +
             C7941 * C384 + C51194 * C390) *
                C258 -
            (C7943 * C398 + C7938 * C405 + C7942 * C393 + C51195 * C401 +
             C7941 * C394 + C51194 * C402) *
                C253) *
               C51166 +
           ((C7941 * C719 + C51194 * C727 + C7942 * C720 + C51195 * C728 +
             C7943 * C721 + C7938 * C729) *
                C257 -
            ((C7943 * C732 + C7938 * C744 + C7942 * C731 + C51195 * C743 +
              C7941 * C730 + C51194 * C742) *
                 C251 +
             (C7943 * C720 + C7938 * C728 + C7942 * C719 + C51195 * C727 +
              C7941 * C718 + C51194 * C726) *
                 C256) +
            (C7941 * C731 + C51194 * C743 + C7942 * C732 + C51195 * C744 +
             C7943 * C733 + C7938 * C745) *
                C252 -
            (C7943 * C1412 + C7938 * C1413 + C7942 * C721 + C51195 * C729 +
             C7941 * C720 + C51194 * C728) *
                C258 -
            (C7943 * C1414 + C7938 * C1415 + C7942 * C733 + C51195 * C745 +
             C7941 * C732 + C51194 * C744) *
                C253) *
               C51060) *
              C51022 * C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7941 * C125 + C51194 * C132 + C7942 * C126 + C51195 * C133 +
              C7943 * C127 + C7938 * C134) *
                 C603 +
             (C7941 * C136 + C51194 * C146 + C7942 * C137 + C51195 * C147 +
              C7943 * C138 + C7938 * C148) *
                 C50880) *
                C51166 +
            ((C8127 + C8128 + C8129) * C603 +
             (C8130 + C8131 + C8132) * C50880) *
                C51060) *
               C51022 * C51152 -
           (((C8759 + C8760 + C8761) * C50880 +
             (C8762 + C8763 + C8764) * C603) *
                C51060 +
            ((C7943 * C394 + C7938 * C402 + C7942 * C395 + C51195 * C403 +
              C7941 * C396 + C51194 * C404) *
                 C50880 +
             (C7943 * C384 + C7938 * C390 + C7942 * C383 + C51195 * C389 +
              C7941 * C387 + C51194 * C397) *
                 C603) *
                C51166) *
               C51022 * C50963) *
              C507 +
          ((((C8764 + C8763 + C8762) * C603 +
             (C8761 + C8760 + C8759) * C50880) *
                C51166 +
            ((C8765 + C8766 + C8767) * C603 +
             (C8768 + C8769 + C8770) * C50880) *
                C51060) *
               C51022 * C50963 -
           (((C8464 + C8465 + C8466) * C50880 +
             (C8467 + C8468 + C8469) * C603) *
                C51060 +
            ((C8132 + C8131 + C8130) * C50880 +
             (C8129 + C8128 + C8127) * C603) *
                C51166) *
               C51022 * C51152) *
              C508 +
          ((((C8469 + C8468 + C8467) * C603 +
             (C8466 + C8465 + C8464) * C50880) *
                C51166 +
            ((C8583 + C8584 + C8585) * C603 +
             (C8586 + C8587 + C8588) * C50880) *
                C51060) *
               C51022 * C51152 -
           (((C7943 * C4009 + C7938 * C4010 + C7942 * C3014 + C51195 * C3020 +
              C7941 * C3013 + C51194 * C3019) *
                 C50880 +
             (C7943 * C4007 + C7938 * C4008 + C7942 * C3008 + C51195 * C3012 +
              C7941 * C3007 + C51194 * C3011) *
                 C603) *
                C51060 +
            ((C8770 + C8769 + C8768) * C50880 +
             (C8767 + C8766 + C8765) * C603) *
                C51166) *
               C51022 * C50963) *
              C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C1174 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C51196 -
             (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                 C1175 -
             (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                 C51181 +
             (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) *
                 C1176 +
             (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) *
                 C1171) *
                C51166 +
            ((C2373 + C2374) * C1174 + (C2375 + C2376) * C51196 -
             (C2377 + C2378) * C1175 - (C2379 + C2380) * C51181 +
             (C2381 + C2382) * C1176 + (C2383 + C2384) * C1171) *
                C51060) *
               C51167 +
           (((C5449 + C5450) * C1174 + (C5451 + C5452) * C51196 -
             (C5453 + C5454) * C1175 - (C5455 + C5456) * C51181 +
             (C5457 + C5458) * C1176 + (C5459 + C5460) * C1171) *
                C51166 +
            (C14441 * C1174 + C14442 * C51196 - (C4029 + C4028) * C1175 -
             (C4031 + C4030) * C51181 + (C13725 + C13726) * C1176 +
             (C13727 + C13728) * C1171) *
                C51060) *
               C51086) *
              C50951 * C1172 +
          ((((C2378 + C2377) * C1175 -
             ((C2376 + C2375) * C51196 + (C2374 + C2373) * C1174) +
             (C2380 + C2379) * C51181 - (C2382 + C2381) * C1176 -
             (C2384 + C2383) * C1171) *
                C51166 +
            ((C2390 + C2389) * C1175 -
             ((C2388 + C2387) * C51196 + (C2386 + C2385) * C1174) +
             (C2392 + C2391) * C51181 - (C2394 + C2393) * C1176 -
             (C2396 + C2395) * C1171) *
                C51060) *
               C51167 +
           (((C4028 + C4029) * C1175 - (C14443 * C51196 + C14444 * C1174) +
             (C4030 + C4031) * C51181 - (C13726 + C13725) * C1176 -
             (C13728 + C13727) * C1171) *
                C51166 +
            ((C4032 + C4033) * C1175 - (C3060 * C51196 + C3061 * C1174) +
             (C4034 + C4035) * C51181 -
             (C2177 * C722 + C50867 * C738 + C2176 * C723 + C2171 * C739) *
                 C1176 -
             (C2177 * C734 + C50867 * C746 + C2176 * C735 + C2171 * C747) *
                 C1171) *
                C51060) *
               C51086) *
              C50951 * C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C1280 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C1275 -
             (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                 C1281 -
             (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                 C50885) *
                C51166 +
            ((C2373 + C2374) * C1280 + (C2375 + C2376) * C1275 -
             (C2377 + C2378) * C1281 - (C2379 + C2380) * C50885) *
                C51060) *
               C51167 +
           (((C5449 + C5450) * C1280 + (C5451 + C5452) * C1275 -
             (C5453 + C5454) * C1281 - (C5455 + C5456) * C50885) *
                C51166 +
            (C14441 * C1280 + C14442 * C1275 - (C4029 + C4028) * C1281 -
             (C4031 + C4030) * C50885) *
                C51060) *
               C51086) *
              C50951 * C51197 +
          ((((C2378 + C2377) * C1281 -
             ((C2376 + C2375) * C1275 + (C2374 + C2373) * C1280) +
             (C2380 + C2379) * C50885) *
                C51166 +
            ((C2390 + C2389) * C1281 -
             ((C2388 + C2387) * C1275 + (C2386 + C2385) * C1280) +
             (C2392 + C2391) * C50885) *
                C51060) *
               C51167 +
           (((C4028 + C4029) * C1281 - (C14443 * C1275 + C14444 * C1280) +
             (C4030 + C4031) * C50885) *
                C51166 +
            ((C4032 + C4033) * C1281 - (C3060 * C1275 + C3061 * C1280) +
             (C4034 + C4035) * C50885) *
                C51060) *
               C51086) *
              C50951 * C51184 +
          ((C3813 * C51166 +
            ((C2730 + C2729) * C1280 + (C2728 + C2727) * C1275 -
             (C2726 + C2725) * C1281 - (C2732 + C2731) * C50885) *
                C51060) *
               C51167 +
           ((C14445 * C1280 + C14446 * C1275 - (C4033 + C4032) * C1281 -
             (C4035 + C4034) * C50885) *
                C51166 +
            ((C3056 + C3057) * C1280 + (C3058 + C3059) * C1275 -
             (C2177 * C4007 + C50867 * C4008 + C2176 * C3008 + C2171 * C3012) *
                 C1281 -
             (C2177 * C4009 + C50867 * C4010 + C2176 * C3014 + C2171 * C3020) *
                 C50885) *
                C51060) *
               C51086) *
              C50951 * C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                  C1280 +
              (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                  C1275 -
              (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                  C1281 -
              (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                  C50885) *
                 C51166 +
             ((C2373 + C2374) * C1280 + (C2375 + C2376) * C1275 -
              (C2377 + C2378) * C1281 - (C2379 + C2380) * C50885) *
                 C51060) *
                C51167 +
            (((C5449 + C5450) * C1280 + (C5451 + C5452) * C1275 -
              (C5453 + C5454) * C1281 - (C5455 + C5456) * C50885) *
                 C51166 +
             C15641 * C51060) *
                C51086) *
               C51152 +
           ((((C5454 + C5453) * C1281 -
              ((C5452 + C5451) * C1275 + (C5450 + C5449) * C1280) +
              (C5456 + C5455) * C50885) *
                 C51166 +
             C15642 * C51060) *
                C51167 +
            (((C5466 + C5465) * C1281 -
              ((C5464 + C5463) * C1275 + (C5462 + C5461) * C1280) +
              (C5468 + C5467) * C50885) *
                 C51166 +
             ((C6855 + C6856) * C1281 - (C6221 * C1275 + C6222 * C1280) +
              (C6857 + C6858) * C50885) *
                 C51060) *
                C51086) *
               C50963) *
              C1172 +
          (((((C2378 + C2377) * C1281 -
              ((C2376 + C2375) * C1275 + (C2374 + C2373) * C1280) +
              (C2380 + C2379) * C50885) *
                 C51166 +
             ((C2390 + C2389) * C1281 -
              ((C2388 + C2387) * C1275 + (C2386 + C2385) * C1280) +
              (C2392 + C2391) * C50885) *
                 C51060) *
                C51167 +
            (C15642 * C51166 +
             ((C4032 + C4033) * C1281 - (C3060 * C1275 + C3061 * C1280) +
              (C4034 + C4035) * C50885) *
                 C51060) *
                C51086) *
               C51152 +
           ((C15641 * C51166 +
             (C14445 * C1280 + C14446 * C1275 - (C4033 + C4032) * C1281 -
              (C4035 + C4034) * C50885) *
                 C51060) *
                C51167 +
            ((C14844 * C1280 + C14845 * C1275 - (C6856 + C6855) * C1281 -
              (C6858 + C6857) * C50885) *
                 C51166 +
             ((C3397 + C3398) * C1280 + (C3399 + C3400) * C1275 -
              (C2177 * C3212 + C50867 * C3217 + C2176 * C3211 + C2171 * C3214) *
                  C1281 -
              (C2177 * C3218 + C50867 * C3221 + C2176 * C3216 + C2171 * C3220) *
                  C50885) *
                 C51060) *
                C51086) *
               C50963) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                  C50007 +
              (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                  C51143 -
              (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                  C50000 -
              (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                  C50885) *
                 C51166 +
             ((C2373 + C2374) * C50007 + (C2375 + C2376) * C51143 -
              (C2377 + C2378) * C50000 - (C2379 + C2380) * C50885) *
                 C51060) *
                C51167 +
            (((C5449 + C5450) * C50007 + (C5451 + C5452) * C51143 -
              (C5453 + C5454) * C50000 - (C5455 + C5456) * C50885) *
                 C51166 +
             C16559 * C51060) *
                C51086) *
               C1514 +
           ((((C5454 + C5453) * C50000 -
              ((C5452 + C5451) * C51143 + (C5450 + C5449) * C50007) +
              (C5456 + C5455) * C50885) *
                 C51166 +
             C16560 * C51060) *
                C51167 +
            (((C5466 + C5465) * C50000 -
              ((C5464 + C5463) * C51143 + (C5462 + C5461) * C50007) +
              (C5468 + C5467) * C50885) *
                 C51166 +
             ((C6855 + C6856) * C50000 - (C6221 * C51143 + C6222 * C50007) +
              (C6857 + C6858) * C50885) *
                 C51060) *
                C51086) *
               C50963) *
              C1172 +
          (((((C2378 + C2377) * C50000 -
              ((C2376 + C2375) * C51143 + (C2374 + C2373) * C50007) +
              (C2380 + C2379) * C50885) *
                 C51166 +
             ((C2390 + C2389) * C50000 -
              ((C2388 + C2387) * C51143 + (C2386 + C2385) * C50007) +
              (C2392 + C2391) * C50885) *
                 C51060) *
                C51167 +
            (C16560 * C51166 +
             ((C4032 + C4033) * C50000 - (C3060 * C51143 + C3061 * C50007) +
              (C4034 + C4035) * C50885) *
                 C51060) *
                C51086) *
               C1514 +
           ((C16559 * C51166 +
             (C14445 * C50007 + C14446 * C51143 - (C4033 + C4032) * C50000 -
              (C4035 + C4034) * C50885) *
                 C51060) *
                C51167 +
            ((C14844 * C50007 + C14845 * C51143 - (C6856 + C6855) * C50000 -
              (C6858 + C6857) * C50885) *
                 C51166 +
             ((C3397 + C3398) * C50007 + (C3399 + C3400) * C51143 -
              (C2177 * C3212 + C50867 * C3217 + C2176 * C3211 + C2171 * C3214) *
                  C50000 -
              (C2177 * C3218 + C50867 * C3221 + C2176 * C3216 + C2171 * C3220) *
                  C50885) *
                 C51060) *
                C51086) *
               C50963) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                  C603 +
              (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                  C50880) *
                 C51166 +
             ((C2373 + C2374) * C603 + (C2375 + C2376) * C50880) * C51060) *
                C51167 +
            (((C5449 + C5450) * C603 + (C5451 + C5452) * C50880) * C51166 +
             C14453 * C51060) *
                C51086) *
               C1514 -
           ((C6231 * C51060 +
             ((C5464 + C5463) * C50880 + (C5462 + C5461) * C603) * C51166) *
                C51086 +
            (C14454 * C51060 +
             ((C5452 + C5451) * C50880 + (C5450 + C5449) * C603) * C51166) *
                C51167) *
               C50963) *
              C51197 +
          (((C14453 * C51166 + C14455 * C51060) * C51167 +
            (C14848 * C51166 +
             ((C3397 + C3398) * C603 + (C3399 + C3400) * C50880) * C51060) *
                C51086) *
               C50963 -
           ((C3064 * C51060 + C14454 * C51166) * C51086 +
            (((C2388 + C2387) * C50880 + (C2386 + C2385) * C603) * C51060 +
             ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C51166) *
                C51167) *
               C1514) *
              C51184 +
          (((C2854 * C51166 +
             ((C2730 + C2729) * C603 + (C2728 + C2727) * C50880) * C51060) *
                C51167 +
            (C14455 * C51166 +
             ((C3056 + C3057) * C603 + (C3058 + C3059) * C50880) * C51060) *
                C51086) *
               C1514 -
           ((((C2177 * C3370 + C50867 * C3374 + C2176 * C3371 + C2171 * C3375) *
                  C50880 +
              (C2177 * C3368 + C50867 * C3372 + C2176 * C3369 + C2171 * C3373) *
                  C603) *
                 C51060 +
             ((C3400 + C3399) * C50880 + (C3398 + C3397) * C603) * C51166) *
                C51086 +
            (((C3059 + C3058) * C50880 + (C3057 + C3056) * C603) * C51060 +
             C3064 * C51166) *
                C51167) *
               C50963) *
              C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                  C603 +
              (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                  C50880) *
                 C51166 +
             ((C2373 + C2374) * C603 + (C2375 + C2376) * C50880) * C51060) *
                C51167 +
            (((C5449 + C5450) * C603 + (C5451 + C5452) * C50880) * C51166 +
             C14453 * C51060) *
                C51086) *
               C51198 -
           ((C6231 * C51060 +
             ((C5464 + C5463) * C50880 + (C5462 + C5461) * C603) * C51166) *
                C51086 +
            (C14454 * C51060 +
             ((C5452 + C5451) * C50880 + (C5450 + C5449) * C603) * C51166) *
                C51167) *
               C51187 +
           ((C6223 * C51166 + C14848 * C51060) * C51167 +
            (((C6050 + C6049) * C603 + (C6048 + C6047) * C50880) * C51166 +
             ((C6224 + C6225) * C603 + (C6226 + C6227) * C50880) * C51060) *
                C51086) *
               C1746) *
              C1172 +
          (((C14453 * C51166 + C14455 * C51060) * C51167 +
            (C14848 * C51166 +
             ((C3397 + C3398) * C603 + (C3399 + C3400) * C50880) * C51060) *
                C51086) *
               C51187 -
           ((C3064 * C51060 + C14454 * C51166) * C51086 +
            (((C2388 + C2387) * C50880 + (C2386 + C2385) * C603) * C51060 +
             ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C51166) *
                C51167) *
               C51198 -
           ((((C2177 * C3502 + C50867 * C3510 + C2176 * C3503 + C2171 * C3511) *
                  C50880 +
              (C2177 * C3498 + C50867 * C3504 + C2176 * C3499 + C2171 * C3505) *
                  C603) *
                 C51060 +
             ((C6227 + C6226) * C50880 + (C6225 + C6224) * C603) * C51166) *
                C51086 +
            (((C3400 + C3399) * C50880 + (C3398 + C3397) * C603) * C51060 +
             C6231 * C51166) *
                C51167) *
               C1746) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C50007 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C51143 -
             (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                 C50000 -
             (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                 C50885) *
                C51166 +
            ((C2373 + C2374) * C50007 + (C2375 + C2376) * C51143 -
             (C2377 + C2378) * C50000 - (C2379 + C2380) * C50885) *
                C51060) *
               C51167 +
           (((C5449 + C5450) * C50007 + (C5451 + C5452) * C51143 -
             (C5453 + C5454) * C50000 - (C5455 + C5456) * C50885) *
                C51166 +
            ((C3055 + C3054) * C50007 + (C3053 + C3052) * C51143 -
             (C4029 + C4028) * C50000 - (C4031 + C4030) * C50885) *
                C51060) *
               C51086) *
              C50951 * C507 +
          ((((C2378 + C2377) * C50000 -
             ((C2376 + C2375) * C51143 + (C2374 + C2373) * C50007) +
             (C2380 + C2379) * C50885) *
                C51166 +
            ((C2390 + C2389) * C50000 -
             ((C2388 + C2387) * C51143 + (C2386 + C2385) * C50007) +
             (C2392 + C2391) * C50885) *
                C51060) *
               C51167 +
           (((C4028 + C4029) * C50000 -
             ((C3052 + C3053) * C51143 + (C3054 + C3055) * C50007) +
             (C4030 + C4031) * C50885) *
                C51166 +
            ((C4032 + C4033) * C50000 - (C3060 * C51143 + C3061 * C50007) +
             (C4034 + C4035) * C50885) *
                C51060) *
               C51086) *
              C50951 * C508 +
          ((C2735 * C51166 +
            ((C2730 + C2729) * C50007 + (C2728 + C2727) * C51143 -
             (C2726 + C2725) * C50000 - (C2732 + C2731) * C50885) *
                C51060) *
               C51167 +
           (((C3051 + C3050) * C50007 + (C3049 + C3048) * C51143 -
             (C4033 + C4032) * C50000 - (C4035 + C4034) * C50885) *
                C51166 +
            ((C3056 + C3057) * C50007 + (C3058 + C3059) * C51143 -
             (C2177 * C4007 + C50867 * C4008 + C2176 * C3008 + C2171 * C3012) *
                 C50000 -
             (C2177 * C4009 + C50867 * C4010 + C2176 * C3014 + C2171 * C3020) *
                 C50885) *
                C51060) *
               C51086) *
              C50951 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C121 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C109 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C122 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C110 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) *
                C123 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) *
                C111 -
            (C2177 * C129 + C50867 * C140 + C2176 * C128 + C2171 * C135) *
                C124 -
            (C2177 * C141 + C50867 * C150 + C2176 * C139 + C2171 * C149) *
                C112) *
               C51166 +
           ((C2373 + C2374) * C121 + (C2375 + C2376) * C109 -
            (C2377 + C2378) * C122 - (C2379 + C2380) * C110 +
            (C2381 + C2382) * C123 + (C2383 + C2384) * C111 -
            (C2177 * C262 + C50867 * C268 + C2176 * C261 + C2171 * C267) *
                C124 -
            (C2177 * C274 + C50867 * C281 + C2176 * C269 + C2171 * C277) *
                C112) *
               C51060) *
              C51167 +
          (((C5449 + C5450) * C121 + (C5451 + C5452) * C109 -
            (C5453 + C5454) * C122 - (C5455 + C5456) * C110 +
            (C5457 + C5458) * C123 + (C5459 + C5460) * C111 -
            (C2177 * C386 + C50867 * C392 + C2176 * C385 + C2171 * C391) *
                C124 -
            (C2177 * C398 + C50867 * C405 + C2176 * C393 + C2171 * C401) *
                C112) *
               C51166 +
           ((C3055 + C3054) * C121 + (C3053 + C3052) * C109 -
            (C4029 + C4028) * C122 - (C4031 + C4030) * C110 +
            (C2176 * C720 + C2171 * C728 + C2177 * C721 + C50867 * C729) *
                C123 +
            (C2176 * C732 + C2171 * C744 + C2177 * C733 + C50867 * C745) *
                C111 -
            (C2177 * C1412 + C50867 * C1413 + C2176 * C721 + C2171 * C729) *
                C124 -
            (C2177 * C1414 + C50867 * C1415 + C2176 * C733 + C2171 * C745) *
                C112) *
               C51060) *
              C51086) *
         C50951 * C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C50007 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C51143 -
             (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                 C50000 -
             (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                 C50885) *
                C51166 +
            ((C2373 + C2374) * C50007 + (C2375 + C2376) * C51143 -
             (C2377 + C2378) * C50000 - (C2379 + C2380) * C50885) *
                C51060) *
               C51167 +
           (((C5449 + C5450) * C50007 + (C5451 + C5452) * C51143 -
             (C5453 + C5454) * C50000 - (C5455 + C5456) * C50885) *
                C51166 +
            (C14441 * C50007 + C14442 * C51143 - (C4029 + C4028) * C50000 -
             (C4031 + C4030) * C50885) *
                C51060) *
               C51086) *
              C848 +
          ((((C5454 + C5453) * C50000 -
             ((C5452 + C5451) * C51143 + (C5450 + C5449) * C50007) +
             (C5456 + C5455) * C50885) *
                C51166 +
            ((C4028 + C4029) * C50000 - (C14443 * C51143 + C14444 * C50007) +
             (C4030 + C4031) * C50885) *
                C51060) *
               C51167 +
           (((C5466 + C5465) * C50000 -
             ((C5464 + C5463) * C51143 + (C5462 + C5461) * C50007) +
             (C5468 + C5467) * C50885) *
                C51166 +
            ((C6855 + C6856) * C50000 - (C6221 * C51143 + C6222 * C50007) +
             (C6857 + C6858) * C50885) *
                C51060) *
               C51086) *
              C849 +
          ((C6055 * C51166 +
            ((C3393 + C3394) * C50007 + (C3395 + C3396) * C51143 -
             (C6856 + C6855) * C50000 - (C6858 + C6857) * C50885) *
                C51060) *
               C51167 +
           (((C6050 + C6049) * C50007 + (C6048 + C6047) * C51143 -
             (C6046 + C6045) * C50000 - (C6052 + C6051) * C50885) *
                C51166 +
            ((C6224 + C6225) * C50007 + (C6226 + C6227) * C51143 -
             (C2177 * C6842 + C50867 * C6843 + C2176 * C3500 + C2171 * C3508) *
                 C50000 -
             (C2177 * C6844 + C50867 * C6845 + C2176 * C3506 + C2171 * C3512) *
                 C50885) *
                C51060) *
               C51086) *
              C850) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C50880) *
                C51166 +
            ((C2373 + C2374) * C603 + (C2375 + C2376) * C50880) * C51060) *
               C51167 +
           (((C5449 + C5450) * C603 + (C5451 + C5452) * C50880) * C51166 +
            ((C3055 + C3054) * C603 + (C3053 + C3052) * C50880) * C51060) *
               C51086) *
              C50951 * C599 -
          ((C3064 * C51060 +
            ((C3052 + C3053) * C50880 + (C3054 + C3055) * C603) * C51166) *
               C51086 +
           (((C2388 + C2387) * C50880 + (C2386 + C2385) * C603) * C51060 +
            ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C51166) *
               C51167) *
              C50951 * C600 +
          ((C2854 * C51166 +
            ((C2730 + C2729) * C603 + (C2728 + C2727) * C50880) * C51060) *
               C51167 +
           (((C3051 + C3050) * C603 + (C3049 + C3048) * C50880) * C51166 +
            ((C3056 + C3057) * C603 + (C3058 + C3059) * C50880) * C51060) *
               C51086) *
              C50951 * C601 -
          ((((C2177 * C3015 + C50867 * C3021 + C2176 * C3016 + C2171 * C3022) *
                 C50880 +
             (C2177 * C3009 + C50867 * C3017 + C2176 * C3010 + C2171 * C3018) *
                 C603) *
                C51060 +
            ((C3059 + C3058) * C50880 + (C3057 + C3056) * C603) * C51166) *
               C51086 +
           (((C2860 + C2859) * C50880 + (C2858 + C2857) * C603) * C51060 +
            C2861 * C51166) *
               C51167) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C256 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C251 -
             (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                 C257 -
             (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                 C252 +
             (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) *
                 C258 +
             (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) *
                 C253) *
                C51166 +
            ((C2373 + C2374) * C256 + (C2375 + C2376) * C251 -
             (C2377 + C2378) * C257 - (C2379 + C2380) * C252 +
             (C2381 + C2382) * C258 + (C2383 + C2384) * C253) *
                C51060) *
               C51167 +
           (((C5449 + C5450) * C256 + (C5451 + C5452) * C251 -
             (C5453 + C5454) * C257 - (C5455 + C5456) * C252 +
             (C5457 + C5458) * C258 + (C5459 + C5460) * C253) *
                C51166 +
            ((C3055 + C3054) * C256 + (C3053 + C3052) * C251 -
             (C4029 + C4028) * C257 - (C4031 + C4030) * C252 +
             (C13725 + C13726) * C258 + (C13727 + C13728) * C253) *
                C51060) *
               C51086) *
              C50951 * C51151 +
          ((((C2378 + C2377) * C257 -
             ((C2376 + C2375) * C251 + (C2374 + C2373) * C256) +
             (C2380 + C2379) * C252 - (C2382 + C2381) * C258 -
             (C2384 + C2383) * C253) *
                C51166 +
            ((C2390 + C2389) * C257 -
             ((C2388 + C2387) * C251 + (C2386 + C2385) * C256) +
             (C2392 + C2391) * C252 - (C2394 + C2393) * C258 -
             (C2396 + C2395) * C253) *
                C51060) *
               C51167 +
           (((C4028 + C4029) * C257 -
             ((C3052 + C3053) * C251 + (C3054 + C3055) * C256) +
             (C4030 + C4031) * C252 - (C13726 + C13725) * C258 -
             (C13728 + C13727) * C253) *
                C51166 +
            ((C4032 + C4033) * C257 - (C3060 * C251 + C3061 * C256) +
             (C4034 + C4035) * C252 -
             (C2177 * C722 + C50867 * C738 + C2176 * C723 + C2171 * C739) *
                 C258 -
             (C2177 * C734 + C50867 * C746 + C2176 * C735 + C2171 * C747) *
                 C253) *
                C51060) *
               C51086) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                  C603 +
              (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                  C50880) *
                 C51166 +
             ((C2373 + C2374) * C603 + (C2375 + C2376) * C50880) * C51060) *
                C51167 +
            (((C5449 + C5450) * C603 + (C5451 + C5452) * C50880) * C51166 +
             C14453 * C51060) *
                C51086) *
               C848 -
           ((C6231 * C51060 +
             ((C5464 + C5463) * C50880 + (C5462 + C5461) * C603) * C51166) *
                C51086 +
            (C14454 * C51060 +
             ((C5452 + C5451) * C50880 + (C5450 + C5449) * C603) * C51166) *
                C51167) *
               C849 +
           ((C6223 * C51166 + C14848 * C51060) * C51167 +
            (((C6050 + C6049) * C603 + (C6048 + C6047) * C50880) * C51166 +
             ((C6224 + C6225) * C603 + (C6226 + C6227) * C50880) * C51060) *
                C51086) *
               C850) *
              C51151 +
          (((C14453 * C51166 + C14455 * C51060) * C51167 +
            (C14848 * C51166 +
             ((C3397 + C3398) * C603 + (C3399 + C3400) * C50880) * C51060) *
                C51086) *
               C849 -
           ((C3064 * C51060 + C14454 * C51166) * C51086 +
            (((C2388 + C2387) * C50880 + (C2386 + C2385) * C603) * C51060 +
             ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C51166) *
                C51167) *
               C848 -
           ((((C2177 * C3502 + C50867 * C3510 + C2176 * C3503 + C2171 * C3511) *
                  C50880 +
              (C2177 * C3498 + C50867 * C3504 + C2176 * C3499 + C2171 * C3505) *
                  C603) *
                 C51060 +
             ((C6227 + C6226) * C50880 + (C6225 + C6224) * C603) * C51166) *
                C51086 +
            (((C3400 + C3399) * C50880 + (C3398 + C3397) * C603) * C51060 +
             C6231 * C51166) *
                C51167) *
               C850) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                  C603 +
              (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                  C50880) *
                 C51166 +
             ((C2373 + C2374) * C603 + (C2375 + C2376) * C50880) * C51060) *
                C51167 +
            (((C5449 + C5450) * C603 + (C5451 + C5452) * C50880) * C51166 +
             C14453 * C51060) *
                C51086) *
               C51152 -
           ((C6231 * C51060 +
             ((C5464 + C5463) * C50880 + (C5462 + C5461) * C603) * C51166) *
                C51086 +
            (C14454 * C51060 +
             ((C5452 + C5451) * C50880 + (C5450 + C5449) * C603) * C51166) *
                C51167) *
               C50963) *
              C507 +
          (((C14453 * C51166 + C14455 * C51060) * C51167 +
            (((C3393 + C3394) * C603 + (C3395 + C3396) * C50880) * C51166 +
             ((C3397 + C3398) * C603 + (C3399 + C3400) * C50880) * C51060) *
                C51086) *
               C50963 -
           ((C3064 * C51060 + C14454 * C51166) * C51086 +
            (((C2388 + C2387) * C50880 + (C2386 + C2385) * C603) * C51060 +
             ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C51166) *
                C51167) *
               C51152) *
              C508 +
          (((C2854 * C51166 +
             ((C2730 + C2729) * C603 + (C2728 + C2727) * C50880) * C51060) *
                C51167 +
            (C14455 * C51166 +
             ((C3056 + C3057) * C603 + (C3058 + C3059) * C50880) * C51060) *
                C51086) *
               C51152 -
           ((((C2177 * C3370 + C50867 * C3374 + C2176 * C3371 + C2171 * C3375) *
                  C50880 +
              (C2177 * C3368 + C50867 * C3372 + C2176 * C3369 + C2171 * C3373) *
                  C603) *
                 C51060 +
             ((C3400 + C3399) * C50880 + (C3398 + C3397) * C603) * C51166) *
                C51086 +
            (((C3059 + C3058) * C50880 + (C3057 + C3056) * C603) * C51060 +
             C3064 * C51166) *
                C51167) *
               C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C256 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C251 -
             (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                 C257 -
             (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                 C252 +
             (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) *
                 C258 +
             (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) *
                 C253) *
                C51166 +
            ((C2373 + C2374) * C256 + (C2375 + C2376) * C251 -
             (C2377 + C2378) * C257 - (C2379 + C2380) * C252 +
             (C2381 + C2382) * C258 + (C2383 + C2384) * C253) *
                C51060) *
               C51167 +
           (((C5449 + C5450) * C256 + (C5451 + C5452) * C251 -
             (C5453 + C5454) * C257 - (C5455 + C5456) * C252 +
             (C5457 + C5458) * C258 + (C5459 + C5460) * C253) *
                C51166 +
            ((C3055 + C3054) * C256 + (C3053 + C3052) * C251 -
             (C4029 + C4028) * C257 - (C4031 + C4030) * C252 +
             (C13725 + C13726) * C258 + (C13727 + C13728) * C253) *
                C51060) *
               C51086) *
              C51152 +
          ((((C5454 + C5453) * C257 -
             ((C5452 + C5451) * C251 + (C5450 + C5449) * C256) +
             (C5456 + C5455) * C252 - (C5458 + C5457) * C258 -
             (C5460 + C5459) * C253) *
                C51166 +
            ((C4028 + C4029) * C257 -
             ((C3052 + C3053) * C251 + (C3054 + C3055) * C256) +
             (C4030 + C4031) * C252 - (C13726 + C13725) * C258 -
             (C13728 + C13727) * C253) *
                C51060) *
               C51167 +
           (((C5466 + C5465) * C257 -
             ((C5464 + C5463) * C251 + (C5462 + C5461) * C256) +
             (C5468 + C5467) * C252 - (C5470 + C5469) * C258 -
             (C5472 + C5471) * C253) *
                C51166 +
            ((C6855 + C6856) * C257 - (C6221 * C251 + C6222 * C256) +
             (C6857 + C6858) * C252 -
             (C2177 * C969 + C50867 * C977 + C2176 * C970 + C2171 * C978) *
                 C258 -
             (C2177 * C973 + C50867 * C981 + C2176 * C974 + C2171 * C982) *
                 C253) *
                C51060) *
               C51086) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C50880) *
                C51166 +
            ((C2373 + C2374) * C603 + (C2375 + C2376) * C50880) * C51060) *
               C51167 +
           (((C5449 + C5450) * C603 + (C5451 + C5452) * C50880) * C51166 +
            C14453 * C51060) *
               C51086) *
              C1051 -
          ((C6231 * C51060 +
            ((C5464 + C5463) * C50880 + (C5462 + C5461) * C603) * C51166) *
               C51086 +
           (C14454 * C51060 +
            ((C5452 + C5451) * C50880 + (C5450 + C5449) * C603) * C51166) *
               C51167) *
              C1052 +
          ((C6223 * C51166 + C14848 * C51060) * C51167 +
           (((C6050 + C6049) * C603 + (C6048 + C6047) * C50880) * C51166 +
            ((C6224 + C6225) * C603 + (C6226 + C6227) * C50880) * C51060) *
               C51086) *
              C1053 -
          ((((C2177 * C6204 + C50867 * C6208 + C2176 * C6205 + C2171 * C6209) *
                 C50880 +
             (C2177 * C6202 + C50867 * C6206 + C2176 * C6203 + C2171 * C6207) *
                 C603) *
                C51060 +
            ((C6354 + C6353) * C50880 + (C6352 + C6351) * C603) * C51166) *
               C51086 +
           (((C6227 + C6226) * C50880 + (C6225 + C6224) * C603) * C51060 +
            C6355 * C51166) *
               C51167) *
              C1054) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C1174 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C51196 -
             (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                 C1175 -
             (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                 C51181 +
             (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) *
                 C1176 +
             (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) *
                 C1171) *
                C51166 +
            ((C2373 + C2374) * C1174 + (C2375 + C2376) * C51196 -
             (C2377 + C2378) * C1175 - (C2379 + C2380) * C51181 +
             (C2381 + C2382) * C1176 + (C2383 + C2384) * C1171) *
                C51060) *
               C51167 +
           (((C5449 + C5450) * C1174 + (C5451 + C5452) * C51196 -
             (C5453 + C5454) * C1175 - (C5455 + C5456) * C51181 +
             (C5457 + C5458) * C1176 + (C5459 + C5460) * C1171) *
                C51166 +
            (C14441 * C1174 + C14442 * C51196 - C15627 * C1175 -
             C15628 * C51181 + (C13725 + C13726) * C1176 +
             (C13727 + C13728) * C1171) *
                C51060) *
               C51086) *
              C1514 +
          ((((C5454 + C5453) * C1175 -
             ((C5452 + C5451) * C51196 + (C5450 + C5449) * C1174) +
             (C5456 + C5455) * C51181 - (C5458 + C5457) * C1176 -
             (C5460 + C5459) * C1171) *
                C51166 +
            (C15629 * C1175 - (C14443 * C51196 + C14444 * C1174) +
             C15632 * C51181 - (C13726 + C13725) * C1176 -
             (C13728 + C13727) * C1171) *
                C51060) *
               C51167 +
           (((C5466 + C5465) * C1175 -
             ((C5464 + C5463) * C51196 + (C5462 + C5461) * C1174) +
             (C5468 + C5467) * C51181 - (C5470 + C5469) * C1176 -
             (C5472 + C5471) * C1171) *
                C51166 +
            ((C6855 + C6856) * C1175 - (C6221 * C51196 + C6222 * C1174) +
             (C6857 + C6858) * C51181 -
             (C2177 * C969 + C50867 * C977 + C2176 * C970 + C2171 * C978) *
                 C1176 -
             (C2177 * C973 + C50867 * C981 + C2176 * C974 + C2171 * C982) *
                 C1171) *
                C51060) *
               C51086) *
              C50963) *
         C50925) /
        (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                  C1280 +
              (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                  C1275 -
              (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                  C1281 -
              (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                  C50885) *
                 C51166 +
             ((C2373 + C2374) * C1280 + (C2375 + C2376) * C1275 -
              (C2377 + C2378) * C1281 - (C2379 + C2380) * C50885) *
                 C51060) *
                C51167 +
            (((C5449 + C5450) * C1280 + (C5451 + C5452) * C1275 -
              (C5453 + C5454) * C1281 - (C5455 + C5456) * C50885) *
                 C51166 +
             C15641 * C51060) *
                C51086) *
               C1514 +
           ((((C5454 + C5453) * C1281 -
              ((C5452 + C5451) * C1275 + (C5450 + C5449) * C1280) +
              (C5456 + C5455) * C50885) *
                 C51166 +
             C15642 * C51060) *
                C51167 +
            (((C5466 + C5465) * C1281 -
              ((C5464 + C5463) * C1275 + (C5462 + C5461) * C1280) +
              (C5468 + C5467) * C50885) *
                 C51166 +
             ((C6855 + C6856) * C1281 - (C6221 * C1275 + C6222 * C1280) +
              (C6857 + C6858) * C50885) *
                 C51060) *
                C51086) *
               C50963) *
              C51151 +
          (((((C2378 + C2377) * C1281 -
              ((C2376 + C2375) * C1275 + (C2374 + C2373) * C1280) +
              (C2380 + C2379) * C50885) *
                 C51166 +
             ((C2390 + C2389) * C1281 -
              ((C2388 + C2387) * C1275 + (C2386 + C2385) * C1280) +
              (C2392 + C2391) * C50885) *
                 C51060) *
                C51167 +
            (C15642 * C51166 +
             ((C4032 + C4033) * C1281 - (C3060 * C1275 + C3061 * C1280) +
              (C4034 + C4035) * C50885) *
                 C51060) *
                C51086) *
               C1514 +
           ((C15641 * C51166 +
             (C14445 * C1280 + C14446 * C1275 - (C4033 + C4032) * C1281 -
              (C4035 + C4034) * C50885) *
                 C51060) *
                C51167 +
            ((C14844 * C1280 + C14845 * C1275 - (C6856 + C6855) * C1281 -
              (C6858 + C6857) * C50885) *
                 C51166 +
             ((C3397 + C3398) * C1280 + (C3399 + C3400) * C1275 -
              (C2177 * C3212 + C50867 * C3217 + C2176 * C3211 + C2171 * C3214) *
                  C1281 -
              (C2177 * C3218 + C50867 * C3221 + C2176 * C3216 + C2171 * C3220) *
                  C50885) *
                 C51060) *
                C51086) *
               C50963) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C1280 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C1275 -
             (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                 C1281 -
             (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                 C50885) *
                C51166 +
            ((C2373 + C2374) * C1280 + (C2375 + C2376) * C1275 -
             (C2377 + C2378) * C1281 - (C2379 + C2380) * C50885) *
                C51060) *
               C51167 +
           (((C5449 + C5450) * C1280 + (C5451 + C5452) * C1275 -
             (C5453 + C5454) * C1281 - (C5455 + C5456) * C50885) *
                C51166 +
            C15641 * C51060) *
               C51086) *
              C51198 +
          ((((C5454 + C5453) * C1281 -
             ((C5452 + C5451) * C1275 + (C5450 + C5449) * C1280) +
             (C5456 + C5455) * C50885) *
                C51166 +
            C15642 * C51060) *
               C51167 +
           (((C5466 + C5465) * C1281 -
             ((C5464 + C5463) * C1275 + (C5462 + C5461) * C1280) +
             (C5468 + C5467) * C50885) *
                C51166 +
            ((C6855 + C6856) * C1281 - (C6221 * C1275 + C6222 * C1280) +
             (C6857 + C6858) * C50885) *
                C51060) *
               C51086) *
              C51187 +
          ((C7351 * C51166 +
            (C14844 * C1280 + C14845 * C1275 - (C6856 + C6855) * C1281 -
             (C6858 + C6857) * C50885) *
                C51060) *
               C51167 +
           (((C6050 + C6049) * C1280 + (C6048 + C6047) * C1275 -
             (C6046 + C6045) * C1281 - (C6052 + C6051) * C50885) *
                C51166 +
            ((C6224 + C6225) * C1280 + (C6226 + C6227) * C1275 -
             (C2177 * C6842 + C50867 * C6843 + C2176 * C3500 + C2171 * C3508) *
                 C1281 -
             (C2177 * C6844 + C50867 * C6845 + C2176 * C3506 + C2171 * C3512) *
                 C50885) *
                C51060) *
               C51086) *
              C1746) *
         C50925) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C121 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C109 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C122 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C110 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) *
                C123 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) *
                C111 -
            (C2177 * C129 + C50867 * C140 + C2176 * C128 + C2171 * C135) *
                C124 -
            (C2177 * C141 + C50867 * C150 + C2176 * C139 + C2171 * C149) *
                C112) *
               C51166 +
           ((C2373 + C2374) * C121 + (C2375 + C2376) * C109 -
            (C2377 + C2378) * C122 - (C2379 + C2380) * C110 +
            (C2381 + C2382) * C123 + (C2383 + C2384) * C111 -
            (C2177 * C262 + C50867 * C268 + C2176 * C261 + C2171 * C267) *
                C124 -
            (C2177 * C274 + C50867 * C281 + C2176 * C269 + C2171 * C277) *
                C112) *
               C51060) *
              C51167 +
          (((C5449 + C5450) * C121 + (C5451 + C5452) * C109 -
            (C5453 + C5454) * C122 - (C5455 + C5456) * C110 +
            (C5457 + C5458) * C123 + (C5459 + C5460) * C111 -
            (C2177 * C386 + C50867 * C392 + C2176 * C385 + C2171 * C391) *
                C124 -
            (C2177 * C398 + C50867 * C405 + C2176 * C393 + C2171 * C401) *
                C112) *
               C51166 +
           ((C3055 + C3054) * C121 + (C3053 + C3052) * C109 -
            (C4029 + C4028) * C122 - (C4031 + C4030) * C110 +
            (C2176 * C720 + C2171 * C728 + C2177 * C721 + C50867 * C729) *
                C123 +
            (C2176 * C732 + C2171 * C744 + C2177 * C733 + C50867 * C745) *
                C111 -
            (C2177 * C1412 + C50867 * C1413 + C2176 * C721 + C2171 * C729) *
                C124 -
            (C2177 * C1414 + C50867 * C1415 + C2176 * C733 + C2171 * C745) *
                C112) *
               C51060) *
              C51086) *
         C50951 * C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C50007 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C51143 -
             (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                 C50000 -
             (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                 C50885) *
                C51166 +
            ((C2373 + C2374) * C50007 + (C2375 + C2376) * C51143 -
             (C2377 + C2378) * C50000 - (C2379 + C2380) * C50885) *
                C51060) *
               C51167 +
           (((C5449 + C5450) * C50007 + (C5451 + C5452) * C51143 -
             (C5453 + C5454) * C50000 - (C5455 + C5456) * C50885) *
                C51166 +
            ((C3055 + C3054) * C50007 + (C3053 + C3052) * C51143 -
             (C4029 + C4028) * C50000 - (C4031 + C4030) * C50885) *
                C51060) *
               C51086) *
              C50951 * C507 +
          ((((C2378 + C2377) * C50000 -
             ((C2376 + C2375) * C51143 + (C2374 + C2373) * C50007) +
             (C2380 + C2379) * C50885) *
                C51166 +
            ((C2390 + C2389) * C50000 -
             ((C2388 + C2387) * C51143 + (C2386 + C2385) * C50007) +
             (C2392 + C2391) * C50885) *
                C51060) *
               C51167 +
           (((C4028 + C4029) * C50000 -
             ((C3052 + C3053) * C51143 + (C3054 + C3055) * C50007) +
             (C4030 + C4031) * C50885) *
                C51166 +
            ((C4032 + C4033) * C50000 - (C3060 * C51143 + C3061 * C50007) +
             (C4034 + C4035) * C50885) *
                C51060) *
               C51086) *
              C50951 * C508 +
          ((C2735 * C51166 +
            ((C2730 + C2729) * C50007 + (C2728 + C2727) * C51143 -
             (C2726 + C2725) * C50000 - (C2732 + C2731) * C50885) *
                C51060) *
               C51167 +
           (((C3051 + C3050) * C50007 + (C3049 + C3048) * C51143 -
             (C4033 + C4032) * C50000 - (C4035 + C4034) * C50885) *
                C51166 +
            ((C3056 + C3057) * C50007 + (C3058 + C3059) * C51143 -
             (C2177 * C4007 + C50867 * C4008 + C2176 * C3008 + C2171 * C3012) *
                 C50000 -
             (C2177 * C4009 + C50867 * C4010 + C2176 * C3014 + C2171 * C3020) *
                 C50885) *
                C51060) *
               C51086) *
              C50951 * C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C256 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C251 -
             (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                 C257 -
             (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                 C252 +
             (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) *
                 C258 +
             (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) *
                 C253) *
                C51166 +
            ((C2373 + C2374) * C256 + (C2375 + C2376) * C251 -
             (C2377 + C2378) * C257 - (C2379 + C2380) * C252 +
             (C2381 + C2382) * C258 + (C2383 + C2384) * C253) *
                C51060) *
               C51167 +
           (((C5449 + C5450) * C256 + (C5451 + C5452) * C251 -
             (C5453 + C5454) * C257 - (C5455 + C5456) * C252 +
             (C5457 + C5458) * C258 + (C5459 + C5460) * C253) *
                C51166 +
            ((C3055 + C3054) * C256 + (C3053 + C3052) * C251 -
             (C4029 + C4028) * C257 - (C4031 + C4030) * C252 +
             (C13725 + C13726) * C258 + (C13727 + C13728) * C253) *
                C51060) *
               C51086) *
              C50951 * C51151 +
          ((((C2378 + C2377) * C257 -
             ((C2376 + C2375) * C251 + (C2374 + C2373) * C256) +
             (C2380 + C2379) * C252 - (C2382 + C2381) * C258 -
             (C2384 + C2383) * C253) *
                C51166 +
            ((C2390 + C2389) * C257 -
             ((C2388 + C2387) * C251 + (C2386 + C2385) * C256) +
             (C2392 + C2391) * C252 - (C2394 + C2393) * C258 -
             (C2396 + C2395) * C253) *
                C51060) *
               C51167 +
           (((C4028 + C4029) * C257 -
             ((C3052 + C3053) * C251 + (C3054 + C3055) * C256) +
             (C4030 + C4031) * C252 - (C13726 + C13725) * C258 -
             (C13728 + C13727) * C253) *
                C51166 +
            ((C4032 + C4033) * C257 - (C3060 * C251 + C3061 * C256) +
             (C4034 + C4035) * C252 -
             (C2177 * C722 + C50867 * C738 + C2176 * C723 + C2171 * C739) *
                 C258 -
             (C2177 * C734 + C50867 * C746 + C2176 * C735 + C2171 * C747) *
                 C253) *
                C51060) *
               C51086) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C50880) *
                C51166 +
            ((C2373 + C2374) * C603 + (C2375 + C2376) * C50880) * C51060) *
               C51167 +
           (((C5449 + C5450) * C603 + (C5451 + C5452) * C50880) * C51166 +
            ((C3055 + C3054) * C603 + (C3053 + C3052) * C50880) * C51060) *
               C51086) *
              C50951 * C599 -
          ((C3064 * C51060 +
            ((C3052 + C3053) * C50880 + (C3054 + C3055) * C603) * C51166) *
               C51086 +
           (((C2388 + C2387) * C50880 + (C2386 + C2385) * C603) * C51060 +
            ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C51166) *
               C51167) *
              C50951 * C600 +
          ((C2854 * C51166 +
            ((C2730 + C2729) * C603 + (C2728 + C2727) * C50880) * C51060) *
               C51167 +
           (((C3051 + C3050) * C603 + (C3049 + C3048) * C50880) * C51166 +
            ((C3056 + C3057) * C603 + (C3058 + C3059) * C50880) * C51060) *
               C51086) *
              C50951 * C601 -
          ((((C2177 * C3015 + C50867 * C3021 + C2176 * C3016 + C2171 * C3022) *
                 C50880 +
             (C2177 * C3009 + C50867 * C3017 + C2176 * C3010 + C2171 * C3018) *
                 C603) *
                C51060 +
            ((C3059 + C3058) * C50880 + (C3057 + C3056) * C603) * C51166) *
               C51086 +
           (((C2860 + C2859) * C50880 + (C2858 + C2857) * C603) * C51060 +
            C2861 * C51166) *
               C51167) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C256 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C251 -
             (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                 C257 -
             (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                 C252 +
             (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) *
                 C258 +
             (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) *
                 C253) *
                C51166 +
            ((C2373 + C2374) * C256 + (C2375 + C2376) * C251 -
             (C2377 + C2378) * C257 - (C2379 + C2380) * C252 +
             (C2381 + C2382) * C258 + (C2383 + C2384) * C253) *
                C51060) *
               C51167 +
           (((C5449 + C5450) * C256 + (C5451 + C5452) * C251 -
             (C5453 + C5454) * C257 - (C5455 + C5456) * C252 +
             (C5457 + C5458) * C258 + (C5459 + C5460) * C253) *
                C51166 +
            ((C3055 + C3054) * C256 + (C3053 + C3052) * C251 -
             (C4029 + C4028) * C257 - (C4031 + C4030) * C252 +
             (C13725 + C13726) * C258 + (C13727 + C13728) * C253) *
                C51060) *
               C51086) *
              C51152 +
          ((((C5454 + C5453) * C257 -
             ((C5452 + C5451) * C251 + (C5450 + C5449) * C256) +
             (C5456 + C5455) * C252 - (C5458 + C5457) * C258 -
             (C5460 + C5459) * C253) *
                C51166 +
            ((C4028 + C4029) * C257 -
             ((C3052 + C3053) * C251 + (C3054 + C3055) * C256) +
             (C4030 + C4031) * C252 - (C13726 + C13725) * C258 -
             (C13728 + C13727) * C253) *
                C51060) *
               C51167 +
           (((C5466 + C5465) * C257 -
             ((C5464 + C5463) * C251 + (C5462 + C5461) * C256) +
             (C5468 + C5467) * C252 - (C5470 + C5469) * C258 -
             (C5472 + C5471) * C253) *
                C51166 +
            ((C6855 + C6856) * C257 - (C6221 * C251 + C6222 * C256) +
             (C6857 + C6858) * C252 -
             (C2177 * C969 + C50867 * C977 + C2176 * C970 + C2171 * C978) *
                 C258 -
             (C2177 * C973 + C50867 * C981 + C2176 * C974 + C2171 * C982) *
                 C253) *
                C51060) *
               C51086) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                  C603 +
              (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                  C50880) *
                 C51166 +
             ((C2373 + C2374) * C603 + (C2375 + C2376) * C50880) * C51060) *
                C51167 +
            (((C5449 + C5450) * C603 + (C5451 + C5452) * C50880) * C51166 +
             C14453 * C51060) *
                C51086) *
               C51152 -
           ((C6231 * C51060 +
             ((C5464 + C5463) * C50880 + (C5462 + C5461) * C603) * C51166) *
                C51086 +
            (C14454 * C51060 +
             ((C5452 + C5451) * C50880 + (C5450 + C5449) * C603) * C51166) *
                C51167) *
               C50963) *
              C507 +
          (((C14453 * C51166 + C14455 * C51060) * C51167 +
            (((C3393 + C3394) * C603 + (C3395 + C3396) * C50880) * C51166 +
             ((C3397 + C3398) * C603 + (C3399 + C3400) * C50880) * C51060) *
                C51086) *
               C50963 -
           ((C3064 * C51060 + C14454 * C51166) * C51086 +
            (((C2388 + C2387) * C50880 + (C2386 + C2385) * C603) * C51060 +
             ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C51166) *
                C51167) *
               C51152) *
              C508 +
          (((C2854 * C51166 +
             ((C2730 + C2729) * C603 + (C2728 + C2727) * C50880) * C51060) *
                C51167 +
            (C14455 * C51166 +
             ((C3056 + C3057) * C603 + (C3058 + C3059) * C50880) * C51060) *
                C51086) *
               C51152 -
           ((((C2177 * C3370 + C50867 * C3374 + C2176 * C3371 + C2171 * C3375) *
                  C50880 +
              (C2177 * C3368 + C50867 * C3372 + C2176 * C3369 + C2171 * C3373) *
                  C603) *
                 C51060 +
             ((C3400 + C3399) * C50880 + (C3398 + C3397) * C603) * C51166) *
                C51086 +
            (((C3059 + C3058) * C50880 + (C3057 + C3056) * C603) * C51060 +
             C3064 * C51166) *
                C51167) *
               C50963) *
              C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C1174 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C51196 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C1175 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C51181 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) *
                C1176 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) *
                C1171) *
               C2173 +
           ((C2373 + C2374) * C1174 + (C2375 + C2376) * C51196 -
            (C2377 + C2378) * C1175 - (C2379 + C2380) * C51181 +
            (C2381 + C2382) * C1176 + (C2383 + C2384) * C1171) *
               C2174 +
           (C2701 * C1174 + C2702 * C51196 - C2703 * C1175 - C2704 * C51181 +
            (C2393 + C2394) * C1176 + (C2395 + C2396) * C1171) *
               C2175) *
              C51022 * C50951 * C1172 +
          (((C2378 + C2377) * C1175 -
            ((C2376 + C2375) * C51196 + (C2374 + C2373) * C1174) +
            (C2380 + C2379) * C51181 - (C2382 + C2381) * C1176 -
            (C2384 + C2383) * C1171) *
               C2173 +
           ((C2390 + C2389) * C1175 -
            ((C2388 + C2387) * C51196 + (C2386 + C2385) * C1174) +
            (C2392 + C2391) * C51181 - (C2394 + C2393) * C1176 -
            (C2396 + C2395) * C1171) *
               C2174 +
           ((C2725 + C2726) * C1175 - (C2844 * C51196 + C2845 * C1174) +
            (C2731 + C2732) * C51181 -
            (C2177 * C604 + C50867 * C612 + C2176 * C605 + C2171 * C613) *
                C1176 -
            (C2177 * C608 + C50867 * C616 + C2176 * C609 + C2171 * C617) *
                C1171) *
               C2175) *
              C51022 * C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C1174 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C51196 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C1175 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C51181 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C1176 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C1171) *
              C51010 * C51022 * C50951 * C1172 +
          ((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
            C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
               C1175 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C51196 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C1174) +
           (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
            C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
               C51181 -
           (C120 * C264 + C108 * C275 + C119 * C262 + C107 * C268 +
            C118 * C261 + C106 * C267 + C117 * C260 + C105 * C266) *
               C1176 -
           (C120 * C276 + C108 * C282 + C119 * C274 + C107 * C281 +
            C118 * C269 + C106 * C277 + C117 * C270 + C105 * C278) *
               C1171) *
              C51010 * C51022 * C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C1174 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C51196 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C1175 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C51181 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) *
                C1176 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) *
                C1171) *
               C51010 * C5105 +
           ((C5449 + C5450) * C1174 + (C5451 + C5452) * C51196 -
            (C5453 + C5454) * C1175 - (C5455 + C5456) * C51181 +
            (C5457 + C5458) * C1176 + (C5459 + C5460) * C1171) *
               C51010 * C5106 +
           (C6021 * C1174 + C6022 * C51196 - C6023 * C1175 - C6024 * C51181 +
            (C5469 + C5470) * C1176 + (C5471 + C5472) * C1171) *
               C51010 * C5107) *
              C50951 * C1172 +
          (((C2378 + C2377) * C1175 -
            ((C2376 + C2375) * C51196 + (C2374 + C2373) * C1174) +
            (C2380 + C2379) * C51181 - (C2382 + C2381) * C1176 -
            (C2384 + C2383) * C1171) *
               C51010 * C5105 +
           ((C4028 + C4029) * C1175 -
            ((C3052 + C3053) * C51196 + (C3054 + C3055) * C1174) +
            (C4030 + C4031) * C51181 -
            (C2177 * C721 + C50867 * C729 + C2176 * C720 + C2171 * C728) *
                C1176 -
            (C2177 * C733 + C50867 * C745 + C2176 * C732 + C2171 * C744) *
                C1171) *
               C51010 * C5106 +
           ((C2176 * C971 + C2171 * C979 + C2177 * C970 + C50867 * C978) *
                C1175 -
            (C6221 * C51196 + C6222 * C1174) +
            (C2176 * C975 + C2171 * C983 + C2177 * C974 + C50867 * C982) *
                C51181 -
            (C2177 * C969 + C50867 * C977 + C2176 * C970 + C2171 * C978) *
                C1176 -
            (C2177 * C973 + C50867 * C981 + C2176 * C974 + C2171 * C982) *
                C1171) *
               C51010 * C5107) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C1280 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C1275 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C1281 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C50885) *
               C2173 +
           ((C2373 + C2374) * C1280 + (C2375 + C2376) * C1275 -
            (C2377 + C2378) * C1281 - (C2379 + C2380) * C50885) *
               C2174 +
           C3813 * C2175) *
              C51022 * C50951 * C51197 +
          (((C2378 + C2377) * C1281 -
            ((C2376 + C2375) * C1275 + (C2374 + C2373) * C1280) +
            (C2380 + C2379) * C50885) *
               C2173 +
           ((C2390 + C2389) * C1281 -
            ((C2388 + C2387) * C1275 + (C2386 + C2385) * C1280) +
            (C2392 + C2391) * C50885) *
               C2174 +
           ((C2725 + C2726) * C1281 - (C2844 * C1275 + C2845 * C1280) +
            (C2731 + C2732) * C50885) *
               C2175) *
              C51022 * C50951 * C51184 +
          (C3813 * C2173 +
           ((C2730 + C2729) * C1280 + (C2728 + C2727) * C1275 -
            (C2726 + C2725) * C1281 - (C2732 + C2731) * C50885) *
               C2174 +
           ((C2857 + C2858) * C1280 + (C2859 + C2860) * C1275 -
            (C2177 * C2690 + C50867 * C2695 + C2176 * C2689 + C2171 * C2692) *
                C1281 -
            (C2177 * C2696 + C50867 * C2699 + C2176 * C2694 + C2171 * C2698) *
                C50885) *
               C2175) *
              C51022 * C50951 * C1279)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C1280 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C1275 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C1281 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50885) *
              C51010 * C51022 * C50951 * C51197 +
          ((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
            C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
               C1281 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C1275 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C1280) +
           (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
            C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
               C50885) *
              C51010 * C51022 * C50951 * C51184 +
          ((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
            C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
               C1280 +
           (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
            C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
               C1275 -
           (C120 * C516 + C108 * C525 + C119 * C515 + C107 * C520 +
            C118 * C514 + C106 * C519 + C117 * C513 + C105 * C518) *
               C1281 -
           (C120 * C526 + C108 * C531 + C119 * C524 + C107 * C530 +
            C118 * C523 + C106 * C529 + C117 * C522 + C105 * C528) *
               C50885) *
              C51010 * C51022 * C50951 * C1279)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C1280 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C1275 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C1281 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C50885) *
               C51010 * C5105 +
           ((C5449 + C5450) * C1280 + (C5451 + C5452) * C1275 -
            (C5453 + C5454) * C1281 - (C5455 + C5456) * C50885) *
               C51010 * C5106 +
           (C6021 * C1280 + C6022 * C1275 - C6023 * C1281 - C6024 * C50885) *
               C51010 * C5107) *
              C50951 * C51197 +
          (((C2378 + C2377) * C1281 -
            ((C2376 + C2375) * C1275 + (C2374 + C2373) * C1280) +
            (C2380 + C2379) * C50885) *
               C51010 * C5105 +
           ((C4028 + C4029) * C1281 -
            ((C3052 + C3053) * C1275 + (C3054 + C3055) * C1280) +
            (C4030 + C4031) * C50885) *
               C51010 * C5106 +
           ((C2176 * C971 + C2171 * C979 + C2177 * C970 + C50867 * C978) *
                C1281 -
            (C6221 * C1275 + C6222 * C1280) +
            (C2176 * C975 + C2171 * C983 + C2177 * C974 + C50867 * C982) *
                C50885) *
               C51010 * C5107) *
              C50951 * C51184 +
          (C3813 * C51010 * C5105 +
           ((C3051 + C3050) * C1280 + (C3049 + C3048) * C1275 -
            (C4033 + C4032) * C1281 - (C4035 + C4034) * C50885) *
               C51010 * C5106 +
           ((C3397 + C3398) * C1280 + (C3399 + C3400) * C1275 -
            (C2177 * C3212 + C50867 * C3217 + C2176 * C3211 + C2171 * C3214) *
                C1281 -
            (C2177 * C3218 + C50867 * C3221 + C2176 * C3216 + C2171 * C3220) *
                C50885) *
               C51010 * C5107) *
              C50951 * C1279)) /
            (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C1280 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C1275 -
             (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                 C1281 -
             (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                 C50885) *
                C2173 +
            ((C2373 + C2374) * C1280 + (C2375 + C2376) * C1275 -
             (C2377 + C2378) * C1281 - (C2379 + C2380) * C50885) *
                C2174 +
            C3813 * C2175) *
               C51022 * C51152 +
           (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C50867 * C390) *
                 C1281 -
             ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                  C1275 +
              (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                  C1280) +
             (C2176 * C395 + C2171 * C403 + C2177 * C394 + C50867 * C402) *
                 C50885) *
                C2173 +
            ((C4028 + C4029) * C1281 -
             ((C3052 + C3053) * C1275 + (C3054 + C3055) * C1280) +
             (C4030 + C4031) * C50885) *
                C2174 +
            ((C4032 + C4033) * C1281 - (C3060 * C1275 + C3061 * C1280) +
             (C4034 + C4035) * C50885) *
                C2175) *
               C51022 * C50963) *
              C1172 +
          ((((C2378 + C2377) * C1281 -
             ((C2376 + C2375) * C1275 + (C2374 + C2373) * C1280) +
             (C2380 + C2379) * C50885) *
                C2173 +
            ((C2390 + C2389) * C1281 -
             ((C2388 + C2387) * C1275 + (C2386 + C2385) * C1280) +
             (C2392 + C2391) * C50885) *
                C2174 +
            ((C2725 + C2726) * C1281 - (C2844 * C1275 + C2845 * C1280) +
             (C2731 + C2732) * C50885) *
                C2175) *
               C51022 * C51152 +
           (((C3055 + C3054) * C1280 + (C3053 + C3052) * C1275 -
             (C4029 + C4028) * C1281 - (C4031 + C4030) * C50885) *
                C2173 +
            ((C3051 + C3050) * C1280 + (C3049 + C3048) * C1275 -
             (C4033 + C4032) * C1281 - (C4035 + C4034) * C50885) *
                C2174 +
            ((C3056 + C3057) * C1280 + (C3058 + C3059) * C1275 -
             (C2177 * C4007 + C50867 * C4008 + C2176 * C3008 + C2171 * C3012) *
                 C1281 -
             (C2177 * C4009 + C50867 * C4010 + C2176 * C3014 + C2171 * C3020) *
                 C50885) *
                C2175) *
               C51022 * C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C1280 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C1275 -
            (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
             C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                C1281 -
            (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
             C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                C50885) *
               C51010 * C51022 * C51152 +
           ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
             C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
                C1281 -
            ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
              C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                 C1275 +
             (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
              C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                 C1280) +
            (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
             C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
                C50885) *
               C51010 * C51022 * C50963) *
              C1172 +
          (((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
             C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
                C1281 -
            ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
              C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                 C1275 +
             (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
              C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                 C1280) +
            (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
             C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
                C50885) *
               C51010 * C51022 * C51152 +
           ((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C1280 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C1275 -
            (C120 * C1412 + C108 * C1413 + C119 * C721 + C107 * C729 +
             C118 * C720 + C106 * C728 + C117 * C719 + C105 * C727) *
                C1281 -
            (C120 * C1414 + C108 * C1415 + C119 * C733 + C107 * C745 +
             C118 * C732 + C106 * C744 + C117 * C731 + C105 * C743) *
                C50885) *
               C51010 * C51022 * C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C1280 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C1275 -
             (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                 C1281 -
             (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                 C50885) *
                C51010 * C5105 +
            ((C5449 + C5450) * C1280 + (C5451 + C5452) * C1275 -
             (C5453 + C5454) * C1281 - (C5455 + C5456) * C50885) *
                C51010 * C5106 +
            (C6021 * C1280 + C6022 * C1275 - C6023 * C1281 - C6024 * C50885) *
                C51010 * C5107) *
               C51152 +
           (((C5454 + C5453) * C1281 -
             ((C5452 + C5451) * C1275 + (C5450 + C5449) * C1280) +
             (C5456 + C5455) * C50885) *
                C51010 * C5105 +
            ((C5466 + C5465) * C1281 -
             ((C5464 + C5463) * C1275 + (C5462 + C5461) * C1280) +
             (C5468 + C5467) * C50885) *
                C51010 * C5106 +
            ((C6045 + C6046) * C1281 - (C6339 * C1275 + C6340 * C1280) +
             (C6051 + C6052) * C50885) *
                C51010 * C5107) *
               C50963) *
              C1172 +
          ((((C2378 + C2377) * C1281 -
             ((C2376 + C2375) * C1275 + (C2374 + C2373) * C1280) +
             (C2380 + C2379) * C50885) *
                C51010 * C5105 +
            ((C4028 + C4029) * C1281 -
             ((C3052 + C3053) * C1275 + (C3054 + C3055) * C1280) +
             (C4030 + C4031) * C50885) *
                C51010 * C5106 +
            ((C6855 + C6856) * C1281 - (C6221 * C1275 + C6222 * C1280) +
             (C6857 + C6858) * C50885) *
                C51010 * C5107) *
               C51152 +
           (((C3055 + C3054) * C1280 + (C3053 + C3052) * C1275 -
             (C4029 + C4028) * C1281 - (C4031 + C4030) * C50885) *
                C51010 * C5105 +
            ((C3393 + C3394) * C1280 + (C3395 + C3396) * C1275 -
             (C6856 + C6855) * C1281 - (C6858 + C6857) * C50885) *
                C51010 * C5106 +
            ((C6224 + C6225) * C1280 + (C6226 + C6227) * C1275 -
             (C2177 * C6842 + C50867 * C6843 + C2176 * C3500 + C2171 * C3508) *
                 C1281 -
             (C2177 * C6844 + C50867 * C6845 + C2176 * C3506 + C2171 * C3512) *
                 C50885) *
                C51010 * C5107) *
               C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C50007 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C51143 -
             (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                 C50000 -
             (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                 C50885) *
                C2173 +
            ((C2373 + C2374) * C50007 + (C2375 + C2376) * C51143 -
             (C2377 + C2378) * C50000 - (C2379 + C2380) * C50885) *
                C2174 +
            C2735 * C2175) *
               C51022 * C1514 +
           (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C50867 * C390) *
                 C50000 -
             ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                  C51143 +
              (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                  C50007) +
             (C2176 * C395 + C2171 * C403 + C2177 * C394 + C50867 * C402) *
                 C50885) *
                C2173 +
            ((C4028 + C4029) * C50000 -
             ((C3052 + C3053) * C51143 + (C3054 + C3055) * C50007) +
             (C4030 + C4031) * C50885) *
                C2174 +
            ((C4032 + C4033) * C50000 - (C3060 * C51143 + C3061 * C50007) +
             (C4034 + C4035) * C50885) *
                C2175) *
               C51022 * C50963) *
              C1172 +
          ((((C2378 + C2377) * C50000 -
             ((C2376 + C2375) * C51143 + (C2374 + C2373) * C50007) +
             (C2380 + C2379) * C50885) *
                C2173 +
            ((C2390 + C2389) * C50000 -
             ((C2388 + C2387) * C51143 + (C2386 + C2385) * C50007) +
             (C2392 + C2391) * C50885) *
                C2174 +
            ((C2725 + C2726) * C50000 - (C2844 * C51143 + C2845 * C50007) +
             (C2731 + C2732) * C50885) *
                C2175) *
               C51022 * C1514 +
           (((C3055 + C3054) * C50007 + (C3053 + C3052) * C51143 -
             (C4029 + C4028) * C50000 - (C4031 + C4030) * C50885) *
                C2173 +
            ((C3051 + C3050) * C50007 + (C3049 + C3048) * C51143 -
             (C4033 + C4032) * C50000 - (C4035 + C4034) * C50885) *
                C2174 +
            ((C3056 + C3057) * C50007 + (C3058 + C3059) * C51143 -
             (C2177 * C4007 + C50867 * C4008 + C2176 * C3008 + C2171 * C3012) *
                 C50000 -
             (C2177 * C4009 + C50867 * C4010 + C2176 * C3014 + C2171 * C3020) *
                 C50885) *
                C2175) *
               C51022 * C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C50007 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C51143 -
            (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
             C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                C50000 -
            (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
             C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                C50885) *
               C51010 * C51022 * C1514 +
           ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
             C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
                C50000 -
            ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
              C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                 C51143 +
             (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
              C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                 C50007) +
            (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
             C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
                C50885) *
               C51010 * C51022 * C50963) *
              C1172 +
          (((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
             C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
                C50000 -
            ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
              C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                 C51143 +
             (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
              C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                 C50007) +
            (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
             C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
                C50885) *
               C51010 * C51022 * C1514 +
           ((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C50007 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C51143 -
            (C120 * C1412 + C108 * C1413 + C119 * C721 + C107 * C729 +
             C118 * C720 + C106 * C728 + C117 * C719 + C105 * C727) *
                C50000 -
            (C120 * C1414 + C108 * C1415 + C119 * C733 + C107 * C745 +
             C118 * C732 + C106 * C744 + C117 * C731 + C105 * C743) *
                C50885) *
               C51010 * C51022 * C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C50007 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C51143 -
             (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                 C50000 -
             (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                 C50885) *
                C51010 * C5105 +
            ((C5449 + C5450) * C50007 + (C5451 + C5452) * C51143 -
             (C5453 + C5454) * C50000 - (C5455 + C5456) * C50885) *
                C51010 * C5106 +
            C6056 * C5107) *
               C1514 +
           (((C5454 + C5453) * C50000 -
             ((C5452 + C5451) * C51143 + (C5450 + C5449) * C50007) +
             (C5456 + C5455) * C50885) *
                C51010 * C5105 +
            ((C5466 + C5465) * C50000 -
             ((C5464 + C5463) * C51143 + (C5462 + C5461) * C50007) +
             (C5468 + C5467) * C50885) *
                C51010 * C5106 +
            ((C6045 + C6046) * C50000 - (C6339 * C51143 + C6340 * C50007) +
             (C6051 + C6052) * C50885) *
                C51010 * C5107) *
               C50963) *
              C1172 +
          ((((C2378 + C2377) * C50000 -
             ((C2376 + C2375) * C51143 + (C2374 + C2373) * C50007) +
             (C2380 + C2379) * C50885) *
                C51010 * C5105 +
            ((C4028 + C4029) * C50000 -
             ((C3052 + C3053) * C51143 + (C3054 + C3055) * C50007) +
             (C4030 + C4031) * C50885) *
                C51010 * C5106 +
            ((C6855 + C6856) * C50000 - (C6221 * C51143 + C6222 * C50007) +
             (C6857 + C6858) * C50885) *
                C51010 * C5107) *
               C1514 +
           (((C3055 + C3054) * C50007 + (C3053 + C3052) * C51143 -
             (C4029 + C4028) * C50000 - (C4031 + C4030) * C50885) *
                C51010 * C5105 +
            ((C3393 + C3394) * C50007 + (C3395 + C3396) * C51143 -
             (C6856 + C6855) * C50000 - (C6858 + C6857) * C50885) *
                C51010 * C5106 +
            ((C6224 + C6225) * C50007 + (C6226 + C6227) * C51143 -
             (C2177 * C6842 + C50867 * C6843 + C2176 * C3500 + C2171 * C3508) *
                 C50000 -
             (C2177 * C6844 + C50867 * C6845 + C2176 * C3506 + C2171 * C3512) *
                 C50885) *
                C51010 * C5107) *
               C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C50880) *
                C2173 +
            ((C2373 + C2374) * C603 + (C2375 + C2376) * C50880) * C2174 +
            C2854 * C2175) *
               C51022 * C1514 -
           (C3064 * C2175 +
            ((C3052 + C3053) * C50880 + (C3054 + C3055) * C603) * C2174 +
            ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                 C50880 +
             (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                 C603) *
                C2173) *
               C51022 * C50963) *
              C51197 +
          ((((C3055 + C3054) * C603 + (C3053 + C3052) * C50880) * C2173 +
            ((C3051 + C3050) * C603 + (C3049 + C3048) * C50880) * C2174 +
            ((C3056 + C3057) * C603 + (C3058 + C3059) * C50880) * C2175) *
               C51022 * C50963 -
           (C2861 * C2175 +
            ((C2388 + C2387) * C50880 + (C2386 + C2385) * C603) * C2174 +
            ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C2173) *
               C51022 * C1514) *
              C51184 +
          ((C2854 * C2173 +
            ((C2730 + C2729) * C603 + (C2728 + C2727) * C50880) * C2174 +
            ((C2857 + C2858) * C603 + (C2859 + C2860) * C50880) * C2175) *
               C51022 * C1514 -
           (((C2177 * C3015 + C50867 * C3021 + C2176 * C3016 + C2171 * C3022) *
                 C50880 +
             (C2177 * C3009 + C50867 * C3017 + C2176 * C3010 + C2171 * C3018) *
                 C603) *
                C2175 +
            ((C3059 + C3058) * C50880 + (C3057 + C3056) * C603) * C2174 +
            C3064 * C2173) *
               C51022 * C50963) *
              C1279)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C603 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50880) *
               C51010 * C51022 * C1514 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C50880 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C603) *
               C51010 * C51022 * C50963) *
              C51197 +
          (((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C603 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C50880) *
               C51010 * C51022 * C50963 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C50880 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C603) *
               C51010 * C51022 * C1514) *
              C51184 +
          (((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
             C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
                C603 +
            (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
             C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
                C50880) *
               C51010 * C51022 * C1514 -
           ((C120 * C734 + C108 * C746 + C119 * C735 + C107 * C747 +
             C118 * C736 + C106 * C748 + C117 * C737 + C105 * C749) *
                C50880 +
            (C120 * C722 + C108 * C738 + C119 * C723 + C107 * C739 +
             C118 * C724 + C106 * C740 + C117 * C725 + C105 * C741) *
                C603) *
               C51010 * C51022 * C50963) *
              C1279)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C50880) *
                C51010 * C5105 +
            ((C5449 + C5450) * C603 + (C5451 + C5452) * C50880) * C51010 *
                C5106 +
            C6230 * C5107) *
               C1514 -
           (C6356 * C5107 +
            ((C5464 + C5463) * C50880 + (C5462 + C5461) * C603) * C51010 *
                C5106 +
            ((C5452 + C5451) * C50880 + (C5450 + C5449) * C603) * C51010 *
                C5105) *
               C50963) *
              C51197 +
          ((((C3055 + C3054) * C603 + (C3053 + C3052) * C50880) * C51010 *
                C5105 +
            ((C3393 + C3394) * C603 + (C3395 + C3396) * C50880) * C51010 *
                C5106 +
            ((C6224 + C6225) * C603 + (C6226 + C6227) * C50880) * C51010 *
                C5107) *
               C50963 -
           (C6232 * C5107 +
            ((C3052 + C3053) * C50880 + (C3054 + C3055) * C603) * C51010 *
                C5106 +
            ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C51010 *
                C5105) *
               C1514) *
              C51184 +
          ((C2854 * C51010 * C5105 +
            ((C3051 + C3050) * C603 + (C3049 + C3048) * C50880) * C51010 *
                C5106 +
            ((C3397 + C3398) * C603 + (C3399 + C3400) * C50880) * C51010 *
                C5107) *
               C1514 -
           (((C2177 * C3502 + C50867 * C3510 + C2176 * C3503 + C2171 * C3511) *
                 C50880 +
             (C2177 * C3498 + C50867 * C3504 + C2176 * C3499 + C2171 * C3505) *
                 C603) *
                C51010 * C5107 +
            ((C3400 + C3399) * C50880 + (C3398 + C3397) * C603) * C51010 *
                C5106 +
            C3064 * C51010 * C5105) *
               C50963) *
              C1279)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C50880) *
                C2173 +
            ((C2373 + C2374) * C603 + (C2375 + C2376) * C50880) * C2174 +
            C2854 * C2175) *
               C51022 * C51198 -
           (C3064 * C2175 +
            ((C3052 + C3053) * C50880 + (C3054 + C3055) * C603) * C2174 +
            ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                 C50880 +
             (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                 C603) *
                C2173) *
               C51022 * C51187 +
           (((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50867 * C857) *
                 C603 +
             (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50867 * C867) *
                 C50880) *
                C2173 +
            ((C3393 + C3394) * C603 + (C3395 + C3396) * C50880) * C2174 +
            ((C3397 + C3398) * C603 + (C3399 + C3400) * C50880) * C2175) *
               C51022 * C1746) *
              C1172 +
          ((((C3055 + C3054) * C603 + (C3053 + C3052) * C50880) * C2173 +
            ((C3051 + C3050) * C603 + (C3049 + C3048) * C50880) * C2174 +
            ((C3056 + C3057) * C603 + (C3058 + C3059) * C50880) * C2175) *
               C51022 * C51187 -
           (C2861 * C2175 +
            ((C2388 + C2387) * C50880 + (C2386 + C2385) * C603) * C2174 +
            ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C2173) *
               C51022 * C51198 -
           (((C2177 * C3370 + C50867 * C3374 + C2176 * C3371 + C2171 * C3375) *
                 C50880 +
             (C2177 * C3368 + C50867 * C3372 + C2176 * C3369 + C2171 * C3373) *
                 C603) *
                C2175 +
            ((C3400 + C3399) * C50880 + (C3398 + C3397) * C603) * C2174 +
            ((C3396 + C3395) * C50880 + (C3394 + C3393) * C603) * C2173) *
               C51022 * C1746) *
              C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C603 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50880) *
               C51010 * C51022 * C51198 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C50880 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C603) *
               C51010 * C51022 * C51187 +
           ((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
             C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
                C603 +
            (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
             C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
                C50880) *
               C51010 * C51022 * C1746) *
              C1172 +
          (((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C603 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C50880) *
               C51010 * C51022 * C51187 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C50880 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C603) *
               C51010 * C51022 * C51198 -
           ((C120 * C973 + C108 * C981 + C119 * C974 + C107 * C982 +
             C118 * C975 + C106 * C983 + C117 * C976 + C105 * C984) *
                C50880 +
            (C120 * C969 + C108 * C977 + C119 * C970 + C107 * C978 +
             C118 * C971 + C106 * C979 + C117 * C972 + C105 * C980) *
                C603) *
               C51010 * C51022 * C1746) *
              C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C50880) *
                C51010 * C5105 +
            ((C5449 + C5450) * C603 + (C5451 + C5452) * C50880) * C51010 *
                C5106 +
            C6230 * C5107) *
               C51198 -
           (C6356 * C5107 +
            ((C5464 + C5463) * C50880 + (C5462 + C5461) * C603) * C51010 *
                C5106 +
            ((C5452 + C5451) * C50880 + (C5450 + C5449) * C603) * C51010 *
                C5105) *
               C51187 +
           (C6230 * C5105 +
            ((C6050 + C6049) * C603 + (C6048 + C6047) * C50880) * C51010 *
                C5106 +
            ((C6351 + C6352) * C603 + (C6353 + C6354) * C50880) * C51010 *
                C5107) *
               C1746) *
              C1172 +
          ((((C3055 + C3054) * C603 + (C3053 + C3052) * C50880) * C51010 *
                C5105 +
            ((C3393 + C3394) * C603 + (C3395 + C3396) * C50880) * C51010 *
                C5106 +
            ((C6224 + C6225) * C603 + (C6226 + C6227) * C50880) * C51010 *
                C5107) *
               C51187 -
           (C6232 * C5107 +
            ((C3052 + C3053) * C50880 + (C3054 + C3055) * C603) * C51010 *
                C5106 +
            ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C51010 *
                C5105) *
               C51198 -
           (((C2177 * C6204 + C50867 * C6208 + C2176 * C6205 + C2171 * C6209) *
                 C50880 +
             (C2177 * C6202 + C50867 * C6206 + C2176 * C6203 + C2171 * C6207) *
                 C603) *
                C51010 * C5107 +
            ((C6227 + C6226) * C50880 + (C6225 + C6224) * C603) * C51010 *
                C5106 +
            C6232 * C5105) *
               C1746) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
               C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                  C121 +
              (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
               C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                  C109 -
              (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
               C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                  C122 -
              (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
               C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                  C110 +
              (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
               C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
                  C123 +
              (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
               C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
                  C111 -
              (C120 * C131 + C108 * C144 + C119 * C130 + C107 * C142 +
               C118 * C129 + C106 * C140 + C117 * C128 + C105 * C135) *
                  C124 -
              (C120 * C145 + C108 * C152 + C119 * C143 + C107 * C151 +
               C118 * C141 + C106 * C150 + C117 * C139 + C105 * C149) *
                  C112) *
             C51010 * C51022 * C50951 * C50925 +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
                C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                   C50007 +
               (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
                C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                   C51143 -
               (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
                C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                   C50000 -
               (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
                C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                   C50885) *
                  C51010 * C51022 * C50951 * C507 +
              ((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
                C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
                   C50000 -
               ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
                 C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                    C51143 +
                (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
                 C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                    C50007) +
               (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
                C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
                   C50885) *
                  C51010 * C51022 * C50951 * C508 +
              ((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
                C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
                   C50007 +
               (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
                C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
                   C51143 -
               (C120 * C516 + C108 * C525 + C119 * C515 + C107 * C520 +
                C118 * C514 + C106 * C519 + C117 * C513 + C105 * C518) *
                   C50000 -
               (C120 * C526 + C108 * C531 + C119 * C524 + C107 * C530 +
                C118 * C523 + C106 * C529 + C117 * C522 + C105 * C528) *
                   C50885) *
                  C51010 * C51022 * C50951 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C50007 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C51143 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C50000 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50885) *
              C51010 * C51022 * C848 +
          ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
            C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
               C50000 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C51143 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C50007) +
           (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
            C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
               C50885) *
              C51010 * C51022 * C849 +
          ((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
            C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
               C50007 +
           (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
            C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
               C51143 -
           (C120 * C855 + C108 * C864 + C119 * C854 + C107 * C859 +
            C118 * C853 + C106 * C858 + C117 * C852 + C105 * C857) *
               C50000 -
           (C120 * C865 + C108 * C870 + C119 * C863 + C107 * C869 +
            C118 * C862 + C106 * C868 + C117 * C861 + C105 * C867) *
               C50885) *
              C51010 * C51022 * C850) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) * C121 +
           (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) * C109 -
           (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) * C122 -
           (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) * C110 +
           (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) * C123 +
           (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) * C111 -
           (C2177 * C129 + C50867 * C140 + C2176 * C128 + C2171 * C135) * C124 -
           (C2177 * C141 + C50867 * C150 + C2176 * C139 + C2171 * C149) *
               C112) *
              C2173 +
          ((C2176 * C263 + C2171 * C273 + C2177 * C259 + C50867 * C265) * C121 +
           (C2176 * C272 + C2171 * C280 + C2177 * C271 + C50867 * C279) * C109 -
           (C2177 * C260 + C50867 * C266 + C2176 * C259 + C2171 * C265) * C122 -
           (C2177 * C270 + C50867 * C278 + C2176 * C271 + C2171 * C279) * C110 +
           (C2176 * C260 + C2171 * C266 + C2177 * C261 + C50867 * C267) * C123 +
           (C2176 * C270 + C2171 * C278 + C2177 * C269 + C50867 * C277) * C111 -
           (C2177 * C262 + C50867 * C268 + C2176 * C261 + C2171 * C267) * C124 -
           (C2177 * C274 + C50867 * C281 + C2176 * C269 + C2171 * C277) *
               C112) *
              C2174 +
          ((C2176 * C512 + C2171 * C517 + C2177 * C513 + C50867 * C518) * C121 +
           (C2176 * C521 + C2171 * C527 + C2177 * C522 + C50867 * C528) * C109 -
           (C2177 * C514 + C50867 * C519 + C2176 * C513 + C2171 * C518) * C122 -
           (C2177 * C523 + C50867 * C529 + C2176 * C522 + C2171 * C528) * C110 +
           (C2176 * C514 + C2171 * C519 + C2177 * C515 + C50867 * C520) * C123 +
           (C2176 * C523 + C2171 * C529 + C2177 * C524 + C50867 * C530) * C111 -
           (C2177 * C516 + C50867 * C525 + C2176 * C515 + C2171 * C520) * C124 -
           (C2177 * C526 + C50867 * C531 + C2176 * C524 + C2171 * C530) *
               C112) *
              C2175) *
         C51022 * C50951 * C50925) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C50007 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C51143 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C50000 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C50885) *
               C2173 +
           ((C2373 + C2374) * C50007 + (C2375 + C2376) * C51143 -
            (C2377 + C2378) * C50000 - (C2379 + C2380) * C50885) *
               C2174 +
           C2735 * C2175) *
              C51022 * C50951 * C507 +
          (((C2378 + C2377) * C50000 -
            ((C2376 + C2375) * C51143 + (C2374 + C2373) * C50007) +
            (C2380 + C2379) * C50885) *
               C2173 +
           ((C2390 + C2389) * C50000 -
            ((C2388 + C2387) * C51143 + (C2386 + C2385) * C50007) +
            (C2392 + C2391) * C50885) *
               C2174 +
           ((C2725 + C2726) * C50000 -
            ((C2727 + C2728) * C51143 + (C2729 + C2730) * C50007) +
            (C2731 + C2732) * C50885) *
               C2175) *
              C51022 * C50951 * C508 +
          (C2735 * C2173 +
           ((C2730 + C2729) * C50007 + (C2728 + C2727) * C51143 -
            (C2726 + C2725) * C50000 - (C2732 + C2731) * C50885) *
               C2174 +
           ((C2176 * C2688 + C2171 * C2691 + C2177 * C2689 + C50867 * C2692) *
                C50007 +
            (C2176 * C2693 + C2171 * C2697 + C2177 * C2694 + C50867 * C2698) *
                C51143 -
            (C2177 * C2690 + C50867 * C2695 + C2176 * C2689 + C2171 * C2692) *
                C50000 -
            (C2177 * C2696 + C50867 * C2699 + C2176 * C2694 + C2171 * C2698) *
                C50885) *
               C2175) *
              C51022 * C50951 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C50007 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C51143 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C50000 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C50885) *
               C2173 +
           ((C2373 + C2374) * C50007 + (C2375 + C2376) * C51143 -
            (C2377 + C2378) * C50000 - (C2379 + C2380) * C50885) *
               C2174 +
           C2735 * C2175) *
              C51022 * C848 +
          (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C50867 * C390) *
                C50000 -
            ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                 C51143 +
             (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                 C50007) +
            (C2176 * C395 + C2171 * C403 + C2177 * C394 + C50867 * C402) *
                C50885) *
               C2173 +
           ((C2176 * C719 + C2171 * C727 + C2177 * C720 + C50867 * C728) *
                C50000 -
            ((C3052 + C3053) * C51143 + (C3054 + C3055) * C50007) +
            (C2176 * C731 + C2171 * C743 + C2177 * C732 + C50867 * C744) *
                C50885) *
               C2174 +
           ((C2176 * C724 + C2171 * C740 + C2177 * C723 + C50867 * C739) *
                C50000 -
            (C3060 * C51143 + C3061 * C50007) +
            (C2176 * C736 + C2171 * C748 + C2177 * C735 + C50867 * C747) *
                C50885) *
               C2175) *
              C51022 * C849 +
          (((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50867 * C857) *
                C50007 +
            (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50867 * C867) *
                C51143 -
            (C2177 * C853 + C50867 * C858 + C2176 * C852 + C2171 * C857) *
                C50000 -
            (C2177 * C862 + C50867 * C868 + C2176 * C861 + C2171 * C867) *
                C50885) *
               C2173 +
           ((C2176 * C972 + C2171 * C980 + C2177 * C971 + C50867 * C979) *
                C50007 +
            (C2176 * C976 + C2171 * C984 + C2177 * C975 + C50867 * C983) *
                C51143 -
            (C2177 * C970 + C50867 * C978 + C2176 * C971 + C2171 * C979) *
                C50000 -
            (C2177 * C974 + C50867 * C982 + C2176 * C975 + C2171 * C983) *
                C50885) *
               C2174 +
           ((C2176 * C3210 + C2171 * C3213 + C2177 * C3211 + C50867 * C3214) *
                C50007 +
            (C2176 * C3215 + C2171 * C3219 + C2177 * C3216 + C50867 * C3220) *
                C51143 -
            (C2177 * C3212 + C50867 * C3217 + C2176 * C3211 + C2171 * C3214) *
                C50000 -
            (C2177 * C3218 + C50867 * C3221 + C2176 * C3216 + C2171 * C3220) *
                C50885) *
               C2175) *
              C51022 * C850) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) * C121 +
           (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) * C109 -
           (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) * C122 -
           (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) * C110 +
           (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) * C123 +
           (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) * C111 -
           (C2177 * C129 + C50867 * C140 + C2176 * C128 + C2171 * C135) * C124 -
           (C2177 * C141 + C50867 * C150 + C2176 * C139 + C2171 * C149) *
               C112) *
              C51010 * C5105 +
          ((C2176 * C387 + C2171 * C397 + C2177 * C383 + C50867 * C389) * C121 +
           (C2176 * C396 + C2171 * C404 + C2177 * C395 + C50867 * C403) * C109 -
           (C2177 * C384 + C50867 * C390 + C2176 * C383 + C2171 * C389) * C122 -
           (C2177 * C394 + C50867 * C402 + C2176 * C395 + C2171 * C403) * C110 +
           (C2176 * C384 + C2171 * C390 + C2177 * C385 + C50867 * C391) * C123 +
           (C2176 * C394 + C2171 * C402 + C2177 * C393 + C50867 * C401) * C111 -
           (C2177 * C386 + C50867 * C392 + C2176 * C385 + C2171 * C391) * C124 -
           (C2177 * C398 + C50867 * C405 + C2176 * C393 + C2171 * C401) *
               C112) *
              C51010 * C5106 +
          ((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50867 * C857) * C121 +
           (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50867 * C867) * C109 -
           (C2177 * C853 + C50867 * C858 + C2176 * C852 + C2171 * C857) * C122 -
           (C2177 * C862 + C50867 * C868 + C2176 * C861 + C2171 * C867) * C110 +
           (C2176 * C853 + C2171 * C858 + C2177 * C854 + C50867 * C859) * C123 +
           (C2176 * C862 + C2171 * C868 + C2177 * C863 + C50867 * C869) * C111 -
           (C2177 * C855 + C50867 * C864 + C2176 * C854 + C2171 * C859) * C124 -
           (C2177 * C865 + C50867 * C870 + C2176 * C863 + C2171 * C869) *
               C112) *
              C51010 * C5107) *
         C50951 * C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C50007 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C51143 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C50000 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C50885) *
               C51010 * C5105 +
           ((C5449 + C5450) * C50007 + (C5451 + C5452) * C51143 -
            (C5453 + C5454) * C50000 - (C5455 + C5456) * C50885) *
               C51010 * C5106 +
           ((C5461 + C5462) * C50007 + (C5463 + C5464) * C51143 -
            (C5465 + C5466) * C50000 - (C5467 + C5468) * C50885) *
               C51010 * C5107) *
              C50951 * C507 +
          (((C2378 + C2377) * C50000 -
            ((C2376 + C2375) * C51143 + (C2374 + C2373) * C50007) +
            (C2380 + C2379) * C50885) *
               C51010 * C5105 +
           ((C4028 + C4029) * C50000 -
            ((C3052 + C3053) * C51143 + (C3054 + C3055) * C50007) +
            (C4030 + C4031) * C50885) *
               C51010 * C5106 +
           ((C2176 * C971 + C2171 * C979 + C2177 * C970 + C50867 * C978) *
                C50000 -
            ((C3396 + C3395) * C51143 + (C3394 + C3393) * C50007) +
            (C2176 * C975 + C2171 * C983 + C2177 * C974 + C50867 * C982) *
                C50885) *
               C51010 * C5107) *
              C50951 * C508 +
          (C2735 * C51010 * C5105 +
           ((C3051 + C3050) * C50007 + (C3049 + C3048) * C51143 -
            (C4033 + C4032) * C50000 - (C4035 + C4034) * C50885) *
               C51010 * C5106 +
           ((C3397 + C3398) * C50007 + (C3399 + C3400) * C51143 -
            (C2177 * C3212 + C50867 * C3217 + C2176 * C3211 + C2171 * C3214) *
                C50000 -
            (C2177 * C3218 + C50867 * C3221 + C2176 * C3216 + C2171 * C3220) *
                C50885) *
               C51010 * C5107) *
              C50951 * C509)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C50007 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C51143 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C50000 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C50885) *
               C51010 * C5105 +
           ((C5449 + C5450) * C50007 + (C5451 + C5452) * C51143 -
            (C5453 + C5454) * C50000 - (C5455 + C5456) * C50885) *
               C51010 * C5106 +
           C6056 * C5107) *
              C848 +
          (((C5454 + C5453) * C50000 -
            ((C5452 + C5451) * C51143 + (C5450 + C5449) * C50007) +
            (C5456 + C5455) * C50885) *
               C51010 * C5105 +
           ((C5466 + C5465) * C50000 -
            ((C5464 + C5463) * C51143 + (C5462 + C5461) * C50007) +
            (C5468 + C5467) * C50885) *
               C51010 * C5106 +
           ((C6045 + C6046) * C50000 -
            ((C6047 + C6048) * C51143 + (C6049 + C6050) * C50007) +
            (C6051 + C6052) * C50885) *
               C51010 * C5107) *
              C849 +
          (C6056 * C5105 +
           ((C6050 + C6049) * C50007 + (C6048 + C6047) * C51143 -
            (C6046 + C6045) * C50000 - (C6052 + C6051) * C50885) *
               C51010 * C5106 +
           ((C2176 * C6008 + C2171 * C6011 + C2177 * C6009 + C50867 * C6012) *
                C50007 +
            (C2176 * C6013 + C2171 * C6017 + C2177 * C6014 + C50867 * C6018) *
                C51143 -
            (C2177 * C6010 + C50867 * C6015 + C2176 * C6009 + C2171 * C6012) *
                C50000 -
            (C2177 * C6016 + C50867 * C6019 + C2176 * C6014 + C2171 * C6018) *
                C50885) *
               C51010 * C5107) *
              C850) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
                C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                   C256 +
               (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
                C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                   C251 -
               (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
                C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                   C257 -
               (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
                C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                   C252 +
               (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
                C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
                   C258 +
               (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
                C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
                   C253) *
                  C51010 * C51022 * C50951 * C51151 +
              ((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
                C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
                   C257 -
               ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
                 C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                    C251 +
                (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
                 C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                    C256) +
               (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
                C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
                   C252 -
               (C120 * C264 + C108 * C275 + C119 * C262 + C107 * C268 +
                C118 * C261 + C106 * C267 + C117 * C260 + C105 * C266) *
                   C258 -
               (C120 * C276 + C108 * C282 + C119 * C274 + C107 * C281 +
                C118 * C269 + C106 * C277 + C117 * C270 + C105 * C278) *
                   C253) *
                  C51010 * C51022 * C50951 * C50939) +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
                C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                   C603 +
               (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
                C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                   C50880) *
                  C51010 * C51022 * C50951 * C599 -
              ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
                C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                   C50880 +
               (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
                C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                   C603) *
                  C51010 * C51022 * C50951 * C600 +
              ((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
                C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
                   C603 +
               (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
                C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
                   C50880) *
                  C51010 * C51022 * C50951 * C601 -
              ((C120 * C608 + C108 * C616 + C119 * C609 + C107 * C617 +
                C118 * C610 + C106 * C618 + C117 * C611 + C105 * C619) *
                   C50880 +
               (C120 * C604 + C108 * C612 + C119 * C605 + C107 * C613 +
                C118 * C606 + C106 * C614 + C117 * C607 + C105 * C615) *
                   C603) *
                  C51010 * C51022 * C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C603 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50880) *
               C51010 * C51022 * C848 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C50880 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C603) *
               C51010 * C51022 * C849 +
           ((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
             C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
                C603 +
            (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
             C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
                C50880) *
               C51010 * C51022 * C850) *
              C51151 +
          (((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C603 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C50880) *
               C51010 * C51022 * C849 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C50880 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C603) *
               C51010 * C51022 * C848 -
           ((C120 * C973 + C108 * C981 + C119 * C974 + C107 * C982 +
             C118 * C975 + C106 * C983 + C117 * C976 + C105 * C984) *
                C50880 +
            (C120 * C969 + C108 * C977 + C119 * C970 + C107 * C978 +
             C118 * C971 + C106 * C979 + C117 * C972 + C105 * C980) *
                C603) *
               C51010 * C51022 * C850) *
              C50939)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C251 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C257 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C252 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) *
                C258 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) *
                C253) *
               C2173 +
           ((C2373 + C2374) * C256 + (C2375 + C2376) * C251 -
            (C2377 + C2378) * C257 - (C2379 + C2380) * C252 +
            (C2381 + C2382) * C258 + (C2383 + C2384) * C253) *
               C2174 +
           ((C2385 + C2386) * C256 + (C2387 + C2388) * C251 -
            (C2389 + C2390) * C257 - (C2391 + C2392) * C252 +
            (C2393 + C2394) * C258 + (C2395 + C2396) * C253) *
               C2175) *
              C51022 * C50951 * C51151 +
          (((C2378 + C2377) * C257 -
            ((C2376 + C2375) * C251 + (C2374 + C2373) * C256) +
            (C2380 + C2379) * C252 - (C2382 + C2381) * C258 -
            (C2384 + C2383) * C253) *
               C2173 +
           ((C2390 + C2389) * C257 -
            ((C2388 + C2387) * C251 + (C2386 + C2385) * C256) +
            (C2392 + C2391) * C252 - (C2394 + C2393) * C258 -
            (C2396 + C2395) * C253) *
               C2174 +
           ((C2176 * C606 + C2171 * C614 + C2177 * C605 + C50867 * C613) *
                C257 -
            ((C2177 * C610 + C50867 * C618 + C2176 * C611 + C2171 * C619) *
                 C251 +
             (C2177 * C606 + C50867 * C614 + C2176 * C607 + C2171 * C615) *
                 C256) +
            (C2176 * C610 + C2171 * C618 + C2177 * C609 + C50867 * C617) *
                C252 -
            (C2177 * C604 + C50867 * C612 + C2176 * C605 + C2171 * C613) *
                C258 -
            (C2177 * C608 + C50867 * C616 + C2176 * C609 + C2171 * C617) *
                C253) *
               C2175) *
              C51022 * C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C603 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C50880) *
               C2173 +
           ((C2373 + C2374) * C603 + (C2375 + C2376) * C50880) * C2174 +
           C2854 * C2175) *
              C51022 * C50951 * C599 -
          (C2861 * C2175 +
           ((C2388 + C2387) * C50880 + (C2386 + C2385) * C603) * C2174 +
           ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C2173) *
              C51022 * C50951 * C600 +
          (C2854 * C2173 +
           ((C2730 + C2729) * C603 + (C2728 + C2727) * C50880) * C2174 +
           ((C2857 + C2858) * C603 + (C2859 + C2860) * C50880) * C2175) *
              C51022 * C50951 * C601 -
          (((C2177 * C2835 + C50867 * C2839 + C2176 * C2836 + C2171 * C2840) *
                C50880 +
            (C2177 * C2833 + C50867 * C2837 + C2176 * C2834 + C2171 * C2838) *
                C603) *
               C2175 +
           ((C2860 + C2859) * C50880 + (C2858 + C2857) * C603) * C2174 +
           C2861 * C2173) *
              C51022 * C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C50880) *
                C2173 +
            ((C2373 + C2374) * C603 + (C2375 + C2376) * C50880) * C2174 +
            C2854 * C2175) *
               C51022 * C848 -
           (C3064 * C2175 +
            ((C3052 + C3053) * C50880 + (C3054 + C3055) * C603) * C2174 +
            ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                 C50880 +
             (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                 C603) *
                C2173) *
               C51022 * C849 +
           (((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50867 * C857) *
                 C603 +
             (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50867 * C867) *
                 C50880) *
                C2173 +
            ((C3393 + C3394) * C603 + (C3395 + C3396) * C50880) * C2174 +
            ((C3397 + C3398) * C603 + (C3399 + C3400) * C50880) * C2175) *
               C51022 * C850) *
              C51151 +
          ((((C3055 + C3054) * C603 + (C3053 + C3052) * C50880) * C2173 +
            ((C3051 + C3050) * C603 + (C3049 + C3048) * C50880) * C2174 +
            ((C3056 + C3057) * C603 + (C3058 + C3059) * C50880) * C2175) *
               C51022 * C849 -
           (C2861 * C2175 +
            ((C2388 + C2387) * C50880 + (C2386 + C2385) * C603) * C2174 +
            ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C2173) *
               C51022 * C848 -
           (((C2177 * C3370 + C50867 * C3374 + C2176 * C3371 + C2171 * C3375) *
                 C50880 +
             (C2177 * C3368 + C50867 * C3372 + C2176 * C3369 + C2171 * C3373) *
                 C603) *
                C2175 +
            ((C3400 + C3399) * C50880 + (C3398 + C3397) * C603) * C2174 +
            ((C3396 + C3395) * C50880 + (C3394 + C3393) * C603) * C2173) *
               C51022 * C850) *
              C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C251 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C257 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C252 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) *
                C258 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) *
                C253) *
               C51010 * C5105 +
           ((C2176 * C387 + C2171 * C397 + C2177 * C383 + C50867 * C389) *
                C256 +
            (C2176 * C396 + C2171 * C404 + C2177 * C395 + C50867 * C403) *
                C251 -
            (C2177 * C384 + C50867 * C390 + C2176 * C383 + C2171 * C389) *
                C257 -
            (C2177 * C394 + C50867 * C402 + C2176 * C395 + C2171 * C403) *
                C252 +
            (C2176 * C384 + C2171 * C390 + C2177 * C385 + C50867 * C391) *
                C258 +
            (C2176 * C394 + C2171 * C402 + C2177 * C393 + C50867 * C401) *
                C253) *
               C51010 * C5106 +
           ((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50867 * C857) *
                C256 +
            (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50867 * C867) *
                C251 -
            (C2177 * C853 + C50867 * C858 + C2176 * C852 + C2171 * C857) *
                C257 -
            (C2177 * C862 + C50867 * C868 + C2176 * C861 + C2171 * C867) *
                C252 +
            (C2176 * C853 + C2171 * C858 + C2177 * C854 + C50867 * C859) *
                C258 +
            (C2176 * C862 + C2171 * C868 + C2177 * C863 + C50867 * C869) *
                C253) *
               C51010 * C5107) *
              C50951 * C51151 +
          (((C2378 + C2377) * C257 -
            ((C2376 + C2375) * C251 + (C2374 + C2373) * C256) +
            (C2380 + C2379) * C252 - (C2382 + C2381) * C258 -
            (C2384 + C2383) * C253) *
               C51010 * C5105 +
           ((C4028 + C4029) * C257 -
            ((C3052 + C3053) * C251 + (C3054 + C3055) * C256) +
            (C4030 + C4031) * C252 -
            (C2177 * C721 + C50867 * C729 + C2176 * C720 + C2171 * C728) *
                C258 -
            (C2177 * C733 + C50867 * C745 + C2176 * C732 + C2171 * C744) *
                C253) *
               C51010 * C5106 +
           ((C2176 * C971 + C2171 * C979 + C2177 * C970 + C50867 * C978) *
                C257 -
            ((C3396 + C3395) * C251 + (C3394 + C3393) * C256) +
            (C2176 * C975 + C2171 * C983 + C2177 * C974 + C50867 * C982) *
                C252 -
            (C2177 * C969 + C50867 * C977 + C2176 * C970 + C2171 * C978) *
                C258 -
            (C2177 * C973 + C50867 * C981 + C2176 * C974 + C2171 * C982) *
                C253) *
               C51010 * C5107) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C603 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C50880) *
               C51010 * C5105 +
           ((C5449 + C5450) * C603 + (C5451 + C5452) * C50880) * C51010 *
               C5106 +
           ((C5461 + C5462) * C603 + (C5463 + C5464) * C50880) * C51010 *
               C5107) *
              C50951 * C599 -
          (((C3396 + C3395) * C50880 + (C3394 + C3393) * C603) * C51010 *
               C5107 +
           ((C3052 + C3053) * C50880 + (C3054 + C3055) * C603) * C51010 *
               C5106 +
           ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C51010 *
               C5105) *
              C50951 * C600 +
          (C2854 * C51010 * C5105 +
           ((C3051 + C3050) * C603 + (C3049 + C3048) * C50880) * C51010 *
               C5106 +
           ((C3397 + C3398) * C603 + (C3399 + C3400) * C50880) * C51010 *
               C5107) *
              C50951 * C601 -
          (((C2177 * C3370 + C50867 * C3374 + C2176 * C3371 + C2171 * C3375) *
                C50880 +
            (C2177 * C3368 + C50867 * C3372 + C2176 * C3369 + C2171 * C3373) *
                C603) *
               C51010 * C5107 +
           ((C3059 + C3058) * C50880 + (C3057 + C3056) * C603) * C51010 *
               C5106 +
           C2861 * C51010 * C5105) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C50880) *
                C51010 * C5105 +
            ((C5449 + C5450) * C603 + (C5451 + C5452) * C50880) * C51010 *
                C5106 +
            C6230 * C5107) *
               C848 -
           (((C6047 + C6048) * C50880 + (C6049 + C6050) * C603) * C51010 *
                C5107 +
            ((C5464 + C5463) * C50880 + (C5462 + C5461) * C603) * C51010 *
                C5106 +
            ((C5452 + C5451) * C50880 + (C5450 + C5449) * C603) * C51010 *
                C5105) *
               C849 +
           (C6230 * C5105 +
            ((C6050 + C6049) * C603 + (C6048 + C6047) * C50880) * C51010 *
                C5106 +
            ((C2176 * C6008 + C2171 * C6011 + C2177 * C6009 + C50867 * C6012) *
                 C603 +
             (C2176 * C6013 + C2171 * C6017 + C2177 * C6014 + C50867 * C6018) *
                 C50880) *
                C51010 * C5107) *
               C850) *
              C51151 +
          ((((C3055 + C3054) * C603 + (C3053 + C3052) * C50880) * C51010 *
                C5105 +
            ((C3393 + C3394) * C603 + (C3395 + C3396) * C50880) * C51010 *
                C5106 +
            ((C6224 + C6225) * C603 + (C6226 + C6227) * C50880) * C51010 *
                C5107) *
               C849 -
           (C6232 * C5107 +
            ((C3052 + C3053) * C50880 + (C3054 + C3055) * C603) * C51010 *
                C5106 +
            ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C51010 *
                C5105) *
               C848 -
           (((C2177 * C6204 + C50867 * C6208 + C2176 * C6205 + C2171 * C6209) *
                 C50880 +
             (C2177 * C6202 + C50867 * C6206 + C2176 * C6203 + C2171 * C6207) *
                 C603) *
                C51010 * C5107 +
            ((C6227 + C6226) * C50880 + (C6225 + C6224) * C603) * C51010 *
                C5106 +
            C6232 * C5105) *
               C850) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
                C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                   C256 +
               (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
                C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                   C251 -
               (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
                C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                   C257 -
               (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
                C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                   C252 +
               (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
                C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
                   C258 +
               (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
                C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
                   C253) *
                  C51010 * C51022 * C51152 +
              ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
                C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
                   C257 -
               ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
                 C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                    C251 +
                (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
                 C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                    C256) +
               (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
                C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
                   C252 -
               (C120 * C388 + C108 * C399 + C119 * C386 + C107 * C392 +
                C118 * C385 + C106 * C391 + C117 * C384 + C105 * C390) *
                   C258 -
               (C120 * C400 + C108 * C406 + C119 * C398 + C107 * C405 +
                C118 * C393 + C106 * C401 + C117 * C394 + C105 * C402) *
                   C253) *
                  C51010 * C51022 * C50963) *
             C50925 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
                 C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                    C603 +
                (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
                 C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                    C50880) *
                   C51010 * C51022 * C51152 -
               ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
                 C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                    C50880 +
                (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
                 C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                    C603) *
                   C51010 * C51022 * C50963) *
                  C507 +
              (((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
                 C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                    C603 +
                (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
                 C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                    C50880) *
                   C51010 * C51022 * C50963 -
               ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
                 C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                    C50880 +
                (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
                 C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                    C603) *
                   C51010 * C51022 * C51152) *
                  C508 +
              (((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
                 C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
                    C603 +
                (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
                 C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
                    C50880) *
                   C51010 * C51022 * C51152 -
               ((C120 * C734 + C108 * C746 + C119 * C735 + C107 * C747 +
                 C118 * C736 + C106 * C748 + C117 * C737 + C105 * C749) *
                    C50880 +
                (C120 * C722 + C108 * C738 + C119 * C723 + C107 * C739 +
                 C118 * C724 + C106 * C740 + C117 * C725 + C105 * C741) *
                    C603) *
                   C51010 * C51022 * C50963) *
                  C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C603 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C50880) *
              C51010 * C51022 * C1051 -
          ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
            C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
               C50880 +
           (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
            C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
               C603) *
              C51010 * C51022 * C1052 +
          ((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
            C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
               C603 +
           (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
            C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
               C50880) *
              C51010 * C51022 * C1053 -
          ((C120 * C1059 + C108 * C1067 + C119 * C1060 + C107 * C1068 +
            C118 * C1061 + C106 * C1069 + C117 * C1062 + C105 * C1070) *
               C50880 +
           (C120 * C1055 + C108 * C1063 + C119 * C1056 + C107 * C1064 +
            C118 * C1057 + C106 * C1065 + C117 * C1058 + C105 * C1066) *
               C603) *
              C51010 * C51022 * C1054) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C251 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C257 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C252 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) *
                C258 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) *
                C253) *
               C2173 +
           ((C2373 + C2374) * C256 + (C2375 + C2376) * C251 -
            (C2377 + C2378) * C257 - (C2379 + C2380) * C252 +
            (C2381 + C2382) * C258 + (C2383 + C2384) * C253) *
               C2174 +
           ((C2385 + C2386) * C256 + (C2387 + C2388) * C251 -
            (C2389 + C2390) * C257 - (C2391 + C2392) * C252 +
            (C2393 + C2394) * C258 + (C2395 + C2396) * C253) *
               C2175) *
              C51022 * C51152 +
          (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C50867 * C390) *
                C257 -
            ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                 C251 +
             (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                 C256) +
            (C2176 * C395 + C2171 * C403 + C2177 * C394 + C50867 * C402) *
                C252 -
            (C2177 * C385 + C50867 * C391 + C2176 * C384 + C2171 * C390) *
                C258 -
            (C2177 * C393 + C50867 * C401 + C2176 * C394 + C2171 * C402) *
                C253) *
               C2173 +
           ((C2176 * C719 + C2171 * C727 + C2177 * C720 + C50867 * C728) *
                C257 -
            ((C2177 * C731 + C50867 * C743 + C2176 * C730 + C2171 * C742) *
                 C251 +
             (C2177 * C719 + C50867 * C727 + C2176 * C718 + C2171 * C726) *
                 C256) +
            (C2176 * C731 + C2171 * C743 + C2177 * C732 + C50867 * C744) *
                C252 -
            (C2177 * C721 + C50867 * C729 + C2176 * C720 + C2171 * C728) *
                C258 -
            (C2177 * C733 + C50867 * C745 + C2176 * C732 + C2171 * C744) *
                C253) *
               C2174 +
           ((C2176 * C724 + C2171 * C740 + C2177 * C723 + C50867 * C739) *
                C257 -
            ((C2177 * C736 + C50867 * C748 + C2176 * C737 + C2171 * C749) *
                 C251 +
             (C2177 * C724 + C50867 * C740 + C2176 * C725 + C2171 * C741) *
                 C256) +
            (C2176 * C736 + C2171 * C748 + C2177 * C735 + C50867 * C747) *
                C252 -
            (C2177 * C722 + C50867 * C738 + C2176 * C723 + C2171 * C739) *
                C258 -
            (C2177 * C734 + C50867 * C746 + C2176 * C735 + C2171 * C747) *
                C253) *
               C2175) *
              C51022 * C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C50880) *
                C2173 +
            ((C2373 + C2374) * C603 + (C2375 + C2376) * C50880) * C2174 +
            C2854 * C2175) *
               C51022 * C51152 -
           (C3064 * C2175 +
            ((C3052 + C3053) * C50880 + (C3054 + C3055) * C603) * C2174 +
            ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                 C50880 +
             (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                 C603) *
                C2173) *
               C51022 * C50963) *
              C507 +
          ((((C3055 + C3054) * C603 + (C3053 + C3052) * C50880) * C2173 +
            ((C3051 + C3050) * C603 + (C3049 + C3048) * C50880) * C2174 +
            ((C3056 + C3057) * C603 + (C3058 + C3059) * C50880) * C2175) *
               C51022 * C50963 -
           (C2861 * C2175 +
            ((C2388 + C2387) * C50880 + (C2386 + C2385) * C603) * C2174 +
            ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C2173) *
               C51022 * C51152) *
              C508 +
          ((C2854 * C2173 +
            ((C2730 + C2729) * C603 + (C2728 + C2727) * C50880) * C2174 +
            ((C2857 + C2858) * C603 + (C2859 + C2860) * C50880) * C2175) *
               C51022 * C51152 -
           (((C2177 * C3015 + C50867 * C3021 + C2176 * C3016 + C2171 * C3022) *
                 C50880 +
             (C2177 * C3009 + C50867 * C3017 + C2176 * C3010 + C2171 * C3018) *
                 C603) *
                C2175 +
            ((C3059 + C3058) * C50880 + (C3057 + C3056) * C603) * C2174 +
            C3064 * C2173) *
               C51022 * C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C603 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C50880) *
               C2173 +
           ((C2373 + C2374) * C603 + (C2375 + C2376) * C50880) * C2174 +
           C2854 * C2175) *
              C51022 * C1051 -
          (C3064 * C2175 +
           ((C3052 + C3053) * C50880 + (C3054 + C3055) * C603) * C2174 +
           ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                C50880 +
            (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                C603) *
               C2173) *
              C51022 * C1052 +
          (((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50867 * C857) *
                C603 +
            (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50867 * C867) *
                C50880) *
               C2173 +
           ((C3393 + C3394) * C603 + (C3395 + C3396) * C50880) * C2174 +
           ((C3397 + C3398) * C603 + (C3399 + C3400) * C50880) * C2175) *
              C51022 * C1053 -
          (((C2177 * C3502 + C50867 * C3510 + C2176 * C3503 + C2171 * C3511) *
                C50880 +
            (C2177 * C3498 + C50867 * C3504 + C2176 * C3499 + C2171 * C3505) *
                C603) *
               C2175 +
           ((C2177 * C3506 + C50867 * C3512 + C2176 * C3507 + C2171 * C3513) *
                C50880 +
            (C2177 * C3500 + C50867 * C3508 + C2176 * C3501 + C2171 * C3509) *
                C603) *
               C2174 +
           ((C2177 * C1061 + C50867 * C1069 + C2176 * C1062 + C2171 * C1070) *
                C50880 +
            (C2177 * C1057 + C50867 * C1065 + C2176 * C1058 + C2171 * C1066) *
                C603) *
               C2173) *
              C51022 * C1054) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C251 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C257 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C252 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) *
                C258 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) *
                C253) *
               C51010 * C5105 +
           ((C5449 + C5450) * C256 + (C5451 + C5452) * C251 -
            (C5453 + C5454) * C257 - (C5455 + C5456) * C252 +
            (C5457 + C5458) * C258 + (C5459 + C5460) * C253) *
               C51010 * C5106 +
           ((C5461 + C5462) * C256 + (C5463 + C5464) * C251 -
            (C5465 + C5466) * C257 - (C5467 + C5468) * C252 +
            (C5469 + C5470) * C258 + (C5471 + C5472) * C253) *
               C51010 * C5107) *
              C51152 +
          (((C5454 + C5453) * C257 -
            ((C5452 + C5451) * C251 + (C5450 + C5449) * C256) +
            (C5456 + C5455) * C252 - (C5458 + C5457) * C258 -
            (C5460 + C5459) * C253) *
               C51010 * C5105 +
           ((C5466 + C5465) * C257 -
            ((C5464 + C5463) * C251 + (C5462 + C5461) * C256) +
            (C5468 + C5467) * C252 - (C5470 + C5469) * C258 -
            (C5472 + C5471) * C253) *
               C51010 * C5106 +
           ((C2176 * C1057 + C2171 * C1065 + C2177 * C1056 + C50867 * C1064) *
                C257 -
            ((C2177 * C1061 + C50867 * C1069 + C2176 * C1062 + C2171 * C1070) *
                 C251 +
             (C2177 * C1057 + C50867 * C1065 + C2176 * C1058 + C2171 * C1066) *
                 C256) +
            (C2176 * C1061 + C2171 * C1069 + C2177 * C1060 + C50867 * C1068) *
                C252 -
            (C2177 * C1055 + C50867 * C1063 + C2176 * C1056 + C2171 * C1064) *
                C258 -
            (C2177 * C1059 + C50867 * C1067 + C2176 * C1060 + C2171 * C1068) *
                C253) *
               C51010 * C5107) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C50880) *
                C51010 * C5105 +
            ((C5449 + C5450) * C603 + (C5451 + C5452) * C50880) * C51010 *
                C5106 +
            ((C5461 + C5462) * C603 + (C5463 + C5464) * C50880) * C51010 *
                C5107) *
               C51152 -
           (((C2177 * C1061 + C50867 * C1069 + C2176 * C1062 + C2171 * C1070) *
                 C50880 +
             (C2177 * C1057 + C50867 * C1065 + C2176 * C1058 + C2171 * C1066) *
                 C603) *
                C51010 * C5107 +
            ((C5464 + C5463) * C50880 + (C5462 + C5461) * C603) * C51010 *
                C5106 +
            ((C5452 + C5451) * C50880 + (C5450 + C5449) * C603) * C51010 *
                C5105) *
               C50963) *
              C507 +
          ((((C3055 + C3054) * C603 + (C3053 + C3052) * C50880) * C51010 *
                C5105 +
            ((C3393 + C3394) * C603 + (C3395 + C3396) * C50880) * C51010 *
                C5106 +
            ((C2176 * C3501 + C2171 * C3509 + C2177 * C3500 + C50867 * C3508) *
                 C603 +
             (C2176 * C3507 + C2171 * C3513 + C2177 * C3506 + C50867 * C3512) *
                 C50880) *
                C51010 * C5107) *
               C50963 -
           (((C3396 + C3395) * C50880 + (C3394 + C3393) * C603) * C51010 *
                C5107 +
            ((C3052 + C3053) * C50880 + (C3054 + C3055) * C603) * C51010 *
                C5106 +
            ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C51010 *
                C5105) *
               C51152) *
              C508 +
          ((C2854 * C51010 * C5105 +
            ((C3051 + C3050) * C603 + (C3049 + C3048) * C50880) * C51010 *
                C5106 +
            ((C3397 + C3398) * C603 + (C3399 + C3400) * C50880) * C51010 *
                C5107) *
               C51152 -
           (((C2177 * C3502 + C50867 * C3510 + C2176 * C3503 + C2171 * C3511) *
                 C50880 +
             (C2177 * C3498 + C50867 * C3504 + C2176 * C3499 + C2171 * C3505) *
                 C603) *
                C51010 * C5107 +
            ((C3400 + C3399) * C50880 + (C3398 + C3397) * C603) * C51010 *
                C5106 +
            C3064 * C51010 * C5105) *
               C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C603 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C50880) *
               C51010 * C5105 +
           ((C5449 + C5450) * C603 + (C5451 + C5452) * C50880) * C51010 *
               C5106 +
           C6230 * C5107) *
              C1051 -
          (C6356 * C5107 +
           ((C5464 + C5463) * C50880 + (C5462 + C5461) * C603) * C51010 *
               C5106 +
           ((C5452 + C5451) * C50880 + (C5450 + C5449) * C603) * C51010 *
               C5105) *
              C1052 +
          (C6230 * C5105 +
           ((C6050 + C6049) * C603 + (C6048 + C6047) * C50880) * C51010 *
               C5106 +
           ((C6351 + C6352) * C603 + (C6353 + C6354) * C50880) * C51010 *
               C5107) *
              C1053 -
          (((C2177 * C6332 + C50867 * C6336 + C2176 * C6333 + C2171 * C6337) *
                C50880 +
            (C2177 * C6330 + C50867 * C6334 + C2176 * C6331 + C2171 * C6335) *
                C603) *
               C51010 * C5107 +
           ((C6354 + C6353) * C50880 + (C6352 + C6351) * C603) * C51010 *
               C5106 +
           C6356 * C5105) *
              C1054) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C1174 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C51196 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C1175 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C51181 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) *
                C1176 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) *
                C1171) *
               C2173 +
           ((C2373 + C2374) * C1174 + (C2375 + C2376) * C51196 -
            (C2377 + C2378) * C1175 - (C2379 + C2380) * C51181 +
            (C2381 + C2382) * C1176 + (C2383 + C2384) * C1171) *
               C2174 +
           (C2701 * C1174 + C2702 * C51196 - C2703 * C1175 - C2704 * C51181 +
            (C2393 + C2394) * C1176 + (C2395 + C2396) * C1171) *
               C2175) *
              C51022 * C1514 +
          (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C50867 * C390) *
                C1175 -
            ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                 C51196 +
             (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                 C1174) +
            (C2176 * C395 + C2171 * C403 + C2177 * C394 + C50867 * C402) *
                C51181 -
            (C2177 * C385 + C50867 * C391 + C2176 * C384 + C2171 * C390) *
                C1176 -
            (C2177 * C393 + C50867 * C401 + C2176 * C394 + C2171 * C402) *
                C1171) *
               C2173 +
           ((C4028 + C4029) * C1175 -
            ((C3052 + C3053) * C51196 + (C3054 + C3055) * C1174) +
            (C4030 + C4031) * C51181 -
            (C2177 * C721 + C50867 * C729 + C2176 * C720 + C2171 * C728) *
                C1176 -
            (C2177 * C733 + C50867 * C745 + C2176 * C732 + C2171 * C744) *
                C1171) *
               C2174 +
           ((C4032 + C4033) * C1175 - (C3060 * C51196 + C3061 * C1174) +
            (C4034 + C4035) * C51181 -
            (C2177 * C722 + C50867 * C738 + C2176 * C723 + C2171 * C739) *
                C1176 -
            (C2177 * C734 + C50867 * C746 + C2176 * C735 + C2171 * C747) *
                C1171) *
               C2175) *
              C51022 * C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C1174 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C51196 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C1175 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C51181 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C1176 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C1171) *
              C51010 * C51022 * C1514 +
          ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
            C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
               C1175 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C51196 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C1174) +
           (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
            C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
               C51181 -
           (C120 * C388 + C108 * C399 + C119 * C386 + C107 * C392 +
            C118 * C385 + C106 * C391 + C117 * C384 + C105 * C390) *
               C1176 -
           (C120 * C400 + C108 * C406 + C119 * C398 + C107 * C405 +
            C118 * C393 + C106 * C401 + C117 * C394 + C105 * C402) *
               C1171) *
              C51010 * C51022 * C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C1174 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C51196 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C1175 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C51181 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) *
                C1176 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) *
                C1171) *
               C51010 * C5105 +
           ((C5449 + C5450) * C1174 + (C5451 + C5452) * C51196 -
            (C5453 + C5454) * C1175 - (C5455 + C5456) * C51181 +
            (C5457 + C5458) * C1176 + (C5459 + C5460) * C1171) *
               C51010 * C5106 +
           (C6021 * C1174 + C6022 * C51196 - C6023 * C1175 - C6024 * C51181 +
            (C5469 + C5470) * C1176 + (C5471 + C5472) * C1171) *
               C51010 * C5107) *
              C1514 +
          (((C5454 + C5453) * C1175 -
            ((C5452 + C5451) * C51196 + (C5450 + C5449) * C1174) +
            (C5456 + C5455) * C51181 - (C5458 + C5457) * C1176 -
            (C5460 + C5459) * C1171) *
               C51010 * C5105 +
           ((C5466 + C5465) * C1175 -
            ((C5464 + C5463) * C51196 + (C5462 + C5461) * C1174) +
            (C5468 + C5467) * C51181 - (C5470 + C5469) * C1176 -
            (C5472 + C5471) * C1171) *
               C51010 * C5106 +
           ((C6045 + C6046) * C1175 - (C6339 * C51196 + C6340 * C1174) +
            (C6051 + C6052) * C51181 -
            (C2177 * C1055 + C50867 * C1063 + C2176 * C1056 + C2171 * C1064) *
                C1176 -
            (C2177 * C1059 + C50867 * C1067 + C2176 * C1060 + C2171 * C1068) *
                C1171) *
               C51010 * C5107) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C1280 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C1275 -
             (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                 C1281 -
             (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                 C50885) *
                C2173 +
            ((C2373 + C2374) * C1280 + (C2375 + C2376) * C1275 -
             (C2377 + C2378) * C1281 - (C2379 + C2380) * C50885) *
                C2174 +
            C3813 * C2175) *
               C51022 * C1514 +
           (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C50867 * C390) *
                 C1281 -
             ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                  C1275 +
              (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                  C1280) +
             (C2176 * C395 + C2171 * C403 + C2177 * C394 + C50867 * C402) *
                 C50885) *
                C2173 +
            ((C4028 + C4029) * C1281 -
             ((C3052 + C3053) * C1275 + (C3054 + C3055) * C1280) +
             (C4030 + C4031) * C50885) *
                C2174 +
            ((C4032 + C4033) * C1281 - (C3060 * C1275 + C3061 * C1280) +
             (C4034 + C4035) * C50885) *
                C2175) *
               C51022 * C50963) *
              C51151 +
          ((((C2378 + C2377) * C1281 -
             ((C2376 + C2375) * C1275 + (C2374 + C2373) * C1280) +
             (C2380 + C2379) * C50885) *
                C2173 +
            ((C2390 + C2389) * C1281 -
             ((C2388 + C2387) * C1275 + (C2386 + C2385) * C1280) +
             (C2392 + C2391) * C50885) *
                C2174 +
            ((C2725 + C2726) * C1281 - (C2844 * C1275 + C2845 * C1280) +
             (C2731 + C2732) * C50885) *
                C2175) *
               C51022 * C1514 +
           (((C3055 + C3054) * C1280 + (C3053 + C3052) * C1275 -
             (C4029 + C4028) * C1281 - (C4031 + C4030) * C50885) *
                C2173 +
            ((C3051 + C3050) * C1280 + (C3049 + C3048) * C1275 -
             (C4033 + C4032) * C1281 - (C4035 + C4034) * C50885) *
                C2174 +
            ((C3056 + C3057) * C1280 + (C3058 + C3059) * C1275 -
             (C2177 * C4007 + C50867 * C4008 + C2176 * C3008 + C2171 * C3012) *
                 C1281 -
             (C2177 * C4009 + C50867 * C4010 + C2176 * C3014 + C2171 * C3020) *
                 C50885) *
                C2175) *
               C51022 * C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C1280 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C1275 -
            (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
             C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                C1281 -
            (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
             C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                C50885) *
               C51010 * C51022 * C1514 +
           ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
             C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
                C1281 -
            ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
              C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                 C1275 +
             (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
              C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                 C1280) +
            (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
             C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
                C50885) *
               C51010 * C51022 * C50963) *
              C51151 +
          (((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
             C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
                C1281 -
            ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
              C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                 C1275 +
             (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
              C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                 C1280) +
            (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
             C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
                C50885) *
               C51010 * C51022 * C1514 +
           ((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C1280 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C1275 -
            (C120 * C1412 + C108 * C1413 + C119 * C721 + C107 * C729 +
             C118 * C720 + C106 * C728 + C117 * C719 + C105 * C727) *
                C1281 -
            (C120 * C1414 + C108 * C1415 + C119 * C733 + C107 * C745 +
             C118 * C732 + C106 * C744 + C117 * C731 + C105 * C743) *
                C50885) *
               C51010 * C51022 * C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C1280 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C1275 -
             (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                 C1281 -
             (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                 C50885) *
                C51010 * C5105 +
            ((C5449 + C5450) * C1280 + (C5451 + C5452) * C1275 -
             (C5453 + C5454) * C1281 - (C5455 + C5456) * C50885) *
                C51010 * C5106 +
            (C6021 * C1280 + C6022 * C1275 - C6023 * C1281 - C6024 * C50885) *
                C51010 * C5107) *
               C1514 +
           (((C5454 + C5453) * C1281 -
             ((C5452 + C5451) * C1275 + (C5450 + C5449) * C1280) +
             (C5456 + C5455) * C50885) *
                C51010 * C5105 +
            ((C5466 + C5465) * C1281 -
             ((C5464 + C5463) * C1275 + (C5462 + C5461) * C1280) +
             (C5468 + C5467) * C50885) *
                C51010 * C5106 +
            ((C6045 + C6046) * C1281 - (C6339 * C1275 + C6340 * C1280) +
             (C6051 + C6052) * C50885) *
                C51010 * C5107) *
               C50963) *
              C51151 +
          ((((C2378 + C2377) * C1281 -
             ((C2376 + C2375) * C1275 + (C2374 + C2373) * C1280) +
             (C2380 + C2379) * C50885) *
                C51010 * C5105 +
            ((C4028 + C4029) * C1281 -
             ((C3052 + C3053) * C1275 + (C3054 + C3055) * C1280) +
             (C4030 + C4031) * C50885) *
                C51010 * C5106 +
            ((C6855 + C6856) * C1281 - (C6221 * C1275 + C6222 * C1280) +
             (C6857 + C6858) * C50885) *
                C51010 * C5107) *
               C1514 +
           (((C3055 + C3054) * C1280 + (C3053 + C3052) * C1275 -
             (C4029 + C4028) * C1281 - (C4031 + C4030) * C50885) *
                C51010 * C5105 +
            ((C3393 + C3394) * C1280 + (C3395 + C3396) * C1275 -
             (C6856 + C6855) * C1281 - (C6858 + C6857) * C50885) *
                C51010 * C5106 +
            ((C6224 + C6225) * C1280 + (C6226 + C6227) * C1275 -
             (C2177 * C6842 + C50867 * C6843 + C2176 * C3500 + C2171 * C3508) *
                 C1281 -
             (C2177 * C6844 + C50867 * C6845 + C2176 * C3506 + C2171 * C3512) *
                 C50885) *
                C51010 * C5107) *
               C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C1280 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C1275 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C1281 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C50885) *
               C2173 +
           ((C2373 + C2374) * C1280 + (C2375 + C2376) * C1275 -
            (C2377 + C2378) * C1281 - (C2379 + C2380) * C50885) *
               C2174 +
           C3813 * C2175) *
              C51022 * C51198 +
          (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C50867 * C390) *
                C1281 -
            ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                 C1275 +
             (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                 C1280) +
            (C2176 * C395 + C2171 * C403 + C2177 * C394 + C50867 * C402) *
                C50885) *
               C2173 +
           ((C4028 + C4029) * C1281 -
            ((C3052 + C3053) * C1275 + (C3054 + C3055) * C1280) +
            (C4030 + C4031) * C50885) *
               C2174 +
           ((C4032 + C4033) * C1281 - (C3060 * C1275 + C3061 * C1280) +
            (C4034 + C4035) * C50885) *
               C2175) *
              C51022 * C51187 +
          (((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50867 * C857) *
                C1280 +
            (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50867 * C867) *
                C1275 -
            (C2177 * C853 + C50867 * C858 + C2176 * C852 + C2171 * C857) *
                C1281 -
            (C2177 * C862 + C50867 * C868 + C2176 * C861 + C2171 * C867) *
                C50885) *
               C2173 +
           ((C3393 + C3394) * C1280 + (C3395 + C3396) * C1275 -
            (C2177 * C970 + C50867 * C978 + C2176 * C971 + C2171 * C979) *
                C1281 -
            (C2177 * C974 + C50867 * C982 + C2176 * C975 + C2171 * C983) *
                C50885) *
               C2174 +
           ((C3397 + C3398) * C1280 + (C3399 + C3400) * C1275 -
            (C2177 * C3212 + C50867 * C3217 + C2176 * C3211 + C2171 * C3214) *
                C1281 -
            (C2177 * C3218 + C50867 * C3221 + C2176 * C3216 + C2171 * C3220) *
                C50885) *
               C2175) *
              C51022 * C1746) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C1280 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C1275 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C1281 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50885) *
              C51010 * C51022 * C51198 +
          ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
            C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
               C1281 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C1275 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C1280) +
           (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
            C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
               C50885) *
              C51010 * C51022 * C51187 +
          ((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
            C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
               C1280 +
           (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
            C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
               C1275 -
           (C120 * C855 + C108 * C864 + C119 * C854 + C107 * C859 +
            C118 * C853 + C106 * C858 + C117 * C852 + C105 * C857) *
               C1281 -
           (C120 * C865 + C108 * C870 + C119 * C863 + C107 * C869 +
            C118 * C862 + C106 * C868 + C117 * C861 + C105 * C867) *
               C50885) *
              C51010 * C51022 * C1746) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C1280 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C1275 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C1281 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C50885) *
               C51010 * C5105 +
           ((C5449 + C5450) * C1280 + (C5451 + C5452) * C1275 -
            (C5453 + C5454) * C1281 - (C5455 + C5456) * C50885) *
               C51010 * C5106 +
           C7352 * C5107) *
              C51198 +
          (((C5454 + C5453) * C1281 -
            ((C5452 + C5451) * C1275 + (C5450 + C5449) * C1280) +
            (C5456 + C5455) * C50885) *
               C51010 * C5105 +
           ((C5466 + C5465) * C1281 -
            ((C5464 + C5463) * C1275 + (C5462 + C5461) * C1280) +
            (C5468 + C5467) * C50885) *
               C51010 * C5106 +
           ((C6045 + C6046) * C1281 - (C6339 * C1275 + C6340 * C1280) +
            (C6051 + C6052) * C50885) *
               C51010 * C5107) *
              C51187 +
          (C7352 * C5105 +
           ((C6050 + C6049) * C1280 + (C6048 + C6047) * C1275 -
            (C6046 + C6045) * C1281 - (C6052 + C6051) * C50885) *
               C51010 * C5106 +
           ((C6351 + C6352) * C1280 + (C6353 + C6354) * C1275 -
            (C2177 * C6010 + C50867 * C6015 + C2176 * C6009 + C2171 * C6012) *
                C1281 -
            (C2177 * C6016 + C50867 * C6019 + C2176 * C6014 + C2171 * C6018) *
                C50885) *
               C51010 * C5107) *
              C1746) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C50007 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C51143 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C50000 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50885) *
              C51010 * C51022 * C50951 * C507 +
          ((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
            C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
               C50000 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C51143 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C50007) +
           (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
            C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
               C50885) *
              C51010 * C51022 * C50951 * C508 +
          ((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
            C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
               C50007 +
           (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
            C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
               C51143 -
           (C120 * C516 + C108 * C525 + C119 * C515 + C107 * C520 +
            C118 * C514 + C106 * C519 + C117 * C513 + C105 * C518) *
               C50000 -
           (C120 * C526 + C108 * C531 + C119 * C524 + C107 * C530 +
            C118 * C523 + C106 * C529 + C117 * C522 + C105 * C528) *
               C50885) *
              C51010 * C51022 * C50951 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 + C119 * C127 +
           C107 * C134 + C120 * C128 + C108 * C135) *
              C121 +
          (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 + C119 * C138 +
           C107 * C148 + C120 * C139 + C108 * C149) *
              C109 -
          (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 + C118 * C127 +
           C106 * C134 + C117 * C126 + C105 * C133) *
              C122 -
          (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 + C118 * C138 +
           C106 * C148 + C117 * C137 + C105 * C147) *
              C110 +
          (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 + C119 * C129 +
           C107 * C140 + C120 * C130 + C108 * C142) *
              C123 +
          (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 + C119 * C141 +
           C107 * C150 + C120 * C143 + C108 * C151) *
              C111 -
          (C120 * C131 + C108 * C144 + C119 * C130 + C107 * C142 + C118 * C129 +
           C106 * C140 + C117 * C128 + C105 * C135) *
              C124 -
          (C120 * C145 + C108 * C152 + C119 * C143 + C107 * C151 + C118 * C141 +
           C106 * C150 + C117 * C139 + C105 * C149) *
              C112) *
         C51010 * C51022 * C50951 * C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) * C121 +
           (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) * C109 -
           (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) * C122 -
           (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) * C110 +
           (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) * C123 +
           (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) * C111 -
           (C2177 * C129 + C50867 * C140 + C2176 * C128 + C2171 * C135) * C124 -
           (C2177 * C141 + C50867 * C150 + C2176 * C139 + C2171 * C149) *
               C112) *
              C2173 +
          ((C2176 * C263 + C2171 * C273 + C2177 * C259 + C50867 * C265) * C121 +
           (C2176 * C272 + C2171 * C280 + C2177 * C271 + C50867 * C279) * C109 -
           (C2177 * C260 + C50867 * C266 + C2176 * C259 + C2171 * C265) * C122 -
           (C2177 * C270 + C50867 * C278 + C2176 * C271 + C2171 * C279) * C110 +
           (C2176 * C260 + C2171 * C266 + C2177 * C261 + C50867 * C267) * C123 +
           (C2176 * C270 + C2171 * C278 + C2177 * C269 + C50867 * C277) * C111 -
           (C2177 * C262 + C50867 * C268 + C2176 * C261 + C2171 * C267) * C124 -
           (C2177 * C274 + C50867 * C281 + C2176 * C269 + C2171 * C277) *
               C112) *
              C2174 +
          ((C2176 * C512 + C2171 * C517 + C2177 * C513 + C50867 * C518) * C121 +
           (C2176 * C521 + C2171 * C527 + C2177 * C522 + C50867 * C528) * C109 -
           (C2177 * C514 + C50867 * C519 + C2176 * C513 + C2171 * C518) * C122 -
           (C2177 * C523 + C50867 * C529 + C2176 * C522 + C2171 * C528) * C110 +
           (C2176 * C514 + C2171 * C519 + C2177 * C515 + C50867 * C520) * C123 +
           (C2176 * C523 + C2171 * C529 + C2177 * C524 + C50867 * C530) * C111 -
           (C2177 * C516 + C50867 * C525 + C2176 * C515 + C2171 * C520) * C124 -
           (C2177 * C526 + C50867 * C531 + C2176 * C524 + C2171 * C530) *
               C112) *
              C2175) *
         C51022 * C50951 * C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C50007 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C51143 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C50000 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C50885) *
               C2173 +
           ((C2373 + C2374) * C50007 + (C2375 + C2376) * C51143 -
            (C2377 + C2378) * C50000 - (C2379 + C2380) * C50885) *
               C2174 +
           C2735 * C2175) *
              C51022 * C50951 * C507 +
          (((C2378 + C2377) * C50000 -
            ((C2376 + C2375) * C51143 + (C2374 + C2373) * C50007) +
            (C2380 + C2379) * C50885) *
               C2173 +
           ((C2390 + C2389) * C50000 -
            ((C2388 + C2387) * C51143 + (C2386 + C2385) * C50007) +
            (C2392 + C2391) * C50885) *
               C2174 +
           ((C2725 + C2726) * C50000 -
            ((C2727 + C2728) * C51143 + (C2729 + C2730) * C50007) +
            (C2731 + C2732) * C50885) *
               C2175) *
              C51022 * C50951 * C508 +
          (C2735 * C2173 +
           ((C2730 + C2729) * C50007 + (C2728 + C2727) * C51143 -
            (C2726 + C2725) * C50000 - (C2732 + C2731) * C50885) *
               C2174 +
           ((C2176 * C2688 + C2171 * C2691 + C2177 * C2689 + C50867 * C2692) *
                C50007 +
            (C2176 * C2693 + C2171 * C2697 + C2177 * C2694 + C50867 * C2698) *
                C51143 -
            (C2177 * C2690 + C50867 * C2695 + C2176 * C2689 + C2171 * C2692) *
                C50000 -
            (C2177 * C2696 + C50867 * C2699 + C2176 * C2694 + C2171 * C2698) *
                C50885) *
               C2175) *
              C51022 * C50951 * C509)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) * C121 +
           (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) * C109 -
           (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) * C122 -
           (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) * C110 +
           (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) * C123 +
           (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) * C111 -
           (C2177 * C129 + C50867 * C140 + C2176 * C128 + C2171 * C135) * C124 -
           (C2177 * C141 + C50867 * C150 + C2176 * C139 + C2171 * C149) *
               C112) *
              C51010 * C5105 +
          ((C2176 * C387 + C2171 * C397 + C2177 * C383 + C50867 * C389) * C121 +
           (C2176 * C396 + C2171 * C404 + C2177 * C395 + C50867 * C403) * C109 -
           (C2177 * C384 + C50867 * C390 + C2176 * C383 + C2171 * C389) * C122 -
           (C2177 * C394 + C50867 * C402 + C2176 * C395 + C2171 * C403) * C110 +
           (C2176 * C384 + C2171 * C390 + C2177 * C385 + C50867 * C391) * C123 +
           (C2176 * C394 + C2171 * C402 + C2177 * C393 + C50867 * C401) * C111 -
           (C2177 * C386 + C50867 * C392 + C2176 * C385 + C2171 * C391) * C124 -
           (C2177 * C398 + C50867 * C405 + C2176 * C393 + C2171 * C401) *
               C112) *
              C51010 * C5106 +
          ((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50867 * C857) * C121 +
           (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50867 * C867) * C109 -
           (C2177 * C853 + C50867 * C858 + C2176 * C852 + C2171 * C857) * C122 -
           (C2177 * C862 + C50867 * C868 + C2176 * C861 + C2171 * C867) * C110 +
           (C2176 * C853 + C2171 * C858 + C2177 * C854 + C50867 * C859) * C123 +
           (C2176 * C862 + C2171 * C868 + C2177 * C863 + C50867 * C869) * C111 -
           (C2177 * C855 + C50867 * C864 + C2176 * C854 + C2171 * C859) * C124 -
           (C2177 * C865 + C50867 * C870 + C2176 * C863 + C2171 * C869) *
               C112) *
              C51010 * C5107) *
         C50951 * C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C50007 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C51143 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C50000 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C50885) *
               C51010 * C5105 +
           ((C5449 + C5450) * C50007 + (C5451 + C5452) * C51143 -
            (C5453 + C5454) * C50000 - (C5455 + C5456) * C50885) *
               C51010 * C5106 +
           ((C5461 + C5462) * C50007 + (C5463 + C5464) * C51143 -
            (C5465 + C5466) * C50000 - (C5467 + C5468) * C50885) *
               C51010 * C5107) *
              C50951 * C507 +
          (((C2378 + C2377) * C50000 -
            ((C2376 + C2375) * C51143 + (C2374 + C2373) * C50007) +
            (C2380 + C2379) * C50885) *
               C51010 * C5105 +
           ((C4028 + C4029) * C50000 -
            ((C3052 + C3053) * C51143 + (C3054 + C3055) * C50007) +
            (C4030 + C4031) * C50885) *
               C51010 * C5106 +
           ((C2176 * C971 + C2171 * C979 + C2177 * C970 + C50867 * C978) *
                C50000 -
            ((C3396 + C3395) * C51143 + (C3394 + C3393) * C50007) +
            (C2176 * C975 + C2171 * C983 + C2177 * C974 + C50867 * C982) *
                C50885) *
               C51010 * C5107) *
              C50951 * C508 +
          (C2735 * C51010 * C5105 +
           ((C3051 + C3050) * C50007 + (C3049 + C3048) * C51143 -
            (C4033 + C4032) * C50000 - (C4035 + C4034) * C50885) *
               C51010 * C5106 +
           ((C3397 + C3398) * C50007 + (C3399 + C3400) * C51143 -
            (C2177 * C3212 + C50867 * C3217 + C2176 * C3211 + C2171 * C3214) *
                C50000 -
            (C2177 * C3218 + C50867 * C3221 + C2176 * C3216 + C2171 * C3220) *
                C50885) *
               C51010 * C5107) *
              C50951 * C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C603 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C50880) *
              C51010 * C51022 * C50951 * C599 -
          ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
            C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
               C50880 +
           (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
            C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
               C603) *
              C51010 * C51022 * C50951 * C600 +
          ((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
            C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
               C603 +
           (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
            C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
               C50880) *
              C51010 * C51022 * C50951 * C601 -
          ((C120 * C608 + C108 * C616 + C119 * C609 + C107 * C617 +
            C118 * C610 + C106 * C618 + C117 * C611 + C105 * C619) *
               C50880 +
           (C120 * C604 + C108 * C612 + C119 * C605 + C107 * C613 +
            C118 * C606 + C106 * C614 + C117 * C607 + C105 * C615) *
               C603) *
              C51010 * C51022 * C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C256 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C251 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C257 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C252 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C258 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C253) *
              C51010 * C51022 * C50951 * C51151 +
          ((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
            C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
               C257 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C251 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C256) +
           (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
            C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
               C252 -
           (C120 * C264 + C108 * C275 + C119 * C262 + C107 * C268 +
            C118 * C261 + C106 * C267 + C117 * C260 + C105 * C266) *
               C258 -
           (C120 * C276 + C108 * C282 + C119 * C274 + C107 * C281 +
            C118 * C269 + C106 * C277 + C117 * C270 + C105 * C278) *
               C253) *
              C51010 * C51022 * C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C251 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C257 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C252 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) *
                C258 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) *
                C253) *
               C2173 +
           ((C2373 + C2374) * C256 + (C2375 + C2376) * C251 -
            (C2377 + C2378) * C257 - (C2379 + C2380) * C252 +
            (C2381 + C2382) * C258 + (C2383 + C2384) * C253) *
               C2174 +
           ((C2385 + C2386) * C256 + (C2387 + C2388) * C251 -
            (C2389 + C2390) * C257 - (C2391 + C2392) * C252 +
            (C2393 + C2394) * C258 + (C2395 + C2396) * C253) *
               C2175) *
              C51022 * C50951 * C51151 +
          (((C2378 + C2377) * C257 -
            ((C2376 + C2375) * C251 + (C2374 + C2373) * C256) +
            (C2380 + C2379) * C252 - (C2382 + C2381) * C258 -
            (C2384 + C2383) * C253) *
               C2173 +
           ((C2390 + C2389) * C257 -
            ((C2388 + C2387) * C251 + (C2386 + C2385) * C256) +
            (C2392 + C2391) * C252 - (C2394 + C2393) * C258 -
            (C2396 + C2395) * C253) *
               C2174 +
           ((C2176 * C606 + C2171 * C614 + C2177 * C605 + C50867 * C613) *
                C257 -
            ((C2177 * C610 + C50867 * C618 + C2176 * C611 + C2171 * C619) *
                 C251 +
             (C2177 * C606 + C50867 * C614 + C2176 * C607 + C2171 * C615) *
                 C256) +
            (C2176 * C610 + C2171 * C618 + C2177 * C609 + C50867 * C617) *
                C252 -
            (C2177 * C604 + C50867 * C612 + C2176 * C605 + C2171 * C613) *
                C258 -
            (C2177 * C608 + C50867 * C616 + C2176 * C609 + C2171 * C617) *
                C253) *
               C2175) *
              C51022 * C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C603 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C50880) *
               C2173 +
           ((C2373 + C2374) * C603 + (C2375 + C2376) * C50880) * C2174 +
           C2854 * C2175) *
              C51022 * C50951 * C599 -
          (C2861 * C2175 +
           ((C2388 + C2387) * C50880 + (C2386 + C2385) * C603) * C2174 +
           ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C2173) *
              C51022 * C50951 * C600 +
          (C2854 * C2173 +
           ((C2730 + C2729) * C603 + (C2728 + C2727) * C50880) * C2174 +
           ((C2857 + C2858) * C603 + (C2859 + C2860) * C50880) * C2175) *
              C51022 * C50951 * C601 -
          (((C2177 * C2835 + C50867 * C2839 + C2176 * C2836 + C2171 * C2840) *
                C50880 +
            (C2177 * C2833 + C50867 * C2837 + C2176 * C2834 + C2171 * C2838) *
                C603) *
               C2175 +
           ((C2860 + C2859) * C50880 + (C2858 + C2857) * C603) * C2174 +
           C2861 * C2173) *
              C51022 * C50951 * C602)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C251 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C257 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C252 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) *
                C258 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) *
                C253) *
               C51010 * C5105 +
           ((C2176 * C387 + C2171 * C397 + C2177 * C383 + C50867 * C389) *
                C256 +
            (C2176 * C396 + C2171 * C404 + C2177 * C395 + C50867 * C403) *
                C251 -
            (C2177 * C384 + C50867 * C390 + C2176 * C383 + C2171 * C389) *
                C257 -
            (C2177 * C394 + C50867 * C402 + C2176 * C395 + C2171 * C403) *
                C252 +
            (C2176 * C384 + C2171 * C390 + C2177 * C385 + C50867 * C391) *
                C258 +
            (C2176 * C394 + C2171 * C402 + C2177 * C393 + C50867 * C401) *
                C253) *
               C51010 * C5106 +
           ((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50867 * C857) *
                C256 +
            (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50867 * C867) *
                C251 -
            (C2177 * C853 + C50867 * C858 + C2176 * C852 + C2171 * C857) *
                C257 -
            (C2177 * C862 + C50867 * C868 + C2176 * C861 + C2171 * C867) *
                C252 +
            (C2176 * C853 + C2171 * C858 + C2177 * C854 + C50867 * C859) *
                C258 +
            (C2176 * C862 + C2171 * C868 + C2177 * C863 + C50867 * C869) *
                C253) *
               C51010 * C5107) *
              C50951 * C51151 +
          (((C2378 + C2377) * C257 -
            ((C2376 + C2375) * C251 + (C2374 + C2373) * C256) +
            (C2380 + C2379) * C252 - (C2382 + C2381) * C258 -
            (C2384 + C2383) * C253) *
               C51010 * C5105 +
           ((C4028 + C4029) * C257 -
            ((C3052 + C3053) * C251 + (C3054 + C3055) * C256) +
            (C4030 + C4031) * C252 -
            (C2177 * C721 + C50867 * C729 + C2176 * C720 + C2171 * C728) *
                C258 -
            (C2177 * C733 + C50867 * C745 + C2176 * C732 + C2171 * C744) *
                C253) *
               C51010 * C5106 +
           ((C2176 * C971 + C2171 * C979 + C2177 * C970 + C50867 * C978) *
                C257 -
            ((C3396 + C3395) * C251 + (C3394 + C3393) * C256) +
            (C2176 * C975 + C2171 * C983 + C2177 * C974 + C50867 * C982) *
                C252 -
            (C2177 * C969 + C50867 * C977 + C2176 * C970 + C2171 * C978) *
                C258 -
            (C2177 * C973 + C50867 * C981 + C2176 * C974 + C2171 * C982) *
                C253) *
               C51010 * C5107) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C603 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C50880) *
               C51010 * C5105 +
           ((C5449 + C5450) * C603 + (C5451 + C5452) * C50880) * C51010 *
               C5106 +
           ((C5461 + C5462) * C603 + (C5463 + C5464) * C50880) * C51010 *
               C5107) *
              C50951 * C599 -
          (((C3396 + C3395) * C50880 + (C3394 + C3393) * C603) * C51010 *
               C5107 +
           ((C3052 + C3053) * C50880 + (C3054 + C3055) * C603) * C51010 *
               C5106 +
           ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C51010 *
               C5105) *
              C50951 * C600 +
          (C2854 * C51010 * C5105 +
           ((C3051 + C3050) * C603 + (C3049 + C3048) * C50880) * C51010 *
               C5106 +
           ((C3397 + C3398) * C603 + (C3399 + C3400) * C50880) * C51010 *
               C5107) *
              C50951 * C601 -
          (((C2177 * C3370 + C50867 * C3374 + C2176 * C3371 + C2171 * C3375) *
                C50880 +
            (C2177 * C3368 + C50867 * C3372 + C2176 * C3369 + C2171 * C3373) *
                C603) *
               C51010 * C5107 +
           ((C3059 + C3058) * C50880 + (C3057 + C3056) * C603) * C51010 *
               C5106 +
           C2861 * C51010 * C5105) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C603 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50880) *
               C51010 * C51022 * C51152 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C50880 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C603) *
               C51010 * C51022 * C50963) *
              C507 +
          (((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C603 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C50880) *
               C51010 * C51022 * C50963 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C50880 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C603) *
               C51010 * C51022 * C51152) *
              C508 +
          (((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
             C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
                C603 +
            (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
             C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
                C50880) *
               C51010 * C51022 * C51152 -
           ((C120 * C734 + C108 * C746 + C119 * C735 + C107 * C747 +
             C118 * C736 + C106 * C748 + C117 * C737 + C105 * C749) *
                C50880 +
            (C120 * C722 + C108 * C738 + C119 * C723 + C107 * C739 +
             C118 * C724 + C106 * C740 + C117 * C725 + C105 * C741) *
                C603) *
               C51010 * C51022 * C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C256 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C251 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C257 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C252 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C258 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C253) *
              C51010 * C51022 * C51152 +
          ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
            C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
               C257 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C251 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C256) +
           (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
            C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
               C252 -
           (C120 * C388 + C108 * C399 + C119 * C386 + C107 * C392 +
            C118 * C385 + C106 * C391 + C117 * C384 + C105 * C390) *
               C258 -
           (C120 * C400 + C108 * C406 + C119 * C398 + C107 * C405 +
            C118 * C393 + C106 * C401 + C117 * C394 + C105 * C402) *
               C253) *
              C51010 * C51022 * C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C251 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C257 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C252 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) *
                C258 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) *
                C253) *
               C2173 +
           ((C2373 + C2374) * C256 + (C2375 + C2376) * C251 -
            (C2377 + C2378) * C257 - (C2379 + C2380) * C252 +
            (C2381 + C2382) * C258 + (C2383 + C2384) * C253) *
               C2174 +
           ((C2385 + C2386) * C256 + (C2387 + C2388) * C251 -
            (C2389 + C2390) * C257 - (C2391 + C2392) * C252 +
            (C2393 + C2394) * C258 + (C2395 + C2396) * C253) *
               C2175) *
              C51022 * C51152 +
          (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C50867 * C390) *
                C257 -
            ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                 C251 +
             (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                 C256) +
            (C2176 * C395 + C2171 * C403 + C2177 * C394 + C50867 * C402) *
                C252 -
            (C2177 * C385 + C50867 * C391 + C2176 * C384 + C2171 * C390) *
                C258 -
            (C2177 * C393 + C50867 * C401 + C2176 * C394 + C2171 * C402) *
                C253) *
               C2173 +
           ((C2176 * C719 + C2171 * C727 + C2177 * C720 + C50867 * C728) *
                C257 -
            ((C2177 * C731 + C50867 * C743 + C2176 * C730 + C2171 * C742) *
                 C251 +
             (C2177 * C719 + C50867 * C727 + C2176 * C718 + C2171 * C726) *
                 C256) +
            (C2176 * C731 + C2171 * C743 + C2177 * C732 + C50867 * C744) *
                C252 -
            (C2177 * C721 + C50867 * C729 + C2176 * C720 + C2171 * C728) *
                C258 -
            (C2177 * C733 + C50867 * C745 + C2176 * C732 + C2171 * C744) *
                C253) *
               C2174 +
           ((C2176 * C724 + C2171 * C740 + C2177 * C723 + C50867 * C739) *
                C257 -
            ((C2177 * C736 + C50867 * C748 + C2176 * C737 + C2171 * C749) *
                 C251 +
             (C2177 * C724 + C50867 * C740 + C2176 * C725 + C2171 * C741) *
                 C256) +
            (C2176 * C736 + C2171 * C748 + C2177 * C735 + C50867 * C747) *
                C252 -
            (C2177 * C722 + C50867 * C738 + C2176 * C723 + C2171 * C739) *
                C258 -
            (C2177 * C734 + C50867 * C746 + C2176 * C735 + C2171 * C747) *
                C253) *
               C2175) *
              C51022 * C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C50880) *
                C2173 +
            ((C2373 + C2374) * C603 + (C2375 + C2376) * C50880) * C2174 +
            C2854 * C2175) *
               C51022 * C51152 -
           (C3064 * C2175 +
            ((C3052 + C3053) * C50880 + (C3054 + C3055) * C603) * C2174 +
            ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                 C50880 +
             (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                 C603) *
                C2173) *
               C51022 * C50963) *
              C507 +
          ((((C3055 + C3054) * C603 + (C3053 + C3052) * C50880) * C2173 +
            ((C3051 + C3050) * C603 + (C3049 + C3048) * C50880) * C2174 +
            ((C3056 + C3057) * C603 + (C3058 + C3059) * C50880) * C2175) *
               C51022 * C50963 -
           (C2861 * C2175 +
            ((C2388 + C2387) * C50880 + (C2386 + C2385) * C603) * C2174 +
            ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C2173) *
               C51022 * C51152) *
              C508 +
          ((C2854 * C2173 +
            ((C2730 + C2729) * C603 + (C2728 + C2727) * C50880) * C2174 +
            ((C2857 + C2858) * C603 + (C2859 + C2860) * C50880) * C2175) *
               C51022 * C51152 -
           (((C2177 * C3015 + C50867 * C3021 + C2176 * C3016 + C2171 * C3022) *
                 C50880 +
             (C2177 * C3009 + C50867 * C3017 + C2176 * C3010 + C2171 * C3018) *
                 C603) *
                C2175 +
            ((C3059 + C3058) * C50880 + (C3057 + C3056) * C603) * C2174 +
            C3064 * C2173) *
               C51022 * C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C251 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C257 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C252 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) *
                C258 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) *
                C253) *
               C51010 * C5105 +
           ((C5449 + C5450) * C256 + (C5451 + C5452) * C251 -
            (C5453 + C5454) * C257 - (C5455 + C5456) * C252 +
            (C5457 + C5458) * C258 + (C5459 + C5460) * C253) *
               C51010 * C5106 +
           ((C5461 + C5462) * C256 + (C5463 + C5464) * C251 -
            (C5465 + C5466) * C257 - (C5467 + C5468) * C252 +
            (C5469 + C5470) * C258 + (C5471 + C5472) * C253) *
               C51010 * C5107) *
              C51152 +
          (((C5454 + C5453) * C257 -
            ((C5452 + C5451) * C251 + (C5450 + C5449) * C256) +
            (C5456 + C5455) * C252 - (C5458 + C5457) * C258 -
            (C5460 + C5459) * C253) *
               C51010 * C5105 +
           ((C5466 + C5465) * C257 -
            ((C5464 + C5463) * C251 + (C5462 + C5461) * C256) +
            (C5468 + C5467) * C252 - (C5470 + C5469) * C258 -
            (C5472 + C5471) * C253) *
               C51010 * C5106 +
           ((C2176 * C1057 + C2171 * C1065 + C2177 * C1056 + C50867 * C1064) *
                C257 -
            ((C2177 * C1061 + C50867 * C1069 + C2176 * C1062 + C2171 * C1070) *
                 C251 +
             (C2177 * C1057 + C50867 * C1065 + C2176 * C1058 + C2171 * C1066) *
                 C256) +
            (C2176 * C1061 + C2171 * C1069 + C2177 * C1060 + C50867 * C1068) *
                C252 -
            (C2177 * C1055 + C50867 * C1063 + C2176 * C1056 + C2171 * C1064) *
                C258 -
            (C2177 * C1059 + C50867 * C1067 + C2176 * C1060 + C2171 * C1068) *
                C253) *
               C51010 * C5107) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C50880) *
                C51010 * C5105 +
            ((C5449 + C5450) * C603 + (C5451 + C5452) * C50880) * C51010 *
                C5106 +
            ((C5461 + C5462) * C603 + (C5463 + C5464) * C50880) * C51010 *
                C5107) *
               C51152 -
           (((C2177 * C1061 + C50867 * C1069 + C2176 * C1062 + C2171 * C1070) *
                 C50880 +
             (C2177 * C1057 + C50867 * C1065 + C2176 * C1058 + C2171 * C1066) *
                 C603) *
                C51010 * C5107 +
            ((C5464 + C5463) * C50880 + (C5462 + C5461) * C603) * C51010 *
                C5106 +
            ((C5452 + C5451) * C50880 + (C5450 + C5449) * C603) * C51010 *
                C5105) *
               C50963) *
              C507 +
          ((((C3055 + C3054) * C603 + (C3053 + C3052) * C50880) * C51010 *
                C5105 +
            ((C3393 + C3394) * C603 + (C3395 + C3396) * C50880) * C51010 *
                C5106 +
            ((C2176 * C3501 + C2171 * C3509 + C2177 * C3500 + C50867 * C3508) *
                 C603 +
             (C2176 * C3507 + C2171 * C3513 + C2177 * C3506 + C50867 * C3512) *
                 C50880) *
                C51010 * C5107) *
               C50963 -
           (((C3396 + C3395) * C50880 + (C3394 + C3393) * C603) * C51010 *
                C5107 +
            ((C3052 + C3053) * C50880 + (C3054 + C3055) * C603) * C51010 *
                C5106 +
            ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C51010 *
                C5105) *
               C51152) *
              C508 +
          ((C2854 * C51010 * C5105 +
            ((C3051 + C3050) * C603 + (C3049 + C3048) * C50880) * C51010 *
                C5106 +
            ((C3397 + C3398) * C603 + (C3399 + C3400) * C50880) * C51010 *
                C5107) *
               C51152 -
           (((C2177 * C3502 + C50867 * C3510 + C2176 * C3503 + C2171 * C3511) *
                 C50880 +
             (C2177 * C3498 + C50867 * C3504 + C2176 * C3499 + C2171 * C3505) *
                 C603) *
                C51010 * C5107 +
            ((C3400 + C3399) * C50880 + (C3398 + C3397) * C603) * C51010 *
                C5106 +
            C3064 * C51010 * C5105) *
               C50963) *
              C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51194 * C132 + C7942 * C126 + C51195 * C133 +
             C7943 * C127 + C7938 * C134) *
                C1174 +
            (C7941 * C136 + C51194 * C146 + C7942 * C137 + C51195 * C147 +
             C7943 * C138 + C7938 * C148) *
                C51196 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51195 * C134 +
             C7941 * C126 + C51194 * C133) *
                C1175 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51195 * C148 +
             C7941 * C137 + C51194 * C147) *
                C51181 +
            (C7941 * C127 + C51194 * C134 + C7942 * C128 + C51195 * C135 +
             C7943 * C129 + C7938 * C140) *
                C1176 +
            (C7941 * C138 + C51194 * C148 + C7942 * C139 + C51195 * C149 +
             C7943 * C141 + C7938 * C150) *
                C1171) *
               C51010 * C51167 +
           ((C11083 + C11084 + C11085) * C1174 +
            (C11086 + C11087 + C11088) * C51196 -
            (C11089 + C11090 + C11091) * C1175 -
            (C11092 + C11093 + C11094) * C51181 +
            (C11095 + C11096 + C11097) * C1176 +
            (C11098 + C11099 + C11100) * C1171) *
               C51010 * C51086) *
              C50951 * C1172 +
          (((C8135 + C8134 + C8133) * C1175 -
            ((C8132 + C8131 + C8130) * C51196 +
             (C8129 + C8128 + C8127) * C1174) +
            (C8138 + C8137 + C8136) * C51181 - (C8141 + C8140 + C8139) * C1176 -
            (C8144 + C8143 + C8142) * C1171) *
               C51010 * C51167 +
           ((C9677 + C9678 + C9679) * C1175 -
            ((C8759 + C8760 + C8761) * C51196 +
             (C8762 + C8763 + C8764) * C1174) +
            (C9680 + C9681 + C9682) * C51181 -
            (C7943 * C1412 + C7938 * C1413 + C7942 * C721 + C51195 * C729 +
             C7941 * C720 + C51194 * C728) *
                C1176 -
            (C7943 * C1414 + C7938 * C1415 + C7942 * C733 + C51195 * C745 +
             C7941 * C732 + C51194 * C744) *
                C1171) *
               C51010 * C51086) *
              C50951 * C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51194 * C132 + C7942 * C126 + C51195 * C133 +
             C7943 * C127 + C7938 * C134) *
                C1280 +
            (C7941 * C136 + C51194 * C146 + C7942 * C137 + C51195 * C147 +
             C7943 * C138 + C7938 * C148) *
                C1275 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51195 * C134 +
             C7941 * C126 + C51194 * C133) *
                C1281 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51195 * C148 +
             C7941 * C137 + C51194 * C147) *
                C50885) *
               C51010 * C51167 +
           ((C11083 + C11084 + C11085) * C1280 +
            (C11086 + C11087 + C11088) * C1275 -
            (C11089 + C11090 + C11091) * C1281 -
            (C11092 + C11093 + C11094) * C50885) *
               C51010 * C51086) *
              C50951 * C51197 +
          (((C8135 + C8134 + C8133) * C1281 -
            ((C8132 + C8131 + C8130) * C1275 +
             (C8129 + C8128 + C8127) * C1280) +
            (C8138 + C8137 + C8136) * C50885) *
               C51010 * C51167 +
           ((C9677 + C9678 + C9679) * C1281 -
            ((C8759 + C8760 + C8761) * C1275 +
             (C8762 + C8763 + C8764) * C1280) +
            (C9680 + C9681 + C9682) * C50885) *
               C51010 * C51086) *
              C50951 * C51184 +
          (((C8469 + C8468 + C8467) * C1280 + (C8466 + C8465 + C8464) * C1275 -
            (C8463 + C8462 + C8461) * C1281 -
            (C8472 + C8471 + C8470) * C50885) *
               C51010 * C51167 +
           ((C8765 + C8766 + C8767) * C1280 + (C8768 + C8769 + C8770) * C1275 -
            (C7943 * C722 + C7938 * C738 + C7942 * C723 + C51195 * C739 +
             C7941 * C724 + C51194 * C740) *
                C1281 -
            (C7943 * C734 + C7938 * C746 + C7942 * C735 + C51195 * C747 +
             C7941 * C736 + C51194 * C748) *
                C50885) *
               C51010 * C51086) *
              C50951 * C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7941 * C125 + C51194 * C132 + C7942 * C126 + C51195 * C133 +
              C7943 * C127 + C7938 * C134) *
                 C1280 +
             (C7941 * C136 + C51194 * C146 + C7942 * C137 + C51195 * C147 +
              C7943 * C138 + C7938 * C148) *
                 C1275 -
             (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51195 * C134 +
              C7941 * C126 + C51194 * C133) *
                 C1281 -
             (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51195 * C148 +
              C7941 * C137 + C51194 * C147) *
                 C50885) *
                C51010 * C51167 +
            ((C11083 + C11084 + C11085) * C1280 +
             (C11086 + C11087 + C11088) * C1275 -
             (C11089 + C11090 + C11091) * C1281 -
             (C11092 + C11093 + C11094) * C50885) *
                C51010 * C51086) *
               C51152 +
           (((C11091 + C11090 + C11089) * C1281 -
             ((C11088 + C11087 + C11086) * C1275 +
              (C11085 + C11084 + C11083) * C1280) +
             (C11094 + C11093 + C11092) * C50885) *
                C51010 * C51167 +
            ((C11661 + C11662 + C11663) * C1281 -
             ((C11664 + C11665 + C11666) * C1275 +
              (C11667 + C11668 + C11669) * C1280) +
             (C11670 + C11671 + C11672) * C50885) *
                C51010 * C51086) *
               C50963) *
              C1172 +
          ((((C8135 + C8134 + C8133) * C1281 -
             ((C8132 + C8131 + C8130) * C1275 +
              (C8129 + C8128 + C8127) * C1280) +
             (C8138 + C8137 + C8136) * C50885) *
                C51010 * C51167 +
            ((C9677 + C9678 + C9679) * C1281 -
             ((C8759 + C8760 + C8761) * C1275 +
              (C8762 + C8763 + C8764) * C1280) +
             (C9680 + C9681 + C9682) * C50885) *
                C51010 * C51086) *
               C51152 +
           (((C8764 + C8763 + C8762) * C1280 + (C8761 + C8760 + C8759) * C1275 -
             (C9679 + C9678 + C9677) * C1281 -
             (C9682 + C9681 + C9680) * C50885) *
                C51010 * C51167 +
            ((C9075 + C9076 + C9077) * C1280 + (C9078 + C9079 + C9080) * C1275 -
             (C7943 * C969 + C7938 * C977 + C7942 * C970 + C51195 * C978 +
              C7941 * C971 + C51194 * C979) *
                 C1281 -
             (C7943 * C973 + C7938 * C981 + C7942 * C974 + C51195 * C982 +
              C7941 * C975 + C51194 * C983) *
                 C50885) *
                C51010 * C51086) *
               C50963) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[48] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7941 * C125 + C51194 * C132 + C7942 * C126 +
                      C51195 * C133 + C7943 * C127 + C7938 * C134) *
                         C50007 +
                     (C7941 * C136 + C51194 * C146 + C7942 * C137 +
                      C51195 * C147 + C7943 * C138 + C7938 * C148) *
                         C51143 -
                     (C7943 * C128 + C7938 * C135 + C7942 * C127 +
                      C51195 * C134 + C7941 * C126 + C51194 * C133) *
                         C50000 -
                     (C7943 * C139 + C7938 * C149 + C7942 * C138 +
                      C51195 * C148 + C7941 * C137 + C51194 * C147) *
                         C50885) *
                        C51010 * C51167 +
                    ((C11083 + C11084 + C11085) * C50007 +
                     (C11086 + C11087 + C11088) * C51143 -
                     (C11089 + C11090 + C11091) * C50000 -
                     (C11092 + C11093 + C11094) * C50885) *
                        C51010 * C51086) *
                       C1514 +
                   (((C11091 + C11090 + C11089) * C50000 -
                     ((C11088 + C11087 + C11086) * C51143 +
                      (C11085 + C11084 + C11083) * C50007) +
                     (C11094 + C11093 + C11092) * C50885) *
                        C51010 * C51167 +
                    ((C11661 + C11662 + C11663) * C50000 -
                     ((C11664 + C11665 + C11666) * C51143 +
                      (C11667 + C11668 + C11669) * C50007) +
                     (C11670 + C11671 + C11672) * C50885) *
                        C51010 * C51086) *
                       C50963) *
                      C1172 +
                  ((((C8135 + C8134 + C8133) * C50000 -
                     ((C8132 + C8131 + C8130) * C51143 +
                      (C8129 + C8128 + C8127) * C50007) +
                     (C8138 + C8137 + C8136) * C50885) *
                        C51010 * C51167 +
                    ((C9677 + C9678 + C9679) * C50000 -
                     ((C8759 + C8760 + C8761) * C51143 +
                      (C8762 + C8763 + C8764) * C50007) +
                     (C9680 + C9681 + C9682) * C50885) *
                        C51010 * C51086) *
                       C1514 +
                   (((C8764 + C8763 + C8762) * C50007 +
                     (C8761 + C8760 + C8759) * C51143 -
                     (C9679 + C9678 + C9677) * C50000 -
                     (C9682 + C9681 + C9680) * C50885) *
                        C51010 * C51167 +
                    ((C9075 + C9076 + C9077) * C50007 +
                     (C9078 + C9079 + C9080) * C51143 -
                     (C7943 * C969 + C7938 * C977 + C7942 * C970 +
                      C51195 * C978 + C7941 * C971 + C51194 * C979) *
                         C50000 -
                     (C7943 * C973 + C7938 * C981 + C7942 * C974 +
                      C51195 * C982 + C7941 * C975 + C51194 * C983) *
                         C50885) *
                        C51010 * C51086) *
                       C50963) *
                      C50939)) /
                (p * q * std::sqrt(p + q));
    d2ee[49] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7941 * C125 + C51194 * C132 + C7942 * C126 +
                      C51195 * C133 + C7943 * C127 + C7938 * C134) *
                         C603 +
                     (C7941 * C136 + C51194 * C146 + C7942 * C137 +
                      C51195 * C147 + C7943 * C138 + C7938 * C148) *
                         C50880) *
                        C51010 * C51167 +
                    ((C11083 + C11084 + C11085) * C603 +
                     (C11086 + C11087 + C11088) * C50880) *
                        C51010 * C51086) *
                       C1514 -
                   (((C11664 + C11665 + C11666) * C50880 +
                     (C11667 + C11668 + C11669) * C603) *
                        C51010 * C51086 +
                    ((C11088 + C11087 + C11086) * C50880 +
                     (C11085 + C11084 + C11083) * C603) *
                        C51010 * C51167) *
                       C50963) *
                      C51197 +
                  ((((C8764 + C8763 + C8762) * C603 +
                     (C8761 + C8760 + C8759) * C50880) *
                        C51010 * C51167 +
                    ((C9075 + C9076 + C9077) * C603 +
                     (C9078 + C9079 + C9080) * C50880) *
                        C51010 * C51086) *
                       C50963 -
                   (((C8759 + C8760 + C8761) * C50880 +
                     (C8762 + C8763 + C8764) * C603) *
                        C51010 * C51086 +
                    ((C8132 + C8131 + C8130) * C50880 +
                     (C8129 + C8128 + C8127) * C603) *
                        C51010 * C51167) *
                       C1514) *
                      C51184 +
                  ((((C8469 + C8468 + C8467) * C603 +
                     (C8466 + C8465 + C8464) * C50880) *
                        C51010 * C51167 +
                    ((C8765 + C8766 + C8767) * C603 +
                     (C8768 + C8769 + C8770) * C50880) *
                        C51010 * C51086) *
                       C1514 -
                   (((C7943 * C3218 + C7938 * C3221 + C7942 * C3216 +
                      C51195 * C3220 + C7941 * C3215 + C51194 * C3219) *
                         C50880 +
                     (C7943 * C3212 + C7938 * C3217 + C7942 * C3211 +
                      C51195 * C3214 + C7941 * C3210 + C51194 * C3213) *
                         C603) *
                        C51010 * C51086 +
                    ((C8770 + C8769 + C8768) * C50880 +
                     (C8767 + C8766 + C8765) * C603) *
                        C51010 * C51167) *
                       C50963) *
                      C1279)) /
                (p * q * std::sqrt(p + q));
    d2ee[50] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7941 * C125 + C51194 * C132 + C7942 * C126 +
                      C51195 * C133 + C7943 * C127 + C7938 * C134) *
                         C603 +
                     (C7941 * C136 + C51194 * C146 + C7942 * C137 +
                      C51195 * C147 + C7943 * C138 + C7938 * C148) *
                         C50880) *
                        C51010 * C51167 +
                    ((C11083 + C11084 + C11085) * C603 +
                     (C11086 + C11087 + C11088) * C50880) *
                        C51010 * C51086) *
                       C51198 -
                   (((C11664 + C11665 + C11666) * C50880 +
                     (C11667 + C11668 + C11669) * C603) *
                        C51010 * C51086 +
                    ((C11088 + C11087 + C11086) * C50880 +
                     (C11085 + C11084 + C11083) * C603) *
                        C51010 * C51167) *
                       C51187 +
                   (((C11669 + C11668 + C11667) * C603 +
                     (C11666 + C11665 + C11664) * C50880) *
                        C51010 * C51167 +
                    ((C11929 + C11930 + C11931) * C603 +
                     (C11932 + C11933 + C11934) * C50880) *
                        C51010 * C51086) *
                       C1746) *
                      C1172 +
                  ((((C8764 + C8763 + C8762) * C603 +
                     (C8761 + C8760 + C8759) * C50880) *
                        C51010 * C51167 +
                    ((C9075 + C9076 + C9077) * C603 +
                     (C9078 + C9079 + C9080) * C50880) *
                        C51010 * C51086) *
                       C51187 -
                   (((C8759 + C8760 + C8761) * C50880 +
                     (C8762 + C8763 + C8764) * C603) *
                        C51010 * C51086 +
                    ((C8132 + C8131 + C8130) * C50880 +
                     (C8129 + C8128 + C8127) * C603) *
                        C51010 * C51167) *
                       C51198 -
                   (((C7943 * C6844 + C7938 * C6845 + C7942 * C3506 +
                      C51195 * C3512 + C7941 * C3507 + C51194 * C3513) *
                         C50880 +
                     (C7943 * C6842 + C7938 * C6843 + C7942 * C3500 +
                      C51195 * C3508 + C7941 * C3501 + C51194 * C3509) *
                         C603) *
                        C51010 * C51086 +
                    ((C9080 + C9079 + C9078) * C50880 +
                     (C9077 + C9076 + C9075) * C603) *
                        C51010 * C51167) *
                       C1746) *
                      C50939)) /
                (p * q * std::sqrt(p + q));
    d2ee[51] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C7941 * C125 + C51194 * C132 + C7942 * C126 +
                     C51195 * C133 + C7943 * C127 + C7938 * C134) *
                        C50007 +
                    (C7941 * C136 + C51194 * C146 + C7942 * C137 +
                     C51195 * C147 + C7943 * C138 + C7938 * C148) *
                        C51143 -
                    (C7943 * C128 + C7938 * C135 + C7942 * C127 +
                     C51195 * C134 + C7941 * C126 + C51194 * C133) *
                        C50000 -
                    (C7943 * C139 + C7938 * C149 + C7942 * C138 +
                     C51195 * C148 + C7941 * C137 + C51194 * C147) *
                        C50885) *
                       C51010 * C51167 +
                   ((C11083 + C11084 + C11085) * C50007 +
                    (C11086 + C11087 + C11088) * C51143 -
                    (C11089 + C11090 + C11091) * C50000 -
                    (C11092 + C11093 + C11094) * C50885) *
                       C51010 * C51086) *
                      C50951 * C507 +
                  (((C8135 + C8134 + C8133) * C50000 -
                    ((C8132 + C8131 + C8130) * C51143 +
                     (C8129 + C8128 + C8127) * C50007) +
                    (C8138 + C8137 + C8136) * C50885) *
                       C51010 * C51167 +
                   ((C9677 + C9678 + C9679) * C50000 -
                    ((C8759 + C8760 + C8761) * C51143 +
                     (C8762 + C8763 + C8764) * C50007) +
                    (C9680 + C9681 + C9682) * C50885) *
                       C51010 * C51086) *
                      C50951 * C508 +
                  (((C8469 + C8468 + C8467) * C50007 +
                    (C8466 + C8465 + C8464) * C51143 -
                    (C8463 + C8462 + C8461) * C50000 -
                    (C8472 + C8471 + C8470) * C50885) *
                       C51010 * C51167 +
                   ((C8765 + C8766 + C8767) * C50007 +
                    (C8768 + C8769 + C8770) * C51143 -
                    (C7943 * C722 + C7938 * C738 + C7942 * C723 +
                     C51195 * C739 + C7941 * C724 + C51194 * C740) *
                        C50000 -
                    (C7943 * C734 + C7938 * C746 + C7942 * C735 +
                     C51195 * C747 + C7941 * C736 + C51194 * C748) *
                        C50885) *
                       C51010 * C51086) *
                      C50951 * C509)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C7941 * C125 + C51194 * C132 + C7942 * C126 +
                    C51195 * C133 + C7943 * C127 + C7938 * C134) *
                       C121 +
                   (C7941 * C136 + C51194 * C146 + C7942 * C137 +
                    C51195 * C147 + C7943 * C138 + C7938 * C148) *
                       C109 -
                   (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51195 * C134 +
                    C7941 * C126 + C51194 * C133) *
                       C122 -
                   (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51195 * C148 +
                    C7941 * C137 + C51194 * C147) *
                       C110 +
                   (C7941 * C127 + C51194 * C134 + C7942 * C128 +
                    C51195 * C135 + C7943 * C129 + C7938 * C140) *
                       C123 +
                   (C7941 * C138 + C51194 * C148 + C7942 * C139 +
                    C51195 * C149 + C7943 * C141 + C7938 * C150) *
                       C111 -
                   (C7943 * C130 + C7938 * C142 + C7942 * C129 + C51195 * C140 +
                    C7941 * C128 + C51194 * C135) *
                       C124 -
                   (C7943 * C143 + C7938 * C151 + C7942 * C141 + C51195 * C150 +
                    C7941 * C139 + C51194 * C149) *
                       C112) *
                      C51010 * C51167 +
                  ((C7941 * C387 + C51194 * C397 + C7942 * C383 +
                    C51195 * C389 + C7943 * C384 + C7938 * C390) *
                       C121 +
                   (C7941 * C396 + C51194 * C404 + C7942 * C395 +
                    C51195 * C403 + C7943 * C394 + C7938 * C402) *
                       C109 -
                   (C7943 * C385 + C7938 * C391 + C7942 * C384 + C51195 * C390 +
                    C7941 * C383 + C51194 * C389) *
                       C122 -
                   (C7943 * C393 + C7938 * C401 + C7942 * C394 + C51195 * C402 +
                    C7941 * C395 + C51194 * C403) *
                       C110 +
                   (C7941 * C384 + C51194 * C390 + C7942 * C385 +
                    C51195 * C391 + C7943 * C386 + C7938 * C392) *
                       C123 +
                   (C7941 * C394 + C51194 * C402 + C7942 * C393 +
                    C51195 * C401 + C7943 * C398 + C7938 * C405) *
                       C111 -
                   (C7943 * C388 + C7938 * C399 + C7942 * C386 + C51195 * C392 +
                    C7941 * C385 + C51194 * C391) *
                       C124 -
                   (C7943 * C400 + C7938 * C406 + C7942 * C398 + C51195 * C405 +
                    C7941 * C393 + C51194 * C401) *
                       C112) *
                      C51010 * C51086) *
                 C50951 * C50925) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C7941 * C125 + C51194 * C132 + C7942 * C126 +
                     C51195 * C133 + C7943 * C127 + C7938 * C134) *
                        C50007 +
                    (C7941 * C136 + C51194 * C146 + C7942 * C137 +
                     C51195 * C147 + C7943 * C138 + C7938 * C148) *
                        C51143 -
                    (C7943 * C128 + C7938 * C135 + C7942 * C127 +
                     C51195 * C134 + C7941 * C126 + C51194 * C133) *
                        C50000 -
                    (C7943 * C139 + C7938 * C149 + C7942 * C138 +
                     C51195 * C148 + C7941 * C137 + C51194 * C147) *
                        C50885) *
                       C51010 * C51167 +
                   ((C11083 + C11084 + C11085) * C50007 +
                    (C11086 + C11087 + C11088) * C51143 -
                    (C11089 + C11090 + C11091) * C50000 -
                    (C11092 + C11093 + C11094) * C50885) *
                       C51010 * C51086) *
                      C848 +
                  (((C11091 + C11090 + C11089) * C50000 -
                    ((C11088 + C11087 + C11086) * C51143 +
                     (C11085 + C11084 + C11083) * C50007) +
                    (C11094 + C11093 + C11092) * C50885) *
                       C51010 * C51167 +
                   ((C11661 + C11662 + C11663) * C50000 -
                    ((C11664 + C11665 + C11666) * C51143 +
                     (C11667 + C11668 + C11669) * C50007) +
                    (C11670 + C11671 + C11672) * C50885) *
                       C51010 * C51086) *
                      C849 +
                  (((C11669 + C11668 + C11667) * C50007 +
                    (C11666 + C11665 + C11664) * C51143 -
                    (C11663 + C11662 + C11661) * C50000 -
                    (C11672 + C11671 + C11670) * C50885) *
                       C51010 * C51167 +
                   ((C7941 * C1058 + C51194 * C1066 + C7942 * C1057 +
                     C51195 * C1065 + C7943 * C1056 + C7938 * C1064) *
                        C50007 +
                    (C7941 * C1062 + C51194 * C1070 + C7942 * C1061 +
                     C51195 * C1069 + C7943 * C1060 + C7938 * C1068) *
                        C51143 -
                    (C7943 * C1055 + C7938 * C1063 + C7942 * C1056 +
                     C51195 * C1064 + C7941 * C1057 + C51194 * C1065) *
                        C50000 -
                    (C7943 * C1059 + C7938 * C1067 + C7942 * C1060 +
                     C51195 * C1068 + C7941 * C1061 + C51194 * C1069) *
                        C50885) *
                       C51010 * C51086) *
                      C850) *
                 C50925) /
                    (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51194 * C132 + C7942 * C126 + C51195 * C133 +
             C7943 * C127 + C7938 * C134) *
                C603 +
            (C7941 * C136 + C51194 * C146 + C7942 * C137 + C51195 * C147 +
             C7943 * C138 + C7938 * C148) *
                C50880) *
               C51010 * C51167 +
           ((C11083 + C11084 + C11085) * C603 +
            (C11086 + C11087 + C11088) * C50880) *
               C51010 * C51086) *
              C50951 * C599 -
          (((C8759 + C8760 + C8761) * C50880 + (C8762 + C8763 + C8764) * C603) *
               C51010 * C51086 +
           ((C8132 + C8131 + C8130) * C50880 + (C8129 + C8128 + C8127) * C603) *
               C51010 * C51167) *
              C50951 * C600 +
          (((C8469 + C8468 + C8467) * C603 + (C8466 + C8465 + C8464) * C50880) *
               C51010 * C51167 +
           ((C8765 + C8766 + C8767) * C603 + (C8768 + C8769 + C8770) * C50880) *
               C51010 * C51086) *
              C50951 * C601 -
          (((C7943 * C4009 + C7938 * C4010 + C7942 * C3014 + C51195 * C3020 +
             C7941 * C3013 + C51194 * C3019) *
                C50880 +
            (C7943 * C4007 + C7938 * C4008 + C7942 * C3008 + C51195 * C3012 +
             C7941 * C3007 + C51194 * C3011) *
                C603) *
               C51010 * C51086 +
           ((C8588 + C8587 + C8586) * C50880 + (C8585 + C8584 + C8583) * C603) *
               C51010 * C51167) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51194 * C132 + C7942 * C126 + C51195 * C133 +
             C7943 * C127 + C7938 * C134) *
                C256 +
            (C7941 * C136 + C51194 * C146 + C7942 * C137 + C51195 * C147 +
             C7943 * C138 + C7938 * C148) *
                C251 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51195 * C134 +
             C7941 * C126 + C51194 * C133) *
                C257 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51195 * C148 +
             C7941 * C137 + C51194 * C147) *
                C252 +
            (C7941 * C127 + C51194 * C134 + C7942 * C128 + C51195 * C135 +
             C7943 * C129 + C7938 * C140) *
                C258 +
            (C7941 * C138 + C51194 * C148 + C7942 * C139 + C51195 * C149 +
             C7943 * C141 + C7938 * C150) *
                C253) *
               C51010 * C51167 +
           ((C7941 * C387 + C51194 * C397 + C7942 * C383 + C51195 * C389 +
             C7943 * C384 + C7938 * C390) *
                C256 +
            (C7941 * C396 + C51194 * C404 + C7942 * C395 + C51195 * C403 +
             C7943 * C394 + C7938 * C402) *
                C251 -
            (C7943 * C385 + C7938 * C391 + C7942 * C384 + C51195 * C390 +
             C7941 * C383 + C51194 * C389) *
                C257 -
            (C7943 * C393 + C7938 * C401 + C7942 * C394 + C51195 * C402 +
             C7941 * C395 + C51194 * C403) *
                C252 +
            (C7941 * C384 + C51194 * C390 + C7942 * C385 + C51195 * C391 +
             C7943 * C386 + C7938 * C392) *
                C258 +
            (C7941 * C394 + C51194 * C402 + C7942 * C393 + C51195 * C401 +
             C7943 * C398 + C7938 * C405) *
                C253) *
               C51010 * C51086) *
              C50951 * C51151 +
          (((C8135 + C8134 + C8133) * C257 -
            ((C8132 + C8131 + C8130) * C251 + (C8129 + C8128 + C8127) * C256) +
            (C8138 + C8137 + C8136) * C252 - (C8141 + C8140 + C8139) * C258 -
            (C8144 + C8143 + C8142) * C253) *
               C51010 * C51167 +
           ((C9677 + C9678 + C9679) * C257 -
            ((C8759 + C8760 + C8761) * C251 + (C8762 + C8763 + C8764) * C256) +
            (C9680 + C9681 + C9682) * C252 -
            (C7943 * C1412 + C7938 * C1413 + C7942 * C721 + C51195 * C729 +
             C7941 * C720 + C51194 * C728) *
                C258 -
            (C7943 * C1414 + C7938 * C1415 + C7942 * C733 + C51195 * C745 +
             C7941 * C732 + C51194 * C744) *
                C253) *
               C51010 * C51086) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C7941 * C125 + C51194 * C132 + C7942 * C126 + C51195 * C133 +
              C7943 * C127 + C7938 * C134) *
                 C603 +
             (C7941 * C136 + C51194 * C146 + C7942 * C137 + C51195 * C147 +
              C7943 * C138 + C7938 * C148) *
                 C50880) *
                C51010 * C51167 +
            ((C11083 + C11084 + C11085) * C603 +
             (C11086 + C11087 + C11088) * C50880) *
                C51010 * C51086) *
               C848 -
           (((C11664 + C11665 + C11666) * C50880 +
             (C11667 + C11668 + C11669) * C603) *
                C51010 * C51086 +
            ((C11088 + C11087 + C11086) * C50880 +
             (C11085 + C11084 + C11083) * C603) *
                C51010 * C51167) *
               C849 +
           (((C11669 + C11668 + C11667) * C603 +
             (C11666 + C11665 + C11664) * C50880) *
                C51010 * C51167 +
            ((C7941 * C1058 + C51194 * C1066 + C7942 * C1057 + C51195 * C1065 +
              C7943 * C1056 + C7938 * C1064) *
                 C603 +
             (C7941 * C1062 + C51194 * C1070 + C7942 * C1061 + C51195 * C1069 +
              C7943 * C1060 + C7938 * C1068) *
                 C50880) *
                C51010 * C51086) *
               C850) *
              C51151 +
          ((((C8764 + C8763 + C8762) * C603 +
             (C8761 + C8760 + C8759) * C50880) *
                C51010 * C51167 +
            ((C9075 + C9076 + C9077) * C603 +
             (C9078 + C9079 + C9080) * C50880) *
                C51010 * C51086) *
               C849 -
           (((C8759 + C8760 + C8761) * C50880 +
             (C8762 + C8763 + C8764) * C603) *
                C51010 * C51086 +
            ((C8132 + C8131 + C8130) * C50880 +
             (C8129 + C8128 + C8127) * C603) *
                C51010 * C51167) *
               C848 -
           (((C7943 * C6844 + C7938 * C6845 + C7942 * C3506 + C51195 * C3512 +
              C7941 * C3507 + C51194 * C3513) *
                 C50880 +
             (C7943 * C6842 + C7938 * C6843 + C7942 * C3500 + C51195 * C3508 +
              C7941 * C3501 + C51194 * C3509) *
                 C603) *
                C51010 * C51086 +
            ((C9080 + C9079 + C9078) * C50880 +
             (C9077 + C9076 + C9075) * C603) *
                C51010 * C51167) *
               C850) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C7941 * C125 + C51194 * C132 + C7942 * C126 +
                      C51195 * C133 + C7943 * C127 + C7938 * C134) *
                         C603 +
                     (C7941 * C136 + C51194 * C146 + C7942 * C137 +
                      C51195 * C147 + C7943 * C138 + C7938 * C148) *
                         C50880) *
                        C51010 * C51167 +
                    ((C11083 + C11084 + C11085) * C603 +
                     (C11086 + C11087 + C11088) * C50880) *
                        C51010 * C51086) *
                       C51152 -
                   (((C7943 * C862 + C7938 * C868 + C7942 * C861 +
                      C51195 * C867 + C7941 * C860 + C51194 * C866) *
                         C50880 +
                     (C7943 * C853 + C7938 * C858 + C7942 * C852 +
                      C51195 * C857 + C7941 * C851 + C51194 * C856) *
                         C603) *
                        C51010 * C51086 +
                    ((C11088 + C11087 + C11086) * C50880 +
                     (C11085 + C11084 + C11083) * C603) *
                        C51010 * C51167) *
                       C50963) *
                      C507 +
                  ((((C8764 + C8763 + C8762) * C603 +
                     (C8761 + C8760 + C8759) * C50880) *
                        C51010 * C51167 +
                    ((C9075 + C9076 + C9077) * C603 +
                     (C9078 + C9079 + C9080) * C50880) *
                        C51010 * C51086) *
                       C50963 -
                   (((C8759 + C8760 + C8761) * C50880 +
                     (C8762 + C8763 + C8764) * C603) *
                        C51010 * C51086 +
                    ((C8132 + C8131 + C8130) * C50880 +
                     (C8129 + C8128 + C8127) * C603) *
                        C51010 * C51167) *
                       C51152) *
                      C508 +
                  ((((C8469 + C8468 + C8467) * C603 +
                     (C8466 + C8465 + C8464) * C50880) *
                        C51010 * C51167 +
                    ((C8765 + C8766 + C8767) * C603 +
                     (C8768 + C8769 + C8770) * C50880) *
                        C51010 * C51086) *
                       C51152 -
                   (((C7943 * C3218 + C7938 * C3221 + C7942 * C3216 +
                      C51195 * C3220 + C7941 * C3215 + C51194 * C3219) *
                         C50880 +
                     (C7943 * C3212 + C7938 * C3217 + C7942 * C3211 +
                      C51195 * C3214 + C7941 * C3210 + C51194 * C3213) *
                         C603) *
                        C51010 * C51086 +
                    ((C8770 + C8769 + C8768) * C50880 +
                     (C8767 + C8766 + C8765) * C603) *
                        C51010 * C51167) *
                       C50963) *
                      C509)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C7941 * C125 + C51194 * C132 + C7942 * C126 +
                     C51195 * C133 + C7943 * C127 + C7938 * C134) *
                        C256 +
                    (C7941 * C136 + C51194 * C146 + C7942 * C137 +
                     C51195 * C147 + C7943 * C138 + C7938 * C148) *
                        C251 -
                    (C7943 * C128 + C7938 * C135 + C7942 * C127 +
                     C51195 * C134 + C7941 * C126 + C51194 * C133) *
                        C257 -
                    (C7943 * C139 + C7938 * C149 + C7942 * C138 +
                     C51195 * C148 + C7941 * C137 + C51194 * C147) *
                        C252 +
                    (C7941 * C127 + C51194 * C134 + C7942 * C128 +
                     C51195 * C135 + C7943 * C129 + C7938 * C140) *
                        C258 +
                    (C7941 * C138 + C51194 * C148 + C7942 * C139 +
                     C51195 * C149 + C7943 * C141 + C7938 * C150) *
                        C253) *
                       C51010 * C51167 +
                   ((C11083 + C11084 + C11085) * C256 +
                    (C11086 + C11087 + C11088) * C251 -
                    (C11089 + C11090 + C11091) * C257 -
                    (C11092 + C11093 + C11094) * C252 +
                    (C11095 + C11096 + C11097) * C258 +
                    (C11098 + C11099 + C11100) * C253) *
                       C51010 * C51086) *
                      C51152 +
                  (((C11091 + C11090 + C11089) * C257 -
                    ((C11088 + C11087 + C11086) * C251 +
                     (C11085 + C11084 + C11083) * C256) +
                    (C11094 + C11093 + C11092) * C252 -
                    (C11097 + C11096 + C11095) * C258 -
                    (C11100 + C11099 + C11098) * C253) *
                       C51010 * C51167 +
                   ((C7941 * C852 + C51194 * C857 + C7942 * C853 +
                     C51195 * C858 + C7943 * C854 + C7938 * C859) *
                        C257 -
                    ((C7943 * C862 + C7938 * C868 + C7942 * C861 +
                      C51195 * C867 + C7941 * C860 + C51194 * C866) *
                         C251 +
                     (C7943 * C853 + C7938 * C858 + C7942 * C852 +
                      C51195 * C857 + C7941 * C851 + C51194 * C856) *
                         C256) +
                    (C7941 * C861 + C51194 * C867 + C7942 * C862 +
                     C51195 * C868 + C7943 * C863 + C7938 * C869) *
                        C252 -
                    (C7943 * C855 + C7938 * C864 + C7942 * C854 +
                     C51195 * C859 + C7941 * C853 + C51194 * C858) *
                        C258 -
                    (C7943 * C865 + C7938 * C870 + C7942 * C863 +
                     C51195 * C869 + C7941 * C862 + C51194 * C868) *
                        C253) *
                       C51010 * C51086) *
                      C50963) *
                 C50925) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C7941 * C125 + C51194 * C132 + C7942 * C126 +
                     C51195 * C133 + C7943 * C127 + C7938 * C134) *
                        C603 +
                    (C7941 * C136 + C51194 * C146 + C7942 * C137 +
                     C51195 * C147 + C7943 * C138 + C7938 * C148) *
                        C50880) *
                       C51010 * C51167 +
                   ((C11083 + C11084 + C11085) * C603 +
                    (C11086 + C11087 + C11088) * C50880) *
                       C51010 * C51086) *
                      C1051 -
                  (((C11664 + C11665 + C11666) * C50880 +
                    (C11667 + C11668 + C11669) * C603) *
                       C51010 * C51086 +
                   ((C11088 + C11087 + C11086) * C50880 +
                    (C11085 + C11084 + C11083) * C603) *
                       C51010 * C51167) *
                      C1052 +
                  (((C11669 + C11668 + C11667) * C603 +
                    (C11666 + C11665 + C11664) * C50880) *
                       C51010 * C51167 +
                   ((C11929 + C11930 + C11931) * C603 +
                    (C11932 + C11933 + C11934) * C50880) *
                       C51010 * C51086) *
                      C1053 -
                  (((C7943 * C6016 + C7938 * C6019 + C7942 * C6014 +
                     C51195 * C6018 + C7941 * C6013 + C51194 * C6017) *
                        C50880 +
                    (C7943 * C6010 + C7938 * C6015 + C7942 * C6009 +
                     C51195 * C6012 + C7941 * C6008 + C51194 * C6011) *
                        C603) *
                       C51010 * C51086 +
                   ((C11934 + C11933 + C11932) * C50880 +
                    (C11931 + C11930 + C11929) * C603) *
                       C51010 * C51167) *
                      C1054) *
                 C50925) /
                    (p * q * std::sqrt(p + q));
    d2ee[54] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C7941 * C125 + C51194 * C132 + C7942 * C126 +
                     C51195 * C133 + C7943 * C127 + C7938 * C134) *
                        C1174 +
                    (C7941 * C136 + C51194 * C146 + C7942 * C137 +
                     C51195 * C147 + C7943 * C138 + C7938 * C148) *
                        C51196 -
                    (C7943 * C128 + C7938 * C135 + C7942 * C127 +
                     C51195 * C134 + C7941 * C126 + C51194 * C133) *
                        C1175 -
                    (C7943 * C139 + C7938 * C149 + C7942 * C138 +
                     C51195 * C148 + C7941 * C137 + C51194 * C147) *
                        C51181 +
                    (C7941 * C127 + C51194 * C134 + C7942 * C128 +
                     C51195 * C135 + C7943 * C129 + C7938 * C140) *
                        C1176 +
                    (C7941 * C138 + C51194 * C148 + C7942 * C139 +
                     C51195 * C149 + C7943 * C141 + C7938 * C150) *
                        C1171) *
                       C51010 * C51167 +
                   ((C11083 + C11084 + C11085) * C1174 +
                    (C11086 + C11087 + C11088) * C51196 -
                    (C11089 + C11090 + C11091) * C1175 -
                    (C11092 + C11093 + C11094) * C51181 +
                    (C11095 + C11096 + C11097) * C1176 +
                    (C11098 + C11099 + C11100) * C1171) *
                       C51010 * C51086) *
                      C1514 +
                  (((C11091 + C11090 + C11089) * C1175 -
                    ((C11088 + C11087 + C11086) * C51196 +
                     (C11085 + C11084 + C11083) * C1174) +
                    (C11094 + C11093 + C11092) * C51181 -
                    (C11097 + C11096 + C11095) * C1176 -
                    (C11100 + C11099 + C11098) * C1171) *
                       C51010 * C51167 +
                   ((C11661 + C11662 + C11663) * C1175 -
                    ((C11664 + C11665 + C11666) * C51196 +
                     (C11667 + C11668 + C11669) * C1174) +
                    (C11670 + C11671 + C11672) * C51181 -
                    (C7943 * C855 + C7938 * C864 + C7942 * C854 +
                     C51195 * C859 + C7941 * C853 + C51194 * C858) *
                        C1176 -
                    (C7943 * C865 + C7938 * C870 + C7942 * C863 +
                     C51195 * C869 + C7941 * C862 + C51194 * C868) *
                        C1171) *
                       C51010 * C51086) *
                      C50963) *
                 C50925) /
                (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7941 * C125 + C51194 * C132 + C7942 * C126 + C51195 * C133 +
              C7943 * C127 + C7938 * C134) *
                 C1280 +
             (C7941 * C136 + C51194 * C146 + C7942 * C137 + C51195 * C147 +
              C7943 * C138 + C7938 * C148) *
                 C1275 -
             (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51195 * C134 +
              C7941 * C126 + C51194 * C133) *
                 C1281 -
             (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51195 * C148 +
              C7941 * C137 + C51194 * C147) *
                 C50885) *
                C51010 * C51167 +
            ((C11083 + C11084 + C11085) * C1280 +
             (C11086 + C11087 + C11088) * C1275 -
             (C11089 + C11090 + C11091) * C1281 -
             (C11092 + C11093 + C11094) * C50885) *
                C51010 * C51086) *
               C1514 +
           (((C11091 + C11090 + C11089) * C1281 -
             ((C11088 + C11087 + C11086) * C1275 +
              (C11085 + C11084 + C11083) * C1280) +
             (C11094 + C11093 + C11092) * C50885) *
                C51010 * C51167 +
            ((C11661 + C11662 + C11663) * C1281 -
             ((C11664 + C11665 + C11666) * C1275 +
              (C11667 + C11668 + C11669) * C1280) +
             (C11670 + C11671 + C11672) * C50885) *
                C51010 * C51086) *
               C50963) *
              C51151 +
          ((((C8135 + C8134 + C8133) * C1281 -
             ((C8132 + C8131 + C8130) * C1275 +
              (C8129 + C8128 + C8127) * C1280) +
             (C8138 + C8137 + C8136) * C50885) *
                C51010 * C51167 +
            ((C9677 + C9678 + C9679) * C1281 -
             ((C8759 + C8760 + C8761) * C1275 +
              (C8762 + C8763 + C8764) * C1280) +
             (C9680 + C9681 + C9682) * C50885) *
                C51010 * C51086) *
               C1514 +
           (((C8764 + C8763 + C8762) * C1280 + (C8761 + C8760 + C8759) * C1275 -
             (C9679 + C9678 + C9677) * C1281 -
             (C9682 + C9681 + C9680) * C50885) *
                C51010 * C51167 +
            ((C9075 + C9076 + C9077) * C1280 + (C9078 + C9079 + C9080) * C1275 -
             (C7943 * C969 + C7938 * C977 + C7942 * C970 + C51195 * C978 +
              C7941 * C971 + C51194 * C979) *
                 C1281 -
             (C7943 * C973 + C7938 * C981 + C7942 * C974 + C51195 * C982 +
              C7941 * C975 + C51194 * C983) *
                 C50885) *
                C51010 * C51086) *
               C50963) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C7941 * C125 + C51194 * C132 + C7942 * C126 +
                     C51195 * C133 + C7943 * C127 + C7938 * C134) *
                        C1280 +
                    (C7941 * C136 + C51194 * C146 + C7942 * C137 +
                     C51195 * C147 + C7943 * C138 + C7938 * C148) *
                        C1275 -
                    (C7943 * C128 + C7938 * C135 + C7942 * C127 +
                     C51195 * C134 + C7941 * C126 + C51194 * C133) *
                        C1281 -
                    (C7943 * C139 + C7938 * C149 + C7942 * C138 +
                     C51195 * C148 + C7941 * C137 + C51194 * C147) *
                        C50885) *
                       C51010 * C51167 +
                   ((C11083 + C11084 + C11085) * C1280 +
                    (C11086 + C11087 + C11088) * C1275 -
                    (C11089 + C11090 + C11091) * C1281 -
                    (C11092 + C11093 + C11094) * C50885) *
                       C51010 * C51086) *
                      C51198 +
                  (((C11091 + C11090 + C11089) * C1281 -
                    ((C11088 + C11087 + C11086) * C1275 +
                     (C11085 + C11084 + C11083) * C1280) +
                    (C11094 + C11093 + C11092) * C50885) *
                       C51010 * C51167 +
                   ((C11661 + C11662 + C11663) * C1281 -
                    ((C11664 + C11665 + C11666) * C1275 +
                     (C11667 + C11668 + C11669) * C1280) +
                    (C11670 + C11671 + C11672) * C50885) *
                       C51010 * C51086) *
                      C51187 +
                  (((C11669 + C11668 + C11667) * C1280 +
                    (C11666 + C11665 + C11664) * C1275 -
                    (C11663 + C11662 + C11661) * C1281 -
                    (C11672 + C11671 + C11670) * C50885) *
                       C51010 * C51167 +
                   ((C11929 + C11930 + C11931) * C1280 +
                    (C11932 + C11933 + C11934) * C1275 -
                    (C7943 * C1055 + C7938 * C1063 + C7942 * C1056 +
                     C51195 * C1064 + C7941 * C1057 + C51194 * C1065) *
                        C1281 -
                    (C7943 * C1059 + C7938 * C1067 + C7942 * C1060 +
                     C51195 * C1068 + C7941 * C1061 + C51194 * C1069) *
                        C50885) *
                       C51010 * C51086) *
                      C1746) *
                 C50925) /
                (p * q * std::sqrt(p + q));
    d2ee[57] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C7941 * C125 + C51194 * C132 + C7942 * C126 +
                    C51195 * C133 + C7943 * C127 + C7938 * C134) *
                       C121 +
                   (C7941 * C136 + C51194 * C146 + C7942 * C137 +
                    C51195 * C147 + C7943 * C138 + C7938 * C148) *
                       C109 -
                   (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51195 * C134 +
                    C7941 * C126 + C51194 * C133) *
                       C122 -
                   (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51195 * C148 +
                    C7941 * C137 + C51194 * C147) *
                       C110 +
                   (C7941 * C127 + C51194 * C134 + C7942 * C128 +
                    C51195 * C135 + C7943 * C129 + C7938 * C140) *
                       C123 +
                   (C7941 * C138 + C51194 * C148 + C7942 * C139 +
                    C51195 * C149 + C7943 * C141 + C7938 * C150) *
                       C111 -
                   (C7943 * C130 + C7938 * C142 + C7942 * C129 + C51195 * C140 +
                    C7941 * C128 + C51194 * C135) *
                       C124 -
                   (C7943 * C143 + C7938 * C151 + C7942 * C141 + C51195 * C150 +
                    C7941 * C139 + C51194 * C149) *
                       C112) *
                      C51010 * C51167 +
                  ((C7941 * C387 + C51194 * C397 + C7942 * C383 +
                    C51195 * C389 + C7943 * C384 + C7938 * C390) *
                       C121 +
                   (C7941 * C396 + C51194 * C404 + C7942 * C395 +
                    C51195 * C403 + C7943 * C394 + C7938 * C402) *
                       C109 -
                   (C7943 * C385 + C7938 * C391 + C7942 * C384 + C51195 * C390 +
                    C7941 * C383 + C51194 * C389) *
                       C122 -
                   (C7943 * C393 + C7938 * C401 + C7942 * C394 + C51195 * C402 +
                    C7941 * C395 + C51194 * C403) *
                       C110 +
                   (C7941 * C384 + C51194 * C390 + C7942 * C385 +
                    C51195 * C391 + C7943 * C386 + C7938 * C392) *
                       C123 +
                   (C7941 * C394 + C51194 * C402 + C7942 * C393 +
                    C51195 * C401 + C7943 * C398 + C7938 * C405) *
                       C111 -
                   (C7943 * C388 + C7938 * C399 + C7942 * C386 + C51195 * C392 +
                    C7941 * C385 + C51194 * C391) *
                       C124 -
                   (C7943 * C400 + C7938 * C406 + C7942 * C398 + C51195 * C405 +
                    C7941 * C393 + C51194 * C401) *
                       C112) *
                      C51010 * C51086) *
                 C50951 * C50925) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C7941 * C125 + C51194 * C132 + C7942 * C126 +
                     C51195 * C133 + C7943 * C127 + C7938 * C134) *
                        C50007 +
                    (C7941 * C136 + C51194 * C146 + C7942 * C137 +
                     C51195 * C147 + C7943 * C138 + C7938 * C148) *
                        C51143 -
                    (C7943 * C128 + C7938 * C135 + C7942 * C127 +
                     C51195 * C134 + C7941 * C126 + C51194 * C133) *
                        C50000 -
                    (C7943 * C139 + C7938 * C149 + C7942 * C138 +
                     C51195 * C148 + C7941 * C137 + C51194 * C147) *
                        C50885) *
                       C51010 * C51167 +
                   ((C11083 + C11084 + C11085) * C50007 +
                    (C11086 + C11087 + C11088) * C51143 -
                    (C11089 + C11090 + C11091) * C50000 -
                    (C11092 + C11093 + C11094) * C50885) *
                       C51010 * C51086) *
                      C50951 * C507 +
                  (((C8135 + C8134 + C8133) * C50000 -
                    ((C8132 + C8131 + C8130) * C51143 +
                     (C8129 + C8128 + C8127) * C50007) +
                    (C8138 + C8137 + C8136) * C50885) *
                       C51010 * C51167 +
                   ((C9677 + C9678 + C9679) * C50000 -
                    ((C8759 + C8760 + C8761) * C51143 +
                     (C8762 + C8763 + C8764) * C50007) +
                    (C9680 + C9681 + C9682) * C50885) *
                       C51010 * C51086) *
                      C50951 * C508 +
                  (((C8469 + C8468 + C8467) * C50007 +
                    (C8466 + C8465 + C8464) * C51143 -
                    (C8463 + C8462 + C8461) * C50000 -
                    (C8472 + C8471 + C8470) * C50885) *
                       C51010 * C51167 +
                   ((C8765 + C8766 + C8767) * C50007 +
                    (C8768 + C8769 + C8770) * C51143 -
                    (C7943 * C722 + C7938 * C738 + C7942 * C723 +
                     C51195 * C739 + C7941 * C724 + C51194 * C740) *
                        C50000 -
                    (C7943 * C734 + C7938 * C746 + C7942 * C735 +
                     C51195 * C747 + C7941 * C736 + C51194 * C748) *
                        C50885) *
                       C51010 * C51086) *
                      C50951 * C509)) /
                    (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51194 * C132 + C7942 * C126 + C51195 * C133 +
             C7943 * C127 + C7938 * C134) *
                C256 +
            (C7941 * C136 + C51194 * C146 + C7942 * C137 + C51195 * C147 +
             C7943 * C138 + C7938 * C148) *
                C251 -
            (C7943 * C128 + C7938 * C135 + C7942 * C127 + C51195 * C134 +
             C7941 * C126 + C51194 * C133) *
                C257 -
            (C7943 * C139 + C7938 * C149 + C7942 * C138 + C51195 * C148 +
             C7941 * C137 + C51194 * C147) *
                C252 +
            (C7941 * C127 + C51194 * C134 + C7942 * C128 + C51195 * C135 +
             C7943 * C129 + C7938 * C140) *
                C258 +
            (C7941 * C138 + C51194 * C148 + C7942 * C139 + C51195 * C149 +
             C7943 * C141 + C7938 * C150) *
                C253) *
               C51010 * C51167 +
           ((C7941 * C387 + C51194 * C397 + C7942 * C383 + C51195 * C389 +
             C7943 * C384 + C7938 * C390) *
                C256 +
            (C7941 * C396 + C51194 * C404 + C7942 * C395 + C51195 * C403 +
             C7943 * C394 + C7938 * C402) *
                C251 -
            (C7943 * C385 + C7938 * C391 + C7942 * C384 + C51195 * C390 +
             C7941 * C383 + C51194 * C389) *
                C257 -
            (C7943 * C393 + C7938 * C401 + C7942 * C394 + C51195 * C402 +
             C7941 * C395 + C51194 * C403) *
                C252 +
            (C7941 * C384 + C51194 * C390 + C7942 * C385 + C51195 * C391 +
             C7943 * C386 + C7938 * C392) *
                C258 +
            (C7941 * C394 + C51194 * C402 + C7942 * C393 + C51195 * C401 +
             C7943 * C398 + C7938 * C405) *
                C253) *
               C51010 * C51086) *
              C50951 * C51151 +
          (((C8135 + C8134 + C8133) * C257 -
            ((C8132 + C8131 + C8130) * C251 + (C8129 + C8128 + C8127) * C256) +
            (C8138 + C8137 + C8136) * C252 - (C8141 + C8140 + C8139) * C258 -
            (C8144 + C8143 + C8142) * C253) *
               C51010 * C51167 +
           ((C9677 + C9678 + C9679) * C257 -
            ((C8759 + C8760 + C8761) * C251 + (C8762 + C8763 + C8764) * C256) +
            (C9680 + C9681 + C9682) * C252 -
            (C7943 * C1412 + C7938 * C1413 + C7942 * C721 + C51195 * C729 +
             C7941 * C720 + C51194 * C728) *
                C258 -
            (C7943 * C1414 + C7938 * C1415 + C7942 * C733 + C51195 * C745 +
             C7941 * C732 + C51194 * C744) *
                C253) *
               C51010 * C51086) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7941 * C125 + C51194 * C132 + C7942 * C126 + C51195 * C133 +
             C7943 * C127 + C7938 * C134) *
                C603 +
            (C7941 * C136 + C51194 * C146 + C7942 * C137 + C51195 * C147 +
             C7943 * C138 + C7938 * C148) *
                C50880) *
               C51010 * C51167 +
           ((C11083 + C11084 + C11085) * C603 +
            (C11086 + C11087 + C11088) * C50880) *
               C51010 * C51086) *
              C50951 * C599 -
          (((C8759 + C8760 + C8761) * C50880 + (C8762 + C8763 + C8764) * C603) *
               C51010 * C51086 +
           ((C8132 + C8131 + C8130) * C50880 + (C8129 + C8128 + C8127) * C603) *
               C51010 * C51167) *
              C50951 * C600 +
          (((C8469 + C8468 + C8467) * C603 + (C8466 + C8465 + C8464) * C50880) *
               C51010 * C51167 +
           ((C8765 + C8766 + C8767) * C603 + (C8768 + C8769 + C8770) * C50880) *
               C51010 * C51086) *
              C50951 * C601 -
          (((C7943 * C4009 + C7938 * C4010 + C7942 * C3014 + C51195 * C3020 +
             C7941 * C3013 + C51194 * C3019) *
                C50880 +
            (C7943 * C4007 + C7938 * C4008 + C7942 * C3008 + C51195 * C3012 +
             C7941 * C3007 + C51194 * C3011) *
                C603) *
               C51010 * C51086 +
           ((C8588 + C8587 + C8586) * C50880 + (C8585 + C8584 + C8583) * C603) *
               C51010 * C51167) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C7941 * C125 + C51194 * C132 + C7942 * C126 +
                     C51195 * C133 + C7943 * C127 + C7938 * C134) *
                        C256 +
                    (C7941 * C136 + C51194 * C146 + C7942 * C137 +
                     C51195 * C147 + C7943 * C138 + C7938 * C148) *
                        C251 -
                    (C7943 * C128 + C7938 * C135 + C7942 * C127 +
                     C51195 * C134 + C7941 * C126 + C51194 * C133) *
                        C257 -
                    (C7943 * C139 + C7938 * C149 + C7942 * C138 +
                     C51195 * C148 + C7941 * C137 + C51194 * C147) *
                        C252 +
                    (C7941 * C127 + C51194 * C134 + C7942 * C128 +
                     C51195 * C135 + C7943 * C129 + C7938 * C140) *
                        C258 +
                    (C7941 * C138 + C51194 * C148 + C7942 * C139 +
                     C51195 * C149 + C7943 * C141 + C7938 * C150) *
                        C253) *
                       C51010 * C51167 +
                   ((C11083 + C11084 + C11085) * C256 +
                    (C11086 + C11087 + C11088) * C251 -
                    (C11089 + C11090 + C11091) * C257 -
                    (C11092 + C11093 + C11094) * C252 +
                    (C11095 + C11096 + C11097) * C258 +
                    (C11098 + C11099 + C11100) * C253) *
                       C51010 * C51086) *
                      C51152 +
                  (((C11091 + C11090 + C11089) * C257 -
                    ((C11088 + C11087 + C11086) * C251 +
                     (C11085 + C11084 + C11083) * C256) +
                    (C11094 + C11093 + C11092) * C252 -
                    (C11097 + C11096 + C11095) * C258 -
                    (C11100 + C11099 + C11098) * C253) *
                       C51010 * C51167 +
                   ((C7941 * C852 + C51194 * C857 + C7942 * C853 +
                     C51195 * C858 + C7943 * C854 + C7938 * C859) *
                        C257 -
                    ((C7943 * C862 + C7938 * C868 + C7942 * C861 +
                      C51195 * C867 + C7941 * C860 + C51194 * C866) *
                         C251 +
                     (C7943 * C853 + C7938 * C858 + C7942 * C852 +
                      C51195 * C857 + C7941 * C851 + C51194 * C856) *
                         C256) +
                    (C7941 * C861 + C51194 * C867 + C7942 * C862 +
                     C51195 * C868 + C7943 * C863 + C7938 * C869) *
                        C252 -
                    (C7943 * C855 + C7938 * C864 + C7942 * C854 +
                     C51195 * C859 + C7941 * C853 + C51194 * C858) *
                        C258 -
                    (C7943 * C865 + C7938 * C870 + C7942 * C863 +
                     C51195 * C869 + C7941 * C862 + C51194 * C868) *
                        C253) *
                       C51010 * C51086) *
                      C50963) *
                 C50925) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C7941 * C125 + C51194 * C132 + C7942 * C126 +
                      C51195 * C133 + C7943 * C127 + C7938 * C134) *
                         C603 +
                     (C7941 * C136 + C51194 * C146 + C7942 * C137 +
                      C51195 * C147 + C7943 * C138 + C7938 * C148) *
                         C50880) *
                        C51010 * C51167 +
                    ((C11083 + C11084 + C11085) * C603 +
                     (C11086 + C11087 + C11088) * C50880) *
                        C51010 * C51086) *
                       C51152 -
                   (((C7943 * C862 + C7938 * C868 + C7942 * C861 +
                      C51195 * C867 + C7941 * C860 + C51194 * C866) *
                         C50880 +
                     (C7943 * C853 + C7938 * C858 + C7942 * C852 +
                      C51195 * C857 + C7941 * C851 + C51194 * C856) *
                         C603) *
                        C51010 * C51086 +
                    ((C11088 + C11087 + C11086) * C50880 +
                     (C11085 + C11084 + C11083) * C603) *
                        C51010 * C51167) *
                       C50963) *
                      C507 +
                  ((((C8764 + C8763 + C8762) * C603 +
                     (C8761 + C8760 + C8759) * C50880) *
                        C51010 * C51167 +
                    ((C9075 + C9076 + C9077) * C603 +
                     (C9078 + C9079 + C9080) * C50880) *
                        C51010 * C51086) *
                       C50963 -
                   (((C8759 + C8760 + C8761) * C50880 +
                     (C8762 + C8763 + C8764) * C603) *
                        C51010 * C51086 +
                    ((C8132 + C8131 + C8130) * C50880 +
                     (C8129 + C8128 + C8127) * C603) *
                        C51010 * C51167) *
                       C51152) *
                      C508 +
                  ((((C8469 + C8468 + C8467) * C603 +
                     (C8466 + C8465 + C8464) * C50880) *
                        C51010 * C51167 +
                    ((C8765 + C8766 + C8767) * C603 +
                     (C8768 + C8769 + C8770) * C50880) *
                        C51010 * C51086) *
                       C51152 -
                   (((C7943 * C3218 + C7938 * C3221 + C7942 * C3216 +
                      C51195 * C3220 + C7941 * C3215 + C51194 * C3219) *
                         C50880 +
                     (C7943 * C3212 + C7938 * C3217 + C7942 * C3211 +
                      C51195 * C3214 + C7941 * C3210 + C51194 * C3213) *
                         C603) *
                        C51010 * C51086 +
                    ((C8770 + C8769 + C8768) * C50880 +
                     (C8767 + C8766 + C8765) * C603) *
                        C51010 * C51167) *
                       C50963) *
                      C509)) /
                    (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C1174 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C51196 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C1175 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C51181 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C1176 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C1171) *
              C51010 * C51022 * C50951 * C1172 +
          ((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
            C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
               C1175 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C51196 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C1174) +
           (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
            C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
               C51181 -
           (C120 * C264 + C108 * C275 + C119 * C262 + C107 * C268 +
            C118 * C261 + C106 * C267 + C117 * C260 + C105 * C266) *
               C1176 -
           (C120 * C276 + C108 * C282 + C119 * C274 + C107 * C281 +
            C118 * C269 + C106 * C277 + C117 * C270 + C105 * C278) *
               C1171) *
              C51010 * C51022 * C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C1174 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C51196 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C1175 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C51181 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) *
                C1176 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) *
                C1171) *
               C2173 +
           ((C2373 + C2374) * C1174 + (C2375 + C2376) * C51196 -
            (C2377 + C2378) * C1175 - (C2379 + C2380) * C51181 +
            (C2381 + C2382) * C1176 + (C2383 + C2384) * C1171) *
               C2174 +
           (C2701 * C1174 + C2702 * C51196 - C2703 * C1175 - C2704 * C51181 +
            (C2393 + C2394) * C1176 + (C2395 + C2396) * C1171) *
               C2175) *
              C51022 * C50951 * C1172 +
          (((C2378 + C2377) * C1175 -
            ((C2376 + C2375) * C51196 + (C2374 + C2373) * C1174) +
            (C2380 + C2379) * C51181 - (C2382 + C2381) * C1176 -
            (C2384 + C2383) * C1171) *
               C2173 +
           ((C2390 + C2389) * C1175 -
            ((C2388 + C2387) * C51196 + (C2386 + C2385) * C1174) +
            (C2392 + C2391) * C51181 - (C2394 + C2393) * C1176 -
            (C2396 + C2395) * C1171) *
               C2174 +
           ((C2725 + C2726) * C1175 - (C2844 * C51196 + C2845 * C1174) +
            (C2731 + C2732) * C51181 -
            (C2177 * C604 + C50867 * C612 + C2176 * C605 + C2171 * C613) *
                C1176 -
            (C2177 * C608 + C50867 * C616 + C2176 * C609 + C2171 * C617) *
                C1171) *
               C2175) *
              C51022 * C50951 * C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C1280 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C1275 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C1281 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50885) *
              C51010 * C51022 * C50951 * C51197 +
          ((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
            C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
               C1281 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C1275 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C1280) +
           (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
            C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
               C50885) *
              C51010 * C51022 * C50951 * C51184 +
          ((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
            C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
               C1280 +
           (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
            C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
               C1275 -
           (C120 * C516 + C108 * C525 + C119 * C515 + C107 * C520 +
            C118 * C514 + C106 * C519 + C117 * C513 + C105 * C518) *
               C1281 -
           (C120 * C526 + C108 * C531 + C119 * C524 + C107 * C530 +
            C118 * C523 + C106 * C529 + C117 * C522 + C105 * C528) *
               C50885) *
              C51010 * C51022 * C50951 * C1279)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C1280 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C1275 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C1281 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C50885) *
               C2173 +
           ((C2373 + C2374) * C1280 + (C2375 + C2376) * C1275 -
            (C2377 + C2378) * C1281 - (C2379 + C2380) * C50885) *
               C2174 +
           C3813 * C2175) *
              C51022 * C50951 * C51197 +
          (((C2378 + C2377) * C1281 -
            ((C2376 + C2375) * C1275 + (C2374 + C2373) * C1280) +
            (C2380 + C2379) * C50885) *
               C2173 +
           ((C2390 + C2389) * C1281 -
            ((C2388 + C2387) * C1275 + (C2386 + C2385) * C1280) +
            (C2392 + C2391) * C50885) *
               C2174 +
           ((C2725 + C2726) * C1281 - (C2844 * C1275 + C2845 * C1280) +
            (C2731 + C2732) * C50885) *
               C2175) *
              C51022 * C50951 * C51184 +
          (C3813 * C2173 +
           ((C2730 + C2729) * C1280 + (C2728 + C2727) * C1275 -
            (C2726 + C2725) * C1281 - (C2732 + C2731) * C50885) *
               C2174 +
           ((C2857 + C2858) * C1280 + (C2859 + C2860) * C1275 -
            (C2177 * C2690 + C50867 * C2695 + C2176 * C2689 + C2171 * C2692) *
                C1281 -
            (C2177 * C2696 + C50867 * C2699 + C2176 * C2694 + C2171 * C2698) *
                C50885) *
               C2175) *
              C51022 * C50951 * C1279)) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C1280 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C1275 -
            (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
             C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                C1281 -
            (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
             C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                C50885) *
               C51010 * C51022 * C51152 +
           ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
             C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
                C1281 -
            ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
              C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                 C1275 +
             (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
              C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                 C1280) +
            (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
             C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
                C50885) *
               C51010 * C51022 * C50963) *
              C1172 +
          (((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
             C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
                C1281 -
            ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
              C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                 C1275 +
             (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
              C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                 C1280) +
            (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
             C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
                C50885) *
               C51010 * C51022 * C51152 +
           ((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C1280 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C1275 -
            (C120 * C1412 + C108 * C1413 + C119 * C721 + C107 * C729 +
             C118 * C720 + C106 * C728 + C117 * C719 + C105 * C727) *
                C1281 -
            (C120 * C1414 + C108 * C1415 + C119 * C733 + C107 * C745 +
             C118 * C732 + C106 * C744 + C117 * C731 + C105 * C743) *
                C50885) *
               C51010 * C51022 * C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C1280 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C1275 -
             (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                 C1281 -
             (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                 C50885) *
                C2173 +
            ((C2373 + C2374) * C1280 + (C2375 + C2376) * C1275 -
             (C2377 + C2378) * C1281 - (C2379 + C2380) * C50885) *
                C2174 +
            C3813 * C2175) *
               C51022 * C51152 +
           (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C50867 * C390) *
                 C1281 -
             ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                  C1275 +
              (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                  C1280) +
             (C2176 * C395 + C2171 * C403 + C2177 * C394 + C50867 * C402) *
                 C50885) *
                C2173 +
            ((C4028 + C4029) * C1281 -
             ((C3052 + C3053) * C1275 + (C3054 + C3055) * C1280) +
             (C4030 + C4031) * C50885) *
                C2174 +
            ((C4032 + C4033) * C1281 - (C3060 * C1275 + C3061 * C1280) +
             (C4034 + C4035) * C50885) *
                C2175) *
               C51022 * C50963) *
              C1172 +
          ((((C2378 + C2377) * C1281 -
             ((C2376 + C2375) * C1275 + (C2374 + C2373) * C1280) +
             (C2380 + C2379) * C50885) *
                C2173 +
            ((C2390 + C2389) * C1281 -
             ((C2388 + C2387) * C1275 + (C2386 + C2385) * C1280) +
             (C2392 + C2391) * C50885) *
                C2174 +
            ((C2725 + C2726) * C1281 - (C2844 * C1275 + C2845 * C1280) +
             (C2731 + C2732) * C50885) *
                C2175) *
               C51022 * C51152 +
           (((C3055 + C3054) * C1280 + (C3053 + C3052) * C1275 -
             (C4029 + C4028) * C1281 - (C4031 + C4030) * C50885) *
                C2173 +
            ((C3051 + C3050) * C1280 + (C3049 + C3048) * C1275 -
             (C4033 + C4032) * C1281 - (C4035 + C4034) * C50885) *
                C2174 +
            ((C3056 + C3057) * C1280 + (C3058 + C3059) * C1275 -
             (C2177 * C4007 + C50867 * C4008 + C2176 * C3008 + C2171 * C3012) *
                 C1281 -
             (C2177 * C4009 + C50867 * C4010 + C2176 * C3014 + C2171 * C3020) *
                 C50885) *
                C2175) *
               C51022 * C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C50007 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C51143 -
            (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
             C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                C50000 -
            (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
             C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                C50885) *
               C51010 * C51022 * C1514 +
           ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
             C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
                C50000 -
            ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
              C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                 C51143 +
             (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
              C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                 C50007) +
            (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
             C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
                C50885) *
               C51010 * C51022 * C50963) *
              C1172 +
          (((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
             C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
                C50000 -
            ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
              C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                 C51143 +
             (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
              C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                 C50007) +
            (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
             C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
                C50885) *
               C51010 * C51022 * C1514 +
           ((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C50007 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C51143 -
            (C120 * C1412 + C108 * C1413 + C119 * C721 + C107 * C729 +
             C118 * C720 + C106 * C728 + C117 * C719 + C105 * C727) *
                C50000 -
            (C120 * C1414 + C108 * C1415 + C119 * C733 + C107 * C745 +
             C118 * C732 + C106 * C744 + C117 * C731 + C105 * C743) *
                C50885) *
               C51010 * C51022 * C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C50007 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C51143 -
             (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                 C50000 -
             (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                 C50885) *
                C2173 +
            ((C2373 + C2374) * C50007 + (C2375 + C2376) * C51143 -
             (C2377 + C2378) * C50000 - (C2379 + C2380) * C50885) *
                C2174 +
            C2735 * C2175) *
               C51022 * C1514 +
           (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C50867 * C390) *
                 C50000 -
             ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                  C51143 +
              (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                  C50007) +
             (C2176 * C395 + C2171 * C403 + C2177 * C394 + C50867 * C402) *
                 C50885) *
                C2173 +
            ((C4028 + C4029) * C50000 -
             ((C3052 + C3053) * C51143 + (C3054 + C3055) * C50007) +
             (C4030 + C4031) * C50885) *
                C2174 +
            ((C4032 + C4033) * C50000 - (C3060 * C51143 + C3061 * C50007) +
             (C4034 + C4035) * C50885) *
                C2175) *
               C51022 * C50963) *
              C1172 +
          ((((C2378 + C2377) * C50000 -
             ((C2376 + C2375) * C51143 + (C2374 + C2373) * C50007) +
             (C2380 + C2379) * C50885) *
                C2173 +
            ((C2390 + C2389) * C50000 -
             ((C2388 + C2387) * C51143 + (C2386 + C2385) * C50007) +
             (C2392 + C2391) * C50885) *
                C2174 +
            ((C2725 + C2726) * C50000 - (C2844 * C51143 + C2845 * C50007) +
             (C2731 + C2732) * C50885) *
                C2175) *
               C51022 * C1514 +
           (((C3055 + C3054) * C50007 + (C3053 + C3052) * C51143 -
             (C4029 + C4028) * C50000 - (C4031 + C4030) * C50885) *
                C2173 +
            ((C3051 + C3050) * C50007 + (C3049 + C3048) * C51143 -
             (C4033 + C4032) * C50000 - (C4035 + C4034) * C50885) *
                C2174 +
            ((C3056 + C3057) * C50007 + (C3058 + C3059) * C51143 -
             (C2177 * C4007 + C50867 * C4008 + C2176 * C3008 + C2171 * C3012) *
                 C50000 -
             (C2177 * C4009 + C50867 * C4010 + C2176 * C3014 + C2171 * C3020) *
                 C50885) *
                C2175) *
               C51022 * C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C603 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50880) *
               C51010 * C51022 * C1514 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C50880 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C603) *
               C51010 * C51022 * C50963) *
              C51197 +
          (((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C603 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C50880) *
               C51010 * C51022 * C50963 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C50880 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C603) *
               C51010 * C51022 * C1514) *
              C51184 +
          (((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
             C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
                C603 +
            (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
             C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
                C50880) *
               C51010 * C51022 * C1514 -
           ((C120 * C734 + C108 * C746 + C119 * C735 + C107 * C747 +
             C118 * C736 + C106 * C748 + C117 * C737 + C105 * C749) *
                C50880 +
            (C120 * C722 + C108 * C738 + C119 * C723 + C107 * C739 +
             C118 * C724 + C106 * C740 + C117 * C725 + C105 * C741) *
                C603) *
               C51010 * C51022 * C50963) *
              C1279)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C50880) *
                C2173 +
            ((C2373 + C2374) * C603 + (C2375 + C2376) * C50880) * C2174 +
            C2854 * C2175) *
               C51022 * C1514 -
           (C3064 * C2175 +
            ((C3052 + C3053) * C50880 + (C3054 + C3055) * C603) * C2174 +
            ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                 C50880 +
             (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                 C603) *
                C2173) *
               C51022 * C50963) *
              C51197 +
          ((((C3055 + C3054) * C603 + (C3053 + C3052) * C50880) * C2173 +
            ((C3051 + C3050) * C603 + (C3049 + C3048) * C50880) * C2174 +
            ((C3056 + C3057) * C603 + (C3058 + C3059) * C50880) * C2175) *
               C51022 * C50963 -
           (C2861 * C2175 +
            ((C2388 + C2387) * C50880 + (C2386 + C2385) * C603) * C2174 +
            ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C2173) *
               C51022 * C1514) *
              C51184 +
          ((C2854 * C2173 +
            ((C2730 + C2729) * C603 + (C2728 + C2727) * C50880) * C2174 +
            ((C2857 + C2858) * C603 + (C2859 + C2860) * C50880) * C2175) *
               C51022 * C1514 -
           (((C2177 * C3015 + C50867 * C3021 + C2176 * C3016 + C2171 * C3022) *
                 C50880 +
             (C2177 * C3009 + C50867 * C3017 + C2176 * C3010 + C2171 * C3018) *
                 C603) *
                C2175 +
            ((C3059 + C3058) * C50880 + (C3057 + C3056) * C603) * C2174 +
            C3064 * C2173) *
               C51022 * C50963) *
              C1279)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C603 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50880) *
               C51010 * C51022 * C51198 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C50880 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C603) *
               C51010 * C51022 * C51187 +
           ((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
             C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
                C603 +
            (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
             C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
                C50880) *
               C51010 * C51022 * C1746) *
              C1172 +
          (((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C603 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C50880) *
               C51010 * C51022 * C51187 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C50880 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C603) *
               C51010 * C51022 * C51198 -
           ((C120 * C973 + C108 * C981 + C119 * C974 + C107 * C982 +
             C118 * C975 + C106 * C983 + C117 * C976 + C105 * C984) *
                C50880 +
            (C120 * C969 + C108 * C977 + C119 * C970 + C107 * C978 +
             C118 * C971 + C106 * C979 + C117 * C972 + C105 * C980) *
                C603) *
               C51010 * C51022 * C1746) *
              C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C50880) *
                C2173 +
            ((C2373 + C2374) * C603 + (C2375 + C2376) * C50880) * C2174 +
            C2854 * C2175) *
               C51022 * C51198 -
           (C3064 * C2175 +
            ((C3052 + C3053) * C50880 + (C3054 + C3055) * C603) * C2174 +
            ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                 C50880 +
             (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                 C603) *
                C2173) *
               C51022 * C51187 +
           (((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50867 * C857) *
                 C603 +
             (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50867 * C867) *
                 C50880) *
                C2173 +
            ((C3393 + C3394) * C603 + (C3395 + C3396) * C50880) * C2174 +
            ((C3397 + C3398) * C603 + (C3399 + C3400) * C50880) * C2175) *
               C51022 * C1746) *
              C1172 +
          ((((C3055 + C3054) * C603 + (C3053 + C3052) * C50880) * C2173 +
            ((C3051 + C3050) * C603 + (C3049 + C3048) * C50880) * C2174 +
            ((C3056 + C3057) * C603 + (C3058 + C3059) * C50880) * C2175) *
               C51022 * C51187 -
           (C2861 * C2175 +
            ((C2388 + C2387) * C50880 + (C2386 + C2385) * C603) * C2174 +
            ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C2173) *
               C51022 * C51198 -
           (((C2177 * C3370 + C50867 * C3374 + C2176 * C3371 + C2171 * C3375) *
                 C50880 +
             (C2177 * C3368 + C50867 * C3372 + C2176 * C3369 + C2171 * C3373) *
                 C603) *
                C2175 +
            ((C3400 + C3399) * C50880 + (C3398 + C3397) * C603) * C2174 +
            ((C3396 + C3395) * C50880 + (C3394 + C3393) * C603) * C2173) *
               C51022 * C1746) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C50007 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C51143 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C50000 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50885) *
              C51010 * C51022 * C50951 * C507 +
          ((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
            C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
               C50000 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C51143 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C50007) +
           (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
            C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
               C50885) *
              C51010 * C51022 * C50951 * C508 +
          ((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
            C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
               C50007 +
           (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
            C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
               C51143 -
           (C120 * C516 + C108 * C525 + C119 * C515 + C107 * C520 +
            C118 * C514 + C106 * C519 + C117 * C513 + C105 * C518) *
               C50000 -
           (C120 * C526 + C108 * C531 + C119 * C524 + C107 * C530 +
            C118 * C523 + C106 * C529 + C117 * C522 + C105 * C528) *
               C50885) *
              C51010 * C51022 * C50951 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 + C119 * C127 +
           C107 * C134 + C120 * C128 + C108 * C135) *
              C121 +
          (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 + C119 * C138 +
           C107 * C148 + C120 * C139 + C108 * C149) *
              C109 -
          (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 + C118 * C127 +
           C106 * C134 + C117 * C126 + C105 * C133) *
              C122 -
          (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 + C118 * C138 +
           C106 * C148 + C117 * C137 + C105 * C147) *
              C110 +
          (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 + C119 * C129 +
           C107 * C140 + C120 * C130 + C108 * C142) *
              C123 +
          (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 + C119 * C141 +
           C107 * C150 + C120 * C143 + C108 * C151) *
              C111 -
          (C120 * C131 + C108 * C144 + C119 * C130 + C107 * C142 + C118 * C129 +
           C106 * C140 + C117 * C128 + C105 * C135) *
              C124 -
          (C120 * C145 + C108 * C152 + C119 * C143 + C107 * C151 + C118 * C141 +
           C106 * C150 + C117 * C139 + C105 * C149) *
              C112) *
         C51010 * C51022 * C50951 * C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C50007 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C51143 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C50000 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50885) *
              C51010 * C51022 * C848 +
          ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
            C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
               C50000 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C51143 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C50007) +
           (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
            C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
               C50885) *
              C51010 * C51022 * C849 +
          ((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
            C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
               C50007 +
           (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
            C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
               C51143 -
           (C120 * C855 + C108 * C864 + C119 * C854 + C107 * C859 +
            C118 * C853 + C106 * C858 + C117 * C852 + C105 * C857) *
               C50000 -
           (C120 * C865 + C108 * C870 + C119 * C863 + C107 * C869 +
            C118 * C862 + C106 * C868 + C117 * C861 + C105 * C867) *
               C50885) *
              C51010 * C51022 * C850) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) * C121 +
           (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) * C109 -
           (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) * C122 -
           (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) * C110 +
           (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) * C123 +
           (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) * C111 -
           (C2177 * C129 + C50867 * C140 + C2176 * C128 + C2171 * C135) * C124 -
           (C2177 * C141 + C50867 * C150 + C2176 * C139 + C2171 * C149) *
               C112) *
              C2173 +
          ((C2176 * C263 + C2171 * C273 + C2177 * C259 + C50867 * C265) * C121 +
           (C2176 * C272 + C2171 * C280 + C2177 * C271 + C50867 * C279) * C109 -
           (C2177 * C260 + C50867 * C266 + C2176 * C259 + C2171 * C265) * C122 -
           (C2177 * C270 + C50867 * C278 + C2176 * C271 + C2171 * C279) * C110 +
           (C2176 * C260 + C2171 * C266 + C2177 * C261 + C50867 * C267) * C123 +
           (C2176 * C270 + C2171 * C278 + C2177 * C269 + C50867 * C277) * C111 -
           (C2177 * C262 + C50867 * C268 + C2176 * C261 + C2171 * C267) * C124 -
           (C2177 * C274 + C50867 * C281 + C2176 * C269 + C2171 * C277) *
               C112) *
              C2174 +
          ((C2176 * C512 + C2171 * C517 + C2177 * C513 + C50867 * C518) * C121 +
           (C2176 * C521 + C2171 * C527 + C2177 * C522 + C50867 * C528) * C109 -
           (C2177 * C514 + C50867 * C519 + C2176 * C513 + C2171 * C518) * C122 -
           (C2177 * C523 + C50867 * C529 + C2176 * C522 + C2171 * C528) * C110 +
           (C2176 * C514 + C2171 * C519 + C2177 * C515 + C50867 * C520) * C123 +
           (C2176 * C523 + C2171 * C529 + C2177 * C524 + C50867 * C530) * C111 -
           (C2177 * C516 + C50867 * C525 + C2176 * C515 + C2171 * C520) * C124 -
           (C2177 * C526 + C50867 * C531 + C2176 * C524 + C2171 * C530) *
               C112) *
              C2175) *
         C51022 * C50951 * C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C50007 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C51143 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C50000 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C50885) *
               C2173 +
           ((C2373 + C2374) * C50007 + (C2375 + C2376) * C51143 -
            (C2377 + C2378) * C50000 - (C2379 + C2380) * C50885) *
               C2174 +
           C2735 * C2175) *
              C51022 * C50951 * C507 +
          (((C2378 + C2377) * C50000 -
            ((C2376 + C2375) * C51143 + (C2374 + C2373) * C50007) +
            (C2380 + C2379) * C50885) *
               C2173 +
           ((C2390 + C2389) * C50000 -
            ((C2388 + C2387) * C51143 + (C2386 + C2385) * C50007) +
            (C2392 + C2391) * C50885) *
               C2174 +
           ((C2725 + C2726) * C50000 -
            ((C2727 + C2728) * C51143 + (C2729 + C2730) * C50007) +
            (C2731 + C2732) * C50885) *
               C2175) *
              C51022 * C50951 * C508 +
          (C2735 * C2173 +
           ((C2730 + C2729) * C50007 + (C2728 + C2727) * C51143 -
            (C2726 + C2725) * C50000 - (C2732 + C2731) * C50885) *
               C2174 +
           ((C2176 * C2688 + C2171 * C2691 + C2177 * C2689 + C50867 * C2692) *
                C50007 +
            (C2176 * C2693 + C2171 * C2697 + C2177 * C2694 + C50867 * C2698) *
                C51143 -
            (C2177 * C2690 + C50867 * C2695 + C2176 * C2689 + C2171 * C2692) *
                C50000 -
            (C2177 * C2696 + C50867 * C2699 + C2176 * C2694 + C2171 * C2698) *
                C50885) *
               C2175) *
              C51022 * C50951 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C50007 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C51143 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C50000 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C50885) *
               C2173 +
           ((C2373 + C2374) * C50007 + (C2375 + C2376) * C51143 -
            (C2377 + C2378) * C50000 - (C2379 + C2380) * C50885) *
               C2174 +
           C2735 * C2175) *
              C51022 * C848 +
          (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C50867 * C390) *
                C50000 -
            ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                 C51143 +
             (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                 C50007) +
            (C2176 * C395 + C2171 * C403 + C2177 * C394 + C50867 * C402) *
                C50885) *
               C2173 +
           ((C2176 * C719 + C2171 * C727 + C2177 * C720 + C50867 * C728) *
                C50000 -
            ((C3052 + C3053) * C51143 + (C3054 + C3055) * C50007) +
            (C2176 * C731 + C2171 * C743 + C2177 * C732 + C50867 * C744) *
                C50885) *
               C2174 +
           ((C2176 * C724 + C2171 * C740 + C2177 * C723 + C50867 * C739) *
                C50000 -
            (C3060 * C51143 + C3061 * C50007) +
            (C2176 * C736 + C2171 * C748 + C2177 * C735 + C50867 * C747) *
                C50885) *
               C2175) *
              C51022 * C849 +
          (((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50867 * C857) *
                C50007 +
            (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50867 * C867) *
                C51143 -
            (C2177 * C853 + C50867 * C858 + C2176 * C852 + C2171 * C857) *
                C50000 -
            (C2177 * C862 + C50867 * C868 + C2176 * C861 + C2171 * C867) *
                C50885) *
               C2173 +
           ((C2176 * C972 + C2171 * C980 + C2177 * C971 + C50867 * C979) *
                C50007 +
            (C2176 * C976 + C2171 * C984 + C2177 * C975 + C50867 * C983) *
                C51143 -
            (C2177 * C970 + C50867 * C978 + C2176 * C971 + C2171 * C979) *
                C50000 -
            (C2177 * C974 + C50867 * C982 + C2176 * C975 + C2171 * C983) *
                C50885) *
               C2174 +
           ((C2176 * C3210 + C2171 * C3213 + C2177 * C3211 + C50867 * C3214) *
                C50007 +
            (C2176 * C3215 + C2171 * C3219 + C2177 * C3216 + C50867 * C3220) *
                C51143 -
            (C2177 * C3212 + C50867 * C3217 + C2176 * C3211 + C2171 * C3214) *
                C50000 -
            (C2177 * C3218 + C50867 * C3221 + C2176 * C3216 + C2171 * C3220) *
                C50885) *
               C2175) *
              C51022 * C850) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C603 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C50880) *
              C51010 * C51022 * C50951 * C599 -
          ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
            C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
               C50880 +
           (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
            C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
               C603) *
              C51010 * C51022 * C50951 * C600 +
          ((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
            C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
               C603 +
           (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
            C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
               C50880) *
              C51010 * C51022 * C50951 * C601 -
          ((C120 * C608 + C108 * C616 + C119 * C609 + C107 * C617 +
            C118 * C610 + C106 * C618 + C117 * C611 + C105 * C619) *
               C50880 +
           (C120 * C604 + C108 * C612 + C119 * C605 + C107 * C613 +
            C118 * C606 + C106 * C614 + C117 * C607 + C105 * C615) *
               C603) *
              C51010 * C51022 * C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C256 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C251 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C257 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C252 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C258 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C253) *
              C51010 * C51022 * C50951 * C51151 +
          ((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
            C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
               C257 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C251 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C256) +
           (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
            C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
               C252 -
           (C120 * C264 + C108 * C275 + C119 * C262 + C107 * C268 +
            C118 * C261 + C106 * C267 + C117 * C260 + C105 * C266) *
               C258 -
           (C120 * C276 + C108 * C282 + C119 * C274 + C107 * C281 +
            C118 * C269 + C106 * C277 + C117 * C270 + C105 * C278) *
               C253) *
              C51010 * C51022 * C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C603 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50880) *
               C51010 * C51022 * C848 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C50880 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C603) *
               C51010 * C51022 * C849 +
           ((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
             C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
                C603 +
            (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
             C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
                C50880) *
               C51010 * C51022 * C850) *
              C51151 +
          (((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C603 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C50880) *
               C51010 * C51022 * C849 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C50880 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C603) *
               C51010 * C51022 * C848 -
           ((C120 * C973 + C108 * C981 + C119 * C974 + C107 * C982 +
             C118 * C975 + C106 * C983 + C117 * C976 + C105 * C984) *
                C50880 +
            (C120 * C969 + C108 * C977 + C119 * C970 + C107 * C978 +
             C118 * C971 + C106 * C979 + C117 * C972 + C105 * C980) *
                C603) *
               C51010 * C51022 * C850) *
              C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C251 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C257 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C252 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) *
                C258 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) *
                C253) *
               C2173 +
           ((C2373 + C2374) * C256 + (C2375 + C2376) * C251 -
            (C2377 + C2378) * C257 - (C2379 + C2380) * C252 +
            (C2381 + C2382) * C258 + (C2383 + C2384) * C253) *
               C2174 +
           ((C2385 + C2386) * C256 + (C2387 + C2388) * C251 -
            (C2389 + C2390) * C257 - (C2391 + C2392) * C252 +
            (C2393 + C2394) * C258 + (C2395 + C2396) * C253) *
               C2175) *
              C51022 * C50951 * C51151 +
          (((C2378 + C2377) * C257 -
            ((C2376 + C2375) * C251 + (C2374 + C2373) * C256) +
            (C2380 + C2379) * C252 - (C2382 + C2381) * C258 -
            (C2384 + C2383) * C253) *
               C2173 +
           ((C2390 + C2389) * C257 -
            ((C2388 + C2387) * C251 + (C2386 + C2385) * C256) +
            (C2392 + C2391) * C252 - (C2394 + C2393) * C258 -
            (C2396 + C2395) * C253) *
               C2174 +
           ((C2176 * C606 + C2171 * C614 + C2177 * C605 + C50867 * C613) *
                C257 -
            ((C2177 * C610 + C50867 * C618 + C2176 * C611 + C2171 * C619) *
                 C251 +
             (C2177 * C606 + C50867 * C614 + C2176 * C607 + C2171 * C615) *
                 C256) +
            (C2176 * C610 + C2171 * C618 + C2177 * C609 + C50867 * C617) *
                C252 -
            (C2177 * C604 + C50867 * C612 + C2176 * C605 + C2171 * C613) *
                C258 -
            (C2177 * C608 + C50867 * C616 + C2176 * C609 + C2171 * C617) *
                C253) *
               C2175) *
              C51022 * C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C603 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C50880) *
               C2173 +
           ((C2373 + C2374) * C603 + (C2375 + C2376) * C50880) * C2174 +
           C2854 * C2175) *
              C51022 * C50951 * C599 -
          (C2861 * C2175 +
           ((C2388 + C2387) * C50880 + (C2386 + C2385) * C603) * C2174 +
           ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C2173) *
              C51022 * C50951 * C600 +
          (C2854 * C2173 +
           ((C2730 + C2729) * C603 + (C2728 + C2727) * C50880) * C2174 +
           ((C2857 + C2858) * C603 + (C2859 + C2860) * C50880) * C2175) *
              C51022 * C50951 * C601 -
          (((C2177 * C2835 + C50867 * C2839 + C2176 * C2836 + C2171 * C2840) *
                C50880 +
            (C2177 * C2833 + C50867 * C2837 + C2176 * C2834 + C2171 * C2838) *
                C603) *
               C2175 +
           ((C2860 + C2859) * C50880 + (C2858 + C2857) * C603) * C2174 +
           C2861 * C2173) *
              C51022 * C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C50880) *
                C2173 +
            ((C2373 + C2374) * C603 + (C2375 + C2376) * C50880) * C2174 +
            C2854 * C2175) *
               C51022 * C848 -
           (C3064 * C2175 +
            ((C3052 + C3053) * C50880 + (C3054 + C3055) * C603) * C2174 +
            ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                 C50880 +
             (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                 C603) *
                C2173) *
               C51022 * C849 +
           (((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50867 * C857) *
                 C603 +
             (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50867 * C867) *
                 C50880) *
                C2173 +
            ((C3393 + C3394) * C603 + (C3395 + C3396) * C50880) * C2174 +
            ((C3397 + C3398) * C603 + (C3399 + C3400) * C50880) * C2175) *
               C51022 * C850) *
              C51151 +
          ((((C3055 + C3054) * C603 + (C3053 + C3052) * C50880) * C2173 +
            ((C3051 + C3050) * C603 + (C3049 + C3048) * C50880) * C2174 +
            ((C3056 + C3057) * C603 + (C3058 + C3059) * C50880) * C2175) *
               C51022 * C849 -
           (C2861 * C2175 +
            ((C2388 + C2387) * C50880 + (C2386 + C2385) * C603) * C2174 +
            ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C2173) *
               C51022 * C848 -
           (((C2177 * C3370 + C50867 * C3374 + C2176 * C3371 + C2171 * C3375) *
                 C50880 +
             (C2177 * C3368 + C50867 * C3372 + C2176 * C3369 + C2171 * C3373) *
                 C603) *
                C2175 +
            ((C3400 + C3399) * C50880 + (C3398 + C3397) * C603) * C2174 +
            ((C3396 + C3395) * C50880 + (C3394 + C3393) * C603) * C2173) *
               C51022 * C850) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C603 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50880) *
               C51010 * C51022 * C51152 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C50880 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C603) *
               C51010 * C51022 * C50963) *
              C507 +
          (((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C603 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C50880) *
               C51010 * C51022 * C50963 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C50880 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C603) *
               C51010 * C51022 * C51152) *
              C508 +
          (((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
             C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
                C603 +
            (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
             C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
                C50880) *
               C51010 * C51022 * C51152 -
           ((C120 * C734 + C108 * C746 + C119 * C735 + C107 * C747 +
             C118 * C736 + C106 * C748 + C117 * C737 + C105 * C749) *
                C50880 +
            (C120 * C722 + C108 * C738 + C119 * C723 + C107 * C739 +
             C118 * C724 + C106 * C740 + C117 * C725 + C105 * C741) *
                C603) *
               C51010 * C51022 * C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C256 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C251 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C257 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C252 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C258 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C253) *
              C51010 * C51022 * C51152 +
          ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
            C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
               C257 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C251 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C256) +
           (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
            C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
               C252 -
           (C120 * C388 + C108 * C399 + C119 * C386 + C107 * C392 +
            C118 * C385 + C106 * C391 + C117 * C384 + C105 * C390) *
               C258 -
           (C120 * C400 + C108 * C406 + C119 * C398 + C107 * C405 +
            C118 * C393 + C106 * C401 + C117 * C394 + C105 * C402) *
               C253) *
              C51010 * C51022 * C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C603 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C50880) *
              C51010 * C51022 * C1051 -
          ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
            C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
               C50880 +
           (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
            C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
               C603) *
              C51010 * C51022 * C1052 +
          ((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
            C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
               C603 +
           (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
            C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
               C50880) *
              C51010 * C51022 * C1053 -
          ((C120 * C1059 + C108 * C1067 + C119 * C1060 + C107 * C1068 +
            C118 * C1061 + C106 * C1069 + C117 * C1062 + C105 * C1070) *
               C50880 +
           (C120 * C1055 + C108 * C1063 + C119 * C1056 + C107 * C1064 +
            C118 * C1057 + C106 * C1065 + C117 * C1058 + C105 * C1066) *
               C603) *
              C51010 * C51022 * C1054) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C251 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C257 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C252 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) *
                C258 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) *
                C253) *
               C2173 +
           ((C2373 + C2374) * C256 + (C2375 + C2376) * C251 -
            (C2377 + C2378) * C257 - (C2379 + C2380) * C252 +
            (C2381 + C2382) * C258 + (C2383 + C2384) * C253) *
               C2174 +
           ((C2385 + C2386) * C256 + (C2387 + C2388) * C251 -
            (C2389 + C2390) * C257 - (C2391 + C2392) * C252 +
            (C2393 + C2394) * C258 + (C2395 + C2396) * C253) *
               C2175) *
              C51022 * C51152 +
          (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C50867 * C390) *
                C257 -
            ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                 C251 +
             (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                 C256) +
            (C2176 * C395 + C2171 * C403 + C2177 * C394 + C50867 * C402) *
                C252 -
            (C2177 * C385 + C50867 * C391 + C2176 * C384 + C2171 * C390) *
                C258 -
            (C2177 * C393 + C50867 * C401 + C2176 * C394 + C2171 * C402) *
                C253) *
               C2173 +
           ((C2176 * C719 + C2171 * C727 + C2177 * C720 + C50867 * C728) *
                C257 -
            ((C2177 * C731 + C50867 * C743 + C2176 * C730 + C2171 * C742) *
                 C251 +
             (C2177 * C719 + C50867 * C727 + C2176 * C718 + C2171 * C726) *
                 C256) +
            (C2176 * C731 + C2171 * C743 + C2177 * C732 + C50867 * C744) *
                C252 -
            (C2177 * C721 + C50867 * C729 + C2176 * C720 + C2171 * C728) *
                C258 -
            (C2177 * C733 + C50867 * C745 + C2176 * C732 + C2171 * C744) *
                C253) *
               C2174 +
           ((C2176 * C724 + C2171 * C740 + C2177 * C723 + C50867 * C739) *
                C257 -
            ((C2177 * C736 + C50867 * C748 + C2176 * C737 + C2171 * C749) *
                 C251 +
             (C2177 * C724 + C50867 * C740 + C2176 * C725 + C2171 * C741) *
                 C256) +
            (C2176 * C736 + C2171 * C748 + C2177 * C735 + C50867 * C747) *
                C252 -
            (C2177 * C722 + C50867 * C738 + C2176 * C723 + C2171 * C739) *
                C258 -
            (C2177 * C734 + C50867 * C746 + C2176 * C735 + C2171 * C747) *
                C253) *
               C2175) *
              C51022 * C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C50880) *
                C2173 +
            ((C2373 + C2374) * C603 + (C2375 + C2376) * C50880) * C2174 +
            C2854 * C2175) *
               C51022 * C51152 -
           (C3064 * C2175 +
            ((C3052 + C3053) * C50880 + (C3054 + C3055) * C603) * C2174 +
            ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                 C50880 +
             (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                 C603) *
                C2173) *
               C51022 * C50963) *
              C507 +
          ((((C3055 + C3054) * C603 + (C3053 + C3052) * C50880) * C2173 +
            ((C3051 + C3050) * C603 + (C3049 + C3048) * C50880) * C2174 +
            ((C3056 + C3057) * C603 + (C3058 + C3059) * C50880) * C2175) *
               C51022 * C50963 -
           (C2861 * C2175 +
            ((C2388 + C2387) * C50880 + (C2386 + C2385) * C603) * C2174 +
            ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C2173) *
               C51022 * C51152) *
              C508 +
          ((C2854 * C2173 +
            ((C2730 + C2729) * C603 + (C2728 + C2727) * C50880) * C2174 +
            ((C2857 + C2858) * C603 + (C2859 + C2860) * C50880) * C2175) *
               C51022 * C51152 -
           (((C2177 * C3015 + C50867 * C3021 + C2176 * C3016 + C2171 * C3022) *
                 C50880 +
             (C2177 * C3009 + C50867 * C3017 + C2176 * C3010 + C2171 * C3018) *
                 C603) *
                C2175 +
            ((C3059 + C3058) * C50880 + (C3057 + C3056) * C603) * C2174 +
            C3064 * C2173) *
               C51022 * C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C603 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C50880) *
               C2173 +
           ((C2373 + C2374) * C603 + (C2375 + C2376) * C50880) * C2174 +
           C2854 * C2175) *
              C51022 * C1051 -
          (C3064 * C2175 +
           ((C3052 + C3053) * C50880 + (C3054 + C3055) * C603) * C2174 +
           ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                C50880 +
            (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                C603) *
               C2173) *
              C51022 * C1052 +
          (((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50867 * C857) *
                C603 +
            (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50867 * C867) *
                C50880) *
               C2173 +
           ((C3393 + C3394) * C603 + (C3395 + C3396) * C50880) * C2174 +
           ((C3397 + C3398) * C603 + (C3399 + C3400) * C50880) * C2175) *
              C51022 * C1053 -
          (((C2177 * C3502 + C50867 * C3510 + C2176 * C3503 + C2171 * C3511) *
                C50880 +
            (C2177 * C3498 + C50867 * C3504 + C2176 * C3499 + C2171 * C3505) *
                C603) *
               C2175 +
           ((C2177 * C3506 + C50867 * C3512 + C2176 * C3507 + C2171 * C3513) *
                C50880 +
            (C2177 * C3500 + C50867 * C3508 + C2176 * C3501 + C2171 * C3509) *
                C603) *
               C2174 +
           ((C2177 * C1061 + C50867 * C1069 + C2176 * C1062 + C2171 * C1070) *
                C50880 +
            (C2177 * C1057 + C50867 * C1065 + C2176 * C1058 + C2171 * C1066) *
                C603) *
               C2173) *
              C51022 * C1054) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C1174 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C51196 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C1175 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C51181 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C1176 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C1171) *
              C51010 * C51022 * C1514 +
          ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
            C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
               C1175 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C51196 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C1174) +
           (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
            C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
               C51181 -
           (C120 * C388 + C108 * C399 + C119 * C386 + C107 * C392 +
            C118 * C385 + C106 * C391 + C117 * C384 + C105 * C390) *
               C1176 -
           (C120 * C400 + C108 * C406 + C119 * C398 + C107 * C405 +
            C118 * C393 + C106 * C401 + C117 * C394 + C105 * C402) *
               C1171) *
              C51010 * C51022 * C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C1174 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C51196 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C1175 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C51181 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) *
                C1176 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) *
                C1171) *
               C2173 +
           ((C2373 + C2374) * C1174 + (C2375 + C2376) * C51196 -
            (C2377 + C2378) * C1175 - (C2379 + C2380) * C51181 +
            (C2381 + C2382) * C1176 + (C2383 + C2384) * C1171) *
               C2174 +
           (C2701 * C1174 + C2702 * C51196 - C2703 * C1175 - C2704 * C51181 +
            (C2393 + C2394) * C1176 + (C2395 + C2396) * C1171) *
               C2175) *
              C51022 * C1514 +
          (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C50867 * C390) *
                C1175 -
            ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                 C51196 +
             (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                 C1174) +
            (C2176 * C395 + C2171 * C403 + C2177 * C394 + C50867 * C402) *
                C51181 -
            (C2177 * C385 + C50867 * C391 + C2176 * C384 + C2171 * C390) *
                C1176 -
            (C2177 * C393 + C50867 * C401 + C2176 * C394 + C2171 * C402) *
                C1171) *
               C2173 +
           ((C4028 + C4029) * C1175 -
            ((C3052 + C3053) * C51196 + (C3054 + C3055) * C1174) +
            (C4030 + C4031) * C51181 -
            (C2177 * C721 + C50867 * C729 + C2176 * C720 + C2171 * C728) *
                C1176 -
            (C2177 * C733 + C50867 * C745 + C2176 * C732 + C2171 * C744) *
                C1171) *
               C2174 +
           ((C4032 + C4033) * C1175 - (C3060 * C51196 + C3061 * C1174) +
            (C4034 + C4035) * C51181 -
            (C2177 * C722 + C50867 * C738 + C2176 * C723 + C2171 * C739) *
                C1176 -
            (C2177 * C734 + C50867 * C746 + C2176 * C735 + C2171 * C747) *
                C1171) *
               C2175) *
              C51022 * C50963) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C1280 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C1275 -
            (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
             C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                C1281 -
            (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
             C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                C50885) *
               C51010 * C51022 * C1514 +
           ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
             C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
                C1281 -
            ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
              C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                 C1275 +
             (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
              C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                 C1280) +
            (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
             C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
                C50885) *
               C51010 * C51022 * C50963) *
              C51151 +
          (((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
             C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
                C1281 -
            ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
              C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                 C1275 +
             (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
              C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                 C1280) +
            (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
             C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
                C50885) *
               C51010 * C51022 * C1514 +
           ((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C1280 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C1275 -
            (C120 * C1412 + C108 * C1413 + C119 * C721 + C107 * C729 +
             C118 * C720 + C106 * C728 + C117 * C719 + C105 * C727) *
                C1281 -
            (C120 * C1414 + C108 * C1415 + C119 * C733 + C107 * C745 +
             C118 * C732 + C106 * C744 + C117 * C731 + C105 * C743) *
                C50885) *
               C51010 * C51022 * C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C1280 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C1275 -
             (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                 C1281 -
             (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                 C50885) *
                C2173 +
            ((C2373 + C2374) * C1280 + (C2375 + C2376) * C1275 -
             (C2377 + C2378) * C1281 - (C2379 + C2380) * C50885) *
                C2174 +
            C3813 * C2175) *
               C51022 * C1514 +
           (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C50867 * C390) *
                 C1281 -
             ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                  C1275 +
              (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                  C1280) +
             (C2176 * C395 + C2171 * C403 + C2177 * C394 + C50867 * C402) *
                 C50885) *
                C2173 +
            ((C4028 + C4029) * C1281 -
             ((C3052 + C3053) * C1275 + (C3054 + C3055) * C1280) +
             (C4030 + C4031) * C50885) *
                C2174 +
            ((C4032 + C4033) * C1281 - (C3060 * C1275 + C3061 * C1280) +
             (C4034 + C4035) * C50885) *
                C2175) *
               C51022 * C50963) *
              C51151 +
          ((((C2378 + C2377) * C1281 -
             ((C2376 + C2375) * C1275 + (C2374 + C2373) * C1280) +
             (C2380 + C2379) * C50885) *
                C2173 +
            ((C2390 + C2389) * C1281 -
             ((C2388 + C2387) * C1275 + (C2386 + C2385) * C1280) +
             (C2392 + C2391) * C50885) *
                C2174 +
            ((C2725 + C2726) * C1281 - (C2844 * C1275 + C2845 * C1280) +
             (C2731 + C2732) * C50885) *
                C2175) *
               C51022 * C1514 +
           (((C3055 + C3054) * C1280 + (C3053 + C3052) * C1275 -
             (C4029 + C4028) * C1281 - (C4031 + C4030) * C50885) *
                C2173 +
            ((C3051 + C3050) * C1280 + (C3049 + C3048) * C1275 -
             (C4033 + C4032) * C1281 - (C4035 + C4034) * C50885) *
                C2174 +
            ((C3056 + C3057) * C1280 + (C3058 + C3059) * C1275 -
             (C2177 * C4007 + C50867 * C4008 + C2176 * C3008 + C2171 * C3012) *
                 C1281 -
             (C2177 * C4009 + C50867 * C4010 + C2176 * C3014 + C2171 * C3020) *
                 C50885) *
                C2175) *
               C51022 * C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C1280 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C1275 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C1281 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50885) *
              C51010 * C51022 * C51198 +
          ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
            C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
               C1281 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C1275 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C1280) +
           (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
            C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
               C50885) *
              C51010 * C51022 * C51187 +
          ((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
            C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
               C1280 +
           (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
            C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
               C1275 -
           (C120 * C855 + C108 * C864 + C119 * C854 + C107 * C859 +
            C118 * C853 + C106 * C858 + C117 * C852 + C105 * C857) *
               C1281 -
           (C120 * C865 + C108 * C870 + C119 * C863 + C107 * C869 +
            C118 * C862 + C106 * C868 + C117 * C861 + C105 * C867) *
               C50885) *
              C51010 * C51022 * C1746) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C1280 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C1275 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C1281 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C50885) *
               C2173 +
           ((C2373 + C2374) * C1280 + (C2375 + C2376) * C1275 -
            (C2377 + C2378) * C1281 - (C2379 + C2380) * C50885) *
               C2174 +
           C3813 * C2175) *
              C51022 * C51198 +
          (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C50867 * C390) *
                C1281 -
            ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                 C1275 +
             (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                 C1280) +
            (C2176 * C395 + C2171 * C403 + C2177 * C394 + C50867 * C402) *
                C50885) *
               C2173 +
           ((C4028 + C4029) * C1281 -
            ((C3052 + C3053) * C1275 + (C3054 + C3055) * C1280) +
            (C4030 + C4031) * C50885) *
               C2174 +
           ((C4032 + C4033) * C1281 - (C3060 * C1275 + C3061 * C1280) +
            (C4034 + C4035) * C50885) *
               C2175) *
              C51022 * C51187 +
          (((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50867 * C857) *
                C1280 +
            (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50867 * C867) *
                C1275 -
            (C2177 * C853 + C50867 * C858 + C2176 * C852 + C2171 * C857) *
                C1281 -
            (C2177 * C862 + C50867 * C868 + C2176 * C861 + C2171 * C867) *
                C50885) *
               C2173 +
           ((C3393 + C3394) * C1280 + (C3395 + C3396) * C1275 -
            (C2177 * C970 + C50867 * C978 + C2176 * C971 + C2171 * C979) *
                C1281 -
            (C2177 * C974 + C50867 * C982 + C2176 * C975 + C2171 * C983) *
                C50885) *
               C2174 +
           ((C3397 + C3398) * C1280 + (C3399 + C3400) * C1275 -
            (C2177 * C3212 + C50867 * C3217 + C2176 * C3211 + C2171 * C3214) *
                C1281 -
            (C2177 * C3218 + C50867 * C3221 + C2176 * C3216 + C2171 * C3220) *
                C50885) *
               C2175) *
              C51022 * C1746) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 + C119 * C127 +
           C107 * C134 + C120 * C128 + C108 * C135) *
              C121 +
          (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 + C119 * C138 +
           C107 * C148 + C120 * C139 + C108 * C149) *
              C109 -
          (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 + C118 * C127 +
           C106 * C134 + C117 * C126 + C105 * C133) *
              C122 -
          (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 + C118 * C138 +
           C106 * C148 + C117 * C137 + C105 * C147) *
              C110 +
          (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 + C119 * C129 +
           C107 * C140 + C120 * C130 + C108 * C142) *
              C123 +
          (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 + C119 * C141 +
           C107 * C150 + C120 * C143 + C108 * C151) *
              C111 -
          (C120 * C131 + C108 * C144 + C119 * C130 + C107 * C142 + C118 * C129 +
           C106 * C140 + C117 * C128 + C105 * C135) *
              C124 -
          (C120 * C145 + C108 * C152 + C119 * C143 + C107 * C151 + C118 * C141 +
           C106 * C150 + C117 * C139 + C105 * C149) *
              C112) *
         C51010 * C51022 * C50951 * C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C50007 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C51143 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C50000 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50885) *
              C51010 * C51022 * C50951 * C507 +
          ((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
            C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
               C50000 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C51143 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C50007) +
           (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
            C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
               C50885) *
              C51010 * C51022 * C50951 * C508 +
          ((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
            C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
               C50007 +
           (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
            C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
               C51143 -
           (C120 * C516 + C108 * C525 + C119 * C515 + C107 * C520 +
            C118 * C514 + C106 * C519 + C117 * C513 + C105 * C518) *
               C50000 -
           (C120 * C526 + C108 * C531 + C119 * C524 + C107 * C530 +
            C118 * C523 + C106 * C529 + C117 * C522 + C105 * C528) *
               C50885) *
              C51010 * C51022 * C50951 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) * C121 +
           (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) * C109 -
           (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) * C122 -
           (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) * C110 +
           (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) * C123 +
           (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) * C111 -
           (C2177 * C129 + C50867 * C140 + C2176 * C128 + C2171 * C135) * C124 -
           (C2177 * C141 + C50867 * C150 + C2176 * C139 + C2171 * C149) *
               C112) *
              C2173 +
          ((C2176 * C263 + C2171 * C273 + C2177 * C259 + C50867 * C265) * C121 +
           (C2176 * C272 + C2171 * C280 + C2177 * C271 + C50867 * C279) * C109 -
           (C2177 * C260 + C50867 * C266 + C2176 * C259 + C2171 * C265) * C122 -
           (C2177 * C270 + C50867 * C278 + C2176 * C271 + C2171 * C279) * C110 +
           (C2176 * C260 + C2171 * C266 + C2177 * C261 + C50867 * C267) * C123 +
           (C2176 * C270 + C2171 * C278 + C2177 * C269 + C50867 * C277) * C111 -
           (C2177 * C262 + C50867 * C268 + C2176 * C261 + C2171 * C267) * C124 -
           (C2177 * C274 + C50867 * C281 + C2176 * C269 + C2171 * C277) *
               C112) *
              C2174 +
          ((C2176 * C512 + C2171 * C517 + C2177 * C513 + C50867 * C518) * C121 +
           (C2176 * C521 + C2171 * C527 + C2177 * C522 + C50867 * C528) * C109 -
           (C2177 * C514 + C50867 * C519 + C2176 * C513 + C2171 * C518) * C122 -
           (C2177 * C523 + C50867 * C529 + C2176 * C522 + C2171 * C528) * C110 +
           (C2176 * C514 + C2171 * C519 + C2177 * C515 + C50867 * C520) * C123 +
           (C2176 * C523 + C2171 * C529 + C2177 * C524 + C50867 * C530) * C111 -
           (C2177 * C516 + C50867 * C525 + C2176 * C515 + C2171 * C520) * C124 -
           (C2177 * C526 + C50867 * C531 + C2176 * C524 + C2171 * C530) *
               C112) *
              C2175) *
         C51022 * C50951 * C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C50007 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C51143 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C50000 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C50885) *
               C2173 +
           ((C2373 + C2374) * C50007 + (C2375 + C2376) * C51143 -
            (C2377 + C2378) * C50000 - (C2379 + C2380) * C50885) *
               C2174 +
           C2735 * C2175) *
              C51022 * C50951 * C507 +
          (((C2378 + C2377) * C50000 -
            ((C2376 + C2375) * C51143 + (C2374 + C2373) * C50007) +
            (C2380 + C2379) * C50885) *
               C2173 +
           ((C2390 + C2389) * C50000 -
            ((C2388 + C2387) * C51143 + (C2386 + C2385) * C50007) +
            (C2392 + C2391) * C50885) *
               C2174 +
           ((C2725 + C2726) * C50000 -
            ((C2727 + C2728) * C51143 + (C2729 + C2730) * C50007) +
            (C2731 + C2732) * C50885) *
               C2175) *
              C51022 * C50951 * C508 +
          (C2735 * C2173 +
           ((C2730 + C2729) * C50007 + (C2728 + C2727) * C51143 -
            (C2726 + C2725) * C50000 - (C2732 + C2731) * C50885) *
               C2174 +
           ((C2176 * C2688 + C2171 * C2691 + C2177 * C2689 + C50867 * C2692) *
                C50007 +
            (C2176 * C2693 + C2171 * C2697 + C2177 * C2694 + C50867 * C2698) *
                C51143 -
            (C2177 * C2690 + C50867 * C2695 + C2176 * C2689 + C2171 * C2692) *
                C50000 -
            (C2177 * C2696 + C50867 * C2699 + C2176 * C2694 + C2171 * C2698) *
                C50885) *
               C2175) *
              C51022 * C50951 * C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C256 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C251 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C257 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C252 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C258 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C253) *
              C51010 * C51022 * C50951 * C51151 +
          ((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
            C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
               C257 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C251 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C256) +
           (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
            C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
               C252 -
           (C120 * C264 + C108 * C275 + C119 * C262 + C107 * C268 +
            C118 * C261 + C106 * C267 + C117 * C260 + C105 * C266) *
               C258 -
           (C120 * C276 + C108 * C282 + C119 * C274 + C107 * C281 +
            C118 * C269 + C106 * C277 + C117 * C270 + C105 * C278) *
               C253) *
              C51010 * C51022 * C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C603 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C50880) *
              C51010 * C51022 * C50951 * C599 -
          ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
            C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
               C50880 +
           (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
            C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
               C603) *
              C51010 * C51022 * C50951 * C600 +
          ((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
            C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
               C603 +
           (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
            C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
               C50880) *
              C51010 * C51022 * C50951 * C601 -
          ((C120 * C608 + C108 * C616 + C119 * C609 + C107 * C617 +
            C118 * C610 + C106 * C618 + C117 * C611 + C105 * C619) *
               C50880 +
           (C120 * C604 + C108 * C612 + C119 * C605 + C107 * C613 +
            C118 * C606 + C106 * C614 + C117 * C607 + C105 * C615) *
               C603) *
              C51010 * C51022 * C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C251 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C257 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C252 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) *
                C258 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) *
                C253) *
               C2173 +
           ((C2373 + C2374) * C256 + (C2375 + C2376) * C251 -
            (C2377 + C2378) * C257 - (C2379 + C2380) * C252 +
            (C2381 + C2382) * C258 + (C2383 + C2384) * C253) *
               C2174 +
           ((C2385 + C2386) * C256 + (C2387 + C2388) * C251 -
            (C2389 + C2390) * C257 - (C2391 + C2392) * C252 +
            (C2393 + C2394) * C258 + (C2395 + C2396) * C253) *
               C2175) *
              C51022 * C50951 * C51151 +
          (((C2378 + C2377) * C257 -
            ((C2376 + C2375) * C251 + (C2374 + C2373) * C256) +
            (C2380 + C2379) * C252 - (C2382 + C2381) * C258 -
            (C2384 + C2383) * C253) *
               C2173 +
           ((C2390 + C2389) * C257 -
            ((C2388 + C2387) * C251 + (C2386 + C2385) * C256) +
            (C2392 + C2391) * C252 - (C2394 + C2393) * C258 -
            (C2396 + C2395) * C253) *
               C2174 +
           ((C2176 * C606 + C2171 * C614 + C2177 * C605 + C50867 * C613) *
                C257 -
            ((C2177 * C610 + C50867 * C618 + C2176 * C611 + C2171 * C619) *
                 C251 +
             (C2177 * C606 + C50867 * C614 + C2176 * C607 + C2171 * C615) *
                 C256) +
            (C2176 * C610 + C2171 * C618 + C2177 * C609 + C50867 * C617) *
                C252 -
            (C2177 * C604 + C50867 * C612 + C2176 * C605 + C2171 * C613) *
                C258 -
            (C2177 * C608 + C50867 * C616 + C2176 * C609 + C2171 * C617) *
                C253) *
               C2175) *
              C51022 * C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C603 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C50880) *
               C2173 +
           ((C2373 + C2374) * C603 + (C2375 + C2376) * C50880) * C2174 +
           C2854 * C2175) *
              C51022 * C50951 * C599 -
          (C2861 * C2175 +
           ((C2388 + C2387) * C50880 + (C2386 + C2385) * C603) * C2174 +
           ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C2173) *
              C51022 * C50951 * C600 +
          (C2854 * C2173 +
           ((C2730 + C2729) * C603 + (C2728 + C2727) * C50880) * C2174 +
           ((C2857 + C2858) * C603 + (C2859 + C2860) * C50880) * C2175) *
              C51022 * C50951 * C601 -
          (((C2177 * C2835 + C50867 * C2839 + C2176 * C2836 + C2171 * C2840) *
                C50880 +
            (C2177 * C2833 + C50867 * C2837 + C2176 * C2834 + C2171 * C2838) *
                C603) *
               C2175 +
           ((C2860 + C2859) * C50880 + (C2858 + C2857) * C603) * C2174 +
           C2861 * C2173) *
              C51022 * C50951 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C256 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C251 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C257 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C252 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C258 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C253) *
              C51010 * C51022 * C51152 +
          ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
            C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
               C257 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C251 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C256) +
           (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
            C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
               C252 -
           (C120 * C388 + C108 * C399 + C119 * C386 + C107 * C392 +
            C118 * C385 + C106 * C391 + C117 * C384 + C105 * C390) *
               C258 -
           (C120 * C400 + C108 * C406 + C119 * C398 + C107 * C405 +
            C118 * C393 + C106 * C401 + C117 * C394 + C105 * C402) *
               C253) *
              C51010 * C51022 * C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C603 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50880) *
               C51010 * C51022 * C51152 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C50880 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C603) *
               C51010 * C51022 * C50963) *
              C507 +
          (((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C603 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C50880) *
               C51010 * C51022 * C50963 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C50880 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C603) *
               C51010 * C51022 * C51152) *
              C508 +
          (((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
             C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
                C603 +
            (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
             C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
                C50880) *
               C51010 * C51022 * C51152 -
           ((C120 * C734 + C108 * C746 + C119 * C735 + C107 * C747 +
             C118 * C736 + C106 * C748 + C117 * C737 + C105 * C749) *
                C50880 +
            (C120 * C722 + C108 * C738 + C119 * C723 + C107 * C739 +
             C118 * C724 + C106 * C740 + C117 * C725 + C105 * C741) *
                C603) *
               C51010 * C51022 * C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                C251 -
            (C2177 * C127 + C50867 * C134 + C2176 * C126 + C2171 * C133) *
                C257 -
            (C2177 * C138 + C50867 * C148 + C2176 * C137 + C2171 * C147) *
                C252 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C50867 * C135) *
                C258 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C50867 * C149) *
                C253) *
               C2173 +
           ((C2373 + C2374) * C256 + (C2375 + C2376) * C251 -
            (C2377 + C2378) * C257 - (C2379 + C2380) * C252 +
            (C2381 + C2382) * C258 + (C2383 + C2384) * C253) *
               C2174 +
           ((C2385 + C2386) * C256 + (C2387 + C2388) * C251 -
            (C2389 + C2390) * C257 - (C2391 + C2392) * C252 +
            (C2393 + C2394) * C258 + (C2395 + C2396) * C253) *
               C2175) *
              C51022 * C51152 +
          (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C50867 * C390) *
                C257 -
            ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                 C251 +
             (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                 C256) +
            (C2176 * C395 + C2171 * C403 + C2177 * C394 + C50867 * C402) *
                C252 -
            (C2177 * C385 + C50867 * C391 + C2176 * C384 + C2171 * C390) *
                C258 -
            (C2177 * C393 + C50867 * C401 + C2176 * C394 + C2171 * C402) *
                C253) *
               C2173 +
           ((C2176 * C719 + C2171 * C727 + C2177 * C720 + C50867 * C728) *
                C257 -
            ((C2177 * C731 + C50867 * C743 + C2176 * C730 + C2171 * C742) *
                 C251 +
             (C2177 * C719 + C50867 * C727 + C2176 * C718 + C2171 * C726) *
                 C256) +
            (C2176 * C731 + C2171 * C743 + C2177 * C732 + C50867 * C744) *
                C252 -
            (C2177 * C721 + C50867 * C729 + C2176 * C720 + C2171 * C728) *
                C258 -
            (C2177 * C733 + C50867 * C745 + C2176 * C732 + C2171 * C744) *
                C253) *
               C2174 +
           ((C2176 * C724 + C2171 * C740 + C2177 * C723 + C50867 * C739) *
                C257 -
            ((C2177 * C736 + C50867 * C748 + C2176 * C737 + C2171 * C749) *
                 C251 +
             (C2177 * C724 + C50867 * C740 + C2176 * C725 + C2171 * C741) *
                 C256) +
            (C2176 * C736 + C2171 * C748 + C2177 * C735 + C50867 * C747) *
                C252 -
            (C2177 * C722 + C50867 * C738 + C2176 * C723 + C2171 * C739) *
                C258 -
            (C2177 * C734 + C50867 * C746 + C2176 * C735 + C2171 * C747) *
                C253) *
               C2175) *
              C51022 * C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C50867 * C133) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C50867 * C147) *
                 C50880) *
                C2173 +
            ((C2373 + C2374) * C603 + (C2375 + C2376) * C50880) * C2174 +
            C2854 * C2175) *
               C51022 * C51152 -
           (C3064 * C2175 +
            ((C3052 + C3053) * C50880 + (C3054 + C3055) * C603) * C2174 +
            ((C2177 * C395 + C50867 * C403 + C2176 * C396 + C2171 * C404) *
                 C50880 +
             (C2177 * C383 + C50867 * C389 + C2176 * C387 + C2171 * C397) *
                 C603) *
                C2173) *
               C51022 * C50963) *
              C507 +
          ((((C3055 + C3054) * C603 + (C3053 + C3052) * C50880) * C2173 +
            ((C3051 + C3050) * C603 + (C3049 + C3048) * C50880) * C2174 +
            ((C3056 + C3057) * C603 + (C3058 + C3059) * C50880) * C2175) *
               C51022 * C50963 -
           (C2861 * C2175 +
            ((C2388 + C2387) * C50880 + (C2386 + C2385) * C603) * C2174 +
            ((C2376 + C2375) * C50880 + (C2374 + C2373) * C603) * C2173) *
               C51022 * C51152) *
              C508 +
          ((C2854 * C2173 +
            ((C2730 + C2729) * C603 + (C2728 + C2727) * C50880) * C2174 +
            ((C2857 + C2858) * C603 + (C2859 + C2860) * C50880) * C2175) *
               C51022 * C51152 -
           (((C2177 * C3015 + C50867 * C3021 + C2176 * C3016 + C2171 * C3022) *
                 C50880 +
             (C2177 * C3009 + C50867 * C3017 + C2176 * C3010 + C2171 * C3018) *
                 C603) *
                C2175 +
            ((C3059 + C3058) * C50880 + (C3057 + C3056) * C603) * C2174 +
            C3064 * C2173) *
               C51022 * C50963) *
              C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C1174 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C51196 -
            (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                C1175 -
            (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                C51181 +
            (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                C1176 +
            (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                C1171) *
               C51199 +
           ((C25020 + C25021) * C1174 + (C25022 + C25023) * C51196 -
            (C25024 + C25025) * C1175 - (C25026 + C25027) * C51181 +
            (C25028 + C25029) * C1176 + (C25030 + C25031) * C1171) *
               C51200 +
           (C25336 * C1174 + C25337 * C51196 - C25338 * C1175 -
            C25339 * C51181 + (C25040 + C25041) * C1176 +
            (C25042 + C25043) * C1171) *
               C24822) *
              C51022 * C50951 * C1172 +
          (((C25025 + C25024) * C1175 -
            ((C25023 + C25022) * C51196 + (C25021 + C25020) * C1174) +
            (C25027 + C25026) * C51181 - (C25029 + C25028) * C1176 -
            (C25031 + C25030) * C1171) *
               C51199 +
           ((C25037 + C25036) * C1175 -
            ((C25035 + C25034) * C51196 + (C25033 + C25032) * C1174) +
            (C25039 + C25038) * C51181 - (C25041 + C25040) * C1176 -
            (C25043 + C25042) * C1171) *
               C51200 +
           ((C25360 + C25361) * C1175 - (C25471 * C51196 + C25472 * C1174) +
            (C25366 + C25367) * C51181 -
            (C49954 * C604 + C50867 * C612 + C49961 * C605 + C51138 * C613) *
                C1176 -
            (C49954 * C608 + C50867 * C616 + C49961 * C609 + C51138 * C617) *
                C1171) *
               C24822) *
              C51022 * C50951 * C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C1280 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C1275 -
            (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                C1281 -
            (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                C50885) *
               C51199 +
           ((C25020 + C25021) * C1280 + (C25022 + C25023) * C1275 -
            (C25024 + C25025) * C1281 - (C25026 + C25027) * C50885) *
               C51200 +
           C26388 * C24822) *
              C51022 * C50951 * C51197 +
          (((C25025 + C25024) * C1281 -
            ((C25023 + C25022) * C1275 + (C25021 + C25020) * C1280) +
            (C25027 + C25026) * C50885) *
               C51199 +
           ((C25037 + C25036) * C1281 -
            ((C25035 + C25034) * C1275 + (C25033 + C25032) * C1280) +
            (C25039 + C25038) * C50885) *
               C51200 +
           ((C25360 + C25361) * C1281 - (C25471 * C1275 + C25472 * C1280) +
            (C25366 + C25367) * C50885) *
               C24822) *
              C51022 * C50951 * C51184 +
          (C26388 * C51199 +
           ((C25365 + C25364) * C1280 + (C25363 + C25362) * C1275 -
            (C25361 + C25360) * C1281 - (C25367 + C25366) * C50885) *
               C51200 +
           ((C25484 + C25485) * C1280 + (C25486 + C25487) * C1275 -
            (C49954 * C2690 + C50867 * C2695 + C49961 * C2689 +
             C51138 * C2692) *
                C1281 -
            (C49954 * C2696 + C50867 * C2699 + C49961 * C2694 +
             C51138 * C2698) *
                C50885) *
               C24822) *
              C51022 * C50951 * C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C1280 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C1275 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C1281 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C50885) *
                C51199 +
            ((C25020 + C25021) * C1280 + (C25022 + C25023) * C1275 -
             (C25024 + C25025) * C1281 - (C25026 + C25027) * C50885) *
                C51200 +
            C26388 * C24822) *
               C51022 * C51152 +
           (((C49961 * C383 + C51138 * C389 + C49954 * C384 + C50867 * C390) *
                 C1281 -
             ((C49954 * C395 + C50867 * C403 + C49961 * C396 + C51138 * C404) *
                  C1275 +
              (C49954 * C383 + C50867 * C389 + C49961 * C387 + C51138 * C397) *
                  C1280) +
             (C49961 * C395 + C51138 * C403 + C49954 * C394 + C50867 * C402) *
                 C50885) *
                C51199 +
            ((C26599 + C26600) * C1281 -
             ((C25663 + C25664) * C1275 + (C25665 + C25666) * C1280) +
             (C26601 + C26602) * C50885) *
                C51200 +
            ((C26603 + C26604) * C1281 - (C25671 * C1275 + C25672 * C1280) +
             (C26605 + C26606) * C50885) *
                C24822) *
               C51022 * C50963) *
              C1172 +
          ((((C25025 + C25024) * C1281 -
             ((C25023 + C25022) * C1275 + (C25021 + C25020) * C1280) +
             (C25027 + C25026) * C50885) *
                C51199 +
            ((C25037 + C25036) * C1281 -
             ((C25035 + C25034) * C1275 + (C25033 + C25032) * C1280) +
             (C25039 + C25038) * C50885) *
                C51200 +
            ((C25360 + C25361) * C1281 - (C25471 * C1275 + C25472 * C1280) +
             (C25366 + C25367) * C50885) *
                C24822) *
               C51022 * C51152 +
           (((C25666 + C25665) * C1280 + (C25664 + C25663) * C1275 -
             (C26600 + C26599) * C1281 - (C26602 + C26601) * C50885) *
                C51199 +
            ((C25662 + C25661) * C1280 + (C25660 + C25659) * C1275 -
             (C26604 + C26603) * C1281 - (C26606 + C26605) * C50885) *
                C51200 +
            ((C25667 + C25668) * C1280 + (C25669 + C25670) * C1275 -
             (C49954 * C4007 + C50867 * C4008 + C49961 * C3008 +
              C51138 * C3012) *
                 C1281 -
             (C49954 * C4009 + C50867 * C4010 + C49961 * C3014 +
              C51138 * C3020) *
                 C50885) *
                C24822) *
               C51022 * C50963) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C50007 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C51143 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C50000 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C50885) *
                C51199 +
            ((C25020 + C25021) * C50007 + (C25022 + C25023) * C51143 -
             (C25024 + C25025) * C50000 - (C25026 + C25027) * C50885) *
                C51200 +
            C25370 * C24822) *
               C51022 * C1514 +
           (((C49961 * C383 + C51138 * C389 + C49954 * C384 + C50867 * C390) *
                 C50000 -
             ((C49954 * C395 + C50867 * C403 + C49961 * C396 + C51138 * C404) *
                  C51143 +
              (C49954 * C383 + C50867 * C389 + C49961 * C387 + C51138 * C397) *
                  C50007) +
             (C49961 * C395 + C51138 * C403 + C49954 * C394 + C50867 * C402) *
                 C50885) *
                C51199 +
            ((C26599 + C26600) * C50000 -
             ((C25663 + C25664) * C51143 + (C25665 + C25666) * C50007) +
             (C26601 + C26602) * C50885) *
                C51200 +
            ((C26603 + C26604) * C50000 - (C25671 * C51143 + C25672 * C50007) +
             (C26605 + C26606) * C50885) *
                C24822) *
               C51022 * C50963) *
              C1172 +
          ((((C25025 + C25024) * C50000 -
             ((C25023 + C25022) * C51143 + (C25021 + C25020) * C50007) +
             (C25027 + C25026) * C50885) *
                C51199 +
            ((C25037 + C25036) * C50000 -
             ((C25035 + C25034) * C51143 + (C25033 + C25032) * C50007) +
             (C25039 + C25038) * C50885) *
                C51200 +
            ((C25360 + C25361) * C50000 - (C25471 * C51143 + C25472 * C50007) +
             (C25366 + C25367) * C50885) *
                C24822) *
               C51022 * C1514 +
           (((C25666 + C25665) * C50007 + (C25664 + C25663) * C51143 -
             (C26600 + C26599) * C50000 - (C26602 + C26601) * C50885) *
                C51199 +
            ((C25662 + C25661) * C50007 + (C25660 + C25659) * C51143 -
             (C26604 + C26603) * C50000 - (C26606 + C26605) * C50885) *
                C51200 +
            ((C25667 + C25668) * C50007 + (C25669 + C25670) * C51143 -
             (C49954 * C4007 + C50867 * C4008 + C49961 * C3008 +
              C51138 * C3012) *
                 C50000 -
             (C49954 * C4009 + C50867 * C4010 + C49961 * C3014 +
              C51138 * C3020) *
                 C50885) *
                C24822) *
               C51022 * C50963) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C603 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C50880) *
                C51199 +
            ((C25020 + C25021) * C603 + (C25022 + C25023) * C50880) * C51200 +
            C25481 * C24822) *
               C51022 * C1514 -
           (C25675 * C24822 +
            ((C25663 + C25664) * C50880 + (C25665 + C25666) * C603) * C51200 +
            ((C49954 * C395 + C50867 * C403 + C49961 * C396 + C51138 * C404) *
                 C50880 +
             (C49954 * C383 + C50867 * C389 + C49961 * C387 + C51138 * C397) *
                 C603) *
                C51199) *
               C51022 * C50963) *
              C51197 +
          ((((C25666 + C25665) * C603 + (C25664 + C25663) * C50880) * C51199 +
            ((C25662 + C25661) * C603 + (C25660 + C25659) * C50880) * C51200 +
            ((C25667 + C25668) * C603 + (C25669 + C25670) * C50880) * C24822) *
               C51022 * C50963 -
           (C25488 * C24822 +
            ((C25035 + C25034) * C50880 + (C25033 + C25032) * C603) * C51200 +
            ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C51199) *
               C51022 * C1514) *
              C51184 +
          ((C25481 * C51199 +
            ((C25365 + C25364) * C603 + (C25363 + C25362) * C50880) * C51200 +
            ((C25484 + C25485) * C603 + (C25486 + C25487) * C50880) * C24822) *
               C51022 * C1514 -
           (((C49954 * C3015 + C50867 * C3021 + C49961 * C3016 +
              C51138 * C3022) *
                 C50880 +
             (C49954 * C3009 + C50867 * C3017 + C49961 * C3010 +
              C51138 * C3018) *
                 C603) *
                C24822 +
            ((C25670 + C25669) * C50880 + (C25668 + C25667) * C603) * C51200 +
            C25675 * C51199) *
               C51022 * C50963) *
              C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C603 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C50880) *
                C51199 +
            ((C25020 + C25021) * C603 + (C25022 + C25023) * C50880) * C51200 +
            C25481 * C24822) *
               C51022 * C51198 -
           (C25675 * C24822 +
            ((C25663 + C25664) * C50880 + (C25665 + C25666) * C603) * C51200 +
            ((C49954 * C395 + C50867 * C403 + C49961 * C396 + C51138 * C404) *
                 C50880 +
             (C49954 * C383 + C50867 * C389 + C49961 * C387 + C51138 * C397) *
                 C603) *
                C51199) *
               C51022 * C51187 +
           (((C49961 * C851 + C51138 * C856 + C49954 * C852 + C50867 * C857) *
                 C603 +
             (C49961 * C860 + C51138 * C866 + C49954 * C861 + C50867 * C867) *
                 C50880) *
                C51199 +
            ((C25984 + C25985) * C603 + (C25986 + C25987) * C50880) * C51200 +
            ((C25988 + C25989) * C603 + (C25990 + C25991) * C50880) * C24822) *
               C51022 * C1746) *
              C1172 +
          ((((C25666 + C25665) * C603 + (C25664 + C25663) * C50880) * C51199 +
            ((C25662 + C25661) * C603 + (C25660 + C25659) * C50880) * C51200 +
            ((C25667 + C25668) * C603 + (C25669 + C25670) * C50880) * C24822) *
               C51022 * C51187 -
           (C25488 * C24822 +
            ((C25035 + C25034) * C50880 + (C25033 + C25032) * C603) * C51200 +
            ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C51199) *
               C51022 * C51198 -
           (((C49954 * C3370 + C50867 * C3374 + C49961 * C3371 +
              C51138 * C3375) *
                 C50880 +
             (C49954 * C3368 + C50867 * C3372 + C49961 * C3369 +
              C51138 * C3373) *
                 C603) *
                C24822 +
            ((C25991 + C25990) * C50880 + (C25989 + C25988) * C603) * C51200 +
            ((C25987 + C25986) * C50880 + (C25985 + C25984) * C603) * C51199) *
               C51022 * C1746) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C50007 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C51143 -
            (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                C50000 -
            (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                C50885) *
               C51199 +
           ((C25020 + C25021) * C50007 + (C25022 + C25023) * C51143 -
            (C25024 + C25025) * C50000 - (C25026 + C25027) * C50885) *
               C51200 +
           C25370 * C24822) *
              C51022 * C50951 * C507 +
          (((C25025 + C25024) * C50000 -
            ((C25023 + C25022) * C51143 + (C25021 + C25020) * C50007) +
            (C25027 + C25026) * C50885) *
               C51199 +
           ((C25037 + C25036) * C50000 -
            ((C25035 + C25034) * C51143 + (C25033 + C25032) * C50007) +
            (C25039 + C25038) * C50885) *
               C51200 +
           ((C25360 + C25361) * C50000 -
            ((C25362 + C25363) * C51143 + (C25364 + C25365) * C50007) +
            (C25366 + C25367) * C50885) *
               C24822) *
              C51022 * C50951 * C508 +
          (C25370 * C51199 +
           ((C25365 + C25364) * C50007 + (C25363 + C25362) * C51143 -
            (C25361 + C25360) * C50000 - (C25367 + C25366) * C50885) *
               C51200 +
           ((C49961 * C2688 + C51138 * C2691 + C49954 * C2689 +
             C50867 * C2692) *
                C50007 +
            (C49961 * C2693 + C51138 * C2697 + C49954 * C2694 +
             C50867 * C2698) *
                C51143 -
            (C49954 * C2690 + C50867 * C2695 + C49961 * C2689 +
             C51138 * C2692) *
                C50000 -
            (C49954 * C2696 + C50867 * C2699 + C49961 * C2694 +
             C51138 * C2698) *
                C50885) *
               C24822) *
              C51022 * C50951 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
               C121 +
           (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
               C109 -
           (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
               C122 -
           (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
               C110 +
           (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
               C123 +
           (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
               C111 -
           (C49954 * C129 + C50867 * C140 + C49961 * C128 + C51138 * C135) *
               C124 -
           (C49954 * C141 + C50867 * C150 + C49961 * C139 + C51138 * C149) *
               C112) *
              C51199 +
          ((C49961 * C263 + C51138 * C273 + C49954 * C259 + C50867 * C265) *
               C121 +
           (C49961 * C272 + C51138 * C280 + C49954 * C271 + C50867 * C279) *
               C109 -
           (C49954 * C260 + C50867 * C266 + C49961 * C259 + C51138 * C265) *
               C122 -
           (C49954 * C270 + C50867 * C278 + C49961 * C271 + C51138 * C279) *
               C110 +
           (C49961 * C260 + C51138 * C266 + C49954 * C261 + C50867 * C267) *
               C123 +
           (C49961 * C270 + C51138 * C278 + C49954 * C269 + C50867 * C277) *
               C111 -
           (C49954 * C262 + C50867 * C268 + C49961 * C261 + C51138 * C267) *
               C124 -
           (C49954 * C274 + C50867 * C281 + C49961 * C269 + C51138 * C277) *
               C112) *
              C51200 +
          ((C49961 * C512 + C51138 * C517 + C49954 * C513 + C50867 * C518) *
               C121 +
           (C49961 * C521 + C51138 * C527 + C49954 * C522 + C50867 * C528) *
               C109 -
           (C49954 * C514 + C50867 * C519 + C49961 * C513 + C51138 * C518) *
               C122 -
           (C49954 * C523 + C50867 * C529 + C49961 * C522 + C51138 * C528) *
               C110 +
           (C49961 * C514 + C51138 * C519 + C49954 * C515 + C50867 * C520) *
               C123 +
           (C49961 * C523 + C51138 * C529 + C49954 * C524 + C50867 * C530) *
               C111 -
           (C49954 * C516 + C50867 * C525 + C49961 * C515 + C51138 * C520) *
               C124 -
           (C49954 * C526 + C50867 * C531 + C49961 * C524 + C51138 * C530) *
               C112) *
              C24822) *
         C51022 * C50951 * C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C50007 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C51143 -
            (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                C50000 -
            (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                C50885) *
               C51199 +
           ((C25020 + C25021) * C50007 + (C25022 + C25023) * C51143 -
            (C25024 + C25025) * C50000 - (C25026 + C25027) * C50885) *
               C51200 +
           C25370 * C24822) *
              C51022 * C848 +
          (((C49961 * C383 + C51138 * C389 + C49954 * C384 + C50867 * C390) *
                C50000 -
            ((C49954 * C395 + C50867 * C403 + C49961 * C396 + C51138 * C404) *
                 C51143 +
             (C49954 * C383 + C50867 * C389 + C49961 * C387 + C51138 * C397) *
                 C50007) +
            (C49961 * C395 + C51138 * C403 + C49954 * C394 + C50867 * C402) *
                C50885) *
               C51199 +
           ((C49961 * C719 + C51138 * C727 + C49954 * C720 + C50867 * C728) *
                C50000 -
            ((C25663 + C25664) * C51143 + (C25665 + C25666) * C50007) +
            (C49961 * C731 + C51138 * C743 + C49954 * C732 + C50867 * C744) *
                C50885) *
               C51200 +
           ((C49961 * C724 + C51138 * C740 + C49954 * C723 + C50867 * C739) *
                C50000 -
            (C25671 * C51143 + C25672 * C50007) +
            (C49961 * C736 + C51138 * C748 + C49954 * C735 + C50867 * C747) *
                C50885) *
               C24822) *
              C51022 * C849 +
          (((C49961 * C851 + C51138 * C856 + C49954 * C852 + C50867 * C857) *
                C50007 +
            (C49961 * C860 + C51138 * C866 + C49954 * C861 + C50867 * C867) *
                C51143 -
            (C49954 * C853 + C50867 * C858 + C49961 * C852 + C51138 * C857) *
                C50000 -
            (C49954 * C862 + C50867 * C868 + C49961 * C861 + C51138 * C867) *
                C50885) *
               C51199 +
           ((C49961 * C972 + C51138 * C980 + C49954 * C971 + C50867 * C979) *
                C50007 +
            (C49961 * C976 + C51138 * C984 + C49954 * C975 + C50867 * C983) *
                C51143 -
            (C49954 * C970 + C50867 * C978 + C49961 * C971 + C51138 * C979) *
                C50000 -
            (C49954 * C974 + C50867 * C982 + C49961 * C975 + C51138 * C983) *
                C50885) *
               C51200 +
           ((C49961 * C3210 + C51138 * C3213 + C49954 * C3211 +
             C50867 * C3214) *
                C50007 +
            (C49961 * C3215 + C51138 * C3219 + C49954 * C3216 +
             C50867 * C3220) *
                C51143 -
            (C49954 * C3212 + C50867 * C3217 + C49961 * C3211 +
             C51138 * C3214) *
                C50000 -
            (C49954 * C3218 + C50867 * C3221 + C49961 * C3216 +
             C51138 * C3220) *
                C50885) *
               C24822) *
              C51022 * C850) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C603 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C50880) *
               C51199 +
           ((C25020 + C25021) * C603 + (C25022 + C25023) * C50880) * C51200 +
           C25481 * C24822) *
              C51022 * C50951 * C599 -
          (C25488 * C24822 +
           ((C25035 + C25034) * C50880 + (C25033 + C25032) * C603) * C51200 +
           ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C51199) *
              C51022 * C50951 * C600 +
          (C25481 * C51199 +
           ((C25365 + C25364) * C603 + (C25363 + C25362) * C50880) * C51200 +
           ((C25484 + C25485) * C603 + (C25486 + C25487) * C50880) * C24822) *
              C51022 * C50951 * C601 -
          (((C49954 * C2835 + C50867 * C2839 + C49961 * C2836 +
             C51138 * C2840) *
                C50880 +
            (C49954 * C2833 + C50867 * C2837 + C49961 * C2834 +
             C51138 * C2838) *
                C603) *
               C24822 +
           ((C25487 + C25486) * C50880 + (C25485 + C25484) * C603) * C51200 +
           C25488 * C51199) *
              C51022 * C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C256 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C251 -
            (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                C257 -
            (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                C252 +
            (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                C258 +
            (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                C253) *
               C51199 +
           ((C25020 + C25021) * C256 + (C25022 + C25023) * C251 -
            (C25024 + C25025) * C257 - (C25026 + C25027) * C252 +
            (C25028 + C25029) * C258 + (C25030 + C25031) * C253) *
               C51200 +
           ((C25032 + C25033) * C256 + (C25034 + C25035) * C251 -
            (C25036 + C25037) * C257 - (C25038 + C25039) * C252 +
            (C25040 + C25041) * C258 + (C25042 + C25043) * C253) *
               C24822) *
              C51022 * C50951 * C51151 +
          (((C25025 + C25024) * C257 -
            ((C25023 + C25022) * C251 + (C25021 + C25020) * C256) +
            (C25027 + C25026) * C252 - (C25029 + C25028) * C258 -
            (C25031 + C25030) * C253) *
               C51199 +
           ((C25037 + C25036) * C257 -
            ((C25035 + C25034) * C251 + (C25033 + C25032) * C256) +
            (C25039 + C25038) * C252 - (C25041 + C25040) * C258 -
            (C25043 + C25042) * C253) *
               C51200 +
           ((C49961 * C606 + C51138 * C614 + C49954 * C605 + C50867 * C613) *
                C257 -
            ((C49954 * C610 + C50867 * C618 + C49961 * C611 + C51138 * C619) *
                 C251 +
             (C49954 * C606 + C50867 * C614 + C49961 * C607 + C51138 * C615) *
                 C256) +
            (C49961 * C610 + C51138 * C618 + C49954 * C609 + C50867 * C617) *
                C252 -
            (C49954 * C604 + C50867 * C612 + C49961 * C605 + C51138 * C613) *
                C258 -
            (C49954 * C608 + C50867 * C616 + C49961 * C609 + C51138 * C617) *
                C253) *
               C24822) *
              C51022 * C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C603 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C50880) *
                C51199 +
            ((C25020 + C25021) * C603 + (C25022 + C25023) * C50880) * C51200 +
            C25481 * C24822) *
               C51022 * C848 -
           (C25675 * C24822 +
            ((C25663 + C25664) * C50880 + (C25665 + C25666) * C603) * C51200 +
            ((C49954 * C395 + C50867 * C403 + C49961 * C396 + C51138 * C404) *
                 C50880 +
             (C49954 * C383 + C50867 * C389 + C49961 * C387 + C51138 * C397) *
                 C603) *
                C51199) *
               C51022 * C849 +
           (((C49961 * C851 + C51138 * C856 + C49954 * C852 + C50867 * C857) *
                 C603 +
             (C49961 * C860 + C51138 * C866 + C49954 * C861 + C50867 * C867) *
                 C50880) *
                C51199 +
            ((C25984 + C25985) * C603 + (C25986 + C25987) * C50880) * C51200 +
            ((C25988 + C25989) * C603 + (C25990 + C25991) * C50880) * C24822) *
               C51022 * C850) *
              C51151 +
          ((((C25666 + C25665) * C603 + (C25664 + C25663) * C50880) * C51199 +
            ((C25662 + C25661) * C603 + (C25660 + C25659) * C50880) * C51200 +
            ((C25667 + C25668) * C603 + (C25669 + C25670) * C50880) * C24822) *
               C51022 * C849 -
           (C25488 * C24822 +
            ((C25035 + C25034) * C50880 + (C25033 + C25032) * C603) * C51200 +
            ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C51199) *
               C51022 * C848 -
           (((C49954 * C3370 + C50867 * C3374 + C49961 * C3371 +
              C51138 * C3375) *
                 C50880 +
             (C49954 * C3368 + C50867 * C3372 + C49961 * C3369 +
              C51138 * C3373) *
                 C603) *
                C24822 +
            ((C25991 + C25990) * C50880 + (C25989 + C25988) * C603) * C51200 +
            ((C25987 + C25986) * C50880 + (C25985 + C25984) * C603) * C51199) *
               C51022 * C850) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C603 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C50880) *
                C51199 +
            ((C25020 + C25021) * C603 + (C25022 + C25023) * C50880) * C51200 +
            C25481 * C24822) *
               C51022 * C51152 -
           (C25675 * C24822 +
            ((C25663 + C25664) * C50880 + (C25665 + C25666) * C603) * C51200 +
            ((C49954 * C395 + C50867 * C403 + C49961 * C396 + C51138 * C404) *
                 C50880 +
             (C49954 * C383 + C50867 * C389 + C49961 * C387 + C51138 * C397) *
                 C603) *
                C51199) *
               C51022 * C50963) *
              C507 +
          ((((C25666 + C25665) * C603 + (C25664 + C25663) * C50880) * C51199 +
            ((C25662 + C25661) * C603 + (C25660 + C25659) * C50880) * C51200 +
            ((C25667 + C25668) * C603 + (C25669 + C25670) * C50880) * C24822) *
               C51022 * C50963 -
           (C25488 * C24822 +
            ((C25035 + C25034) * C50880 + (C25033 + C25032) * C603) * C51200 +
            ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C51199) *
               C51022 * C51152) *
              C508 +
          ((C25481 * C51199 +
            ((C25365 + C25364) * C603 + (C25363 + C25362) * C50880) * C51200 +
            ((C25484 + C25485) * C603 + (C25486 + C25487) * C50880) * C24822) *
               C51022 * C51152 -
           (((C49954 * C3015 + C50867 * C3021 + C49961 * C3016 +
              C51138 * C3022) *
                 C50880 +
             (C49954 * C3009 + C50867 * C3017 + C49961 * C3010 +
              C51138 * C3018) *
                 C603) *
                C24822 +
            ((C25670 + C25669) * C50880 + (C25668 + C25667) * C603) * C51200 +
            C25675 * C51199) *
               C51022 * C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C256 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C251 -
            (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                C257 -
            (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                C252 +
            (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                C258 +
            (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                C253) *
               C51199 +
           ((C25020 + C25021) * C256 + (C25022 + C25023) * C251 -
            (C25024 + C25025) * C257 - (C25026 + C25027) * C252 +
            (C25028 + C25029) * C258 + (C25030 + C25031) * C253) *
               C51200 +
           ((C25032 + C25033) * C256 + (C25034 + C25035) * C251 -
            (C25036 + C25037) * C257 - (C25038 + C25039) * C252 +
            (C25040 + C25041) * C258 + (C25042 + C25043) * C253) *
               C24822) *
              C51022 * C51152 +
          (((C49961 * C383 + C51138 * C389 + C49954 * C384 + C50867 * C390) *
                C257 -
            ((C49954 * C395 + C50867 * C403 + C49961 * C396 + C51138 * C404) *
                 C251 +
             (C49954 * C383 + C50867 * C389 + C49961 * C387 + C51138 * C397) *
                 C256) +
            (C49961 * C395 + C51138 * C403 + C49954 * C394 + C50867 * C402) *
                C252 -
            (C49954 * C385 + C50867 * C391 + C49961 * C384 + C51138 * C390) *
                C258 -
            (C49954 * C393 + C50867 * C401 + C49961 * C394 + C51138 * C402) *
                C253) *
               C51199 +
           ((C49961 * C719 + C51138 * C727 + C49954 * C720 + C50867 * C728) *
                C257 -
            ((C49954 * C731 + C50867 * C743 + C49961 * C730 + C51138 * C742) *
                 C251 +
             (C49954 * C719 + C50867 * C727 + C49961 * C718 + C51138 * C726) *
                 C256) +
            (C49961 * C731 + C51138 * C743 + C49954 * C732 + C50867 * C744) *
                C252 -
            (C49954 * C721 + C50867 * C729 + C49961 * C720 + C51138 * C728) *
                C258 -
            (C49954 * C733 + C50867 * C745 + C49961 * C732 + C51138 * C744) *
                C253) *
               C51200 +
           ((C49961 * C724 + C51138 * C740 + C49954 * C723 + C50867 * C739) *
                C257 -
            ((C49954 * C736 + C50867 * C748 + C49961 * C737 + C51138 * C749) *
                 C251 +
             (C49954 * C724 + C50867 * C740 + C49961 * C725 + C51138 * C741) *
                 C256) +
            (C49961 * C736 + C51138 * C748 + C49954 * C735 + C50867 * C747) *
                C252 -
            (C49954 * C722 + C50867 * C738 + C49961 * C723 + C51138 * C739) *
                C258 -
            (C49954 * C734 + C50867 * C746 + C49961 * C735 + C51138 * C747) *
                C253) *
               C24822) *
              C51022 * C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C603 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C50880) *
               C51199 +
           ((C25020 + C25021) * C603 + (C25022 + C25023) * C50880) * C51200 +
           C25481 * C24822) *
              C51022 * C1051 -
          (C25675 * C24822 +
           ((C25663 + C25664) * C50880 + (C25665 + C25666) * C603) * C51200 +
           ((C49954 * C395 + C50867 * C403 + C49961 * C396 + C51138 * C404) *
                C50880 +
            (C49954 * C383 + C50867 * C389 + C49961 * C387 + C51138 * C397) *
                C603) *
               C51199) *
              C51022 * C1052 +
          (((C49961 * C851 + C51138 * C856 + C49954 * C852 + C50867 * C857) *
                C603 +
            (C49961 * C860 + C51138 * C866 + C49954 * C861 + C50867 * C867) *
                C50880) *
               C51199 +
           ((C25984 + C25985) * C603 + (C25986 + C25987) * C50880) * C51200 +
           ((C25988 + C25989) * C603 + (C25990 + C25991) * C50880) * C24822) *
              C51022 * C1053 -
          (((C49954 * C3502 + C50867 * C3510 + C49961 * C3503 +
             C51138 * C3511) *
                C50880 +
            (C49954 * C3498 + C50867 * C3504 + C49961 * C3499 +
             C51138 * C3505) *
                C603) *
               C24822 +
           ((C49954 * C3506 + C50867 * C3512 + C49961 * C3507 +
             C51138 * C3513) *
                C50880 +
            (C49954 * C3500 + C50867 * C3508 + C49961 * C3501 +
             C51138 * C3509) *
                C603) *
               C51200 +
           ((C49954 * C1061 + C50867 * C1069 + C49961 * C1062 +
             C51138 * C1070) *
                C50880 +
            (C49954 * C1057 + C50867 * C1065 + C49961 * C1058 +
             C51138 * C1066) *
                C603) *
               C51199) *
              C51022 * C1054) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C1174 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C51196 -
            (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                C1175 -
            (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                C51181 +
            (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                C1176 +
            (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                C1171) *
               C51199 +
           ((C25020 + C25021) * C1174 + (C25022 + C25023) * C51196 -
            (C25024 + C25025) * C1175 - (C25026 + C25027) * C51181 +
            (C25028 + C25029) * C1176 + (C25030 + C25031) * C1171) *
               C51200 +
           (C25336 * C1174 + C25337 * C51196 - C25338 * C1175 -
            C25339 * C51181 + (C25040 + C25041) * C1176 +
            (C25042 + C25043) * C1171) *
               C24822) *
              C51022 * C1514 +
          (((C49961 * C383 + C51138 * C389 + C49954 * C384 + C50867 * C390) *
                C1175 -
            ((C49954 * C395 + C50867 * C403 + C49961 * C396 + C51138 * C404) *
                 C51196 +
             (C49954 * C383 + C50867 * C389 + C49961 * C387 + C51138 * C397) *
                 C1174) +
            (C49961 * C395 + C51138 * C403 + C49954 * C394 + C50867 * C402) *
                C51181 -
            (C49954 * C385 + C50867 * C391 + C49961 * C384 + C51138 * C390) *
                C1176 -
            (C49954 * C393 + C50867 * C401 + C49961 * C394 + C51138 * C402) *
                C1171) *
               C51199 +
           ((C26599 + C26600) * C1175 -
            ((C25663 + C25664) * C51196 + (C25665 + C25666) * C1174) +
            (C26601 + C26602) * C51181 -
            (C49954 * C721 + C50867 * C729 + C49961 * C720 + C51138 * C728) *
                C1176 -
            (C49954 * C733 + C50867 * C745 + C49961 * C732 + C51138 * C744) *
                C1171) *
               C51200 +
           ((C26603 + C26604) * C1175 - (C25671 * C51196 + C25672 * C1174) +
            (C26605 + C26606) * C51181 -
            (C49954 * C722 + C50867 * C738 + C49961 * C723 + C51138 * C739) *
                C1176 -
            (C49954 * C734 + C50867 * C746 + C49961 * C735 + C51138 * C747) *
                C1171) *
               C24822) *
              C51022 * C50963) *
         C50925) /
        (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C1280 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C1275 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C1281 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C50885) *
                C51199 +
            ((C25020 + C25021) * C1280 + (C25022 + C25023) * C1275 -
             (C25024 + C25025) * C1281 - (C25026 + C25027) * C50885) *
                C51200 +
            C26388 * C24822) *
               C51022 * C1514 +
           (((C49961 * C383 + C51138 * C389 + C49954 * C384 + C50867 * C390) *
                 C1281 -
             ((C49954 * C395 + C50867 * C403 + C49961 * C396 + C51138 * C404) *
                  C1275 +
              (C49954 * C383 + C50867 * C389 + C49961 * C387 + C51138 * C397) *
                  C1280) +
             (C49961 * C395 + C51138 * C403 + C49954 * C394 + C50867 * C402) *
                 C50885) *
                C51199 +
            ((C26599 + C26600) * C1281 -
             ((C25663 + C25664) * C1275 + (C25665 + C25666) * C1280) +
             (C26601 + C26602) * C50885) *
                C51200 +
            ((C26603 + C26604) * C1281 - (C25671 * C1275 + C25672 * C1280) +
             (C26605 + C26606) * C50885) *
                C24822) *
               C51022 * C50963) *
              C51151 +
          ((((C25025 + C25024) * C1281 -
             ((C25023 + C25022) * C1275 + (C25021 + C25020) * C1280) +
             (C25027 + C25026) * C50885) *
                C51199 +
            ((C25037 + C25036) * C1281 -
             ((C25035 + C25034) * C1275 + (C25033 + C25032) * C1280) +
             (C25039 + C25038) * C50885) *
                C51200 +
            ((C25360 + C25361) * C1281 - (C25471 * C1275 + C25472 * C1280) +
             (C25366 + C25367) * C50885) *
                C24822) *
               C51022 * C1514 +
           (((C25666 + C25665) * C1280 + (C25664 + C25663) * C1275 -
             (C26600 + C26599) * C1281 - (C26602 + C26601) * C50885) *
                C51199 +
            ((C25662 + C25661) * C1280 + (C25660 + C25659) * C1275 -
             (C26604 + C26603) * C1281 - (C26606 + C26605) * C50885) *
                C51200 +
            ((C25667 + C25668) * C1280 + (C25669 + C25670) * C1275 -
             (C49954 * C4007 + C50867 * C4008 + C49961 * C3008 +
              C51138 * C3012) *
                 C1281 -
             (C49954 * C4009 + C50867 * C4010 + C49961 * C3014 +
              C51138 * C3020) *
                 C50885) *
                C24822) *
               C51022 * C50963) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C1280 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C1275 -
            (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                C1281 -
            (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                C50885) *
               C51199 +
           ((C25020 + C25021) * C1280 + (C25022 + C25023) * C1275 -
            (C25024 + C25025) * C1281 - (C25026 + C25027) * C50885) *
               C51200 +
           C26388 * C24822) *
              C51022 * C51198 +
          (((C49961 * C383 + C51138 * C389 + C49954 * C384 + C50867 * C390) *
                C1281 -
            ((C49954 * C395 + C50867 * C403 + C49961 * C396 + C51138 * C404) *
                 C1275 +
             (C49954 * C383 + C50867 * C389 + C49961 * C387 + C51138 * C397) *
                 C1280) +
            (C49961 * C395 + C51138 * C403 + C49954 * C394 + C50867 * C402) *
                C50885) *
               C51199 +
           ((C26599 + C26600) * C1281 -
            ((C25663 + C25664) * C1275 + (C25665 + C25666) * C1280) +
            (C26601 + C26602) * C50885) *
               C51200 +
           ((C26603 + C26604) * C1281 - (C25671 * C1275 + C25672 * C1280) +
            (C26605 + C26606) * C50885) *
               C24822) *
              C51022 * C51187 +
          (((C49961 * C851 + C51138 * C856 + C49954 * C852 + C50867 * C857) *
                C1280 +
            (C49961 * C860 + C51138 * C866 + C49954 * C861 + C50867 * C867) *
                C1275 -
            (C49954 * C853 + C50867 * C858 + C49961 * C852 + C51138 * C857) *
                C1281 -
            (C49954 * C862 + C50867 * C868 + C49961 * C861 + C51138 * C867) *
                C50885) *
               C51199 +
           ((C25984 + C25985) * C1280 + (C25986 + C25987) * C1275 -
            (C49954 * C970 + C50867 * C978 + C49961 * C971 + C51138 * C979) *
                C1281 -
            (C49954 * C974 + C50867 * C982 + C49961 * C975 + C51138 * C983) *
                C50885) *
               C51200 +
           ((C25988 + C25989) * C1280 + (C25990 + C25991) * C1275 -
            (C49954 * C3212 + C50867 * C3217 + C49961 * C3211 +
             C51138 * C3214) *
                C1281 -
            (C49954 * C3218 + C50867 * C3221 + C49961 * C3216 +
             C51138 * C3220) *
                C50885) *
               C24822) *
              C51022 * C1746) *
         C50925) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
               C121 +
           (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
               C109 -
           (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
               C122 -
           (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
               C110 +
           (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
               C123 +
           (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
               C111 -
           (C49954 * C129 + C50867 * C140 + C49961 * C128 + C51138 * C135) *
               C124 -
           (C49954 * C141 + C50867 * C150 + C49961 * C139 + C51138 * C149) *
               C112) *
              C51199 +
          ((C49961 * C263 + C51138 * C273 + C49954 * C259 + C50867 * C265) *
               C121 +
           (C49961 * C272 + C51138 * C280 + C49954 * C271 + C50867 * C279) *
               C109 -
           (C49954 * C260 + C50867 * C266 + C49961 * C259 + C51138 * C265) *
               C122 -
           (C49954 * C270 + C50867 * C278 + C49961 * C271 + C51138 * C279) *
               C110 +
           (C49961 * C260 + C51138 * C266 + C49954 * C261 + C50867 * C267) *
               C123 +
           (C49961 * C270 + C51138 * C278 + C49954 * C269 + C50867 * C277) *
               C111 -
           (C49954 * C262 + C50867 * C268 + C49961 * C261 + C51138 * C267) *
               C124 -
           (C49954 * C274 + C50867 * C281 + C49961 * C269 + C51138 * C277) *
               C112) *
              C51200 +
          ((C49961 * C512 + C51138 * C517 + C49954 * C513 + C50867 * C518) *
               C121 +
           (C49961 * C521 + C51138 * C527 + C49954 * C522 + C50867 * C528) *
               C109 -
           (C49954 * C514 + C50867 * C519 + C49961 * C513 + C51138 * C518) *
               C122 -
           (C49954 * C523 + C50867 * C529 + C49961 * C522 + C51138 * C528) *
               C110 +
           (C49961 * C514 + C51138 * C519 + C49954 * C515 + C50867 * C520) *
               C123 +
           (C49961 * C523 + C51138 * C529 + C49954 * C524 + C50867 * C530) *
               C111 -
           (C49954 * C516 + C50867 * C525 + C49961 * C515 + C51138 * C520) *
               C124 -
           (C49954 * C526 + C50867 * C531 + C49961 * C524 + C51138 * C530) *
               C112) *
              C24822) *
         C51022 * C50951 * C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C50007 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C51143 -
            (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                C50000 -
            (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                C50885) *
               C51199 +
           ((C25020 + C25021) * C50007 + (C25022 + C25023) * C51143 -
            (C25024 + C25025) * C50000 - (C25026 + C25027) * C50885) *
               C51200 +
           C25370 * C24822) *
              C51022 * C50951 * C507 +
          (((C25025 + C25024) * C50000 -
            ((C25023 + C25022) * C51143 + (C25021 + C25020) * C50007) +
            (C25027 + C25026) * C50885) *
               C51199 +
           ((C25037 + C25036) * C50000 -
            ((C25035 + C25034) * C51143 + (C25033 + C25032) * C50007) +
            (C25039 + C25038) * C50885) *
               C51200 +
           ((C25360 + C25361) * C50000 -
            ((C25362 + C25363) * C51143 + (C25364 + C25365) * C50007) +
            (C25366 + C25367) * C50885) *
               C24822) *
              C51022 * C50951 * C508 +
          (C25370 * C51199 +
           ((C25365 + C25364) * C50007 + (C25363 + C25362) * C51143 -
            (C25361 + C25360) * C50000 - (C25367 + C25366) * C50885) *
               C51200 +
           ((C49961 * C2688 + C51138 * C2691 + C49954 * C2689 +
             C50867 * C2692) *
                C50007 +
            (C49961 * C2693 + C51138 * C2697 + C49954 * C2694 +
             C50867 * C2698) *
                C51143 -
            (C49954 * C2690 + C50867 * C2695 + C49961 * C2689 +
             C51138 * C2692) *
                C50000 -
            (C49954 * C2696 + C50867 * C2699 + C49961 * C2694 +
             C51138 * C2698) *
                C50885) *
               C24822) *
              C51022 * C50951 * C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C256 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C251 -
            (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                C257 -
            (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                C252 +
            (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                C258 +
            (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                C253) *
               C51199 +
           ((C25020 + C25021) * C256 + (C25022 + C25023) * C251 -
            (C25024 + C25025) * C257 - (C25026 + C25027) * C252 +
            (C25028 + C25029) * C258 + (C25030 + C25031) * C253) *
               C51200 +
           ((C25032 + C25033) * C256 + (C25034 + C25035) * C251 -
            (C25036 + C25037) * C257 - (C25038 + C25039) * C252 +
            (C25040 + C25041) * C258 + (C25042 + C25043) * C253) *
               C24822) *
              C51022 * C50951 * C51151 +
          (((C25025 + C25024) * C257 -
            ((C25023 + C25022) * C251 + (C25021 + C25020) * C256) +
            (C25027 + C25026) * C252 - (C25029 + C25028) * C258 -
            (C25031 + C25030) * C253) *
               C51199 +
           ((C25037 + C25036) * C257 -
            ((C25035 + C25034) * C251 + (C25033 + C25032) * C256) +
            (C25039 + C25038) * C252 - (C25041 + C25040) * C258 -
            (C25043 + C25042) * C253) *
               C51200 +
           ((C49961 * C606 + C51138 * C614 + C49954 * C605 + C50867 * C613) *
                C257 -
            ((C49954 * C610 + C50867 * C618 + C49961 * C611 + C51138 * C619) *
                 C251 +
             (C49954 * C606 + C50867 * C614 + C49961 * C607 + C51138 * C615) *
                 C256) +
            (C49961 * C610 + C51138 * C618 + C49954 * C609 + C50867 * C617) *
                C252 -
            (C49954 * C604 + C50867 * C612 + C49961 * C605 + C51138 * C613) *
                C258 -
            (C49954 * C608 + C50867 * C616 + C49961 * C609 + C51138 * C617) *
                C253) *
               C24822) *
              C51022 * C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C603 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C50880) *
               C51199 +
           ((C25020 + C25021) * C603 + (C25022 + C25023) * C50880) * C51200 +
           C25481 * C24822) *
              C51022 * C50951 * C599 -
          (C25488 * C24822 +
           ((C25035 + C25034) * C50880 + (C25033 + C25032) * C603) * C51200 +
           ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C51199) *
              C51022 * C50951 * C600 +
          (C25481 * C51199 +
           ((C25365 + C25364) * C603 + (C25363 + C25362) * C50880) * C51200 +
           ((C25484 + C25485) * C603 + (C25486 + C25487) * C50880) * C24822) *
              C51022 * C50951 * C601 -
          (((C49954 * C2835 + C50867 * C2839 + C49961 * C2836 +
             C51138 * C2840) *
                C50880 +
            (C49954 * C2833 + C50867 * C2837 + C49961 * C2834 +
             C51138 * C2838) *
                C603) *
               C24822 +
           ((C25487 + C25486) * C50880 + (C25485 + C25484) * C603) * C51200 +
           C25488 * C51199) *
              C51022 * C50951 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C256 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C251 -
            (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                C257 -
            (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                C252 +
            (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                C258 +
            (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                C253) *
               C51199 +
           ((C25020 + C25021) * C256 + (C25022 + C25023) * C251 -
            (C25024 + C25025) * C257 - (C25026 + C25027) * C252 +
            (C25028 + C25029) * C258 + (C25030 + C25031) * C253) *
               C51200 +
           ((C25032 + C25033) * C256 + (C25034 + C25035) * C251 -
            (C25036 + C25037) * C257 - (C25038 + C25039) * C252 +
            (C25040 + C25041) * C258 + (C25042 + C25043) * C253) *
               C24822) *
              C51022 * C51152 +
          (((C49961 * C383 + C51138 * C389 + C49954 * C384 + C50867 * C390) *
                C257 -
            ((C49954 * C395 + C50867 * C403 + C49961 * C396 + C51138 * C404) *
                 C251 +
             (C49954 * C383 + C50867 * C389 + C49961 * C387 + C51138 * C397) *
                 C256) +
            (C49961 * C395 + C51138 * C403 + C49954 * C394 + C50867 * C402) *
                C252 -
            (C49954 * C385 + C50867 * C391 + C49961 * C384 + C51138 * C390) *
                C258 -
            (C49954 * C393 + C50867 * C401 + C49961 * C394 + C51138 * C402) *
                C253) *
               C51199 +
           ((C49961 * C719 + C51138 * C727 + C49954 * C720 + C50867 * C728) *
                C257 -
            ((C49954 * C731 + C50867 * C743 + C49961 * C730 + C51138 * C742) *
                 C251 +
             (C49954 * C719 + C50867 * C727 + C49961 * C718 + C51138 * C726) *
                 C256) +
            (C49961 * C731 + C51138 * C743 + C49954 * C732 + C50867 * C744) *
                C252 -
            (C49954 * C721 + C50867 * C729 + C49961 * C720 + C51138 * C728) *
                C258 -
            (C49954 * C733 + C50867 * C745 + C49961 * C732 + C51138 * C744) *
                C253) *
               C51200 +
           ((C49961 * C724 + C51138 * C740 + C49954 * C723 + C50867 * C739) *
                C257 -
            ((C49954 * C736 + C50867 * C748 + C49961 * C737 + C51138 * C749) *
                 C251 +
             (C49954 * C724 + C50867 * C740 + C49961 * C725 + C51138 * C741) *
                 C256) +
            (C49961 * C736 + C51138 * C748 + C49954 * C735 + C50867 * C747) *
                C252 -
            (C49954 * C722 + C50867 * C738 + C49961 * C723 + C51138 * C739) *
                C258 -
            (C49954 * C734 + C50867 * C746 + C49961 * C735 + C51138 * C747) *
                C253) *
               C24822) *
              C51022 * C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C603 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C50880) *
                C51199 +
            ((C25020 + C25021) * C603 + (C25022 + C25023) * C50880) * C51200 +
            C25481 * C24822) *
               C51022 * C51152 -
           (C25675 * C24822 +
            ((C25663 + C25664) * C50880 + (C25665 + C25666) * C603) * C51200 +
            ((C49954 * C395 + C50867 * C403 + C49961 * C396 + C51138 * C404) *
                 C50880 +
             (C49954 * C383 + C50867 * C389 + C49961 * C387 + C51138 * C397) *
                 C603) *
                C51199) *
               C51022 * C50963) *
              C507 +
          ((((C25666 + C25665) * C603 + (C25664 + C25663) * C50880) * C51199 +
            ((C25662 + C25661) * C603 + (C25660 + C25659) * C50880) * C51200 +
            ((C25667 + C25668) * C603 + (C25669 + C25670) * C50880) * C24822) *
               C51022 * C50963 -
           (C25488 * C24822 +
            ((C25035 + C25034) * C50880 + (C25033 + C25032) * C603) * C51200 +
            ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C51199) *
               C51022 * C51152) *
              C508 +
          ((C25481 * C51199 +
            ((C25365 + C25364) * C603 + (C25363 + C25362) * C50880) * C51200 +
            ((C25484 + C25485) * C603 + (C25486 + C25487) * C50880) * C24822) *
               C51022 * C51152 -
           (((C49954 * C3015 + C50867 * C3021 + C49961 * C3016 +
              C51138 * C3022) *
                 C50880 +
             (C49954 * C3009 + C50867 * C3017 + C49961 * C3010 +
              C51138 * C3018) *
                 C603) *
                C24822 +
            ((C25670 + C25669) * C50880 + (C25668 + C25667) * C603) * C51200 +
            C25675 * C51199) *
               C51022 * C50963) *
              C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C1174 +
             (C19835 * C136 + C50862 * C146) * C51196 -
             (C19835 * C126 + C50862 * C133) * C1175 -
             (C19835 * C137 + C50862 * C147) * C51181 +
             (C19835 * C127 + C50862 * C134) * C1176 +
             (C19835 * C138 + C50862 * C148) * C1171) *
                C51199 +
            (C20855 + C20856 - C20857 - C20858 + C20859 + C20860) * C51200 +
            (C20861 + C20862 - C20863 - C20864 + C20865 + C20866) * C24822) *
               C51167 +
           ((C23864 + C23865 - C23866 - C23867 + C23868 + C23869) * C51199 +
            (C23334 + C23335 - C23336 - C23337 + C23338 + C23339) * C51200 +
            (C32568 + C32569 - C32570 - C32571 + C32572 + C32573) * C24822) *
               C51086) *
              C50951 * C1172 +
          (((C20857 - (C20856 + C20855) + C20858 - C20859 - C20860) * C51199 +
            (C20863 - (C20862 + C20861) + C20864 - C20865 - C20866) * C51200 +
            (C20869 - (C20868 + C20867) + C20870 - C20871 - C20872) * C24822) *
               C51167 +
           ((C23336 - (C23335 + C23334) + C23337 - C23338 - C23339) * C51199 +
            (C32570 - (C32569 + C32568) + C32571 - C32572 - C32573) * C51200 +
            (C21145 * C1175 - (C20445 * C51196 + C20446 * C1174) +
             C21146 * C51181 - (C19835 * C4007 + C50862 * C4008) * C1176 -
             (C19835 * C4009 + C50862 * C4010) * C1171) *
                C24822) *
               C51086) *
              C50951 * C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C1280 +
             (C19835 * C136 + C50862 * C146) * C1275 -
             (C19835 * C126 + C50862 * C133) * C1281 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C51199 +
            (C20971 + C20972 - C20973 - C20974) * C51200 + C20991 * C24822) *
               C51167 +
           ((C23694 + C23695 - C23696 - C23697) * C51199 + C23714 * C51200 +
            C32722 * C24822) *
               C51086) *
              C50951 * C51197 +
          (((C20973 - (C20972 + C20971) + C20974) * C51199 +
            (C20977 - (C20976 + C20975) + C20978) * C51200 +
            (C20981 - (C20980 + C20979) + C20982) * C24822) *
               C51167 +
           (C23716 * C51199 + (C21149 - (C21131 + C21132) + C21150) * C51200 +
            (C21151 - (C21137 + C21138) + C21152) * C24822) *
               C51086) *
              C50951 * C51184 +
          ((C20991 * C51199 + C20992 * C51200 +
            (C20985 + C20984 - C20983 - C20986) * C24822) *
               C51167 +
           (C32722 * C51199 + (C21138 + C21137 - C21151 - C21152) * C51200 +
            (C20451 * C1280 + C20452 * C1275 -
             (C19835 * C3009 + C50862 * C3017) * C1281 -
             (C19835 * C3015 + C50862 * C3021) * C50885) *
                C24822) *
               C51086) *
              C50951 * C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C1280 +
              (C19835 * C136 + C50862 * C146) * C1275 -
              (C19835 * C126 + C50862 * C133) * C1281 -
              (C19835 * C137 + C50862 * C147) * C50885) *
                 C51199 +
             (C20971 + C20972 - C20973 - C20974) * C51200 + C20991 * C24822) *
                C51167 +
            ((C23694 + C23695 - C23696 - C23697) * C51199 + C23714 * C51200 +
             C32722 * C24822) *
                C51086) *
               C51152 +
           (((C23696 - (C23695 + C23694) + C23697) * C51199 + C23716 * C51200 +
             C32919 * C24822) *
                C51167 +
            ((C23701 - (C23700 + C23699) + C23702) * C51199 + C23717 * C51200 +
             (C23496 - (C23497 + C23498) + C23499) * C24822) *
                C51086) *
               C50963) *
              C1172 +
          ((((C20973 - (C20972 + C20971) + C20974) * C51199 +
             (C20977 - (C20976 + C20975) + C20978) * C51200 +
             (C20981 - (C20980 + C20979) + C20982) * C24822) *
                C51167 +
            (C23716 * C51199 + C32919 * C51200 +
             (C21151 - (C21137 + C21138) + C21152) * C24822) *
                C51086) *
               C51152 +
           ((C23714 * C51199 + C32722 * C51200 +
             (C21138 + C21137 - C21151 - C21152) * C24822) *
                C51167 +
            (C23715 * C51199 + (C23498 + C23497 - C23496 - C23499) * C51200 +
             (C20679 * C1280 + C20680 * C1275 -
              (C19835 * C3368 + C50862 * C3372) * C1281 -
              (C19835 * C3370 + C50862 * C3374) * C50885) *
                 C24822) *
                C51086) *
               C50963) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C50007 +
              (C19835 * C136 + C50862 * C146) * C51143 -
              (C19835 * C126 + C50862 * C133) * C50000 -
              (C19835 * C137 + C50862 * C147) * C50885) *
                 C51199 +
             (C20203 + C20204 - C20205 - C20206) * C51200 + C20235 * C24822) *
                C51167 +
            ((C22862 + C22863 - C22864 - C22865) * C51199 + C24426 * C51200 +
             C31786 * C24822) *
                C51086) *
               C1514 +
           (((C22864 - (C22863 + C22862) + C22865) * C51199 + C24427 * C51200 +
             C33602 * C24822) *
                C51167 +
            ((C22868 - (C22867 + C22866) + C22869) * C51199 + C24428 * C51200 +
             (C22443 - (C22437 + C22438) + C22444) * C24822) *
                C51086) *
               C50963) *
              C1172 +
          ((((C20205 - (C20204 + C20203) + C20206) * C51199 +
             (C20209 - (C20208 + C20207) + C20210) * C51200 +
             (C20213 - (C20212 + C20211) + C20214) * C24822) *
                C51167 +
            (C24427 * C51199 + C33602 * C51200 +
             (C21617 - (C21618 + C21619) + C21620) * C24822) *
                C51086) *
               C1514 +
           ((C24426 * C51199 + C31786 * C51200 +
             (C21619 + C21618 - C21617 - C21620) * C24822) *
                C51167 +
            (C22894 * C51199 + (C22438 + C22437 - C22443 - C22444) * C51200 +
             (C20679 * C50007 + C20680 * C51143 -
              (C19835 * C3368 + C50862 * C3372) * C50000 -
              (C19835 * C3370 + C50862 * C3374) * C50885) *
                 C24822) *
                C51086) *
               C50963) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C603 +
              (C19835 * C136 + C50862 * C146) * C50880) *
                 C51199 +
             (C20307 + C20308) * C51200 + C20319 * C24822) *
                C51167 +
            ((C22689 + C22690) * C51199 + C22691 * C51200 + C22701 * C24822) *
                C51086) *
               C1514 -
           ((C22707 * C24822 + C22699 * C51200 + (C22693 + C22692) * C51199) *
                C51086 +
            (C20462 * C24822 + C22700 * C51200 + (C22690 + C22689) * C51199) *
                C51167) *
               C50963) *
              C51197 +
          (((C22691 * C51199 + C22701 * C51200 + C32031 * C24822) * C51167 +
            (C22694 * C51199 + C22702 * C51200 + (C20685 + C20686) * C24822) *
                C51086) *
               C50963 -
           ((C20461 * C24822 + C20462 * C51200 + C22700 * C51199) * C51086 +
            (C20322 * C24822 + (C20310 + C20309) * C51200 +
             (C20308 + C20307) * C51199) *
                C51167) *
               C1514) *
              C51184 +
          (((C20319 * C51199 + C20320 * C51200 + (C20314 + C20313) * C24822) *
                C51167 +
            (C22701 * C51199 + C32031 * C51200 + (C20459 + C20460) * C24822) *
                C51086) *
               C1514 -
           ((((C19835 * C20659 + C50862 * C20661) * C50880 +
              (C19835 * C20658 + C50862 * C20660) * C603) *
                 C24822 +
             (C20686 + C20685) * C51200 + C22707 * C51199) *
                C51086 +
            ((C20460 + C20459) * C24822 + C20461 * C51200 + C20462 * C51199) *
                C51167) *
               C50963) *
              C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C603 +
              (C19835 * C136 + C50862 * C146) * C50880) *
                 C51199 +
             (C20307 + C20308) * C51200 + C20319 * C24822) *
                C51167 +
            ((C22689 + C22690) * C51199 + C22691 * C51200 + C22701 * C24822) *
                C51086) *
               C51198 -
           ((C22707 * C24822 + C22699 * C51200 + (C22693 + C22692) * C51199) *
                C51086 +
            (C20462 * C24822 + C22700 * C51200 + (C22690 + C22689) * C51199) *
                C51167) *
               C51187 +
           ((C23055 * C51199 + C22694 * C51200 + C22702 * C24822) * C51167 +
            ((C23059 + C23058) * C51199 + C23060 * C51200 +
             (C22714 + C22715) * C24822) *
                C51086) *
               C1746) *
              C1172 +
          (((C22691 * C51199 + C22701 * C51200 + C32031 * C24822) * C51167 +
            (C22694 * C51199 + C22702 * C51200 + (C20685 + C20686) * C24822) *
                C51086) *
               C51187 -
           ((C20461 * C24822 + C20462 * C51200 + C22700 * C51199) * C51086 +
            (C20322 * C24822 + (C20310 + C20309) * C51200 +
             (C20308 + C20307) * C51199) *
                C51167) *
               C51198 -
           ((((C19835 * C20753 + C50862 * C20755) * C50880 +
              (C19835 * C20752 + C50862 * C20754) * C603) *
                 C24822 +
             (C22715 + C22714) * C51200 + C23057 * C51199) *
                C51086 +
            ((C20686 + C20685) * C24822 + C22707 * C51200 + C22699 * C51199) *
                C51167) *
               C1746) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C50007 +
             (C19835 * C136 + C50862 * C146) * C51143 -
             (C19835 * C126 + C50862 * C133) * C50000 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C51199 +
            (C20203 + C20204 - C20205 - C20206) * C51200 + C20235 * C24822) *
               C51167 +
           ((C22862 + C22863 - C22864 - C22865) * C51199 + C24426 * C51200 +
            C31786 * C24822) *
               C51086) *
              C50951 * C507 +
          (((C20205 - (C20204 + C20203) + C20206) * C51199 +
            (C20209 - (C20208 + C20207) + C20210) * C51200 +
            (C20213 - (C20212 + C20211) + C20214) * C24822) *
               C51167 +
           (C24427 * C51199 + (C21613 - (C21614 + C21615) + C21616) * C51200 +
            (C21617 - (C21618 + C21619) + C21620) * C24822) *
               C51086) *
              C50951 * C508 +
          ((C20235 * C51199 + C20236 * C51200 +
            (C20233 + C20232 - C20231 - C20234) * C24822) *
               C51167 +
           (C31786 * C51199 + (C21619 + C21618 - C21617 - C21620) * C51200 +
            (C20451 * C50007 + C20452 * C51143 -
             (C19835 * C3009 + C50862 * C3017) * C50000 -
             (C19835 * C3015 + C50862 * C3021) * C50885) *
                C24822) *
               C51086) *
              C50951 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C121 +
            (C19835 * C136 + C50862 * C146) * C109 -
            (C19835 * C126 + C50862 * C133) * C122 -
            (C19835 * C137 + C50862 * C147) * C110 +
            (C19835 * C127 + C50862 * C134) * C123 +
            (C19835 * C138 + C50862 * C148) * C111 -
            (C19835 * C128 + C50862 * C135) * C124 -
            (C19835 * C139 + C50862 * C149) * C112) *
               C51199 +
           (C19971 * C121 + C19972 * C109 - C19973 * C122 - C19974 * C110 +
            C19975 * C123 + C19976 * C111 -
            (C19835 * C261 + C50862 * C267) * C124 -
            (C19835 * C269 + C50862 * C277) * C112) *
               C51200 +
           (C19977 * C121 + C19978 * C109 - C19979 * C122 - C19980 * C110 +
            C19981 * C123 + C19982 * C111 -
            (C19835 * C515 + C50862 * C520) * C124 -
            (C19835 * C524 + C50862 * C530) * C112) *
               C24822) *
              C51167 +
          ((C22261 * C121 + C22262 * C109 - C22263 * C122 - C22264 * C110 +
            C22265 * C123 + C22266 * C111 -
            (C19835 * C385 + C50862 * C391) * C124 -
            (C19835 * C393 + C50862 * C401) * C112) *
               C51199 +
           (C20450 * C121 + C20449 * C109 - C21141 * C122 - C21142 * C110 +
            C22079 * C123 + C22080 * C111 -
            (C19835 * C721 + C50862 * C729) * C124 -
            (C19835 * C733 + C50862 * C745) * C112) *
               C51200 +
           (C20448 * C121 + C20447 * C109 - C21143 * C122 - C21144 * C110 +
            (C19835 * C723 + C50862 * C739) * C123 +
            (C19835 * C735 + C50862 * C747) * C111 -
            (C19835 * C722 + C50862 * C738) * C124 -
            (C19835 * C734 + C50862 * C746) * C112) *
               C24822) *
              C51086) *
         C50951 * C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C50007 +
             (C19835 * C136 + C50862 * C146) * C51143 -
             (C19835 * C126 + C50862 * C133) * C50000 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C51199 +
            (C20203 + C20204 - C20205 - C20206) * C51200 + C20235 * C24822) *
               C51167 +
           ((C22862 + C22863 - C22864 - C22865) * C51199 + C24426 * C51200 +
            C31786 * C24822) *
               C51086) *
              C848 +
          (((C22864 - (C22863 + C22862) + C22865) * C51199 + C24427 * C51200 +
            (C21613 - (C21614 + C21615) + C21616) * C24822) *
               C51167 +
           ((C22868 - (C22867 + C22866) + C22869) * C51199 + C24428 * C51200 +
            (C22443 - (C22437 + C22438) + C22444) * C24822) *
               C51086) *
              C849 +
          ((C22901 * C51199 + C22894 * C51200 +
            (C22438 + C22437 - C22443 - C22444) * C24822) *
               C51167 +
           ((C22897 + C22896 - C22895 - C22898) * C51199 +
            (C22882 + C22881 - C22899 - C22900) * C51200 +
            (C22710 * C50007 + C22711 * C51143 -
             (C19835 * C3498 + C50862 * C3504) * C50000 -
             (C19835 * C3502 + C50862 * C3510) * C50885) *
                C24822) *
               C51086) *
              C850) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C51199 +
            (C20307 + C20308) * C51200 + C20319 * C24822) *
               C51167 +
           ((C22689 + C22690) * C51199 + C22691 * C51200 + C22701 * C24822) *
               C51086) *
              C50951 * C599 -
          ((C20461 * C24822 + C20462 * C51200 + C22700 * C51199) * C51086 +
           (C20322 * C24822 + (C20310 + C20309) * C51200 +
            (C20308 + C20307) * C51199) *
               C51167) *
              C50951 * C600 +
          ((C20319 * C51199 + C20320 * C51200 + (C20314 + C20313) * C24822) *
               C51167 +
           (C22701 * C51199 + (C20454 + C20453) * C51200 +
            (C20459 + C20460) * C24822) *
               C51086) *
              C50951 * C601 -
          ((((C19835 * C20425 + C50862 * C20427) * C50880 +
             (C19835 * C20424 + C50862 * C20426) * C603) *
                C24822 +
            (C20460 + C20459) * C51200 + C20461 * C51199) *
               C51086 +
           ((C20326 + C20325) * C24822 + C20321 * C51200 + C20322 * C51199) *
               C51167) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C256 +
             (C19835 * C136 + C50862 * C146) * C251 -
             (C19835 * C126 + C50862 * C133) * C257 -
             (C19835 * C137 + C50862 * C147) * C252 +
             (C19835 * C127 + C50862 * C134) * C258 +
             (C19835 * C138 + C50862 * C148) * C253) *
                C51199 +
            (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C51200 +
            (C19995 + C19996 - C19997 - C19998 + C19999 + C20000) * C24822) *
               C51167 +
           ((C22273 + C22274 - C22275 - C22276 + C22277 + C22278) * C51199 +
            (C22061 + C22062 - C22063 - C22064 + C22085 + C22086) * C51200 +
            (C31480 + C31481 - C31482 - C31483 + C31490 + C31491) * C24822) *
               C51086) *
              C50951 * C51151 +
          (((C19991 - (C19990 + C19989) + C19992 - C19993 - C19994) * C51199 +
            (C19997 - (C19996 + C19995) + C19998 - C19999 - C20000) * C51200 +
            (C20003 - (C20002 + C20001) + C20004 - C20005 - C20006) * C24822) *
               C51167 +
           ((C22063 - (C22062 + C22061) + C22064 - C22085 - C22086) * C51199 +
            (C31482 - (C31481 + C31480) + C31483 - C31490 - C31491) * C51200 +
            (C21145 * C257 - (C20445 * C251 + C20446 * C256) + C21146 * C252 -
             (C19835 * C4007 + C50862 * C4008) * C258 -
             (C19835 * C4009 + C50862 * C4010) * C253) *
                C24822) *
               C51086) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C603 +
              (C19835 * C136 + C50862 * C146) * C50880) *
                 C51199 +
             (C20307 + C20308) * C51200 + C20319 * C24822) *
                C51167 +
            ((C22689 + C22690) * C51199 + C22691 * C51200 + C22701 * C24822) *
                C51086) *
               C848 -
           ((C22707 * C24822 + C22699 * C51200 + (C22693 + C22692) * C51199) *
                C51086 +
            (C20462 * C24822 + C22700 * C51200 + (C22690 + C22689) * C51199) *
                C51167) *
               C849 +
           ((C23055 * C51199 + C22694 * C51200 + C22702 * C24822) * C51167 +
            ((C23059 + C23058) * C51199 + C23060 * C51200 +
             (C22714 + C22715) * C24822) *
                C51086) *
               C850) *
              C51151 +
          (((C22691 * C51199 + C22701 * C51200 + C32031 * C24822) * C51167 +
            (C22694 * C51199 + C22702 * C51200 + (C20685 + C20686) * C24822) *
                C51086) *
               C849 -
           ((C20461 * C24822 + C20462 * C51200 + C22700 * C51199) * C51086 +
            (C20322 * C24822 + (C20310 + C20309) * C51200 +
             (C20308 + C20307) * C51199) *
                C51167) *
               C848 -
           ((((C19835 * C20753 + C50862 * C20755) * C50880 +
              (C19835 * C20752 + C50862 * C20754) * C603) *
                 C24822 +
             (C22715 + C22714) * C51200 + C23057 * C51199) *
                C51086 +
            ((C20686 + C20685) * C24822 + C22707 * C51200 + C22699 * C51199) *
                C51167) *
               C850) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C603 +
              (C19835 * C136 + C50862 * C146) * C50880) *
                 C51199 +
             (C20307 + C20308) * C51200 + C20319 * C24822) *
                C51167 +
            ((C22689 + C22690) * C51199 + C22691 * C51200 + C22701 * C24822) *
                C51086) *
               C51152 -
           ((C22707 * C24822 + C22699 * C51200 + (C22693 + C22692) * C51199) *
                C51086 +
            (C20462 * C24822 + C22700 * C51200 + (C22690 + C22689) * C51199) *
                C51167) *
               C50963) *
              C507 +
          (((C22691 * C51199 + C22701 * C51200 + C32031 * C24822) * C51167 +
            (C22694 * C51199 + C22702 * C51200 + (C20685 + C20686) * C24822) *
                C51086) *
               C50963 -
           ((C20461 * C24822 + C20462 * C51200 + C22700 * C51199) * C51086 +
            (C20322 * C24822 + (C20310 + C20309) * C51200 +
             (C20308 + C20307) * C51199) *
                C51167) *
               C51152) *
              C508 +
          (((C20319 * C51199 + C20320 * C51200 + (C20314 + C20313) * C24822) *
                C51167 +
            (C22701 * C51199 + C32031 * C51200 + (C20459 + C20460) * C24822) *
                C51086) *
               C51152 -
           ((((C19835 * C20659 + C50862 * C20661) * C50880 +
              (C19835 * C20658 + C50862 * C20660) * C603) *
                 C24822 +
             (C20686 + C20685) * C51200 + C22707 * C51199) *
                C51086 +
            ((C20460 + C20459) * C24822 + C20461 * C51200 + C20462 * C51199) *
                C51167) *
               C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C256 +
             (C19835 * C136 + C50862 * C146) * C251 -
             (C19835 * C126 + C50862 * C133) * C257 -
             (C19835 * C137 + C50862 * C147) * C252 +
             (C19835 * C127 + C50862 * C134) * C258 +
             (C19835 * C138 + C50862 * C148) * C253) *
                C51199 +
            (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C51200 +
            (C19995 + C19996 - C19997 - C19998 + C19999 + C20000) * C24822) *
               C51167 +
           ((C22273 + C22274 - C22275 - C22276 + C22277 + C22278) * C51199 +
            (C22061 + C22062 - C22063 - C22064 + C22085 + C22086) * C51200 +
            (C31480 + C31481 - C31482 - C31483 + C31490 + C31491) * C24822) *
               C51086) *
              C51152 +
          (((C22275 - (C22274 + C22273) + C22276 - C22277 - C22278) * C51199 +
            (C22063 - (C22062 + C22061) + C22064 - C22085 - C22086) * C51200 +
            (C31482 - (C31481 + C31480) + C31483 - C31490 - C31491) * C24822) *
               C51167 +
           ((C22281 - (C22280 + C22279) + C22282 - C22283 - C22284) * C51199 +
            (C22087 - (C22070 + C22069) + C22088 - C22089 - C22090) * C51200 +
            (C22441 * C257 - (C20678 * C251 + C20677 * C256) + C22442 * C252 -
             (C19835 * C3212 + C50862 * C3217) * C258 -
             (C19835 * C3218 + C50862 * C3221) * C253) *
                C24822) *
               C51086) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C51199 +
            (C20307 + C20308) * C51200 + C20319 * C24822) *
               C51167 +
           ((C22689 + C22690) * C51199 + C22691 * C51200 + C22701 * C24822) *
               C51086) *
              C1051 -
          ((C22707 * C24822 + C22699 * C51200 + (C22693 + C22692) * C51199) *
               C51086 +
           (C20462 * C24822 + C22700 * C51200 + (C22690 + C22689) * C51199) *
               C51167) *
              C1052 +
          ((C23055 * C51199 + C22694 * C51200 + C22702 * C24822) * C51167 +
           ((C23059 + C23058) * C51199 + C23060 * C51200 +
            (C22714 + C22715) * C24822) *
               C51086) *
              C1053 -
          ((((C19835 * C23051 + C50862 * C23053) * C50880 +
             (C19835 * C23050 + C50862 * C23052) * C603) *
                C24822 +
            (C23073 + C23072) * C51200 + (C23187 + C23186) * C51199) *
               C51086 +
           ((C22715 + C22714) * C24822 + C23057 * C51200 + C23177 * C51199) *
               C51167) *
              C1054) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C1174 +
             (C19835 * C136 + C50862 * C146) * C51196 -
             (C19835 * C126 + C50862 * C133) * C1175 -
             (C19835 * C137 + C50862 * C147) * C51181 +
             (C19835 * C127 + C50862 * C134) * C1176 +
             (C19835 * C138 + C50862 * C148) * C1171) *
                C51199 +
            (C20855 + C20856 - C20857 - C20858 + C20859 + C20860) * C51200 +
            (C20861 + C20862 - C20863 - C20864 + C20865 + C20866) * C24822) *
               C51167 +
           ((C23864 + C23865 - C23866 - C23867 + C23868 + C23869) * C51199 +
            (C23334 + C23335 - C23336 - C23337 + C23338 + C23339) * C51200 +
            (C32568 + C32569 - C32570 - C32571 + C32572 + C32573) * C24822) *
               C51086) *
              C1514 +
          (((C23866 - (C23865 + C23864) + C23867 - C23868 - C23869) * C51199 +
            (C23336 - (C23335 + C23334) + C23337 - C23338 - C23339) * C51200 +
            (C32570 - (C32569 + C32568) + C32571 - C32572 - C32573) * C24822) *
               C51167 +
           ((C23872 - (C23871 + C23870) + C23873 - C23874 - C23875) * C51199 +
            (C23342 - (C23341 + C23340) + C23343 - C23344 - C23345) * C51200 +
            (C22441 * C1175 - (C20678 * C51196 + C20677 * C1174) +
             C22442 * C51181 - (C19835 * C3212 + C50862 * C3217) * C1176 -
             (C19835 * C3218 + C50862 * C3221) * C1171) *
                C24822) *
               C51086) *
              C50963) *
         C50925) /
        (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C1280 +
              (C19835 * C136 + C50862 * C146) * C1275 -
              (C19835 * C126 + C50862 * C133) * C1281 -
              (C19835 * C137 + C50862 * C147) * C50885) *
                 C51199 +
             (C20971 + C20972 - C20973 - C20974) * C51200 + C20991 * C24822) *
                C51167 +
            ((C23694 + C23695 - C23696 - C23697) * C51199 + C23714 * C51200 +
             C32722 * C24822) *
                C51086) *
               C1514 +
           (((C23696 - (C23695 + C23694) + C23697) * C51199 + C23716 * C51200 +
             C32919 * C24822) *
                C51167 +
            ((C23701 - (C23700 + C23699) + C23702) * C51199 + C23717 * C51200 +
             (C23496 - (C23497 + C23498) + C23499) * C24822) *
                C51086) *
               C50963) *
              C51151 +
          ((((C20973 - (C20972 + C20971) + C20974) * C51199 +
             (C20977 - (C20976 + C20975) + C20978) * C51200 +
             (C20981 - (C20980 + C20979) + C20982) * C24822) *
                C51167 +
            (C23716 * C51199 + C32919 * C51200 +
             (C21151 - (C21137 + C21138) + C21152) * C24822) *
                C51086) *
               C1514 +
           ((C23714 * C51199 + C32722 * C51200 +
             (C21138 + C21137 - C21151 - C21152) * C24822) *
                C51167 +
            (C23715 * C51199 + (C23498 + C23497 - C23496 - C23499) * C51200 +
             (C20679 * C1280 + C20680 * C1275 -
              (C19835 * C3368 + C50862 * C3372) * C1281 -
              (C19835 * C3370 + C50862 * C3374) * C50885) *
                 C24822) *
                C51086) *
               C50963) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C1280 +
             (C19835 * C136 + C50862 * C146) * C1275 -
             (C19835 * C126 + C50862 * C133) * C1281 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C51199 +
            (C20971 + C20972 - C20973 - C20974) * C51200 + C20991 * C24822) *
               C51167 +
           ((C23694 + C23695 - C23696 - C23697) * C51199 + C23714 * C51200 +
            C32722 * C24822) *
               C51086) *
              C51198 +
          (((C23696 - (C23695 + C23694) + C23697) * C51199 + C23716 * C51200 +
            C32919 * C24822) *
               C51167 +
           ((C23701 - (C23700 + C23699) + C23702) * C51199 + C23717 * C51200 +
            (C23496 - (C23497 + C23498) + C23499) * C24822) *
               C51086) *
              C51187 +
          ((C24223 * C51199 + C23715 * C51200 +
            (C23498 + C23497 - C23496 - C23499) * C24822) *
               C51167 +
           ((C24220 + C24219 - C24218 - C24221) * C51199 +
            (C23708 + C23707 - C23706 - C23709) * C51200 +
            (C22710 * C1280 + C22711 * C1275 -
             (C19835 * C3498 + C50862 * C3504) * C1281 -
             (C19835 * C3502 + C50862 * C3510) * C50885) *
                C24822) *
               C51086) *
              C1746) *
         C50925) /
        (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C121 +
            (C19835 * C136 + C50862 * C146) * C109 -
            (C19835 * C126 + C50862 * C133) * C122 -
            (C19835 * C137 + C50862 * C147) * C110 +
            (C19835 * C127 + C50862 * C134) * C123 +
            (C19835 * C138 + C50862 * C148) * C111 -
            (C19835 * C128 + C50862 * C135) * C124 -
            (C19835 * C139 + C50862 * C149) * C112) *
               C51199 +
           (C19971 * C121 + C19972 * C109 - C19973 * C122 - C19974 * C110 +
            C19975 * C123 + C19976 * C111 -
            (C19835 * C261 + C50862 * C267) * C124 -
            (C19835 * C269 + C50862 * C277) * C112) *
               C51200 +
           (C19977 * C121 + C19978 * C109 - C19979 * C122 - C19980 * C110 +
            C19981 * C123 + C19982 * C111 -
            (C19835 * C515 + C50862 * C520) * C124 -
            (C19835 * C524 + C50862 * C530) * C112) *
               C24822) *
              C51167 +
          ((C22261 * C121 + C22262 * C109 - C22263 * C122 - C22264 * C110 +
            C22265 * C123 + C22266 * C111 -
            (C19835 * C385 + C50862 * C391) * C124 -
            (C19835 * C393 + C50862 * C401) * C112) *
               C51199 +
           (C20450 * C121 + C20449 * C109 - C21141 * C122 - C21142 * C110 +
            C22079 * C123 + C22080 * C111 -
            (C19835 * C721 + C50862 * C729) * C124 -
            (C19835 * C733 + C50862 * C745) * C112) *
               C51200 +
           (C20448 * C121 + C20447 * C109 - C21143 * C122 - C21144 * C110 +
            (C19835 * C723 + C50862 * C739) * C123 +
            (C19835 * C735 + C50862 * C747) * C111 -
            (C19835 * C722 + C50862 * C738) * C124 -
            (C19835 * C734 + C50862 * C746) * C112) *
               C24822) *
              C51086) *
         C50951 * C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C50007 +
             (C19835 * C136 + C50862 * C146) * C51143 -
             (C19835 * C126 + C50862 * C133) * C50000 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C51199 +
            (C20203 + C20204 - C20205 - C20206) * C51200 + C20235 * C24822) *
               C51167 +
           ((C22862 + C22863 - C22864 - C22865) * C51199 + C24426 * C51200 +
            C31786 * C24822) *
               C51086) *
              C50951 * C507 +
          (((C20205 - (C20204 + C20203) + C20206) * C51199 +
            (C20209 - (C20208 + C20207) + C20210) * C51200 +
            (C20213 - (C20212 + C20211) + C20214) * C24822) *
               C51167 +
           (C24427 * C51199 + (C21613 - (C21614 + C21615) + C21616) * C51200 +
            (C21617 - (C21618 + C21619) + C21620) * C24822) *
               C51086) *
              C50951 * C508 +
          ((C20235 * C51199 + C20236 * C51200 +
            (C20233 + C20232 - C20231 - C20234) * C24822) *
               C51167 +
           (C31786 * C51199 + (C21619 + C21618 - C21617 - C21620) * C51200 +
            (C20451 * C50007 + C20452 * C51143 -
             (C19835 * C3009 + C50862 * C3017) * C50000 -
             (C19835 * C3015 + C50862 * C3021) * C50885) *
                C24822) *
               C51086) *
              C50951 * C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C256 +
             (C19835 * C136 + C50862 * C146) * C251 -
             (C19835 * C126 + C50862 * C133) * C257 -
             (C19835 * C137 + C50862 * C147) * C252 +
             (C19835 * C127 + C50862 * C134) * C258 +
             (C19835 * C138 + C50862 * C148) * C253) *
                C51199 +
            (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C51200 +
            (C19995 + C19996 - C19997 - C19998 + C19999 + C20000) * C24822) *
               C51167 +
           ((C22273 + C22274 - C22275 - C22276 + C22277 + C22278) * C51199 +
            (C22061 + C22062 - C22063 - C22064 + C22085 + C22086) * C51200 +
            (C31480 + C31481 - C31482 - C31483 + C31490 + C31491) * C24822) *
               C51086) *
              C50951 * C51151 +
          (((C19991 - (C19990 + C19989) + C19992 - C19993 - C19994) * C51199 +
            (C19997 - (C19996 + C19995) + C19998 - C19999 - C20000) * C51200 +
            (C20003 - (C20002 + C20001) + C20004 - C20005 - C20006) * C24822) *
               C51167 +
           ((C22063 - (C22062 + C22061) + C22064 - C22085 - C22086) * C51199 +
            (C31482 - (C31481 + C31480) + C31483 - C31490 - C31491) * C51200 +
            (C21145 * C257 - (C20445 * C251 + C20446 * C256) + C21146 * C252 -
             (C19835 * C4007 + C50862 * C4008) * C258 -
             (C19835 * C4009 + C50862 * C4010) * C253) *
                C24822) *
               C51086) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C51199 +
            (C20307 + C20308) * C51200 + C20319 * C24822) *
               C51167 +
           ((C22689 + C22690) * C51199 + C22691 * C51200 + C22701 * C24822) *
               C51086) *
              C50951 * C599 -
          ((C20461 * C24822 + C20462 * C51200 + C22700 * C51199) * C51086 +
           (C20322 * C24822 + (C20310 + C20309) * C51200 +
            (C20308 + C20307) * C51199) *
               C51167) *
              C50951 * C600 +
          ((C20319 * C51199 + C20320 * C51200 + (C20314 + C20313) * C24822) *
               C51167 +
           (C22701 * C51199 + (C20454 + C20453) * C51200 +
            (C20459 + C20460) * C24822) *
               C51086) *
              C50951 * C601 -
          ((((C19835 * C20425 + C50862 * C20427) * C50880 +
             (C19835 * C20424 + C50862 * C20426) * C603) *
                C24822 +
            (C20460 + C20459) * C51200 + C20461 * C51199) *
               C51086 +
           ((C20326 + C20325) * C24822 + C20321 * C51200 + C20322 * C51199) *
               C51167) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C256 +
             (C19835 * C136 + C50862 * C146) * C251 -
             (C19835 * C126 + C50862 * C133) * C257 -
             (C19835 * C137 + C50862 * C147) * C252 +
             (C19835 * C127 + C50862 * C134) * C258 +
             (C19835 * C138 + C50862 * C148) * C253) *
                C51199 +
            (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C51200 +
            (C19995 + C19996 - C19997 - C19998 + C19999 + C20000) * C24822) *
               C51167 +
           ((C22273 + C22274 - C22275 - C22276 + C22277 + C22278) * C51199 +
            (C22061 + C22062 - C22063 - C22064 + C22085 + C22086) * C51200 +
            (C31480 + C31481 - C31482 - C31483 + C31490 + C31491) * C24822) *
               C51086) *
              C51152 +
          (((C22275 - (C22274 + C22273) + C22276 - C22277 - C22278) * C51199 +
            (C22063 - (C22062 + C22061) + C22064 - C22085 - C22086) * C51200 +
            (C31482 - (C31481 + C31480) + C31483 - C31490 - C31491) * C24822) *
               C51167 +
           ((C22281 - (C22280 + C22279) + C22282 - C22283 - C22284) * C51199 +
            (C22087 - (C22070 + C22069) + C22088 - C22089 - C22090) * C51200 +
            (C22441 * C257 - (C20678 * C251 + C20677 * C256) + C22442 * C252 -
             (C19835 * C3212 + C50862 * C3217) * C258 -
             (C19835 * C3218 + C50862 * C3221) * C253) *
                C24822) *
               C51086) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C603 +
              (C19835 * C136 + C50862 * C146) * C50880) *
                 C51199 +
             (C20307 + C20308) * C51200 + C20319 * C24822) *
                C51167 +
            ((C22689 + C22690) * C51199 + C22691 * C51200 + C22701 * C24822) *
                C51086) *
               C51152 -
           ((C22707 * C24822 + C22699 * C51200 + (C22693 + C22692) * C51199) *
                C51086 +
            (C20462 * C24822 + C22700 * C51200 + (C22690 + C22689) * C51199) *
                C51167) *
               C50963) *
              C507 +
          (((C22691 * C51199 + C22701 * C51200 + C32031 * C24822) * C51167 +
            (C22694 * C51199 + C22702 * C51200 + (C20685 + C20686) * C24822) *
                C51086) *
               C50963 -
           ((C20461 * C24822 + C20462 * C51200 + C22700 * C51199) * C51086 +
            (C20322 * C24822 + (C20310 + C20309) * C51200 +
             (C20308 + C20307) * C51199) *
                C51167) *
               C51152) *
              C508 +
          (((C20319 * C51199 + C20320 * C51200 + (C20314 + C20313) * C24822) *
                C51167 +
            (C22701 * C51199 + C32031 * C51200 + (C20459 + C20460) * C24822) *
                C51086) *
               C51152 -
           ((((C19835 * C20659 + C50862 * C20661) * C50880 +
              (C19835 * C20658 + C50862 * C20660) * C603) *
                 C24822 +
             (C20686 + C20685) * C51200 + C22707 * C51199) *
                C51086 +
            ((C20460 + C20459) * C24822 + C20461 * C51200 + C20462 * C51199) *
                C51167) *
               C50963) *
              C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C1174 +
            (C19835 * C136 + C50862 * C146) * C51196 -
            (C19835 * C126 + C50862 * C133) * C1175 -
            (C19835 * C137 + C50862 * C147) * C51181 +
            (C19835 * C127 + C50862 * C134) * C1176 +
            (C19835 * C138 + C50862 * C148) * C1171) *
               C19831 +
           (C20855 + C20856 - C20857 - C20858 + C20859 + C20860) * C19832 +
           (C20861 + C20862 - C20863 - C20864 + C20865 + C20866) * C19833 +
           (C20867 + C20868 - C20869 - C20870 + C20871 + C20872) * C19834) *
              C51022 * C50951 * C1172 +
          ((C20857 - (C20856 + C20855) + C20858 - C20859 - C20860) * C19831 +
           (C20863 - (C20862 + C20861) + C20864 - C20865 - C20866) * C19832 +
           (C20869 - (C20868 + C20867) + C20870 - C20871 - C20872) * C19833 +
           (C20225 * C1175 - (C20226 * C51196 + C20227 * C1174) +
            C20228 * C51181 - (C19835 * C2690 + C50862 * C2695) * C1176 -
            (C19835 * C2696 + C50862 * C2699) * C1171) *
               C19834) *
              C51022 * C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C1174 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C51196 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C1175 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C51181 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C1176 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C1171) *
               C17049 +
           ((C17237 + C17238 + C17239) * C1174 +
            (C17240 + C17241 + C17242) * C51196 -
            (C17243 + C17244 + C17245) * C1175 -
            (C17246 + C17247 + C17248) * C51181 +
            (C17249 + C17250 + C17251) * C1176 +
            (C17252 + C17253 + C17254) * C1171) *
               C51060) *
              C51022 * C50951 * C1172 +
          (((C17245 + C17244 + C17243) * C1175 -
            ((C17242 + C17241 + C17240) * C51196 +
             (C17239 + C17238 + C17237) * C1174) +
            (C17248 + C17247 + C17246) * C51181 -
            (C17251 + C17250 + C17249) * C1176 -
            (C17254 + C17253 + C17252) * C1171) *
               C17049 +
           ((C17571 + C17572 + C17573) * C1175 -
            ((C17574 + C17575 + C17576) * C51196 +
             (C17577 + C17578 + C17579) * C1174) +
            (C17580 + C17581 + C17582) * C51181 -
            (C17053 * C516 + C17048 * C525 + C17052 * C515 + C17047 * C520 +
             C17051 * C514 + C17046 * C519) *
                C1176 -
            (C17053 * C526 + C17048 * C531 + C17052 * C524 + C17047 * C530 +
             C17051 * C523 + C17046 * C529) *
                C1171) *
               C51060) *
              C51022 * C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C1174 +
             (C19835 * C136 + C50862 * C146) * C51196 -
             (C19835 * C126 + C50862 * C133) * C1175 -
             (C19835 * C137 + C50862 * C147) * C51181 +
             (C19835 * C127 + C50862 * C134) * C1176 +
             (C19835 * C138 + C50862 * C148) * C1171) *
                C17049 +
            (C20855 + C20856 - C20857 - C20858 + C20859 + C20860) * C51060) *
               C5105 +
           ((C22261 * C1174 + C22262 * C51196 - C22263 * C1175 -
             C22264 * C51181 + C22265 * C1176 + C22266 * C1171) *
                C17049 +
            (C23334 + C23335 - C23336 - C23337 + C23338 + C23339) * C51060) *
               C5106 +
           ((C22267 * C1174 + C22268 * C51196 - C22269 * C1175 -
             C22270 * C51181 + C22271 * C1176 + C22272 * C1171) *
                C17049 +
            (C23340 + C23341 - C23342 - C23343 + C23344 + C23345) * C51060) *
               C5107) *
              C50951 * C1172 +
          (((C20857 - (C20856 + C20855) + C20858 - C20859 - C20860) * C17049 +
            (C20863 - (C20862 + C20861) + C20864 - C20865 - C20866) * C51060) *
               C5105 +
           ((C23336 - (C23335 + C23334) + C23337 - C23338 - C23339) * C17049 +
            (C21143 * C1175 - (C20447 * C51196 + C20448 * C1174) +
             C21144 * C51181 - (C19835 * C723 + C50862 * C739) * C1176 -
             (C19835 * C735 + C50862 * C747) * C1171) *
                C51060) *
               C5106 +
           ((C23342 - (C23341 + C23340) + C23343 - C23344 - C23345) * C17049 +
            (C22441 * C1175 - (C20678 * C51196 + C20677 * C1174) +
             C22442 * C51181 - (C19835 * C3212 + C50862 * C3217) * C1176 -
             (C19835 * C3218 + C50862 * C3221) * C1171) *
                C51060) *
               C5107) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C19835 * C125 + C50862 * C132) * C1280 +
                     (C19835 * C136 + C50862 * C146) * C1275 -
                     (C19835 * C126 + C50862 * C133) * C1281 -
                     (C19835 * C137 + C50862 * C147) * C50885) *
                        C19831 +
                    (C20971 + C20972 - C20973 - C20974) * C19832 +
                    C20991 * C19833 + C20992 * C19834) *
                       C51022 * C50951 * C51197 +
                   ((C20973 - (C20972 + C20971) + C20974) * C19831 +
                    (C20977 - (C20976 + C20975) + C20978) * C19832 +
                    (C20981 - (C20980 + C20979) + C20982) * C19833 +
                    (C20983 - (C20984 + C20985) + C20986) * C19834) *
                       C51022 * C50951 * C51184 +
                   (C20991 * C19831 + C20992 * C19832 +
                    (C20985 + C20984 - C20983 - C20986) * C19833 +
                    (C20323 * C1280 + C20324 * C1275 -
                     (C19835 * C2833 + C50862 * C2837) * C1281 -
                     (C19835 * C2835 + C50862 * C2839) * C50885) *
                        C19834) *
                       C51022 * C50951 * C1279)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                      C17047 * C133 + C17053 * C127 + C17048 * C134) *
                         C1280 +
                     (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                      C17047 * C147 + C17053 * C138 + C17048 * C148) *
                         C1275 -
                     (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                      C17047 * C134 + C17051 * C126 + C17046 * C133) *
                         C1281 -
                     (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                      C17047 * C148 + C17051 * C137 + C17046 * C147) *
                         C50885) *
                        C17049 +
                    ((C17237 + C17238 + C17239) * C1280 +
                     (C17240 + C17241 + C17242) * C1275 -
                     (C17243 + C17244 + C17245) * C1281 -
                     (C17246 + C17247 + C17248) * C50885) *
                        C51060) *
                       C51022 * C50951 * C51197 +
                   (((C17245 + C17244 + C17243) * C1281 -
                     ((C17242 + C17241 + C17240) * C1275 +
                      (C17239 + C17238 + C17237) * C1280) +
                     (C17248 + C17247 + C17246) * C50885) *
                        C17049 +
                    ((C17571 + C17572 + C17573) * C1281 -
                     ((C17574 + C17575 + C17576) * C1275 +
                      (C17577 + C17578 + C17579) * C1280) +
                     (C17580 + C17581 + C17582) * C50885) *
                        C51060) *
                       C51022 * C50951 * C51184 +
                   (((C17579 + C17578 + C17577) * C1280 +
                     (C17576 + C17575 + C17574) * C1275 -
                     (C17573 + C17572 + C17571) * C1281 -
                     (C17582 + C17581 + C17580) * C50885) *
                        C17049 +
                    ((C17693 + C17694 + C17695) * C1280 +
                     (C17696 + C17697 + C17698) * C1275 -
                     (C17053 * C604 + C17048 * C612 + C17052 * C605 +
                      C17047 * C613 + C17051 * C606 + C17046 * C614) *
                         C1281 -
                     (C17053 * C608 + C17048 * C616 + C17052 * C609 +
                      C17047 * C617 + C17051 * C610 + C17046 * C618) *
                         C50885) *
                        C51060) *
                       C51022 * C50951 * C1279)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C19835 * C125 + C50862 * C132) * C1280 +
                      (C19835 * C136 + C50862 * C146) * C1275 -
                      (C19835 * C126 + C50862 * C133) * C1281 -
                      (C19835 * C137 + C50862 * C147) * C50885) *
                         C17049 +
                     (C20971 + C20972 - C20973 - C20974) * C51060) *
                        C5105 +
                    ((C22261 * C1280 + C22262 * C1275 - C22263 * C1281 -
                      C22264 * C50885) *
                         C17049 +
                     (C21126 + C21125 - C21147 - C21148) * C51060) *
                        C5106 +
                    ((C22267 * C1280 + C22268 * C1275 - C22269 * C1281 -
                      C22270 * C50885) *
                         C17049 +
                     (C23492 + C23493 - C23494 - C23495) * C51060) *
                        C5107) *
                       C50951 * C51197 +
                   (((C20973 - (C20972 + C20971) + C20974) * C17049 +
                     (C20977 - (C20976 + C20975) + C20978) * C51060) *
                        C5105 +
                    ((C21147 - (C21125 + C21126) + C21148) * C17049 +
                     (C21149 - (C21131 + C21132) + C21150) * C51060) *
                        C5106 +
                    ((C23494 - (C23493 + C23492) + C23495) * C17049 +
                     (C23496 - (C23497 + C23498) + C23499) * C51060) *
                        C5107) *
                       C50951 * C51184 +
                   ((C20991 * C17049 + C20992 * C51060) * C5105 +
                    ((C21132 + C21131 - C21149 - C21150) * C17049 +
                     (C21138 + C21137 - C21151 - C21152) * C51060) *
                        C5106 +
                    ((C23498 + C23497 - C23496 - C23499) * C17049 +
                     (C20679 * C1280 + C20680 * C1275 -
                      (C19835 * C3368 + C50862 * C3372) * C1281 -
                      (C19835 * C3370 + C50862 * C3374) * C50885) *
                         C51060) *
                        C5107) *
                       C50951 * C1279)) /
                     (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C1280 +
             (C19835 * C136 + C50862 * C146) * C1275 -
             (C19835 * C126 + C50862 * C133) * C1281 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C19831 +
            (C20971 + C20972 - C20973 - C20974) * C19832 + C20991 * C19833 +
            C20992 * C19834) *
               C51022 * C51152 +
           (((C19835 * C383 + C50862 * C389) * C1281 -
             ((C19835 * C396 + C50862 * C404) * C1275 +
              (C19835 * C387 + C50862 * C397) * C1280) +
             (C19835 * C395 + C50862 * C403) * C50885) *
                C19831 +
            (C21147 - (C21125 + C21126) + C21148) * C19832 +
            (C21149 - (C21131 + C21132) + C21150) * C19833 +
            (C21151 - (C21137 + C21138) + C21152) * C19834) *
               C51022 * C50963) *
              C1172 +
          (((C20973 - (C20972 + C20971) + C20974) * C19831 +
            (C20977 - (C20976 + C20975) + C20978) * C19832 +
            (C20981 - (C20980 + C20979) + C20982) * C19833 +
            (C20983 - (C20984 + C20985) + C20986) * C19834) *
               C51022 * C51152 +
           ((C21126 + C21125 - C21147 - C21148) * C19831 +
            (C21132 + C21131 - C21149 - C21150) * C19832 +
            (C21138 + C21137 - C21151 - C21152) * C19833 +
            (C20451 * C1280 + C20452 * C1275 -
             (C19835 * C3009 + C50862 * C3017) * C1281 -
             (C19835 * C3015 + C50862 * C3021) * C50885) *
                C19834) *
               C51022 * C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C1280 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C1275 -
             (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
              C17051 * C126 + C17046 * C133) *
                 C1281 -
             (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
              C17051 * C137 + C17046 * C147) *
                 C50885) *
                C17049 +
            ((C17237 + C17238 + C17239) * C1280 +
             (C17240 + C17241 + C17242) * C1275 -
             (C17243 + C17244 + C17245) * C1281 -
             (C17246 + C17247 + C17248) * C50885) *
                C51060) *
               C51022 * C51152 +
           (((C17051 * C383 + C17046 * C389 + C17052 * C384 + C17047 * C390 +
              C17053 * C385 + C17048 * C391) *
                 C1281 -
             ((C17053 * C394 + C17048 * C402 + C17052 * C395 + C17047 * C403 +
               C17051 * C396 + C17046 * C404) *
                  C1275 +
              (C17053 * C384 + C17048 * C390 + C17052 * C383 + C17047 * C389 +
               C17051 * C387 + C17046 * C397) *
                  C1280) +
             (C17051 * C395 + C17046 * C403 + C17052 * C394 + C17047 * C402 +
              C17053 * C393 + C17048 * C401) *
                 C50885) *
                C17049 +
            ((C18787 + C18788 + C18789) * C1281 -
             ((C17869 + C17870 + C17871) * C1275 +
              (C17872 + C17873 + C17874) * C1280) +
             (C18790 + C18791 + C18792) * C50885) *
                C51060) *
               C51022 * C50963) *
              C1172 +
          ((((C17245 + C17244 + C17243) * C1281 -
             ((C17242 + C17241 + C17240) * C1275 +
              (C17239 + C17238 + C17237) * C1280) +
             (C17248 + C17247 + C17246) * C50885) *
                C17049 +
            ((C17571 + C17572 + C17573) * C1281 -
             ((C17574 + C17575 + C17576) * C1275 +
              (C17577 + C17578 + C17579) * C1280) +
             (C17580 + C17581 + C17582) * C50885) *
                C51060) *
               C51022 * C51152 +
           (((C17874 + C17873 + C17872) * C1280 +
             (C17871 + C17870 + C17869) * C1275 -
             (C18789 + C18788 + C18787) * C1281 -
             (C18792 + C18791 + C18790) * C50885) *
                C17049 +
            ((C17875 + C17876 + C17877) * C1280 +
             (C17878 + C17879 + C17880) * C1275 -
             (C17053 * C722 + C17048 * C738 + C17052 * C723 + C17047 * C739 +
              C17051 * C724 + C17046 * C740) *
                 C1281 -
             (C17053 * C734 + C17048 * C746 + C17052 * C735 + C17047 * C747 +
              C17051 * C736 + C17046 * C748) *
                 C50885) *
                C51060) *
               C51022 * C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C1280 +
              (C19835 * C136 + C50862 * C146) * C1275 -
              (C19835 * C126 + C50862 * C133) * C1281 -
              (C19835 * C137 + C50862 * C147) * C50885) *
                 C17049 +
             (C20971 + C20972 - C20973 - C20974) * C51060) *
                C5105 +
            ((C23694 + C23695 - C23696 - C23697) * C17049 + C23714 * C51060) *
                C5106 +
            ((C23699 + C23700 - C23701 - C23702) * C17049 + C23715 * C51060) *
                C5107) *
               C51152 +
           (((C23696 - (C23695 + C23694) + C23697) * C17049 + C23716 * C51060) *
                C5105 +
            ((C23701 - (C23700 + C23699) + C23702) * C17049 + C23717 * C51060) *
                C5106 +
            ((C22887 * C1281 - (C22888 * C1275 + C22889 * C1280) +
              C22890 * C50885) *
                 C17049 +
             (C23706 - (C23707 + C23708) + C23709) * C51060) *
                C5107) *
               C50963) *
              C1172 +
          ((((C20973 - (C20972 + C20971) + C20974) * C17049 +
             (C20977 - (C20976 + C20975) + C20978) * C51060) *
                C5105 +
            (C23716 * C17049 + (C21149 - (C21131 + C21132) + C21150) * C51060) *
                C5106 +
            (C23717 * C17049 + (C23496 - (C23497 + C23498) + C23499) * C51060) *
                C5107) *
               C51152 +
           ((C23714 * C17049 + (C21132 + C21131 - C21149 - C21150) * C51060) *
                C5105 +
            (C23715 * C17049 + (C23498 + C23497 - C23496 - C23499) * C51060) *
                C5106 +
            ((C23708 + C23707 - C23706 - C23709) * C17049 +
             (C22710 * C1280 + C22711 * C1275 -
              (C19835 * C3498 + C50862 * C3504) * C1281 -
              (C19835 * C3502 + C50862 * C3510) * C50885) *
                 C51060) *
                C5107) *
               C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C50007 +
             (C19835 * C136 + C50862 * C146) * C51143 -
             (C19835 * C126 + C50862 * C133) * C50000 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C19831 +
            (C20203 + C20204 - C20205 - C20206) * C19832 + C20235 * C19833 +
            C20236 * C19834) *
               C51022 * C1514 +
           (((C19835 * C383 + C50862 * C389) * C50000 -
             ((C19835 * C396 + C50862 * C404) * C51143 +
              (C19835 * C387 + C50862 * C397) * C50007) +
             (C19835 * C395 + C50862 * C403) * C50885) *
                C19831 +
            (C21609 - (C21610 + C21611) + C21612) * C19832 +
            (C21613 - (C21614 + C21615) + C21616) * C19833 +
            (C21617 - (C21618 + C21619) + C21620) * C19834) *
               C51022 * C50963) *
              C1172 +
          (((C20205 - (C20204 + C20203) + C20206) * C19831 +
            (C20209 - (C20208 + C20207) + C20210) * C19832 +
            (C20213 - (C20212 + C20211) + C20214) * C19833 +
            (C20231 - (C20232 + C20233) + C20234) * C19834) *
               C51022 * C1514 +
           ((C21611 + C21610 - C21609 - C21612) * C19831 +
            (C21615 + C21614 - C21613 - C21616) * C19832 +
            (C21619 + C21618 - C21617 - C21620) * C19833 +
            (C20451 * C50007 + C20452 * C51143 -
             (C19835 * C3009 + C50862 * C3017) * C50000 -
             (C19835 * C3015 + C50862 * C3021) * C50885) *
                C19834) *
               C51022 * C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C50007 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C51143 -
             (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
              C17051 * C126 + C17046 * C133) *
                 C50000 -
             (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
              C17051 * C137 + C17046 * C147) *
                 C50885) *
                C17049 +
            ((C17237 + C17238 + C17239) * C50007 +
             (C17240 + C17241 + C17242) * C51143 -
             (C17243 + C17244 + C17245) * C50000 -
             (C17246 + C17247 + C17248) * C50885) *
                C51060) *
               C51022 * C1514 +
           (((C17051 * C383 + C17046 * C389 + C17052 * C384 + C17047 * C390 +
              C17053 * C385 + C17048 * C391) *
                 C50000 -
             ((C17053 * C394 + C17048 * C402 + C17052 * C395 + C17047 * C403 +
               C17051 * C396 + C17046 * C404) *
                  C51143 +
              (C17053 * C384 + C17048 * C390 + C17052 * C383 + C17047 * C389 +
               C17051 * C387 + C17046 * C397) *
                  C50007) +
             (C17051 * C395 + C17046 * C403 + C17052 * C394 + C17047 * C402 +
              C17053 * C393 + C17048 * C401) *
                 C50885) *
                C17049 +
            ((C18787 + C18788 + C18789) * C50000 -
             ((C17869 + C17870 + C17871) * C51143 +
              (C17872 + C17873 + C17874) * C50007) +
             (C18790 + C18791 + C18792) * C50885) *
                C51060) *
               C51022 * C50963) *
              C1172 +
          ((((C17245 + C17244 + C17243) * C50000 -
             ((C17242 + C17241 + C17240) * C51143 +
              (C17239 + C17238 + C17237) * C50007) +
             (C17248 + C17247 + C17246) * C50885) *
                C17049 +
            ((C17571 + C17572 + C17573) * C50000 -
             ((C17574 + C17575 + C17576) * C51143 +
              (C17577 + C17578 + C17579) * C50007) +
             (C17580 + C17581 + C17582) * C50885) *
                C51060) *
               C51022 * C1514 +
           (((C17874 + C17873 + C17872) * C50007 +
             (C17871 + C17870 + C17869) * C51143 -
             (C18789 + C18788 + C18787) * C50000 -
             (C18792 + C18791 + C18790) * C50885) *
                C17049 +
            ((C17875 + C17876 + C17877) * C50007 +
             (C17878 + C17879 + C17880) * C51143 -
             (C17053 * C722 + C17048 * C738 + C17052 * C723 + C17047 * C739 +
              C17051 * C724 + C17046 * C740) *
                 C50000 -
             (C17053 * C734 + C17048 * C746 + C17052 * C735 + C17047 * C747 +
              C17051 * C736 + C17046 * C748) *
                 C50885) *
                C51060) *
               C51022 * C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C50007 +
              (C19835 * C136 + C50862 * C146) * C51143 -
              (C19835 * C126 + C50862 * C133) * C50000 -
              (C19835 * C137 + C50862 * C147) * C50885) *
                 C17049 +
             (C20203 + C20204 - C20205 - C20206) * C51060) *
                C5105 +
            ((C22862 + C22863 - C22864 - C22865) * C17049 + C24426 * C51060) *
                C5106 +
            C22904 * C5107) *
               C1514 +
           (((C22864 - (C22863 + C22862) + C22865) * C17049 + C24427 * C51060) *
                C5105 +
            ((C22868 - (C22867 + C22866) + C22869) * C17049 + C24428 * C51060) *
                C5106 +
            ((C22895 - (C22896 + C22897) + C22898) * C17049 +
             (C22899 - (C22881 + C22882) + C22900) * C51060) *
                C5107) *
               C50963) *
              C1172 +
          ((((C20205 - (C20204 + C20203) + C20206) * C17049 +
             (C20209 - (C20208 + C20207) + C20210) * C51060) *
                C5105 +
            (C24427 * C17049 + (C21613 - (C21614 + C21615) + C21616) * C51060) *
                C5106 +
            (C24428 * C17049 + (C22443 - (C22437 + C22438) + C22444) * C51060) *
                C5107) *
               C1514 +
           ((C24426 * C17049 + (C21615 + C21614 - C21613 - C21616) * C51060) *
                C5105 +
            (C22894 * C17049 + (C22438 + C22437 - C22443 - C22444) * C51060) *
                C5106 +
            ((C22882 + C22881 - C22899 - C22900) * C17049 +
             (C22710 * C50007 + C22711 * C51143 -
              (C19835 * C3498 + C50862 * C3504) * C50000 -
              (C19835 * C3502 + C50862 * C3510) * C50885) *
                 C51060) *
                C5107) *
               C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C19831 +
            (C20307 + C20308) * C19832 + C20319 * C19833 + C20320 * C19834) *
               C51022 * C1514 -
           (C20461 * C19834 + C20462 * C19833 + (C20457 + C20458) * C19832 +
            ((C19835 * C396 + C50862 * C404) * C50880 +
             (C19835 * C387 + C50862 * C397) * C603) *
                C19831) *
               C51022 * C50963) *
              C51197 +
          (((C20458 + C20457) * C19831 + (C20456 + C20455) * C19832 +
            (C20454 + C20453) * C19833 + (C20459 + C20460) * C19834) *
               C51022 * C50963 -
           (C20321 * C19834 + C20322 * C19833 + (C20310 + C20309) * C19832 +
            (C20308 + C20307) * C19831) *
               C51022 * C1514) *
              C51184 +
          ((C20319 * C19831 + C20320 * C19832 + (C20314 + C20313) * C19833 +
            (C20325 + C20326) * C19834) *
               C51022 * C1514 -
           (((C19835 * C20425 + C50862 * C20427) * C50880 +
             (C19835 * C20424 + C50862 * C20426) * C603) *
                C19834 +
            (C20460 + C20459) * C19833 + C20461 * C19832 + C20462 * C19831) *
               C51022 * C50963) *
              C1279)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C603 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50880) *
                C17049 +
            ((C17237 + C17238 + C17239) * C603 +
             (C17240 + C17241 + C17242) * C50880) *
                C51060) *
               C51022 * C1514 -
           (((C17869 + C17870 + C17871) * C50880 +
             (C17872 + C17873 + C17874) * C603) *
                C51060 +
            ((C17053 * C394 + C17048 * C402 + C17052 * C395 + C17047 * C403 +
              C17051 * C396 + C17046 * C404) *
                 C50880 +
             (C17053 * C384 + C17048 * C390 + C17052 * C383 + C17047 * C389 +
              C17051 * C387 + C17046 * C397) *
                 C603) *
                C17049) *
               C51022 * C50963) *
              C51197 +
          ((((C17874 + C17873 + C17872) * C603 +
             (C17871 + C17870 + C17869) * C50880) *
                C17049 +
            ((C17875 + C17876 + C17877) * C603 +
             (C17878 + C17879 + C17880) * C50880) *
                C51060) *
               C51022 * C50963 -
           (((C17574 + C17575 + C17576) * C50880 +
             (C17577 + C17578 + C17579) * C603) *
                C51060 +
            ((C17242 + C17241 + C17240) * C50880 +
             (C17239 + C17238 + C17237) * C603) *
                C17049) *
               C51022 * C1514) *
              C51184 +
          ((((C17579 + C17578 + C17577) * C603 +
             (C17576 + C17575 + C17574) * C50880) *
                C17049 +
            ((C17693 + C17694 + C17695) * C603 +
             (C17696 + C17697 + C17698) * C50880) *
                C51060) *
               C51022 * C1514 -
           (((C17053 * C4009 + C17048 * C4010 + C17052 * C3014 +
              C17047 * C3020 + C17051 * C3013 + C17046 * C3019) *
                 C50880 +
             (C17053 * C4007 + C17048 * C4008 + C17052 * C3008 +
              C17047 * C3012 + C17051 * C3007 + C17046 * C3011) *
                 C603) *
                C51060 +
            ((C17880 + C17879 + C17878) * C50880 +
             (C17877 + C17876 + C17875) * C603) *
                C17049) *
               C51022 * C50963) *
              C1279)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C603 +
              (C19835 * C136 + C50862 * C146) * C50880) *
                 C17049 +
             (C20307 + C20308) * C51060) *
                C5105 +
            ((C22689 + C22690) * C17049 + C22691 * C51060) * C5106 +
            C23071 * C5107) *
               C1514 -
           (C23185 * C5107 +
            (C22699 * C51060 + (C22693 + C22692) * C17049) * C5106 +
            (C22700 * C51060 + (C22690 + C22689) * C17049) * C5105) *
               C50963) *
              C51197 +
          (((C22691 * C17049 + C22701 * C51060) * C5105 +
            (C22694 * C17049 + C22702 * C51060) * C5106 +
            (C23060 * C17049 + (C22714 + C22715) * C51060) * C5107) *
               C50963 -
           (C23070 * C5107 + (C20462 * C51060 + C22700 * C17049) * C5106 +
            ((C20310 + C20309) * C51060 + (C20308 + C20307) * C17049) * C5105) *
               C1514) *
              C51184 +
          (((C20319 * C17049 + C20320 * C51060) * C5105 +
            (C22701 * C17049 + (C20454 + C20453) * C51060) * C5106 +
            (C22702 * C17049 + (C20685 + C20686) * C51060) * C5107) *
               C1514 -
           ((((C19835 * C20753 + C50862 * C20755) * C50880 +
              (C19835 * C20752 + C50862 * C20754) * C603) *
                 C51060 +
             (C22715 + C22714) * C17049) *
                C5107 +
            ((C20686 + C20685) * C51060 + C22707 * C17049) * C5106 +
            (C20461 * C51060 + C20462 * C17049) * C5105) *
               C50963) *
              C1279)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C19831 +
            (C20307 + C20308) * C19832 + C20319 * C19833 + C20320 * C19834) *
               C51022 * C51198 -
           (C20461 * C19834 + C20462 * C19833 + (C20457 + C20458) * C19832 +
            ((C19835 * C396 + C50862 * C404) * C50880 +
             (C19835 * C387 + C50862 * C397) * C603) *
                C19831) *
               C51022 * C51187 +
           (((C19835 * C851 + C50862 * C856) * C603 +
             (C19835 * C860 + C50862 * C866) * C50880) *
                C19831 +
            (C20681 + C20682) * C19832 + (C20683 + C20684) * C19833 +
            (C20685 + C20686) * C19834) *
               C51022 * C1746) *
              C1172 +
          (((C20458 + C20457) * C19831 + (C20456 + C20455) * C19832 +
            (C20454 + C20453) * C19833 + (C20459 + C20460) * C19834) *
               C51022 * C51187 -
           (C20321 * C19834 + C20322 * C19833 + (C20310 + C20309) * C19832 +
            (C20308 + C20307) * C19831) *
               C51022 * C51198 -
           (((C19835 * C20659 + C50862 * C20661) * C50880 +
             (C19835 * C20658 + C50862 * C20660) * C603) *
                C19834 +
            (C20686 + C20685) * C19833 + (C20684 + C20683) * C19832 +
            (C20682 + C20681) * C19831) *
               C51022 * C1746) *
              C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C603 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50880) *
                C17049 +
            ((C17237 + C17238 + C17239) * C603 +
             (C17240 + C17241 + C17242) * C50880) *
                C51060) *
               C51022 * C51198 -
           (((C17869 + C17870 + C17871) * C50880 +
             (C17872 + C17873 + C17874) * C603) *
                C51060 +
            ((C17053 * C394 + C17048 * C402 + C17052 * C395 + C17047 * C403 +
              C17051 * C396 + C17046 * C404) *
                 C50880 +
             (C17053 * C384 + C17048 * C390 + C17052 * C383 + C17047 * C389 +
              C17051 * C387 + C17046 * C397) *
                 C603) *
                C17049) *
               C51022 * C51187 +
           (((C17051 * C851 + C17046 * C856 + C17052 * C852 + C17047 * C857 +
              C17053 * C853 + C17048 * C858) *
                 C603 +
             (C17051 * C860 + C17046 * C866 + C17052 * C861 + C17047 * C867 +
              C17053 * C862 + C17048 * C868) *
                 C50880) *
                C17049 +
            ((C18185 + C18186 + C18187) * C603 +
             (C18188 + C18189 + C18190) * C50880) *
                C51060) *
               C51022 * C1746) *
              C1172 +
          ((((C17874 + C17873 + C17872) * C603 +
             (C17871 + C17870 + C17869) * C50880) *
                C17049 +
            ((C17875 + C17876 + C17877) * C603 +
             (C17878 + C17879 + C17880) * C50880) *
                C51060) *
               C51022 * C51187 -
           (((C17574 + C17575 + C17576) * C50880 +
             (C17577 + C17578 + C17579) * C603) *
                C51060 +
            ((C17242 + C17241 + C17240) * C50880 +
             (C17239 + C17238 + C17237) * C603) *
                C17049) *
               C51022 * C51198 -
           (((C17053 * C3218 + C17048 * C3221 + C17052 * C3216 +
              C17047 * C3220 + C17051 * C3215 + C17046 * C3219) *
                 C50880 +
             (C17053 * C3212 + C17048 * C3217 + C17052 * C3211 +
              C17047 * C3214 + C17051 * C3210 + C17046 * C3213) *
                 C603) *
                C51060 +
            ((C18190 + C18189 + C18188) * C50880 +
             (C18187 + C18186 + C18185) * C603) *
                C17049) *
               C51022 * C1746) *
              C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C603 +
              (C19835 * C136 + C50862 * C146) * C50880) *
                 C17049 +
             (C20307 + C20308) * C51060) *
                C5105 +
            ((C22689 + C22690) * C17049 + C22691 * C51060) * C5106 +
            C23071 * C5107) *
               C51198 -
           (C23185 * C5107 +
            (C22699 * C51060 + (C22693 + C22692) * C17049) * C5106 +
            (C22700 * C51060 + (C22690 + C22689) * C17049) * C5105) *
               C51187 +
           (C23071 * C5105 +
            ((C23059 + C23058) * C17049 + C23060 * C51060) * C5106 +
            ((C23186 + C23187) * C17049 + (C23072 + C23073) * C51060) * C5107) *
               C1746) *
              C1172 +
          (((C22691 * C17049 + C22701 * C51060) * C5105 +
            (C22694 * C17049 + C22702 * C51060) * C5106 +
            (C23060 * C17049 + (C22714 + C22715) * C51060) * C5107) *
               C51187 -
           (C23070 * C5107 + (C20462 * C51060 + C22700 * C17049) * C5106 +
            ((C20310 + C20309) * C51060 + (C20308 + C20307) * C17049) * C5105) *
               C51198 -
           ((((C19835 * C23051 + C50862 * C23053) * C50880 +
              (C19835 * C23050 + C50862 * C23052) * C603) *
                 C51060 +
             (C23073 + C23072) * C17049) *
                C5107 +
            ((C22715 + C22714) * C51060 + C23057 * C17049) * C5106 +
            C23070 * C5105) *
               C1746) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] += (0.5 * std::pow(Pi, 2.5) *
                      (((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                         C17047 * C133 + C17053 * C127 + C17048 * C134) *
                            C121 +
                        (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                         C17047 * C147 + C17053 * C138 + C17048 * C148) *
                            C109 -
                        (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                         C17047 * C134 + C17051 * C126 + C17046 * C133) *
                            C122 -
                        (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                         C17047 * C148 + C17051 * C137 + C17046 * C147) *
                            C110 +
                        (C17051 * C127 + C17046 * C134 + C17052 * C128 +
                         C17047 * C135 + C17053 * C129 + C17048 * C140) *
                            C123 +
                        (C17051 * C138 + C17046 * C148 + C17052 * C139 +
                         C17047 * C149 + C17053 * C141 + C17048 * C150) *
                            C111 -
                        (C17053 * C130 + C17048 * C142 + C17052 * C129 +
                         C17047 * C140 + C17051 * C128 + C17046 * C135) *
                            C124 -
                        (C17053 * C143 + C17048 * C151 + C17052 * C141 +
                         C17047 * C150 + C17051 * C139 + C17046 * C149) *
                            C112) *
                           C17049 +
                       ((C17051 * C263 + C17046 * C273 + C17052 * C259 +
                         C17047 * C265 + C17053 * C260 + C17048 * C266) *
                            C121 +
                        (C17051 * C272 + C17046 * C280 + C17052 * C271 +
                         C17047 * C279 + C17053 * C270 + C17048 * C278) *
                            C109 -
                        (C17053 * C261 + C17048 * C267 + C17052 * C260 +
                         C17047 * C266 + C17051 * C259 + C17046 * C265) *
                            C122 -
                        (C17053 * C269 + C17048 * C277 + C17052 * C270 +
                         C17047 * C278 + C17051 * C271 + C17046 * C279) *
                            C110 +
                        (C17051 * C260 + C17046 * C266 + C17052 * C261 +
                         C17047 * C267 + C17053 * C262 + C17048 * C268) *
                            C123 +
                        (C17051 * C270 + C17046 * C278 + C17052 * C269 +
                         C17047 * C277 + C17053 * C274 + C17048 * C281) *
                            C111 -
                        (C17053 * C264 + C17048 * C275 + C17052 * C262 +
                         C17047 * C268 + C17051 * C261 + C17046 * C267) *
                            C124 -
                        (C17053 * C276 + C17048 * C282 + C17052 * C274 +
                         C17047 * C281 + C17051 * C269 + C17046 * C277) *
                            C112) *
                           C51060) *
                      C51022 * C50951 * C50925 +
                  0.5 * std::pow(Pi, 2.5) *
                      ((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                          C17047 * C133 + C17053 * C127 + C17048 * C134) *
                             C50007 +
                         (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                          C17047 * C147 + C17053 * C138 + C17048 * C148) *
                             C51143 -
                         (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                          C17047 * C134 + C17051 * C126 + C17046 * C133) *
                             C50000 -
                         (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                          C17047 * C148 + C17051 * C137 + C17046 * C147) *
                             C50885) *
                            C17049 +
                        ((C17237 + C17238 + C17239) * C50007 +
                         (C17240 + C17241 + C17242) * C51143 -
                         (C17243 + C17244 + C17245) * C50000 -
                         (C17246 + C17247 + C17248) * C50885) *
                            C51060) *
                           C51022 * C50951 * C507 +
                       (((C17245 + C17244 + C17243) * C50000 -
                         ((C17242 + C17241 + C17240) * C51143 +
                          (C17239 + C17238 + C17237) * C50007) +
                         (C17248 + C17247 + C17246) * C50885) *
                            C17049 +
                        ((C17571 + C17572 + C17573) * C50000 -
                         ((C17574 + C17575 + C17576) * C51143 +
                          (C17577 + C17578 + C17579) * C50007) +
                         (C17580 + C17581 + C17582) * C50885) *
                            C51060) *
                           C51022 * C50951 * C508 +
                       (((C17579 + C17578 + C17577) * C50007 +
                         (C17576 + C17575 + C17574) * C51143 -
                         (C17573 + C17572 + C17571) * C50000 -
                         (C17582 + C17581 + C17580) * C50885) *
                            C17049 +
                        ((C17051 * C607 + C17046 * C615 + C17052 * C606 +
                          C17047 * C614 + C17053 * C605 + C17048 * C613) *
                             C50007 +
                         (C17051 * C611 + C17046 * C619 + C17052 * C610 +
                          C17047 * C618 + C17053 * C609 + C17048 * C617) *
                             C51143 -
                         (C17053 * C604 + C17048 * C612 + C17052 * C605 +
                          C17047 * C613 + C17051 * C606 + C17046 * C614) *
                             C50000 -
                         (C17053 * C608 + C17048 * C616 + C17052 * C609 +
                          C17047 * C617 + C17051 * C610 + C17046 * C618) *
                             C50885) *
                            C51060) *
                           C51022 * C50951 * C509)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::pow(Pi, 2.5) *
                  ((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                      C17047 * C133 + C17053 * C127 + C17048 * C134) *
                         C50007 +
                     (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                      C17047 * C147 + C17053 * C138 + C17048 * C148) *
                         C51143 -
                     (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                      C17047 * C134 + C17051 * C126 + C17046 * C133) *
                         C50000 -
                     (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                      C17047 * C148 + C17051 * C137 + C17046 * C147) *
                         C50885) *
                        C17049 +
                    ((C17237 + C17238 + C17239) * C50007 +
                     (C17240 + C17241 + C17242) * C51143 -
                     (C17243 + C17244 + C17245) * C50000 -
                     (C17246 + C17247 + C17248) * C50885) *
                        C51060) *
                       C51022 * C848 +
                   (((C17051 * C383 + C17046 * C389 + C17052 * C384 +
                      C17047 * C390 + C17053 * C385 + C17048 * C391) *
                         C50000 -
                     ((C17053 * C394 + C17048 * C402 + C17052 * C395 +
                       C17047 * C403 + C17051 * C396 + C17046 * C404) *
                          C51143 +
                      (C17053 * C384 + C17048 * C390 + C17052 * C383 +
                       C17047 * C389 + C17051 * C387 + C17046 * C397) *
                          C50007) +
                     (C17051 * C395 + C17046 * C403 + C17052 * C394 +
                      C17047 * C402 + C17053 * C393 + C17048 * C401) *
                         C50885) *
                        C17049 +
                    ((C17051 * C719 + C17046 * C727 + C17052 * C720 +
                      C17047 * C728 + C17053 * C721 + C17048 * C729) *
                         C50000 -
                     ((C17869 + C17870 + C17871) * C51143 +
                      (C17872 + C17873 + C17874) * C50007) +
                     (C17051 * C731 + C17046 * C743 + C17052 * C732 +
                      C17047 * C744 + C17053 * C733 + C17048 * C745) *
                         C50885) *
                        C51060) *
                       C51022 * C849 +
                   (((C17051 * C851 + C17046 * C856 + C17052 * C852 +
                      C17047 * C857 + C17053 * C853 + C17048 * C858) *
                         C50007 +
                     (C17051 * C860 + C17046 * C866 + C17052 * C861 +
                      C17047 * C867 + C17053 * C862 + C17048 * C868) *
                         C51143 -
                     (C17053 * C854 + C17048 * C859 + C17052 * C853 +
                      C17047 * C858 + C17051 * C852 + C17046 * C857) *
                         C50000 -
                     (C17053 * C863 + C17048 * C869 + C17052 * C862 +
                      C17047 * C868 + C17051 * C861 + C17046 * C867) *
                         C50885) *
                        C17049 +
                    ((C17051 * C972 + C17046 * C980 + C17052 * C971 +
                      C17047 * C979 + C17053 * C970 + C17048 * C978) *
                         C50007 +
                     (C17051 * C976 + C17046 * C984 + C17052 * C975 +
                      C17047 * C983 + C17053 * C974 + C17048 * C982) *
                         C51143 -
                     (C17053 * C969 + C17048 * C977 + C17052 * C970 +
                      C17047 * C978 + C17051 * C971 + C17046 * C979) *
                         C50000 -
                     (C17053 * C973 + C17048 * C981 + C17052 * C974 +
                      C17047 * C982 + C17051 * C975 + C17046 * C983) *
                         C50885) *
                        C51060) *
                       C51022 * C850) *
                  C50925) /
                     (p * q * std::sqrt(p + q)) +
                 (0.5 * std::pow(Pi, 2.5) *
                  (((C19835 * C125 + C50862 * C132) * C121 +
                    (C19835 * C136 + C50862 * C146) * C109 -
                    (C19835 * C126 + C50862 * C133) * C122 -
                    (C19835 * C137 + C50862 * C147) * C110 +
                    (C19835 * C127 + C50862 * C134) * C123 +
                    (C19835 * C138 + C50862 * C148) * C111 -
                    (C19835 * C128 + C50862 * C135) * C124 -
                    (C19835 * C139 + C50862 * C149) * C112) *
                       C19831 +
                   ((C19835 * C263 + C50862 * C273) * C121 +
                    (C19835 * C272 + C50862 * C280) * C109 -
                    (C19835 * C259 + C50862 * C265) * C122 -
                    (C19835 * C271 + C50862 * C279) * C110 +
                    (C19835 * C260 + C50862 * C266) * C123 +
                    (C19835 * C270 + C50862 * C278) * C111 -
                    (C19835 * C261 + C50862 * C267) * C124 -
                    (C19835 * C269 + C50862 * C277) * C112) *
                       C19832 +
                   ((C19835 * C512 + C50862 * C517) * C121 +
                    (C19835 * C521 + C50862 * C527) * C109 -
                    (C19835 * C513 + C50862 * C518) * C122 -
                    (C19835 * C522 + C50862 * C528) * C110 +
                    (C19835 * C514 + C50862 * C519) * C123 +
                    (C19835 * C523 + C50862 * C529) * C111 -
                    (C19835 * C515 + C50862 * C520) * C124 -
                    (C19835 * C524 + C50862 * C530) * C112) *
                       C19833 +
                   ((C19835 * C607 + C50862 * C615) * C121 +
                    (C19835 * C611 + C50862 * C619) * C109 -
                    (C19835 * C606 + C50862 * C614) * C122 -
                    (C19835 * C610 + C50862 * C618) * C110 +
                    (C19835 * C605 + C50862 * C613) * C123 +
                    (C19835 * C609 + C50862 * C617) * C111 -
                    (C19835 * C604 + C50862 * C612) * C124 -
                    (C19835 * C608 + C50862 * C616) * C112) *
                       C19834) *
                  C51022 * C50951 * C50925) /
                     (p * q * std::sqrt(p + q)) +
                 (0.5 * std::pow(Pi, 2.5) *
                  ((((C19835 * C125 + C50862 * C132) * C50007 +
                     (C19835 * C136 + C50862 * C146) * C51143 -
                     (C19835 * C126 + C50862 * C133) * C50000 -
                     (C19835 * C137 + C50862 * C147) * C50885) *
                        C19831 +
                    (C20203 + C20204 - C20205 - C20206) * C19832 +
                    C20235 * C19833 + C20236 * C19834) *
                       C51022 * C50951 * C507 +
                   ((C20205 - (C20204 + C20203) + C20206) * C19831 +
                    (C20209 - (C20208 + C20207) + C20210) * C19832 +
                    (C20213 - (C20212 + C20211) + C20214) * C19833 +
                    (C20231 - (C20232 + C20233) + C20234) * C19834) *
                       C51022 * C50951 * C508 +
                   (C20235 * C19831 + C20236 * C19832 +
                    (C20233 + C20232 - C20231 - C20234) * C19833 +
                    ((C19835 * C2834 + C50862 * C2838) * C50007 +
                     (C19835 * C2836 + C50862 * C2840) * C51143 -
                     (C19835 * C2833 + C50862 * C2837) * C50000 -
                     (C19835 * C2835 + C50862 * C2839) * C50885) *
                        C19834) *
                       C51022 * C50951 * C509)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::pow(Pi, 2.5) *
                  ((((C19835 * C125 + C50862 * C132) * C50007 +
                     (C19835 * C136 + C50862 * C146) * C51143 -
                     (C19835 * C126 + C50862 * C133) * C50000 -
                     (C19835 * C137 + C50862 * C147) * C50885) *
                        C19831 +
                    (C20203 + C20204 - C20205 - C20206) * C19832 +
                    C20235 * C19833 + C20236 * C19834) *
                       C51022 * C848 +
                   (((C19835 * C383 + C50862 * C389) * C50000 -
                     ((C19835 * C396 + C50862 * C404) * C51143 +
                      (C19835 * C387 + C50862 * C397) * C50007) +
                     (C19835 * C395 + C50862 * C403) * C50885) *
                        C19831 +
                    ((C19835 * C719 + C50862 * C727) * C50000 -
                     (C20449 * C51143 + C20450 * C50007) +
                     (C19835 * C731 + C50862 * C743) * C50885) *
                        C19832 +
                    ((C19835 * C724 + C50862 * C740) * C50000 -
                     (C20447 * C51143 + C20448 * C50007) +
                     (C19835 * C736 + C50862 * C748) * C50885) *
                        C19833 +
                    ((C19835 * C3008 + C50862 * C3012) * C50000 -
                     (C20445 * C51143 + C20446 * C50007) +
                     (C19835 * C3014 + C50862 * C3020) * C50885) *
                        C19834) *
                       C51022 * C849 +
                   (((C19835 * C851 + C50862 * C856) * C50007 +
                     (C19835 * C860 + C50862 * C866) * C51143 -
                     (C19835 * C852 + C50862 * C857) * C50000 -
                     (C19835 * C861 + C50862 * C867) * C50885) *
                        C19831 +
                    ((C19835 * C972 + C50862 * C980) * C50007 +
                     (C19835 * C976 + C50862 * C984) * C51143 -
                     (C19835 * C971 + C50862 * C979) * C50000 -
                     (C19835 * C975 + C50862 * C983) * C50885) *
                        C19832 +
                    ((C19835 * C3210 + C50862 * C3213) * C50007 +
                     (C19835 * C3215 + C50862 * C3219) * C51143 -
                     (C19835 * C3211 + C50862 * C3214) * C50000 -
                     (C19835 * C3216 + C50862 * C3220) * C50885) *
                        C19833 +
                    ((C19835 * C3369 + C50862 * C3373) * C50007 +
                     (C19835 * C3371 + C50862 * C3375) * C51143 -
                     (C19835 * C3368 + C50862 * C3372) * C50000 -
                     (C19835 * C3370 + C50862 * C3374) * C50885) *
                        C19834) *
                       C51022 * C850) *
                  C50925) /
                     (p * q * std::sqrt(p + q)) -
                 (std::pow(Pi, 2.5) *
                  ((((C19835 * C125 + C50862 * C132) * C121 +
                     (C19835 * C136 + C50862 * C146) * C109 -
                     (C19835 * C126 + C50862 * C133) * C122 -
                     (C19835 * C137 + C50862 * C147) * C110 +
                     (C19835 * C127 + C50862 * C134) * C123 +
                     (C19835 * C138 + C50862 * C148) * C111 -
                     (C19835 * C128 + C50862 * C135) * C124 -
                     (C19835 * C139 + C50862 * C149) * C112) *
                        C17049 +
                    (C19971 * C121 + C19972 * C109 - C19973 * C122 -
                     C19974 * C110 + C19975 * C123 + C19976 * C111 -
                     (C19835 * C261 + C50862 * C267) * C124 -
                     (C19835 * C269 + C50862 * C277) * C112) *
                        C51060) *
                       C5105 +
                   (((C19835 * C387 + C50862 * C397) * C121 +
                     (C19835 * C396 + C50862 * C404) * C109 -
                     (C19835 * C383 + C50862 * C389) * C122 -
                     (C19835 * C395 + C50862 * C403) * C110 +
                     (C19835 * C384 + C50862 * C390) * C123 +
                     (C19835 * C394 + C50862 * C402) * C111 -
                     (C19835 * C385 + C50862 * C391) * C124 -
                     (C19835 * C393 + C50862 * C401) * C112) *
                        C17049 +
                    (C20450 * C121 + C20449 * C109 - C21141 * C122 -
                     C21142 * C110 + (C19835 * C720 + C50862 * C728) * C123 +
                     (C19835 * C732 + C50862 * C744) * C111 -
                     (C19835 * C721 + C50862 * C729) * C124 -
                     (C19835 * C733 + C50862 * C745) * C112) *
                        C51060) *
                       C5106 +
                   (((C19835 * C851 + C50862 * C856) * C121 +
                     (C19835 * C860 + C50862 * C866) * C109 -
                     (C19835 * C852 + C50862 * C857) * C122 -
                     (C19835 * C861 + C50862 * C867) * C110 +
                     (C19835 * C853 + C50862 * C858) * C123 +
                     (C19835 * C862 + C50862 * C868) * C111 -
                     (C19835 * C854 + C50862 * C859) * C124 -
                     (C19835 * C863 + C50862 * C869) * C112) *
                        C17049 +
                    (C20675 * C121 + C20676 * C109 -
                     (C19835 * C971 + C50862 * C979) * C122 -
                     (C19835 * C975 + C50862 * C983) * C110 +
                     (C19835 * C970 + C50862 * C978) * C123 +
                     (C19835 * C974 + C50862 * C982) * C111 -
                     (C19835 * C969 + C50862 * C977) * C124 -
                     (C19835 * C973 + C50862 * C981) * C112) *
                        C51060) *
                       C5107) *
                  C50951 * C50925) /
                     (p * q * std::sqrt(p + q)) -
                 (std::pow(Pi, 2.5) *
                  (((((C19835 * C125 + C50862 * C132) * C50007 +
                      (C19835 * C136 + C50862 * C146) * C51143 -
                      (C19835 * C126 + C50862 * C133) * C50000 -
                      (C19835 * C137 + C50862 * C147) * C50885) *
                         C17049 +
                     (C20203 + C20204 - C20205 - C20206) * C51060) *
                        C5105 +
                    ((C22261 * C50007 + C22262 * C51143 - C22263 * C50000 -
                      C22264 * C50885) *
                         C17049 +
                     (C21611 + C21610 - C21609 - C21612) * C51060) *
                        C5106 +
                    ((C22267 * C50007 + C22268 * C51143 - C22269 * C50000 -
                      C22270 * C50885) *
                         C17049 +
                     (C22431 + C22432 - C22433 - C22434) * C51060) *
                        C5107) *
                       C50951 * C507 +
                   (((C20205 - (C20204 + C20203) + C20206) * C17049 +
                     (C20209 - (C20208 + C20207) + C20210) * C51060) *
                        C5105 +
                    ((C21609 - (C21610 + C21611) + C21612) * C17049 +
                     (C21613 - (C21614 + C21615) + C21616) * C51060) *
                        C5106 +
                    ((C22433 - (C22432 + C22431) + C22434) * C17049 +
                     (C22443 - (C22437 + C22438) + C22444) * C51060) *
                        C5107) *
                       C50951 * C508 +
                   ((C20235 * C17049 + C20236 * C51060) * C5105 +
                    ((C21615 + C21614 - C21613 - C21616) * C17049 +
                     (C21619 + C21618 - C21617 - C21620) * C51060) *
                        C5106 +
                    ((C22438 + C22437 - C22443 - C22444) * C17049 +
                     (C20679 * C50007 + C20680 * C51143 -
                      (C19835 * C3368 + C50862 * C3372) * C50000 -
                      (C19835 * C3370 + C50862 * C3374) * C50885) *
                         C51060) *
                        C5107) *
                       C50951 * C509)) /
                     (p * q * std::sqrt(p + q)) +
                 (2 * std::pow(Pi, 2.5) *
                  (((((C19835 * C125 + C50862 * C132) * C50007 +
                      (C19835 * C136 + C50862 * C146) * C51143 -
                      (C19835 * C126 + C50862 * C133) * C50000 -
                      (C19835 * C137 + C50862 * C147) * C50885) *
                         C17049 +
                     (C20203 + C20204 - C20205 - C20206) * C51060) *
                        C5105 +
                    ((C22862 + C22863 - C22864 - C22865) * C17049 +
                     (C21611 + C21610 - C21609 - C21612) * C51060) *
                        C5106 +
                    C22904 * C5107) *
                       C848 +
                   (((C22864 - (C22863 + C22862) + C22865) * C17049 +
                     (C21609 - (C21610 + C21611) + C21612) * C51060) *
                        C5105 +
                    ((C22868 - (C22867 + C22866) + C22869) * C17049 +
                     (C22433 - (C22432 + C22431) + C22434) * C51060) *
                        C5106 +
                    ((C22895 - (C22896 + C22897) + C22898) * C17049 +
                     (C22899 - (C22881 + C22882) + C22900) * C51060) *
                        C5107) *
                       C849 +
                   (C22904 * C5105 +
                    ((C22897 + C22896 - C22895 - C22898) * C17049 +
                     (C22882 + C22881 - C22899 - C22900) * C51060) *
                        C5106 +
                    (((C19835 * C6008 + C50862 * C6011) * C50007 +
                      (C19835 * C6013 + C50862 * C6017) * C51143 -
                      (C19835 * C6009 + C50862 * C6012) * C50000 -
                      (C19835 * C6014 + C50862 * C6018) * C50885) *
                         C17049 +
                     ((C19835 * C6203 + C50862 * C6207) * C50007 +
                      (C19835 * C6205 + C50862 * C6209) * C51143 -
                      (C19835 * C6202 + C50862 * C6206) * C50000 -
                      (C19835 * C6204 + C50862 * C6208) * C50885) *
                         C51060) *
                        C5107) *
                       C850) *
                  C50925) /
                     (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
                 C17053 * C127 + C17048 * C134) *
                    C256 +
                (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
                 C17053 * C138 + C17048 * C148) *
                    C251 -
                (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
                 C17051 * C126 + C17046 * C133) *
                    C257 -
                (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
                 C17051 * C137 + C17046 * C147) *
                    C252 +
                (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
                 C17053 * C129 + C17048 * C140) *
                    C258 +
                (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
                 C17053 * C141 + C17048 * C150) *
                    C253) *
                   C17049 +
               ((C17237 + C17238 + C17239) * C256 +
                (C17240 + C17241 + C17242) * C251 -
                (C17243 + C17244 + C17245) * C257 -
                (C17246 + C17247 + C17248) * C252 +
                (C17249 + C17250 + C17251) * C258 +
                (C17252 + C17253 + C17254) * C253) *
                   C51060) *
                  C51022 * C50951 * C51151 +
              (((C17245 + C17244 + C17243) * C257 -
                ((C17242 + C17241 + C17240) * C251 +
                 (C17239 + C17238 + C17237) * C256) +
                (C17248 + C17247 + C17246) * C252 -
                (C17251 + C17250 + C17249) * C258 -
                (C17254 + C17253 + C17252) * C253) *
                   C17049 +
               ((C17051 * C513 + C17046 * C518 + C17052 * C514 + C17047 * C519 +
                 C17053 * C515 + C17048 * C520) *
                    C257 -
                ((C17053 * C523 + C17048 * C529 + C17052 * C522 +
                  C17047 * C528 + C17051 * C521 + C17046 * C527) *
                     C251 +
                 (C17053 * C514 + C17048 * C519 + C17052 * C513 +
                  C17047 * C518 + C17051 * C512 + C17046 * C517) *
                     C256) +
                (C17051 * C522 + C17046 * C528 + C17052 * C523 + C17047 * C529 +
                 C17053 * C524 + C17048 * C530) *
                    C252 -
                (C17053 * C516 + C17048 * C525 + C17052 * C515 + C17047 * C520 +
                 C17051 * C514 + C17046 * C519) *
                    C258 -
                (C17053 * C526 + C17048 * C531 + C17052 * C524 + C17047 * C530 +
                 C17051 * C523 + C17046 * C529) *
                    C253) *
                   C51060) *
                  C51022 * C50951 * C50939) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
                 C17053 * C127 + C17048 * C134) *
                    C603 +
                (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
                 C17053 * C138 + C17048 * C148) *
                    C50880) *
                   C17049 +
               ((C17237 + C17238 + C17239) * C603 +
                (C17240 + C17241 + C17242) * C50880) *
                   C51060) *
                  C51022 * C50951 * C599 -
              (((C17574 + C17575 + C17576) * C50880 +
                (C17577 + C17578 + C17579) * C603) *
                   C51060 +
               ((C17242 + C17241 + C17240) * C50880 +
                (C17239 + C17238 + C17237) * C603) *
                   C17049) *
                  C51022 * C50951 * C600 +
              (((C17579 + C17578 + C17577) * C603 +
                (C17576 + C17575 + C17574) * C50880) *
                   C17049 +
               ((C17693 + C17694 + C17695) * C603 +
                (C17696 + C17697 + C17698) * C50880) *
                   C51060) *
                  C51022 * C50951 * C601 -
              (((C17053 * C2696 + C17048 * C2699 + C17052 * C2694 +
                 C17047 * C2698 + C17051 * C2693 + C17046 * C2697) *
                    C50880 +
                (C17053 * C2690 + C17048 * C2695 + C17052 * C2689 +
                 C17047 * C2692 + C17051 * C2688 + C17046 * C2691) *
                    C603) *
                   C51060 +
               ((C17698 + C17697 + C17696) * C50880 +
                (C17695 + C17694 + C17693) * C603) *
                   C17049) *
                  C51022 * C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C603 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50880) *
                C17049 +
            ((C17237 + C17238 + C17239) * C603 +
             (C17240 + C17241 + C17242) * C50880) *
                C51060) *
               C51022 * C848 -
           (((C17869 + C17870 + C17871) * C50880 +
             (C17872 + C17873 + C17874) * C603) *
                C51060 +
            ((C17053 * C394 + C17048 * C402 + C17052 * C395 + C17047 * C403 +
              C17051 * C396 + C17046 * C404) *
                 C50880 +
             (C17053 * C384 + C17048 * C390 + C17052 * C383 + C17047 * C389 +
              C17051 * C387 + C17046 * C397) *
                 C603) *
                C17049) *
               C51022 * C849 +
           (((C17051 * C851 + C17046 * C856 + C17052 * C852 + C17047 * C857 +
              C17053 * C853 + C17048 * C858) *
                 C603 +
             (C17051 * C860 + C17046 * C866 + C17052 * C861 + C17047 * C867 +
              C17053 * C862 + C17048 * C868) *
                 C50880) *
                C17049 +
            ((C18185 + C18186 + C18187) * C603 +
             (C18188 + C18189 + C18190) * C50880) *
                C51060) *
               C51022 * C850) *
              C51151 +
          ((((C17874 + C17873 + C17872) * C603 +
             (C17871 + C17870 + C17869) * C50880) *
                C17049 +
            ((C17875 + C17876 + C17877) * C603 +
             (C17878 + C17879 + C17880) * C50880) *
                C51060) *
               C51022 * C849 -
           (((C17574 + C17575 + C17576) * C50880 +
             (C17577 + C17578 + C17579) * C603) *
                C51060 +
            ((C17242 + C17241 + C17240) * C50880 +
             (C17239 + C17238 + C17237) * C603) *
                C17049) *
               C51022 * C848 -
           (((C17053 * C3218 + C17048 * C3221 + C17052 * C3216 +
              C17047 * C3220 + C17051 * C3215 + C17046 * C3219) *
                 C50880 +
             (C17053 * C3212 + C17048 * C3217 + C17052 * C3211 +
              C17047 * C3214 + C17051 * C3210 + C17046 * C3213) *
                 C603) *
                C51060 +
            ((C18190 + C18189 + C18188) * C50880 +
             (C18187 + C18186 + C18185) * C603) *
                C17049) *
               C51022 * C850) *
              C50939)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C256 +
            (C19835 * C136 + C50862 * C146) * C251 -
            (C19835 * C126 + C50862 * C133) * C257 -
            (C19835 * C137 + C50862 * C147) * C252 +
            (C19835 * C127 + C50862 * C134) * C258 +
            (C19835 * C138 + C50862 * C148) * C253) *
               C19831 +
           (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C19832 +
           (C19995 + C19996 - C19997 - C19998 + C19999 + C20000) * C19833 +
           (C20001 + C20002 - C20003 - C20004 + C20005 + C20006) * C19834) *
              C51022 * C50951 * C51151 +
          ((C19991 - (C19990 + C19989) + C19992 - C19993 - C19994) * C19831 +
           (C19997 - (C19996 + C19995) + C19998 - C19999 - C20000) * C19832 +
           (C20003 - (C20002 + C20001) + C20004 - C20005 - C20006) * C19833 +
           ((C19835 * C2689 + C50862 * C2692) * C257 -
            ((C19835 * C2693 + C50862 * C2697) * C251 +
             (C19835 * C2688 + C50862 * C2691) * C256) +
            (C19835 * C2694 + C50862 * C2698) * C252 -
            (C19835 * C2690 + C50862 * C2695) * C258 -
            (C19835 * C2696 + C50862 * C2699) * C253) *
               C19834) *
              C51022 * C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C603 +
            (C19835 * C136 + C50862 * C146) * C50880) *
               C19831 +
           (C20307 + C20308) * C19832 + C20319 * C19833 + C20320 * C19834) *
              C51022 * C50951 * C599 -
          (C20321 * C19834 + C20322 * C19833 + (C20310 + C20309) * C19832 +
           (C20308 + C20307) * C19831) *
              C51022 * C50951 * C600 +
          (C20319 * C19831 + C20320 * C19832 + (C20314 + C20313) * C19833 +
           (C20325 + C20326) * C19834) *
              C51022 * C50951 * C601 -
          (((C19835 * C20303 + C50862 * C20305) * C50880 +
            (C19835 * C20302 + C50862 * C20304) * C603) *
               C19834 +
           (C20326 + C20325) * C19833 + C20321 * C19832 + C20322 * C19831) *
              C51022 * C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C19831 +
            (C20307 + C20308) * C19832 + C20319 * C19833 + C20320 * C19834) *
               C51022 * C848 -
           (C20461 * C19834 + C20462 * C19833 + (C20457 + C20458) * C19832 +
            ((C19835 * C396 + C50862 * C404) * C50880 +
             (C19835 * C387 + C50862 * C397) * C603) *
                C19831) *
               C51022 * C849 +
           (((C19835 * C851 + C50862 * C856) * C603 +
             (C19835 * C860 + C50862 * C866) * C50880) *
                C19831 +
            (C20681 + C20682) * C19832 + (C20683 + C20684) * C19833 +
            (C20685 + C20686) * C19834) *
               C51022 * C850) *
              C51151 +
          (((C20458 + C20457) * C19831 + (C20456 + C20455) * C19832 +
            (C20454 + C20453) * C19833 + (C20459 + C20460) * C19834) *
               C51022 * C849 -
           (C20321 * C19834 + C20322 * C19833 + (C20310 + C20309) * C19832 +
            (C20308 + C20307) * C19831) *
               C51022 * C848 -
           (((C19835 * C20659 + C50862 * C20661) * C50880 +
             (C19835 * C20658 + C50862 * C20660) * C603) *
                C19834 +
            (C20686 + C20685) * C19833 + (C20684 + C20683) * C19832 +
            (C20682 + C20681) * C19831) *
               C51022 * C850) *
              C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C256 +
             (C19835 * C136 + C50862 * C146) * C251 -
             (C19835 * C126 + C50862 * C133) * C257 -
             (C19835 * C137 + C50862 * C147) * C252 +
             (C19835 * C127 + C50862 * C134) * C258 +
             (C19835 * C138 + C50862 * C148) * C253) *
                C17049 +
            (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C51060) *
               C5105 +
           (((C19835 * C387 + C50862 * C397) * C256 +
             (C19835 * C396 + C50862 * C404) * C251 -
             (C19835 * C383 + C50862 * C389) * C257 -
             (C19835 * C395 + C50862 * C403) * C252 +
             (C19835 * C384 + C50862 * C390) * C258 +
             (C19835 * C394 + C50862 * C402) * C253) *
                C17049 +
            (C22061 + C22062 - C22063 - C22064 + C22085 + C22086) * C51060) *
               C5106 +
           (((C19835 * C851 + C50862 * C856) * C256 +
             (C19835 * C860 + C50862 * C866) * C251 -
             (C19835 * C852 + C50862 * C857) * C257 -
             (C19835 * C861 + C50862 * C867) * C252 +
             (C19835 * C853 + C50862 * C858) * C258 +
             (C19835 * C862 + C50862 * C868) * C253) *
                C17049 +
            (C22069 + C22070 - C22087 - C22088 + C22089 + C22090) * C51060) *
               C5107) *
              C50951 * C51151 +
          (((C19991 - (C19990 + C19989) + C19992 - C19993 - C19994) * C17049 +
            (C19997 - (C19996 + C19995) + C19998 - C19999 - C20000) * C51060) *
               C5105 +
           ((C22063 - (C22062 + C22061) + C22064 - C22085 - C22086) * C17049 +
            (C21143 * C257 - (C20447 * C251 + C20448 * C256) + C21144 * C252 -
             (C19835 * C723 + C50862 * C739) * C258 -
             (C19835 * C735 + C50862 * C747) * C253) *
                C51060) *
               C5106 +
           ((C22087 - (C22070 + C22069) + C22088 - C22089 - C22090) * C17049 +
            ((C19835 * C3211 + C50862 * C3214) * C257 -
             (C20678 * C251 + C20677 * C256) +
             (C19835 * C3216 + C50862 * C3220) * C252 -
             (C19835 * C3212 + C50862 * C3217) * C258 -
             (C19835 * C3218 + C50862 * C3221) * C253) *
                C51060) *
               C5107) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C17049 +
            (C20307 + C20308) * C51060) *
               C5105 +
           ((C22261 * C603 + C22262 * C50880) * C17049 +
            (C20458 + C20457) * C51060) *
               C5106 +
           ((C22267 * C603 + C22268 * C50880) * C17049 +
            (C20681 + C20682) * C51060) *
               C5107) *
              C50951 * C599 -
          (((C20684 + C20683) * C51060 + (C20682 + C20681) * C17049) * C5107 +
           (C20462 * C51060 + (C20457 + C20458) * C17049) * C5106 +
           ((C20310 + C20309) * C51060 + (C20308 + C20307) * C17049) * C5105) *
              C50951 * C600 +
          ((C20319 * C17049 + C20320 * C51060) * C5105 +
           ((C20456 + C20455) * C17049 + (C20454 + C20453) * C51060) * C5106 +
           ((C20683 + C20684) * C17049 + (C20685 + C20686) * C51060) * C5107) *
              C50951 * C601 -
          ((((C19835 * C20659 + C50862 * C20661) * C50880 +
             (C19835 * C20658 + C50862 * C20660) * C603) *
                C51060 +
            (C20686 + C20685) * C17049) *
               C5107 +
           ((C20460 + C20459) * C51060 + C20461 * C17049) * C5106 +
           (C20321 * C51060 + C20322 * C17049) * C5105) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C603 +
              (C19835 * C136 + C50862 * C146) * C50880) *
                 C17049 +
             (C20307 + C20308) * C51060) *
                C5105 +
            ((C22689 + C22690) * C17049 + C22691 * C51060) * C5106 +
            C23071 * C5107) *
               C848 -
           ((C23057 * C51060 + (C23058 + C23059) * C17049) * C5107 +
            (C22699 * C51060 + (C22693 + C22692) * C17049) * C5106 +
            (C22700 * C51060 + (C22690 + C22689) * C17049) * C5105) *
               C849 +
           (C23071 * C5105 +
            ((C23059 + C23058) * C17049 + C23060 * C51060) * C5106 +
            (((C19835 * C6008 + C50862 * C6011) * C603 +
              (C19835 * C6013 + C50862 * C6017) * C50880) *
                 C17049 +
             (C23072 + C23073) * C51060) *
                C5107) *
               C850) *
              C51151 +
          (((C22691 * C17049 + C22701 * C51060) * C5105 +
            (C22694 * C17049 + C22702 * C51060) * C5106 +
            (C23060 * C17049 + (C22714 + C22715) * C51060) * C5107) *
               C849 -
           (C23070 * C5107 + (C20462 * C51060 + C22700 * C17049) * C5106 +
            ((C20310 + C20309) * C51060 + (C20308 + C20307) * C17049) * C5105) *
               C848 -
           ((((C19835 * C23051 + C50862 * C23053) * C50880 +
              (C19835 * C23050 + C50862 * C23052) * C603) *
                 C51060 +
             (C23073 + C23072) * C17049) *
                C5107 +
            ((C22715 + C22714) * C51060 + C23057 * C17049) * C5106 +
            C23070 * C5105) *
               C850) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
                 C17053 * C127 + C17048 * C134) *
                    C256 +
                (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
                 C17053 * C138 + C17048 * C148) *
                    C251 -
                (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
                 C17051 * C126 + C17046 * C133) *
                    C257 -
                (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
                 C17051 * C137 + C17046 * C147) *
                    C252 +
                (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
                 C17053 * C129 + C17048 * C140) *
                    C258 +
                (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
                 C17053 * C141 + C17048 * C150) *
                    C253) *
                   C17049 +
               ((C17237 + C17238 + C17239) * C256 +
                (C17240 + C17241 + C17242) * C251 -
                (C17243 + C17244 + C17245) * C257 -
                (C17246 + C17247 + C17248) * C252 +
                (C17249 + C17250 + C17251) * C258 +
                (C17252 + C17253 + C17254) * C253) *
                   C51060) *
                  C51022 * C51152 +
              (((C17051 * C383 + C17046 * C389 + C17052 * C384 + C17047 * C390 +
                 C17053 * C385 + C17048 * C391) *
                    C257 -
                ((C17053 * C394 + C17048 * C402 + C17052 * C395 +
                  C17047 * C403 + C17051 * C396 + C17046 * C404) *
                     C251 +
                 (C17053 * C384 + C17048 * C390 + C17052 * C383 +
                  C17047 * C389 + C17051 * C387 + C17046 * C397) *
                     C256) +
                (C17051 * C395 + C17046 * C403 + C17052 * C394 + C17047 * C402 +
                 C17053 * C393 + C17048 * C401) *
                    C252 -
                (C17053 * C386 + C17048 * C392 + C17052 * C385 + C17047 * C391 +
                 C17051 * C384 + C17046 * C390) *
                    C258 -
                (C17053 * C398 + C17048 * C405 + C17052 * C393 + C17047 * C401 +
                 C17051 * C394 + C17046 * C402) *
                    C253) *
                   C17049 +
               ((C17051 * C719 + C17046 * C727 + C17052 * C720 + C17047 * C728 +
                 C17053 * C721 + C17048 * C729) *
                    C257 -
                ((C17053 * C732 + C17048 * C744 + C17052 * C731 +
                  C17047 * C743 + C17051 * C730 + C17046 * C742) *
                     C251 +
                 (C17053 * C720 + C17048 * C728 + C17052 * C719 +
                  C17047 * C727 + C17051 * C718 + C17046 * C726) *
                     C256) +
                (C17051 * C731 + C17046 * C743 + C17052 * C732 + C17047 * C744 +
                 C17053 * C733 + C17048 * C745) *
                    C252 -
                (C17053 * C1412 + C17048 * C1413 + C17052 * C721 +
                 C17047 * C729 + C17051 * C720 + C17046 * C728) *
                    C258 -
                (C17053 * C1414 + C17048 * C1415 + C17052 * C733 +
                 C17047 * C745 + C17051 * C732 + C17046 * C744) *
                    C253) *
                   C51060) *
                  C51022 * C50963) *
             C50925 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                  C17047 * C133 + C17053 * C127 + C17048 * C134) *
                     C603 +
                 (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                  C17047 * C147 + C17053 * C138 + C17048 * C148) *
                     C50880) *
                    C17049 +
                ((C17237 + C17238 + C17239) * C603 +
                 (C17240 + C17241 + C17242) * C50880) *
                    C51060) *
                   C51022 * C51152 -
               (((C17869 + C17870 + C17871) * C50880 +
                 (C17872 + C17873 + C17874) * C603) *
                    C51060 +
                ((C17053 * C394 + C17048 * C402 + C17052 * C395 +
                  C17047 * C403 + C17051 * C396 + C17046 * C404) *
                     C50880 +
                 (C17053 * C384 + C17048 * C390 + C17052 * C383 +
                  C17047 * C389 + C17051 * C387 + C17046 * C397) *
                     C603) *
                    C17049) *
                   C51022 * C50963) *
                  C507 +
              ((((C17874 + C17873 + C17872) * C603 +
                 (C17871 + C17870 + C17869) * C50880) *
                    C17049 +
                ((C17875 + C17876 + C17877) * C603 +
                 (C17878 + C17879 + C17880) * C50880) *
                    C51060) *
                   C51022 * C50963 -
               (((C17574 + C17575 + C17576) * C50880 +
                 (C17577 + C17578 + C17579) * C603) *
                    C51060 +
                ((C17242 + C17241 + C17240) * C50880 +
                 (C17239 + C17238 + C17237) * C603) *
                    C17049) *
                   C51022 * C51152) *
                  C508 +
              ((((C17579 + C17578 + C17577) * C603 +
                 (C17576 + C17575 + C17574) * C50880) *
                    C17049 +
                ((C17693 + C17694 + C17695) * C603 +
                 (C17696 + C17697 + C17698) * C50880) *
                    C51060) *
                   C51022 * C51152 -
               (((C17053 * C4009 + C17048 * C4010 + C17052 * C3014 +
                  C17047 * C3020 + C17051 * C3013 + C17046 * C3019) *
                     C50880 +
                 (C17053 * C4007 + C17048 * C4008 + C17052 * C3008 +
                  C17047 * C3012 + C17051 * C3007 + C17046 * C3011) *
                     C603) *
                    C51060 +
                ((C17880 + C17879 + C17878) * C50880 +
                 (C17877 + C17876 + C17875) * C603) *
                    C17049) *
                   C51022 * C50963) *
                  C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C603 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C50880) *
               C17049 +
           ((C17237 + C17238 + C17239) * C603 +
            (C17240 + C17241 + C17242) * C50880) *
               C51060) *
              C51022 * C1051 -
          (((C17869 + C17870 + C17871) * C50880 +
            (C17872 + C17873 + C17874) * C603) *
               C51060 +
           ((C17053 * C394 + C17048 * C402 + C17052 * C395 + C17047 * C403 +
             C17051 * C396 + C17046 * C404) *
                C50880 +
            (C17053 * C384 + C17048 * C390 + C17052 * C383 + C17047 * C389 +
             C17051 * C387 + C17046 * C397) *
                C603) *
               C17049) *
              C51022 * C1052 +
          (((C17051 * C851 + C17046 * C856 + C17052 * C852 + C17047 * C857 +
             C17053 * C853 + C17048 * C858) *
                C603 +
            (C17051 * C860 + C17046 * C866 + C17052 * C861 + C17047 * C867 +
             C17053 * C862 + C17048 * C868) *
                C50880) *
               C17049 +
           ((C18185 + C18186 + C18187) * C603 +
            (C18188 + C18189 + C18190) * C50880) *
               C51060) *
              C51022 * C1053 -
          (((C17053 * C6844 + C17048 * C6845 + C17052 * C3506 + C17047 * C3512 +
             C17051 * C3507 + C17046 * C3513) *
                C50880 +
            (C17053 * C6842 + C17048 * C6843 + C17052 * C3500 + C17047 * C3508 +
             C17051 * C3501 + C17046 * C3509) *
                C603) *
               C51060 +
           ((C17053 * C1060 + C17048 * C1068 + C17052 * C1061 + C17047 * C1069 +
             C17051 * C1062 + C17046 * C1070) *
                C50880 +
            (C17053 * C1056 + C17048 * C1064 + C17052 * C1057 + C17047 * C1065 +
             C17051 * C1058 + C17046 * C1066) *
                C603) *
               C17049) *
              C51022 * C1054) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C256 +
            (C19835 * C136 + C50862 * C146) * C251 -
            (C19835 * C126 + C50862 * C133) * C257 -
            (C19835 * C137 + C50862 * C147) * C252 +
            (C19835 * C127 + C50862 * C134) * C258 +
            (C19835 * C138 + C50862 * C148) * C253) *
               C19831 +
           (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C19832 +
           (C19995 + C19996 - C19997 - C19998 + C19999 + C20000) * C19833 +
           (C20001 + C20002 - C20003 - C20004 + C20005 + C20006) * C19834) *
              C51022 * C51152 +
          (((C19835 * C383 + C50862 * C389) * C257 -
            ((C19835 * C396 + C50862 * C404) * C251 +
             (C19835 * C387 + C50862 * C397) * C256) +
            (C19835 * C395 + C50862 * C403) * C252 -
            (C19835 * C384 + C50862 * C390) * C258 -
            (C19835 * C394 + C50862 * C402) * C253) *
               C19831 +
           ((C19835 * C719 + C50862 * C727) * C257 -
            ((C19835 * C730 + C50862 * C742) * C251 +
             (C19835 * C718 + C50862 * C726) * C256) +
            (C19835 * C731 + C50862 * C743) * C252 -
            (C19835 * C720 + C50862 * C728) * C258 -
            (C19835 * C732 + C50862 * C744) * C253) *
               C19832 +
           ((C19835 * C724 + C50862 * C740) * C257 -
            ((C19835 * C737 + C50862 * C749) * C251 +
             (C19835 * C725 + C50862 * C741) * C256) +
            (C19835 * C736 + C50862 * C748) * C252 -
            (C19835 * C723 + C50862 * C739) * C258 -
            (C19835 * C735 + C50862 * C747) * C253) *
               C19833 +
           ((C19835 * C3008 + C50862 * C3012) * C257 -
            ((C19835 * C3013 + C50862 * C3019) * C251 +
             (C19835 * C3007 + C50862 * C3011) * C256) +
            (C19835 * C3014 + C50862 * C3020) * C252 -
            (C19835 * C4007 + C50862 * C4008) * C258 -
            (C19835 * C4009 + C50862 * C4010) * C253) *
               C19834) *
              C51022 * C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C19831 +
            (C20307 + C20308) * C19832 + C20319 * C19833 + C20320 * C19834) *
               C51022 * C51152 -
           (C20461 * C19834 + C20462 * C19833 + (C20457 + C20458) * C19832 +
            ((C19835 * C396 + C50862 * C404) * C50880 +
             (C19835 * C387 + C50862 * C397) * C603) *
                C19831) *
               C51022 * C50963) *
              C507 +
          (((C20458 + C20457) * C19831 + (C20456 + C20455) * C19832 +
            (C20454 + C20453) * C19833 + (C20459 + C20460) * C19834) *
               C51022 * C50963 -
           (C20321 * C19834 + C20322 * C19833 + (C20310 + C20309) * C19832 +
            (C20308 + C20307) * C19831) *
               C51022 * C51152) *
              C508 +
          ((C20319 * C19831 + C20320 * C19832 + (C20314 + C20313) * C19833 +
            (C20325 + C20326) * C19834) *
               C51022 * C51152 -
           (((C19835 * C20425 + C50862 * C20427) * C50880 +
             (C19835 * C20424 + C50862 * C20426) * C603) *
                C19834 +
            (C20460 + C20459) * C19833 + C20461 * C19832 + C20462 * C19831) *
               C51022 * C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C603 +
            (C19835 * C136 + C50862 * C146) * C50880) *
               C19831 +
           (C20307 + C20308) * C19832 + C20319 * C19833 + C20320 * C19834) *
              C51022 * C1051 -
          (C20461 * C19834 + C20462 * C19833 + (C20457 + C20458) * C19832 +
           ((C19835 * C396 + C50862 * C404) * C50880 +
            (C19835 * C387 + C50862 * C397) * C603) *
               C19831) *
              C51022 * C1052 +
          (((C19835 * C851 + C50862 * C856) * C603 +
            (C19835 * C860 + C50862 * C866) * C50880) *
               C19831 +
           (C20681 + C20682) * C19832 + (C20683 + C20684) * C19833 +
           (C20685 + C20686) * C19834) *
              C51022 * C1053 -
          (((C19835 * C20753 + C50862 * C20755) * C50880 +
            (C19835 * C20752 + C50862 * C20754) * C603) *
               C19834 +
           ((C19835 * C3503 + C50862 * C3511) * C50880 +
            (C19835 * C3499 + C50862 * C3505) * C603) *
               C19833 +
           ((C19835 * C3507 + C50862 * C3513) * C50880 +
            (C19835 * C3501 + C50862 * C3509) * C603) *
               C19832 +
           ((C19835 * C1062 + C50862 * C1070) * C50880 +
            (C19835 * C1058 + C50862 * C1066) * C603) *
               C19831) *
              C51022 * C1054) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C256 +
             (C19835 * C136 + C50862 * C146) * C251 -
             (C19835 * C126 + C50862 * C133) * C257 -
             (C19835 * C137 + C50862 * C147) * C252 +
             (C19835 * C127 + C50862 * C134) * C258 +
             (C19835 * C138 + C50862 * C148) * C253) *
                C17049 +
            (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C51060) *
               C5105 +
           ((C22273 + C22274 - C22275 - C22276 + C22277 + C22278) * C17049 +
            (C22061 + C22062 - C22063 - C22064 + C22085 + C22086) * C51060) *
               C5106 +
           ((C22279 + C22280 - C22281 - C22282 + C22283 + C22284) * C17049 +
            (C22069 + C22070 - C22087 - C22088 + C22089 + C22090) * C51060) *
               C5107) *
              C51152 +
          (((C22275 - (C22274 + C22273) + C22276 - C22277 - C22278) * C17049 +
            (C22063 - (C22062 + C22061) + C22064 - C22085 - C22086) * C51060) *
               C5105 +
           ((C22281 - (C22280 + C22279) + C22282 - C22283 - C22284) * C17049 +
            (C22087 - (C22070 + C22069) + C22088 - C22089 - C22090) * C51060) *
               C5106 +
           (((C19835 * C1057 + C50862 * C1065) * C257 -
             ((C19835 * C1062 + C50862 * C1070) * C251 +
              (C19835 * C1058 + C50862 * C1066) * C256) +
             (C19835 * C1061 + C50862 * C1069) * C252 -
             (C19835 * C1056 + C50862 * C1064) * C258 -
             (C19835 * C1060 + C50862 * C1068) * C253) *
                C17049 +
            ((C19835 * C3500 + C50862 * C3508) * C257 -
             ((C19835 * C3507 + C50862 * C3513) * C251 +
              (C19835 * C3501 + C50862 * C3509) * C256) +
             (C19835 * C3506 + C50862 * C3512) * C252 -
             (C19835 * C6842 + C50862 * C6843) * C258 -
             (C19835 * C6844 + C50862 * C6845) * C253) *
                C51060) *
               C5107) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C603 +
              (C19835 * C136 + C50862 * C146) * C50880) *
                 C17049 +
             (C20307 + C20308) * C51060) *
                C5105 +
            ((C22689 + C22690) * C17049 + C22691 * C51060) * C5106 +
            ((C22692 + C22693) * C17049 + C22694 * C51060) * C5107) *
               C51152 -
           (((C22712 + C22713) * C51060 +
             ((C19835 * C1062 + C50862 * C1070) * C50880 +
              (C19835 * C1058 + C50862 * C1066) * C603) *
                 C17049) *
                C5107 +
            (C22699 * C51060 + (C22693 + C22692) * C17049) * C5106 +
            (C22700 * C51060 + (C22690 + C22689) * C17049) * C5105) *
               C50963) *
              C507 +
          (((C22691 * C17049 + C22701 * C51060) * C5105 +
            (C22694 * C17049 + C22702 * C51060) * C5106 +
            ((C22713 + C22712) * C17049 + (C22714 + C22715) * C51060) * C5107) *
               C50963 -
           ((C22707 * C51060 + C22699 * C17049) * C5107 +
            (C20462 * C51060 + C22700 * C17049) * C5106 +
            ((C20310 + C20309) * C51060 + (C20308 + C20307) * C17049) * C5105) *
               C51152) *
              C508 +
          (((C20319 * C17049 + C20320 * C51060) * C5105 +
            (C22701 * C17049 + (C20454 + C20453) * C51060) * C5106 +
            (C22702 * C17049 + (C20685 + C20686) * C51060) * C5107) *
               C51152 -
           ((((C19835 * C20753 + C50862 * C20755) * C50880 +
              (C19835 * C20752 + C50862 * C20754) * C603) *
                 C51060 +
             (C22715 + C22714) * C17049) *
                C5107 +
            ((C20686 + C20685) * C51060 + C22707 * C17049) * C5106 +
            (C20461 * C51060 + C20462 * C17049) * C5105) *
               C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C17049 +
            (C20307 + C20308) * C51060) *
               C5105 +
           ((C22689 + C22690) * C17049 + C22691 * C51060) * C5106 +
           C23071 * C5107) *
              C1051 -
          (C23185 * C5107 +
           (C22699 * C51060 + (C22693 + C22692) * C17049) * C5106 +
           (C22700 * C51060 + (C22690 + C22689) * C17049) * C5105) *
              C1052 +
          (C23071 * C5105 +
           ((C23059 + C23058) * C17049 + C23060 * C51060) * C5106 +
           ((C23186 + C23187) * C17049 + (C23072 + C23073) * C51060) * C5107) *
              C1053 -
          ((((C19835 * C23172 + C50862 * C23174) * C50880 +
             (C19835 * C23171 + C50862 * C23173) * C603) *
                C51060 +
            ((C19835 * C6333 + C50862 * C6337) * C50880 +
             (C19835 * C6331 + C50862 * C6335) * C603) *
                C17049) *
               C5107 +
           ((C23073 + C23072) * C51060 + (C23187 + C23186) * C17049) * C5106 +
           C23185 * C5105) *
              C1054) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C1174 +
            (C19835 * C136 + C50862 * C146) * C51196 -
            (C19835 * C126 + C50862 * C133) * C1175 -
            (C19835 * C137 + C50862 * C147) * C51181 +
            (C19835 * C127 + C50862 * C134) * C1176 +
            (C19835 * C138 + C50862 * C148) * C1171) *
               C19831 +
           (C20855 + C20856 - C20857 - C20858 + C20859 + C20860) * C19832 +
           (C20861 + C20862 - C20863 - C20864 + C20865 + C20866) * C19833 +
           (C20867 + C20868 - C20869 - C20870 + C20871 + C20872) * C19834) *
              C51022 * C1514 +
          (((C19835 * C383 + C50862 * C389) * C1175 -
            ((C19835 * C396 + C50862 * C404) * C51196 +
             (C19835 * C387 + C50862 * C397) * C1174) +
            (C19835 * C395 + C50862 * C403) * C51181 -
            (C19835 * C384 + C50862 * C390) * C1176 -
            (C19835 * C394 + C50862 * C402) * C1171) *
               C19831 +
           (C21141 * C1175 - (C20449 * C51196 + C20450 * C1174) +
            C21142 * C51181 - (C19835 * C720 + C50862 * C728) * C1176 -
            (C19835 * C732 + C50862 * C744) * C1171) *
               C19832 +
           (C21143 * C1175 - (C20447 * C51196 + C20448 * C1174) +
            C21144 * C51181 - (C19835 * C723 + C50862 * C739) * C1176 -
            (C19835 * C735 + C50862 * C747) * C1171) *
               C19833 +
           (C21145 * C1175 - (C20445 * C51196 + C20446 * C1174) +
            C21146 * C51181 - (C19835 * C4007 + C50862 * C4008) * C1176 -
            (C19835 * C4009 + C50862 * C4010) * C1171) *
               C19834) *
              C51022 * C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C1174 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C51196 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C1175 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C51181 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C1176 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C1171) *
               C17049 +
           ((C17237 + C17238 + C17239) * C1174 +
            (C17240 + C17241 + C17242) * C51196 -
            (C17243 + C17244 + C17245) * C1175 -
            (C17246 + C17247 + C17248) * C51181 +
            (C17249 + C17250 + C17251) * C1176 +
            (C17252 + C17253 + C17254) * C1171) *
               C51060) *
              C51022 * C1514 +
          (((C17051 * C383 + C17046 * C389 + C17052 * C384 + C17047 * C390 +
             C17053 * C385 + C17048 * C391) *
                C1175 -
            ((C17053 * C394 + C17048 * C402 + C17052 * C395 + C17047 * C403 +
              C17051 * C396 + C17046 * C404) *
                 C51196 +
             (C17053 * C384 + C17048 * C390 + C17052 * C383 + C17047 * C389 +
              C17051 * C387 + C17046 * C397) *
                 C1174) +
            (C17051 * C395 + C17046 * C403 + C17052 * C394 + C17047 * C402 +
             C17053 * C393 + C17048 * C401) *
                C51181 -
            (C17053 * C386 + C17048 * C392 + C17052 * C385 + C17047 * C391 +
             C17051 * C384 + C17046 * C390) *
                C1176 -
            (C17053 * C398 + C17048 * C405 + C17052 * C393 + C17047 * C401 +
             C17051 * C394 + C17046 * C402) *
                C1171) *
               C17049 +
           ((C18787 + C18788 + C18789) * C1175 -
            ((C17869 + C17870 + C17871) * C51196 +
             (C17872 + C17873 + C17874) * C1174) +
            (C18790 + C18791 + C18792) * C51181 -
            (C17053 * C1412 + C17048 * C1413 + C17052 * C721 + C17047 * C729 +
             C17051 * C720 + C17046 * C728) *
                C1176 -
            (C17053 * C1414 + C17048 * C1415 + C17052 * C733 + C17047 * C745 +
             C17051 * C732 + C17046 * C744) *
                C1171) *
               C51060) *
              C51022 * C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C1174 +
             (C19835 * C136 + C50862 * C146) * C51196 -
             (C19835 * C126 + C50862 * C133) * C1175 -
             (C19835 * C137 + C50862 * C147) * C51181 +
             (C19835 * C127 + C50862 * C134) * C1176 +
             (C19835 * C138 + C50862 * C148) * C1171) *
                C17049 +
            (C20855 + C20856 - C20857 - C20858 + C20859 + C20860) * C51060) *
               C5105 +
           ((C23864 + C23865 - C23866 - C23867 + C23868 + C23869) * C17049 +
            (C23334 + C23335 - C23336 - C23337 + C23338 + C23339) * C51060) *
               C5106 +
           ((C23870 + C23871 - C23872 - C23873 + C23874 + C23875) * C17049 +
            (C23340 + C23341 - C23342 - C23343 + C23344 + C23345) * C51060) *
               C5107) *
              C1514 +
          (((C23866 - (C23865 + C23864) + C23867 - C23868 - C23869) * C17049 +
            (C23336 - (C23335 + C23334) + C23337 - C23338 - C23339) * C51060) *
               C5105 +
           ((C23872 - (C23871 + C23870) + C23873 - C23874 - C23875) * C17049 +
            (C23342 - (C23341 + C23340) + C23343 - C23344 - C23345) * C51060) *
               C5106 +
           ((C22887 * C1175 - (C22888 * C51196 + C22889 * C1174) +
             C22890 * C51181 - (C19835 * C1056 + C50862 * C1064) * C1176 -
             (C19835 * C1060 + C50862 * C1068) * C1171) *
                C17049 +
            (C22891 * C1175 - (C22708 * C51196 + C22709 * C1174) +
             C22892 * C51181 - (C19835 * C6842 + C50862 * C6843) * C1176 -
             (C19835 * C6844 + C50862 * C6845) * C1171) *
                C51060) *
               C5107) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C1280 +
             (C19835 * C136 + C50862 * C146) * C1275 -
             (C19835 * C126 + C50862 * C133) * C1281 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C19831 +
            (C20971 + C20972 - C20973 - C20974) * C19832 + C20991 * C19833 +
            C20992 * C19834) *
               C51022 * C1514 +
           (((C19835 * C383 + C50862 * C389) * C1281 -
             ((C19835 * C396 + C50862 * C404) * C1275 +
              (C19835 * C387 + C50862 * C397) * C1280) +
             (C19835 * C395 + C50862 * C403) * C50885) *
                C19831 +
            (C21147 - (C21125 + C21126) + C21148) * C19832 +
            (C21149 - (C21131 + C21132) + C21150) * C19833 +
            (C21151 - (C21137 + C21138) + C21152) * C19834) *
               C51022 * C50963) *
              C51151 +
          (((C20973 - (C20972 + C20971) + C20974) * C19831 +
            (C20977 - (C20976 + C20975) + C20978) * C19832 +
            (C20981 - (C20980 + C20979) + C20982) * C19833 +
            (C20983 - (C20984 + C20985) + C20986) * C19834) *
               C51022 * C1514 +
           ((C21126 + C21125 - C21147 - C21148) * C19831 +
            (C21132 + C21131 - C21149 - C21150) * C19832 +
            (C21138 + C21137 - C21151 - C21152) * C19833 +
            (C20451 * C1280 + C20452 * C1275 -
             (C19835 * C3009 + C50862 * C3017) * C1281 -
             (C19835 * C3015 + C50862 * C3021) * C50885) *
                C19834) *
               C51022 * C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C1280 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C1275 -
             (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
              C17051 * C126 + C17046 * C133) *
                 C1281 -
             (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
              C17051 * C137 + C17046 * C147) *
                 C50885) *
                C17049 +
            ((C17237 + C17238 + C17239) * C1280 +
             (C17240 + C17241 + C17242) * C1275 -
             (C17243 + C17244 + C17245) * C1281 -
             (C17246 + C17247 + C17248) * C50885) *
                C51060) *
               C51022 * C1514 +
           (((C17051 * C383 + C17046 * C389 + C17052 * C384 + C17047 * C390 +
              C17053 * C385 + C17048 * C391) *
                 C1281 -
             ((C17053 * C394 + C17048 * C402 + C17052 * C395 + C17047 * C403 +
               C17051 * C396 + C17046 * C404) *
                  C1275 +
              (C17053 * C384 + C17048 * C390 + C17052 * C383 + C17047 * C389 +
               C17051 * C387 + C17046 * C397) *
                  C1280) +
             (C17051 * C395 + C17046 * C403 + C17052 * C394 + C17047 * C402 +
              C17053 * C393 + C17048 * C401) *
                 C50885) *
                C17049 +
            ((C18787 + C18788 + C18789) * C1281 -
             ((C17869 + C17870 + C17871) * C1275 +
              (C17872 + C17873 + C17874) * C1280) +
             (C18790 + C18791 + C18792) * C50885) *
                C51060) *
               C51022 * C50963) *
              C51151 +
          ((((C17245 + C17244 + C17243) * C1281 -
             ((C17242 + C17241 + C17240) * C1275 +
              (C17239 + C17238 + C17237) * C1280) +
             (C17248 + C17247 + C17246) * C50885) *
                C17049 +
            ((C17571 + C17572 + C17573) * C1281 -
             ((C17574 + C17575 + C17576) * C1275 +
              (C17577 + C17578 + C17579) * C1280) +
             (C17580 + C17581 + C17582) * C50885) *
                C51060) *
               C51022 * C1514 +
           (((C17874 + C17873 + C17872) * C1280 +
             (C17871 + C17870 + C17869) * C1275 -
             (C18789 + C18788 + C18787) * C1281 -
             (C18792 + C18791 + C18790) * C50885) *
                C17049 +
            ((C17875 + C17876 + C17877) * C1280 +
             (C17878 + C17879 + C17880) * C1275 -
             (C17053 * C722 + C17048 * C738 + C17052 * C723 + C17047 * C739 +
              C17051 * C724 + C17046 * C740) *
                 C1281 -
             (C17053 * C734 + C17048 * C746 + C17052 * C735 + C17047 * C747 +
              C17051 * C736 + C17046 * C748) *
                 C50885) *
                C51060) *
               C51022 * C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C1280 +
              (C19835 * C136 + C50862 * C146) * C1275 -
              (C19835 * C126 + C50862 * C133) * C1281 -
              (C19835 * C137 + C50862 * C147) * C50885) *
                 C17049 +
             (C20971 + C20972 - C20973 - C20974) * C51060) *
                C5105 +
            ((C23694 + C23695 - C23696 - C23697) * C17049 + C23714 * C51060) *
                C5106 +
            ((C23699 + C23700 - C23701 - C23702) * C17049 + C23715 * C51060) *
                C5107) *
               C1514 +
           (((C23696 - (C23695 + C23694) + C23697) * C17049 + C23716 * C51060) *
                C5105 +
            ((C23701 - (C23700 + C23699) + C23702) * C17049 + C23717 * C51060) *
                C5106 +
            ((C22887 * C1281 - (C22888 * C1275 + C22889 * C1280) +
              C22890 * C50885) *
                 C17049 +
             (C23706 - (C23707 + C23708) + C23709) * C51060) *
                C5107) *
               C50963) *
              C51151 +
          ((((C20973 - (C20972 + C20971) + C20974) * C17049 +
             (C20977 - (C20976 + C20975) + C20978) * C51060) *
                C5105 +
            (C23716 * C17049 + (C21149 - (C21131 + C21132) + C21150) * C51060) *
                C5106 +
            (C23717 * C17049 + (C23496 - (C23497 + C23498) + C23499) * C51060) *
                C5107) *
               C1514 +
           ((C23714 * C17049 + (C21132 + C21131 - C21149 - C21150) * C51060) *
                C5105 +
            (C23715 * C17049 + (C23498 + C23497 - C23496 - C23499) * C51060) *
                C5106 +
            ((C23708 + C23707 - C23706 - C23709) * C17049 +
             (C22710 * C1280 + C22711 * C1275 -
              (C19835 * C3498 + C50862 * C3504) * C1281 -
              (C19835 * C3502 + C50862 * C3510) * C50885) *
                 C51060) *
                C5107) *
               C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C1280 +
            (C19835 * C136 + C50862 * C146) * C1275 -
            (C19835 * C126 + C50862 * C133) * C1281 -
            (C19835 * C137 + C50862 * C147) * C50885) *
               C19831 +
           (C20971 + C20972 - C20973 - C20974) * C19832 + C20991 * C19833 +
           C20992 * C19834) *
              C51022 * C51198 +
          (((C19835 * C383 + C50862 * C389) * C1281 -
            ((C19835 * C396 + C50862 * C404) * C1275 +
             (C19835 * C387 + C50862 * C397) * C1280) +
            (C19835 * C395 + C50862 * C403) * C50885) *
               C19831 +
           (C21147 - (C21125 + C21126) + C21148) * C19832 +
           (C21149 - (C21131 + C21132) + C21150) * C19833 +
           (C21151 - (C21137 + C21138) + C21152) * C19834) *
              C51022 * C51187 +
          (((C19835 * C851 + C50862 * C856) * C1280 +
            (C19835 * C860 + C50862 * C866) * C1275 -
            (C19835 * C852 + C50862 * C857) * C1281 -
            (C19835 * C861 + C50862 * C867) * C50885) *
               C19831 +
           (C20675 * C1280 + C20676 * C1275 -
            (C19835 * C971 + C50862 * C979) * C1281 -
            (C19835 * C975 + C50862 * C983) * C50885) *
               C19832 +
           (C20677 * C1280 + C20678 * C1275 -
            (C19835 * C3211 + C50862 * C3214) * C1281 -
            (C19835 * C3216 + C50862 * C3220) * C50885) *
               C19833 +
           (C20679 * C1280 + C20680 * C1275 -
            (C19835 * C3368 + C50862 * C3372) * C1281 -
            (C19835 * C3370 + C50862 * C3374) * C50885) *
               C19834) *
              C51022 * C1746) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C1280 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C1275 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C1281 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C50885) *
               C17049 +
           ((C17237 + C17238 + C17239) * C1280 +
            (C17240 + C17241 + C17242) * C1275 -
            (C17243 + C17244 + C17245) * C1281 -
            (C17246 + C17247 + C17248) * C50885) *
               C51060) *
              C51022 * C51198 +
          (((C17051 * C383 + C17046 * C389 + C17052 * C384 + C17047 * C390 +
             C17053 * C385 + C17048 * C391) *
                C1281 -
            ((C17053 * C394 + C17048 * C402 + C17052 * C395 + C17047 * C403 +
              C17051 * C396 + C17046 * C404) *
                 C1275 +
             (C17053 * C384 + C17048 * C390 + C17052 * C383 + C17047 * C389 +
              C17051 * C387 + C17046 * C397) *
                 C1280) +
            (C17051 * C395 + C17046 * C403 + C17052 * C394 + C17047 * C402 +
             C17053 * C393 + C17048 * C401) *
                C50885) *
               C17049 +
           ((C18787 + C18788 + C18789) * C1281 -
            ((C17869 + C17870 + C17871) * C1275 +
             (C17872 + C17873 + C17874) * C1280) +
            (C18790 + C18791 + C18792) * C50885) *
               C51060) *
              C51022 * C51187 +
          (((C17051 * C851 + C17046 * C856 + C17052 * C852 + C17047 * C857 +
             C17053 * C853 + C17048 * C858) *
                C1280 +
            (C17051 * C860 + C17046 * C866 + C17052 * C861 + C17047 * C867 +
             C17053 * C862 + C17048 * C868) *
                C1275 -
            (C17053 * C854 + C17048 * C859 + C17052 * C853 + C17047 * C858 +
             C17051 * C852 + C17046 * C857) *
                C1281 -
            (C17053 * C863 + C17048 * C869 + C17052 * C862 + C17047 * C868 +
             C17051 * C861 + C17046 * C867) *
                C50885) *
               C17049 +
           ((C18185 + C18186 + C18187) * C1280 +
            (C18188 + C18189 + C18190) * C1275 -
            (C17053 * C969 + C17048 * C977 + C17052 * C970 + C17047 * C978 +
             C17051 * C971 + C17046 * C979) *
                C1281 -
            (C17053 * C973 + C17048 * C981 + C17052 * C974 + C17047 * C982 +
             C17051 * C975 + C17046 * C983) *
                C50885) *
               C51060) *
              C51022 * C1746) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C1280 +
             (C19835 * C136 + C50862 * C146) * C1275 -
             (C19835 * C126 + C50862 * C133) * C1281 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C17049 +
            (C20971 + C20972 - C20973 - C20974) * C51060) *
               C5105 +
           ((C23694 + C23695 - C23696 - C23697) * C17049 + C23714 * C51060) *
               C5106 +
           C24225 * C5107) *
              C51198 +
          (((C23696 - (C23695 + C23694) + C23697) * C17049 + C23716 * C51060) *
               C5105 +
           ((C23701 - (C23700 + C23699) + C23702) * C17049 + C23717 * C51060) *
               C5106 +
           ((C24218 - (C24219 + C24220) + C24221) * C17049 +
            (C23706 - (C23707 + C23708) + C23709) * C51060) *
               C5107) *
              C51187 +
          (C24225 * C5105 +
           ((C24220 + C24219 - C24218 - C24221) * C17049 +
            (C23708 + C23707 - C23706 - C23709) * C51060) *
               C5106 +
           ((C23183 * C1280 + C23184 * C1275 -
             (C19835 * C6009 + C50862 * C6012) * C1281 -
             (C19835 * C6014 + C50862 * C6018) * C50885) *
                C17049 +
            (C23068 * C1280 + C23069 * C1275 -
             (C19835 * C6202 + C50862 * C6206) * C1281 -
             (C19835 * C6204 + C50862 * C6208) * C50885) *
                C51060) *
               C5107) *
              C1746) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[117] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                      C17047 * C133 + C17053 * C127 + C17048 * C134) *
                         C50007 +
                     (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                      C17047 * C147 + C17053 * C138 + C17048 * C148) *
                         C51143 -
                     (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                      C17047 * C134 + C17051 * C126 + C17046 * C133) *
                         C50000 -
                     (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                      C17047 * C148 + C17051 * C137 + C17046 * C147) *
                         C50885) *
                        C17049 +
                    ((C17237 + C17238 + C17239) * C50007 +
                     (C17240 + C17241 + C17242) * C51143 -
                     (C17243 + C17244 + C17245) * C50000 -
                     (C17246 + C17247 + C17248) * C50885) *
                        C51060) *
                       C51022 * C50951 * C507 +
                   (((C17245 + C17244 + C17243) * C50000 -
                     ((C17242 + C17241 + C17240) * C51143 +
                      (C17239 + C17238 + C17237) * C50007) +
                     (C17248 + C17247 + C17246) * C50885) *
                        C17049 +
                    ((C17571 + C17572 + C17573) * C50000 -
                     ((C17574 + C17575 + C17576) * C51143 +
                      (C17577 + C17578 + C17579) * C50007) +
                     (C17580 + C17581 + C17582) * C50885) *
                        C51060) *
                       C51022 * C50951 * C508 +
                   (((C17579 + C17578 + C17577) * C50007 +
                     (C17576 + C17575 + C17574) * C51143 -
                     (C17573 + C17572 + C17571) * C50000 -
                     (C17582 + C17581 + C17580) * C50885) *
                        C17049 +
                    ((C17051 * C607 + C17046 * C615 + C17052 * C606 +
                      C17047 * C614 + C17053 * C605 + C17048 * C613) *
                         C50007 +
                     (C17051 * C611 + C17046 * C619 + C17052 * C610 +
                      C17047 * C618 + C17053 * C609 + C17048 * C617) *
                         C51143 -
                     (C17053 * C604 + C17048 * C612 + C17052 * C605 +
                      C17047 * C613 + C17051 * C606 + C17046 * C614) *
                         C50000 -
                     (C17053 * C608 + C17048 * C616 + C17052 * C609 +
                      C17047 * C617 + C17051 * C610 + C17046 * C618) *
                         C50885) *
                        C51060) *
                       C51022 * C50951 * C509)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                     C17047 * C133 + C17053 * C127 + C17048 * C134) *
                        C121 +
                    (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                     C17047 * C147 + C17053 * C138 + C17048 * C148) *
                        C109 -
                    (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                     C17047 * C134 + C17051 * C126 + C17046 * C133) *
                        C122 -
                    (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                     C17047 * C148 + C17051 * C137 + C17046 * C147) *
                        C110 +
                    (C17051 * C127 + C17046 * C134 + C17052 * C128 +
                     C17047 * C135 + C17053 * C129 + C17048 * C140) *
                        C123 +
                    (C17051 * C138 + C17046 * C148 + C17052 * C139 +
                     C17047 * C149 + C17053 * C141 + C17048 * C150) *
                        C111 -
                    (C17053 * C130 + C17048 * C142 + C17052 * C129 +
                     C17047 * C140 + C17051 * C128 + C17046 * C135) *
                        C124 -
                    (C17053 * C143 + C17048 * C151 + C17052 * C141 +
                     C17047 * C150 + C17051 * C139 + C17046 * C149) *
                        C112) *
                       C17049 +
                   ((C17051 * C263 + C17046 * C273 + C17052 * C259 +
                     C17047 * C265 + C17053 * C260 + C17048 * C266) *
                        C121 +
                    (C17051 * C272 + C17046 * C280 + C17052 * C271 +
                     C17047 * C279 + C17053 * C270 + C17048 * C278) *
                        C109 -
                    (C17053 * C261 + C17048 * C267 + C17052 * C260 +
                     C17047 * C266 + C17051 * C259 + C17046 * C265) *
                        C122 -
                    (C17053 * C269 + C17048 * C277 + C17052 * C270 +
                     C17047 * C278 + C17051 * C271 + C17046 * C279) *
                        C110 +
                    (C17051 * C260 + C17046 * C266 + C17052 * C261 +
                     C17047 * C267 + C17053 * C262 + C17048 * C268) *
                        C123 +
                    (C17051 * C270 + C17046 * C278 + C17052 * C269 +
                     C17047 * C277 + C17053 * C274 + C17048 * C281) *
                        C111 -
                    (C17053 * C264 + C17048 * C275 + C17052 * C262 +
                     C17047 * C268 + C17051 * C261 + C17046 * C267) *
                        C124 -
                    (C17053 * C276 + C17048 * C282 + C17052 * C274 +
                     C17047 * C281 + C17051 * C269 + C17046 * C277) *
                        C112) *
                       C51060) *
                  C51022 * C50951 * C50925) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C19835 * C125 + C50862 * C132) * C121 +
                    (C19835 * C136 + C50862 * C146) * C109 -
                    (C19835 * C126 + C50862 * C133) * C122 -
                    (C19835 * C137 + C50862 * C147) * C110 +
                    (C19835 * C127 + C50862 * C134) * C123 +
                    (C19835 * C138 + C50862 * C148) * C111 -
                    (C19835 * C128 + C50862 * C135) * C124 -
                    (C19835 * C139 + C50862 * C149) * C112) *
                       C19831 +
                   ((C19835 * C263 + C50862 * C273) * C121 +
                    (C19835 * C272 + C50862 * C280) * C109 -
                    (C19835 * C259 + C50862 * C265) * C122 -
                    (C19835 * C271 + C50862 * C279) * C110 +
                    (C19835 * C260 + C50862 * C266) * C123 +
                    (C19835 * C270 + C50862 * C278) * C111 -
                    (C19835 * C261 + C50862 * C267) * C124 -
                    (C19835 * C269 + C50862 * C277) * C112) *
                       C19832 +
                   ((C19835 * C512 + C50862 * C517) * C121 +
                    (C19835 * C521 + C50862 * C527) * C109 -
                    (C19835 * C513 + C50862 * C518) * C122 -
                    (C19835 * C522 + C50862 * C528) * C110 +
                    (C19835 * C514 + C50862 * C519) * C123 +
                    (C19835 * C523 + C50862 * C529) * C111 -
                    (C19835 * C515 + C50862 * C520) * C124 -
                    (C19835 * C524 + C50862 * C530) * C112) *
                       C19833 +
                   ((C19835 * C607 + C50862 * C615) * C121 +
                    (C19835 * C611 + C50862 * C619) * C109 -
                    (C19835 * C606 + C50862 * C614) * C122 -
                    (C19835 * C610 + C50862 * C618) * C110 +
                    (C19835 * C605 + C50862 * C613) * C123 +
                    (C19835 * C609 + C50862 * C617) * C111 -
                    (C19835 * C604 + C50862 * C612) * C124 -
                    (C19835 * C608 + C50862 * C616) * C112) *
                       C19834) *
                  C51022 * C50951 * C50925) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C19835 * C125 + C50862 * C132) * C50007 +
                     (C19835 * C136 + C50862 * C146) * C51143 -
                     (C19835 * C126 + C50862 * C133) * C50000 -
                     (C19835 * C137 + C50862 * C147) * C50885) *
                        C19831 +
                    (C20203 + C20204 - C20205 - C20206) * C19832 +
                    C20235 * C19833 + C20236 * C19834) *
                       C51022 * C50951 * C507 +
                   ((C20205 - (C20204 + C20203) + C20206) * C19831 +
                    (C20209 - (C20208 + C20207) + C20210) * C19832 +
                    (C20213 - (C20212 + C20211) + C20214) * C19833 +
                    (C20231 - (C20232 + C20233) + C20234) * C19834) *
                       C51022 * C50951 * C508 +
                   (C20235 * C19831 + C20236 * C19832 +
                    (C20233 + C20232 - C20231 - C20234) * C19833 +
                    ((C19835 * C2834 + C50862 * C2838) * C50007 +
                     (C19835 * C2836 + C50862 * C2840) * C51143 -
                     (C19835 * C2833 + C50862 * C2837) * C50000 -
                     (C19835 * C2835 + C50862 * C2839) * C50885) *
                        C19834) *
                       C51022 * C50951 * C509)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C19835 * C125 + C50862 * C132) * C121 +
                     (C19835 * C136 + C50862 * C146) * C109 -
                     (C19835 * C126 + C50862 * C133) * C122 -
                     (C19835 * C137 + C50862 * C147) * C110 +
                     (C19835 * C127 + C50862 * C134) * C123 +
                     (C19835 * C138 + C50862 * C148) * C111 -
                     (C19835 * C128 + C50862 * C135) * C124 -
                     (C19835 * C139 + C50862 * C149) * C112) *
                        C17049 +
                    (C19971 * C121 + C19972 * C109 - C19973 * C122 -
                     C19974 * C110 + C19975 * C123 + C19976 * C111 -
                     (C19835 * C261 + C50862 * C267) * C124 -
                     (C19835 * C269 + C50862 * C277) * C112) *
                        C51060) *
                       C5105 +
                   (((C19835 * C387 + C50862 * C397) * C121 +
                     (C19835 * C396 + C50862 * C404) * C109 -
                     (C19835 * C383 + C50862 * C389) * C122 -
                     (C19835 * C395 + C50862 * C403) * C110 +
                     (C19835 * C384 + C50862 * C390) * C123 +
                     (C19835 * C394 + C50862 * C402) * C111 -
                     (C19835 * C385 + C50862 * C391) * C124 -
                     (C19835 * C393 + C50862 * C401) * C112) *
                        C17049 +
                    (C20450 * C121 + C20449 * C109 - C21141 * C122 -
                     C21142 * C110 + (C19835 * C720 + C50862 * C728) * C123 +
                     (C19835 * C732 + C50862 * C744) * C111 -
                     (C19835 * C721 + C50862 * C729) * C124 -
                     (C19835 * C733 + C50862 * C745) * C112) *
                        C51060) *
                       C5106 +
                   (((C19835 * C851 + C50862 * C856) * C121 +
                     (C19835 * C860 + C50862 * C866) * C109 -
                     (C19835 * C852 + C50862 * C857) * C122 -
                     (C19835 * C861 + C50862 * C867) * C110 +
                     (C19835 * C853 + C50862 * C858) * C123 +
                     (C19835 * C862 + C50862 * C868) * C111 -
                     (C19835 * C854 + C50862 * C859) * C124 -
                     (C19835 * C863 + C50862 * C869) * C112) *
                        C17049 +
                    (C20675 * C121 + C20676 * C109 -
                     (C19835 * C971 + C50862 * C979) * C122 -
                     (C19835 * C975 + C50862 * C983) * C110 +
                     (C19835 * C970 + C50862 * C978) * C123 +
                     (C19835 * C974 + C50862 * C982) * C111 -
                     (C19835 * C969 + C50862 * C977) * C124 -
                     (C19835 * C973 + C50862 * C981) * C112) *
                        C51060) *
                       C5107) *
                  C50951 * C50925) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C19835 * C125 + C50862 * C132) * C50007 +
                      (C19835 * C136 + C50862 * C146) * C51143 -
                      (C19835 * C126 + C50862 * C133) * C50000 -
                      (C19835 * C137 + C50862 * C147) * C50885) *
                         C17049 +
                     (C20203 + C20204 - C20205 - C20206) * C51060) *
                        C5105 +
                    ((C22261 * C50007 + C22262 * C51143 - C22263 * C50000 -
                      C22264 * C50885) *
                         C17049 +
                     (C21611 + C21610 - C21609 - C21612) * C51060) *
                        C5106 +
                    ((C22267 * C50007 + C22268 * C51143 - C22269 * C50000 -
                      C22270 * C50885) *
                         C17049 +
                     (C22431 + C22432 - C22433 - C22434) * C51060) *
                        C5107) *
                       C50951 * C507 +
                   (((C20205 - (C20204 + C20203) + C20206) * C17049 +
                     (C20209 - (C20208 + C20207) + C20210) * C51060) *
                        C5105 +
                    ((C21609 - (C21610 + C21611) + C21612) * C17049 +
                     (C21613 - (C21614 + C21615) + C21616) * C51060) *
                        C5106 +
                    ((C22433 - (C22432 + C22431) + C22434) * C17049 +
                     (C22443 - (C22437 + C22438) + C22444) * C51060) *
                        C5107) *
                       C50951 * C508 +
                   ((C20235 * C17049 + C20236 * C51060) * C5105 +
                    ((C21615 + C21614 - C21613 - C21616) * C17049 +
                     (C21619 + C21618 - C21617 - C21620) * C51060) *
                        C5106 +
                    ((C22438 + C22437 - C22443 - C22444) * C17049 +
                     (C20679 * C50007 + C20680 * C51143 -
                      (C19835 * C3368 + C50862 * C3372) * C50000 -
                      (C19835 * C3370 + C50862 * C3374) * C50885) *
                         C51060) *
                        C5107) *
                       C50951 * C509)) /
                     (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C603 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C50880) *
               C17049 +
           ((C17237 + C17238 + C17239) * C603 +
            (C17240 + C17241 + C17242) * C50880) *
               C51060) *
              C51022 * C50951 * C599 -
          (((C17574 + C17575 + C17576) * C50880 +
            (C17577 + C17578 + C17579) * C603) *
               C51060 +
           ((C17242 + C17241 + C17240) * C50880 +
            (C17239 + C17238 + C17237) * C603) *
               C17049) *
              C51022 * C50951 * C600 +
          (((C17579 + C17578 + C17577) * C603 +
            (C17576 + C17575 + C17574) * C50880) *
               C17049 +
           ((C17693 + C17694 + C17695) * C603 +
            (C17696 + C17697 + C17698) * C50880) *
               C51060) *
              C51022 * C50951 * C601 -
          (((C17053 * C2696 + C17048 * C2699 + C17052 * C2694 + C17047 * C2698 +
             C17051 * C2693 + C17046 * C2697) *
                C50880 +
            (C17053 * C2690 + C17048 * C2695 + C17052 * C2689 + C17047 * C2692 +
             C17051 * C2688 + C17046 * C2691) *
                C603) *
               C51060 +
           ((C17698 + C17697 + C17696) * C50880 +
            (C17695 + C17694 + C17693) * C603) *
               C17049) *
              C51022 * C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C256 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C251 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C257 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C252 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C258 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C253) *
               C17049 +
           ((C17237 + C17238 + C17239) * C256 +
            (C17240 + C17241 + C17242) * C251 -
            (C17243 + C17244 + C17245) * C257 -
            (C17246 + C17247 + C17248) * C252 +
            (C17249 + C17250 + C17251) * C258 +
            (C17252 + C17253 + C17254) * C253) *
               C51060) *
              C51022 * C50951 * C51151 +
          (((C17245 + C17244 + C17243) * C257 -
            ((C17242 + C17241 + C17240) * C251 +
             (C17239 + C17238 + C17237) * C256) +
            (C17248 + C17247 + C17246) * C252 -
            (C17251 + C17250 + C17249) * C258 -
            (C17254 + C17253 + C17252) * C253) *
               C17049 +
           ((C17051 * C513 + C17046 * C518 + C17052 * C514 + C17047 * C519 +
             C17053 * C515 + C17048 * C520) *
                C257 -
            ((C17053 * C523 + C17048 * C529 + C17052 * C522 + C17047 * C528 +
              C17051 * C521 + C17046 * C527) *
                 C251 +
             (C17053 * C514 + C17048 * C519 + C17052 * C513 + C17047 * C518 +
              C17051 * C512 + C17046 * C517) *
                 C256) +
            (C17051 * C522 + C17046 * C528 + C17052 * C523 + C17047 * C529 +
             C17053 * C524 + C17048 * C530) *
                C252 -
            (C17053 * C516 + C17048 * C525 + C17052 * C515 + C17047 * C520 +
             C17051 * C514 + C17046 * C519) *
                C258 -
            (C17053 * C526 + C17048 * C531 + C17052 * C524 + C17047 * C530 +
             C17051 * C523 + C17046 * C529) *
                C253) *
               C51060) *
              C51022 * C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C256 +
            (C19835 * C136 + C50862 * C146) * C251 -
            (C19835 * C126 + C50862 * C133) * C257 -
            (C19835 * C137 + C50862 * C147) * C252 +
            (C19835 * C127 + C50862 * C134) * C258 +
            (C19835 * C138 + C50862 * C148) * C253) *
               C19831 +
           (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C19832 +
           (C19995 + C19996 - C19997 - C19998 + C19999 + C20000) * C19833 +
           (C20001 + C20002 - C20003 - C20004 + C20005 + C20006) * C19834) *
              C51022 * C50951 * C51151 +
          ((C19991 - (C19990 + C19989) + C19992 - C19993 - C19994) * C19831 +
           (C19997 - (C19996 + C19995) + C19998 - C19999 - C20000) * C19832 +
           (C20003 - (C20002 + C20001) + C20004 - C20005 - C20006) * C19833 +
           ((C19835 * C2689 + C50862 * C2692) * C257 -
            ((C19835 * C2693 + C50862 * C2697) * C251 +
             (C19835 * C2688 + C50862 * C2691) * C256) +
            (C19835 * C2694 + C50862 * C2698) * C252 -
            (C19835 * C2690 + C50862 * C2695) * C258 -
            (C19835 * C2696 + C50862 * C2699) * C253) *
               C19834) *
              C51022 * C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C603 +
            (C19835 * C136 + C50862 * C146) * C50880) *
               C19831 +
           (C20307 + C20308) * C19832 + C20319 * C19833 + C20320 * C19834) *
              C51022 * C50951 * C599 -
          (C20321 * C19834 + C20322 * C19833 + (C20310 + C20309) * C19832 +
           (C20308 + C20307) * C19831) *
              C51022 * C50951 * C600 +
          (C20319 * C19831 + C20320 * C19832 + (C20314 + C20313) * C19833 +
           (C20325 + C20326) * C19834) *
              C51022 * C50951 * C601 -
          (((C19835 * C20303 + C50862 * C20305) * C50880 +
            (C19835 * C20302 + C50862 * C20304) * C603) *
               C19834 +
           (C20326 + C20325) * C19833 + C20321 * C19832 + C20322 * C19831) *
              C51022 * C50951 * C602)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C256 +
             (C19835 * C136 + C50862 * C146) * C251 -
             (C19835 * C126 + C50862 * C133) * C257 -
             (C19835 * C137 + C50862 * C147) * C252 +
             (C19835 * C127 + C50862 * C134) * C258 +
             (C19835 * C138 + C50862 * C148) * C253) *
                C17049 +
            (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C51060) *
               C5105 +
           (((C19835 * C387 + C50862 * C397) * C256 +
             (C19835 * C396 + C50862 * C404) * C251 -
             (C19835 * C383 + C50862 * C389) * C257 -
             (C19835 * C395 + C50862 * C403) * C252 +
             (C19835 * C384 + C50862 * C390) * C258 +
             (C19835 * C394 + C50862 * C402) * C253) *
                C17049 +
            (C22061 + C22062 - C22063 - C22064 + C22085 + C22086) * C51060) *
               C5106 +
           (((C19835 * C851 + C50862 * C856) * C256 +
             (C19835 * C860 + C50862 * C866) * C251 -
             (C19835 * C852 + C50862 * C857) * C257 -
             (C19835 * C861 + C50862 * C867) * C252 +
             (C19835 * C853 + C50862 * C858) * C258 +
             (C19835 * C862 + C50862 * C868) * C253) *
                C17049 +
            (C22069 + C22070 - C22087 - C22088 + C22089 + C22090) * C51060) *
               C5107) *
              C50951 * C51151 +
          (((C19991 - (C19990 + C19989) + C19992 - C19993 - C19994) * C17049 +
            (C19997 - (C19996 + C19995) + C19998 - C19999 - C20000) * C51060) *
               C5105 +
           ((C22063 - (C22062 + C22061) + C22064 - C22085 - C22086) * C17049 +
            (C21143 * C257 - (C20447 * C251 + C20448 * C256) + C21144 * C252 -
             (C19835 * C723 + C50862 * C739) * C258 -
             (C19835 * C735 + C50862 * C747) * C253) *
                C51060) *
               C5106 +
           ((C22087 - (C22070 + C22069) + C22088 - C22089 - C22090) * C17049 +
            ((C19835 * C3211 + C50862 * C3214) * C257 -
             (C20678 * C251 + C20677 * C256) +
             (C19835 * C3216 + C50862 * C3220) * C252 -
             (C19835 * C3212 + C50862 * C3217) * C258 -
             (C19835 * C3218 + C50862 * C3221) * C253) *
                C51060) *
               C5107) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C17049 +
            (C20307 + C20308) * C51060) *
               C5105 +
           ((C22261 * C603 + C22262 * C50880) * C17049 +
            (C20458 + C20457) * C51060) *
               C5106 +
           ((C22267 * C603 + C22268 * C50880) * C17049 +
            (C20681 + C20682) * C51060) *
               C5107) *
              C50951 * C599 -
          (((C20684 + C20683) * C51060 + (C20682 + C20681) * C17049) * C5107 +
           (C20462 * C51060 + (C20457 + C20458) * C17049) * C5106 +
           ((C20310 + C20309) * C51060 + (C20308 + C20307) * C17049) * C5105) *
              C50951 * C600 +
          ((C20319 * C17049 + C20320 * C51060) * C5105 +
           ((C20456 + C20455) * C17049 + (C20454 + C20453) * C51060) * C5106 +
           ((C20683 + C20684) * C17049 + (C20685 + C20686) * C51060) * C5107) *
              C50951 * C601 -
          ((((C19835 * C20659 + C50862 * C20661) * C50880 +
             (C19835 * C20658 + C50862 * C20660) * C603) *
                C51060 +
            (C20686 + C20685) * C17049) *
               C5107 +
           ((C20460 + C20459) * C51060 + C20461 * C17049) * C5106 +
           (C20321 * C51060 + C20322 * C17049) * C5105) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C603 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50880) *
                C17049 +
            ((C17237 + C17238 + C17239) * C603 +
             (C17240 + C17241 + C17242) * C50880) *
                C51060) *
               C51022 * C51152 -
           (((C17869 + C17870 + C17871) * C50880 +
             (C17872 + C17873 + C17874) * C603) *
                C51060 +
            ((C17053 * C394 + C17048 * C402 + C17052 * C395 + C17047 * C403 +
              C17051 * C396 + C17046 * C404) *
                 C50880 +
             (C17053 * C384 + C17048 * C390 + C17052 * C383 + C17047 * C389 +
              C17051 * C387 + C17046 * C397) *
                 C603) *
                C17049) *
               C51022 * C50963) *
              C507 +
          ((((C17874 + C17873 + C17872) * C603 +
             (C17871 + C17870 + C17869) * C50880) *
                C17049 +
            ((C17875 + C17876 + C17877) * C603 +
             (C17878 + C17879 + C17880) * C50880) *
                C51060) *
               C51022 * C50963 -
           (((C17574 + C17575 + C17576) * C50880 +
             (C17577 + C17578 + C17579) * C603) *
                C51060 +
            ((C17242 + C17241 + C17240) * C50880 +
             (C17239 + C17238 + C17237) * C603) *
                C17049) *
               C51022 * C51152) *
              C508 +
          ((((C17579 + C17578 + C17577) * C603 +
             (C17576 + C17575 + C17574) * C50880) *
                C17049 +
            ((C17693 + C17694 + C17695) * C603 +
             (C17696 + C17697 + C17698) * C50880) *
                C51060) *
               C51022 * C51152 -
           (((C17053 * C4009 + C17048 * C4010 + C17052 * C3014 +
              C17047 * C3020 + C17051 * C3013 + C17046 * C3019) *
                 C50880 +
             (C17053 * C4007 + C17048 * C4008 + C17052 * C3008 +
              C17047 * C3012 + C17051 * C3007 + C17046 * C3011) *
                 C603) *
                C51060 +
            ((C17880 + C17879 + C17878) * C50880 +
             (C17877 + C17876 + C17875) * C603) *
                C17049) *
               C51022 * C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C256 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C251 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C257 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C252 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C258 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C253) *
               C17049 +
           ((C17237 + C17238 + C17239) * C256 +
            (C17240 + C17241 + C17242) * C251 -
            (C17243 + C17244 + C17245) * C257 -
            (C17246 + C17247 + C17248) * C252 +
            (C17249 + C17250 + C17251) * C258 +
            (C17252 + C17253 + C17254) * C253) *
               C51060) *
              C51022 * C51152 +
          (((C17051 * C383 + C17046 * C389 + C17052 * C384 + C17047 * C390 +
             C17053 * C385 + C17048 * C391) *
                C257 -
            ((C17053 * C394 + C17048 * C402 + C17052 * C395 + C17047 * C403 +
              C17051 * C396 + C17046 * C404) *
                 C251 +
             (C17053 * C384 + C17048 * C390 + C17052 * C383 + C17047 * C389 +
              C17051 * C387 + C17046 * C397) *
                 C256) +
            (C17051 * C395 + C17046 * C403 + C17052 * C394 + C17047 * C402 +
             C17053 * C393 + C17048 * C401) *
                C252 -
            (C17053 * C386 + C17048 * C392 + C17052 * C385 + C17047 * C391 +
             C17051 * C384 + C17046 * C390) *
                C258 -
            (C17053 * C398 + C17048 * C405 + C17052 * C393 + C17047 * C401 +
             C17051 * C394 + C17046 * C402) *
                C253) *
               C17049 +
           ((C17051 * C719 + C17046 * C727 + C17052 * C720 + C17047 * C728 +
             C17053 * C721 + C17048 * C729) *
                C257 -
            ((C17053 * C732 + C17048 * C744 + C17052 * C731 + C17047 * C743 +
              C17051 * C730 + C17046 * C742) *
                 C251 +
             (C17053 * C720 + C17048 * C728 + C17052 * C719 + C17047 * C727 +
              C17051 * C718 + C17046 * C726) *
                 C256) +
            (C17051 * C731 + C17046 * C743 + C17052 * C732 + C17047 * C744 +
             C17053 * C733 + C17048 * C745) *
                C252 -
            (C17053 * C1412 + C17048 * C1413 + C17052 * C721 + C17047 * C729 +
             C17051 * C720 + C17046 * C728) *
                C258 -
            (C17053 * C1414 + C17048 * C1415 + C17052 * C733 + C17047 * C745 +
             C17051 * C732 + C17046 * C744) *
                C253) *
               C51060) *
              C51022 * C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C256 +
            (C19835 * C136 + C50862 * C146) * C251 -
            (C19835 * C126 + C50862 * C133) * C257 -
            (C19835 * C137 + C50862 * C147) * C252 +
            (C19835 * C127 + C50862 * C134) * C258 +
            (C19835 * C138 + C50862 * C148) * C253) *
               C19831 +
           (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C19832 +
           (C19995 + C19996 - C19997 - C19998 + C19999 + C20000) * C19833 +
           (C20001 + C20002 - C20003 - C20004 + C20005 + C20006) * C19834) *
              C51022 * C51152 +
          (((C19835 * C383 + C50862 * C389) * C257 -
            ((C19835 * C396 + C50862 * C404) * C251 +
             (C19835 * C387 + C50862 * C397) * C256) +
            (C19835 * C395 + C50862 * C403) * C252 -
            (C19835 * C384 + C50862 * C390) * C258 -
            (C19835 * C394 + C50862 * C402) * C253) *
               C19831 +
           ((C19835 * C719 + C50862 * C727) * C257 -
            ((C19835 * C730 + C50862 * C742) * C251 +
             (C19835 * C718 + C50862 * C726) * C256) +
            (C19835 * C731 + C50862 * C743) * C252 -
            (C19835 * C720 + C50862 * C728) * C258 -
            (C19835 * C732 + C50862 * C744) * C253) *
               C19832 +
           ((C19835 * C724 + C50862 * C740) * C257 -
            ((C19835 * C737 + C50862 * C749) * C251 +
             (C19835 * C725 + C50862 * C741) * C256) +
            (C19835 * C736 + C50862 * C748) * C252 -
            (C19835 * C723 + C50862 * C739) * C258 -
            (C19835 * C735 + C50862 * C747) * C253) *
               C19833 +
           ((C19835 * C3008 + C50862 * C3012) * C257 -
            ((C19835 * C3013 + C50862 * C3019) * C251 +
             (C19835 * C3007 + C50862 * C3011) * C256) +
            (C19835 * C3014 + C50862 * C3020) * C252 -
            (C19835 * C4007 + C50862 * C4008) * C258 -
            (C19835 * C4009 + C50862 * C4010) * C253) *
               C19834) *
              C51022 * C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C19831 +
            (C20307 + C20308) * C19832 + C20319 * C19833 + C20320 * C19834) *
               C51022 * C51152 -
           (C20461 * C19834 + C20462 * C19833 + (C20457 + C20458) * C19832 +
            ((C19835 * C396 + C50862 * C404) * C50880 +
             (C19835 * C387 + C50862 * C397) * C603) *
                C19831) *
               C51022 * C50963) *
              C507 +
          (((C20458 + C20457) * C19831 + (C20456 + C20455) * C19832 +
            (C20454 + C20453) * C19833 + (C20459 + C20460) * C19834) *
               C51022 * C50963 -
           (C20321 * C19834 + C20322 * C19833 + (C20310 + C20309) * C19832 +
            (C20308 + C20307) * C19831) *
               C51022 * C51152) *
              C508 +
          ((C20319 * C19831 + C20320 * C19832 + (C20314 + C20313) * C19833 +
            (C20325 + C20326) * C19834) *
               C51022 * C51152 -
           (((C19835 * C20425 + C50862 * C20427) * C50880 +
             (C19835 * C20424 + C50862 * C20426) * C603) *
                C19834 +
            (C20460 + C20459) * C19833 + C20461 * C19832 + C20462 * C19831) *
               C51022 * C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C256 +
             (C19835 * C136 + C50862 * C146) * C251 -
             (C19835 * C126 + C50862 * C133) * C257 -
             (C19835 * C137 + C50862 * C147) * C252 +
             (C19835 * C127 + C50862 * C134) * C258 +
             (C19835 * C138 + C50862 * C148) * C253) *
                C17049 +
            (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C51060) *
               C5105 +
           ((C22273 + C22274 - C22275 - C22276 + C22277 + C22278) * C17049 +
            (C22061 + C22062 - C22063 - C22064 + C22085 + C22086) * C51060) *
               C5106 +
           ((C22279 + C22280 - C22281 - C22282 + C22283 + C22284) * C17049 +
            (C22069 + C22070 - C22087 - C22088 + C22089 + C22090) * C51060) *
               C5107) *
              C51152 +
          (((C22275 - (C22274 + C22273) + C22276 - C22277 - C22278) * C17049 +
            (C22063 - (C22062 + C22061) + C22064 - C22085 - C22086) * C51060) *
               C5105 +
           ((C22281 - (C22280 + C22279) + C22282 - C22283 - C22284) * C17049 +
            (C22087 - (C22070 + C22069) + C22088 - C22089 - C22090) * C51060) *
               C5106 +
           (((C19835 * C1057 + C50862 * C1065) * C257 -
             ((C19835 * C1062 + C50862 * C1070) * C251 +
              (C19835 * C1058 + C50862 * C1066) * C256) +
             (C19835 * C1061 + C50862 * C1069) * C252 -
             (C19835 * C1056 + C50862 * C1064) * C258 -
             (C19835 * C1060 + C50862 * C1068) * C253) *
                C17049 +
            ((C19835 * C3500 + C50862 * C3508) * C257 -
             ((C19835 * C3507 + C50862 * C3513) * C251 +
              (C19835 * C3501 + C50862 * C3509) * C256) +
             (C19835 * C3506 + C50862 * C3512) * C252 -
             (C19835 * C6842 + C50862 * C6843) * C258 -
             (C19835 * C6844 + C50862 * C6845) * C253) *
                C51060) *
               C5107) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C603 +
              (C19835 * C136 + C50862 * C146) * C50880) *
                 C17049 +
             (C20307 + C20308) * C51060) *
                C5105 +
            ((C22689 + C22690) * C17049 + C22691 * C51060) * C5106 +
            ((C22692 + C22693) * C17049 + C22694 * C51060) * C5107) *
               C51152 -
           (((C22712 + C22713) * C51060 +
             ((C19835 * C1062 + C50862 * C1070) * C50880 +
              (C19835 * C1058 + C50862 * C1066) * C603) *
                 C17049) *
                C5107 +
            (C22699 * C51060 + (C22693 + C22692) * C17049) * C5106 +
            (C22700 * C51060 + (C22690 + C22689) * C17049) * C5105) *
               C50963) *
              C507 +
          (((C22691 * C17049 + C22701 * C51060) * C5105 +
            (C22694 * C17049 + C22702 * C51060) * C5106 +
            ((C22713 + C22712) * C17049 + (C22714 + C22715) * C51060) * C5107) *
               C50963 -
           ((C22707 * C51060 + C22699 * C17049) * C5107 +
            (C20462 * C51060 + C22700 * C17049) * C5106 +
            ((C20310 + C20309) * C51060 + (C20308 + C20307) * C17049) * C5105) *
               C51152) *
              C508 +
          (((C20319 * C17049 + C20320 * C51060) * C5105 +
            (C22701 * C17049 + (C20454 + C20453) * C51060) * C5106 +
            (C22702 * C17049 + (C20685 + C20686) * C51060) * C5107) *
               C51152 -
           ((((C19835 * C20753 + C50862 * C20755) * C50880 +
              (C19835 * C20752 + C50862 * C20754) * C603) *
                 C51060 +
             (C22715 + C22714) * C17049) *
                C5107 +
            ((C20686 + C20685) * C51060 + C22707 * C17049) * C5106 +
            (C20461 * C51060 + C20462 * C17049) * C5105) *
               C50963) *
              C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C1174 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C51196 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C1175 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C51181 +
             (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                 C1176 +
             (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                 C1171) *
                C17049 +
            ((C25020 + C25021) * C1174 + (C25022 + C25023) * C51196 -
             (C25024 + C25025) * C1175 - (C25026 + C25027) * C51181 +
             (C25028 + C25029) * C1176 + (C25030 + C25031) * C1171) *
                C51060) *
               C51167 +
           (((C28133 + C28134) * C1174 + (C28135 + C28136) * C51196 -
             (C28137 + C28138) * C1175 - (C28139 + C28140) * C51181 +
             (C28141 + C28142) * C1176 + (C28143 + C28144) * C1171) *
                C17049 +
            (C28663 * C1174 + C28664 * C51196 - (C26600 + C26599) * C1175 -
             (C26602 + C26601) * C51181 + (C27911 + C27912) * C1176 +
             (C27913 + C27914) * C1171) *
                C51060) *
               C51086) *
              C50951 * C1172 +
          ((((C25025 + C25024) * C1175 -
             ((C25023 + C25022) * C51196 + (C25021 + C25020) * C1174) +
             (C25027 + C25026) * C51181 - (C25029 + C25028) * C1176 -
             (C25031 + C25030) * C1171) *
                C17049 +
            ((C25037 + C25036) * C1175 -
             ((C25035 + C25034) * C51196 + (C25033 + C25032) * C1174) +
             (C25039 + C25038) * C51181 - (C25041 + C25040) * C1176 -
             (C25043 + C25042) * C1171) *
                C51060) *
               C51167 +
           (((C26599 + C26600) * C1175 - (C28665 * C51196 + C28666 * C1174) +
             (C26601 + C26602) * C51181 - (C27912 + C27911) * C1176 -
             (C27914 + C27913) * C1171) *
                C17049 +
            ((C26603 + C26604) * C1175 - (C25671 * C51196 + C25672 * C1174) +
             (C26605 + C26606) * C51181 -
             (C49954 * C722 + C50867 * C738 + C49961 * C723 + C51138 * C739) *
                 C1176 -
             (C49954 * C734 + C50867 * C746 + C49961 * C735 + C51138 * C747) *
                 C1171) *
                C51060) *
               C51086) *
              C50951 * C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C1280 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C1275 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C1281 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C50885) *
                C17049 +
            ((C25020 + C25021) * C1280 + (C25022 + C25023) * C1275 -
             (C25024 + C25025) * C1281 - (C25026 + C25027) * C50885) *
                C51060) *
               C51167 +
           (((C28133 + C28134) * C1280 + (C28135 + C28136) * C1275 -
             (C28137 + C28138) * C1281 - (C28139 + C28140) * C50885) *
                C17049 +
            (C28663 * C1280 + C28664 * C1275 - (C26600 + C26599) * C1281 -
             (C26602 + C26601) * C50885) *
                C51060) *
               C51086) *
              C50951 * C51197 +
          ((((C25025 + C25024) * C1281 -
             ((C25023 + C25022) * C1275 + (C25021 + C25020) * C1280) +
             (C25027 + C25026) * C50885) *
                C17049 +
            ((C25037 + C25036) * C1281 -
             ((C25035 + C25034) * C1275 + (C25033 + C25032) * C1280) +
             (C25039 + C25038) * C50885) *
                C51060) *
               C51167 +
           (((C26599 + C26600) * C1281 - (C28665 * C1275 + C28666 * C1280) +
             (C26601 + C26602) * C50885) *
                C17049 +
            ((C26603 + C26604) * C1281 - (C25671 * C1275 + C25672 * C1280) +
             (C26605 + C26606) * C50885) *
                C51060) *
               C51086) *
              C50951 * C51184 +
          ((C26388 * C17049 +
            ((C25365 + C25364) * C1280 + (C25363 + C25362) * C1275 -
             (C25361 + C25360) * C1281 - (C25367 + C25366) * C50885) *
                C51060) *
               C51167 +
           ((C28667 * C1280 + C28668 * C1275 - (C26604 + C26603) * C1281 -
             (C26606 + C26605) * C50885) *
                C17049 +
            ((C25667 + C25668) * C1280 + (C25669 + C25670) * C1275 -
             (C49954 * C4007 + C50867 * C4008 + C49961 * C3008 +
              C51138 * C3012) *
                 C1281 -
             (C49954 * C4009 + C50867 * C4010 + C49961 * C3014 +
              C51138 * C3020) *
                 C50885) *
                C51060) *
               C51086) *
              C50951 * C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                  C1280 +
              (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                  C1275 -
              (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                  C1281 -
              (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                  C50885) *
                 C17049 +
             ((C25020 + C25021) * C1280 + (C25022 + C25023) * C1275 -
              (C25024 + C25025) * C1281 - (C25026 + C25027) * C50885) *
                 C51060) *
                C51167 +
            (((C28133 + C28134) * C1280 + (C28135 + C28136) * C1275 -
              (C28137 + C28138) * C1281 - (C28139 + C28140) * C50885) *
                 C17049 +
             C29928 * C51060) *
                C51086) *
               C51152 +
           ((((C28138 + C28137) * C1281 -
              ((C28136 + C28135) * C1275 + (C28134 + C28133) * C1280) +
              (C28140 + C28139) * C50885) *
                 C17049 +
             C29929 * C51060) *
                C51167 +
            (((C28896 + C28897) * C1281 -
              ((C28898 + C28899) * C1275 + (C28900 + C28901) * C1280) +
              (C28902 + C28903) * C50885) *
                 C17049 +
             ((C28904 + C28905) * C1281 - (C29102 * C1275 + C29103 * C1280) +
              (C28906 + C28907) * C50885) *
                 C51060) *
                C51086) *
               C50963) *
              C1172 +
          (((((C25025 + C25024) * C1281 -
              ((C25023 + C25022) * C1275 + (C25021 + C25020) * C1280) +
              (C25027 + C25026) * C50885) *
                 C17049 +
             ((C25037 + C25036) * C1281 -
              ((C25035 + C25034) * C1275 + (C25033 + C25032) * C1280) +
              (C25039 + C25038) * C50885) *
                 C51060) *
                C51167 +
            (C29929 * C17049 +
             ((C26603 + C26604) * C1281 - (C25671 * C1275 + C25672 * C1280) +
              (C26605 + C26606) * C50885) *
                 C51060) *
                C51086) *
               C51152 +
           ((C29928 * C17049 +
             (C28667 * C1280 + C28668 * C1275 - (C26604 + C26603) * C1281 -
              (C26606 + C26605) * C50885) *
                 C51060) *
                C51167 +
            ((C29104 * C1280 + C29105 * C1275 - (C28905 + C28904) * C1281 -
              (C28907 + C28906) * C50885) *
                 C17049 +
             ((C25988 + C25989) * C1280 + (C25990 + C25991) * C1275 -
              (C49954 * C3212 + C50867 * C3217 + C49961 * C3211 +
               C51138 * C3214) *
                  C1281 -
              (C49954 * C3218 + C50867 * C3221 + C49961 * C3216 +
               C51138 * C3220) *
                  C50885) *
                 C51060) *
                C51086) *
               C50963) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                  C50007 +
              (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                  C51143 -
              (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                  C50000 -
              (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                  C50885) *
                 C17049 +
             ((C25020 + C25021) * C50007 + (C25022 + C25023) * C51143 -
              (C25024 + C25025) * C50000 - (C25026 + C25027) * C50885) *
                 C51060) *
                C51167 +
            (((C28133 + C28134) * C50007 + (C28135 + C28136) * C51143 -
              (C28137 + C28138) * C50000 - (C28139 + C28140) * C50885) *
                 C17049 +
             C30846 * C51060) *
                C51086) *
               C1514 +
           ((((C28138 + C28137) * C50000 -
              ((C28136 + C28135) * C51143 + (C28134 + C28133) * C50007) +
              (C28140 + C28139) * C50885) *
                 C17049 +
             C30847 * C51060) *
                C51167 +
            (((C28896 + C28897) * C50000 -
              ((C28898 + C28899) * C51143 + (C28900 + C28901) * C50007) +
              (C28902 + C28903) * C50885) *
                 C17049 +
             ((C28904 + C28905) * C50000 - (C29102 * C51143 + C29103 * C50007) +
              (C28906 + C28907) * C50885) *
                 C51060) *
                C51086) *
               C50963) *
              C1172 +
          (((((C25025 + C25024) * C50000 -
              ((C25023 + C25022) * C51143 + (C25021 + C25020) * C50007) +
              (C25027 + C25026) * C50885) *
                 C17049 +
             ((C25037 + C25036) * C50000 -
              ((C25035 + C25034) * C51143 + (C25033 + C25032) * C50007) +
              (C25039 + C25038) * C50885) *
                 C51060) *
                C51167 +
            (C30847 * C17049 +
             ((C26603 + C26604) * C50000 - (C25671 * C51143 + C25672 * C50007) +
              (C26605 + C26606) * C50885) *
                 C51060) *
                C51086) *
               C1514 +
           ((C30846 * C17049 +
             (C28667 * C50007 + C28668 * C51143 - (C26604 + C26603) * C50000 -
              (C26606 + C26605) * C50885) *
                 C51060) *
                C51167 +
            ((C29104 * C50007 + C29105 * C51143 - (C28905 + C28904) * C50000 -
              (C28907 + C28906) * C50885) *
                 C17049 +
             ((C25988 + C25989) * C50007 + (C25990 + C25991) * C51143 -
              (C49954 * C3212 + C50867 * C3217 + C49961 * C3211 +
               C51138 * C3214) *
                  C50000 -
              (C49954 * C3218 + C50867 * C3221 + C49961 * C3216 +
               C51138 * C3220) *
                  C50885) *
                 C51060) *
                C51086) *
               C50963) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                  C603 +
              (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                  C50880) *
                 C17049 +
             ((C25020 + C25021) * C603 + (C25022 + C25023) * C50880) * C51060) *
                C51167 +
            (((C28133 + C28134) * C603 + (C28135 + C28136) * C50880) * C17049 +
             C28675 * C51060) *
                C51086) *
               C1514 -
           ((C29122 * C51060 +
             ((C28898 + C28899) * C50880 + (C28900 + C28901) * C603) * C17049) *
                C51086 +
            (C28676 * C51060 +
             ((C28136 + C28135) * C50880 + (C28134 + C28133) * C603) * C17049) *
                C51167) *
               C50963) *
              C51197 +
          (((C28675 * C17049 + C28677 * C51060) * C51167 +
            (C29123 * C17049 +
             ((C25988 + C25989) * C603 + (C25990 + C25991) * C50880) * C51060) *
                C51086) *
               C50963 -
           ((C25675 * C51060 + C28676 * C17049) * C51086 +
            (((C25035 + C25034) * C50880 + (C25033 + C25032) * C603) * C51060 +
             ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C17049) *
                C51167) *
               C1514) *
              C51184 +
          (((C25481 * C17049 +
             ((C25365 + C25364) * C603 + (C25363 + C25362) * C50880) * C51060) *
                C51167 +
            (C28677 * C17049 +
             ((C25667 + C25668) * C603 + (C25669 + C25670) * C50880) * C51060) *
                C51086) *
               C1514 -
           ((((C49954 * C3370 + C50867 * C3374 + C49961 * C3371 +
               C51138 * C3375) *
                  C50880 +
              (C49954 * C3368 + C50867 * C3372 + C49961 * C3369 +
               C51138 * C3373) *
                  C603) *
                 C51060 +
             ((C25991 + C25990) * C50880 + (C25989 + C25988) * C603) * C17049) *
                C51086 +
            (((C25670 + C25669) * C50880 + (C25668 + C25667) * C603) * C51060 +
             C25675 * C17049) *
                C51167) *
               C50963) *
              C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                  C603 +
              (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                  C50880) *
                 C17049 +
             ((C25020 + C25021) * C603 + (C25022 + C25023) * C50880) * C51060) *
                C51167 +
            (((C28133 + C28134) * C603 + (C28135 + C28136) * C50880) * C17049 +
             C28675 * C51060) *
                C51086) *
               C51198 -
           ((C29122 * C51060 +
             ((C28898 + C28899) * C50880 + (C28900 + C28901) * C603) * C17049) *
                C51086 +
            (C28676 * C51060 +
             ((C28136 + C28135) * C50880 + (C28134 + C28133) * C603) * C17049) *
                C51167) *
               C51187 +
           ((((C28901 + C28900) * C603 + (C28899 + C28898) * C50880) * C17049 +
             C29123 * C51060) *
                C51167 +
            (((C29262 + C29263) * C603 + (C29264 + C29265) * C50880) * C17049 +
             ((C29118 + C29119) * C603 + (C29120 + C29121) * C50880) * C51060) *
                C51086) *
               C1746) *
              C1172 +
          (((C28675 * C17049 + C28677 * C51060) * C51167 +
            (C29123 * C17049 +
             ((C25988 + C25989) * C603 + (C25990 + C25991) * C50880) * C51060) *
                C51086) *
               C51187 -
           ((C25675 * C51060 + C28676 * C17049) * C51086 +
            (((C25035 + C25034) * C50880 + (C25033 + C25032) * C603) * C51060 +
             ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C17049) *
                C51167) *
               C51198 -
           ((((C49954 * C3502 + C50867 * C3510 + C49961 * C3503 +
               C51138 * C3511) *
                  C50880 +
              (C49954 * C3498 + C50867 * C3504 + C49961 * C3499 +
               C51138 * C3505) *
                  C603) *
                 C51060 +
             ((C29121 + C29120) * C50880 + (C29119 + C29118) * C603) * C17049) *
                C51086 +
            (((C25991 + C25990) * C50880 + (C25989 + C25988) * C603) * C51060 +
             C29122 * C17049) *
                C51167) *
               C1746) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C50007 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C51143 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C50000 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C50885) *
                C17049 +
            ((C25020 + C25021) * C50007 + (C25022 + C25023) * C51143 -
             (C25024 + C25025) * C50000 - (C25026 + C25027) * C50885) *
                C51060) *
               C51167 +
           (((C28133 + C28134) * C50007 + (C28135 + C28136) * C51143 -
             (C28137 + C28138) * C50000 - (C28139 + C28140) * C50885) *
                C17049 +
            ((C25666 + C25665) * C50007 + (C25664 + C25663) * C51143 -
             (C26600 + C26599) * C50000 - (C26602 + C26601) * C50885) *
                C51060) *
               C51086) *
              C50951 * C507 +
          ((((C25025 + C25024) * C50000 -
             ((C25023 + C25022) * C51143 + (C25021 + C25020) * C50007) +
             (C25027 + C25026) * C50885) *
                C17049 +
            ((C25037 + C25036) * C50000 -
             ((C25035 + C25034) * C51143 + (C25033 + C25032) * C50007) +
             (C25039 + C25038) * C50885) *
                C51060) *
               C51167 +
           (((C26599 + C26600) * C50000 -
             ((C25663 + C25664) * C51143 + (C25665 + C25666) * C50007) +
             (C26601 + C26602) * C50885) *
                C17049 +
            ((C26603 + C26604) * C50000 - (C25671 * C51143 + C25672 * C50007) +
             (C26605 + C26606) * C50885) *
                C51060) *
               C51086) *
              C50951 * C508 +
          ((C25370 * C17049 +
            ((C25365 + C25364) * C50007 + (C25363 + C25362) * C51143 -
             (C25361 + C25360) * C50000 - (C25367 + C25366) * C50885) *
                C51060) *
               C51167 +
           (((C25662 + C25661) * C50007 + (C25660 + C25659) * C51143 -
             (C26604 + C26603) * C50000 - (C26606 + C26605) * C50885) *
                C17049 +
            ((C25667 + C25668) * C50007 + (C25669 + C25670) * C51143 -
             (C49954 * C4007 + C50867 * C4008 + C49961 * C3008 +
              C51138 * C3012) *
                 C50000 -
             (C49954 * C4009 + C50867 * C4010 + C49961 * C3014 +
              C51138 * C3020) *
                 C50885) *
                C51060) *
               C51086) *
              C50951 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C121 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C109 -
            (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                C122 -
            (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                C110 +
            (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                C123 +
            (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                C111 -
            (C49954 * C129 + C50867 * C140 + C49961 * C128 + C51138 * C135) *
                C124 -
            (C49954 * C141 + C50867 * C150 + C49961 * C139 + C51138 * C149) *
                C112) *
               C17049 +
           ((C25020 + C25021) * C121 + (C25022 + C25023) * C109 -
            (C25024 + C25025) * C122 - (C25026 + C25027) * C110 +
            (C25028 + C25029) * C123 + (C25030 + C25031) * C111 -
            (C49954 * C262 + C50867 * C268 + C49961 * C261 + C51138 * C267) *
                C124 -
            (C49954 * C274 + C50867 * C281 + C49961 * C269 + C51138 * C277) *
                C112) *
               C51060) *
              C51167 +
          (((C49961 * C387 + C51138 * C397 + C49954 * C383 + C50867 * C389) *
                C121 +
            (C49961 * C396 + C51138 * C404 + C49954 * C395 + C50867 * C403) *
                C109 -
            (C49954 * C384 + C50867 * C390 + C49961 * C383 + C51138 * C389) *
                C122 -
            (C49954 * C394 + C50867 * C402 + C49961 * C395 + C51138 * C403) *
                C110 +
            (C49961 * C384 + C51138 * C390 + C49954 * C385 + C50867 * C391) *
                C123 +
            (C49961 * C394 + C51138 * C402 + C49954 * C393 + C50867 * C401) *
                C111 -
            (C49954 * C386 + C50867 * C392 + C49961 * C385 + C51138 * C391) *
                C124 -
            (C49954 * C398 + C50867 * C405 + C49961 * C393 + C51138 * C401) *
                C112) *
               C17049 +
           ((C25666 + C25665) * C121 + (C25664 + C25663) * C109 -
            (C26600 + C26599) * C122 - (C26602 + C26601) * C110 +
            (C49961 * C720 + C51138 * C728 + C49954 * C721 + C50867 * C729) *
                C123 +
            (C49961 * C732 + C51138 * C744 + C49954 * C733 + C50867 * C745) *
                C111 -
            (C49954 * C1412 + C50867 * C1413 + C49961 * C721 + C51138 * C729) *
                C124 -
            (C49954 * C1414 + C50867 * C1415 + C49961 * C733 + C51138 * C745) *
                C112) *
               C51060) *
              C51086) *
         C50951 * C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C50007 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C51143 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C50000 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C50885) *
                C17049 +
            ((C25020 + C25021) * C50007 + (C25022 + C25023) * C51143 -
             (C25024 + C25025) * C50000 - (C25026 + C25027) * C50885) *
                C51060) *
               C51167 +
           (((C28133 + C28134) * C50007 + (C28135 + C28136) * C51143 -
             (C28137 + C28138) * C50000 - (C28139 + C28140) * C50885) *
                C17049 +
            (C28663 * C50007 + C28664 * C51143 - (C26600 + C26599) * C50000 -
             (C26602 + C26601) * C50885) *
                C51060) *
               C51086) *
              C848 +
          ((((C28138 + C28137) * C50000 -
             ((C28136 + C28135) * C51143 + (C28134 + C28133) * C50007) +
             (C28140 + C28139) * C50885) *
                C17049 +
            ((C26599 + C26600) * C50000 - (C28665 * C51143 + C28666 * C50007) +
             (C26601 + C26602) * C50885) *
                C51060) *
               C51167 +
           (((C28896 + C28897) * C50000 -
             ((C28898 + C28899) * C51143 + (C28900 + C28901) * C50007) +
             (C28902 + C28903) * C50885) *
                C17049 +
            ((C28904 + C28905) * C50000 -
             ((C25987 + C25986) * C51143 + (C25985 + C25984) * C50007) +
             (C28906 + C28907) * C50885) *
                C51060) *
               C51086) *
              C849 +
          ((((C28901 + C28900) * C50007 + (C28899 + C28898) * C51143 -
             (C28897 + C28896) * C50000 - (C28903 + C28902) * C50885) *
                C17049 +
            ((C25984 + C25985) * C50007 + (C25986 + C25987) * C51143 -
             (C28905 + C28904) * C50000 - (C28907 + C28906) * C50885) *
                C51060) *
               C51167 +
           (((C49961 * C1058 + C51138 * C1066 + C49954 * C1057 +
              C50867 * C1065) *
                 C50007 +
             (C49961 * C1062 + C51138 * C1070 + C49954 * C1061 +
              C50867 * C1069) *
                 C51143 -
             (C49954 * C1056 + C50867 * C1064 + C49961 * C1057 +
              C51138 * C1065) *
                 C50000 -
             (C49954 * C1060 + C50867 * C1068 + C49961 * C1061 +
              C51138 * C1069) *
                 C50885) *
                C17049 +
            ((C49961 * C3501 + C51138 * C3509 + C49954 * C3500 +
              C50867 * C3508) *
                 C50007 +
             (C49961 * C3507 + C51138 * C3513 + C49954 * C3506 +
              C50867 * C3512) *
                 C51143 -
             (C49954 * C6842 + C50867 * C6843 + C49961 * C3500 +
              C51138 * C3508) *
                 C50000 -
             (C49954 * C6844 + C50867 * C6845 + C49961 * C3506 +
              C51138 * C3512) *
                 C50885) *
                C51060) *
               C51086) *
              C850) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C603 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C50880) *
                C17049 +
            ((C25020 + C25021) * C603 + (C25022 + C25023) * C50880) * C51060) *
               C51167 +
           (((C28133 + C28134) * C603 + (C28135 + C28136) * C50880) * C17049 +
            ((C25666 + C25665) * C603 + (C25664 + C25663) * C50880) * C51060) *
               C51086) *
              C50951 * C599 -
          ((C25675 * C51060 +
            ((C25663 + C25664) * C50880 + (C25665 + C25666) * C603) * C17049) *
               C51086 +
           (((C25035 + C25034) * C50880 + (C25033 + C25032) * C603) * C51060 +
            ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C17049) *
               C51167) *
              C50951 * C600 +
          ((C25481 * C17049 +
            ((C25365 + C25364) * C603 + (C25363 + C25362) * C50880) * C51060) *
               C51167 +
           (((C25662 + C25661) * C603 + (C25660 + C25659) * C50880) * C17049 +
            ((C25667 + C25668) * C603 + (C25669 + C25670) * C50880) * C51060) *
               C51086) *
              C50951 * C601 -
          ((((C49954 * C3015 + C50867 * C3021 + C49961 * C3016 +
              C51138 * C3022) *
                 C50880 +
             (C49954 * C3009 + C50867 * C3017 + C49961 * C3010 +
              C51138 * C3018) *
                 C603) *
                C51060 +
            ((C25670 + C25669) * C50880 + (C25668 + C25667) * C603) * C17049) *
               C51086 +
           (((C25487 + C25486) * C50880 + (C25485 + C25484) * C603) * C51060 +
            C25488 * C17049) *
               C51167) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C256 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C251 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C257 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C252 +
             (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                 C258 +
             (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                 C253) *
                C17049 +
            ((C25020 + C25021) * C256 + (C25022 + C25023) * C251 -
             (C25024 + C25025) * C257 - (C25026 + C25027) * C252 +
             (C25028 + C25029) * C258 + (C25030 + C25031) * C253) *
                C51060) *
               C51167 +
           (((C49961 * C387 + C51138 * C397 + C49954 * C383 + C50867 * C389) *
                 C256 +
             (C49961 * C396 + C51138 * C404 + C49954 * C395 + C50867 * C403) *
                 C251 -
             (C49954 * C384 + C50867 * C390 + C49961 * C383 + C51138 * C389) *
                 C257 -
             (C49954 * C394 + C50867 * C402 + C49961 * C395 + C51138 * C403) *
                 C252 +
             (C49961 * C384 + C51138 * C390 + C49954 * C385 + C50867 * C391) *
                 C258 +
             (C49961 * C394 + C51138 * C402 + C49954 * C393 + C50867 * C401) *
                 C253) *
                C17049 +
            ((C25666 + C25665) * C256 + (C25664 + C25663) * C251 -
             (C26600 + C26599) * C257 - (C26602 + C26601) * C252 +
             (C27911 + C27912) * C258 + (C27913 + C27914) * C253) *
                C51060) *
               C51086) *
              C50951 * C51151 +
          ((((C25025 + C25024) * C257 -
             ((C25023 + C25022) * C251 + (C25021 + C25020) * C256) +
             (C25027 + C25026) * C252 - (C25029 + C25028) * C258 -
             (C25031 + C25030) * C253) *
                C17049 +
            ((C25037 + C25036) * C257 -
             ((C25035 + C25034) * C251 + (C25033 + C25032) * C256) +
             (C25039 + C25038) * C252 - (C25041 + C25040) * C258 -
             (C25043 + C25042) * C253) *
                C51060) *
               C51167 +
           (((C26599 + C26600) * C257 -
             ((C25663 + C25664) * C251 + (C25665 + C25666) * C256) +
             (C26601 + C26602) * C252 - (C27912 + C27911) * C258 -
             (C27914 + C27913) * C253) *
                C17049 +
            ((C26603 + C26604) * C257 - (C25671 * C251 + C25672 * C256) +
             (C26605 + C26606) * C252 -
             (C49954 * C722 + C50867 * C738 + C49961 * C723 + C51138 * C739) *
                 C258 -
             (C49954 * C734 + C50867 * C746 + C49961 * C735 + C51138 * C747) *
                 C253) *
                C51060) *
               C51086) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                  C603 +
              (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                  C50880) *
                 C17049 +
             ((C25020 + C25021) * C603 + (C25022 + C25023) * C50880) * C51060) *
                C51167 +
            (((C28133 + C28134) * C603 + (C28135 + C28136) * C50880) * C17049 +
             C28675 * C51060) *
                C51086) *
               C848 -
           ((C29122 * C51060 +
             ((C28898 + C28899) * C50880 + (C28900 + C28901) * C603) * C17049) *
                C51086 +
            (C28676 * C51060 +
             ((C28136 + C28135) * C50880 + (C28134 + C28133) * C603) * C17049) *
                C51167) *
               C849 +
           ((((C28901 + C28900) * C603 + (C28899 + C28898) * C50880) * C17049 +
             C29123 * C51060) *
                C51167 +
            (((C49961 * C1058 + C51138 * C1066 + C49954 * C1057 +
               C50867 * C1065) *
                  C603 +
              (C49961 * C1062 + C51138 * C1070 + C49954 * C1061 +
               C50867 * C1069) *
                  C50880) *
                 C17049 +
             ((C29118 + C29119) * C603 + (C29120 + C29121) * C50880) * C51060) *
                C51086) *
               C850) *
              C51151 +
          (((C28675 * C17049 + C28677 * C51060) * C51167 +
            (C29123 * C17049 +
             ((C25988 + C25989) * C603 + (C25990 + C25991) * C50880) * C51060) *
                C51086) *
               C849 -
           ((C25675 * C51060 + C28676 * C17049) * C51086 +
            (((C25035 + C25034) * C50880 + (C25033 + C25032) * C603) * C51060 +
             ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C17049) *
                C51167) *
               C848 -
           ((((C49954 * C3502 + C50867 * C3510 + C49961 * C3503 +
               C51138 * C3511) *
                  C50880 +
              (C49954 * C3498 + C50867 * C3504 + C49961 * C3499 +
               C51138 * C3505) *
                  C603) *
                 C51060 +
             ((C29121 + C29120) * C50880 + (C29119 + C29118) * C603) * C17049) *
                C51086 +
            (((C25991 + C25990) * C50880 + (C25989 + C25988) * C603) * C51060 +
             C29122 * C17049) *
                C51167) *
               C850) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                  C603 +
              (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                  C50880) *
                 C17049 +
             ((C25020 + C25021) * C603 + (C25022 + C25023) * C50880) * C51060) *
                C51167 +
            (((C28133 + C28134) * C603 + (C28135 + C28136) * C50880) * C17049 +
             C28675 * C51060) *
                C51086) *
               C51152 -
           ((((C25987 + C25986) * C50880 + (C25985 + C25984) * C603) * C51060 +
             ((C49954 * C861 + C50867 * C867 + C49961 * C860 + C51138 * C866) *
                  C50880 +
              (C49954 * C852 + C50867 * C857 + C49961 * C851 + C51138 * C856) *
                  C603) *
                 C17049) *
                C51086 +
            (C28676 * C51060 +
             ((C28136 + C28135) * C50880 + (C28134 + C28133) * C603) * C17049) *
                C51167) *
               C50963) *
              C507 +
          (((C28675 * C17049 + C28677 * C51060) * C51167 +
            (((C25984 + C25985) * C603 + (C25986 + C25987) * C50880) * C17049 +
             ((C25988 + C25989) * C603 + (C25990 + C25991) * C50880) * C51060) *
                C51086) *
               C50963 -
           ((C25675 * C51060 + C28676 * C17049) * C51086 +
            (((C25035 + C25034) * C50880 + (C25033 + C25032) * C603) * C51060 +
             ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C17049) *
                C51167) *
               C51152) *
              C508 +
          (((C25481 * C17049 +
             ((C25365 + C25364) * C603 + (C25363 + C25362) * C50880) * C51060) *
                C51167 +
            (C28677 * C17049 +
             ((C25667 + C25668) * C603 + (C25669 + C25670) * C50880) * C51060) *
                C51086) *
               C51152 -
           ((((C49954 * C3370 + C50867 * C3374 + C49961 * C3371 +
               C51138 * C3375) *
                  C50880 +
              (C49954 * C3368 + C50867 * C3372 + C49961 * C3369 +
               C51138 * C3373) *
                  C603) *
                 C51060 +
             ((C25991 + C25990) * C50880 + (C25989 + C25988) * C603) * C17049) *
                C51086 +
            (((C25670 + C25669) * C50880 + (C25668 + C25667) * C603) * C51060 +
             C25675 * C17049) *
                C51167) *
               C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C256 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C251 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C257 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C252 +
             (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                 C258 +
             (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                 C253) *
                C17049 +
            ((C25020 + C25021) * C256 + (C25022 + C25023) * C251 -
             (C25024 + C25025) * C257 - (C25026 + C25027) * C252 +
             (C25028 + C25029) * C258 + (C25030 + C25031) * C253) *
                C51060) *
               C51167 +
           (((C28133 + C28134) * C256 + (C28135 + C28136) * C251 -
             (C28137 + C28138) * C257 - (C28139 + C28140) * C252 +
             (C28141 + C28142) * C258 + (C28143 + C28144) * C253) *
                C17049 +
            ((C25666 + C25665) * C256 + (C25664 + C25663) * C251 -
             (C26600 + C26599) * C257 - (C26602 + C26601) * C252 +
             (C27911 + C27912) * C258 + (C27913 + C27914) * C253) *
                C51060) *
               C51086) *
              C51152 +
          ((((C28138 + C28137) * C257 -
             ((C28136 + C28135) * C251 + (C28134 + C28133) * C256) +
             (C28140 + C28139) * C252 - (C28142 + C28141) * C258 -
             (C28144 + C28143) * C253) *
                C17049 +
            ((C26599 + C26600) * C257 -
             ((C25663 + C25664) * C251 + (C25665 + C25666) * C256) +
             (C26601 + C26602) * C252 - (C27912 + C27911) * C258 -
             (C27914 + C27913) * C253) *
                C51060) *
               C51167 +
           (((C49961 * C852 + C51138 * C857 + C49954 * C853 + C50867 * C858) *
                 C257 -
             ((C49954 * C861 + C50867 * C867 + C49961 * C860 + C51138 * C866) *
                  C251 +
              (C49954 * C852 + C50867 * C857 + C49961 * C851 + C51138 * C856) *
                  C256) +
             (C49961 * C861 + C51138 * C867 + C49954 * C862 + C50867 * C868) *
                 C252 -
             (C49954 * C854 + C50867 * C859 + C49961 * C853 + C51138 * C858) *
                 C258 -
             (C49954 * C863 + C50867 * C869 + C49961 * C862 + C51138 * C868) *
                 C253) *
                C17049 +
            ((C49961 * C971 + C51138 * C979 + C49954 * C970 + C50867 * C978) *
                 C257 -
             ((C25987 + C25986) * C251 + (C25985 + C25984) * C256) +
             (C49961 * C975 + C51138 * C983 + C49954 * C974 + C50867 * C982) *
                 C252 -
             (C49954 * C969 + C50867 * C977 + C49961 * C970 + C51138 * C978) *
                 C258 -
             (C49954 * C973 + C50867 * C981 + C49961 * C974 + C51138 * C982) *
                 C253) *
                C51060) *
               C51086) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C603 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C50880) *
                C17049 +
            ((C25020 + C25021) * C603 + (C25022 + C25023) * C50880) * C51060) *
               C51167 +
           (((C28133 + C28134) * C603 + (C28135 + C28136) * C50880) * C17049 +
            C28675 * C51060) *
               C51086) *
              C1051 -
          ((C29122 * C51060 +
            ((C28898 + C28899) * C50880 + (C28900 + C28901) * C603) * C17049) *
               C51086 +
           (C28676 * C51060 +
            ((C28136 + C28135) * C50880 + (C28134 + C28133) * C603) * C17049) *
               C51167) *
              C1052 +
          ((((C28901 + C28900) * C603 + (C28899 + C28898) * C50880) * C17049 +
            C29123 * C51060) *
               C51167 +
           (((C29262 + C29263) * C603 + (C29264 + C29265) * C50880) * C17049 +
            ((C29118 + C29119) * C603 + (C29120 + C29121) * C50880) * C51060) *
               C51086) *
              C1053 -
          ((((C49954 * C6204 + C50867 * C6208 + C49961 * C6205 +
              C51138 * C6209) *
                 C50880 +
             (C49954 * C6202 + C50867 * C6206 + C49961 * C6203 +
              C51138 * C6207) *
                 C603) *
                C51060 +
            ((C49954 * C6014 + C50867 * C6018 + C49961 * C6013 +
              C51138 * C6017) *
                 C50880 +
             (C49954 * C6009 + C50867 * C6012 + C49961 * C6008 +
              C51138 * C6011) *
                 C603) *
                C17049) *
               C51086 +
           (((C29121 + C29120) * C50880 + (C29119 + C29118) * C603) * C51060 +
            ((C29265 + C29264) * C50880 + (C29263 + C29262) * C603) * C17049) *
               C51167) *
              C1054) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C1174 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C51196 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C1175 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C51181 +
             (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                 C1176 +
             (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                 C1171) *
                C17049 +
            ((C25020 + C25021) * C1174 + (C25022 + C25023) * C51196 -
             (C25024 + C25025) * C1175 - (C25026 + C25027) * C51181 +
             (C25028 + C25029) * C1176 + (C25030 + C25031) * C1171) *
                C51060) *
               C51167 +
           (((C28133 + C28134) * C1174 + (C28135 + C28136) * C51196 -
             (C28137 + C28138) * C1175 - (C28139 + C28140) * C51181 +
             (C28141 + C28142) * C1176 + (C28143 + C28144) * C1171) *
                C17049 +
            (C28663 * C1174 + C28664 * C51196 - C29914 * C1175 -
             C29915 * C51181 + (C27911 + C27912) * C1176 +
             (C27913 + C27914) * C1171) *
                C51060) *
               C51086) *
              C1514 +
          ((((C28138 + C28137) * C1175 -
             ((C28136 + C28135) * C51196 + (C28134 + C28133) * C1174) +
             (C28140 + C28139) * C51181 - (C28142 + C28141) * C1176 -
             (C28144 + C28143) * C1171) *
                C17049 +
            (C29916 * C1175 - (C28665 * C51196 + C28666 * C1174) +
             C29919 * C51181 - (C27912 + C27911) * C1176 -
             (C27914 + C27913) * C1171) *
                C51060) *
               C51167 +
           (((C28896 + C28897) * C1175 -
             ((C28898 + C28899) * C51196 + (C28900 + C28901) * C1174) +
             (C28902 + C28903) * C51181 -
             (C49954 * C854 + C50867 * C859 + C49961 * C853 + C51138 * C858) *
                 C1176 -
             (C49954 * C863 + C50867 * C869 + C49961 * C862 + C51138 * C868) *
                 C1171) *
                C17049 +
            ((C28904 + C28905) * C1175 - (C29102 * C51196 + C29103 * C1174) +
             (C28906 + C28907) * C51181 -
             (C49954 * C969 + C50867 * C977 + C49961 * C970 + C51138 * C978) *
                 C1176 -
             (C49954 * C973 + C50867 * C981 + C49961 * C974 + C51138 * C982) *
                 C1171) *
                C51060) *
               C51086) *
              C50963) *
         C50925) /
        (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                  C1280 +
              (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                  C1275 -
              (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                  C1281 -
              (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                  C50885) *
                 C17049 +
             ((C25020 + C25021) * C1280 + (C25022 + C25023) * C1275 -
              (C25024 + C25025) * C1281 - (C25026 + C25027) * C50885) *
                 C51060) *
                C51167 +
            (((C28133 + C28134) * C1280 + (C28135 + C28136) * C1275 -
              (C28137 + C28138) * C1281 - (C28139 + C28140) * C50885) *
                 C17049 +
             C29928 * C51060) *
                C51086) *
               C1514 +
           ((((C28138 + C28137) * C1281 -
              ((C28136 + C28135) * C1275 + (C28134 + C28133) * C1280) +
              (C28140 + C28139) * C50885) *
                 C17049 +
             C29929 * C51060) *
                C51167 +
            (((C28896 + C28897) * C1281 -
              ((C28898 + C28899) * C1275 + (C28900 + C28901) * C1280) +
              (C28902 + C28903) * C50885) *
                 C17049 +
             ((C28904 + C28905) * C1281 - (C29102 * C1275 + C29103 * C1280) +
              (C28906 + C28907) * C50885) *
                 C51060) *
                C51086) *
               C50963) *
              C51151 +
          (((((C25025 + C25024) * C1281 -
              ((C25023 + C25022) * C1275 + (C25021 + C25020) * C1280) +
              (C25027 + C25026) * C50885) *
                 C17049 +
             ((C25037 + C25036) * C1281 -
              ((C25035 + C25034) * C1275 + (C25033 + C25032) * C1280) +
              (C25039 + C25038) * C50885) *
                 C51060) *
                C51167 +
            (C29929 * C17049 +
             ((C26603 + C26604) * C1281 - (C25671 * C1275 + C25672 * C1280) +
              (C26605 + C26606) * C50885) *
                 C51060) *
                C51086) *
               C1514 +
           ((C29928 * C17049 +
             (C28667 * C1280 + C28668 * C1275 - (C26604 + C26603) * C1281 -
              (C26606 + C26605) * C50885) *
                 C51060) *
                C51167 +
            ((C29104 * C1280 + C29105 * C1275 - (C28905 + C28904) * C1281 -
              (C28907 + C28906) * C50885) *
                 C17049 +
             ((C25988 + C25989) * C1280 + (C25990 + C25991) * C1275 -
              (C49954 * C3212 + C50867 * C3217 + C49961 * C3211 +
               C51138 * C3214) *
                  C1281 -
              (C49954 * C3218 + C50867 * C3221 + C49961 * C3216 +
               C51138 * C3220) *
                  C50885) *
                 C51060) *
                C51086) *
               C50963) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C1280 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C1275 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C1281 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C50885) *
                C17049 +
            ((C25020 + C25021) * C1280 + (C25022 + C25023) * C1275 -
             (C25024 + C25025) * C1281 - (C25026 + C25027) * C50885) *
                C51060) *
               C51167 +
           (((C28133 + C28134) * C1280 + (C28135 + C28136) * C1275 -
             (C28137 + C28138) * C1281 - (C28139 + C28140) * C50885) *
                C17049 +
            C29928 * C51060) *
               C51086) *
              C51198 +
          ((((C28138 + C28137) * C1281 -
             ((C28136 + C28135) * C1275 + (C28134 + C28133) * C1280) +
             (C28140 + C28139) * C50885) *
                C17049 +
            C29929 * C51060) *
               C51167 +
           (((C28896 + C28897) * C1281 -
             ((C28898 + C28899) * C1275 + (C28900 + C28901) * C1280) +
             (C28902 + C28903) * C50885) *
                C17049 +
            ((C28904 + C28905) * C1281 - (C29102 * C1275 + C29103 * C1280) +
             (C28906 + C28907) * C50885) *
                C51060) *
               C51086) *
              C51187 +
          ((((C28901 + C28900) * C1280 + (C28899 + C28898) * C1275 -
             (C28897 + C28896) * C1281 - (C28903 + C28902) * C50885) *
                C17049 +
            (C29104 * C1280 + C29105 * C1275 - (C28905 + C28904) * C1281 -
             (C28907 + C28906) * C50885) *
                C51060) *
               C51167 +
           (((C29262 + C29263) * C1280 + (C29264 + C29265) * C1275 -
             (C49954 * C1056 + C50867 * C1064 + C49961 * C1057 +
              C51138 * C1065) *
                 C1281 -
             (C49954 * C1060 + C50867 * C1068 + C49961 * C1061 +
              C51138 * C1069) *
                 C50885) *
                C17049 +
            ((C29118 + C29119) * C1280 + (C29120 + C29121) * C1275 -
             (C49954 * C6842 + C50867 * C6843 + C49961 * C3500 +
              C51138 * C3508) *
                 C1281 -
             (C49954 * C6844 + C50867 * C6845 + C49961 * C3506 +
              C51138 * C3512) *
                 C50885) *
                C51060) *
               C51086) *
              C1746) *
         C50925) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C121 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C109 -
            (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                C122 -
            (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                C110 +
            (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                C123 +
            (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                C111 -
            (C49954 * C129 + C50867 * C140 + C49961 * C128 + C51138 * C135) *
                C124 -
            (C49954 * C141 + C50867 * C150 + C49961 * C139 + C51138 * C149) *
                C112) *
               C17049 +
           ((C25020 + C25021) * C121 + (C25022 + C25023) * C109 -
            (C25024 + C25025) * C122 - (C25026 + C25027) * C110 +
            (C25028 + C25029) * C123 + (C25030 + C25031) * C111 -
            (C49954 * C262 + C50867 * C268 + C49961 * C261 + C51138 * C267) *
                C124 -
            (C49954 * C274 + C50867 * C281 + C49961 * C269 + C51138 * C277) *
                C112) *
               C51060) *
              C51167 +
          (((C49961 * C387 + C51138 * C397 + C49954 * C383 + C50867 * C389) *
                C121 +
            (C49961 * C396 + C51138 * C404 + C49954 * C395 + C50867 * C403) *
                C109 -
            (C49954 * C384 + C50867 * C390 + C49961 * C383 + C51138 * C389) *
                C122 -
            (C49954 * C394 + C50867 * C402 + C49961 * C395 + C51138 * C403) *
                C110 +
            (C49961 * C384 + C51138 * C390 + C49954 * C385 + C50867 * C391) *
                C123 +
            (C49961 * C394 + C51138 * C402 + C49954 * C393 + C50867 * C401) *
                C111 -
            (C49954 * C386 + C50867 * C392 + C49961 * C385 + C51138 * C391) *
                C124 -
            (C49954 * C398 + C50867 * C405 + C49961 * C393 + C51138 * C401) *
                C112) *
               C17049 +
           ((C25666 + C25665) * C121 + (C25664 + C25663) * C109 -
            (C26600 + C26599) * C122 - (C26602 + C26601) * C110 +
            (C49961 * C720 + C51138 * C728 + C49954 * C721 + C50867 * C729) *
                C123 +
            (C49961 * C732 + C51138 * C744 + C49954 * C733 + C50867 * C745) *
                C111 -
            (C49954 * C1412 + C50867 * C1413 + C49961 * C721 + C51138 * C729) *
                C124 -
            (C49954 * C1414 + C50867 * C1415 + C49961 * C733 + C51138 * C745) *
                C112) *
               C51060) *
              C51086) *
         C50951 * C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C50007 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C51143 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C50000 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C50885) *
                C17049 +
            ((C25020 + C25021) * C50007 + (C25022 + C25023) * C51143 -
             (C25024 + C25025) * C50000 - (C25026 + C25027) * C50885) *
                C51060) *
               C51167 +
           (((C28133 + C28134) * C50007 + (C28135 + C28136) * C51143 -
             (C28137 + C28138) * C50000 - (C28139 + C28140) * C50885) *
                C17049 +
            ((C25666 + C25665) * C50007 + (C25664 + C25663) * C51143 -
             (C26600 + C26599) * C50000 - (C26602 + C26601) * C50885) *
                C51060) *
               C51086) *
              C50951 * C507 +
          ((((C25025 + C25024) * C50000 -
             ((C25023 + C25022) * C51143 + (C25021 + C25020) * C50007) +
             (C25027 + C25026) * C50885) *
                C17049 +
            ((C25037 + C25036) * C50000 -
             ((C25035 + C25034) * C51143 + (C25033 + C25032) * C50007) +
             (C25039 + C25038) * C50885) *
                C51060) *
               C51167 +
           (((C26599 + C26600) * C50000 -
             ((C25663 + C25664) * C51143 + (C25665 + C25666) * C50007) +
             (C26601 + C26602) * C50885) *
                C17049 +
            ((C26603 + C26604) * C50000 - (C25671 * C51143 + C25672 * C50007) +
             (C26605 + C26606) * C50885) *
                C51060) *
               C51086) *
              C50951 * C508 +
          ((C25370 * C17049 +
            ((C25365 + C25364) * C50007 + (C25363 + C25362) * C51143 -
             (C25361 + C25360) * C50000 - (C25367 + C25366) * C50885) *
                C51060) *
               C51167 +
           (((C25662 + C25661) * C50007 + (C25660 + C25659) * C51143 -
             (C26604 + C26603) * C50000 - (C26606 + C26605) * C50885) *
                C17049 +
            ((C25667 + C25668) * C50007 + (C25669 + C25670) * C51143 -
             (C49954 * C4007 + C50867 * C4008 + C49961 * C3008 +
              C51138 * C3012) *
                 C50000 -
             (C49954 * C4009 + C50867 * C4010 + C49961 * C3014 +
              C51138 * C3020) *
                 C50885) *
                C51060) *
               C51086) *
              C50951 * C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C256 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C251 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C257 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C252 +
             (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                 C258 +
             (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                 C253) *
                C17049 +
            ((C25020 + C25021) * C256 + (C25022 + C25023) * C251 -
             (C25024 + C25025) * C257 - (C25026 + C25027) * C252 +
             (C25028 + C25029) * C258 + (C25030 + C25031) * C253) *
                C51060) *
               C51167 +
           (((C49961 * C387 + C51138 * C397 + C49954 * C383 + C50867 * C389) *
                 C256 +
             (C49961 * C396 + C51138 * C404 + C49954 * C395 + C50867 * C403) *
                 C251 -
             (C49954 * C384 + C50867 * C390 + C49961 * C383 + C51138 * C389) *
                 C257 -
             (C49954 * C394 + C50867 * C402 + C49961 * C395 + C51138 * C403) *
                 C252 +
             (C49961 * C384 + C51138 * C390 + C49954 * C385 + C50867 * C391) *
                 C258 +
             (C49961 * C394 + C51138 * C402 + C49954 * C393 + C50867 * C401) *
                 C253) *
                C17049 +
            ((C25666 + C25665) * C256 + (C25664 + C25663) * C251 -
             (C26600 + C26599) * C257 - (C26602 + C26601) * C252 +
             (C27911 + C27912) * C258 + (C27913 + C27914) * C253) *
                C51060) *
               C51086) *
              C50951 * C51151 +
          ((((C25025 + C25024) * C257 -
             ((C25023 + C25022) * C251 + (C25021 + C25020) * C256) +
             (C25027 + C25026) * C252 - (C25029 + C25028) * C258 -
             (C25031 + C25030) * C253) *
                C17049 +
            ((C25037 + C25036) * C257 -
             ((C25035 + C25034) * C251 + (C25033 + C25032) * C256) +
             (C25039 + C25038) * C252 - (C25041 + C25040) * C258 -
             (C25043 + C25042) * C253) *
                C51060) *
               C51167 +
           (((C26599 + C26600) * C257 -
             ((C25663 + C25664) * C251 + (C25665 + C25666) * C256) +
             (C26601 + C26602) * C252 - (C27912 + C27911) * C258 -
             (C27914 + C27913) * C253) *
                C17049 +
            ((C26603 + C26604) * C257 - (C25671 * C251 + C25672 * C256) +
             (C26605 + C26606) * C252 -
             (C49954 * C722 + C50867 * C738 + C49961 * C723 + C51138 * C739) *
                 C258 -
             (C49954 * C734 + C50867 * C746 + C49961 * C735 + C51138 * C747) *
                 C253) *
                C51060) *
               C51086) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C603 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C50880) *
                C17049 +
            ((C25020 + C25021) * C603 + (C25022 + C25023) * C50880) * C51060) *
               C51167 +
           (((C28133 + C28134) * C603 + (C28135 + C28136) * C50880) * C17049 +
            ((C25666 + C25665) * C603 + (C25664 + C25663) * C50880) * C51060) *
               C51086) *
              C50951 * C599 -
          ((C25675 * C51060 +
            ((C25663 + C25664) * C50880 + (C25665 + C25666) * C603) * C17049) *
               C51086 +
           (((C25035 + C25034) * C50880 + (C25033 + C25032) * C603) * C51060 +
            ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C17049) *
               C51167) *
              C50951 * C600 +
          ((C25481 * C17049 +
            ((C25365 + C25364) * C603 + (C25363 + C25362) * C50880) * C51060) *
               C51167 +
           (((C25662 + C25661) * C603 + (C25660 + C25659) * C50880) * C17049 +
            ((C25667 + C25668) * C603 + (C25669 + C25670) * C50880) * C51060) *
               C51086) *
              C50951 * C601 -
          ((((C49954 * C3015 + C50867 * C3021 + C49961 * C3016 +
              C51138 * C3022) *
                 C50880 +
             (C49954 * C3009 + C50867 * C3017 + C49961 * C3010 +
              C51138 * C3018) *
                 C603) *
                C51060 +
            ((C25670 + C25669) * C50880 + (C25668 + C25667) * C603) * C17049) *
               C51086 +
           (((C25487 + C25486) * C50880 + (C25485 + C25484) * C603) * C51060 +
            C25488 * C17049) *
               C51167) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C256 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C251 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C257 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C252 +
             (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                 C258 +
             (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                 C253) *
                C17049 +
            ((C25020 + C25021) * C256 + (C25022 + C25023) * C251 -
             (C25024 + C25025) * C257 - (C25026 + C25027) * C252 +
             (C25028 + C25029) * C258 + (C25030 + C25031) * C253) *
                C51060) *
               C51167 +
           (((C28133 + C28134) * C256 + (C28135 + C28136) * C251 -
             (C28137 + C28138) * C257 - (C28139 + C28140) * C252 +
             (C28141 + C28142) * C258 + (C28143 + C28144) * C253) *
                C17049 +
            ((C25666 + C25665) * C256 + (C25664 + C25663) * C251 -
             (C26600 + C26599) * C257 - (C26602 + C26601) * C252 +
             (C27911 + C27912) * C258 + (C27913 + C27914) * C253) *
                C51060) *
               C51086) *
              C51152 +
          ((((C28138 + C28137) * C257 -
             ((C28136 + C28135) * C251 + (C28134 + C28133) * C256) +
             (C28140 + C28139) * C252 - (C28142 + C28141) * C258 -
             (C28144 + C28143) * C253) *
                C17049 +
            ((C26599 + C26600) * C257 -
             ((C25663 + C25664) * C251 + (C25665 + C25666) * C256) +
             (C26601 + C26602) * C252 - (C27912 + C27911) * C258 -
             (C27914 + C27913) * C253) *
                C51060) *
               C51167 +
           (((C49961 * C852 + C51138 * C857 + C49954 * C853 + C50867 * C858) *
                 C257 -
             ((C49954 * C861 + C50867 * C867 + C49961 * C860 + C51138 * C866) *
                  C251 +
              (C49954 * C852 + C50867 * C857 + C49961 * C851 + C51138 * C856) *
                  C256) +
             (C49961 * C861 + C51138 * C867 + C49954 * C862 + C50867 * C868) *
                 C252 -
             (C49954 * C854 + C50867 * C859 + C49961 * C853 + C51138 * C858) *
                 C258 -
             (C49954 * C863 + C50867 * C869 + C49961 * C862 + C51138 * C868) *
                 C253) *
                C17049 +
            ((C49961 * C971 + C51138 * C979 + C49954 * C970 + C50867 * C978) *
                 C257 -
             ((C25987 + C25986) * C251 + (C25985 + C25984) * C256) +
             (C49961 * C975 + C51138 * C983 + C49954 * C974 + C50867 * C982) *
                 C252 -
             (C49954 * C969 + C50867 * C977 + C49961 * C970 + C51138 * C978) *
                 C258 -
             (C49954 * C973 + C50867 * C981 + C49961 * C974 + C51138 * C982) *
                 C253) *
                C51060) *
               C51086) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                  C603 +
              (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                  C50880) *
                 C17049 +
             ((C25020 + C25021) * C603 + (C25022 + C25023) * C50880) * C51060) *
                C51167 +
            (((C28133 + C28134) * C603 + (C28135 + C28136) * C50880) * C17049 +
             C28675 * C51060) *
                C51086) *
               C51152 -
           ((((C25987 + C25986) * C50880 + (C25985 + C25984) * C603) * C51060 +
             ((C49954 * C861 + C50867 * C867 + C49961 * C860 + C51138 * C866) *
                  C50880 +
              (C49954 * C852 + C50867 * C857 + C49961 * C851 + C51138 * C856) *
                  C603) *
                 C17049) *
                C51086 +
            (C28676 * C51060 +
             ((C28136 + C28135) * C50880 + (C28134 + C28133) * C603) * C17049) *
                C51167) *
               C50963) *
              C507 +
          (((C28675 * C17049 + C28677 * C51060) * C51167 +
            (((C25984 + C25985) * C603 + (C25986 + C25987) * C50880) * C17049 +
             ((C25988 + C25989) * C603 + (C25990 + C25991) * C50880) * C51060) *
                C51086) *
               C50963 -
           ((C25675 * C51060 + C28676 * C17049) * C51086 +
            (((C25035 + C25034) * C50880 + (C25033 + C25032) * C603) * C51060 +
             ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C17049) *
                C51167) *
               C51152) *
              C508 +
          (((C25481 * C17049 +
             ((C25365 + C25364) * C603 + (C25363 + C25362) * C50880) * C51060) *
                C51167 +
            (C28677 * C17049 +
             ((C25667 + C25668) * C603 + (C25669 + C25670) * C50880) * C51060) *
                C51086) *
               C51152 -
           ((((C49954 * C3370 + C50867 * C3374 + C49961 * C3371 +
               C51138 * C3375) *
                  C50880 +
              (C49954 * C3368 + C50867 * C3372 + C49961 * C3369 +
               C51138 * C3373) *
                  C603) *
                 C51060 +
             ((C25991 + C25990) * C50880 + (C25989 + C25988) * C603) * C17049) *
                C51086 +
            (((C25670 + C25669) * C50880 + (C25668 + C25667) * C603) * C51060 +
             C25675 * C17049) *
                C51167) *
               C50963) *
              C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C1174 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C51196 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C1175 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C51181 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C1176 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C1171) *
               C17049 +
           ((C17237 + C17238 + C17239) * C1174 +
            (C17240 + C17241 + C17242) * C51196 -
            (C17243 + C17244 + C17245) * C1175 -
            (C17246 + C17247 + C17248) * C51181 +
            (C17249 + C17250 + C17251) * C1176 +
            (C17252 + C17253 + C17254) * C1171) *
               C51060) *
              C51022 * C50951 * C1172 +
          (((C17245 + C17244 + C17243) * C1175 -
            ((C17242 + C17241 + C17240) * C51196 +
             (C17239 + C17238 + C17237) * C1174) +
            (C17248 + C17247 + C17246) * C51181 -
            (C17251 + C17250 + C17249) * C1176 -
            (C17254 + C17253 + C17252) * C1171) *
               C17049 +
           ((C17571 + C17572 + C17573) * C1175 -
            ((C17574 + C17575 + C17576) * C51196 +
             (C17577 + C17578 + C17579) * C1174) +
            (C17580 + C17581 + C17582) * C51181 -
            (C17053 * C516 + C17048 * C525 + C17052 * C515 + C17047 * C520 +
             C17051 * C514 + C17046 * C519) *
                C1176 -
            (C17053 * C526 + C17048 * C531 + C17052 * C524 + C17047 * C530 +
             C17051 * C523 + C17046 * C529) *
                C1171) *
               C51060) *
              C51022 * C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C1174 +
            (C19835 * C136 + C50862 * C146) * C51196 -
            (C19835 * C126 + C50862 * C133) * C1175 -
            (C19835 * C137 + C50862 * C147) * C51181 +
            (C19835 * C127 + C50862 * C134) * C1176 +
            (C19835 * C138 + C50862 * C148) * C1171) *
               C19831 +
           (C20855 + C20856 - C20857 - C20858 + C20859 + C20860) * C19832 +
           (C20861 + C20862 - C20863 - C20864 + C20865 + C20866) * C19833 +
           (C20867 + C20868 - C20869 - C20870 + C20871 + C20872) * C19834) *
              C51022 * C50951 * C1172 +
          ((C20857 - (C20856 + C20855) + C20858 - C20859 - C20860) * C19831 +
           (C20863 - (C20862 + C20861) + C20864 - C20865 - C20866) * C19832 +
           (C20869 - (C20868 + C20867) + C20870 - C20871 - C20872) * C19833 +
           (C20225 * C1175 - (C20226 * C51196 + C20227 * C1174) +
            C20228 * C51181 - (C19835 * C2690 + C50862 * C2695) * C1176 -
            (C19835 * C2696 + C50862 * C2699) * C1171) *
               C19834) *
              C51022 * C50951 * C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                      C17047 * C133 + C17053 * C127 + C17048 * C134) *
                         C1280 +
                     (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                      C17047 * C147 + C17053 * C138 + C17048 * C148) *
                         C1275 -
                     (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                      C17047 * C134 + C17051 * C126 + C17046 * C133) *
                         C1281 -
                     (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                      C17047 * C148 + C17051 * C137 + C17046 * C147) *
                         C50885) *
                        C17049 +
                    ((C17237 + C17238 + C17239) * C1280 +
                     (C17240 + C17241 + C17242) * C1275 -
                     (C17243 + C17244 + C17245) * C1281 -
                     (C17246 + C17247 + C17248) * C50885) *
                        C51060) *
                       C51022 * C50951 * C51197 +
                   (((C17245 + C17244 + C17243) * C1281 -
                     ((C17242 + C17241 + C17240) * C1275 +
                      (C17239 + C17238 + C17237) * C1280) +
                     (C17248 + C17247 + C17246) * C50885) *
                        C17049 +
                    ((C17571 + C17572 + C17573) * C1281 -
                     ((C17574 + C17575 + C17576) * C1275 +
                      (C17577 + C17578 + C17579) * C1280) +
                     (C17580 + C17581 + C17582) * C50885) *
                        C51060) *
                       C51022 * C50951 * C51184 +
                   (((C17579 + C17578 + C17577) * C1280 +
                     (C17576 + C17575 + C17574) * C1275 -
                     (C17573 + C17572 + C17571) * C1281 -
                     (C17582 + C17581 + C17580) * C50885) *
                        C17049 +
                    ((C17693 + C17694 + C17695) * C1280 +
                     (C17696 + C17697 + C17698) * C1275 -
                     (C17053 * C604 + C17048 * C612 + C17052 * C605 +
                      C17047 * C613 + C17051 * C606 + C17046 * C614) *
                         C1281 -
                     (C17053 * C608 + C17048 * C616 + C17052 * C609 +
                      C17047 * C617 + C17051 * C610 + C17046 * C618) *
                         C50885) *
                        C51060) *
                       C51022 * C50951 * C1279)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C19835 * C125 + C50862 * C132) * C1280 +
                     (C19835 * C136 + C50862 * C146) * C1275 -
                     (C19835 * C126 + C50862 * C133) * C1281 -
                     (C19835 * C137 + C50862 * C147) * C50885) *
                        C19831 +
                    (C20971 + C20972 - C20973 - C20974) * C19832 +
                    C20991 * C19833 + C20992 * C19834) *
                       C51022 * C50951 * C51197 +
                   ((C20973 - (C20972 + C20971) + C20974) * C19831 +
                    (C20977 - (C20976 + C20975) + C20978) * C19832 +
                    (C20981 - (C20980 + C20979) + C20982) * C19833 +
                    (C20983 - (C20984 + C20985) + C20986) * C19834) *
                       C51022 * C50951 * C51184 +
                   (C20991 * C19831 + C20992 * C19832 +
                    (C20985 + C20984 - C20983 - C20986) * C19833 +
                    (C20323 * C1280 + C20324 * C1275 -
                     (C19835 * C2833 + C50862 * C2837) * C1281 -
                     (C19835 * C2835 + C50862 * C2839) * C50885) *
                        C19834) *
                       C51022 * C50951 * C1279)) /
                     (p * q * std::sqrt(p + q));
    d2ee[137] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                       C17047 * C133 + C17053 * C127 + C17048 * C134) *
                          C1280 +
                      (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                       C17047 * C147 + C17053 * C138 + C17048 * C148) *
                          C1275 -
                      (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                       C17047 * C134 + C17051 * C126 + C17046 * C133) *
                          C1281 -
                      (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                       C17047 * C148 + C17051 * C137 + C17046 * C147) *
                          C50885) *
                         C17049 +
                     ((C17237 + C17238 + C17239) * C1280 +
                      (C17240 + C17241 + C17242) * C1275 -
                      (C17243 + C17244 + C17245) * C1281 -
                      (C17246 + C17247 + C17248) * C50885) *
                         C51060) *
                        C51022 * C51152 +
                    (((C17051 * C383 + C17046 * C389 + C17052 * C384 +
                       C17047 * C390 + C17053 * C385 + C17048 * C391) *
                          C1281 -
                      ((C17053 * C394 + C17048 * C402 + C17052 * C395 +
                        C17047 * C403 + C17051 * C396 + C17046 * C404) *
                           C1275 +
                       (C17053 * C384 + C17048 * C390 + C17052 * C383 +
                        C17047 * C389 + C17051 * C387 + C17046 * C397) *
                           C1280) +
                      (C17051 * C395 + C17046 * C403 + C17052 * C394 +
                       C17047 * C402 + C17053 * C393 + C17048 * C401) *
                          C50885) *
                         C17049 +
                     ((C18787 + C18788 + C18789) * C1281 -
                      ((C17869 + C17870 + C17871) * C1275 +
                       (C17872 + C17873 + C17874) * C1280) +
                      (C18790 + C18791 + C18792) * C50885) *
                         C51060) *
                        C51022 * C50963) *
                       C1172 +
                   ((((C17245 + C17244 + C17243) * C1281 -
                      ((C17242 + C17241 + C17240) * C1275 +
                       (C17239 + C17238 + C17237) * C1280) +
                      (C17248 + C17247 + C17246) * C50885) *
                         C17049 +
                     ((C17571 + C17572 + C17573) * C1281 -
                      ((C17574 + C17575 + C17576) * C1275 +
                       (C17577 + C17578 + C17579) * C1280) +
                      (C17580 + C17581 + C17582) * C50885) *
                         C51060) *
                        C51022 * C51152 +
                    (((C17874 + C17873 + C17872) * C1280 +
                      (C17871 + C17870 + C17869) * C1275 -
                      (C18789 + C18788 + C18787) * C1281 -
                      (C18792 + C18791 + C18790) * C50885) *
                         C17049 +
                     ((C17875 + C17876 + C17877) * C1280 +
                      (C17878 + C17879 + C17880) * C1275 -
                      (C17053 * C722 + C17048 * C738 + C17052 * C723 +
                       C17047 * C739 + C17051 * C724 + C17046 * C740) *
                          C1281 -
                      (C17053 * C734 + C17048 * C746 + C17052 * C735 +
                       C17047 * C747 + C17051 * C736 + C17046 * C748) *
                          C50885) *
                         C51060) *
                        C51022 * C50963) *
                       C50939)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C19835 * C125 + C50862 * C132) * C1280 +
                      (C19835 * C136 + C50862 * C146) * C1275 -
                      (C19835 * C126 + C50862 * C133) * C1281 -
                      (C19835 * C137 + C50862 * C147) * C50885) *
                         C19831 +
                     (C20971 + C20972 - C20973 - C20974) * C19832 +
                     C20991 * C19833 + C20992 * C19834) *
                        C51022 * C51152 +
                    (((C19835 * C383 + C50862 * C389) * C1281 -
                      ((C19835 * C396 + C50862 * C404) * C1275 +
                       (C19835 * C387 + C50862 * C397) * C1280) +
                      (C19835 * C395 + C50862 * C403) * C50885) *
                         C19831 +
                     (C21147 - (C21125 + C21126) + C21148) * C19832 +
                     (C21149 - (C21131 + C21132) + C21150) * C19833 +
                     (C21151 - (C21137 + C21138) + C21152) * C19834) *
                        C51022 * C50963) *
                       C1172 +
                   (((C20973 - (C20972 + C20971) + C20974) * C19831 +
                     (C20977 - (C20976 + C20975) + C20978) * C19832 +
                     (C20981 - (C20980 + C20979) + C20982) * C19833 +
                     (C20983 - (C20984 + C20985) + C20986) * C19834) *
                        C51022 * C51152 +
                    ((C21126 + C21125 - C21147 - C21148) * C19831 +
                     (C21132 + C21131 - C21149 - C21150) * C19832 +
                     (C21138 + C21137 - C21151 - C21152) * C19833 +
                     (C20451 * C1280 + C20452 * C1275 -
                      (C19835 * C3009 + C50862 * C3017) * C1281 -
                      (C19835 * C3015 + C50862 * C3021) * C50885) *
                         C19834) *
                        C51022 * C50963) *
                       C50939)) /
                     (p * q * std::sqrt(p + q));
    d2ee[138] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                       C17047 * C133 + C17053 * C127 + C17048 * C134) *
                          C50007 +
                      (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                       C17047 * C147 + C17053 * C138 + C17048 * C148) *
                          C51143 -
                      (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                       C17047 * C134 + C17051 * C126 + C17046 * C133) *
                          C50000 -
                      (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                       C17047 * C148 + C17051 * C137 + C17046 * C147) *
                          C50885) *
                         C17049 +
                     ((C17237 + C17238 + C17239) * C50007 +
                      (C17240 + C17241 + C17242) * C51143 -
                      (C17243 + C17244 + C17245) * C50000 -
                      (C17246 + C17247 + C17248) * C50885) *
                         C51060) *
                        C51022 * C1514 +
                    (((C17051 * C383 + C17046 * C389 + C17052 * C384 +
                       C17047 * C390 + C17053 * C385 + C17048 * C391) *
                          C50000 -
                      ((C17053 * C394 + C17048 * C402 + C17052 * C395 +
                        C17047 * C403 + C17051 * C396 + C17046 * C404) *
                           C51143 +
                       (C17053 * C384 + C17048 * C390 + C17052 * C383 +
                        C17047 * C389 + C17051 * C387 + C17046 * C397) *
                           C50007) +
                      (C17051 * C395 + C17046 * C403 + C17052 * C394 +
                       C17047 * C402 + C17053 * C393 + C17048 * C401) *
                          C50885) *
                         C17049 +
                     ((C18787 + C18788 + C18789) * C50000 -
                      ((C17869 + C17870 + C17871) * C51143 +
                       (C17872 + C17873 + C17874) * C50007) +
                      (C18790 + C18791 + C18792) * C50885) *
                         C51060) *
                        C51022 * C50963) *
                       C1172 +
                   ((((C17245 + C17244 + C17243) * C50000 -
                      ((C17242 + C17241 + C17240) * C51143 +
                       (C17239 + C17238 + C17237) * C50007) +
                      (C17248 + C17247 + C17246) * C50885) *
                         C17049 +
                     ((C17571 + C17572 + C17573) * C50000 -
                      ((C17574 + C17575 + C17576) * C51143 +
                       (C17577 + C17578 + C17579) * C50007) +
                      (C17580 + C17581 + C17582) * C50885) *
                         C51060) *
                        C51022 * C1514 +
                    (((C17874 + C17873 + C17872) * C50007 +
                      (C17871 + C17870 + C17869) * C51143 -
                      (C18789 + C18788 + C18787) * C50000 -
                      (C18792 + C18791 + C18790) * C50885) *
                         C17049 +
                     ((C17875 + C17876 + C17877) * C50007 +
                      (C17878 + C17879 + C17880) * C51143 -
                      (C17053 * C722 + C17048 * C738 + C17052 * C723 +
                       C17047 * C739 + C17051 * C724 + C17046 * C740) *
                          C50000 -
                      (C17053 * C734 + C17048 * C746 + C17052 * C735 +
                       C17047 * C747 + C17051 * C736 + C17046 * C748) *
                          C50885) *
                         C51060) *
                        C51022 * C50963) *
                       C50939)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C19835 * C125 + C50862 * C132) * C50007 +
                      (C19835 * C136 + C50862 * C146) * C51143 -
                      (C19835 * C126 + C50862 * C133) * C50000 -
                      (C19835 * C137 + C50862 * C147) * C50885) *
                         C19831 +
                     (C20203 + C20204 - C20205 - C20206) * C19832 +
                     C20235 * C19833 + C20236 * C19834) *
                        C51022 * C1514 +
                    (((C19835 * C383 + C50862 * C389) * C50000 -
                      ((C19835 * C396 + C50862 * C404) * C51143 +
                       (C19835 * C387 + C50862 * C397) * C50007) +
                      (C19835 * C395 + C50862 * C403) * C50885) *
                         C19831 +
                     (C21609 - (C21610 + C21611) + C21612) * C19832 +
                     (C21613 - (C21614 + C21615) + C21616) * C19833 +
                     (C21617 - (C21618 + C21619) + C21620) * C19834) *
                        C51022 * C50963) *
                       C1172 +
                   (((C20205 - (C20204 + C20203) + C20206) * C19831 +
                     (C20209 - (C20208 + C20207) + C20210) * C19832 +
                     (C20213 - (C20212 + C20211) + C20214) * C19833 +
                     (C20231 - (C20232 + C20233) + C20234) * C19834) *
                        C51022 * C1514 +
                    ((C21611 + C21610 - C21609 - C21612) * C19831 +
                     (C21615 + C21614 - C21613 - C21616) * C19832 +
                     (C21619 + C21618 - C21617 - C21620) * C19833 +
                     (C20451 * C50007 + C20452 * C51143 -
                      (C19835 * C3009 + C50862 * C3017) * C50000 -
                      (C19835 * C3015 + C50862 * C3021) * C50885) *
                         C19834) *
                        C51022 * C50963) *
                       C50939)) /
                     (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C603 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50880) *
                C17049 +
            ((C17237 + C17238 + C17239) * C603 +
             (C17240 + C17241 + C17242) * C50880) *
                C51060) *
               C51022 * C1514 -
           (((C17869 + C17870 + C17871) * C50880 +
             (C17872 + C17873 + C17874) * C603) *
                C51060 +
            ((C17053 * C394 + C17048 * C402 + C17052 * C395 + C17047 * C403 +
              C17051 * C396 + C17046 * C404) *
                 C50880 +
             (C17053 * C384 + C17048 * C390 + C17052 * C383 + C17047 * C389 +
              C17051 * C387 + C17046 * C397) *
                 C603) *
                C17049) *
               C51022 * C50963) *
              C51197 +
          ((((C17874 + C17873 + C17872) * C603 +
             (C17871 + C17870 + C17869) * C50880) *
                C17049 +
            ((C17875 + C17876 + C17877) * C603 +
             (C17878 + C17879 + C17880) * C50880) *
                C51060) *
               C51022 * C50963 -
           (((C17574 + C17575 + C17576) * C50880 +
             (C17577 + C17578 + C17579) * C603) *
                C51060 +
            ((C17242 + C17241 + C17240) * C50880 +
             (C17239 + C17238 + C17237) * C603) *
                C17049) *
               C51022 * C1514) *
              C51184 +
          ((((C17579 + C17578 + C17577) * C603 +
             (C17576 + C17575 + C17574) * C50880) *
                C17049 +
            ((C17693 + C17694 + C17695) * C603 +
             (C17696 + C17697 + C17698) * C50880) *
                C51060) *
               C51022 * C1514 -
           (((C17053 * C4009 + C17048 * C4010 + C17052 * C3014 +
              C17047 * C3020 + C17051 * C3013 + C17046 * C3019) *
                 C50880 +
             (C17053 * C4007 + C17048 * C4008 + C17052 * C3008 +
              C17047 * C3012 + C17051 * C3007 + C17046 * C3011) *
                 C603) *
                C51060 +
            ((C17880 + C17879 + C17878) * C50880 +
             (C17877 + C17876 + C17875) * C603) *
                C17049) *
               C51022 * C50963) *
              C1279)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C19831 +
            (C20307 + C20308) * C19832 + C20319 * C19833 + C20320 * C19834) *
               C51022 * C1514 -
           (C20461 * C19834 + C20462 * C19833 + (C20457 + C20458) * C19832 +
            ((C19835 * C396 + C50862 * C404) * C50880 +
             (C19835 * C387 + C50862 * C397) * C603) *
                C19831) *
               C51022 * C50963) *
              C51197 +
          (((C20458 + C20457) * C19831 + (C20456 + C20455) * C19832 +
            (C20454 + C20453) * C19833 + (C20459 + C20460) * C19834) *
               C51022 * C50963 -
           (C20321 * C19834 + C20322 * C19833 + (C20310 + C20309) * C19832 +
            (C20308 + C20307) * C19831) *
               C51022 * C1514) *
              C51184 +
          ((C20319 * C19831 + C20320 * C19832 + (C20314 + C20313) * C19833 +
            (C20325 + C20326) * C19834) *
               C51022 * C1514 -
           (((C19835 * C20425 + C50862 * C20427) * C50880 +
             (C19835 * C20424 + C50862 * C20426) * C603) *
                C19834 +
            (C20460 + C20459) * C19833 + C20461 * C19832 + C20462 * C19831) *
               C51022 * C50963) *
              C1279)) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C603 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50880) *
                C17049 +
            ((C17237 + C17238 + C17239) * C603 +
             (C17240 + C17241 + C17242) * C50880) *
                C51060) *
               C51022 * C51198 -
           (((C17869 + C17870 + C17871) * C50880 +
             (C17872 + C17873 + C17874) * C603) *
                C51060 +
            ((C17053 * C394 + C17048 * C402 + C17052 * C395 + C17047 * C403 +
              C17051 * C396 + C17046 * C404) *
                 C50880 +
             (C17053 * C384 + C17048 * C390 + C17052 * C383 + C17047 * C389 +
              C17051 * C387 + C17046 * C397) *
                 C603) *
                C17049) *
               C51022 * C51187 +
           (((C17051 * C851 + C17046 * C856 + C17052 * C852 + C17047 * C857 +
              C17053 * C853 + C17048 * C858) *
                 C603 +
             (C17051 * C860 + C17046 * C866 + C17052 * C861 + C17047 * C867 +
              C17053 * C862 + C17048 * C868) *
                 C50880) *
                C17049 +
            ((C18185 + C18186 + C18187) * C603 +
             (C18188 + C18189 + C18190) * C50880) *
                C51060) *
               C51022 * C1746) *
              C1172 +
          ((((C17874 + C17873 + C17872) * C603 +
             (C17871 + C17870 + C17869) * C50880) *
                C17049 +
            ((C17875 + C17876 + C17877) * C603 +
             (C17878 + C17879 + C17880) * C50880) *
                C51060) *
               C51022 * C51187 -
           (((C17574 + C17575 + C17576) * C50880 +
             (C17577 + C17578 + C17579) * C603) *
                C51060 +
            ((C17242 + C17241 + C17240) * C50880 +
             (C17239 + C17238 + C17237) * C603) *
                C17049) *
               C51022 * C51198 -
           (((C17053 * C3218 + C17048 * C3221 + C17052 * C3216 +
              C17047 * C3220 + C17051 * C3215 + C17046 * C3219) *
                 C50880 +
             (C17053 * C3212 + C17048 * C3217 + C17052 * C3211 +
              C17047 * C3214 + C17051 * C3210 + C17046 * C3213) *
                 C603) *
                C51060 +
            ((C18190 + C18189 + C18188) * C50880 +
             (C18187 + C18186 + C18185) * C603) *
                C17049) *
               C51022 * C1746) *
              C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C19831 +
            (C20307 + C20308) * C19832 + C20319 * C19833 + C20320 * C19834) *
               C51022 * C51198 -
           (C20461 * C19834 + C20462 * C19833 + (C20457 + C20458) * C19832 +
            ((C19835 * C396 + C50862 * C404) * C50880 +
             (C19835 * C387 + C50862 * C397) * C603) *
                C19831) *
               C51022 * C51187 +
           (((C19835 * C851 + C50862 * C856) * C603 +
             (C19835 * C860 + C50862 * C866) * C50880) *
                C19831 +
            (C20681 + C20682) * C19832 + (C20683 + C20684) * C19833 +
            (C20685 + C20686) * C19834) *
               C51022 * C1746) *
              C1172 +
          (((C20458 + C20457) * C19831 + (C20456 + C20455) * C19832 +
            (C20454 + C20453) * C19833 + (C20459 + C20460) * C19834) *
               C51022 * C51187 -
           (C20321 * C19834 + C20322 * C19833 + (C20310 + C20309) * C19832 +
            (C20308 + C20307) * C19831) *
               C51022 * C51198 -
           (((C19835 * C20659 + C50862 * C20661) * C50880 +
             (C19835 * C20658 + C50862 * C20660) * C603) *
                C19834 +
            (C20686 + C20685) * C19833 + (C20684 + C20683) * C19832 +
            (C20682 + C20681) * C19831) *
               C51022 * C1746) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[141] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                      C17047 * C133 + C17053 * C127 + C17048 * C134) *
                         C50007 +
                     (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                      C17047 * C147 + C17053 * C138 + C17048 * C148) *
                         C51143 -
                     (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                      C17047 * C134 + C17051 * C126 + C17046 * C133) *
                         C50000 -
                     (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                      C17047 * C148 + C17051 * C137 + C17046 * C147) *
                         C50885) *
                        C17049 +
                    ((C17237 + C17238 + C17239) * C50007 +
                     (C17240 + C17241 + C17242) * C51143 -
                     (C17243 + C17244 + C17245) * C50000 -
                     (C17246 + C17247 + C17248) * C50885) *
                        C51060) *
                       C51022 * C50951 * C507 +
                   (((C17245 + C17244 + C17243) * C50000 -
                     ((C17242 + C17241 + C17240) * C51143 +
                      (C17239 + C17238 + C17237) * C50007) +
                     (C17248 + C17247 + C17246) * C50885) *
                        C17049 +
                    ((C17571 + C17572 + C17573) * C50000 -
                     ((C17574 + C17575 + C17576) * C51143 +
                      (C17577 + C17578 + C17579) * C50007) +
                     (C17580 + C17581 + C17582) * C50885) *
                        C51060) *
                       C51022 * C50951 * C508 +
                   (((C17579 + C17578 + C17577) * C50007 +
                     (C17576 + C17575 + C17574) * C51143 -
                     (C17573 + C17572 + C17571) * C50000 -
                     (C17582 + C17581 + C17580) * C50885) *
                        C17049 +
                    ((C17051 * C607 + C17046 * C615 + C17052 * C606 +
                      C17047 * C614 + C17053 * C605 + C17048 * C613) *
                         C50007 +
                     (C17051 * C611 + C17046 * C619 + C17052 * C610 +
                      C17047 * C618 + C17053 * C609 + C17048 * C617) *
                         C51143 -
                     (C17053 * C604 + C17048 * C612 + C17052 * C605 +
                      C17047 * C613 + C17051 * C606 + C17046 * C614) *
                         C50000 -
                     (C17053 * C608 + C17048 * C616 + C17052 * C609 +
                      C17047 * C617 + C17051 * C610 + C17046 * C618) *
                         C50885) *
                        C51060) *
                       C51022 * C50951 * C509)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                     C17047 * C133 + C17053 * C127 + C17048 * C134) *
                        C121 +
                    (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                     C17047 * C147 + C17053 * C138 + C17048 * C148) *
                        C109 -
                    (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                     C17047 * C134 + C17051 * C126 + C17046 * C133) *
                        C122 -
                    (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                     C17047 * C148 + C17051 * C137 + C17046 * C147) *
                        C110 +
                    (C17051 * C127 + C17046 * C134 + C17052 * C128 +
                     C17047 * C135 + C17053 * C129 + C17048 * C140) *
                        C123 +
                    (C17051 * C138 + C17046 * C148 + C17052 * C139 +
                     C17047 * C149 + C17053 * C141 + C17048 * C150) *
                        C111 -
                    (C17053 * C130 + C17048 * C142 + C17052 * C129 +
                     C17047 * C140 + C17051 * C128 + C17046 * C135) *
                        C124 -
                    (C17053 * C143 + C17048 * C151 + C17052 * C141 +
                     C17047 * C150 + C17051 * C139 + C17046 * C149) *
                        C112) *
                       C17049 +
                   ((C17051 * C263 + C17046 * C273 + C17052 * C259 +
                     C17047 * C265 + C17053 * C260 + C17048 * C266) *
                        C121 +
                    (C17051 * C272 + C17046 * C280 + C17052 * C271 +
                     C17047 * C279 + C17053 * C270 + C17048 * C278) *
                        C109 -
                    (C17053 * C261 + C17048 * C267 + C17052 * C260 +
                     C17047 * C266 + C17051 * C259 + C17046 * C265) *
                        C122 -
                    (C17053 * C269 + C17048 * C277 + C17052 * C270 +
                     C17047 * C278 + C17051 * C271 + C17046 * C279) *
                        C110 +
                    (C17051 * C260 + C17046 * C266 + C17052 * C261 +
                     C17047 * C267 + C17053 * C262 + C17048 * C268) *
                        C123 +
                    (C17051 * C270 + C17046 * C278 + C17052 * C269 +
                     C17047 * C277 + C17053 * C274 + C17048 * C281) *
                        C111 -
                    (C17053 * C264 + C17048 * C275 + C17052 * C262 +
                     C17047 * C268 + C17051 * C261 + C17046 * C267) *
                        C124 -
                    (C17053 * C276 + C17048 * C282 + C17052 * C274 +
                     C17047 * C281 + C17051 * C269 + C17046 * C277) *
                        C112) *
                       C51060) *
                  C51022 * C50951 * C50925) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                      C17047 * C133 + C17053 * C127 + C17048 * C134) *
                         C50007 +
                     (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                      C17047 * C147 + C17053 * C138 + C17048 * C148) *
                         C51143 -
                     (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                      C17047 * C134 + C17051 * C126 + C17046 * C133) *
                         C50000 -
                     (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                      C17047 * C148 + C17051 * C137 + C17046 * C147) *
                         C50885) *
                        C17049 +
                    ((C17237 + C17238 + C17239) * C50007 +
                     (C17240 + C17241 + C17242) * C51143 -
                     (C17243 + C17244 + C17245) * C50000 -
                     (C17246 + C17247 + C17248) * C50885) *
                        C51060) *
                       C51022 * C848 +
                   (((C17051 * C383 + C17046 * C389 + C17052 * C384 +
                      C17047 * C390 + C17053 * C385 + C17048 * C391) *
                         C50000 -
                     ((C17053 * C394 + C17048 * C402 + C17052 * C395 +
                       C17047 * C403 + C17051 * C396 + C17046 * C404) *
                          C51143 +
                      (C17053 * C384 + C17048 * C390 + C17052 * C383 +
                       C17047 * C389 + C17051 * C387 + C17046 * C397) *
                          C50007) +
                     (C17051 * C395 + C17046 * C403 + C17052 * C394 +
                      C17047 * C402 + C17053 * C393 + C17048 * C401) *
                         C50885) *
                        C17049 +
                    ((C17051 * C719 + C17046 * C727 + C17052 * C720 +
                      C17047 * C728 + C17053 * C721 + C17048 * C729) *
                         C50000 -
                     ((C17869 + C17870 + C17871) * C51143 +
                      (C17872 + C17873 + C17874) * C50007) +
                     (C17051 * C731 + C17046 * C743 + C17052 * C732 +
                      C17047 * C744 + C17053 * C733 + C17048 * C745) *
                         C50885) *
                        C51060) *
                       C51022 * C849 +
                   (((C17051 * C851 + C17046 * C856 + C17052 * C852 +
                      C17047 * C857 + C17053 * C853 + C17048 * C858) *
                         C50007 +
                     (C17051 * C860 + C17046 * C866 + C17052 * C861 +
                      C17047 * C867 + C17053 * C862 + C17048 * C868) *
                         C51143 -
                     (C17053 * C854 + C17048 * C859 + C17052 * C853 +
                      C17047 * C858 + C17051 * C852 + C17046 * C857) *
                         C50000 -
                     (C17053 * C863 + C17048 * C869 + C17052 * C862 +
                      C17047 * C868 + C17051 * C861 + C17046 * C867) *
                         C50885) *
                        C17049 +
                    ((C17051 * C972 + C17046 * C980 + C17052 * C971 +
                      C17047 * C979 + C17053 * C970 + C17048 * C978) *
                         C50007 +
                     (C17051 * C976 + C17046 * C984 + C17052 * C975 +
                      C17047 * C983 + C17053 * C974 + C17048 * C982) *
                         C51143 -
                     (C17053 * C969 + C17048 * C977 + C17052 * C970 +
                      C17047 * C978 + C17051 * C971 + C17046 * C979) *
                         C50000 -
                     (C17053 * C973 + C17048 * C981 + C17052 * C974 +
                      C17047 * C982 + C17051 * C975 + C17046 * C983) *
                         C50885) *
                        C51060) *
                       C51022 * C850) *
                  C50925) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C19835 * C125 + C50862 * C132) * C121 +
                    (C19835 * C136 + C50862 * C146) * C109 -
                    (C19835 * C126 + C50862 * C133) * C122 -
                    (C19835 * C137 + C50862 * C147) * C110 +
                    (C19835 * C127 + C50862 * C134) * C123 +
                    (C19835 * C138 + C50862 * C148) * C111 -
                    (C19835 * C128 + C50862 * C135) * C124 -
                    (C19835 * C139 + C50862 * C149) * C112) *
                       C19831 +
                   ((C19835 * C263 + C50862 * C273) * C121 +
                    (C19835 * C272 + C50862 * C280) * C109 -
                    (C19835 * C259 + C50862 * C265) * C122 -
                    (C19835 * C271 + C50862 * C279) * C110 +
                    (C19835 * C260 + C50862 * C266) * C123 +
                    (C19835 * C270 + C50862 * C278) * C111 -
                    (C19835 * C261 + C50862 * C267) * C124 -
                    (C19835 * C269 + C50862 * C277) * C112) *
                       C19832 +
                   ((C19835 * C512 + C50862 * C517) * C121 +
                    (C19835 * C521 + C50862 * C527) * C109 -
                    (C19835 * C513 + C50862 * C518) * C122 -
                    (C19835 * C522 + C50862 * C528) * C110 +
                    (C19835 * C514 + C50862 * C519) * C123 +
                    (C19835 * C523 + C50862 * C529) * C111 -
                    (C19835 * C515 + C50862 * C520) * C124 -
                    (C19835 * C524 + C50862 * C530) * C112) *
                       C19833 +
                   ((C19835 * C607 + C50862 * C615) * C121 +
                    (C19835 * C611 + C50862 * C619) * C109 -
                    (C19835 * C606 + C50862 * C614) * C122 -
                    (C19835 * C610 + C50862 * C618) * C110 +
                    (C19835 * C605 + C50862 * C613) * C123 +
                    (C19835 * C609 + C50862 * C617) * C111 -
                    (C19835 * C604 + C50862 * C612) * C124 -
                    (C19835 * C608 + C50862 * C616) * C112) *
                       C19834) *
                  C51022 * C50951 * C50925) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C19835 * C125 + C50862 * C132) * C50007 +
                     (C19835 * C136 + C50862 * C146) * C51143 -
                     (C19835 * C126 + C50862 * C133) * C50000 -
                     (C19835 * C137 + C50862 * C147) * C50885) *
                        C19831 +
                    (C20203 + C20204 - C20205 - C20206) * C19832 +
                    C20235 * C19833 + C20236 * C19834) *
                       C51022 * C50951 * C507 +
                   ((C20205 - (C20204 + C20203) + C20206) * C19831 +
                    (C20209 - (C20208 + C20207) + C20210) * C19832 +
                    (C20213 - (C20212 + C20211) + C20214) * C19833 +
                    (C20231 - (C20232 + C20233) + C20234) * C19834) *
                       C51022 * C50951 * C508 +
                   (C20235 * C19831 + C20236 * C19832 +
                    (C20233 + C20232 - C20231 - C20234) * C19833 +
                    ((C19835 * C2834 + C50862 * C2838) * C50007 +
                     (C19835 * C2836 + C50862 * C2840) * C51143 -
                     (C19835 * C2833 + C50862 * C2837) * C50000 -
                     (C19835 * C2835 + C50862 * C2839) * C50885) *
                        C19834) *
                       C51022 * C50951 * C509)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C19835 * C125 + C50862 * C132) * C50007 +
                     (C19835 * C136 + C50862 * C146) * C51143 -
                     (C19835 * C126 + C50862 * C133) * C50000 -
                     (C19835 * C137 + C50862 * C147) * C50885) *
                        C19831 +
                    (C20203 + C20204 - C20205 - C20206) * C19832 +
                    C20235 * C19833 + C20236 * C19834) *
                       C51022 * C848 +
                   (((C19835 * C383 + C50862 * C389) * C50000 -
                     ((C19835 * C396 + C50862 * C404) * C51143 +
                      (C19835 * C387 + C50862 * C397) * C50007) +
                     (C19835 * C395 + C50862 * C403) * C50885) *
                        C19831 +
                    ((C19835 * C719 + C50862 * C727) * C50000 -
                     (C20449 * C51143 + C20450 * C50007) +
                     (C19835 * C731 + C50862 * C743) * C50885) *
                        C19832 +
                    ((C19835 * C724 + C50862 * C740) * C50000 -
                     (C20447 * C51143 + C20448 * C50007) +
                     (C19835 * C736 + C50862 * C748) * C50885) *
                        C19833 +
                    ((C19835 * C3008 + C50862 * C3012) * C50000 -
                     (C20445 * C51143 + C20446 * C50007) +
                     (C19835 * C3014 + C50862 * C3020) * C50885) *
                        C19834) *
                       C51022 * C849 +
                   (((C19835 * C851 + C50862 * C856) * C50007 +
                     (C19835 * C860 + C50862 * C866) * C51143 -
                     (C19835 * C852 + C50862 * C857) * C50000 -
                     (C19835 * C861 + C50862 * C867) * C50885) *
                        C19831 +
                    ((C19835 * C972 + C50862 * C980) * C50007 +
                     (C19835 * C976 + C50862 * C984) * C51143 -
                     (C19835 * C971 + C50862 * C979) * C50000 -
                     (C19835 * C975 + C50862 * C983) * C50885) *
                        C19832 +
                    ((C19835 * C3210 + C50862 * C3213) * C50007 +
                     (C19835 * C3215 + C50862 * C3219) * C51143 -
                     (C19835 * C3211 + C50862 * C3214) * C50000 -
                     (C19835 * C3216 + C50862 * C3220) * C50885) *
                        C19833 +
                    ((C19835 * C3369 + C50862 * C3373) * C50007 +
                     (C19835 * C3371 + C50862 * C3375) * C51143 -
                     (C19835 * C3368 + C50862 * C3372) * C50000 -
                     (C19835 * C3370 + C50862 * C3374) * C50885) *
                        C19834) *
                       C51022 * C850) *
                  C50925) /
                     (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C603 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C50880) *
               C17049 +
           ((C17237 + C17238 + C17239) * C603 +
            (C17240 + C17241 + C17242) * C50880) *
               C51060) *
              C51022 * C50951 * C599 -
          (((C17574 + C17575 + C17576) * C50880 +
            (C17577 + C17578 + C17579) * C603) *
               C51060 +
           ((C17242 + C17241 + C17240) * C50880 +
            (C17239 + C17238 + C17237) * C603) *
               C17049) *
              C51022 * C50951 * C600 +
          (((C17579 + C17578 + C17577) * C603 +
            (C17576 + C17575 + C17574) * C50880) *
               C17049 +
           ((C17693 + C17694 + C17695) * C603 +
            (C17696 + C17697 + C17698) * C50880) *
               C51060) *
              C51022 * C50951 * C601 -
          (((C17053 * C2696 + C17048 * C2699 + C17052 * C2694 + C17047 * C2698 +
             C17051 * C2693 + C17046 * C2697) *
                C50880 +
            (C17053 * C2690 + C17048 * C2695 + C17052 * C2689 + C17047 * C2692 +
             C17051 * C2688 + C17046 * C2691) *
                C603) *
               C51060 +
           ((C17698 + C17697 + C17696) * C50880 +
            (C17695 + C17694 + C17693) * C603) *
               C17049) *
              C51022 * C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C256 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C251 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C257 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C252 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C258 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C253) *
               C17049 +
           ((C17237 + C17238 + C17239) * C256 +
            (C17240 + C17241 + C17242) * C251 -
            (C17243 + C17244 + C17245) * C257 -
            (C17246 + C17247 + C17248) * C252 +
            (C17249 + C17250 + C17251) * C258 +
            (C17252 + C17253 + C17254) * C253) *
               C51060) *
              C51022 * C50951 * C51151 +
          (((C17245 + C17244 + C17243) * C257 -
            ((C17242 + C17241 + C17240) * C251 +
             (C17239 + C17238 + C17237) * C256) +
            (C17248 + C17247 + C17246) * C252 -
            (C17251 + C17250 + C17249) * C258 -
            (C17254 + C17253 + C17252) * C253) *
               C17049 +
           ((C17051 * C513 + C17046 * C518 + C17052 * C514 + C17047 * C519 +
             C17053 * C515 + C17048 * C520) *
                C257 -
            ((C17053 * C523 + C17048 * C529 + C17052 * C522 + C17047 * C528 +
              C17051 * C521 + C17046 * C527) *
                 C251 +
             (C17053 * C514 + C17048 * C519 + C17052 * C513 + C17047 * C518 +
              C17051 * C512 + C17046 * C517) *
                 C256) +
            (C17051 * C522 + C17046 * C528 + C17052 * C523 + C17047 * C529 +
             C17053 * C524 + C17048 * C530) *
                C252 -
            (C17053 * C516 + C17048 * C525 + C17052 * C515 + C17047 * C520 +
             C17051 * C514 + C17046 * C519) *
                C258 -
            (C17053 * C526 + C17048 * C531 + C17052 * C524 + C17047 * C530 +
             C17051 * C523 + C17046 * C529) *
                C253) *
               C51060) *
              C51022 * C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C603 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50880) *
                C17049 +
            ((C17237 + C17238 + C17239) * C603 +
             (C17240 + C17241 + C17242) * C50880) *
                C51060) *
               C51022 * C848 -
           (((C17869 + C17870 + C17871) * C50880 +
             (C17872 + C17873 + C17874) * C603) *
                C51060 +
            ((C17053 * C394 + C17048 * C402 + C17052 * C395 + C17047 * C403 +
              C17051 * C396 + C17046 * C404) *
                 C50880 +
             (C17053 * C384 + C17048 * C390 + C17052 * C383 + C17047 * C389 +
              C17051 * C387 + C17046 * C397) *
                 C603) *
                C17049) *
               C51022 * C849 +
           (((C17051 * C851 + C17046 * C856 + C17052 * C852 + C17047 * C857 +
              C17053 * C853 + C17048 * C858) *
                 C603 +
             (C17051 * C860 + C17046 * C866 + C17052 * C861 + C17047 * C867 +
              C17053 * C862 + C17048 * C868) *
                 C50880) *
                C17049 +
            ((C18185 + C18186 + C18187) * C603 +
             (C18188 + C18189 + C18190) * C50880) *
                C51060) *
               C51022 * C850) *
              C51151 +
          ((((C17874 + C17873 + C17872) * C603 +
             (C17871 + C17870 + C17869) * C50880) *
                C17049 +
            ((C17875 + C17876 + C17877) * C603 +
             (C17878 + C17879 + C17880) * C50880) *
                C51060) *
               C51022 * C849 -
           (((C17574 + C17575 + C17576) * C50880 +
             (C17577 + C17578 + C17579) * C603) *
                C51060 +
            ((C17242 + C17241 + C17240) * C50880 +
             (C17239 + C17238 + C17237) * C603) *
                C17049) *
               C51022 * C848 -
           (((C17053 * C3218 + C17048 * C3221 + C17052 * C3216 +
              C17047 * C3220 + C17051 * C3215 + C17046 * C3219) *
                 C50880 +
             (C17053 * C3212 + C17048 * C3217 + C17052 * C3211 +
              C17047 * C3214 + C17051 * C3210 + C17046 * C3213) *
                 C603) *
                C51060 +
            ((C18190 + C18189 + C18188) * C50880 +
             (C18187 + C18186 + C18185) * C603) *
                C17049) *
               C51022 * C850) *
              C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C256 +
            (C19835 * C136 + C50862 * C146) * C251 -
            (C19835 * C126 + C50862 * C133) * C257 -
            (C19835 * C137 + C50862 * C147) * C252 +
            (C19835 * C127 + C50862 * C134) * C258 +
            (C19835 * C138 + C50862 * C148) * C253) *
               C19831 +
           (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C19832 +
           (C19995 + C19996 - C19997 - C19998 + C19999 + C20000) * C19833 +
           (C20001 + C20002 - C20003 - C20004 + C20005 + C20006) * C19834) *
              C51022 * C50951 * C51151 +
          ((C19991 - (C19990 + C19989) + C19992 - C19993 - C19994) * C19831 +
           (C19997 - (C19996 + C19995) + C19998 - C19999 - C20000) * C19832 +
           (C20003 - (C20002 + C20001) + C20004 - C20005 - C20006) * C19833 +
           ((C19835 * C2689 + C50862 * C2692) * C257 -
            ((C19835 * C2693 + C50862 * C2697) * C251 +
             (C19835 * C2688 + C50862 * C2691) * C256) +
            (C19835 * C2694 + C50862 * C2698) * C252 -
            (C19835 * C2690 + C50862 * C2695) * C258 -
            (C19835 * C2696 + C50862 * C2699) * C253) *
               C19834) *
              C51022 * C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C603 +
            (C19835 * C136 + C50862 * C146) * C50880) *
               C19831 +
           (C20307 + C20308) * C19832 + C20319 * C19833 + C20320 * C19834) *
              C51022 * C50951 * C599 -
          (C20321 * C19834 + C20322 * C19833 + (C20310 + C20309) * C19832 +
           (C20308 + C20307) * C19831) *
              C51022 * C50951 * C600 +
          (C20319 * C19831 + C20320 * C19832 + (C20314 + C20313) * C19833 +
           (C20325 + C20326) * C19834) *
              C51022 * C50951 * C601 -
          (((C19835 * C20303 + C50862 * C20305) * C50880 +
            (C19835 * C20302 + C50862 * C20304) * C603) *
               C19834 +
           (C20326 + C20325) * C19833 + C20321 * C19832 + C20322 * C19831) *
              C51022 * C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C19831 +
            (C20307 + C20308) * C19832 + C20319 * C19833 + C20320 * C19834) *
               C51022 * C848 -
           (C20461 * C19834 + C20462 * C19833 + (C20457 + C20458) * C19832 +
            ((C19835 * C396 + C50862 * C404) * C50880 +
             (C19835 * C387 + C50862 * C397) * C603) *
                C19831) *
               C51022 * C849 +
           (((C19835 * C851 + C50862 * C856) * C603 +
             (C19835 * C860 + C50862 * C866) * C50880) *
                C19831 +
            (C20681 + C20682) * C19832 + (C20683 + C20684) * C19833 +
            (C20685 + C20686) * C19834) *
               C51022 * C850) *
              C51151 +
          (((C20458 + C20457) * C19831 + (C20456 + C20455) * C19832 +
            (C20454 + C20453) * C19833 + (C20459 + C20460) * C19834) *
               C51022 * C849 -
           (C20321 * C19834 + C20322 * C19833 + (C20310 + C20309) * C19832 +
            (C20308 + C20307) * C19831) *
               C51022 * C848 -
           (((C19835 * C20659 + C50862 * C20661) * C50880 +
             (C19835 * C20658 + C50862 * C20660) * C603) *
                C19834 +
            (C20686 + C20685) * C19833 + (C20684 + C20683) * C19832 +
            (C20682 + C20681) * C19831) *
               C51022 * C850) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C603 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50880) *
                C17049 +
            ((C17237 + C17238 + C17239) * C603 +
             (C17240 + C17241 + C17242) * C50880) *
                C51060) *
               C51022 * C51152 -
           (((C17869 + C17870 + C17871) * C50880 +
             (C17872 + C17873 + C17874) * C603) *
                C51060 +
            ((C17053 * C394 + C17048 * C402 + C17052 * C395 + C17047 * C403 +
              C17051 * C396 + C17046 * C404) *
                 C50880 +
             (C17053 * C384 + C17048 * C390 + C17052 * C383 + C17047 * C389 +
              C17051 * C387 + C17046 * C397) *
                 C603) *
                C17049) *
               C51022 * C50963) *
              C507 +
          ((((C17874 + C17873 + C17872) * C603 +
             (C17871 + C17870 + C17869) * C50880) *
                C17049 +
            ((C17875 + C17876 + C17877) * C603 +
             (C17878 + C17879 + C17880) * C50880) *
                C51060) *
               C51022 * C50963 -
           (((C17574 + C17575 + C17576) * C50880 +
             (C17577 + C17578 + C17579) * C603) *
                C51060 +
            ((C17242 + C17241 + C17240) * C50880 +
             (C17239 + C17238 + C17237) * C603) *
                C17049) *
               C51022 * C51152) *
              C508 +
          ((((C17579 + C17578 + C17577) * C603 +
             (C17576 + C17575 + C17574) * C50880) *
                C17049 +
            ((C17693 + C17694 + C17695) * C603 +
             (C17696 + C17697 + C17698) * C50880) *
                C51060) *
               C51022 * C51152 -
           (((C17053 * C4009 + C17048 * C4010 + C17052 * C3014 +
              C17047 * C3020 + C17051 * C3013 + C17046 * C3019) *
                 C50880 +
             (C17053 * C4007 + C17048 * C4008 + C17052 * C3008 +
              C17047 * C3012 + C17051 * C3007 + C17046 * C3011) *
                 C603) *
                C51060 +
            ((C17880 + C17879 + C17878) * C50880 +
             (C17877 + C17876 + C17875) * C603) *
                C17049) *
               C51022 * C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C256 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C251 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C257 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C252 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C258 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C253) *
               C17049 +
           ((C17237 + C17238 + C17239) * C256 +
            (C17240 + C17241 + C17242) * C251 -
            (C17243 + C17244 + C17245) * C257 -
            (C17246 + C17247 + C17248) * C252 +
            (C17249 + C17250 + C17251) * C258 +
            (C17252 + C17253 + C17254) * C253) *
               C51060) *
              C51022 * C51152 +
          (((C17051 * C383 + C17046 * C389 + C17052 * C384 + C17047 * C390 +
             C17053 * C385 + C17048 * C391) *
                C257 -
            ((C17053 * C394 + C17048 * C402 + C17052 * C395 + C17047 * C403 +
              C17051 * C396 + C17046 * C404) *
                 C251 +
             (C17053 * C384 + C17048 * C390 + C17052 * C383 + C17047 * C389 +
              C17051 * C387 + C17046 * C397) *
                 C256) +
            (C17051 * C395 + C17046 * C403 + C17052 * C394 + C17047 * C402 +
             C17053 * C393 + C17048 * C401) *
                C252 -
            (C17053 * C386 + C17048 * C392 + C17052 * C385 + C17047 * C391 +
             C17051 * C384 + C17046 * C390) *
                C258 -
            (C17053 * C398 + C17048 * C405 + C17052 * C393 + C17047 * C401 +
             C17051 * C394 + C17046 * C402) *
                C253) *
               C17049 +
           ((C17051 * C719 + C17046 * C727 + C17052 * C720 + C17047 * C728 +
             C17053 * C721 + C17048 * C729) *
                C257 -
            ((C17053 * C732 + C17048 * C744 + C17052 * C731 + C17047 * C743 +
              C17051 * C730 + C17046 * C742) *
                 C251 +
             (C17053 * C720 + C17048 * C728 + C17052 * C719 + C17047 * C727 +
              C17051 * C718 + C17046 * C726) *
                 C256) +
            (C17051 * C731 + C17046 * C743 + C17052 * C732 + C17047 * C744 +
             C17053 * C733 + C17048 * C745) *
                C252 -
            (C17053 * C1412 + C17048 * C1413 + C17052 * C721 + C17047 * C729 +
             C17051 * C720 + C17046 * C728) *
                C258 -
            (C17053 * C1414 + C17048 * C1415 + C17052 * C733 + C17047 * C745 +
             C17051 * C732 + C17046 * C744) *
                C253) *
               C51060) *
              C51022 * C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C603 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C50880) *
               C17049 +
           ((C17237 + C17238 + C17239) * C603 +
            (C17240 + C17241 + C17242) * C50880) *
               C51060) *
              C51022 * C1051 -
          (((C17869 + C17870 + C17871) * C50880 +
            (C17872 + C17873 + C17874) * C603) *
               C51060 +
           ((C17053 * C394 + C17048 * C402 + C17052 * C395 + C17047 * C403 +
             C17051 * C396 + C17046 * C404) *
                C50880 +
            (C17053 * C384 + C17048 * C390 + C17052 * C383 + C17047 * C389 +
             C17051 * C387 + C17046 * C397) *
                C603) *
               C17049) *
              C51022 * C1052 +
          (((C17051 * C851 + C17046 * C856 + C17052 * C852 + C17047 * C857 +
             C17053 * C853 + C17048 * C858) *
                C603 +
            (C17051 * C860 + C17046 * C866 + C17052 * C861 + C17047 * C867 +
             C17053 * C862 + C17048 * C868) *
                C50880) *
               C17049 +
           ((C18185 + C18186 + C18187) * C603 +
            (C18188 + C18189 + C18190) * C50880) *
               C51060) *
              C51022 * C1053 -
          (((C17053 * C6844 + C17048 * C6845 + C17052 * C3506 + C17047 * C3512 +
             C17051 * C3507 + C17046 * C3513) *
                C50880 +
            (C17053 * C6842 + C17048 * C6843 + C17052 * C3500 + C17047 * C3508 +
             C17051 * C3501 + C17046 * C3509) *
                C603) *
               C51060 +
           ((C17053 * C1060 + C17048 * C1068 + C17052 * C1061 + C17047 * C1069 +
             C17051 * C1062 + C17046 * C1070) *
                C50880 +
            (C17053 * C1056 + C17048 * C1064 + C17052 * C1057 + C17047 * C1065 +
             C17051 * C1058 + C17046 * C1066) *
                C603) *
               C17049) *
              C51022 * C1054) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C256 +
            (C19835 * C136 + C50862 * C146) * C251 -
            (C19835 * C126 + C50862 * C133) * C257 -
            (C19835 * C137 + C50862 * C147) * C252 +
            (C19835 * C127 + C50862 * C134) * C258 +
            (C19835 * C138 + C50862 * C148) * C253) *
               C19831 +
           (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C19832 +
           (C19995 + C19996 - C19997 - C19998 + C19999 + C20000) * C19833 +
           (C20001 + C20002 - C20003 - C20004 + C20005 + C20006) * C19834) *
              C51022 * C51152 +
          (((C19835 * C383 + C50862 * C389) * C257 -
            ((C19835 * C396 + C50862 * C404) * C251 +
             (C19835 * C387 + C50862 * C397) * C256) +
            (C19835 * C395 + C50862 * C403) * C252 -
            (C19835 * C384 + C50862 * C390) * C258 -
            (C19835 * C394 + C50862 * C402) * C253) *
               C19831 +
           ((C19835 * C719 + C50862 * C727) * C257 -
            ((C19835 * C730 + C50862 * C742) * C251 +
             (C19835 * C718 + C50862 * C726) * C256) +
            (C19835 * C731 + C50862 * C743) * C252 -
            (C19835 * C720 + C50862 * C728) * C258 -
            (C19835 * C732 + C50862 * C744) * C253) *
               C19832 +
           ((C19835 * C724 + C50862 * C740) * C257 -
            ((C19835 * C737 + C50862 * C749) * C251 +
             (C19835 * C725 + C50862 * C741) * C256) +
            (C19835 * C736 + C50862 * C748) * C252 -
            (C19835 * C723 + C50862 * C739) * C258 -
            (C19835 * C735 + C50862 * C747) * C253) *
               C19833 +
           ((C19835 * C3008 + C50862 * C3012) * C257 -
            ((C19835 * C3013 + C50862 * C3019) * C251 +
             (C19835 * C3007 + C50862 * C3011) * C256) +
            (C19835 * C3014 + C50862 * C3020) * C252 -
            (C19835 * C4007 + C50862 * C4008) * C258 -
            (C19835 * C4009 + C50862 * C4010) * C253) *
               C19834) *
              C51022 * C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C19831 +
            (C20307 + C20308) * C19832 + C20319 * C19833 + C20320 * C19834) *
               C51022 * C51152 -
           (C20461 * C19834 + C20462 * C19833 + (C20457 + C20458) * C19832 +
            ((C19835 * C396 + C50862 * C404) * C50880 +
             (C19835 * C387 + C50862 * C397) * C603) *
                C19831) *
               C51022 * C50963) *
              C507 +
          (((C20458 + C20457) * C19831 + (C20456 + C20455) * C19832 +
            (C20454 + C20453) * C19833 + (C20459 + C20460) * C19834) *
               C51022 * C50963 -
           (C20321 * C19834 + C20322 * C19833 + (C20310 + C20309) * C19832 +
            (C20308 + C20307) * C19831) *
               C51022 * C51152) *
              C508 +
          ((C20319 * C19831 + C20320 * C19832 + (C20314 + C20313) * C19833 +
            (C20325 + C20326) * C19834) *
               C51022 * C51152 -
           (((C19835 * C20425 + C50862 * C20427) * C50880 +
             (C19835 * C20424 + C50862 * C20426) * C603) *
                C19834 +
            (C20460 + C20459) * C19833 + C20461 * C19832 + C20462 * C19831) *
               C51022 * C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C603 +
            (C19835 * C136 + C50862 * C146) * C50880) *
               C19831 +
           (C20307 + C20308) * C19832 + C20319 * C19833 + C20320 * C19834) *
              C51022 * C1051 -
          (C20461 * C19834 + C20462 * C19833 + (C20457 + C20458) * C19832 +
           ((C19835 * C396 + C50862 * C404) * C50880 +
            (C19835 * C387 + C50862 * C397) * C603) *
               C19831) *
              C51022 * C1052 +
          (((C19835 * C851 + C50862 * C856) * C603 +
            (C19835 * C860 + C50862 * C866) * C50880) *
               C19831 +
           (C20681 + C20682) * C19832 + (C20683 + C20684) * C19833 +
           (C20685 + C20686) * C19834) *
              C51022 * C1053 -
          (((C19835 * C20753 + C50862 * C20755) * C50880 +
            (C19835 * C20752 + C50862 * C20754) * C603) *
               C19834 +
           ((C19835 * C3503 + C50862 * C3511) * C50880 +
            (C19835 * C3499 + C50862 * C3505) * C603) *
               C19833 +
           ((C19835 * C3507 + C50862 * C3513) * C50880 +
            (C19835 * C3501 + C50862 * C3509) * C603) *
               C19832 +
           ((C19835 * C1062 + C50862 * C1070) * C50880 +
            (C19835 * C1058 + C50862 * C1066) * C603) *
               C19831) *
              C51022 * C1054) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C1174 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C51196 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C1175 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C51181 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C1176 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C1171) *
               C17049 +
           ((C17237 + C17238 + C17239) * C1174 +
            (C17240 + C17241 + C17242) * C51196 -
            (C17243 + C17244 + C17245) * C1175 -
            (C17246 + C17247 + C17248) * C51181 +
            (C17249 + C17250 + C17251) * C1176 +
            (C17252 + C17253 + C17254) * C1171) *
               C51060) *
              C51022 * C1514 +
          (((C17051 * C383 + C17046 * C389 + C17052 * C384 + C17047 * C390 +
             C17053 * C385 + C17048 * C391) *
                C1175 -
            ((C17053 * C394 + C17048 * C402 + C17052 * C395 + C17047 * C403 +
              C17051 * C396 + C17046 * C404) *
                 C51196 +
             (C17053 * C384 + C17048 * C390 + C17052 * C383 + C17047 * C389 +
              C17051 * C387 + C17046 * C397) *
                 C1174) +
            (C17051 * C395 + C17046 * C403 + C17052 * C394 + C17047 * C402 +
             C17053 * C393 + C17048 * C401) *
                C51181 -
            (C17053 * C386 + C17048 * C392 + C17052 * C385 + C17047 * C391 +
             C17051 * C384 + C17046 * C390) *
                C1176 -
            (C17053 * C398 + C17048 * C405 + C17052 * C393 + C17047 * C401 +
             C17051 * C394 + C17046 * C402) *
                C1171) *
               C17049 +
           ((C18787 + C18788 + C18789) * C1175 -
            ((C17869 + C17870 + C17871) * C51196 +
             (C17872 + C17873 + C17874) * C1174) +
            (C18790 + C18791 + C18792) * C51181 -
            (C17053 * C1412 + C17048 * C1413 + C17052 * C721 + C17047 * C729 +
             C17051 * C720 + C17046 * C728) *
                C1176 -
            (C17053 * C1414 + C17048 * C1415 + C17052 * C733 + C17047 * C745 +
             C17051 * C732 + C17046 * C744) *
                C1171) *
               C51060) *
              C51022 * C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C1174 +
            (C19835 * C136 + C50862 * C146) * C51196 -
            (C19835 * C126 + C50862 * C133) * C1175 -
            (C19835 * C137 + C50862 * C147) * C51181 +
            (C19835 * C127 + C50862 * C134) * C1176 +
            (C19835 * C138 + C50862 * C148) * C1171) *
               C19831 +
           (C20855 + C20856 - C20857 - C20858 + C20859 + C20860) * C19832 +
           (C20861 + C20862 - C20863 - C20864 + C20865 + C20866) * C19833 +
           (C20867 + C20868 - C20869 - C20870 + C20871 + C20872) * C19834) *
              C51022 * C1514 +
          (((C19835 * C383 + C50862 * C389) * C1175 -
            ((C19835 * C396 + C50862 * C404) * C51196 +
             (C19835 * C387 + C50862 * C397) * C1174) +
            (C19835 * C395 + C50862 * C403) * C51181 -
            (C19835 * C384 + C50862 * C390) * C1176 -
            (C19835 * C394 + C50862 * C402) * C1171) *
               C19831 +
           (C21141 * C1175 - (C20449 * C51196 + C20450 * C1174) +
            C21142 * C51181 - (C19835 * C720 + C50862 * C728) * C1176 -
            (C19835 * C732 + C50862 * C744) * C1171) *
               C19832 +
           (C21143 * C1175 - (C20447 * C51196 + C20448 * C1174) +
            C21144 * C51181 - (C19835 * C723 + C50862 * C739) * C1176 -
            (C19835 * C735 + C50862 * C747) * C1171) *
               C19833 +
           (C21145 * C1175 - (C20445 * C51196 + C20446 * C1174) +
            C21146 * C51181 - (C19835 * C4007 + C50862 * C4008) * C1176 -
            (C19835 * C4009 + C50862 * C4010) * C1171) *
               C19834) *
              C51022 * C50963) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[145] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                       C17047 * C133 + C17053 * C127 + C17048 * C134) *
                          C1280 +
                      (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                       C17047 * C147 + C17053 * C138 + C17048 * C148) *
                          C1275 -
                      (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                       C17047 * C134 + C17051 * C126 + C17046 * C133) *
                          C1281 -
                      (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                       C17047 * C148 + C17051 * C137 + C17046 * C147) *
                          C50885) *
                         C17049 +
                     ((C17237 + C17238 + C17239) * C1280 +
                      (C17240 + C17241 + C17242) * C1275 -
                      (C17243 + C17244 + C17245) * C1281 -
                      (C17246 + C17247 + C17248) * C50885) *
                         C51060) *
                        C51022 * C1514 +
                    (((C17051 * C383 + C17046 * C389 + C17052 * C384 +
                       C17047 * C390 + C17053 * C385 + C17048 * C391) *
                          C1281 -
                      ((C17053 * C394 + C17048 * C402 + C17052 * C395 +
                        C17047 * C403 + C17051 * C396 + C17046 * C404) *
                           C1275 +
                       (C17053 * C384 + C17048 * C390 + C17052 * C383 +
                        C17047 * C389 + C17051 * C387 + C17046 * C397) *
                           C1280) +
                      (C17051 * C395 + C17046 * C403 + C17052 * C394 +
                       C17047 * C402 + C17053 * C393 + C17048 * C401) *
                          C50885) *
                         C17049 +
                     ((C18787 + C18788 + C18789) * C1281 -
                      ((C17869 + C17870 + C17871) * C1275 +
                       (C17872 + C17873 + C17874) * C1280) +
                      (C18790 + C18791 + C18792) * C50885) *
                         C51060) *
                        C51022 * C50963) *
                       C51151 +
                   ((((C17245 + C17244 + C17243) * C1281 -
                      ((C17242 + C17241 + C17240) * C1275 +
                       (C17239 + C17238 + C17237) * C1280) +
                      (C17248 + C17247 + C17246) * C50885) *
                         C17049 +
                     ((C17571 + C17572 + C17573) * C1281 -
                      ((C17574 + C17575 + C17576) * C1275 +
                       (C17577 + C17578 + C17579) * C1280) +
                      (C17580 + C17581 + C17582) * C50885) *
                         C51060) *
                        C51022 * C1514 +
                    (((C17874 + C17873 + C17872) * C1280 +
                      (C17871 + C17870 + C17869) * C1275 -
                      (C18789 + C18788 + C18787) * C1281 -
                      (C18792 + C18791 + C18790) * C50885) *
                         C17049 +
                     ((C17875 + C17876 + C17877) * C1280 +
                      (C17878 + C17879 + C17880) * C1275 -
                      (C17053 * C722 + C17048 * C738 + C17052 * C723 +
                       C17047 * C739 + C17051 * C724 + C17046 * C740) *
                          C1281 -
                      (C17053 * C734 + C17048 * C746 + C17052 * C735 +
                       C17047 * C747 + C17051 * C736 + C17046 * C748) *
                          C50885) *
                         C51060) *
                        C51022 * C50963) *
                       C50939)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C19835 * C125 + C50862 * C132) * C1280 +
                      (C19835 * C136 + C50862 * C146) * C1275 -
                      (C19835 * C126 + C50862 * C133) * C1281 -
                      (C19835 * C137 + C50862 * C147) * C50885) *
                         C19831 +
                     (C20971 + C20972 - C20973 - C20974) * C19832 +
                     C20991 * C19833 + C20992 * C19834) *
                        C51022 * C1514 +
                    (((C19835 * C383 + C50862 * C389) * C1281 -
                      ((C19835 * C396 + C50862 * C404) * C1275 +
                       (C19835 * C387 + C50862 * C397) * C1280) +
                      (C19835 * C395 + C50862 * C403) * C50885) *
                         C19831 +
                     (C21147 - (C21125 + C21126) + C21148) * C19832 +
                     (C21149 - (C21131 + C21132) + C21150) * C19833 +
                     (C21151 - (C21137 + C21138) + C21152) * C19834) *
                        C51022 * C50963) *
                       C51151 +
                   (((C20973 - (C20972 + C20971) + C20974) * C19831 +
                     (C20977 - (C20976 + C20975) + C20978) * C19832 +
                     (C20981 - (C20980 + C20979) + C20982) * C19833 +
                     (C20983 - (C20984 + C20985) + C20986) * C19834) *
                        C51022 * C1514 +
                    ((C21126 + C21125 - C21147 - C21148) * C19831 +
                     (C21132 + C21131 - C21149 - C21150) * C19832 +
                     (C21138 + C21137 - C21151 - C21152) * C19833 +
                     (C20451 * C1280 + C20452 * C1275 -
                      (C19835 * C3009 + C50862 * C3017) * C1281 -
                      (C19835 * C3015 + C50862 * C3021) * C50885) *
                         C19834) *
                        C51022 * C50963) *
                       C50939)) /
                     (p * q * std::sqrt(p + q));
    d2ee[146] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                      C17047 * C133 + C17053 * C127 + C17048 * C134) *
                         C1280 +
                     (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                      C17047 * C147 + C17053 * C138 + C17048 * C148) *
                         C1275 -
                     (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                      C17047 * C134 + C17051 * C126 + C17046 * C133) *
                         C1281 -
                     (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                      C17047 * C148 + C17051 * C137 + C17046 * C147) *
                         C50885) *
                        C17049 +
                    ((C17237 + C17238 + C17239) * C1280 +
                     (C17240 + C17241 + C17242) * C1275 -
                     (C17243 + C17244 + C17245) * C1281 -
                     (C17246 + C17247 + C17248) * C50885) *
                        C51060) *
                       C51022 * C51198 +
                   (((C17051 * C383 + C17046 * C389 + C17052 * C384 +
                      C17047 * C390 + C17053 * C385 + C17048 * C391) *
                         C1281 -
                     ((C17053 * C394 + C17048 * C402 + C17052 * C395 +
                       C17047 * C403 + C17051 * C396 + C17046 * C404) *
                          C1275 +
                      (C17053 * C384 + C17048 * C390 + C17052 * C383 +
                       C17047 * C389 + C17051 * C387 + C17046 * C397) *
                          C1280) +
                     (C17051 * C395 + C17046 * C403 + C17052 * C394 +
                      C17047 * C402 + C17053 * C393 + C17048 * C401) *
                         C50885) *
                        C17049 +
                    ((C18787 + C18788 + C18789) * C1281 -
                     ((C17869 + C17870 + C17871) * C1275 +
                      (C17872 + C17873 + C17874) * C1280) +
                     (C18790 + C18791 + C18792) * C50885) *
                        C51060) *
                       C51022 * C51187 +
                   (((C17051 * C851 + C17046 * C856 + C17052 * C852 +
                      C17047 * C857 + C17053 * C853 + C17048 * C858) *
                         C1280 +
                     (C17051 * C860 + C17046 * C866 + C17052 * C861 +
                      C17047 * C867 + C17053 * C862 + C17048 * C868) *
                         C1275 -
                     (C17053 * C854 + C17048 * C859 + C17052 * C853 +
                      C17047 * C858 + C17051 * C852 + C17046 * C857) *
                         C1281 -
                     (C17053 * C863 + C17048 * C869 + C17052 * C862 +
                      C17047 * C868 + C17051 * C861 + C17046 * C867) *
                         C50885) *
                        C17049 +
                    ((C18185 + C18186 + C18187) * C1280 +
                     (C18188 + C18189 + C18190) * C1275 -
                     (C17053 * C969 + C17048 * C977 + C17052 * C970 +
                      C17047 * C978 + C17051 * C971 + C17046 * C979) *
                         C1281 -
                     (C17053 * C973 + C17048 * C981 + C17052 * C974 +
                      C17047 * C982 + C17051 * C975 + C17046 * C983) *
                         C50885) *
                        C51060) *
                       C51022 * C1746) *
                  C50925) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C19835 * C125 + C50862 * C132) * C1280 +
                     (C19835 * C136 + C50862 * C146) * C1275 -
                     (C19835 * C126 + C50862 * C133) * C1281 -
                     (C19835 * C137 + C50862 * C147) * C50885) *
                        C19831 +
                    (C20971 + C20972 - C20973 - C20974) * C19832 +
                    C20991 * C19833 + C20992 * C19834) *
                       C51022 * C51198 +
                   (((C19835 * C383 + C50862 * C389) * C1281 -
                     ((C19835 * C396 + C50862 * C404) * C1275 +
                      (C19835 * C387 + C50862 * C397) * C1280) +
                     (C19835 * C395 + C50862 * C403) * C50885) *
                        C19831 +
                    (C21147 - (C21125 + C21126) + C21148) * C19832 +
                    (C21149 - (C21131 + C21132) + C21150) * C19833 +
                    (C21151 - (C21137 + C21138) + C21152) * C19834) *
                       C51022 * C51187 +
                   (((C19835 * C851 + C50862 * C856) * C1280 +
                     (C19835 * C860 + C50862 * C866) * C1275 -
                     (C19835 * C852 + C50862 * C857) * C1281 -
                     (C19835 * C861 + C50862 * C867) * C50885) *
                        C19831 +
                    (C20675 * C1280 + C20676 * C1275 -
                     (C19835 * C971 + C50862 * C979) * C1281 -
                     (C19835 * C975 + C50862 * C983) * C50885) *
                        C19832 +
                    (C20677 * C1280 + C20678 * C1275 -
                     (C19835 * C3211 + C50862 * C3214) * C1281 -
                     (C19835 * C3216 + C50862 * C3220) * C50885) *
                        C19833 +
                    (C20679 * C1280 + C20680 * C1275 -
                     (C19835 * C3368 + C50862 * C3372) * C1281 -
                     (C19835 * C3370 + C50862 * C3374) * C50885) *
                        C19834) *
                       C51022 * C1746) *
                  C50925) /
                     (p * q * std::sqrt(p + q));
    d2ee[147] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                     C17047 * C133 + C17053 * C127 + C17048 * C134) *
                        C121 +
                    (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                     C17047 * C147 + C17053 * C138 + C17048 * C148) *
                        C109 -
                    (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                     C17047 * C134 + C17051 * C126 + C17046 * C133) *
                        C122 -
                    (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                     C17047 * C148 + C17051 * C137 + C17046 * C147) *
                        C110 +
                    (C17051 * C127 + C17046 * C134 + C17052 * C128 +
                     C17047 * C135 + C17053 * C129 + C17048 * C140) *
                        C123 +
                    (C17051 * C138 + C17046 * C148 + C17052 * C139 +
                     C17047 * C149 + C17053 * C141 + C17048 * C150) *
                        C111 -
                    (C17053 * C130 + C17048 * C142 + C17052 * C129 +
                     C17047 * C140 + C17051 * C128 + C17046 * C135) *
                        C124 -
                    (C17053 * C143 + C17048 * C151 + C17052 * C141 +
                     C17047 * C150 + C17051 * C139 + C17046 * C149) *
                        C112) *
                       C17049 +
                   ((C17051 * C263 + C17046 * C273 + C17052 * C259 +
                     C17047 * C265 + C17053 * C260 + C17048 * C266) *
                        C121 +
                    (C17051 * C272 + C17046 * C280 + C17052 * C271 +
                     C17047 * C279 + C17053 * C270 + C17048 * C278) *
                        C109 -
                    (C17053 * C261 + C17048 * C267 + C17052 * C260 +
                     C17047 * C266 + C17051 * C259 + C17046 * C265) *
                        C122 -
                    (C17053 * C269 + C17048 * C277 + C17052 * C270 +
                     C17047 * C278 + C17051 * C271 + C17046 * C279) *
                        C110 +
                    (C17051 * C260 + C17046 * C266 + C17052 * C261 +
                     C17047 * C267 + C17053 * C262 + C17048 * C268) *
                        C123 +
                    (C17051 * C270 + C17046 * C278 + C17052 * C269 +
                     C17047 * C277 + C17053 * C274 + C17048 * C281) *
                        C111 -
                    (C17053 * C264 + C17048 * C275 + C17052 * C262 +
                     C17047 * C268 + C17051 * C261 + C17046 * C267) *
                        C124 -
                    (C17053 * C276 + C17048 * C282 + C17052 * C274 +
                     C17047 * C281 + C17051 * C269 + C17046 * C277) *
                        C112) *
                       C51060) *
                  C51022 * C50951 * C50925) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                      C17047 * C133 + C17053 * C127 + C17048 * C134) *
                         C50007 +
                     (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                      C17047 * C147 + C17053 * C138 + C17048 * C148) *
                         C51143 -
                     (C17053 * C128 + C17048 * C135 + C17052 * C127 +
                      C17047 * C134 + C17051 * C126 + C17046 * C133) *
                         C50000 -
                     (C17053 * C139 + C17048 * C149 + C17052 * C138 +
                      C17047 * C148 + C17051 * C137 + C17046 * C147) *
                         C50885) *
                        C17049 +
                    ((C17237 + C17238 + C17239) * C50007 +
                     (C17240 + C17241 + C17242) * C51143 -
                     (C17243 + C17244 + C17245) * C50000 -
                     (C17246 + C17247 + C17248) * C50885) *
                        C51060) *
                       C51022 * C50951 * C507 +
                   (((C17245 + C17244 + C17243) * C50000 -
                     ((C17242 + C17241 + C17240) * C51143 +
                      (C17239 + C17238 + C17237) * C50007) +
                     (C17248 + C17247 + C17246) * C50885) *
                        C17049 +
                    ((C17571 + C17572 + C17573) * C50000 -
                     ((C17574 + C17575 + C17576) * C51143 +
                      (C17577 + C17578 + C17579) * C50007) +
                     (C17580 + C17581 + C17582) * C50885) *
                        C51060) *
                       C51022 * C50951 * C508 +
                   (((C17579 + C17578 + C17577) * C50007 +
                     (C17576 + C17575 + C17574) * C51143 -
                     (C17573 + C17572 + C17571) * C50000 -
                     (C17582 + C17581 + C17580) * C50885) *
                        C17049 +
                    ((C17051 * C607 + C17046 * C615 + C17052 * C606 +
                      C17047 * C614 + C17053 * C605 + C17048 * C613) *
                         C50007 +
                     (C17051 * C611 + C17046 * C619 + C17052 * C610 +
                      C17047 * C618 + C17053 * C609 + C17048 * C617) *
                         C51143 -
                     (C17053 * C604 + C17048 * C612 + C17052 * C605 +
                      C17047 * C613 + C17051 * C606 + C17046 * C614) *
                         C50000 -
                     (C17053 * C608 + C17048 * C616 + C17052 * C609 +
                      C17047 * C617 + C17051 * C610 + C17046 * C618) *
                         C50885) *
                        C51060) *
                       C51022 * C50951 * C509)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C19835 * C125 + C50862 * C132) * C121 +
                    (C19835 * C136 + C50862 * C146) * C109 -
                    (C19835 * C126 + C50862 * C133) * C122 -
                    (C19835 * C137 + C50862 * C147) * C110 +
                    (C19835 * C127 + C50862 * C134) * C123 +
                    (C19835 * C138 + C50862 * C148) * C111 -
                    (C19835 * C128 + C50862 * C135) * C124 -
                    (C19835 * C139 + C50862 * C149) * C112) *
                       C19831 +
                   ((C19835 * C263 + C50862 * C273) * C121 +
                    (C19835 * C272 + C50862 * C280) * C109 -
                    (C19835 * C259 + C50862 * C265) * C122 -
                    (C19835 * C271 + C50862 * C279) * C110 +
                    (C19835 * C260 + C50862 * C266) * C123 +
                    (C19835 * C270 + C50862 * C278) * C111 -
                    (C19835 * C261 + C50862 * C267) * C124 -
                    (C19835 * C269 + C50862 * C277) * C112) *
                       C19832 +
                   ((C19835 * C512 + C50862 * C517) * C121 +
                    (C19835 * C521 + C50862 * C527) * C109 -
                    (C19835 * C513 + C50862 * C518) * C122 -
                    (C19835 * C522 + C50862 * C528) * C110 +
                    (C19835 * C514 + C50862 * C519) * C123 +
                    (C19835 * C523 + C50862 * C529) * C111 -
                    (C19835 * C515 + C50862 * C520) * C124 -
                    (C19835 * C524 + C50862 * C530) * C112) *
                       C19833 +
                   ((C19835 * C607 + C50862 * C615) * C121 +
                    (C19835 * C611 + C50862 * C619) * C109 -
                    (C19835 * C606 + C50862 * C614) * C122 -
                    (C19835 * C610 + C50862 * C618) * C110 +
                    (C19835 * C605 + C50862 * C613) * C123 +
                    (C19835 * C609 + C50862 * C617) * C111 -
                    (C19835 * C604 + C50862 * C612) * C124 -
                    (C19835 * C608 + C50862 * C616) * C112) *
                       C19834) *
                  C51022 * C50951 * C50925) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C19835 * C125 + C50862 * C132) * C50007 +
                     (C19835 * C136 + C50862 * C146) * C51143 -
                     (C19835 * C126 + C50862 * C133) * C50000 -
                     (C19835 * C137 + C50862 * C147) * C50885) *
                        C19831 +
                    (C20203 + C20204 - C20205 - C20206) * C19832 +
                    C20235 * C19833 + C20236 * C19834) *
                       C51022 * C50951 * C507 +
                   ((C20205 - (C20204 + C20203) + C20206) * C19831 +
                    (C20209 - (C20208 + C20207) + C20210) * C19832 +
                    (C20213 - (C20212 + C20211) + C20214) * C19833 +
                    (C20231 - (C20232 + C20233) + C20234) * C19834) *
                       C51022 * C50951 * C508 +
                   (C20235 * C19831 + C20236 * C19832 +
                    (C20233 + C20232 - C20231 - C20234) * C19833 +
                    ((C19835 * C2834 + C50862 * C2838) * C50007 +
                     (C19835 * C2836 + C50862 * C2840) * C51143 -
                     (C19835 * C2833 + C50862 * C2837) * C50000 -
                     (C19835 * C2835 + C50862 * C2839) * C50885) *
                        C19834) *
                       C51022 * C50951 * C509)) /
                     (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C256 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C251 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C257 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C252 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C258 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C253) *
               C17049 +
           ((C17237 + C17238 + C17239) * C256 +
            (C17240 + C17241 + C17242) * C251 -
            (C17243 + C17244 + C17245) * C257 -
            (C17246 + C17247 + C17248) * C252 +
            (C17249 + C17250 + C17251) * C258 +
            (C17252 + C17253 + C17254) * C253) *
               C51060) *
              C51022 * C50951 * C51151 +
          (((C17245 + C17244 + C17243) * C257 -
            ((C17242 + C17241 + C17240) * C251 +
             (C17239 + C17238 + C17237) * C256) +
            (C17248 + C17247 + C17246) * C252 -
            (C17251 + C17250 + C17249) * C258 -
            (C17254 + C17253 + C17252) * C253) *
               C17049 +
           ((C17051 * C513 + C17046 * C518 + C17052 * C514 + C17047 * C519 +
             C17053 * C515 + C17048 * C520) *
                C257 -
            ((C17053 * C523 + C17048 * C529 + C17052 * C522 + C17047 * C528 +
              C17051 * C521 + C17046 * C527) *
                 C251 +
             (C17053 * C514 + C17048 * C519 + C17052 * C513 + C17047 * C518 +
              C17051 * C512 + C17046 * C517) *
                 C256) +
            (C17051 * C522 + C17046 * C528 + C17052 * C523 + C17047 * C529 +
             C17053 * C524 + C17048 * C530) *
                C252 -
            (C17053 * C516 + C17048 * C525 + C17052 * C515 + C17047 * C520 +
             C17051 * C514 + C17046 * C519) *
                C258 -
            (C17053 * C526 + C17048 * C531 + C17052 * C524 + C17047 * C530 +
             C17051 * C523 + C17046 * C529) *
                C253) *
               C51060) *
              C51022 * C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C603 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C50880) *
               C17049 +
           ((C17237 + C17238 + C17239) * C603 +
            (C17240 + C17241 + C17242) * C50880) *
               C51060) *
              C51022 * C50951 * C599 -
          (((C17574 + C17575 + C17576) * C50880 +
            (C17577 + C17578 + C17579) * C603) *
               C51060 +
           ((C17242 + C17241 + C17240) * C50880 +
            (C17239 + C17238 + C17237) * C603) *
               C17049) *
              C51022 * C50951 * C600 +
          (((C17579 + C17578 + C17577) * C603 +
            (C17576 + C17575 + C17574) * C50880) *
               C17049 +
           ((C17693 + C17694 + C17695) * C603 +
            (C17696 + C17697 + C17698) * C50880) *
               C51060) *
              C51022 * C50951 * C601 -
          (((C17053 * C2696 + C17048 * C2699 + C17052 * C2694 + C17047 * C2698 +
             C17051 * C2693 + C17046 * C2697) *
                C50880 +
            (C17053 * C2690 + C17048 * C2695 + C17052 * C2689 + C17047 * C2692 +
             C17051 * C2688 + C17046 * C2691) *
                C603) *
               C51060 +
           ((C17698 + C17697 + C17696) * C50880 +
            (C17695 + C17694 + C17693) * C603) *
               C17049) *
              C51022 * C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C256 +
            (C19835 * C136 + C50862 * C146) * C251 -
            (C19835 * C126 + C50862 * C133) * C257 -
            (C19835 * C137 + C50862 * C147) * C252 +
            (C19835 * C127 + C50862 * C134) * C258 +
            (C19835 * C138 + C50862 * C148) * C253) *
               C19831 +
           (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C19832 +
           (C19995 + C19996 - C19997 - C19998 + C19999 + C20000) * C19833 +
           (C20001 + C20002 - C20003 - C20004 + C20005 + C20006) * C19834) *
              C51022 * C50951 * C51151 +
          ((C19991 - (C19990 + C19989) + C19992 - C19993 - C19994) * C19831 +
           (C19997 - (C19996 + C19995) + C19998 - C19999 - C20000) * C19832 +
           (C20003 - (C20002 + C20001) + C20004 - C20005 - C20006) * C19833 +
           ((C19835 * C2689 + C50862 * C2692) * C257 -
            ((C19835 * C2693 + C50862 * C2697) * C251 +
             (C19835 * C2688 + C50862 * C2691) * C256) +
            (C19835 * C2694 + C50862 * C2698) * C252 -
            (C19835 * C2690 + C50862 * C2695) * C258 -
            (C19835 * C2696 + C50862 * C2699) * C253) *
               C19834) *
              C51022 * C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C603 +
            (C19835 * C136 + C50862 * C146) * C50880) *
               C19831 +
           (C20307 + C20308) * C19832 + C20319 * C19833 + C20320 * C19834) *
              C51022 * C50951 * C599 -
          (C20321 * C19834 + C20322 * C19833 + (C20310 + C20309) * C19832 +
           (C20308 + C20307) * C19831) *
              C51022 * C50951 * C600 +
          (C20319 * C19831 + C20320 * C19832 + (C20314 + C20313) * C19833 +
           (C20325 + C20326) * C19834) *
              C51022 * C50951 * C601 -
          (((C19835 * C20303 + C50862 * C20305) * C50880 +
            (C19835 * C20302 + C50862 * C20304) * C603) *
               C19834 +
           (C20326 + C20325) * C19833 + C20321 * C19832 + C20322 * C19831) *
              C51022 * C50951 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C256 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C251 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C257 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C252 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C258 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C253) *
               C17049 +
           ((C17237 + C17238 + C17239) * C256 +
            (C17240 + C17241 + C17242) * C251 -
            (C17243 + C17244 + C17245) * C257 -
            (C17246 + C17247 + C17248) * C252 +
            (C17249 + C17250 + C17251) * C258 +
            (C17252 + C17253 + C17254) * C253) *
               C51060) *
              C51022 * C51152 +
          (((C17051 * C383 + C17046 * C389 + C17052 * C384 + C17047 * C390 +
             C17053 * C385 + C17048 * C391) *
                C257 -
            ((C17053 * C394 + C17048 * C402 + C17052 * C395 + C17047 * C403 +
              C17051 * C396 + C17046 * C404) *
                 C251 +
             (C17053 * C384 + C17048 * C390 + C17052 * C383 + C17047 * C389 +
              C17051 * C387 + C17046 * C397) *
                 C256) +
            (C17051 * C395 + C17046 * C403 + C17052 * C394 + C17047 * C402 +
             C17053 * C393 + C17048 * C401) *
                C252 -
            (C17053 * C386 + C17048 * C392 + C17052 * C385 + C17047 * C391 +
             C17051 * C384 + C17046 * C390) *
                C258 -
            (C17053 * C398 + C17048 * C405 + C17052 * C393 + C17047 * C401 +
             C17051 * C394 + C17046 * C402) *
                C253) *
               C17049 +
           ((C17051 * C719 + C17046 * C727 + C17052 * C720 + C17047 * C728 +
             C17053 * C721 + C17048 * C729) *
                C257 -
            ((C17053 * C732 + C17048 * C744 + C17052 * C731 + C17047 * C743 +
              C17051 * C730 + C17046 * C742) *
                 C251 +
             (C17053 * C720 + C17048 * C728 + C17052 * C719 + C17047 * C727 +
              C17051 * C718 + C17046 * C726) *
                 C256) +
            (C17051 * C731 + C17046 * C743 + C17052 * C732 + C17047 * C744 +
             C17053 * C733 + C17048 * C745) *
                C252 -
            (C17053 * C1412 + C17048 * C1413 + C17052 * C721 + C17047 * C729 +
             C17051 * C720 + C17046 * C728) *
                C258 -
            (C17053 * C1414 + C17048 * C1415 + C17052 * C733 + C17047 * C745 +
             C17051 * C732 + C17046 * C744) *
                C253) *
               C51060) *
              C51022 * C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C603 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50880) *
                C17049 +
            ((C17237 + C17238 + C17239) * C603 +
             (C17240 + C17241 + C17242) * C50880) *
                C51060) *
               C51022 * C51152 -
           (((C17869 + C17870 + C17871) * C50880 +
             (C17872 + C17873 + C17874) * C603) *
                C51060 +
            ((C17053 * C394 + C17048 * C402 + C17052 * C395 + C17047 * C403 +
              C17051 * C396 + C17046 * C404) *
                 C50880 +
             (C17053 * C384 + C17048 * C390 + C17052 * C383 + C17047 * C389 +
              C17051 * C387 + C17046 * C397) *
                 C603) *
                C17049) *
               C51022 * C50963) *
              C507 +
          ((((C17874 + C17873 + C17872) * C603 +
             (C17871 + C17870 + C17869) * C50880) *
                C17049 +
            ((C17875 + C17876 + C17877) * C603 +
             (C17878 + C17879 + C17880) * C50880) *
                C51060) *
               C51022 * C50963 -
           (((C17574 + C17575 + C17576) * C50880 +
             (C17577 + C17578 + C17579) * C603) *
                C51060 +
            ((C17242 + C17241 + C17240) * C50880 +
             (C17239 + C17238 + C17237) * C603) *
                C17049) *
               C51022 * C51152) *
              C508 +
          ((((C17579 + C17578 + C17577) * C603 +
             (C17576 + C17575 + C17574) * C50880) *
                C17049 +
            ((C17693 + C17694 + C17695) * C603 +
             (C17696 + C17697 + C17698) * C50880) *
                C51060) *
               C51022 * C51152 -
           (((C17053 * C4009 + C17048 * C4010 + C17052 * C3014 +
              C17047 * C3020 + C17051 * C3013 + C17046 * C3019) *
                 C50880 +
             (C17053 * C4007 + C17048 * C4008 + C17052 * C3008 +
              C17047 * C3012 + C17051 * C3007 + C17046 * C3011) *
                 C603) *
                C51060 +
            ((C17880 + C17879 + C17878) * C50880 +
             (C17877 + C17876 + C17875) * C603) *
                C17049) *
               C51022 * C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C256 +
            (C19835 * C136 + C50862 * C146) * C251 -
            (C19835 * C126 + C50862 * C133) * C257 -
            (C19835 * C137 + C50862 * C147) * C252 +
            (C19835 * C127 + C50862 * C134) * C258 +
            (C19835 * C138 + C50862 * C148) * C253) *
               C19831 +
           (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C19832 +
           (C19995 + C19996 - C19997 - C19998 + C19999 + C20000) * C19833 +
           (C20001 + C20002 - C20003 - C20004 + C20005 + C20006) * C19834) *
              C51022 * C51152 +
          (((C19835 * C383 + C50862 * C389) * C257 -
            ((C19835 * C396 + C50862 * C404) * C251 +
             (C19835 * C387 + C50862 * C397) * C256) +
            (C19835 * C395 + C50862 * C403) * C252 -
            (C19835 * C384 + C50862 * C390) * C258 -
            (C19835 * C394 + C50862 * C402) * C253) *
               C19831 +
           ((C19835 * C719 + C50862 * C727) * C257 -
            ((C19835 * C730 + C50862 * C742) * C251 +
             (C19835 * C718 + C50862 * C726) * C256) +
            (C19835 * C731 + C50862 * C743) * C252 -
            (C19835 * C720 + C50862 * C728) * C258 -
            (C19835 * C732 + C50862 * C744) * C253) *
               C19832 +
           ((C19835 * C724 + C50862 * C740) * C257 -
            ((C19835 * C737 + C50862 * C749) * C251 +
             (C19835 * C725 + C50862 * C741) * C256) +
            (C19835 * C736 + C50862 * C748) * C252 -
            (C19835 * C723 + C50862 * C739) * C258 -
            (C19835 * C735 + C50862 * C747) * C253) *
               C19833 +
           ((C19835 * C3008 + C50862 * C3012) * C257 -
            ((C19835 * C3013 + C50862 * C3019) * C251 +
             (C19835 * C3007 + C50862 * C3011) * C256) +
            (C19835 * C3014 + C50862 * C3020) * C252 -
            (C19835 * C4007 + C50862 * C4008) * C258 -
            (C19835 * C4009 + C50862 * C4010) * C253) *
               C19834) *
              C51022 * C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C19831 +
            (C20307 + C20308) * C19832 + C20319 * C19833 + C20320 * C19834) *
               C51022 * C51152 -
           (C20461 * C19834 + C20462 * C19833 + (C20457 + C20458) * C19832 +
            ((C19835 * C396 + C50862 * C404) * C50880 +
             (C19835 * C387 + C50862 * C397) * C603) *
                C19831) *
               C51022 * C50963) *
              C507 +
          (((C20458 + C20457) * C19831 + (C20456 + C20455) * C19832 +
            (C20454 + C20453) * C19833 + (C20459 + C20460) * C19834) *
               C51022 * C50963 -
           (C20321 * C19834 + C20322 * C19833 + (C20310 + C20309) * C19832 +
            (C20308 + C20307) * C19831) *
               C51022 * C51152) *
              C508 +
          ((C20319 * C19831 + C20320 * C19832 + (C20314 + C20313) * C19833 +
            (C20325 + C20326) * C19834) *
               C51022 * C51152 -
           (((C19835 * C20425 + C50862 * C20427) * C50880 +
             (C19835 * C20424 + C50862 * C20426) * C603) *
                C19834 +
            (C20460 + C20459) * C19833 + C20461 * C19832 + C20462 * C19831) *
               C51022 * C50963) *
              C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C1174 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C51196 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C1175 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C51181 +
             (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                 C1176 +
             (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                 C1171) *
                C51166 +
            ((C25020 + C25021) * C1174 + (C25022 + C25023) * C51196 -
             (C25024 + C25025) * C1175 - (C25026 + C25027) * C51181 +
             (C25028 + C25029) * C1176 + (C25030 + C25031) * C1171) *
                C51060) *
               C33992 +
           (((C28133 + C28134) * C1174 + (C28135 + C28136) * C51196 -
             (C28137 + C28138) * C1175 - (C28139 + C28140) * C51181 +
             (C28141 + C28142) * C1176 + (C28143 + C28144) * C1171) *
                C51166 +
            (C28663 * C1174 + C28664 * C51196 - C29914 * C1175 -
             C29915 * C51181 + (C27911 + C27912) * C1176 +
             (C27913 + C27914) * C1171) *
                C51060) *
               C51086) *
              C50951 * C1172 +
          ((((C25025 + C25024) * C1175 -
             ((C25023 + C25022) * C51196 + (C25021 + C25020) * C1174) +
             (C25027 + C25026) * C51181 - (C25029 + C25028) * C1176 -
             (C25031 + C25030) * C1171) *
                C51166 +
            ((C25037 + C25036) * C1175 -
             ((C25035 + C25034) * C51196 + (C25033 + C25032) * C1174) +
             (C25039 + C25038) * C51181 - (C25041 + C25040) * C1176 -
             (C25043 + C25042) * C1171) *
                C51060) *
               C33992 +
           ((C29916 * C1175 - (C28665 * C51196 + C28666 * C1174) +
             C29919 * C51181 - (C27912 + C27911) * C1176 -
             (C27914 + C27913) * C1171) *
                C51166 +
            ((C26603 + C26604) * C1175 - (C25671 * C51196 + C25672 * C1174) +
             (C26605 + C26606) * C51181 -
             (C49954 * C722 + C50867 * C738 + C49961 * C723 + C51138 * C739) *
                 C1176 -
             (C49954 * C734 + C50867 * C746 + C49961 * C735 + C51138 * C747) *
                 C1171) *
                C51060) *
               C51086) *
              C50951 * C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C1280 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C1275 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C1281 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C50885) *
                C51166 +
            ((C25020 + C25021) * C1280 + (C25022 + C25023) * C1275 -
             (C25024 + C25025) * C1281 - (C25026 + C25027) * C50885) *
                C51060) *
               C33992 +
           (((C28133 + C28134) * C1280 + (C28135 + C28136) * C1275 -
             (C28137 + C28138) * C1281 - (C28139 + C28140) * C50885) *
                C51166 +
            C29928 * C51060) *
               C51086) *
              C50951 * C51197 +
          ((((C25025 + C25024) * C1281 -
             ((C25023 + C25022) * C1275 + (C25021 + C25020) * C1280) +
             (C25027 + C25026) * C50885) *
                C51166 +
            ((C25037 + C25036) * C1281 -
             ((C25035 + C25034) * C1275 + (C25033 + C25032) * C1280) +
             (C25039 + C25038) * C50885) *
                C51060) *
               C33992 +
           (C29929 * C51166 +
            ((C26603 + C26604) * C1281 - (C25671 * C1275 + C25672 * C1280) +
             (C26605 + C26606) * C50885) *
                C51060) *
               C51086) *
              C50951 * C51184 +
          ((C26388 * C51166 +
            ((C25365 + C25364) * C1280 + (C25363 + C25362) * C1275 -
             (C25361 + C25360) * C1281 - (C25367 + C25366) * C50885) *
                C51060) *
               C33992 +
           ((C28667 * C1280 + C28668 * C1275 - (C26604 + C26603) * C1281 -
             (C26606 + C26605) * C50885) *
                C51166 +
            ((C25667 + C25668) * C1280 + (C25669 + C25670) * C1275 -
             (C49954 * C4007 + C50867 * C4008 + C49961 * C3008 +
              C51138 * C3012) *
                 C1281 -
             (C49954 * C4009 + C50867 * C4010 + C49961 * C3014 +
              C51138 * C3020) *
                 C50885) *
                C51060) *
               C51086) *
              C50951 * C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                  C1280 +
              (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                  C1275 -
              (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                  C1281 -
              (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                  C50885) *
                 C51166 +
             ((C25020 + C25021) * C1280 + (C25022 + C25023) * C1275 -
              (C25024 + C25025) * C1281 - (C25026 + C25027) * C50885) *
                 C51060) *
                C33992 +
            (((C28133 + C28134) * C1280 + (C28135 + C28136) * C1275 -
              (C28137 + C28138) * C1281 - (C28139 + C28140) * C50885) *
                 C51166 +
             C29928 * C51060) *
                C51086) *
               C51152 +
           ((((C28138 + C28137) * C1281 -
              ((C28136 + C28135) * C1275 + (C28134 + C28133) * C1280) +
              (C28140 + C28139) * C50885) *
                 C51166 +
             C29929 * C51060) *
                C33992 +
            (((C28896 + C28897) * C1281 -
              ((C28898 + C28899) * C1275 + (C28900 + C28901) * C1280) +
              (C28902 + C28903) * C50885) *
                 C51166 +
             ((C28904 + C28905) * C1281 - (C29102 * C1275 + C29103 * C1280) +
              (C28906 + C28907) * C50885) *
                 C51060) *
                C51086) *
               C50963) *
              C1172 +
          (((((C25025 + C25024) * C1281 -
              ((C25023 + C25022) * C1275 + (C25021 + C25020) * C1280) +
              (C25027 + C25026) * C50885) *
                 C51166 +
             ((C25037 + C25036) * C1281 -
              ((C25035 + C25034) * C1275 + (C25033 + C25032) * C1280) +
              (C25039 + C25038) * C50885) *
                 C51060) *
                C33992 +
            (C29929 * C51166 +
             ((C26603 + C26604) * C1281 - (C25671 * C1275 + C25672 * C1280) +
              (C26605 + C26606) * C50885) *
                 C51060) *
                C51086) *
               C51152 +
           ((C29928 * C51166 +
             (C28667 * C1280 + C28668 * C1275 - (C26604 + C26603) * C1281 -
              (C26606 + C26605) * C50885) *
                 C51060) *
                C33992 +
            ((C29104 * C1280 + C29105 * C1275 - (C28905 + C28904) * C1281 -
              (C28907 + C28906) * C50885) *
                 C51166 +
             ((C25988 + C25989) * C1280 + (C25990 + C25991) * C1275 -
              (C49954 * C3212 + C50867 * C3217 + C49961 * C3211 +
               C51138 * C3214) *
                  C1281 -
              (C49954 * C3218 + C50867 * C3221 + C49961 * C3216 +
               C51138 * C3220) *
                  C50885) *
                 C51060) *
                C51086) *
               C50963) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                  C50007 +
              (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                  C51143 -
              (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                  C50000 -
              (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                  C50885) *
                 C51166 +
             ((C25020 + C25021) * C50007 + (C25022 + C25023) * C51143 -
              (C25024 + C25025) * C50000 - (C25026 + C25027) * C50885) *
                 C51060) *
                C33992 +
            (((C28133 + C28134) * C50007 + (C28135 + C28136) * C51143 -
              (C28137 + C28138) * C50000 - (C28139 + C28140) * C50885) *
                 C51166 +
             C30846 * C51060) *
                C51086) *
               C1514 +
           ((((C28138 + C28137) * C50000 -
              ((C28136 + C28135) * C51143 + (C28134 + C28133) * C50007) +
              (C28140 + C28139) * C50885) *
                 C51166 +
             C30847 * C51060) *
                C33992 +
            (((C28896 + C28897) * C50000 -
              ((C28898 + C28899) * C51143 + (C28900 + C28901) * C50007) +
              (C28902 + C28903) * C50885) *
                 C51166 +
             ((C28904 + C28905) * C50000 - (C29102 * C51143 + C29103 * C50007) +
              (C28906 + C28907) * C50885) *
                 C51060) *
                C51086) *
               C50963) *
              C1172 +
          (((((C25025 + C25024) * C50000 -
              ((C25023 + C25022) * C51143 + (C25021 + C25020) * C50007) +
              (C25027 + C25026) * C50885) *
                 C51166 +
             ((C25037 + C25036) * C50000 -
              ((C25035 + C25034) * C51143 + (C25033 + C25032) * C50007) +
              (C25039 + C25038) * C50885) *
                 C51060) *
                C33992 +
            (C30847 * C51166 +
             ((C26603 + C26604) * C50000 - (C25671 * C51143 + C25672 * C50007) +
              (C26605 + C26606) * C50885) *
                 C51060) *
                C51086) *
               C1514 +
           ((C30846 * C51166 +
             (C28667 * C50007 + C28668 * C51143 - (C26604 + C26603) * C50000 -
              (C26606 + C26605) * C50885) *
                 C51060) *
                C33992 +
            ((C29104 * C50007 + C29105 * C51143 - (C28905 + C28904) * C50000 -
              (C28907 + C28906) * C50885) *
                 C51166 +
             ((C25988 + C25989) * C50007 + (C25990 + C25991) * C51143 -
              (C49954 * C3212 + C50867 * C3217 + C49961 * C3211 +
               C51138 * C3214) *
                  C50000 -
              (C49954 * C3218 + C50867 * C3221 + C49961 * C3216 +
               C51138 * C3220) *
                  C50885) *
                 C51060) *
                C51086) *
               C50963) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                  C603 +
              (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                  C50880) *
                 C51166 +
             ((C25020 + C25021) * C603 + (C25022 + C25023) * C50880) * C51060) *
                C33992 +
            (((C28133 + C28134) * C603 + (C28135 + C28136) * C50880) * C51166 +
             C28675 * C51060) *
                C51086) *
               C1514 -
           ((C29122 * C51060 +
             ((C28898 + C28899) * C50880 + (C28900 + C28901) * C603) * C51166) *
                C51086 +
            (C28676 * C51060 +
             ((C28136 + C28135) * C50880 + (C28134 + C28133) * C603) * C51166) *
                C33992) *
               C50963) *
              C51197 +
          (((C28675 * C51166 + C28677 * C51060) * C33992 +
            (C29123 * C51166 +
             ((C25988 + C25989) * C603 + (C25990 + C25991) * C50880) * C51060) *
                C51086) *
               C50963 -
           ((C25675 * C51060 + C28676 * C51166) * C51086 +
            (((C25035 + C25034) * C50880 + (C25033 + C25032) * C603) * C51060 +
             ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C51166) *
                C33992) *
               C1514) *
              C51184 +
          (((C25481 * C51166 +
             ((C25365 + C25364) * C603 + (C25363 + C25362) * C50880) * C51060) *
                C33992 +
            (C28677 * C51166 +
             ((C25667 + C25668) * C603 + (C25669 + C25670) * C50880) * C51060) *
                C51086) *
               C1514 -
           ((((C49954 * C3370 + C50867 * C3374 + C49961 * C3371 +
               C51138 * C3375) *
                  C50880 +
              (C49954 * C3368 + C50867 * C3372 + C49961 * C3369 +
               C51138 * C3373) *
                  C603) *
                 C51060 +
             ((C25991 + C25990) * C50880 + (C25989 + C25988) * C603) * C51166) *
                C51086 +
            (((C25670 + C25669) * C50880 + (C25668 + C25667) * C603) * C51060 +
             C25675 * C51166) *
                C33992) *
               C50963) *
              C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                  C603 +
              (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                  C50880) *
                 C51166 +
             ((C25020 + C25021) * C603 + (C25022 + C25023) * C50880) * C51060) *
                C33992 +
            (((C28133 + C28134) * C603 + (C28135 + C28136) * C50880) * C51166 +
             C28675 * C51060) *
                C51086) *
               C51198 -
           ((C29122 * C51060 +
             ((C28898 + C28899) * C50880 + (C28900 + C28901) * C603) * C51166) *
                C51086 +
            (C28676 * C51060 +
             ((C28136 + C28135) * C50880 + (C28134 + C28133) * C603) * C51166) *
                C33992) *
               C51187 +
           ((((C28901 + C28900) * C603 + (C28899 + C28898) * C50880) * C51166 +
             C29123 * C51060) *
                C33992 +
            (((C29262 + C29263) * C603 + (C29264 + C29265) * C50880) * C51166 +
             ((C29118 + C29119) * C603 + (C29120 + C29121) * C50880) * C51060) *
                C51086) *
               C1746) *
              C1172 +
          (((C28675 * C51166 + C28677 * C51060) * C33992 +
            (C29123 * C51166 +
             ((C25988 + C25989) * C603 + (C25990 + C25991) * C50880) * C51060) *
                C51086) *
               C51187 -
           ((C25675 * C51060 + C28676 * C51166) * C51086 +
            (((C25035 + C25034) * C50880 + (C25033 + C25032) * C603) * C51060 +
             ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C51166) *
                C33992) *
               C51198 -
           ((((C49954 * C3502 + C50867 * C3510 + C49961 * C3503 +
               C51138 * C3511) *
                  C50880 +
              (C49954 * C3498 + C50867 * C3504 + C49961 * C3499 +
               C51138 * C3505) *
                  C603) *
                 C51060 +
             ((C29121 + C29120) * C50880 + (C29119 + C29118) * C603) * C51166) *
                C51086 +
            (((C25991 + C25990) * C50880 + (C25989 + C25988) * C603) * C51060 +
             C29122 * C51166) *
                C33992) *
               C1746) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C50007 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C51143 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C50000 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C50885) *
                C51166 +
            ((C25020 + C25021) * C50007 + (C25022 + C25023) * C51143 -
             (C25024 + C25025) * C50000 - (C25026 + C25027) * C50885) *
                C51060) *
               C33992 +
           (((C28133 + C28134) * C50007 + (C28135 + C28136) * C51143 -
             (C28137 + C28138) * C50000 - (C28139 + C28140) * C50885) *
                C51166 +
            C30846 * C51060) *
               C51086) *
              C50951 * C507 +
          ((((C25025 + C25024) * C50000 -
             ((C25023 + C25022) * C51143 + (C25021 + C25020) * C50007) +
             (C25027 + C25026) * C50885) *
                C51166 +
            ((C25037 + C25036) * C50000 -
             ((C25035 + C25034) * C51143 + (C25033 + C25032) * C50007) +
             (C25039 + C25038) * C50885) *
                C51060) *
               C33992 +
           (C30847 * C51166 +
            ((C26603 + C26604) * C50000 - (C25671 * C51143 + C25672 * C50007) +
             (C26605 + C26606) * C50885) *
                C51060) *
               C51086) *
              C50951 * C508 +
          ((C25370 * C51166 +
            ((C25365 + C25364) * C50007 + (C25363 + C25362) * C51143 -
             (C25361 + C25360) * C50000 - (C25367 + C25366) * C50885) *
                C51060) *
               C33992 +
           ((C28667 * C50007 + C28668 * C51143 - (C26604 + C26603) * C50000 -
             (C26606 + C26605) * C50885) *
                C51166 +
            ((C25667 + C25668) * C50007 + (C25669 + C25670) * C51143 -
             (C49954 * C4007 + C50867 * C4008 + C49961 * C3008 +
              C51138 * C3012) *
                 C50000 -
             (C49954 * C4009 + C50867 * C4010 + C49961 * C3014 +
              C51138 * C3020) *
                 C50885) *
                C51060) *
               C51086) *
              C50951 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C121 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C109 -
            (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                C122 -
            (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                C110 +
            (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                C123 +
            (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                C111 -
            (C49954 * C129 + C50867 * C140 + C49961 * C128 + C51138 * C135) *
                C124 -
            (C49954 * C141 + C50867 * C150 + C49961 * C139 + C51138 * C149) *
                C112) *
               C51166 +
           ((C25020 + C25021) * C121 + (C25022 + C25023) * C109 -
            (C25024 + C25025) * C122 - (C25026 + C25027) * C110 +
            (C25028 + C25029) * C123 + (C25030 + C25031) * C111 -
            (C49954 * C262 + C50867 * C268 + C49961 * C261 + C51138 * C267) *
                C124 -
            (C49954 * C274 + C50867 * C281 + C49961 * C269 + C51138 * C277) *
                C112) *
               C51060) *
              C33992 +
          (((C28133 + C28134) * C121 + (C28135 + C28136) * C109 -
            (C28137 + C28138) * C122 - (C28139 + C28140) * C110 +
            (C28141 + C28142) * C123 + (C28143 + C28144) * C111 -
            (C49954 * C386 + C50867 * C392 + C49961 * C385 + C51138 * C391) *
                C124 -
            (C49954 * C398 + C50867 * C405 + C49961 * C393 + C51138 * C401) *
                C112) *
               C51166 +
           (C28663 * C121 + C28664 * C109 - C29914 * C122 - C29915 * C110 +
            (C27911 + C27912) * C123 + (C27913 + C27914) * C111 -
            (C49954 * C1412 + C50867 * C1413 + C49961 * C721 + C51138 * C729) *
                C124 -
            (C49954 * C1414 + C50867 * C1415 + C49961 * C733 + C51138 * C745) *
                C112) *
               C51060) *
              C51086) *
         C50951 * C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C50007 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C51143 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C50000 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C50885) *
                C51166 +
            ((C25020 + C25021) * C50007 + (C25022 + C25023) * C51143 -
             (C25024 + C25025) * C50000 - (C25026 + C25027) * C50885) *
                C51060) *
               C33992 +
           (((C28133 + C28134) * C50007 + (C28135 + C28136) * C51143 -
             (C28137 + C28138) * C50000 - (C28139 + C28140) * C50885) *
                C51166 +
            C30846 * C51060) *
               C51086) *
              C848 +
          ((((C28138 + C28137) * C50000 -
             ((C28136 + C28135) * C51143 + (C28134 + C28133) * C50007) +
             (C28140 + C28139) * C50885) *
                C51166 +
            C30847 * C51060) *
               C33992 +
           (((C28896 + C28897) * C50000 -
             ((C28898 + C28899) * C51143 + (C28900 + C28901) * C50007) +
             (C28902 + C28903) * C50885) *
                C51166 +
            ((C28904 + C28905) * C50000 - (C29102 * C51143 + C29103 * C50007) +
             (C28906 + C28907) * C50885) *
                C51060) *
               C51086) *
              C849 +
          ((((C28901 + C28900) * C50007 + (C28899 + C28898) * C51143 -
             (C28897 + C28896) * C50000 - (C28903 + C28902) * C50885) *
                C51166 +
            (C29104 * C50007 + C29105 * C51143 - (C28905 + C28904) * C50000 -
             (C28907 + C28906) * C50885) *
                C51060) *
               C33992 +
           (((C29262 + C29263) * C50007 + (C29264 + C29265) * C51143 -
             (C49954 * C1056 + C50867 * C1064 + C49961 * C1057 +
              C51138 * C1065) *
                 C50000 -
             (C49954 * C1060 + C50867 * C1068 + C49961 * C1061 +
              C51138 * C1069) *
                 C50885) *
                C51166 +
            ((C29118 + C29119) * C50007 + (C29120 + C29121) * C51143 -
             (C49954 * C6842 + C50867 * C6843 + C49961 * C3500 +
              C51138 * C3508) *
                 C50000 -
             (C49954 * C6844 + C50867 * C6845 + C49961 * C3506 +
              C51138 * C3512) *
                 C50885) *
                C51060) *
               C51086) *
              C850) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C603 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C50880) *
                C51166 +
            ((C25020 + C25021) * C603 + (C25022 + C25023) * C50880) * C51060) *
               C33992 +
           (((C28133 + C28134) * C603 + (C28135 + C28136) * C50880) * C51166 +
            C28675 * C51060) *
               C51086) *
              C50951 * C599 -
          ((C25675 * C51060 + C28676 * C51166) * C51086 +
           (((C25035 + C25034) * C50880 + (C25033 + C25032) * C603) * C51060 +
            ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C51166) *
               C33992) *
              C50951 * C600 +
          ((C25481 * C51166 +
            ((C25365 + C25364) * C603 + (C25363 + C25362) * C50880) * C51060) *
               C33992 +
           (C28677 * C51166 +
            ((C25667 + C25668) * C603 + (C25669 + C25670) * C50880) * C51060) *
               C51086) *
              C50951 * C601 -
          ((((C49954 * C3015 + C50867 * C3021 + C49961 * C3016 +
              C51138 * C3022) *
                 C50880 +
             (C49954 * C3009 + C50867 * C3017 + C49961 * C3010 +
              C51138 * C3018) *
                 C603) *
                C51060 +
            ((C25670 + C25669) * C50880 + (C25668 + C25667) * C603) * C51166) *
               C51086 +
           (((C25487 + C25486) * C50880 + (C25485 + C25484) * C603) * C51060 +
            C25488 * C51166) *
               C33992) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C256 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C251 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C257 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C252 +
             (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                 C258 +
             (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                 C253) *
                C51166 +
            ((C25020 + C25021) * C256 + (C25022 + C25023) * C251 -
             (C25024 + C25025) * C257 - (C25026 + C25027) * C252 +
             (C25028 + C25029) * C258 + (C25030 + C25031) * C253) *
                C51060) *
               C33992 +
           (((C28133 + C28134) * C256 + (C28135 + C28136) * C251 -
             (C28137 + C28138) * C257 - (C28139 + C28140) * C252 +
             (C28141 + C28142) * C258 + (C28143 + C28144) * C253) *
                C51166 +
            (C28663 * C256 + C28664 * C251 - C29914 * C257 - C29915 * C252 +
             (C27911 + C27912) * C258 + (C27913 + C27914) * C253) *
                C51060) *
               C51086) *
              C50951 * C51151 +
          ((((C25025 + C25024) * C257 -
             ((C25023 + C25022) * C251 + (C25021 + C25020) * C256) +
             (C25027 + C25026) * C252 - (C25029 + C25028) * C258 -
             (C25031 + C25030) * C253) *
                C51166 +
            ((C25037 + C25036) * C257 -
             ((C25035 + C25034) * C251 + (C25033 + C25032) * C256) +
             (C25039 + C25038) * C252 - (C25041 + C25040) * C258 -
             (C25043 + C25042) * C253) *
                C51060) *
               C33992 +
           ((C29916 * C257 - (C28665 * C251 + C28666 * C256) + C29919 * C252 -
             (C27912 + C27911) * C258 - (C27914 + C27913) * C253) *
                C51166 +
            ((C26603 + C26604) * C257 - (C25671 * C251 + C25672 * C256) +
             (C26605 + C26606) * C252 -
             (C49954 * C722 + C50867 * C738 + C49961 * C723 + C51138 * C739) *
                 C258 -
             (C49954 * C734 + C50867 * C746 + C49961 * C735 + C51138 * C747) *
                 C253) *
                C51060) *
               C51086) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                  C603 +
              (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                  C50880) *
                 C51166 +
             ((C25020 + C25021) * C603 + (C25022 + C25023) * C50880) * C51060) *
                C33992 +
            (((C28133 + C28134) * C603 + (C28135 + C28136) * C50880) * C51166 +
             C28675 * C51060) *
                C51086) *
               C848 -
           ((C29122 * C51060 +
             ((C28898 + C28899) * C50880 + (C28900 + C28901) * C603) * C51166) *
                C51086 +
            (C28676 * C51060 +
             ((C28136 + C28135) * C50880 + (C28134 + C28133) * C603) * C51166) *
                C33992) *
               C849 +
           ((((C28901 + C28900) * C603 + (C28899 + C28898) * C50880) * C51166 +
             C29123 * C51060) *
                C33992 +
            (((C29262 + C29263) * C603 + (C29264 + C29265) * C50880) * C51166 +
             ((C29118 + C29119) * C603 + (C29120 + C29121) * C50880) * C51060) *
                C51086) *
               C850) *
              C51151 +
          (((C28675 * C51166 + C28677 * C51060) * C33992 +
            (C29123 * C51166 +
             ((C25988 + C25989) * C603 + (C25990 + C25991) * C50880) * C51060) *
                C51086) *
               C849 -
           ((C25675 * C51060 + C28676 * C51166) * C51086 +
            (((C25035 + C25034) * C50880 + (C25033 + C25032) * C603) * C51060 +
             ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C51166) *
                C33992) *
               C848 -
           ((((C49954 * C3502 + C50867 * C3510 + C49961 * C3503 +
               C51138 * C3511) *
                  C50880 +
              (C49954 * C3498 + C50867 * C3504 + C49961 * C3499 +
               C51138 * C3505) *
                  C603) *
                 C51060 +
             ((C29121 + C29120) * C50880 + (C29119 + C29118) * C603) * C51166) *
                C51086 +
            (((C25991 + C25990) * C50880 + (C25989 + C25988) * C603) * C51060 +
             C29122 * C51166) *
                C33992) *
               C850) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                  C603 +
              (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                  C50880) *
                 C51166 +
             ((C25020 + C25021) * C603 + (C25022 + C25023) * C50880) * C51060) *
                C33992 +
            (((C28133 + C28134) * C603 + (C28135 + C28136) * C50880) * C51166 +
             C28675 * C51060) *
                C51086) *
               C51152 -
           ((C29122 * C51060 +
             ((C28898 + C28899) * C50880 + (C28900 + C28901) * C603) * C51166) *
                C51086 +
            (C28676 * C51060 +
             ((C28136 + C28135) * C50880 + (C28134 + C28133) * C603) * C51166) *
                C33992) *
               C50963) *
              C507 +
          (((C28675 * C51166 + C28677 * C51060) * C33992 +
            (C29123 * C51166 +
             ((C25988 + C25989) * C603 + (C25990 + C25991) * C50880) * C51060) *
                C51086) *
               C50963 -
           ((C25675 * C51060 + C28676 * C51166) * C51086 +
            (((C25035 + C25034) * C50880 + (C25033 + C25032) * C603) * C51060 +
             ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C51166) *
                C33992) *
               C51152) *
              C508 +
          (((C25481 * C51166 +
             ((C25365 + C25364) * C603 + (C25363 + C25362) * C50880) * C51060) *
                C33992 +
            (C28677 * C51166 +
             ((C25667 + C25668) * C603 + (C25669 + C25670) * C50880) * C51060) *
                C51086) *
               C51152 -
           ((((C49954 * C3370 + C50867 * C3374 + C49961 * C3371 +
               C51138 * C3375) *
                  C50880 +
              (C49954 * C3368 + C50867 * C3372 + C49961 * C3369 +
               C51138 * C3373) *
                  C603) *
                 C51060 +
             ((C25991 + C25990) * C50880 + (C25989 + C25988) * C603) * C51166) *
                C51086 +
            (((C25670 + C25669) * C50880 + (C25668 + C25667) * C603) * C51060 +
             C25675 * C51166) *
                C33992) *
               C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C256 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C251 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C257 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C252 +
             (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                 C258 +
             (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                 C253) *
                C51166 +
            ((C25020 + C25021) * C256 + (C25022 + C25023) * C251 -
             (C25024 + C25025) * C257 - (C25026 + C25027) * C252 +
             (C25028 + C25029) * C258 + (C25030 + C25031) * C253) *
                C51060) *
               C33992 +
           (((C28133 + C28134) * C256 + (C28135 + C28136) * C251 -
             (C28137 + C28138) * C257 - (C28139 + C28140) * C252 +
             (C28141 + C28142) * C258 + (C28143 + C28144) * C253) *
                C51166 +
            (C28663 * C256 + C28664 * C251 - C29914 * C257 - C29915 * C252 +
             (C27911 + C27912) * C258 + (C27913 + C27914) * C253) *
                C51060) *
               C51086) *
              C51152 +
          ((((C28138 + C28137) * C257 -
             ((C28136 + C28135) * C251 + (C28134 + C28133) * C256) +
             (C28140 + C28139) * C252 - (C28142 + C28141) * C258 -
             (C28144 + C28143) * C253) *
                C51166 +
            (C29916 * C257 - (C28665 * C251 + C28666 * C256) + C29919 * C252 -
             (C27912 + C27911) * C258 - (C27914 + C27913) * C253) *
                C51060) *
               C33992 +
           (((C28896 + C28897) * C257 -
             ((C28898 + C28899) * C251 + (C28900 + C28901) * C256) +
             (C28902 + C28903) * C252 -
             (C49954 * C854 + C50867 * C859 + C49961 * C853 + C51138 * C858) *
                 C258 -
             (C49954 * C863 + C50867 * C869 + C49961 * C862 + C51138 * C868) *
                 C253) *
                C51166 +
            ((C28904 + C28905) * C257 - (C29102 * C251 + C29103 * C256) +
             (C28906 + C28907) * C252 -
             (C49954 * C969 + C50867 * C977 + C49961 * C970 + C51138 * C978) *
                 C258 -
             (C49954 * C973 + C50867 * C981 + C49961 * C974 + C51138 * C982) *
                 C253) *
                C51060) *
               C51086) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C603 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C50880) *
                C51166 +
            ((C25020 + C25021) * C603 + (C25022 + C25023) * C50880) * C51060) *
               C33992 +
           (((C28133 + C28134) * C603 + (C28135 + C28136) * C50880) * C51166 +
            C28675 * C51060) *
               C51086) *
              C1051 -
          ((C29122 * C51060 +
            ((C28898 + C28899) * C50880 + (C28900 + C28901) * C603) * C51166) *
               C51086 +
           (C28676 * C51060 +
            ((C28136 + C28135) * C50880 + (C28134 + C28133) * C603) * C51166) *
               C33992) *
              C1052 +
          ((((C28901 + C28900) * C603 + (C28899 + C28898) * C50880) * C51166 +
            C29123 * C51060) *
               C33992 +
           (((C29262 + C29263) * C603 + (C29264 + C29265) * C50880) * C51166 +
            ((C29118 + C29119) * C603 + (C29120 + C29121) * C50880) * C51060) *
               C51086) *
              C1053 -
          ((((C49954 * C6204 + C50867 * C6208 + C49961 * C6205 +
              C51138 * C6209) *
                 C50880 +
             (C49954 * C6202 + C50867 * C6206 + C49961 * C6203 +
              C51138 * C6207) *
                 C603) *
                C51060 +
            ((C49954 * C6014 + C50867 * C6018 + C49961 * C6013 +
              C51138 * C6017) *
                 C50880 +
             (C49954 * C6009 + C50867 * C6012 + C49961 * C6008 +
              C51138 * C6011) *
                 C603) *
                C51166) *
               C51086 +
           (((C29121 + C29120) * C50880 + (C29119 + C29118) * C603) * C51060 +
            ((C29265 + C29264) * C50880 + (C29263 + C29262) * C603) * C51166) *
               C33992) *
              C1054) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C1174 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C51196 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C1175 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C51181 +
             (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                 C1176 +
             (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                 C1171) *
                C51166 +
            ((C25020 + C25021) * C1174 + (C25022 + C25023) * C51196 -
             (C25024 + C25025) * C1175 - (C25026 + C25027) * C51181 +
             (C25028 + C25029) * C1176 + (C25030 + C25031) * C1171) *
                C51060) *
               C33992 +
           (((C28133 + C28134) * C1174 + (C28135 + C28136) * C51196 -
             (C28137 + C28138) * C1175 - (C28139 + C28140) * C51181 +
             (C28141 + C28142) * C1176 + (C28143 + C28144) * C1171) *
                C51166 +
            (C28663 * C1174 + C28664 * C51196 - C29914 * C1175 -
             C29915 * C51181 + (C27911 + C27912) * C1176 +
             (C27913 + C27914) * C1171) *
                C51060) *
               C51086) *
              C1514 +
          ((((C28138 + C28137) * C1175 -
             ((C28136 + C28135) * C51196 + (C28134 + C28133) * C1174) +
             (C28140 + C28139) * C51181 - (C28142 + C28141) * C1176 -
             (C28144 + C28143) * C1171) *
                C51166 +
            (C29916 * C1175 - (C28665 * C51196 + C28666 * C1174) +
             C29919 * C51181 - (C27912 + C27911) * C1176 -
             (C27914 + C27913) * C1171) *
                C51060) *
               C33992 +
           (((C28896 + C28897) * C1175 -
             ((C28898 + C28899) * C51196 + (C28900 + C28901) * C1174) +
             (C28902 + C28903) * C51181 -
             (C49954 * C854 + C50867 * C859 + C49961 * C853 + C51138 * C858) *
                 C1176 -
             (C49954 * C863 + C50867 * C869 + C49961 * C862 + C51138 * C868) *
                 C1171) *
                C51166 +
            ((C28904 + C28905) * C1175 - (C29102 * C51196 + C29103 * C1174) +
             (C28906 + C28907) * C51181 -
             (C49954 * C969 + C50867 * C977 + C49961 * C970 + C51138 * C978) *
                 C1176 -
             (C49954 * C973 + C50867 * C981 + C49961 * C974 + C51138 * C982) *
                 C1171) *
                C51060) *
               C51086) *
              C50963) *
         C50925) /
        (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                  C1280 +
              (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                  C1275 -
              (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                  C1281 -
              (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                  C50885) *
                 C51166 +
             ((C25020 + C25021) * C1280 + (C25022 + C25023) * C1275 -
              (C25024 + C25025) * C1281 - (C25026 + C25027) * C50885) *
                 C51060) *
                C33992 +
            (((C28133 + C28134) * C1280 + (C28135 + C28136) * C1275 -
              (C28137 + C28138) * C1281 - (C28139 + C28140) * C50885) *
                 C51166 +
             C29928 * C51060) *
                C51086) *
               C1514 +
           ((((C28138 + C28137) * C1281 -
              ((C28136 + C28135) * C1275 + (C28134 + C28133) * C1280) +
              (C28140 + C28139) * C50885) *
                 C51166 +
             C29929 * C51060) *
                C33992 +
            (((C28896 + C28897) * C1281 -
              ((C28898 + C28899) * C1275 + (C28900 + C28901) * C1280) +
              (C28902 + C28903) * C50885) *
                 C51166 +
             ((C28904 + C28905) * C1281 - (C29102 * C1275 + C29103 * C1280) +
              (C28906 + C28907) * C50885) *
                 C51060) *
                C51086) *
               C50963) *
              C51151 +
          (((((C25025 + C25024) * C1281 -
              ((C25023 + C25022) * C1275 + (C25021 + C25020) * C1280) +
              (C25027 + C25026) * C50885) *
                 C51166 +
             ((C25037 + C25036) * C1281 -
              ((C25035 + C25034) * C1275 + (C25033 + C25032) * C1280) +
              (C25039 + C25038) * C50885) *
                 C51060) *
                C33992 +
            (C29929 * C51166 +
             ((C26603 + C26604) * C1281 - (C25671 * C1275 + C25672 * C1280) +
              (C26605 + C26606) * C50885) *
                 C51060) *
                C51086) *
               C1514 +
           ((C29928 * C51166 +
             (C28667 * C1280 + C28668 * C1275 - (C26604 + C26603) * C1281 -
              (C26606 + C26605) * C50885) *
                 C51060) *
                C33992 +
            ((C29104 * C1280 + C29105 * C1275 - (C28905 + C28904) * C1281 -
              (C28907 + C28906) * C50885) *
                 C51166 +
             ((C25988 + C25989) * C1280 + (C25990 + C25991) * C1275 -
              (C49954 * C3212 + C50867 * C3217 + C49961 * C3211 +
               C51138 * C3214) *
                  C1281 -
              (C49954 * C3218 + C50867 * C3221 + C49961 * C3216 +
               C51138 * C3220) *
                  C50885) *
                 C51060) *
                C51086) *
               C50963) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C1280 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C1275 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C1281 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C50885) *
                C51166 +
            ((C25020 + C25021) * C1280 + (C25022 + C25023) * C1275 -
             (C25024 + C25025) * C1281 - (C25026 + C25027) * C50885) *
                C51060) *
               C33992 +
           (((C28133 + C28134) * C1280 + (C28135 + C28136) * C1275 -
             (C28137 + C28138) * C1281 - (C28139 + C28140) * C50885) *
                C51166 +
            C29928 * C51060) *
               C51086) *
              C51198 +
          ((((C28138 + C28137) * C1281 -
             ((C28136 + C28135) * C1275 + (C28134 + C28133) * C1280) +
             (C28140 + C28139) * C50885) *
                C51166 +
            C29929 * C51060) *
               C33992 +
           (((C28896 + C28897) * C1281 -
             ((C28898 + C28899) * C1275 + (C28900 + C28901) * C1280) +
             (C28902 + C28903) * C50885) *
                C51166 +
            ((C28904 + C28905) * C1281 - (C29102 * C1275 + C29103 * C1280) +
             (C28906 + C28907) * C50885) *
                C51060) *
               C51086) *
              C51187 +
          ((((C28901 + C28900) * C1280 + (C28899 + C28898) * C1275 -
             (C28897 + C28896) * C1281 - (C28903 + C28902) * C50885) *
                C51166 +
            (C29104 * C1280 + C29105 * C1275 - (C28905 + C28904) * C1281 -
             (C28907 + C28906) * C50885) *
                C51060) *
               C33992 +
           (((C29262 + C29263) * C1280 + (C29264 + C29265) * C1275 -
             (C49954 * C1056 + C50867 * C1064 + C49961 * C1057 +
              C51138 * C1065) *
                 C1281 -
             (C49954 * C1060 + C50867 * C1068 + C49961 * C1061 +
              C51138 * C1069) *
                 C50885) *
                C51166 +
            ((C29118 + C29119) * C1280 + (C29120 + C29121) * C1275 -
             (C49954 * C6842 + C50867 * C6843 + C49961 * C3500 +
              C51138 * C3508) *
                 C1281 -
             (C49954 * C6844 + C50867 * C6845 + C49961 * C3506 +
              C51138 * C3512) *
                 C50885) *
                C51060) *
               C51086) *
              C1746) *
         C50925) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C121 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C109 -
            (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                C122 -
            (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                C110 +
            (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                C123 +
            (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                C111 -
            (C49954 * C129 + C50867 * C140 + C49961 * C128 + C51138 * C135) *
                C124 -
            (C49954 * C141 + C50867 * C150 + C49961 * C139 + C51138 * C149) *
                C112) *
               C51166 +
           ((C25020 + C25021) * C121 + (C25022 + C25023) * C109 -
            (C25024 + C25025) * C122 - (C25026 + C25027) * C110 +
            (C25028 + C25029) * C123 + (C25030 + C25031) * C111 -
            (C49954 * C262 + C50867 * C268 + C49961 * C261 + C51138 * C267) *
                C124 -
            (C49954 * C274 + C50867 * C281 + C49961 * C269 + C51138 * C277) *
                C112) *
               C51060) *
              C33992 +
          (((C28133 + C28134) * C121 + (C28135 + C28136) * C109 -
            (C28137 + C28138) * C122 - (C28139 + C28140) * C110 +
            (C28141 + C28142) * C123 + (C28143 + C28144) * C111 -
            (C49954 * C386 + C50867 * C392 + C49961 * C385 + C51138 * C391) *
                C124 -
            (C49954 * C398 + C50867 * C405 + C49961 * C393 + C51138 * C401) *
                C112) *
               C51166 +
           (C28663 * C121 + C28664 * C109 - C29914 * C122 - C29915 * C110 +
            (C27911 + C27912) * C123 + (C27913 + C27914) * C111 -
            (C49954 * C1412 + C50867 * C1413 + C49961 * C721 + C51138 * C729) *
                C124 -
            (C49954 * C1414 + C50867 * C1415 + C49961 * C733 + C51138 * C745) *
                C112) *
               C51060) *
              C51086) *
         C50951 * C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C50007 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C51143 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C50000 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C50885) *
                C51166 +
            ((C25020 + C25021) * C50007 + (C25022 + C25023) * C51143 -
             (C25024 + C25025) * C50000 - (C25026 + C25027) * C50885) *
                C51060) *
               C33992 +
           (((C28133 + C28134) * C50007 + (C28135 + C28136) * C51143 -
             (C28137 + C28138) * C50000 - (C28139 + C28140) * C50885) *
                C51166 +
            C30846 * C51060) *
               C51086) *
              C50951 * C507 +
          ((((C25025 + C25024) * C50000 -
             ((C25023 + C25022) * C51143 + (C25021 + C25020) * C50007) +
             (C25027 + C25026) * C50885) *
                C51166 +
            ((C25037 + C25036) * C50000 -
             ((C25035 + C25034) * C51143 + (C25033 + C25032) * C50007) +
             (C25039 + C25038) * C50885) *
                C51060) *
               C33992 +
           (C30847 * C51166 +
            ((C26603 + C26604) * C50000 - (C25671 * C51143 + C25672 * C50007) +
             (C26605 + C26606) * C50885) *
                C51060) *
               C51086) *
              C50951 * C508 +
          ((C25370 * C51166 +
            ((C25365 + C25364) * C50007 + (C25363 + C25362) * C51143 -
             (C25361 + C25360) * C50000 - (C25367 + C25366) * C50885) *
                C51060) *
               C33992 +
           ((C28667 * C50007 + C28668 * C51143 - (C26604 + C26603) * C50000 -
             (C26606 + C26605) * C50885) *
                C51166 +
            ((C25667 + C25668) * C50007 + (C25669 + C25670) * C51143 -
             (C49954 * C4007 + C50867 * C4008 + C49961 * C3008 +
              C51138 * C3012) *
                 C50000 -
             (C49954 * C4009 + C50867 * C4010 + C49961 * C3014 +
              C51138 * C3020) *
                 C50885) *
                C51060) *
               C51086) *
              C50951 * C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C256 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C251 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C257 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C252 +
             (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                 C258 +
             (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                 C253) *
                C51166 +
            ((C25020 + C25021) * C256 + (C25022 + C25023) * C251 -
             (C25024 + C25025) * C257 - (C25026 + C25027) * C252 +
             (C25028 + C25029) * C258 + (C25030 + C25031) * C253) *
                C51060) *
               C33992 +
           (((C28133 + C28134) * C256 + (C28135 + C28136) * C251 -
             (C28137 + C28138) * C257 - (C28139 + C28140) * C252 +
             (C28141 + C28142) * C258 + (C28143 + C28144) * C253) *
                C51166 +
            (C28663 * C256 + C28664 * C251 - C29914 * C257 - C29915 * C252 +
             (C27911 + C27912) * C258 + (C27913 + C27914) * C253) *
                C51060) *
               C51086) *
              C50951 * C51151 +
          ((((C25025 + C25024) * C257 -
             ((C25023 + C25022) * C251 + (C25021 + C25020) * C256) +
             (C25027 + C25026) * C252 - (C25029 + C25028) * C258 -
             (C25031 + C25030) * C253) *
                C51166 +
            ((C25037 + C25036) * C257 -
             ((C25035 + C25034) * C251 + (C25033 + C25032) * C256) +
             (C25039 + C25038) * C252 - (C25041 + C25040) * C258 -
             (C25043 + C25042) * C253) *
                C51060) *
               C33992 +
           ((C29916 * C257 - (C28665 * C251 + C28666 * C256) + C29919 * C252 -
             (C27912 + C27911) * C258 - (C27914 + C27913) * C253) *
                C51166 +
            ((C26603 + C26604) * C257 - (C25671 * C251 + C25672 * C256) +
             (C26605 + C26606) * C252 -
             (C49954 * C722 + C50867 * C738 + C49961 * C723 + C51138 * C739) *
                 C258 -
             (C49954 * C734 + C50867 * C746 + C49961 * C735 + C51138 * C747) *
                 C253) *
                C51060) *
               C51086) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C603 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C50880) *
                C51166 +
            ((C25020 + C25021) * C603 + (C25022 + C25023) * C50880) * C51060) *
               C33992 +
           (((C28133 + C28134) * C603 + (C28135 + C28136) * C50880) * C51166 +
            C28675 * C51060) *
               C51086) *
              C50951 * C599 -
          ((C25675 * C51060 + C28676 * C51166) * C51086 +
           (((C25035 + C25034) * C50880 + (C25033 + C25032) * C603) * C51060 +
            ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C51166) *
               C33992) *
              C50951 * C600 +
          ((C25481 * C51166 +
            ((C25365 + C25364) * C603 + (C25363 + C25362) * C50880) * C51060) *
               C33992 +
           (C28677 * C51166 +
            ((C25667 + C25668) * C603 + (C25669 + C25670) * C50880) * C51060) *
               C51086) *
              C50951 * C601 -
          ((((C49954 * C3015 + C50867 * C3021 + C49961 * C3016 +
              C51138 * C3022) *
                 C50880 +
             (C49954 * C3009 + C50867 * C3017 + C49961 * C3010 +
              C51138 * C3018) *
                 C603) *
                C51060 +
            ((C25670 + C25669) * C50880 + (C25668 + C25667) * C603) * C51166) *
               C51086 +
           (((C25487 + C25486) * C50880 + (C25485 + C25484) * C603) * C51060 +
            C25488 * C51166) *
               C33992) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C256 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C251 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C257 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C252 +
             (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                 C258 +
             (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                 C253) *
                C51166 +
            ((C25020 + C25021) * C256 + (C25022 + C25023) * C251 -
             (C25024 + C25025) * C257 - (C25026 + C25027) * C252 +
             (C25028 + C25029) * C258 + (C25030 + C25031) * C253) *
                C51060) *
               C33992 +
           (((C28133 + C28134) * C256 + (C28135 + C28136) * C251 -
             (C28137 + C28138) * C257 - (C28139 + C28140) * C252 +
             (C28141 + C28142) * C258 + (C28143 + C28144) * C253) *
                C51166 +
            (C28663 * C256 + C28664 * C251 - C29914 * C257 - C29915 * C252 +
             (C27911 + C27912) * C258 + (C27913 + C27914) * C253) *
                C51060) *
               C51086) *
              C51152 +
          ((((C28138 + C28137) * C257 -
             ((C28136 + C28135) * C251 + (C28134 + C28133) * C256) +
             (C28140 + C28139) * C252 - (C28142 + C28141) * C258 -
             (C28144 + C28143) * C253) *
                C51166 +
            (C29916 * C257 - (C28665 * C251 + C28666 * C256) + C29919 * C252 -
             (C27912 + C27911) * C258 - (C27914 + C27913) * C253) *
                C51060) *
               C33992 +
           (((C28896 + C28897) * C257 -
             ((C28898 + C28899) * C251 + (C28900 + C28901) * C256) +
             (C28902 + C28903) * C252 -
             (C49954 * C854 + C50867 * C859 + C49961 * C853 + C51138 * C858) *
                 C258 -
             (C49954 * C863 + C50867 * C869 + C49961 * C862 + C51138 * C868) *
                 C253) *
                C51166 +
            ((C28904 + C28905) * C257 - (C29102 * C251 + C29103 * C256) +
             (C28906 + C28907) * C252 -
             (C49954 * C969 + C50867 * C977 + C49961 * C970 + C51138 * C978) *
                 C258 -
             (C49954 * C973 + C50867 * C981 + C49961 * C974 + C51138 * C982) *
                 C253) *
                C51060) *
               C51086) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                  C603 +
              (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                  C50880) *
                 C51166 +
             ((C25020 + C25021) * C603 + (C25022 + C25023) * C50880) * C51060) *
                C33992 +
            (((C28133 + C28134) * C603 + (C28135 + C28136) * C50880) * C51166 +
             C28675 * C51060) *
                C51086) *
               C51152 -
           ((C29122 * C51060 +
             ((C28898 + C28899) * C50880 + (C28900 + C28901) * C603) * C51166) *
                C51086 +
            (C28676 * C51060 +
             ((C28136 + C28135) * C50880 + (C28134 + C28133) * C603) * C51166) *
                C33992) *
               C50963) *
              C507 +
          (((C28675 * C51166 + C28677 * C51060) * C33992 +
            (C29123 * C51166 +
             ((C25988 + C25989) * C603 + (C25990 + C25991) * C50880) * C51060) *
                C51086) *
               C50963 -
           ((C25675 * C51060 + C28676 * C51166) * C51086 +
            (((C25035 + C25034) * C50880 + (C25033 + C25032) * C603) * C51060 +
             ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C51166) *
                C33992) *
               C51152) *
              C508 +
          (((C25481 * C51166 +
             ((C25365 + C25364) * C603 + (C25363 + C25362) * C50880) * C51060) *
                C33992 +
            (C28677 * C51166 +
             ((C25667 + C25668) * C603 + (C25669 + C25670) * C50880) * C51060) *
                C51086) *
               C51152 -
           ((((C49954 * C3370 + C50867 * C3374 + C49961 * C3371 +
               C51138 * C3375) *
                  C50880 +
              (C49954 * C3368 + C50867 * C3372 + C49961 * C3369 +
               C51138 * C3373) *
                  C603) *
                 C51060 +
             ((C25991 + C25990) * C50880 + (C25989 + C25988) * C603) * C51166) *
                C51086 +
            (((C25670 + C25669) * C50880 + (C25668 + C25667) * C603) * C51060 +
             C25675 * C51166) *
                C33992) *
               C50963) *
              C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C1174 +
             (C19835 * C136 + C50862 * C146) * C51196 -
             (C19835 * C126 + C50862 * C133) * C1175 -
             (C19835 * C137 + C50862 * C147) * C51181 +
             (C19835 * C127 + C50862 * C134) * C1176 +
             (C19835 * C138 + C50862 * C148) * C1171) *
                C51166 +
            (C20855 + C20856 - C20857 - C20858 + C20859 + C20860) * C51060) *
               C51201 +
           ((C23864 + C23865 - C23866 - C23867 + C23868 + C23869) * C51166 +
            (C23334 + C23335 - C23336 - C23337 + C23338 + C23339) * C51060) *
               C51202 +
           ((C23870 + C23871 - C23872 - C23873 + C23874 + C23875) * C51166 +
            (C23340 + C23341 - C23342 - C23343 + C23344 + C23345) * C51060) *
               C44682) *
              C50951 * C1172 +
          (((C20857 - (C20856 + C20855) + C20858 - C20859 - C20860) * C51166 +
            (C20863 - (C20862 + C20861) + C20864 - C20865 - C20866) * C51060) *
               C51201 +
           ((C23336 - (C23335 + C23334) + C23337 - C23338 - C23339) * C51166 +
            (C32570 - (C32569 + C32568) + C32571 - C32572 - C32573) * C51060) *
               C51202 +
           ((C23342 - (C23341 + C23340) + C23343 - C23344 - C23345) * C51166 +
            (C22441 * C1175 - (C20678 * C51196 + C20677 * C1174) +
             C22442 * C51181 - (C19835 * C3212 + C50862 * C3217) * C1176 -
             (C19835 * C3218 + C50862 * C3221) * C1171) *
                C51060) *
               C44682) *
              C50951 * C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C1280 +
             (C19835 * C136 + C50862 * C146) * C1275 -
             (C19835 * C126 + C50862 * C133) * C1281 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C51166 +
            (C20971 + C20972 - C20973 - C20974) * C51060) *
               C51201 +
           ((C23694 + C23695 - C23696 - C23697) * C51166 + C23714 * C51060) *
               C51202 +
           (C24223 * C51166 + C23715 * C51060) * C44682) *
              C50951 * C51197 +
          (((C20973 - (C20972 + C20971) + C20974) * C51166 +
            (C20977 - (C20976 + C20975) + C20978) * C51060) *
               C51201 +
           (C23716 * C51166 + C32919 * C51060) * C51202 +
           (C23717 * C51166 + (C23496 - (C23497 + C23498) + C23499) * C51060) *
               C44682) *
              C50951 * C51184 +
          ((C20991 * C51166 + C20992 * C51060) * C51201 +
           (C32722 * C51166 + (C21138 + C21137 - C21151 - C21152) * C51060) *
               C51202 +
           ((C23498 + C23497 - C23496 - C23499) * C51166 +
            (C20679 * C1280 + C20680 * C1275 -
             (C19835 * C3368 + C50862 * C3372) * C1281 -
             (C19835 * C3370 + C50862 * C3374) * C50885) *
                C51060) *
               C44682) *
              C50951 * C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C1280 +
              (C19835 * C136 + C50862 * C146) * C1275 -
              (C19835 * C126 + C50862 * C133) * C1281 -
              (C19835 * C137 + C50862 * C147) * C50885) *
                 C51166 +
             (C20971 + C20972 - C20973 - C20974) * C51060) *
                C51201 +
            ((C23694 + C23695 - C23696 - C23697) * C51166 + C23714 * C51060) *
                C51202 +
            (C24223 * C51166 + C23715 * C51060) * C44682) *
               C51152 +
           (((C23696 - (C23695 + C23694) + C23697) * C51166 + C23716 * C51060) *
                C51201 +
            ((C23701 - (C23700 + C23699) + C23702) * C51166 + C23717 * C51060) *
                C51202 +
            ((C24218 - (C24219 + C24220) + C24221) * C51166 +
             (C23706 - (C23707 + C23708) + C23709) * C51060) *
                C44682) *
               C50963) *
              C1172 +
          ((((C20973 - (C20972 + C20971) + C20974) * C51166 +
             (C20977 - (C20976 + C20975) + C20978) * C51060) *
                C51201 +
            (C23716 * C51166 + C32919 * C51060) * C51202 +
            (C23717 * C51166 + (C23496 - (C23497 + C23498) + C23499) * C51060) *
                C44682) *
               C51152 +
           ((C23714 * C51166 + C32722 * C51060) * C51201 +
            (C23715 * C51166 + (C23498 + C23497 - C23496 - C23499) * C51060) *
                C51202 +
            ((C23708 + C23707 - C23706 - C23709) * C51166 +
             (C22710 * C1280 + C22711 * C1275 -
              (C19835 * C3498 + C50862 * C3504) * C1281 -
              (C19835 * C3502 + C50862 * C3510) * C50885) *
                 C51060) *
                C44682) *
               C50963) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C50007 +
              (C19835 * C136 + C50862 * C146) * C51143 -
              (C19835 * C126 + C50862 * C133) * C50000 -
              (C19835 * C137 + C50862 * C147) * C50885) *
                 C51166 +
             (C20203 + C20204 - C20205 - C20206) * C51060) *
                C51201 +
            ((C22862 + C22863 - C22864 - C22865) * C51166 + C24426 * C51060) *
                C51202 +
            C48209 * C44682) *
               C1514 +
           (((C22864 - (C22863 + C22862) + C22865) * C51166 + C24427 * C51060) *
                C51201 +
            ((C22868 - (C22867 + C22866) + C22869) * C51166 + C24428 * C51060) *
                C51202 +
            ((C22895 - (C22896 + C22897) + C22898) * C51166 +
             (C22899 - (C22881 + C22882) + C22900) * C51060) *
                C44682) *
               C50963) *
              C1172 +
          ((((C20205 - (C20204 + C20203) + C20206) * C51166 +
             (C20209 - (C20208 + C20207) + C20210) * C51060) *
                C51201 +
            (C24427 * C51166 + C33602 * C51060) * C51202 +
            (C24428 * C51166 + (C22443 - (C22437 + C22438) + C22444) * C51060) *
                C44682) *
               C1514 +
           ((C24426 * C51166 + C31786 * C51060) * C51201 +
            (C22894 * C51166 + (C22438 + C22437 - C22443 - C22444) * C51060) *
                C51202 +
            ((C22882 + C22881 - C22899 - C22900) * C51166 +
             (C22710 * C50007 + C22711 * C51143 -
              (C19835 * C3498 + C50862 * C3504) * C50000 -
              (C19835 * C3502 + C50862 * C3510) * C50885) *
                 C51060) *
                C44682) *
               C50963) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C603 +
              (C19835 * C136 + C50862 * C146) * C50880) *
                 C51166 +
             (C20307 + C20308) * C51060) *
                C51201 +
            ((C22689 + C22690) * C51166 + C22691 * C51060) * C51202 +
            C48360 * C44682) *
               C1514 -
           (C48462 * C44682 +
            (C22699 * C51060 + (C22693 + C22692) * C51166) * C51202 +
            (C22700 * C51060 + (C22690 + C22689) * C51166) * C51201) *
               C50963) *
              C51197 +
          (((C22691 * C51166 + C22701 * C51060) * C51201 +
            (C22694 * C51166 + C22702 * C51060) * C51202 +
            (C23060 * C51166 + (C22714 + C22715) * C51060) * C44682) *
               C50963 -
           (C48361 * C44682 + (C20462 * C51060 + C22700 * C51166) * C51202 +
            ((C20310 + C20309) * C51060 + (C20308 + C20307) * C51166) *
                C51201) *
               C1514) *
              C51184 +
          (((C20319 * C51166 + C20320 * C51060) * C51201 +
            (C22701 * C51166 + C32031 * C51060) * C51202 +
            (C22702 * C51166 + (C20685 + C20686) * C51060) * C44682) *
               C1514 -
           ((((C19835 * C20753 + C50862 * C20755) * C50880 +
              (C19835 * C20752 + C50862 * C20754) * C603) *
                 C51060 +
             (C22715 + C22714) * C51166) *
                C44682 +
            ((C20686 + C20685) * C51060 + C22707 * C51166) * C51202 +
            (C20461 * C51060 + C20462 * C51166) * C51201) *
               C50963) *
              C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C603 +
              (C19835 * C136 + C50862 * C146) * C50880) *
                 C51166 +
             (C20307 + C20308) * C51060) *
                C51201 +
            ((C22689 + C22690) * C51166 + C22691 * C51060) * C51202 +
            C48360 * C44682) *
               C51198 -
           (C48462 * C44682 +
            (C22699 * C51060 + (C22693 + C22692) * C51166) * C51202 +
            (C22700 * C51060 + (C22690 + C22689) * C51166) * C51201) *
               C51187 +
           (C48360 * C51201 + (C40013 * C51166 + C23060 * C51060) * C51202 +
            ((C23186 + C23187) * C51166 + (C23072 + C23073) * C51060) *
                C44682) *
               C1746) *
              C1172 +
          (((C22691 * C51166 + C22701 * C51060) * C51201 +
            (C22694 * C51166 + C22702 * C51060) * C51202 +
            (C23060 * C51166 + (C22714 + C22715) * C51060) * C44682) *
               C51187 -
           (C48361 * C44682 + (C20462 * C51060 + C22700 * C51166) * C51202 +
            ((C20310 + C20309) * C51060 + (C20308 + C20307) * C51166) *
                C51201) *
               C51198 -
           ((((C19835 * C23051 + C50862 * C23053) * C50880 +
              (C19835 * C23050 + C50862 * C23052) * C603) *
                 C51060 +
             (C23073 + C23072) * C51166) *
                C44682 +
            ((C22715 + C22714) * C51060 + C23057 * C51166) * C51202 +
            C48361 * C51201) *
               C1746) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C50007 +
             (C19835 * C136 + C50862 * C146) * C51143 -
             (C19835 * C126 + C50862 * C133) * C50000 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C51166 +
            (C20203 + C20204 - C20205 - C20206) * C51060) *
               C51201 +
           ((C22862 + C22863 - C22864 - C22865) * C51166 + C24426 * C51060) *
               C51202 +
           (C22901 * C51166 + C22894 * C51060) * C44682) *
              C50951 * C507 +
          (((C20205 - (C20204 + C20203) + C20206) * C51166 +
            (C20209 - (C20208 + C20207) + C20210) * C51060) *
               C51201 +
           (C24427 * C51166 + C33602 * C51060) * C51202 +
           (C24428 * C51166 + (C22443 - (C22437 + C22438) + C22444) * C51060) *
               C44682) *
              C50951 * C508 +
          ((C20235 * C51166 + C20236 * C51060) * C51201 +
           (C31786 * C51166 + (C21619 + C21618 - C21617 - C21620) * C51060) *
               C51202 +
           ((C22438 + C22437 - C22443 - C22444) * C51166 +
            (C20679 * C50007 + C20680 * C51143 -
             (C19835 * C3368 + C50862 * C3372) * C50000 -
             (C19835 * C3370 + C50862 * C3374) * C50885) *
                C51060) *
               C44682) *
              C50951 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C121 +
            (C19835 * C136 + C50862 * C146) * C109 -
            (C19835 * C126 + C50862 * C133) * C122 -
            (C19835 * C137 + C50862 * C147) * C110 +
            (C19835 * C127 + C50862 * C134) * C123 +
            (C19835 * C138 + C50862 * C148) * C111 -
            (C19835 * C128 + C50862 * C135) * C124 -
            (C19835 * C139 + C50862 * C149) * C112) *
               C51166 +
           (C19971 * C121 + C19972 * C109 - C19973 * C122 - C19974 * C110 +
            C19975 * C123 + C19976 * C111 -
            (C19835 * C261 + C50862 * C267) * C124 -
            (C19835 * C269 + C50862 * C277) * C112) *
               C51060) *
              C51201 +
          ((C22261 * C121 + C22262 * C109 - C22263 * C122 - C22264 * C110 +
            C22265 * C123 + C22266 * C111 -
            (C19835 * C385 + C50862 * C391) * C124 -
            (C19835 * C393 + C50862 * C401) * C112) *
               C51166 +
           (C20450 * C121 + C20449 * C109 - C21141 * C122 - C21142 * C110 +
            C22079 * C123 + C22080 * C111 -
            (C19835 * C721 + C50862 * C729) * C124 -
            (C19835 * C733 + C50862 * C745) * C112) *
               C51060) *
              C51202 +
          ((C22267 * C121 + C22268 * C109 - C22269 * C122 - C22270 * C110 +
            C22271 * C123 + C22272 * C111 -
            (C19835 * C854 + C50862 * C859) * C124 -
            (C19835 * C863 + C50862 * C869) * C112) *
               C51166 +
           (C20675 * C121 + C20676 * C109 - C22081 * C122 - C22082 * C110 +
            C22083 * C123 + C22084 * C111 -
            (C19835 * C969 + C50862 * C977) * C124 -
            (C19835 * C973 + C50862 * C981) * C112) *
               C51060) *
              C44682) *
         C50951 * C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C50007 +
             (C19835 * C136 + C50862 * C146) * C51143 -
             (C19835 * C126 + C50862 * C133) * C50000 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C51166 +
            (C20203 + C20204 - C20205 - C20206) * C51060) *
               C51201 +
           ((C22862 + C22863 - C22864 - C22865) * C51166 + C24426 * C51060) *
               C51202 +
           C48209 * C44682) *
              C848 +
          (((C22864 - (C22863 + C22862) + C22865) * C51166 + C24427 * C51060) *
               C51201 +
           ((C22868 - (C22867 + C22866) + C22869) * C51166 + C24428 * C51060) *
               C51202 +
           ((C22895 - (C22896 + C22897) + C22898) * C51166 +
            (C22899 - (C22881 + C22882) + C22900) * C51060) *
               C44682) *
              C849 +
          (C48209 * C51201 +
           (C39910 * C51166 + (C22882 + C22881 - C22899 - C22900) * C51060) *
               C51202 +
           ((C39904 + C39903 - C39911 - C39912) * C51166 +
            (C23068 * C50007 + C23069 * C51143 -
             (C19835 * C6202 + C50862 * C6206) * C50000 -
             (C19835 * C6204 + C50862 * C6208) * C50885) *
                C51060) *
               C44682) *
              C850) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C51166 +
            (C20307 + C20308) * C51060) *
               C51201 +
           ((C22689 + C22690) * C51166 + C22691 * C51060) * C51202 +
           (C23055 * C51166 + C22694 * C51060) * C44682) *
              C50951 * C599 -
          ((C22707 * C51060 + C22699 * C51166) * C44682 +
           (C20462 * C51060 + C22700 * C51166) * C51202 +
           ((C20310 + C20309) * C51060 + (C20308 + C20307) * C51166) * C51201) *
              C50951 * C600 +
          ((C20319 * C51166 + C20320 * C51060) * C51201 +
           (C22701 * C51166 + C32031 * C51060) * C51202 +
           (C22702 * C51166 + (C20685 + C20686) * C51060) * C44682) *
              C50951 * C601 -
          ((((C19835 * C20659 + C50862 * C20661) * C50880 +
             (C19835 * C20658 + C50862 * C20660) * C603) *
                C51060 +
            (C20686 + C20685) * C51166) *
               C44682 +
           ((C20460 + C20459) * C51060 + C20461 * C51166) * C51202 +
           (C20321 * C51060 + C20322 * C51166) * C51201) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C256 +
             (C19835 * C136 + C50862 * C146) * C251 -
             (C19835 * C126 + C50862 * C133) * C257 -
             (C19835 * C137 + C50862 * C147) * C252 +
             (C19835 * C127 + C50862 * C134) * C258 +
             (C19835 * C138 + C50862 * C148) * C253) *
                C51166 +
            (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C51060) *
               C51201 +
           ((C22273 + C22274 - C22275 - C22276 + C22277 + C22278) * C51166 +
            (C22061 + C22062 - C22063 - C22064 + C22085 + C22086) * C51060) *
               C51202 +
           ((C22279 + C22280 - C22281 - C22282 + C22283 + C22284) * C51166 +
            (C22069 + C22070 - C22087 - C22088 + C22089 + C22090) * C51060) *
               C44682) *
              C50951 * C51151 +
          (((C19991 - (C19990 + C19989) + C19992 - C19993 - C19994) * C51166 +
            (C19997 - (C19996 + C19995) + C19998 - C19999 - C20000) * C51060) *
               C51201 +
           ((C22063 - (C22062 + C22061) + C22064 - C22085 - C22086) * C51166 +
            (C31482 - (C31481 + C31480) + C31483 - C31490 - C31491) * C51060) *
               C51202 +
           ((C22087 - (C22070 + C22069) + C22088 - C22089 - C22090) * C51166 +
            (C22441 * C257 - (C20678 * C251 + C20677 * C256) + C22442 * C252 -
             (C19835 * C3212 + C50862 * C3217) * C258 -
             (C19835 * C3218 + C50862 * C3221) * C253) *
                C51060) *
               C44682) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C603 +
              (C19835 * C136 + C50862 * C146) * C50880) *
                 C51166 +
             (C20307 + C20308) * C51060) *
                C51201 +
            ((C22689 + C22690) * C51166 + C22691 * C51060) * C51202 +
            C48360 * C44682) *
               C848 -
           ((C23057 * C51060 + C23177 * C51166) * C44682 +
            (C22699 * C51060 + (C22693 + C22692) * C51166) * C51202 +
            (C22700 * C51060 + (C22690 + C22689) * C51166) * C51201) *
               C849 +
           (C48360 * C51201 + (C40013 * C51166 + C23060 * C51060) * C51202 +
            ((C23186 + C23187) * C51166 + (C23072 + C23073) * C51060) *
                C44682) *
               C850) *
              C51151 +
          (((C22691 * C51166 + C22701 * C51060) * C51201 +
            (C22694 * C51166 + C22702 * C51060) * C51202 +
            (C23060 * C51166 + (C22714 + C22715) * C51060) * C44682) *
               C849 -
           (C48361 * C44682 + (C20462 * C51060 + C22700 * C51166) * C51202 +
            ((C20310 + C20309) * C51060 + (C20308 + C20307) * C51166) *
                C51201) *
               C848 -
           ((((C19835 * C23051 + C50862 * C23053) * C50880 +
              (C19835 * C23050 + C50862 * C23052) * C603) *
                 C51060 +
             (C23073 + C23072) * C51166) *
                C44682 +
            ((C22715 + C22714) * C51060 + C23057 * C51166) * C51202 +
            C48361 * C51201) *
               C850) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C603 +
              (C19835 * C136 + C50862 * C146) * C50880) *
                 C51166 +
             (C20307 + C20308) * C51060) *
                C51201 +
            ((C22689 + C22690) * C51166 + C22691 * C51060) * C51202 +
            (C23055 * C51166 + C22694 * C51060) * C44682) *
               C51152 -
           ((C23057 * C51060 + C23177 * C51166) * C44682 +
            (C22699 * C51060 + (C22693 + C22692) * C51166) * C51202 +
            (C22700 * C51060 + (C22690 + C22689) * C51166) * C51201) *
               C50963) *
              C507 +
          (((C22691 * C51166 + C22701 * C51060) * C51201 +
            (C22694 * C51166 + C22702 * C51060) * C51202 +
            (C23060 * C51166 + (C22714 + C22715) * C51060) * C44682) *
               C50963 -
           ((C22707 * C51060 + C22699 * C51166) * C44682 +
            (C20462 * C51060 + C22700 * C51166) * C51202 +
            ((C20310 + C20309) * C51060 + (C20308 + C20307) * C51166) *
                C51201) *
               C51152) *
              C508 +
          (((C20319 * C51166 + C20320 * C51060) * C51201 +
            (C22701 * C51166 + C32031 * C51060) * C51202 +
            (C22702 * C51166 + (C20685 + C20686) * C51060) * C44682) *
               C51152 -
           ((((C19835 * C20753 + C50862 * C20755) * C50880 +
              (C19835 * C20752 + C50862 * C20754) * C603) *
                 C51060 +
             (C22715 + C22714) * C51166) *
                C44682 +
            ((C20686 + C20685) * C51060 + C22707 * C51166) * C51202 +
            (C20461 * C51060 + C20462 * C51166) * C51201) *
               C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C256 +
             (C19835 * C136 + C50862 * C146) * C251 -
             (C19835 * C126 + C50862 * C133) * C257 -
             (C19835 * C137 + C50862 * C147) * C252 +
             (C19835 * C127 + C50862 * C134) * C258 +
             (C19835 * C138 + C50862 * C148) * C253) *
                C51166 +
            (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C51060) *
               C51201 +
           ((C22273 + C22274 - C22275 - C22276 + C22277 + C22278) * C51166 +
            (C22061 + C22062 - C22063 - C22064 + C22085 + C22086) * C51060) *
               C51202 +
           ((C22279 + C22280 - C22281 - C22282 + C22283 + C22284) * C51166 +
            (C22069 + C22070 - C22087 - C22088 + C22089 + C22090) * C51060) *
               C44682) *
              C51152 +
          (((C22275 - (C22274 + C22273) + C22276 - C22277 - C22278) * C51166 +
            (C22063 - (C22062 + C22061) + C22064 - C22085 - C22086) * C51060) *
               C51201 +
           ((C22281 - (C22280 + C22279) + C22282 - C22283 - C22284) * C51166 +
            (C22087 - (C22070 + C22069) + C22088 - C22089 - C22090) * C51060) *
               C51202 +
           ((C39529 - (C39528 + C39527) + C39530 - C39537 - C39538) * C51166 +
            (C22891 * C257 - (C22708 * C251 + C22709 * C256) + C22892 * C252 -
             (C19835 * C6842 + C50862 * C6843) * C258 -
             (C19835 * C6844 + C50862 * C6845) * C253) *
                C51060) *
               C44682) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C51166 +
            (C20307 + C20308) * C51060) *
               C51201 +
           ((C22689 + C22690) * C51166 + C22691 * C51060) * C51202 +
           C48360 * C44682) *
              C1051 -
          (C48462 * C44682 +
           (C22699 * C51060 + (C22693 + C22692) * C51166) * C51202 +
           (C22700 * C51060 + (C22690 + C22689) * C51166) * C51201) *
              C1052 +
          (C48360 * C51201 + (C40013 * C51166 + C23060 * C51060) * C51202 +
           ((C23186 + C23187) * C51166 + (C23072 + C23073) * C51060) * C44682) *
              C1053 -
          ((((C19835 * C23172 + C50862 * C23174) * C50880 +
             (C19835 * C23171 + C50862 * C23173) * C603) *
                C51060 +
            (C40097 + C40096) * C51166) *
               C44682 +
           ((C23073 + C23072) * C51060 + C40087 * C51166) * C51202 +
           C48462 * C51201) *
              C1054) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C1174 +
             (C19835 * C136 + C50862 * C146) * C51196 -
             (C19835 * C126 + C50862 * C133) * C1175 -
             (C19835 * C137 + C50862 * C147) * C51181 +
             (C19835 * C127 + C50862 * C134) * C1176 +
             (C19835 * C138 + C50862 * C148) * C1171) *
                C51166 +
            (C20855 + C20856 - C20857 - C20858 + C20859 + C20860) * C51060) *
               C51201 +
           ((C23864 + C23865 - C23866 - C23867 + C23868 + C23869) * C51166 +
            (C23334 + C23335 - C23336 - C23337 + C23338 + C23339) * C51060) *
               C51202 +
           ((C23870 + C23871 - C23872 - C23873 + C23874 + C23875) * C51166 +
            (C23340 + C23341 - C23342 - C23343 + C23344 + C23345) * C51060) *
               C44682) *
              C1514 +
          (((C23866 - (C23865 + C23864) + C23867 - C23868 - C23869) * C51166 +
            (C23336 - (C23335 + C23334) + C23337 - C23338 - C23339) * C51060) *
               C51201 +
           ((C23872 - (C23871 + C23870) + C23873 - C23874 - C23875) * C51166 +
            (C23342 - (C23341 + C23340) + C23343 - C23344 - C23345) * C51060) *
               C51202 +
           ((C40524 - (C40523 + C40522) + C40525 - C40526 - C40527) * C51166 +
            (C22891 * C1175 - (C22708 * C51196 + C22709 * C1174) +
             C22892 * C51181 - (C19835 * C6842 + C50862 * C6843) * C1176 -
             (C19835 * C6844 + C50862 * C6845) * C1171) *
                C51060) *
               C44682) *
              C50963) *
         C50925) /
        (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C1280 +
              (C19835 * C136 + C50862 * C146) * C1275 -
              (C19835 * C126 + C50862 * C133) * C1281 -
              (C19835 * C137 + C50862 * C147) * C50885) *
                 C51166 +
             (C20971 + C20972 - C20973 - C20974) * C51060) *
                C51201 +
            ((C23694 + C23695 - C23696 - C23697) * C51166 + C23714 * C51060) *
                C51202 +
            (C24223 * C51166 + C23715 * C51060) * C44682) *
               C1514 +
           (((C23696 - (C23695 + C23694) + C23697) * C51166 + C23716 * C51060) *
                C51201 +
            ((C23701 - (C23700 + C23699) + C23702) * C51166 + C23717 * C51060) *
                C51202 +
            ((C24218 - (C24219 + C24220) + C24221) * C51166 +
             (C23706 - (C23707 + C23708) + C23709) * C51060) *
                C44682) *
               C50963) *
              C51151 +
          ((((C20973 - (C20972 + C20971) + C20974) * C51166 +
             (C20977 - (C20976 + C20975) + C20978) * C51060) *
                C51201 +
            (C23716 * C51166 + C32919 * C51060) * C51202 +
            (C23717 * C51166 + (C23496 - (C23497 + C23498) + C23499) * C51060) *
                C44682) *
               C1514 +
           ((C23714 * C51166 + C32722 * C51060) * C51201 +
            (C23715 * C51166 + (C23498 + C23497 - C23496 - C23499) * C51060) *
                C51202 +
            ((C23708 + C23707 - C23706 - C23709) * C51166 +
             (C22710 * C1280 + C22711 * C1275 -
              (C19835 * C3498 + C50862 * C3504) * C1281 -
              (C19835 * C3502 + C50862 * C3510) * C50885) *
                 C51060) *
                C44682) *
               C50963) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C1280 +
             (C19835 * C136 + C50862 * C146) * C1275 -
             (C19835 * C126 + C50862 * C133) * C1281 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C51166 +
            (C20971 + C20972 - C20973 - C20974) * C51060) *
               C51201 +
           ((C23694 + C23695 - C23696 - C23697) * C51166 + C23714 * C51060) *
               C51202 +
           C49437 * C44682) *
              C51198 +
          (((C23696 - (C23695 + C23694) + C23697) * C51166 + C23716 * C51060) *
               C51201 +
           ((C23701 - (C23700 + C23699) + C23702) * C51166 + C23717 * C51060) *
               C51202 +
           ((C24218 - (C24219 + C24220) + C24221) * C51166 +
            (C23706 - (C23707 + C23708) + C23709) * C51060) *
               C44682) *
              C51187 +
          (C49437 * C51201 +
           (C40763 * C51166 + (C23708 + C23707 - C23706 - C23709) * C51060) *
               C51202 +
           ((C40760 + C40759 - C40758 - C40761) * C51166 +
            (C23068 * C1280 + C23069 * C1275 -
             (C19835 * C6202 + C50862 * C6206) * C1281 -
             (C19835 * C6204 + C50862 * C6208) * C50885) *
                C51060) *
               C44682) *
              C1746) *
         C50925) /
        (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C121 +
            (C19835 * C136 + C50862 * C146) * C109 -
            (C19835 * C126 + C50862 * C133) * C122 -
            (C19835 * C137 + C50862 * C147) * C110 +
            (C19835 * C127 + C50862 * C134) * C123 +
            (C19835 * C138 + C50862 * C148) * C111 -
            (C19835 * C128 + C50862 * C135) * C124 -
            (C19835 * C139 + C50862 * C149) * C112) *
               C51166 +
           (C19971 * C121 + C19972 * C109 - C19973 * C122 - C19974 * C110 +
            C19975 * C123 + C19976 * C111 -
            (C19835 * C261 + C50862 * C267) * C124 -
            (C19835 * C269 + C50862 * C277) * C112) *
               C51060) *
              C51201 +
          ((C22261 * C121 + C22262 * C109 - C22263 * C122 - C22264 * C110 +
            C22265 * C123 + C22266 * C111 -
            (C19835 * C385 + C50862 * C391) * C124 -
            (C19835 * C393 + C50862 * C401) * C112) *
               C51166 +
           (C20450 * C121 + C20449 * C109 - C21141 * C122 - C21142 * C110 +
            C22079 * C123 + C22080 * C111 -
            (C19835 * C721 + C50862 * C729) * C124 -
            (C19835 * C733 + C50862 * C745) * C112) *
               C51060) *
              C51202 +
          ((C22267 * C121 + C22268 * C109 - C22269 * C122 - C22270 * C110 +
            C22271 * C123 + C22272 * C111 -
            (C19835 * C854 + C50862 * C859) * C124 -
            (C19835 * C863 + C50862 * C869) * C112) *
               C51166 +
           (C20675 * C121 + C20676 * C109 - C22081 * C122 - C22082 * C110 +
            C22083 * C123 + C22084 * C111 -
            (C19835 * C969 + C50862 * C977) * C124 -
            (C19835 * C973 + C50862 * C981) * C112) *
               C51060) *
              C44682) *
         C50951 * C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C50007 +
             (C19835 * C136 + C50862 * C146) * C51143 -
             (C19835 * C126 + C50862 * C133) * C50000 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C51166 +
            (C20203 + C20204 - C20205 - C20206) * C51060) *
               C51201 +
           ((C22862 + C22863 - C22864 - C22865) * C51166 + C24426 * C51060) *
               C51202 +
           (C22901 * C51166 + C22894 * C51060) * C44682) *
              C50951 * C507 +
          (((C20205 - (C20204 + C20203) + C20206) * C51166 +
            (C20209 - (C20208 + C20207) + C20210) * C51060) *
               C51201 +
           (C24427 * C51166 + C33602 * C51060) * C51202 +
           (C24428 * C51166 + (C22443 - (C22437 + C22438) + C22444) * C51060) *
               C44682) *
              C50951 * C508 +
          ((C20235 * C51166 + C20236 * C51060) * C51201 +
           (C31786 * C51166 + (C21619 + C21618 - C21617 - C21620) * C51060) *
               C51202 +
           ((C22438 + C22437 - C22443 - C22444) * C51166 +
            (C20679 * C50007 + C20680 * C51143 -
             (C19835 * C3368 + C50862 * C3372) * C50000 -
             (C19835 * C3370 + C50862 * C3374) * C50885) *
                C51060) *
               C44682) *
              C50951 * C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C256 +
             (C19835 * C136 + C50862 * C146) * C251 -
             (C19835 * C126 + C50862 * C133) * C257 -
             (C19835 * C137 + C50862 * C147) * C252 +
             (C19835 * C127 + C50862 * C134) * C258 +
             (C19835 * C138 + C50862 * C148) * C253) *
                C51166 +
            (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C51060) *
               C51201 +
           ((C22273 + C22274 - C22275 - C22276 + C22277 + C22278) * C51166 +
            (C22061 + C22062 - C22063 - C22064 + C22085 + C22086) * C51060) *
               C51202 +
           ((C22279 + C22280 - C22281 - C22282 + C22283 + C22284) * C51166 +
            (C22069 + C22070 - C22087 - C22088 + C22089 + C22090) * C51060) *
               C44682) *
              C50951 * C51151 +
          (((C19991 - (C19990 + C19989) + C19992 - C19993 - C19994) * C51166 +
            (C19997 - (C19996 + C19995) + C19998 - C19999 - C20000) * C51060) *
               C51201 +
           ((C22063 - (C22062 + C22061) + C22064 - C22085 - C22086) * C51166 +
            (C31482 - (C31481 + C31480) + C31483 - C31490 - C31491) * C51060) *
               C51202 +
           ((C22087 - (C22070 + C22069) + C22088 - C22089 - C22090) * C51166 +
            (C22441 * C257 - (C20678 * C251 + C20677 * C256) + C22442 * C252 -
             (C19835 * C3212 + C50862 * C3217) * C258 -
             (C19835 * C3218 + C50862 * C3221) * C253) *
                C51060) *
               C44682) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C51166 +
            (C20307 + C20308) * C51060) *
               C51201 +
           ((C22689 + C22690) * C51166 + C22691 * C51060) * C51202 +
           (C23055 * C51166 + C22694 * C51060) * C44682) *
              C50951 * C599 -
          ((C22707 * C51060 + C22699 * C51166) * C44682 +
           (C20462 * C51060 + C22700 * C51166) * C51202 +
           ((C20310 + C20309) * C51060 + (C20308 + C20307) * C51166) * C51201) *
              C50951 * C600 +
          ((C20319 * C51166 + C20320 * C51060) * C51201 +
           (C22701 * C51166 + C32031 * C51060) * C51202 +
           (C22702 * C51166 + (C20685 + C20686) * C51060) * C44682) *
              C50951 * C601 -
          ((((C19835 * C20659 + C50862 * C20661) * C50880 +
             (C19835 * C20658 + C50862 * C20660) * C603) *
                C51060 +
            (C20686 + C20685) * C51166) *
               C44682 +
           ((C20460 + C20459) * C51060 + C20461 * C51166) * C51202 +
           (C20321 * C51060 + C20322 * C51166) * C51201) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C256 +
             (C19835 * C136 + C50862 * C146) * C251 -
             (C19835 * C126 + C50862 * C133) * C257 -
             (C19835 * C137 + C50862 * C147) * C252 +
             (C19835 * C127 + C50862 * C134) * C258 +
             (C19835 * C138 + C50862 * C148) * C253) *
                C51166 +
            (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C51060) *
               C51201 +
           ((C22273 + C22274 - C22275 - C22276 + C22277 + C22278) * C51166 +
            (C22061 + C22062 - C22063 - C22064 + C22085 + C22086) * C51060) *
               C51202 +
           ((C22279 + C22280 - C22281 - C22282 + C22283 + C22284) * C51166 +
            (C22069 + C22070 - C22087 - C22088 + C22089 + C22090) * C51060) *
               C44682) *
              C51152 +
          (((C22275 - (C22274 + C22273) + C22276 - C22277 - C22278) * C51166 +
            (C22063 - (C22062 + C22061) + C22064 - C22085 - C22086) * C51060) *
               C51201 +
           ((C22281 - (C22280 + C22279) + C22282 - C22283 - C22284) * C51166 +
            (C22087 - (C22070 + C22069) + C22088 - C22089 - C22090) * C51060) *
               C51202 +
           ((C39529 - (C39528 + C39527) + C39530 - C39537 - C39538) * C51166 +
            (C22891 * C257 - (C22708 * C251 + C22709 * C256) + C22892 * C252 -
             (C19835 * C6842 + C50862 * C6843) * C258 -
             (C19835 * C6844 + C50862 * C6845) * C253) *
                C51060) *
               C44682) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C603 +
              (C19835 * C136 + C50862 * C146) * C50880) *
                 C51166 +
             (C20307 + C20308) * C51060) *
                C51201 +
            ((C22689 + C22690) * C51166 + C22691 * C51060) * C51202 +
            (C23055 * C51166 + C22694 * C51060) * C44682) *
               C51152 -
           ((C23057 * C51060 + C23177 * C51166) * C44682 +
            (C22699 * C51060 + (C22693 + C22692) * C51166) * C51202 +
            (C22700 * C51060 + (C22690 + C22689) * C51166) * C51201) *
               C50963) *
              C507 +
          (((C22691 * C51166 + C22701 * C51060) * C51201 +
            (C22694 * C51166 + C22702 * C51060) * C51202 +
            (C23060 * C51166 + (C22714 + C22715) * C51060) * C44682) *
               C50963 -
           ((C22707 * C51060 + C22699 * C51166) * C44682 +
            (C20462 * C51060 + C22700 * C51166) * C51202 +
            ((C20310 + C20309) * C51060 + (C20308 + C20307) * C51166) *
                C51201) *
               C51152) *
              C508 +
          (((C20319 * C51166 + C20320 * C51060) * C51201 +
            (C22701 * C51166 + C32031 * C51060) * C51202 +
            (C22702 * C51166 + (C20685 + C20686) * C51060) * C44682) *
               C51152 -
           ((((C19835 * C20753 + C50862 * C20755) * C50880 +
              (C19835 * C20752 + C50862 * C20754) * C603) *
                 C51060 +
             (C22715 + C22714) * C51166) *
                C44682 +
            ((C20686 + C20685) * C51060 + C22707 * C51166) * C51202 +
            (C20461 * C51060 + C20462 * C51166) * C51201) *
               C50963) *
              C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C1174 +
             (C19835 * C136 + C50862 * C146) * C51196 -
             (C19835 * C126 + C50862 * C133) * C1175 -
             (C19835 * C137 + C50862 * C147) * C51181 +
             (C19835 * C127 + C50862 * C134) * C1176 +
             (C19835 * C138 + C50862 * C148) * C1171) *
                C2173 +
            (C20855 + C20856 - C20857 - C20858 + C20859 + C20860) * C2174 +
            (C20861 + C20862 - C20863 - C20864 + C20865 + C20866) * C2175) *
               C33992 +
           ((C23864 + C23865 - C23866 - C23867 + C23868 + C23869) * C2173 +
            (C23334 + C23335 - C23336 - C23337 + C23338 + C23339) * C2174 +
            (C32568 + C32569 - C32570 - C32571 + C32572 + C32573) * C2175) *
               C51086) *
              C50951 * C1172 +
          (((C20857 - (C20856 + C20855) + C20858 - C20859 - C20860) * C2173 +
            (C20863 - (C20862 + C20861) + C20864 - C20865 - C20866) * C2174 +
            (C20869 - (C20868 + C20867) + C20870 - C20871 - C20872) * C2175) *
               C33992 +
           ((C23336 - (C23335 + C23334) + C23337 - C23338 - C23339) * C2173 +
            (C32570 - (C32569 + C32568) + C32571 - C32572 - C32573) * C2174 +
            (C21145 * C1175 - (C20445 * C51196 + C20446 * C1174) +
             C21146 * C51181 - (C19835 * C4007 + C50862 * C4008) * C1176 -
             (C19835 * C4009 + C50862 * C4010) * C1171) *
                C2175) *
               C51086) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C1174 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C51196 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C1175 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C51181 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C1176 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C1171) *
               C51010 * C33992 +
           ((C34323 + C34324 + C34325) * C1174 +
            (C34326 + C34327 + C34328) * C51196 -
            (C34329 + C34330 + C34331) * C1175 -
            (C34332 + C34333 + C34334) * C51181 +
            (C34335 + C34336 + C34337) * C1176 +
            (C34338 + C34339 + C34340) * C1171) *
               C51010 * C51086) *
              C50951 * C1172 +
          (((C17245 + C17244 + C17243) * C1175 -
            ((C17242 + C17241 + C17240) * C51196 +
             (C17239 + C17238 + C17237) * C1174) +
            (C17248 + C17247 + C17246) * C51181 -
            (C17251 + C17250 + C17249) * C1176 -
            (C17254 + C17253 + C17252) * C1171) *
               C51010 * C33992 +
           ((C18787 + C18788 + C18789) * C1175 -
            ((C17869 + C17870 + C17871) * C51196 +
             (C17872 + C17873 + C17874) * C1174) +
            (C18790 + C18791 + C18792) * C51181 -
            (C17053 * C1412 + C17048 * C1413 + C17052 * C721 + C17047 * C729 +
             C17051 * C720 + C17046 * C728) *
                C1176 -
            (C17053 * C1414 + C17048 * C1415 + C17052 * C733 + C17047 * C745 +
             C17051 * C732 + C17046 * C744) *
                C1171) *
               C51010 * C51086) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C1174 +
            (C19835 * C136 + C50862 * C146) * C51196 -
            (C19835 * C126 + C50862 * C133) * C1175 -
            (C19835 * C137 + C50862 * C147) * C51181 +
            (C19835 * C127 + C50862 * C134) * C1176 +
            (C19835 * C138 + C50862 * C148) * C1171) *
               C51010 * C39326 +
           (C23864 + C23865 - C23866 - C23867 + C23868 + C23869) * C51010 *
               C39327 +
           (C23870 + C23871 - C23872 - C23873 + C23874 + C23875) * C51010 *
               C39328 +
           (C22889 * C1174 + C22888 * C51196 - C22887 * C1175 -
            C22890 * C51181 + C39535 * C1176 + C39536 * C1171) *
               C51010 * C39329) *
              C50951 * C1172 +
          ((C20857 - (C20856 + C20855) + C20858 - C20859 - C20860) * C51010 *
               C39326 +
           (C23336 - (C23335 + C23334) + C23337 - C23338 - C23339) * C51010 *
               C39327 +
           (C23342 - (C23341 + C23340) + C23343 - C23344 - C23345) * C51010 *
               C39328 +
           (C22891 * C1175 - (C22708 * C51196 + C22709 * C1174) +
            C22892 * C51181 - (C19835 * C6842 + C50862 * C6843) * C1176 -
            (C19835 * C6844 + C50862 * C6845) * C1171) *
               C51010 * C39329) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C1280 +
             (C19835 * C136 + C50862 * C146) * C1275 -
             (C19835 * C126 + C50862 * C133) * C1281 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C2173 +
            (C20971 + C20972 - C20973 - C20974) * C2174 + C20991 * C2175) *
               C33992 +
           ((C23694 + C23695 - C23696 - C23697) * C2173 + C23714 * C2174 +
            C32722 * C2175) *
               C51086) *
              C50951 * C51197 +
          (((C20973 - (C20972 + C20971) + C20974) * C2173 +
            (C20977 - (C20976 + C20975) + C20978) * C2174 +
            (C20981 - (C20980 + C20979) + C20982) * C2175) *
               C33992 +
           (C23716 * C2173 + C32919 * C2174 +
            (C21151 - (C21137 + C21138) + C21152) * C2175) *
               C51086) *
              C50951 * C51184 +
          ((C20991 * C2173 + C20992 * C2174 +
            (C20985 + C20984 - C20983 - C20986) * C2175) *
               C33992 +
           (C32722 * C2173 + (C21138 + C21137 - C21151 - C21152) * C2174 +
            (C20451 * C1280 + C20452 * C1275 -
             (C19835 * C3009 + C50862 * C3017) * C1281 -
             (C19835 * C3015 + C50862 * C3021) * C50885) *
                C2175) *
               C51086) *
              C50951 * C1279)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C1280 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C1275 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C1281 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C50885) *
               C51010 * C33992 +
           ((C34323 + C34324 + C34325) * C1280 +
            (C34326 + C34327 + C34328) * C1275 -
            (C34329 + C34330 + C34331) * C1281 -
            (C34332 + C34333 + C34334) * C50885) *
               C51010 * C51086) *
              C50951 * C51197 +
          (((C17245 + C17244 + C17243) * C1281 -
            ((C17242 + C17241 + C17240) * C1275 +
             (C17239 + C17238 + C17237) * C1280) +
            (C17248 + C17247 + C17246) * C50885) *
               C51010 * C33992 +
           ((C18787 + C18788 + C18789) * C1281 -
            ((C17869 + C17870 + C17871) * C1275 +
             (C17872 + C17873 + C17874) * C1280) +
            (C18790 + C18791 + C18792) * C50885) *
               C51010 * C51086) *
              C50951 * C51184 +
          (((C17579 + C17578 + C17577) * C1280 +
            (C17576 + C17575 + C17574) * C1275 -
            (C17573 + C17572 + C17571) * C1281 -
            (C17582 + C17581 + C17580) * C50885) *
               C51010 * C33992 +
           ((C17875 + C17876 + C17877) * C1280 +
            (C17878 + C17879 + C17880) * C1275 -
            (C17053 * C722 + C17048 * C738 + C17052 * C723 + C17047 * C739 +
             C17051 * C724 + C17046 * C740) *
                C1281 -
            (C17053 * C734 + C17048 * C746 + C17052 * C735 + C17047 * C747 +
             C17051 * C736 + C17046 * C748) *
                C50885) *
               C51010 * C51086) *
              C50951 * C1279)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C1280 +
            (C19835 * C136 + C50862 * C146) * C1275 -
            (C19835 * C126 + C50862 * C133) * C1281 -
            (C19835 * C137 + C50862 * C147) * C50885) *
               C51010 * C39326 +
           (C23694 + C23695 - C23696 - C23697) * C51010 * C39327 +
           C24223 * C51010 * C39328 +
           (C24220 + C24219 - C24218 - C24221) * C51010 * C39329) *
              C50951 * C51197 +
          ((C20973 - (C20972 + C20971) + C20974) * C51010 * C39326 +
           C23716 * C51010 * C39327 + C23717 * C51010 * C39328 +
           (C23706 - (C23707 + C23708) + C23709) * C51010 * C39329) *
              C50951 * C51184 +
          (C20991 * C51010 * C39326 + C32722 * C51010 * C39327 +
           (C23498 + C23497 - C23496 - C23499) * C51010 * C39328 +
           (C22710 * C1280 + C22711 * C1275 -
            (C19835 * C3498 + C50862 * C3504) * C1281 -
            (C19835 * C3502 + C50862 * C3510) * C50885) *
               C51010 * C39329) *
              C50951 * C1279)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C1280 +
              (C19835 * C136 + C50862 * C146) * C1275 -
              (C19835 * C126 + C50862 * C133) * C1281 -
              (C19835 * C137 + C50862 * C147) * C50885) *
                 C2173 +
             (C20971 + C20972 - C20973 - C20974) * C2174 + C20991 * C2175) *
                C33992 +
            ((C23694 + C23695 - C23696 - C23697) * C2173 + C23714 * C2174 +
             C32722 * C2175) *
                C51086) *
               C51152 +
           (((C23696 - (C23695 + C23694) + C23697) * C2173 + C23716 * C2174 +
             C32919 * C2175) *
                C33992 +
            ((C23701 - (C23700 + C23699) + C23702) * C2173 + C23717 * C2174 +
             (C23496 - (C23497 + C23498) + C23499) * C2175) *
                C51086) *
               C50963) *
              C1172 +
          ((((C20973 - (C20972 + C20971) + C20974) * C2173 +
             (C20977 - (C20976 + C20975) + C20978) * C2174 +
             (C20981 - (C20980 + C20979) + C20982) * C2175) *
                C33992 +
            (C23716 * C2173 + C32919 * C2174 +
             (C21151 - (C21137 + C21138) + C21152) * C2175) *
                C51086) *
               C51152 +
           ((C23714 * C2173 + C32722 * C2174 +
             (C21138 + C21137 - C21151 - C21152) * C2175) *
                C33992 +
            (C23715 * C2173 + (C23498 + C23497 - C23496 - C23499) * C2174 +
             (C20679 * C1280 + C20680 * C1275 -
              (C19835 * C3368 + C50862 * C3372) * C1281 -
              (C19835 * C3370 + C50862 * C3374) * C50885) *
                 C2175) *
                C51086) *
               C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C1280 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C1275 -
             (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
              C17051 * C126 + C17046 * C133) *
                 C1281 -
             (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
              C17051 * C137 + C17046 * C147) *
                 C50885) *
                C51010 * C33992 +
            ((C34323 + C34324 + C34325) * C1280 +
             (C34326 + C34327 + C34328) * C1275 -
             (C34329 + C34330 + C34331) * C1281 -
             (C34332 + C34333 + C34334) * C50885) *
                C51010 * C51086) *
               C51152 +
           (((C34331 + C34330 + C34329) * C1281 -
             ((C34328 + C34327 + C34326) * C1275 +
              (C34325 + C34324 + C34323) * C1280) +
             (C34334 + C34333 + C34332) * C50885) *
                C51010 * C33992 +
            ((C34901 + C34902 + C34903) * C1281 -
             ((C34904 + C34905 + C34906) * C1275 +
              (C34907 + C34908 + C34909) * C1280) +
             (C34910 + C34911 + C34912) * C50885) *
                C51010 * C51086) *
               C50963) *
              C1172 +
          ((((C17245 + C17244 + C17243) * C1281 -
             ((C17242 + C17241 + C17240) * C1275 +
              (C17239 + C17238 + C17237) * C1280) +
             (C17248 + C17247 + C17246) * C50885) *
                C51010 * C33992 +
            ((C18787 + C18788 + C18789) * C1281 -
             ((C17869 + C17870 + C17871) * C1275 +
              (C17872 + C17873 + C17874) * C1280) +
             (C18790 + C18791 + C18792) * C50885) *
                C51010 * C51086) *
               C51152 +
           (((C17874 + C17873 + C17872) * C1280 +
             (C17871 + C17870 + C17869) * C1275 -
             (C18789 + C18788 + C18787) * C1281 -
             (C18792 + C18791 + C18790) * C50885) *
                C51010 * C33992 +
            ((C18185 + C18186 + C18187) * C1280 +
             (C18188 + C18189 + C18190) * C1275 -
             (C17053 * C969 + C17048 * C977 + C17052 * C970 + C17047 * C978 +
              C17051 * C971 + C17046 * C979) *
                 C1281 -
             (C17053 * C973 + C17048 * C981 + C17052 * C974 + C17047 * C982 +
              C17051 * C975 + C17046 * C983) *
                 C50885) *
                C51010 * C51086) *
               C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C1280 +
             (C19835 * C136 + C50862 * C146) * C1275 -
             (C19835 * C126 + C50862 * C133) * C1281 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C51010 * C39326 +
            (C23694 + C23695 - C23696 - C23697) * C51010 * C39327 +
            C24223 * C51010 * C39328 +
            (C24220 + C24219 - C24218 - C24221) * C51010 * C39329) *
               C51152 +
           ((C23696 - (C23695 + C23694) + C23697) * C51010 * C39326 +
            (C23701 - (C23700 + C23699) + C23702) * C51010 * C39327 +
            (C24218 - (C24219 + C24220) + C24221) * C51010 * C39328 +
            (C39908 * C1281 - (C23184 * C1275 + C23183 * C1280) +
             C39909 * C50885) *
                C51010 * C39329) *
               C50963) *
              C1172 +
          (((C20973 - (C20972 + C20971) + C20974) * C51010 * C39326 +
            C23716 * C51010 * C39327 + C23717 * C51010 * C39328 +
            (C23706 - (C23707 + C23708) + C23709) * C51010 * C39329) *
               C51152 +
           (C23714 * C51010 * C39326 + C23715 * C51010 * C39327 +
            (C23708 + C23707 - C23706 - C23709) * C51010 * C39328 +
            (C23068 * C1280 + C23069 * C1275 -
             (C19835 * C6202 + C50862 * C6206) * C1281 -
             (C19835 * C6204 + C50862 * C6208) * C50885) *
                C51010 * C39329) *
               C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C50007 +
              (C19835 * C136 + C50862 * C146) * C51143 -
              (C19835 * C126 + C50862 * C133) * C50000 -
              (C19835 * C137 + C50862 * C147) * C50885) *
                 C2173 +
             (C20203 + C20204 - C20205 - C20206) * C2174 + C20235 * C2175) *
                C33992 +
            ((C22862 + C22863 - C22864 - C22865) * C2173 + C24426 * C2174 +
             C31786 * C2175) *
                C51086) *
               C1514 +
           (((C22864 - (C22863 + C22862) + C22865) * C2173 + C24427 * C2174 +
             C33602 * C2175) *
                C33992 +
            ((C22868 - (C22867 + C22866) + C22869) * C2173 + C24428 * C2174 +
             (C22443 - (C22437 + C22438) + C22444) * C2175) *
                C51086) *
               C50963) *
              C1172 +
          ((((C20205 - (C20204 + C20203) + C20206) * C2173 +
             (C20209 - (C20208 + C20207) + C20210) * C2174 +
             (C20213 - (C20212 + C20211) + C20214) * C2175) *
                C33992 +
            (C24427 * C2173 + C33602 * C2174 +
             (C21617 - (C21618 + C21619) + C21620) * C2175) *
                C51086) *
               C1514 +
           ((C24426 * C2173 + C31786 * C2174 +
             (C21619 + C21618 - C21617 - C21620) * C2175) *
                C33992 +
            (C22894 * C2173 + (C22438 + C22437 - C22443 - C22444) * C2174 +
             (C20679 * C50007 + C20680 * C51143 -
              (C19835 * C3368 + C50862 * C3372) * C50000 -
              (C19835 * C3370 + C50862 * C3374) * C50885) *
                 C2175) *
                C51086) *
               C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C50007 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C51143 -
             (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
              C17051 * C126 + C17046 * C133) *
                 C50000 -
             (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
              C17051 * C137 + C17046 * C147) *
                 C50885) *
                C51010 * C33992 +
            ((C34323 + C34324 + C34325) * C50007 +
             (C34326 + C34327 + C34328) * C51143 -
             (C34329 + C34330 + C34331) * C50000 -
             (C34332 + C34333 + C34334) * C50885) *
                C51010 * C51086) *
               C1514 +
           (((C34331 + C34330 + C34329) * C50000 -
             ((C34328 + C34327 + C34326) * C51143 +
              (C34325 + C34324 + C34323) * C50007) +
             (C34334 + C34333 + C34332) * C50885) *
                C51010 * C33992 +
            ((C34901 + C34902 + C34903) * C50000 -
             ((C34904 + C34905 + C34906) * C51143 +
              (C34907 + C34908 + C34909) * C50007) +
             (C34910 + C34911 + C34912) * C50885) *
                C51010 * C51086) *
               C50963) *
              C1172 +
          ((((C17245 + C17244 + C17243) * C50000 -
             ((C17242 + C17241 + C17240) * C51143 +
              (C17239 + C17238 + C17237) * C50007) +
             (C17248 + C17247 + C17246) * C50885) *
                C51010 * C33992 +
            ((C18787 + C18788 + C18789) * C50000 -
             ((C17869 + C17870 + C17871) * C51143 +
              (C17872 + C17873 + C17874) * C50007) +
             (C18790 + C18791 + C18792) * C50885) *
                C51010 * C51086) *
               C1514 +
           (((C17874 + C17873 + C17872) * C50007 +
             (C17871 + C17870 + C17869) * C51143 -
             (C18789 + C18788 + C18787) * C50000 -
             (C18792 + C18791 + C18790) * C50885) *
                C51010 * C33992 +
            ((C18185 + C18186 + C18187) * C50007 +
             (C18188 + C18189 + C18190) * C51143 -
             (C17053 * C969 + C17048 * C977 + C17052 * C970 + C17047 * C978 +
              C17051 * C971 + C17046 * C979) *
                 C50000 -
             (C17053 * C973 + C17048 * C981 + C17052 * C974 + C17047 * C982 +
              C17051 * C975 + C17046 * C983) *
                 C50885) *
                C51010 * C51086) *
               C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C50007 +
             (C19835 * C136 + C50862 * C146) * C51143 -
             (C19835 * C126 + C50862 * C133) * C50000 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C51010 * C39326 +
            (C22862 + C22863 - C22864 - C22865) * C51010 * C39327 +
            C39899 * C39328 + C39913 * C39329) *
               C1514 +
           ((C22864 - (C22863 + C22862) + C22865) * C51010 * C39326 +
            (C22868 - (C22867 + C22866) + C22869) * C51010 * C39327 +
            (C22895 - (C22896 + C22897) + C22898) * C51010 * C39328 +
            (C39911 - (C39903 + C39904) + C39912) * C51010 * C39329) *
               C50963) *
              C1172 +
          (((C20205 - (C20204 + C20203) + C20206) * C51010 * C39326 +
            C24427 * C51010 * C39327 + C24428 * C51010 * C39328 +
            (C22899 - (C22881 + C22882) + C22900) * C51010 * C39329) *
               C1514 +
           (C24426 * C51010 * C39326 + C22894 * C51010 * C39327 +
            (C22882 + C22881 - C22899 - C22900) * C51010 * C39328 +
            (C23068 * C50007 + C23069 * C51143 -
             (C19835 * C6202 + C50862 * C6206) * C50000 -
             (C19835 * C6204 + C50862 * C6208) * C50885) *
                C51010 * C39329) *
               C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C603 +
              (C19835 * C136 + C50862 * C146) * C50880) *
                 C2173 +
             (C20307 + C20308) * C2174 + C20319 * C2175) *
                C33992 +
            ((C22689 + C22690) * C2173 + C22691 * C2174 + C22701 * C2175) *
                C51086) *
               C1514 -
           ((C22707 * C2175 + C22699 * C2174 + (C22693 + C22692) * C2173) *
                C51086 +
            (C20462 * C2175 + C22700 * C2174 + (C22690 + C22689) * C2173) *
                C33992) *
               C50963) *
              C51197 +
          (((C22691 * C2173 + C22701 * C2174 + C32031 * C2175) * C33992 +
            (C22694 * C2173 + C22702 * C2174 + (C20685 + C20686) * C2175) *
                C51086) *
               C50963 -
           ((C20461 * C2175 + C20462 * C2174 + C22700 * C2173) * C51086 +
            (C20322 * C2175 + (C20310 + C20309) * C2174 +
             (C20308 + C20307) * C2173) *
                C33992) *
               C1514) *
              C51184 +
          (((C20319 * C2173 + C20320 * C2174 + (C20314 + C20313) * C2175) *
                C33992 +
            (C22701 * C2173 + C32031 * C2174 + (C20459 + C20460) * C2175) *
                C51086) *
               C1514 -
           ((((C19835 * C20659 + C50862 * C20661) * C50880 +
              (C19835 * C20658 + C50862 * C20660) * C603) *
                 C2175 +
             (C20686 + C20685) * C2174 + C22707 * C2173) *
                C51086 +
            ((C20460 + C20459) * C2175 + C20461 * C2174 + C20462 * C2173) *
                C33992) *
               C50963) *
              C1279)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C603 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50880) *
                C51010 * C33992 +
            ((C34323 + C34324 + C34325) * C603 +
             (C34326 + C34327 + C34328) * C50880) *
                C51010 * C51086) *
               C1514 -
           (((C34904 + C34905 + C34906) * C50880 +
             (C34907 + C34908 + C34909) * C603) *
                C51010 * C51086 +
            ((C34328 + C34327 + C34326) * C50880 +
             (C34325 + C34324 + C34323) * C603) *
                C51010 * C33992) *
               C50963) *
              C51197 +
          ((((C17874 + C17873 + C17872) * C603 +
             (C17871 + C17870 + C17869) * C50880) *
                C51010 * C33992 +
            ((C18185 + C18186 + C18187) * C603 +
             (C18188 + C18189 + C18190) * C50880) *
                C51010 * C51086) *
               C50963 -
           (((C17869 + C17870 + C17871) * C50880 +
             (C17872 + C17873 + C17874) * C603) *
                C51010 * C51086 +
            ((C17242 + C17241 + C17240) * C50880 +
             (C17239 + C17238 + C17237) * C603) *
                C51010 * C33992) *
               C1514) *
              C51184 +
          ((((C17579 + C17578 + C17577) * C603 +
             (C17576 + C17575 + C17574) * C50880) *
                C51010 * C33992 +
            ((C17875 + C17876 + C17877) * C603 +
             (C17878 + C17879 + C17880) * C50880) *
                C51010 * C51086) *
               C1514 -
           (((C17053 * C3218 + C17048 * C3221 + C17052 * C3216 +
              C17047 * C3220 + C17051 * C3215 + C17046 * C3219) *
                 C50880 +
             (C17053 * C3212 + C17048 * C3217 + C17052 * C3211 +
              C17047 * C3214 + C17051 * C3210 + C17046 * C3213) *
                 C603) *
                C51010 * C51086 +
            ((C17880 + C17879 + C17878) * C50880 +
             (C17877 + C17876 + C17875) * C603) *
                C51010 * C33992) *
               C50963) *
              C1279)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C51010 * C39326 +
            (C22689 + C22690) * C51010 * C39327 + C40012 * C39328 +
            C40016 * C39329) *
               C1514 -
           (C40093 * C39329 + C40088 * C39328 +
            (C22693 + C22692) * C51010 * C39327 +
            (C22690 + C22689) * C51010 * C39326) *
               C50963) *
              C51197 +
          ((C22691 * C51010 * C39326 + C22694 * C51010 * C39327 +
            C23060 * C51010 * C39328 + (C23072 + C23073) * C51010 * C39329) *
               C50963 -
           (C40014 * C39329 + C40015 * C39328 + C22700 * C51010 * C39327 +
            (C20308 + C20307) * C51010 * C39326) *
               C1514) *
              C51184 +
          ((C20319 * C51010 * C39326 + C22701 * C51010 * C39327 +
            C22702 * C51010 * C39328 + (C22714 + C22715) * C51010 * C39329) *
               C1514 -
           (((C19835 * C23051 + C50862 * C23053) * C50880 +
             (C19835 * C23050 + C50862 * C23052) * C603) *
                C51010 * C39329 +
            (C22715 + C22714) * C51010 * C39328 + C22707 * C51010 * C39327 +
            C20462 * C51010 * C39326) *
               C50963) *
              C1279)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C603 +
              (C19835 * C136 + C50862 * C146) * C50880) *
                 C2173 +
             (C20307 + C20308) * C2174 + C20319 * C2175) *
                C33992 +
            ((C22689 + C22690) * C2173 + C22691 * C2174 + C22701 * C2175) *
                C51086) *
               C51198 -
           ((C22707 * C2175 + C22699 * C2174 + (C22693 + C22692) * C2173) *
                C51086 +
            (C20462 * C2175 + C22700 * C2174 + (C22690 + C22689) * C2173) *
                C33992) *
               C51187 +
           ((C23055 * C2173 + C22694 * C2174 + C22702 * C2175) * C33992 +
            ((C23059 + C23058) * C2173 + C23060 * C2174 +
             (C22714 + C22715) * C2175) *
                C51086) *
               C1746) *
              C1172 +
          (((C22691 * C2173 + C22701 * C2174 + C32031 * C2175) * C33992 +
            (C22694 * C2173 + C22702 * C2174 + (C20685 + C20686) * C2175) *
                C51086) *
               C51187 -
           ((C20461 * C2175 + C20462 * C2174 + C22700 * C2173) * C51086 +
            (C20322 * C2175 + (C20310 + C20309) * C2174 +
             (C20308 + C20307) * C2173) *
                C33992) *
               C51198 -
           ((((C19835 * C20753 + C50862 * C20755) * C50880 +
              (C19835 * C20752 + C50862 * C20754) * C603) *
                 C2175 +
             (C22715 + C22714) * C2174 + C23057 * C2173) *
                C51086 +
            ((C20686 + C20685) * C2175 + C22707 * C2174 + C22699 * C2173) *
                C33992) *
               C1746) *
              C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C603 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50880) *
                C51010 * C33992 +
            ((C34323 + C34324 + C34325) * C603 +
             (C34326 + C34327 + C34328) * C50880) *
                C51010 * C51086) *
               C51198 -
           (((C34904 + C34905 + C34906) * C50880 +
             (C34907 + C34908 + C34909) * C603) *
                C51010 * C51086 +
            ((C34328 + C34327 + C34326) * C50880 +
             (C34325 + C34324 + C34323) * C603) *
                C51010 * C33992) *
               C51187 +
           (((C34909 + C34908 + C34907) * C603 +
             (C34906 + C34905 + C34904) * C50880) *
                C51010 * C33992 +
            ((C35169 + C35170 + C35171) * C603 +
             (C35172 + C35173 + C35174) * C50880) *
                C51010 * C51086) *
               C1746) *
              C1172 +
          ((((C17874 + C17873 + C17872) * C603 +
             (C17871 + C17870 + C17869) * C50880) *
                C51010 * C33992 +
            ((C18185 + C18186 + C18187) * C603 +
             (C18188 + C18189 + C18190) * C50880) *
                C51010 * C51086) *
               C51187 -
           (((C17869 + C17870 + C17871) * C50880 +
             (C17872 + C17873 + C17874) * C603) *
                C51010 * C51086 +
            ((C17242 + C17241 + C17240) * C50880 +
             (C17239 + C17238 + C17237) * C603) *
                C51010 * C33992) *
               C51198 -
           (((C17053 * C6844 + C17048 * C6845 + C17052 * C3506 +
              C17047 * C3512 + C17051 * C3507 + C17046 * C3513) *
                 C50880 +
             (C17053 * C6842 + C17048 * C6843 + C17052 * C3500 +
              C17047 * C3508 + C17051 * C3501 + C17046 * C3509) *
                 C603) *
                C51010 * C51086 +
            ((C18190 + C18189 + C18188) * C50880 +
             (C18187 + C18186 + C18185) * C603) *
                C51010 * C33992) *
               C1746) *
              C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C51010 * C39326 +
            (C22689 + C22690) * C51010 * C39327 + C40012 * C39328 +
            C40016 * C39329) *
               C51198 -
           (C40093 * C39329 + C40088 * C39328 +
            (C22693 + C22692) * C51010 * C39327 +
            (C22690 + C22689) * C51010 * C39326) *
               C51187 +
           (C40012 * C39326 + C40016 * C39327 +
            (C23186 + C23187) * C51010 * C39328 +
            (C40096 + C40097) * C51010 * C39329) *
               C1746) *
              C1172 +
          ((C22691 * C51010 * C39326 + C22694 * C51010 * C39327 +
            C23060 * C51010 * C39328 + (C23072 + C23073) * C51010 * C39329) *
               C51187 -
           (C40014 * C39329 + C40015 * C39328 + C22700 * C51010 * C39327 +
            (C20308 + C20307) * C51010 * C39326) *
               C51198 -
           (((C19835 * C23172 + C50862 * C23174) * C50880 +
             (C19835 * C23171 + C50862 * C23173) * C603) *
                C51010 * C39329 +
            (C23073 + C23072) * C51010 * C39328 + C40014 * C39327 +
            C40015 * C39326) *
               C1746) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
                C17053 * C127 + C17048 * C134) *
                   C121 +
               (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
                C17053 * C138 + C17048 * C148) *
                   C109 -
               (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
                C17051 * C126 + C17046 * C133) *
                   C122 -
               (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
                C17051 * C137 + C17046 * C147) *
                   C110 +
               (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
                C17053 * C129 + C17048 * C140) *
                   C123 +
               (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
                C17053 * C141 + C17048 * C150) *
                   C111 -
               (C17053 * C130 + C17048 * C142 + C17052 * C129 + C17047 * C140 +
                C17051 * C128 + C17046 * C135) *
                   C124 -
               (C17053 * C143 + C17048 * C151 + C17052 * C141 + C17047 * C150 +
                C17051 * C139 + C17046 * C149) *
                   C112) *
                  C51010 * C33992 +
              ((C17051 * C387 + C17046 * C397 + C17052 * C383 + C17047 * C389 +
                C17053 * C384 + C17048 * C390) *
                   C121 +
               (C17051 * C396 + C17046 * C404 + C17052 * C395 + C17047 * C403 +
                C17053 * C394 + C17048 * C402) *
                   C109 -
               (C17053 * C385 + C17048 * C391 + C17052 * C384 + C17047 * C390 +
                C17051 * C383 + C17046 * C389) *
                   C122 -
               (C17053 * C393 + C17048 * C401 + C17052 * C394 + C17047 * C402 +
                C17051 * C395 + C17046 * C403) *
                   C110 +
               (C17051 * C384 + C17046 * C390 + C17052 * C385 + C17047 * C391 +
                C17053 * C386 + C17048 * C392) *
                   C123 +
               (C17051 * C394 + C17046 * C402 + C17052 * C393 + C17047 * C401 +
                C17053 * C398 + C17048 * C405) *
                   C111 -
               (C17053 * C388 + C17048 * C399 + C17052 * C386 + C17047 * C392 +
                C17051 * C385 + C17046 * C391) *
                   C124 -
               (C17053 * C400 + C17048 * C406 + C17052 * C398 + C17047 * C405 +
                C17051 * C393 + C17046 * C401) *
                   C112) *
                  C51010 * C51086) *
             C50951 * C50925 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
                 C17053 * C127 + C17048 * C134) *
                    C50007 +
                (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
                 C17053 * C138 + C17048 * C148) *
                    C51143 -
                (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
                 C17051 * C126 + C17046 * C133) *
                    C50000 -
                (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
                 C17051 * C137 + C17046 * C147) *
                    C50885) *
                   C51010 * C33992 +
               ((C34323 + C34324 + C34325) * C50007 +
                (C34326 + C34327 + C34328) * C51143 -
                (C34329 + C34330 + C34331) * C50000 -
                (C34332 + C34333 + C34334) * C50885) *
                   C51010 * C51086) *
                  C50951 * C507 +
              (((C17245 + C17244 + C17243) * C50000 -
                ((C17242 + C17241 + C17240) * C51143 +
                 (C17239 + C17238 + C17237) * C50007) +
                (C17248 + C17247 + C17246) * C50885) *
                   C51010 * C33992 +
               ((C18787 + C18788 + C18789) * C50000 -
                ((C17869 + C17870 + C17871) * C51143 +
                 (C17872 + C17873 + C17874) * C50007) +
                (C18790 + C18791 + C18792) * C50885) *
                   C51010 * C51086) *
                  C50951 * C508 +
              (((C17579 + C17578 + C17577) * C50007 +
                (C17576 + C17575 + C17574) * C51143 -
                (C17573 + C17572 + C17571) * C50000 -
                (C17582 + C17581 + C17580) * C50885) *
                   C51010 * C33992 +
               ((C17875 + C17876 + C17877) * C50007 +
                (C17878 + C17879 + C17880) * C51143 -
                (C17053 * C722 + C17048 * C738 + C17052 * C723 + C17047 * C739 +
                 C17051 * C724 + C17046 * C740) *
                    C50000 -
                (C17053 * C734 + C17048 * C746 + C17052 * C735 + C17047 * C747 +
                 C17051 * C736 + C17046 * C748) *
                    C50885) *
                   C51010 * C51086) *
                  C50951 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C50007 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C51143 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C50000 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C50885) *
               C51010 * C33992 +
           ((C34323 + C34324 + C34325) * C50007 +
            (C34326 + C34327 + C34328) * C51143 -
            (C34329 + C34330 + C34331) * C50000 -
            (C34332 + C34333 + C34334) * C50885) *
               C51010 * C51086) *
              C848 +
          (((C34331 + C34330 + C34329) * C50000 -
            ((C34328 + C34327 + C34326) * C51143 +
             (C34325 + C34324 + C34323) * C50007) +
            (C34334 + C34333 + C34332) * C50885) *
               C51010 * C33992 +
           ((C34901 + C34902 + C34903) * C50000 -
            ((C34904 + C34905 + C34906) * C51143 +
             (C34907 + C34908 + C34909) * C50007) +
            (C34910 + C34911 + C34912) * C50885) *
               C51010 * C51086) *
              C849 +
          (((C34909 + C34908 + C34907) * C50007 +
            (C34906 + C34905 + C34904) * C51143 -
            (C34903 + C34902 + C34901) * C50000 -
            (C34912 + C34911 + C34910) * C50885) *
               C51010 * C33992 +
           ((C17051 * C1058 + C17046 * C1066 + C17052 * C1057 + C17047 * C1065 +
             C17053 * C1056 + C17048 * C1064) *
                C50007 +
            (C17051 * C1062 + C17046 * C1070 + C17052 * C1061 + C17047 * C1069 +
             C17053 * C1060 + C17048 * C1068) *
                C51143 -
            (C17053 * C1055 + C17048 * C1063 + C17052 * C1056 + C17047 * C1064 +
             C17051 * C1057 + C17046 * C1065) *
                C50000 -
            (C17053 * C1059 + C17048 * C1067 + C17052 * C1060 + C17047 * C1068 +
             C17051 * C1061 + C17046 * C1069) *
                C50885) *
               C51010 * C51086) *
              C850) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C121 +
            (C19835 * C136 + C50862 * C146) * C109 -
            (C19835 * C126 + C50862 * C133) * C122 -
            (C19835 * C137 + C50862 * C147) * C110 +
            (C19835 * C127 + C50862 * C134) * C123 +
            (C19835 * C138 + C50862 * C148) * C111 -
            (C19835 * C128 + C50862 * C135) * C124 -
            (C19835 * C139 + C50862 * C149) * C112) *
               C2173 +
           (C19971 * C121 + C19972 * C109 - C19973 * C122 - C19974 * C110 +
            C19975 * C123 + C19976 * C111 -
            (C19835 * C261 + C50862 * C267) * C124 -
            (C19835 * C269 + C50862 * C277) * C112) *
               C2174 +
           (C19977 * C121 + C19978 * C109 - C19979 * C122 - C19980 * C110 +
            C19981 * C123 + C19982 * C111 -
            (C19835 * C515 + C50862 * C520) * C124 -
            (C19835 * C524 + C50862 * C530) * C112) *
               C2175) *
              C33992 +
          ((C22261 * C121 + C22262 * C109 - C22263 * C122 - C22264 * C110 +
            C22265 * C123 + C22266 * C111 -
            (C19835 * C385 + C50862 * C391) * C124 -
            (C19835 * C393 + C50862 * C401) * C112) *
               C2173 +
           (C20450 * C121 + C20449 * C109 - C21141 * C122 - C21142 * C110 +
            C22079 * C123 + C22080 * C111 -
            (C19835 * C721 + C50862 * C729) * C124 -
            (C19835 * C733 + C50862 * C745) * C112) *
               C2174 +
           (C20448 * C121 + C20447 * C109 - C21143 * C122 - C21144 * C110 +
            C31488 * C123 + C31489 * C111 -
            (C19835 * C722 + C50862 * C738) * C124 -
            (C19835 * C734 + C50862 * C746) * C112) *
               C2175) *
              C51086) *
         C50951 * C50925) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C50007 +
             (C19835 * C136 + C50862 * C146) * C51143 -
             (C19835 * C126 + C50862 * C133) * C50000 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C2173 +
            (C20203 + C20204 - C20205 - C20206) * C2174 + C20235 * C2175) *
               C33992 +
           ((C22862 + C22863 - C22864 - C22865) * C2173 + C24426 * C2174 +
            C31786 * C2175) *
               C51086) *
              C50951 * C507 +
          (((C20205 - (C20204 + C20203) + C20206) * C2173 +
            (C20209 - (C20208 + C20207) + C20210) * C2174 +
            (C20213 - (C20212 + C20211) + C20214) * C2175) *
               C33992 +
           (C24427 * C2173 + C33602 * C2174 +
            (C21617 - (C21618 + C21619) + C21620) * C2175) *
               C51086) *
              C50951 * C508 +
          ((C20235 * C2173 + C20236 * C2174 +
            (C20233 + C20232 - C20231 - C20234) * C2175) *
               C33992 +
           (C31786 * C2173 + (C21619 + C21618 - C21617 - C21620) * C2174 +
            (C20451 * C50007 + C20452 * C51143 -
             (C19835 * C3009 + C50862 * C3017) * C50000 -
             (C19835 * C3015 + C50862 * C3021) * C50885) *
                C2175) *
               C51086) *
              C50951 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C50007 +
             (C19835 * C136 + C50862 * C146) * C51143 -
             (C19835 * C126 + C50862 * C133) * C50000 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C2173 +
            (C20203 + C20204 - C20205 - C20206) * C2174 + C20235 * C2175) *
               C33992 +
           ((C22862 + C22863 - C22864 - C22865) * C2173 + C24426 * C2174 +
            C31786 * C2175) *
               C51086) *
              C848 +
          (((C22864 - (C22863 + C22862) + C22865) * C2173 + C24427 * C2174 +
            C33602 * C2175) *
               C33992 +
           ((C22868 - (C22867 + C22866) + C22869) * C2173 + C24428 * C2174 +
            (C22443 - (C22437 + C22438) + C22444) * C2175) *
               C51086) *
              C849 +
          ((C22901 * C2173 + C22894 * C2174 +
            (C22438 + C22437 - C22443 - C22444) * C2175) *
               C33992 +
           ((C22897 + C22896 - C22895 - C22898) * C2173 +
            (C22882 + C22881 - C22899 - C22900) * C2174 +
            (C22710 * C50007 + C22711 * C51143 -
             (C19835 * C3498 + C50862 * C3504) * C50000 -
             (C19835 * C3502 + C50862 * C3510) * C50885) *
                C2175) *
               C51086) *
              C850) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C19835 * C125 + C50862 * C132) * C121 +
           (C19835 * C136 + C50862 * C146) * C109 -
           (C19835 * C126 + C50862 * C133) * C122 -
           (C19835 * C137 + C50862 * C147) * C110 +
           (C19835 * C127 + C50862 * C134) * C123 +
           (C19835 * C138 + C50862 * C148) * C111 -
           (C19835 * C128 + C50862 * C135) * C124 -
           (C19835 * C139 + C50862 * C149) * C112) *
              C51010 * C39326 +
          (C22261 * C121 + C22262 * C109 - C22263 * C122 - C22264 * C110 +
           C22265 * C123 + C22266 * C111 -
           (C19835 * C385 + C50862 * C391) * C124 -
           (C19835 * C393 + C50862 * C401) * C112) *
              C51010 * C39327 +
          (C22267 * C121 + C22268 * C109 - C22269 * C122 - C22270 * C110 +
           C22271 * C123 + C22272 * C111 -
           (C19835 * C854 + C50862 * C859) * C124 -
           (C19835 * C863 + C50862 * C869) * C112) *
              C51010 * C39328 +
          (C22889 * C121 + C22888 * C109 - C22887 * C122 - C22890 * C110 +
           (C19835 * C1056 + C50862 * C1064) * C123 +
           (C19835 * C1060 + C50862 * C1068) * C111 -
           (C19835 * C1055 + C50862 * C1063) * C124 -
           (C19835 * C1059 + C50862 * C1067) * C112) *
              C51010 * C39329) *
         C50951 * C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C50007 +
            (C19835 * C136 + C50862 * C146) * C51143 -
            (C19835 * C126 + C50862 * C133) * C50000 -
            (C19835 * C137 + C50862 * C147) * C50885) *
               C51010 * C39326 +
           (C22862 + C22863 - C22864 - C22865) * C51010 * C39327 +
           C22901 * C51010 * C39328 +
           (C22897 + C22896 - C22895 - C22898) * C51010 * C39329) *
              C50951 * C507 +
          ((C20205 - (C20204 + C20203) + C20206) * C51010 * C39326 +
           C24427 * C51010 * C39327 + C24428 * C51010 * C39328 +
           (C22899 - (C22881 + C22882) + C22900) * C51010 * C39329) *
              C50951 * C508 +
          (C20235 * C51010 * C39326 + C31786 * C51010 * C39327 +
           (C22438 + C22437 - C22443 - C22444) * C51010 * C39328 +
           (C22710 * C50007 + C22711 * C51143 -
            (C19835 * C3498 + C50862 * C3504) * C50000 -
            (C19835 * C3502 + C50862 * C3510) * C50885) *
               C51010 * C39329) *
              C50951 * C509)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C50007 +
            (C19835 * C136 + C50862 * C146) * C51143 -
            (C19835 * C126 + C50862 * C133) * C50000 -
            (C19835 * C137 + C50862 * C147) * C50885) *
               C51010 * C39326 +
           (C22862 + C22863 - C22864 - C22865) * C51010 * C39327 +
           C39899 * C39328 + C39913 * C39329) *
              C848 +
          ((C22864 - (C22863 + C22862) + C22865) * C51010 * C39326 +
           (C22868 - (C22867 + C22866) + C22869) * C51010 * C39327 +
           (C22895 - (C22896 + C22897) + C22898) * C51010 * C39328 +
           (C39911 - (C39903 + C39904) + C39912) * C51010 * C39329) *
              C849 +
          (C39899 * C39326 + C39913 * C39327 +
           (C39904 + C39903 - C39911 - C39912) * C51010 * C39328 +
           ((C19835 * C6331 + C50862 * C6335) * C50007 +
            (C19835 * C6333 + C50862 * C6337) * C51143 -
            (C19835 * C6330 + C50862 * C6334) * C50000 -
            (C19835 * C6332 + C50862 * C6336) * C50885) *
               C51010 * C39329) *
              C850) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
                 C17053 * C127 + C17048 * C134) *
                    C256 +
                (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
                 C17053 * C138 + C17048 * C148) *
                    C251 -
                (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
                 C17051 * C126 + C17046 * C133) *
                    C257 -
                (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
                 C17051 * C137 + C17046 * C147) *
                    C252 +
                (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
                 C17053 * C129 + C17048 * C140) *
                    C258 +
                (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
                 C17053 * C141 + C17048 * C150) *
                    C253) *
                   C51010 * C33992 +
               ((C17051 * C387 + C17046 * C397 + C17052 * C383 + C17047 * C389 +
                 C17053 * C384 + C17048 * C390) *
                    C256 +
                (C17051 * C396 + C17046 * C404 + C17052 * C395 + C17047 * C403 +
                 C17053 * C394 + C17048 * C402) *
                    C251 -
                (C17053 * C385 + C17048 * C391 + C17052 * C384 + C17047 * C390 +
                 C17051 * C383 + C17046 * C389) *
                    C257 -
                (C17053 * C393 + C17048 * C401 + C17052 * C394 + C17047 * C402 +
                 C17051 * C395 + C17046 * C403) *
                    C252 +
                (C17051 * C384 + C17046 * C390 + C17052 * C385 + C17047 * C391 +
                 C17053 * C386 + C17048 * C392) *
                    C258 +
                (C17051 * C394 + C17046 * C402 + C17052 * C393 + C17047 * C401 +
                 C17053 * C398 + C17048 * C405) *
                    C253) *
                   C51010 * C51086) *
                  C50951 * C51151 +
              (((C17245 + C17244 + C17243) * C257 -
                ((C17242 + C17241 + C17240) * C251 +
                 (C17239 + C17238 + C17237) * C256) +
                (C17248 + C17247 + C17246) * C252 -
                (C17251 + C17250 + C17249) * C258 -
                (C17254 + C17253 + C17252) * C253) *
                   C51010 * C33992 +
               ((C18787 + C18788 + C18789) * C257 -
                ((C17869 + C17870 + C17871) * C251 +
                 (C17872 + C17873 + C17874) * C256) +
                (C18790 + C18791 + C18792) * C252 -
                (C17053 * C1412 + C17048 * C1413 + C17052 * C721 +
                 C17047 * C729 + C17051 * C720 + C17046 * C728) *
                    C258 -
                (C17053 * C1414 + C17048 * C1415 + C17052 * C733 +
                 C17047 * C745 + C17051 * C732 + C17046 * C744) *
                    C253) *
                   C51010 * C51086) *
                  C50951 * C50939) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
                 C17053 * C127 + C17048 * C134) *
                    C603 +
                (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
                 C17053 * C138 + C17048 * C148) *
                    C50880) *
                   C51010 * C33992 +
               ((C34323 + C34324 + C34325) * C603 +
                (C34326 + C34327 + C34328) * C50880) *
                   C51010 * C51086) *
                  C50951 * C599 -
              (((C17869 + C17870 + C17871) * C50880 +
                (C17872 + C17873 + C17874) * C603) *
                   C51010 * C51086 +
               ((C17242 + C17241 + C17240) * C50880 +
                (C17239 + C17238 + C17237) * C603) *
                   C51010 * C33992) *
                  C50951 * C600 +
              (((C17579 + C17578 + C17577) * C603 +
                (C17576 + C17575 + C17574) * C50880) *
                   C51010 * C33992 +
               ((C17875 + C17876 + C17877) * C603 +
                (C17878 + C17879 + C17880) * C50880) *
                   C51010 * C51086) *
                  C50951 * C601 -
              (((C17053 * C4009 + C17048 * C4010 + C17052 * C3014 +
                 C17047 * C3020 + C17051 * C3013 + C17046 * C3019) *
                    C50880 +
                (C17053 * C4007 + C17048 * C4008 + C17052 * C3008 +
                 C17047 * C3012 + C17051 * C3007 + C17046 * C3011) *
                    C603) *
                   C51010 * C51086 +
               ((C17698 + C17697 + C17696) * C50880 +
                (C17695 + C17694 + C17693) * C603) *
                   C51010 * C33992) *
                  C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C603 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50880) *
                C51010 * C33992 +
            ((C34323 + C34324 + C34325) * C603 +
             (C34326 + C34327 + C34328) * C50880) *
                C51010 * C51086) *
               C848 -
           (((C34904 + C34905 + C34906) * C50880 +
             (C34907 + C34908 + C34909) * C603) *
                C51010 * C51086 +
            ((C34328 + C34327 + C34326) * C50880 +
             (C34325 + C34324 + C34323) * C603) *
                C51010 * C33992) *
               C849 +
           (((C34909 + C34908 + C34907) * C603 +
             (C34906 + C34905 + C34904) * C50880) *
                C51010 * C33992 +
            ((C17051 * C1058 + C17046 * C1066 + C17052 * C1057 +
              C17047 * C1065 + C17053 * C1056 + C17048 * C1064) *
                 C603 +
             (C17051 * C1062 + C17046 * C1070 + C17052 * C1061 +
              C17047 * C1069 + C17053 * C1060 + C17048 * C1068) *
                 C50880) *
                C51010 * C51086) *
               C850) *
              C51151 +
          ((((C17874 + C17873 + C17872) * C603 +
             (C17871 + C17870 + C17869) * C50880) *
                C51010 * C33992 +
            ((C18185 + C18186 + C18187) * C603 +
             (C18188 + C18189 + C18190) * C50880) *
                C51010 * C51086) *
               C849 -
           (((C17869 + C17870 + C17871) * C50880 +
             (C17872 + C17873 + C17874) * C603) *
                C51010 * C51086 +
            ((C17242 + C17241 + C17240) * C50880 +
             (C17239 + C17238 + C17237) * C603) *
                C51010 * C33992) *
               C848 -
           (((C17053 * C6844 + C17048 * C6845 + C17052 * C3506 +
              C17047 * C3512 + C17051 * C3507 + C17046 * C3513) *
                 C50880 +
             (C17053 * C6842 + C17048 * C6843 + C17052 * C3500 +
              C17047 * C3508 + C17051 * C3501 + C17046 * C3509) *
                 C603) *
                C51010 * C51086 +
            ((C18190 + C18189 + C18188) * C50880 +
             (C18187 + C18186 + C18185) * C603) *
                C51010 * C33992) *
               C850) *
              C50939)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C256 +
             (C19835 * C136 + C50862 * C146) * C251 -
             (C19835 * C126 + C50862 * C133) * C257 -
             (C19835 * C137 + C50862 * C147) * C252 +
             (C19835 * C127 + C50862 * C134) * C258 +
             (C19835 * C138 + C50862 * C148) * C253) *
                C2173 +
            (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C2174 +
            (C19995 + C19996 - C19997 - C19998 + C19999 + C20000) * C2175) *
               C33992 +
           ((C22273 + C22274 - C22275 - C22276 + C22277 + C22278) * C2173 +
            (C22061 + C22062 - C22063 - C22064 + C22085 + C22086) * C2174 +
            (C31480 + C31481 - C31482 - C31483 + C31490 + C31491) * C2175) *
               C51086) *
              C50951 * C51151 +
          (((C19991 - (C19990 + C19989) + C19992 - C19993 - C19994) * C2173 +
            (C19997 - (C19996 + C19995) + C19998 - C19999 - C20000) * C2174 +
            (C20003 - (C20002 + C20001) + C20004 - C20005 - C20006) * C2175) *
               C33992 +
           ((C22063 - (C22062 + C22061) + C22064 - C22085 - C22086) * C2173 +
            (C31482 - (C31481 + C31480) + C31483 - C31490 - C31491) * C2174 +
            (C21145 * C257 - (C20445 * C251 + C20446 * C256) + C21146 * C252 -
             (C19835 * C4007 + C50862 * C4008) * C258 -
             (C19835 * C4009 + C50862 * C4010) * C253) *
                C2175) *
               C51086) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C2173 +
            (C20307 + C20308) * C2174 + C20319 * C2175) *
               C33992 +
           ((C22689 + C22690) * C2173 + C22691 * C2174 + C22701 * C2175) *
               C51086) *
              C50951 * C599 -
          ((C20461 * C2175 + C20462 * C2174 + C22700 * C2173) * C51086 +
           (C20322 * C2175 + (C20310 + C20309) * C2174 +
            (C20308 + C20307) * C2173) *
               C33992) *
              C50951 * C600 +
          ((C20319 * C2173 + C20320 * C2174 + (C20314 + C20313) * C2175) *
               C33992 +
           (C22701 * C2173 + C32031 * C2174 + (C20459 + C20460) * C2175) *
               C51086) *
              C50951 * C601 -
          ((((C19835 * C20425 + C50862 * C20427) * C50880 +
             (C19835 * C20424 + C50862 * C20426) * C603) *
                C2175 +
            (C20460 + C20459) * C2174 + C20461 * C2173) *
               C51086 +
           ((C20326 + C20325) * C2175 + C20321 * C2174 + C20322 * C2173) *
               C33992) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C603 +
              (C19835 * C136 + C50862 * C146) * C50880) *
                 C2173 +
             (C20307 + C20308) * C2174 + C20319 * C2175) *
                C33992 +
            ((C22689 + C22690) * C2173 + C22691 * C2174 + C22701 * C2175) *
                C51086) *
               C848 -
           ((C22707 * C2175 + C22699 * C2174 + (C22693 + C22692) * C2173) *
                C51086 +
            (C20462 * C2175 + C22700 * C2174 + (C22690 + C22689) * C2173) *
                C33992) *
               C849 +
           ((C23055 * C2173 + C22694 * C2174 + C22702 * C2175) * C33992 +
            ((C23059 + C23058) * C2173 + C23060 * C2174 +
             (C22714 + C22715) * C2175) *
                C51086) *
               C850) *
              C51151 +
          (((C22691 * C2173 + C22701 * C2174 + C32031 * C2175) * C33992 +
            (C22694 * C2173 + C22702 * C2174 + (C20685 + C20686) * C2175) *
                C51086) *
               C849 -
           ((C20461 * C2175 + C20462 * C2174 + C22700 * C2173) * C51086 +
            (C20322 * C2175 + (C20310 + C20309) * C2174 +
             (C20308 + C20307) * C2173) *
                C33992) *
               C848 -
           ((((C19835 * C20753 + C50862 * C20755) * C50880 +
              (C19835 * C20752 + C50862 * C20754) * C603) *
                 C2175 +
             (C22715 + C22714) * C2174 + C23057 * C2173) *
                C51086 +
            ((C20686 + C20685) * C2175 + C22707 * C2174 + C22699 * C2173) *
                C33992) *
               C850) *
              C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C256 +
            (C19835 * C136 + C50862 * C146) * C251 -
            (C19835 * C126 + C50862 * C133) * C257 -
            (C19835 * C137 + C50862 * C147) * C252 +
            (C19835 * C127 + C50862 * C134) * C258 +
            (C19835 * C138 + C50862 * C148) * C253) *
               C51010 * C39326 +
           (C22273 + C22274 - C22275 - C22276 + C22277 + C22278) * C51010 *
               C39327 +
           (C22279 + C22280 - C22281 - C22282 + C22283 + C22284) * C51010 *
               C39328 +
           (C22889 * C256 + C22888 * C251 - C22887 * C257 - C22890 * C252 +
            (C19835 * C1056 + C50862 * C1064) * C258 +
            (C19835 * C1060 + C50862 * C1068) * C253) *
               C51010 * C39329) *
              C50951 * C51151 +
          ((C19991 - (C19990 + C19989) + C19992 - C19993 - C19994) * C51010 *
               C39326 +
           (C22063 - (C22062 + C22061) + C22064 - C22085 - C22086) * C51010 *
               C39327 +
           (C22087 - (C22070 + C22069) + C22088 - C22089 - C22090) * C51010 *
               C39328 +
           (C22891 * C257 - (C22708 * C251 + C22709 * C256) + C22892 * C252 -
            (C19835 * C6842 + C50862 * C6843) * C258 -
            (C19835 * C6844 + C50862 * C6845) * C253) *
               C51010 * C39329) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C603 +
            (C19835 * C136 + C50862 * C146) * C50880) *
               C51010 * C39326 +
           (C22689 + C22690) * C51010 * C39327 + C23055 * C51010 * C39328 +
           (C23059 + C23058) * C51010 * C39329) *
              C50951 * C599 -
          (C23057 * C51010 * C39329 + C22699 * C51010 * C39328 +
           C22700 * C51010 * C39327 + (C20308 + C20307) * C51010 * C39326) *
              C50951 * C600 +
          (C20319 * C51010 * C39326 + C22701 * C51010 * C39327 +
           C22702 * C51010 * C39328 + (C22714 + C22715) * C51010 * C39329) *
              C50951 * C601 -
          (((C19835 * C20753 + C50862 * C20755) * C50880 +
            (C19835 * C20752 + C50862 * C20754) * C603) *
               C51010 * C39329 +
           (C20686 + C20685) * C51010 * C39328 + C20461 * C51010 * C39327 +
           C20322 * C51010 * C39326) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C51010 * C39326 +
            (C22689 + C22690) * C51010 * C39327 + C40012 * C39328 +
            C40016 * C39329) *
               C848 -
           ((C23187 + C23186) * C51010 * C39329 + C23177 * C51010 * C39328 +
            (C22693 + C22692) * C51010 * C39327 +
            (C22690 + C22689) * C51010 * C39326) *
               C849 +
           (C40012 * C39326 + C40016 * C39327 +
            (C23186 + C23187) * C51010 * C39328 +
            ((C19835 * C6331 + C50862 * C6335) * C603 +
             (C19835 * C6333 + C50862 * C6337) * C50880) *
                C51010 * C39329) *
               C850) *
              C51151 +
          ((C22691 * C51010 * C39326 + C22694 * C51010 * C39327 +
            C23060 * C51010 * C39328 + (C23072 + C23073) * C51010 * C39329) *
               C849 -
           (C40014 * C39329 + C40015 * C39328 + C22700 * C51010 * C39327 +
            (C20308 + C20307) * C51010 * C39326) *
               C848 -
           (((C19835 * C23172 + C50862 * C23174) * C50880 +
             (C19835 * C23171 + C50862 * C23173) * C603) *
                C51010 * C39329 +
            (C23073 + C23072) * C51010 * C39328 + C40014 * C39327 +
            C40015 * C39326) *
               C850) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
                 C17053 * C127 + C17048 * C134) *
                    C256 +
                (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
                 C17053 * C138 + C17048 * C148) *
                    C251 -
                (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
                 C17051 * C126 + C17046 * C133) *
                    C257 -
                (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
                 C17051 * C137 + C17046 * C147) *
                    C252 +
                (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
                 C17053 * C129 + C17048 * C140) *
                    C258 +
                (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
                 C17053 * C141 + C17048 * C150) *
                    C253) *
                   C51010 * C33992 +
               ((C34323 + C34324 + C34325) * C256 +
                (C34326 + C34327 + C34328) * C251 -
                (C34329 + C34330 + C34331) * C257 -
                (C34332 + C34333 + C34334) * C252 +
                (C34335 + C34336 + C34337) * C258 +
                (C34338 + C34339 + C34340) * C253) *
                   C51010 * C51086) *
                  C51152 +
              (((C34331 + C34330 + C34329) * C257 -
                ((C34328 + C34327 + C34326) * C251 +
                 (C34325 + C34324 + C34323) * C256) +
                (C34334 + C34333 + C34332) * C252 -
                (C34337 + C34336 + C34335) * C258 -
                (C34340 + C34339 + C34338) * C253) *
                   C51010 * C33992 +
               ((C17051 * C852 + C17046 * C857 + C17052 * C853 + C17047 * C858 +
                 C17053 * C854 + C17048 * C859) *
                    C257 -
                ((C17053 * C862 + C17048 * C868 + C17052 * C861 +
                  C17047 * C867 + C17051 * C860 + C17046 * C866) *
                     C251 +
                 (C17053 * C853 + C17048 * C858 + C17052 * C852 +
                  C17047 * C857 + C17051 * C851 + C17046 * C856) *
                     C256) +
                (C17051 * C861 + C17046 * C867 + C17052 * C862 + C17047 * C868 +
                 C17053 * C863 + C17048 * C869) *
                    C252 -
                (C17053 * C855 + C17048 * C864 + C17052 * C854 + C17047 * C859 +
                 C17051 * C853 + C17046 * C858) *
                    C258 -
                (C17053 * C865 + C17048 * C870 + C17052 * C863 + C17047 * C869 +
                 C17051 * C862 + C17046 * C868) *
                    C253) *
                   C51010 * C51086) *
                  C50963) *
             C50925 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C17051 * C125 + C17046 * C132 + C17052 * C126 +
                  C17047 * C133 + C17053 * C127 + C17048 * C134) *
                     C603 +
                 (C17051 * C136 + C17046 * C146 + C17052 * C137 +
                  C17047 * C147 + C17053 * C138 + C17048 * C148) *
                     C50880) *
                    C51010 * C33992 +
                ((C34323 + C34324 + C34325) * C603 +
                 (C34326 + C34327 + C34328) * C50880) *
                    C51010 * C51086) *
                   C51152 -
               (((C17053 * C862 + C17048 * C868 + C17052 * C861 +
                  C17047 * C867 + C17051 * C860 + C17046 * C866) *
                     C50880 +
                 (C17053 * C853 + C17048 * C858 + C17052 * C852 +
                  C17047 * C857 + C17051 * C851 + C17046 * C856) *
                     C603) *
                    C51010 * C51086 +
                ((C34328 + C34327 + C34326) * C50880 +
                 (C34325 + C34324 + C34323) * C603) *
                    C51010 * C33992) *
                   C50963) *
                  C507 +
              ((((C17874 + C17873 + C17872) * C603 +
                 (C17871 + C17870 + C17869) * C50880) *
                    C51010 * C33992 +
                ((C18185 + C18186 + C18187) * C603 +
                 (C18188 + C18189 + C18190) * C50880) *
                    C51010 * C51086) *
                   C50963 -
               (((C17869 + C17870 + C17871) * C50880 +
                 (C17872 + C17873 + C17874) * C603) *
                    C51010 * C51086 +
                ((C17242 + C17241 + C17240) * C50880 +
                 (C17239 + C17238 + C17237) * C603) *
                    C51010 * C33992) *
                   C51152) *
                  C508 +
              ((((C17579 + C17578 + C17577) * C603 +
                 (C17576 + C17575 + C17574) * C50880) *
                    C51010 * C33992 +
                ((C17875 + C17876 + C17877) * C603 +
                 (C17878 + C17879 + C17880) * C50880) *
                    C51010 * C51086) *
                   C51152 -
               (((C17053 * C3218 + C17048 * C3221 + C17052 * C3216 +
                  C17047 * C3220 + C17051 * C3215 + C17046 * C3219) *
                     C50880 +
                 (C17053 * C3212 + C17048 * C3217 + C17052 * C3211 +
                  C17047 * C3214 + C17051 * C3210 + C17046 * C3213) *
                     C603) *
                    C51010 * C51086 +
                ((C17880 + C17879 + C17878) * C50880 +
                 (C17877 + C17876 + C17875) * C603) *
                    C51010 * C33992) *
                   C50963) *
                  C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C603 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C50880) *
               C51010 * C33992 +
           ((C34323 + C34324 + C34325) * C603 +
            (C34326 + C34327 + C34328) * C50880) *
               C51010 * C51086) *
              C1051 -
          (((C34904 + C34905 + C34906) * C50880 +
            (C34907 + C34908 + C34909) * C603) *
               C51010 * C51086 +
           ((C34328 + C34327 + C34326) * C50880 +
            (C34325 + C34324 + C34323) * C603) *
               C51010 * C33992) *
              C1052 +
          (((C34909 + C34908 + C34907) * C603 +
            (C34906 + C34905 + C34904) * C50880) *
               C51010 * C33992 +
           ((C35169 + C35170 + C35171) * C603 +
            (C35172 + C35173 + C35174) * C50880) *
               C51010 * C51086) *
              C1053 -
          (((C17053 * C6016 + C17048 * C6019 + C17052 * C6014 + C17047 * C6018 +
             C17051 * C6013 + C17046 * C6017) *
                C50880 +
            (C17053 * C6010 + C17048 * C6015 + C17052 * C6009 + C17047 * C6012 +
             C17051 * C6008 + C17046 * C6011) *
                C603) *
               C51010 * C51086 +
           ((C35174 + C35173 + C35172) * C50880 +
            (C35171 + C35170 + C35169) * C603) *
               C51010 * C33992) *
              C1054) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C256 +
             (C19835 * C136 + C50862 * C146) * C251 -
             (C19835 * C126 + C50862 * C133) * C257 -
             (C19835 * C137 + C50862 * C147) * C252 +
             (C19835 * C127 + C50862 * C134) * C258 +
             (C19835 * C138 + C50862 * C148) * C253) *
                C2173 +
            (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C2174 +
            (C19995 + C19996 - C19997 - C19998 + C19999 + C20000) * C2175) *
               C33992 +
           ((C22273 + C22274 - C22275 - C22276 + C22277 + C22278) * C2173 +
            (C22061 + C22062 - C22063 - C22064 + C22085 + C22086) * C2174 +
            (C31480 + C31481 - C31482 - C31483 + C31490 + C31491) * C2175) *
               C51086) *
              C51152 +
          (((C22275 - (C22274 + C22273) + C22276 - C22277 - C22278) * C2173 +
            (C22063 - (C22062 + C22061) + C22064 - C22085 - C22086) * C2174 +
            (C31482 - (C31481 + C31480) + C31483 - C31490 - C31491) * C2175) *
               C33992 +
           ((C22281 - (C22280 + C22279) + C22282 - C22283 - C22284) * C2173 +
            (C22087 - (C22070 + C22069) + C22088 - C22089 - C22090) * C2174 +
            (C22441 * C257 - (C20678 * C251 + C20677 * C256) + C22442 * C252 -
             (C19835 * C3212 + C50862 * C3217) * C258 -
             (C19835 * C3218 + C50862 * C3221) * C253) *
                C2175) *
               C51086) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C603 +
              (C19835 * C136 + C50862 * C146) * C50880) *
                 C2173 +
             (C20307 + C20308) * C2174 + C20319 * C2175) *
                C33992 +
            ((C22689 + C22690) * C2173 + C22691 * C2174 + C22701 * C2175) *
                C51086) *
               C51152 -
           ((C22707 * C2175 + C22699 * C2174 + (C22693 + C22692) * C2173) *
                C51086 +
            (C20462 * C2175 + C22700 * C2174 + (C22690 + C22689) * C2173) *
                C33992) *
               C50963) *
              C507 +
          (((C22691 * C2173 + C22701 * C2174 + C32031 * C2175) * C33992 +
            (C22694 * C2173 + C22702 * C2174 + (C20685 + C20686) * C2175) *
                C51086) *
               C50963 -
           ((C20461 * C2175 + C20462 * C2174 + C22700 * C2173) * C51086 +
            (C20322 * C2175 + (C20310 + C20309) * C2174 +
             (C20308 + C20307) * C2173) *
                C33992) *
               C51152) *
              C508 +
          (((C20319 * C2173 + C20320 * C2174 + (C20314 + C20313) * C2175) *
                C33992 +
            (C22701 * C2173 + C32031 * C2174 + (C20459 + C20460) * C2175) *
                C51086) *
               C51152 -
           ((((C19835 * C20659 + C50862 * C20661) * C50880 +
              (C19835 * C20658 + C50862 * C20660) * C603) *
                 C2175 +
             (C20686 + C20685) * C2174 + C22707 * C2173) *
                C51086 +
            ((C20460 + C20459) * C2175 + C20461 * C2174 + C20462 * C2173) *
                C33992) *
               C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C2173 +
            (C20307 + C20308) * C2174 + C20319 * C2175) *
               C33992 +
           ((C22689 + C22690) * C2173 + C22691 * C2174 + C22701 * C2175) *
               C51086) *
              C1051 -
          ((C22707 * C2175 + C22699 * C2174 + (C22693 + C22692) * C2173) *
               C51086 +
           (C20462 * C2175 + C22700 * C2174 + (C22690 + C22689) * C2173) *
               C33992) *
              C1052 +
          ((C23055 * C2173 + C22694 * C2174 + C22702 * C2175) * C33992 +
           ((C23059 + C23058) * C2173 + C23060 * C2174 +
            (C22714 + C22715) * C2175) *
               C51086) *
              C1053 -
          ((((C19835 * C23051 + C50862 * C23053) * C50880 +
             (C19835 * C23050 + C50862 * C23052) * C603) *
                C2175 +
            (C23073 + C23072) * C2174 + (C23187 + C23186) * C2173) *
               C51086 +
           ((C22715 + C22714) * C2175 + C23057 * C2174 + C23177 * C2173) *
               C33992) *
              C1054) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C256 +
            (C19835 * C136 + C50862 * C146) * C251 -
            (C19835 * C126 + C50862 * C133) * C257 -
            (C19835 * C137 + C50862 * C147) * C252 +
            (C19835 * C127 + C50862 * C134) * C258 +
            (C19835 * C138 + C50862 * C148) * C253) *
               C51010 * C39326 +
           (C22273 + C22274 - C22275 - C22276 + C22277 + C22278) * C51010 *
               C39327 +
           (C22279 + C22280 - C22281 - C22282 + C22283 + C22284) * C51010 *
               C39328 +
           (C39527 + C39528 - C39529 - C39530 + C39537 + C39538) * C51010 *
               C39329) *
              C51152 +
          ((C22275 - (C22274 + C22273) + C22276 - C22277 - C22278) * C51010 *
               C39326 +
           (C22281 - (C22280 + C22279) + C22282 - C22283 - C22284) * C51010 *
               C39327 +
           (C39529 - (C39528 + C39527) + C39530 - C39537 - C39538) * C51010 *
               C39328 +
           ((C19835 * C6009 + C50862 * C6012) * C257 -
            (C23184 * C251 + C23183 * C256) +
            (C19835 * C6014 + C50862 * C6018) * C252 -
            (C19835 * C6010 + C50862 * C6015) * C258 -
            (C19835 * C6016 + C50862 * C6019) * C253) *
               C51010 * C39329) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C51010 * C39326 +
            (C22689 + C22690) * C51010 * C39327 + C23055 * C51010 * C39328 +
            (C23059 + C23058) * C51010 * C39329) *
               C51152 -
           ((C23187 + C23186) * C51010 * C39329 + C23177 * C51010 * C39328 +
            (C22693 + C22692) * C51010 * C39327 +
            (C22690 + C22689) * C51010 * C39326) *
               C50963) *
              C507 +
          ((C22691 * C51010 * C39326 + C22694 * C51010 * C39327 +
            C23060 * C51010 * C39328 + (C23072 + C23073) * C51010 * C39329) *
               C50963 -
           (C23057 * C51010 * C39329 + C22699 * C51010 * C39328 +
            C22700 * C51010 * C39327 + (C20308 + C20307) * C51010 * C39326) *
               C51152) *
              C508 +
          ((C20319 * C51010 * C39326 + C22701 * C51010 * C39327 +
            C22702 * C51010 * C39328 + (C22714 + C22715) * C51010 * C39329) *
               C51152 -
           (((C19835 * C23051 + C50862 * C23053) * C50880 +
             (C19835 * C23050 + C50862 * C23052) * C603) *
                C51010 * C39329 +
            (C22715 + C22714) * C51010 * C39328 + C22707 * C51010 * C39327 +
            C20462 * C51010 * C39326) *
               C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C603 +
            (C19835 * C136 + C50862 * C146) * C50880) *
               C51010 * C39326 +
           (C22689 + C22690) * C51010 * C39327 + C40012 * C39328 +
           C40016 * C39329) *
              C1051 -
          (C40093 * C39329 + C40088 * C39328 +
           (C22693 + C22692) * C51010 * C39327 +
           (C22690 + C22689) * C51010 * C39326) *
              C1052 +
          (C40012 * C39326 + C40016 * C39327 +
           (C23186 + C23187) * C51010 * C39328 +
           (C40096 + C40097) * C51010 * C39329) *
              C1053 -
          (((C19835 * C40083 + C50862 * C40085) * C50880 +
            (C19835 * C40082 + C50862 * C40084) * C603) *
               C51010 * C39329 +
           (C40097 + C40096) * C51010 * C39328 + C40093 * C39327 +
           C40088 * C39326) *
              C1054) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C1174 +
             (C19835 * C136 + C50862 * C146) * C51196 -
             (C19835 * C126 + C50862 * C133) * C1175 -
             (C19835 * C137 + C50862 * C147) * C51181 +
             (C19835 * C127 + C50862 * C134) * C1176 +
             (C19835 * C138 + C50862 * C148) * C1171) *
                C2173 +
            (C20855 + C20856 - C20857 - C20858 + C20859 + C20860) * C2174 +
            (C20861 + C20862 - C20863 - C20864 + C20865 + C20866) * C2175) *
               C33992 +
           ((C23864 + C23865 - C23866 - C23867 + C23868 + C23869) * C2173 +
            (C23334 + C23335 - C23336 - C23337 + C23338 + C23339) * C2174 +
            (C32568 + C32569 - C32570 - C32571 + C32572 + C32573) * C2175) *
               C51086) *
              C1514 +
          (((C23866 - (C23865 + C23864) + C23867 - C23868 - C23869) * C2173 +
            (C23336 - (C23335 + C23334) + C23337 - C23338 - C23339) * C2174 +
            (C32570 - (C32569 + C32568) + C32571 - C32572 - C32573) * C2175) *
               C33992 +
           ((C23872 - (C23871 + C23870) + C23873 - C23874 - C23875) * C2173 +
            (C23342 - (C23341 + C23340) + C23343 - C23344 - C23345) * C2174 +
            (C22441 * C1175 - (C20678 * C51196 + C20677 * C1174) +
             C22442 * C51181 - (C19835 * C3212 + C50862 * C3217) * C1176 -
             (C19835 * C3218 + C50862 * C3221) * C1171) *
                C2175) *
               C51086) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C1174 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C51196 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C1175 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C51181 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C1176 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C1171) *
               C51010 * C33992 +
           ((C34323 + C34324 + C34325) * C1174 +
            (C34326 + C34327 + C34328) * C51196 -
            (C34329 + C34330 + C34331) * C1175 -
            (C34332 + C34333 + C34334) * C51181 +
            (C34335 + C34336 + C34337) * C1176 +
            (C34338 + C34339 + C34340) * C1171) *
               C51010 * C51086) *
              C1514 +
          (((C34331 + C34330 + C34329) * C1175 -
            ((C34328 + C34327 + C34326) * C51196 +
             (C34325 + C34324 + C34323) * C1174) +
            (C34334 + C34333 + C34332) * C51181 -
            (C34337 + C34336 + C34335) * C1176 -
            (C34340 + C34339 + C34338) * C1171) *
               C51010 * C33992 +
           ((C34901 + C34902 + C34903) * C1175 -
            ((C34904 + C34905 + C34906) * C51196 +
             (C34907 + C34908 + C34909) * C1174) +
            (C34910 + C34911 + C34912) * C51181 -
            (C17053 * C855 + C17048 * C864 + C17052 * C854 + C17047 * C859 +
             C17051 * C853 + C17046 * C858) *
                C1176 -
            (C17053 * C865 + C17048 * C870 + C17052 * C863 + C17047 * C869 +
             C17051 * C862 + C17046 * C868) *
                C1171) *
               C51010 * C51086) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C1174 +
            (C19835 * C136 + C50862 * C146) * C51196 -
            (C19835 * C126 + C50862 * C133) * C1175 -
            (C19835 * C137 + C50862 * C147) * C51181 +
            (C19835 * C127 + C50862 * C134) * C1176 +
            (C19835 * C138 + C50862 * C148) * C1171) *
               C51010 * C39326 +
           (C23864 + C23865 - C23866 - C23867 + C23868 + C23869) * C51010 *
               C39327 +
           (C23870 + C23871 - C23872 - C23873 + C23874 + C23875) * C51010 *
               C39328 +
           (C40522 + C40523 - C40524 - C40525 + C40526 + C40527) * C51010 *
               C39329) *
              C1514 +
          ((C23866 - (C23865 + C23864) + C23867 - C23868 - C23869) * C51010 *
               C39326 +
           (C23872 - (C23871 + C23870) + C23873 - C23874 - C23875) * C51010 *
               C39327 +
           (C40524 - (C40523 + C40522) + C40525 - C40526 - C40527) * C51010 *
               C39328 +
           (C39908 * C1175 - (C23184 * C51196 + C23183 * C1174) +
            C39909 * C51181 - (C19835 * C6010 + C50862 * C6015) * C1176 -
            (C19835 * C6016 + C50862 * C6019) * C1171) *
               C51010 * C39329) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C1280 +
              (C19835 * C136 + C50862 * C146) * C1275 -
              (C19835 * C126 + C50862 * C133) * C1281 -
              (C19835 * C137 + C50862 * C147) * C50885) *
                 C2173 +
             (C20971 + C20972 - C20973 - C20974) * C2174 + C20991 * C2175) *
                C33992 +
            ((C23694 + C23695 - C23696 - C23697) * C2173 + C23714 * C2174 +
             C32722 * C2175) *
                C51086) *
               C1514 +
           (((C23696 - (C23695 + C23694) + C23697) * C2173 + C23716 * C2174 +
             C32919 * C2175) *
                C33992 +
            ((C23701 - (C23700 + C23699) + C23702) * C2173 + C23717 * C2174 +
             (C23496 - (C23497 + C23498) + C23499) * C2175) *
                C51086) *
               C50963) *
              C51151 +
          ((((C20973 - (C20972 + C20971) + C20974) * C2173 +
             (C20977 - (C20976 + C20975) + C20978) * C2174 +
             (C20981 - (C20980 + C20979) + C20982) * C2175) *
                C33992 +
            (C23716 * C2173 + C32919 * C2174 +
             (C21151 - (C21137 + C21138) + C21152) * C2175) *
                C51086) *
               C1514 +
           ((C23714 * C2173 + C32722 * C2174 +
             (C21138 + C21137 - C21151 - C21152) * C2175) *
                C33992 +
            (C23715 * C2173 + (C23498 + C23497 - C23496 - C23499) * C2174 +
             (C20679 * C1280 + C20680 * C1275 -
              (C19835 * C3368 + C50862 * C3372) * C1281 -
              (C19835 * C3370 + C50862 * C3374) * C50885) *
                 C2175) *
                C51086) *
               C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C1280 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C1275 -
             (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
              C17051 * C126 + C17046 * C133) *
                 C1281 -
             (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
              C17051 * C137 + C17046 * C147) *
                 C50885) *
                C51010 * C33992 +
            ((C34323 + C34324 + C34325) * C1280 +
             (C34326 + C34327 + C34328) * C1275 -
             (C34329 + C34330 + C34331) * C1281 -
             (C34332 + C34333 + C34334) * C50885) *
                C51010 * C51086) *
               C1514 +
           (((C34331 + C34330 + C34329) * C1281 -
             ((C34328 + C34327 + C34326) * C1275 +
              (C34325 + C34324 + C34323) * C1280) +
             (C34334 + C34333 + C34332) * C50885) *
                C51010 * C33992 +
            ((C34901 + C34902 + C34903) * C1281 -
             ((C34904 + C34905 + C34906) * C1275 +
              (C34907 + C34908 + C34909) * C1280) +
             (C34910 + C34911 + C34912) * C50885) *
                C51010 * C51086) *
               C50963) *
              C51151 +
          ((((C17245 + C17244 + C17243) * C1281 -
             ((C17242 + C17241 + C17240) * C1275 +
              (C17239 + C17238 + C17237) * C1280) +
             (C17248 + C17247 + C17246) * C50885) *
                C51010 * C33992 +
            ((C18787 + C18788 + C18789) * C1281 -
             ((C17869 + C17870 + C17871) * C1275 +
              (C17872 + C17873 + C17874) * C1280) +
             (C18790 + C18791 + C18792) * C50885) *
                C51010 * C51086) *
               C1514 +
           (((C17874 + C17873 + C17872) * C1280 +
             (C17871 + C17870 + C17869) * C1275 -
             (C18789 + C18788 + C18787) * C1281 -
             (C18792 + C18791 + C18790) * C50885) *
                C51010 * C33992 +
            ((C18185 + C18186 + C18187) * C1280 +
             (C18188 + C18189 + C18190) * C1275 -
             (C17053 * C969 + C17048 * C977 + C17052 * C970 + C17047 * C978 +
              C17051 * C971 + C17046 * C979) *
                 C1281 -
             (C17053 * C973 + C17048 * C981 + C17052 * C974 + C17047 * C982 +
              C17051 * C975 + C17046 * C983) *
                 C50885) *
                C51010 * C51086) *
               C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C1280 +
             (C19835 * C136 + C50862 * C146) * C1275 -
             (C19835 * C126 + C50862 * C133) * C1281 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C51010 * C39326 +
            (C23694 + C23695 - C23696 - C23697) * C51010 * C39327 +
            C24223 * C51010 * C39328 +
            (C24220 + C24219 - C24218 - C24221) * C51010 * C39329) *
               C1514 +
           ((C23696 - (C23695 + C23694) + C23697) * C51010 * C39326 +
            (C23701 - (C23700 + C23699) + C23702) * C51010 * C39327 +
            (C24218 - (C24219 + C24220) + C24221) * C51010 * C39328 +
            (C39908 * C1281 - (C23184 * C1275 + C23183 * C1280) +
             C39909 * C50885) *
                C51010 * C39329) *
               C50963) *
              C51151 +
          (((C20973 - (C20972 + C20971) + C20974) * C51010 * C39326 +
            C23716 * C51010 * C39327 + C23717 * C51010 * C39328 +
            (C23706 - (C23707 + C23708) + C23709) * C51010 * C39329) *
               C1514 +
           (C23714 * C51010 * C39326 + C23715 * C51010 * C39327 +
            (C23708 + C23707 - C23706 - C23709) * C51010 * C39328 +
            (C23068 * C1280 + C23069 * C1275 -
             (C19835 * C6202 + C50862 * C6206) * C1281 -
             (C19835 * C6204 + C50862 * C6208) * C50885) *
                C51010 * C39329) *
               C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C1280 +
             (C19835 * C136 + C50862 * C146) * C1275 -
             (C19835 * C126 + C50862 * C133) * C1281 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C2173 +
            (C20971 + C20972 - C20973 - C20974) * C2174 + C20991 * C2175) *
               C33992 +
           ((C23694 + C23695 - C23696 - C23697) * C2173 + C23714 * C2174 +
            C32722 * C2175) *
               C51086) *
              C51198 +
          (((C23696 - (C23695 + C23694) + C23697) * C2173 + C23716 * C2174 +
            C32919 * C2175) *
               C33992 +
           ((C23701 - (C23700 + C23699) + C23702) * C2173 + C23717 * C2174 +
            (C23496 - (C23497 + C23498) + C23499) * C2175) *
               C51086) *
              C51187 +
          ((C24223 * C2173 + C23715 * C2174 +
            (C23498 + C23497 - C23496 - C23499) * C2175) *
               C33992 +
           ((C24220 + C24219 - C24218 - C24221) * C2173 +
            (C23708 + C23707 - C23706 - C23709) * C2174 +
            (C22710 * C1280 + C22711 * C1275 -
             (C19835 * C3498 + C50862 * C3504) * C1281 -
             (C19835 * C3502 + C50862 * C3510) * C50885) *
                C2175) *
               C51086) *
              C1746) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C1280 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C1275 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C1281 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C50885) *
               C51010 * C33992 +
           ((C34323 + C34324 + C34325) * C1280 +
            (C34326 + C34327 + C34328) * C1275 -
            (C34329 + C34330 + C34331) * C1281 -
            (C34332 + C34333 + C34334) * C50885) *
               C51010 * C51086) *
              C51198 +
          (((C34331 + C34330 + C34329) * C1281 -
            ((C34328 + C34327 + C34326) * C1275 +
             (C34325 + C34324 + C34323) * C1280) +
            (C34334 + C34333 + C34332) * C50885) *
               C51010 * C33992 +
           ((C34901 + C34902 + C34903) * C1281 -
            ((C34904 + C34905 + C34906) * C1275 +
             (C34907 + C34908 + C34909) * C1280) +
            (C34910 + C34911 + C34912) * C50885) *
               C51010 * C51086) *
              C51187 +
          (((C34909 + C34908 + C34907) * C1280 +
            (C34906 + C34905 + C34904) * C1275 -
            (C34903 + C34902 + C34901) * C1281 -
            (C34912 + C34911 + C34910) * C50885) *
               C51010 * C33992 +
           ((C35169 + C35170 + C35171) * C1280 +
            (C35172 + C35173 + C35174) * C1275 -
            (C17053 * C1055 + C17048 * C1063 + C17052 * C1056 + C17047 * C1064 +
             C17051 * C1057 + C17046 * C1065) *
                C1281 -
            (C17053 * C1059 + C17048 * C1067 + C17052 * C1060 + C17047 * C1068 +
             C17051 * C1061 + C17046 * C1069) *
                C50885) *
               C51010 * C51086) *
              C1746) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C1280 +
            (C19835 * C136 + C50862 * C146) * C1275 -
            (C19835 * C126 + C50862 * C133) * C1281 -
            (C19835 * C137 + C50862 * C147) * C50885) *
               C51010 * C39326 +
           (C23694 + C23695 - C23696 - C23697) * C51010 * C39327 +
           C40756 * C39328 + C40764 * C39329) *
              C51198 +
          ((C23696 - (C23695 + C23694) + C23697) * C51010 * C39326 +
           (C23701 - (C23700 + C23699) + C23702) * C51010 * C39327 +
           (C24218 - (C24219 + C24220) + C24221) * C51010 * C39328 +
           (C40758 - (C40759 + C40760) + C40761) * C51010 * C39329) *
              C51187 +
          (C40756 * C39326 + C40764 * C39327 +
           (C40760 + C40759 - C40758 - C40761) * C51010 * C39328 +
           (C40094 * C1280 + C40095 * C1275 -
            (C19835 * C6330 + C50862 * C6334) * C1281 -
            (C19835 * C6332 + C50862 * C6336) * C50885) *
               C51010 * C39329) *
              C1746) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C50007 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C51143 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C50000 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C50885) *
               C51010 * C33992 +
           ((C34323 + C34324 + C34325) * C50007 +
            (C34326 + C34327 + C34328) * C51143 -
            (C34329 + C34330 + C34331) * C50000 -
            (C34332 + C34333 + C34334) * C50885) *
               C51010 * C51086) *
              C50951 * C507 +
          (((C17245 + C17244 + C17243) * C50000 -
            ((C17242 + C17241 + C17240) * C51143 +
             (C17239 + C17238 + C17237) * C50007) +
            (C17248 + C17247 + C17246) * C50885) *
               C51010 * C33992 +
           ((C18787 + C18788 + C18789) * C50000 -
            ((C17869 + C17870 + C17871) * C51143 +
             (C17872 + C17873 + C17874) * C50007) +
            (C18790 + C18791 + C18792) * C50885) *
               C51010 * C51086) *
              C50951 * C508 +
          (((C17579 + C17578 + C17577) * C50007 +
            (C17576 + C17575 + C17574) * C51143 -
            (C17573 + C17572 + C17571) * C50000 -
            (C17582 + C17581 + C17580) * C50885) *
               C51010 * C33992 +
           ((C17875 + C17876 + C17877) * C50007 +
            (C17878 + C17879 + C17880) * C51143 -
            (C17053 * C722 + C17048 * C738 + C17052 * C723 + C17047 * C739 +
             C17051 * C724 + C17046 * C740) *
                C50000 -
            (C17053 * C734 + C17048 * C746 + C17052 * C735 + C17047 * C747 +
             C17051 * C736 + C17046 * C748) *
                C50885) *
               C51010 * C51086) *
              C50951 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
            C17053 * C127 + C17048 * C134) *
               C121 +
           (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
            C17053 * C138 + C17048 * C148) *
               C109 -
           (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
            C17051 * C126 + C17046 * C133) *
               C122 -
           (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
            C17051 * C137 + C17046 * C147) *
               C110 +
           (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
            C17053 * C129 + C17048 * C140) *
               C123 +
           (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
            C17053 * C141 + C17048 * C150) *
               C111 -
           (C17053 * C130 + C17048 * C142 + C17052 * C129 + C17047 * C140 +
            C17051 * C128 + C17046 * C135) *
               C124 -
           (C17053 * C143 + C17048 * C151 + C17052 * C141 + C17047 * C150 +
            C17051 * C139 + C17046 * C149) *
               C112) *
              C51010 * C33992 +
          ((C17051 * C387 + C17046 * C397 + C17052 * C383 + C17047 * C389 +
            C17053 * C384 + C17048 * C390) *
               C121 +
           (C17051 * C396 + C17046 * C404 + C17052 * C395 + C17047 * C403 +
            C17053 * C394 + C17048 * C402) *
               C109 -
           (C17053 * C385 + C17048 * C391 + C17052 * C384 + C17047 * C390 +
            C17051 * C383 + C17046 * C389) *
               C122 -
           (C17053 * C393 + C17048 * C401 + C17052 * C394 + C17047 * C402 +
            C17051 * C395 + C17046 * C403) *
               C110 +
           (C17051 * C384 + C17046 * C390 + C17052 * C385 + C17047 * C391 +
            C17053 * C386 + C17048 * C392) *
               C123 +
           (C17051 * C394 + C17046 * C402 + C17052 * C393 + C17047 * C401 +
            C17053 * C398 + C17048 * C405) *
               C111 -
           (C17053 * C388 + C17048 * C399 + C17052 * C386 + C17047 * C392 +
            C17051 * C385 + C17046 * C391) *
               C124 -
           (C17053 * C400 + C17048 * C406 + C17052 * C398 + C17047 * C405 +
            C17051 * C393 + C17046 * C401) *
               C112) *
              C51010 * C51086) *
         C50951 * C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C121 +
            (C19835 * C136 + C50862 * C146) * C109 -
            (C19835 * C126 + C50862 * C133) * C122 -
            (C19835 * C137 + C50862 * C147) * C110 +
            (C19835 * C127 + C50862 * C134) * C123 +
            (C19835 * C138 + C50862 * C148) * C111 -
            (C19835 * C128 + C50862 * C135) * C124 -
            (C19835 * C139 + C50862 * C149) * C112) *
               C2173 +
           (C19971 * C121 + C19972 * C109 - C19973 * C122 - C19974 * C110 +
            C19975 * C123 + C19976 * C111 -
            (C19835 * C261 + C50862 * C267) * C124 -
            (C19835 * C269 + C50862 * C277) * C112) *
               C2174 +
           (C19977 * C121 + C19978 * C109 - C19979 * C122 - C19980 * C110 +
            C19981 * C123 + C19982 * C111 -
            (C19835 * C515 + C50862 * C520) * C124 -
            (C19835 * C524 + C50862 * C530) * C112) *
               C2175) *
              C33992 +
          ((C22261 * C121 + C22262 * C109 - C22263 * C122 - C22264 * C110 +
            C22265 * C123 + C22266 * C111 -
            (C19835 * C385 + C50862 * C391) * C124 -
            (C19835 * C393 + C50862 * C401) * C112) *
               C2173 +
           (C20450 * C121 + C20449 * C109 - C21141 * C122 - C21142 * C110 +
            C22079 * C123 + C22080 * C111 -
            (C19835 * C721 + C50862 * C729) * C124 -
            (C19835 * C733 + C50862 * C745) * C112) *
               C2174 +
           (C20448 * C121 + C20447 * C109 - C21143 * C122 - C21144 * C110 +
            C31488 * C123 + C31489 * C111 -
            (C19835 * C722 + C50862 * C738) * C124 -
            (C19835 * C734 + C50862 * C746) * C112) *
               C2175) *
              C51086) *
         C50951 * C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C50007 +
             (C19835 * C136 + C50862 * C146) * C51143 -
             (C19835 * C126 + C50862 * C133) * C50000 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C2173 +
            (C20203 + C20204 - C20205 - C20206) * C2174 + C20235 * C2175) *
               C33992 +
           ((C22862 + C22863 - C22864 - C22865) * C2173 + C24426 * C2174 +
            C31786 * C2175) *
               C51086) *
              C50951 * C507 +
          (((C20205 - (C20204 + C20203) + C20206) * C2173 +
            (C20209 - (C20208 + C20207) + C20210) * C2174 +
            (C20213 - (C20212 + C20211) + C20214) * C2175) *
               C33992 +
           (C24427 * C2173 + C33602 * C2174 +
            (C21617 - (C21618 + C21619) + C21620) * C2175) *
               C51086) *
              C50951 * C508 +
          ((C20235 * C2173 + C20236 * C2174 +
            (C20233 + C20232 - C20231 - C20234) * C2175) *
               C33992 +
           (C31786 * C2173 + (C21619 + C21618 - C21617 - C21620) * C2174 +
            (C20451 * C50007 + C20452 * C51143 -
             (C19835 * C3009 + C50862 * C3017) * C50000 -
             (C19835 * C3015 + C50862 * C3021) * C50885) *
                C2175) *
               C51086) *
              C50951 * C509)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19835 * C125 + C50862 * C132) * C121 +
           (C19835 * C136 + C50862 * C146) * C109 -
           (C19835 * C126 + C50862 * C133) * C122 -
           (C19835 * C137 + C50862 * C147) * C110 +
           (C19835 * C127 + C50862 * C134) * C123 +
           (C19835 * C138 + C50862 * C148) * C111 -
           (C19835 * C128 + C50862 * C135) * C124 -
           (C19835 * C139 + C50862 * C149) * C112) *
              C51010 * C39326 +
          (C22261 * C121 + C22262 * C109 - C22263 * C122 - C22264 * C110 +
           C22265 * C123 + C22266 * C111 -
           (C19835 * C385 + C50862 * C391) * C124 -
           (C19835 * C393 + C50862 * C401) * C112) *
              C51010 * C39327 +
          (C22267 * C121 + C22268 * C109 - C22269 * C122 - C22270 * C110 +
           C22271 * C123 + C22272 * C111 -
           (C19835 * C854 + C50862 * C859) * C124 -
           (C19835 * C863 + C50862 * C869) * C112) *
              C51010 * C39328 +
          (C22889 * C121 + C22888 * C109 - C22887 * C122 - C22890 * C110 +
           (C19835 * C1056 + C50862 * C1064) * C123 +
           (C19835 * C1060 + C50862 * C1068) * C111 -
           (C19835 * C1055 + C50862 * C1063) * C124 -
           (C19835 * C1059 + C50862 * C1067) * C112) *
              C51010 * C39329) *
         C50951 * C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C50007 +
            (C19835 * C136 + C50862 * C146) * C51143 -
            (C19835 * C126 + C50862 * C133) * C50000 -
            (C19835 * C137 + C50862 * C147) * C50885) *
               C51010 * C39326 +
           (C22862 + C22863 - C22864 - C22865) * C51010 * C39327 +
           C22901 * C51010 * C39328 +
           (C22897 + C22896 - C22895 - C22898) * C51010 * C39329) *
              C50951 * C507 +
          ((C20205 - (C20204 + C20203) + C20206) * C51010 * C39326 +
           C24427 * C51010 * C39327 + C24428 * C51010 * C39328 +
           (C22899 - (C22881 + C22882) + C22900) * C51010 * C39329) *
              C50951 * C508 +
          (C20235 * C51010 * C39326 + C31786 * C51010 * C39327 +
           (C22438 + C22437 - C22443 - C22444) * C51010 * C39328 +
           (C22710 * C50007 + C22711 * C51143 -
            (C19835 * C3498 + C50862 * C3504) * C50000 -
            (C19835 * C3502 + C50862 * C3510) * C50885) *
               C51010 * C39329) *
              C50951 * C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C603 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C50880) *
               C51010 * C33992 +
           ((C34323 + C34324 + C34325) * C603 +
            (C34326 + C34327 + C34328) * C50880) *
               C51010 * C51086) *
              C50951 * C599 -
          (((C17869 + C17870 + C17871) * C50880 +
            (C17872 + C17873 + C17874) * C603) *
               C51010 * C51086 +
           ((C17242 + C17241 + C17240) * C50880 +
            (C17239 + C17238 + C17237) * C603) *
               C51010 * C33992) *
              C50951 * C600 +
          (((C17579 + C17578 + C17577) * C603 +
            (C17576 + C17575 + C17574) * C50880) *
               C51010 * C33992 +
           ((C17875 + C17876 + C17877) * C603 +
            (C17878 + C17879 + C17880) * C50880) *
               C51010 * C51086) *
              C50951 * C601 -
          (((C17053 * C4009 + C17048 * C4010 + C17052 * C3014 + C17047 * C3020 +
             C17051 * C3013 + C17046 * C3019) *
                C50880 +
            (C17053 * C4007 + C17048 * C4008 + C17052 * C3008 + C17047 * C3012 +
             C17051 * C3007 + C17046 * C3011) *
                C603) *
               C51010 * C51086 +
           ((C17698 + C17697 + C17696) * C50880 +
            (C17695 + C17694 + C17693) * C603) *
               C51010 * C33992) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C256 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C251 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C257 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C252 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C258 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C253) *
               C51010 * C33992 +
           ((C17051 * C387 + C17046 * C397 + C17052 * C383 + C17047 * C389 +
             C17053 * C384 + C17048 * C390) *
                C256 +
            (C17051 * C396 + C17046 * C404 + C17052 * C395 + C17047 * C403 +
             C17053 * C394 + C17048 * C402) *
                C251 -
            (C17053 * C385 + C17048 * C391 + C17052 * C384 + C17047 * C390 +
             C17051 * C383 + C17046 * C389) *
                C257 -
            (C17053 * C393 + C17048 * C401 + C17052 * C394 + C17047 * C402 +
             C17051 * C395 + C17046 * C403) *
                C252 +
            (C17051 * C384 + C17046 * C390 + C17052 * C385 + C17047 * C391 +
             C17053 * C386 + C17048 * C392) *
                C258 +
            (C17051 * C394 + C17046 * C402 + C17052 * C393 + C17047 * C401 +
             C17053 * C398 + C17048 * C405) *
                C253) *
               C51010 * C51086) *
              C50951 * C51151 +
          (((C17245 + C17244 + C17243) * C257 -
            ((C17242 + C17241 + C17240) * C251 +
             (C17239 + C17238 + C17237) * C256) +
            (C17248 + C17247 + C17246) * C252 -
            (C17251 + C17250 + C17249) * C258 -
            (C17254 + C17253 + C17252) * C253) *
               C51010 * C33992 +
           ((C18787 + C18788 + C18789) * C257 -
            ((C17869 + C17870 + C17871) * C251 +
             (C17872 + C17873 + C17874) * C256) +
            (C18790 + C18791 + C18792) * C252 -
            (C17053 * C1412 + C17048 * C1413 + C17052 * C721 + C17047 * C729 +
             C17051 * C720 + C17046 * C728) *
                C258 -
            (C17053 * C1414 + C17048 * C1415 + C17052 * C733 + C17047 * C745 +
             C17051 * C732 + C17046 * C744) *
                C253) *
               C51010 * C51086) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C256 +
             (C19835 * C136 + C50862 * C146) * C251 -
             (C19835 * C126 + C50862 * C133) * C257 -
             (C19835 * C137 + C50862 * C147) * C252 +
             (C19835 * C127 + C50862 * C134) * C258 +
             (C19835 * C138 + C50862 * C148) * C253) *
                C2173 +
            (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C2174 +
            (C19995 + C19996 - C19997 - C19998 + C19999 + C20000) * C2175) *
               C33992 +
           ((C22273 + C22274 - C22275 - C22276 + C22277 + C22278) * C2173 +
            (C22061 + C22062 - C22063 - C22064 + C22085 + C22086) * C2174 +
            (C31480 + C31481 - C31482 - C31483 + C31490 + C31491) * C2175) *
               C51086) *
              C50951 * C51151 +
          (((C19991 - (C19990 + C19989) + C19992 - C19993 - C19994) * C2173 +
            (C19997 - (C19996 + C19995) + C19998 - C19999 - C20000) * C2174 +
            (C20003 - (C20002 + C20001) + C20004 - C20005 - C20006) * C2175) *
               C33992 +
           ((C22063 - (C22062 + C22061) + C22064 - C22085 - C22086) * C2173 +
            (C31482 - (C31481 + C31480) + C31483 - C31490 - C31491) * C2174 +
            (C21145 * C257 - (C20445 * C251 + C20446 * C256) + C21146 * C252 -
             (C19835 * C4007 + C50862 * C4008) * C258 -
             (C19835 * C4009 + C50862 * C4010) * C253) *
                C2175) *
               C51086) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C2173 +
            (C20307 + C20308) * C2174 + C20319 * C2175) *
               C33992 +
           ((C22689 + C22690) * C2173 + C22691 * C2174 + C22701 * C2175) *
               C51086) *
              C50951 * C599 -
          ((C20461 * C2175 + C20462 * C2174 + C22700 * C2173) * C51086 +
           (C20322 * C2175 + (C20310 + C20309) * C2174 +
            (C20308 + C20307) * C2173) *
               C33992) *
              C50951 * C600 +
          ((C20319 * C2173 + C20320 * C2174 + (C20314 + C20313) * C2175) *
               C33992 +
           (C22701 * C2173 + C32031 * C2174 + (C20459 + C20460) * C2175) *
               C51086) *
              C50951 * C601 -
          ((((C19835 * C20425 + C50862 * C20427) * C50880 +
             (C19835 * C20424 + C50862 * C20426) * C603) *
                C2175 +
            (C20460 + C20459) * C2174 + C20461 * C2173) *
               C51086 +
           ((C20326 + C20325) * C2175 + C20321 * C2174 + C20322 * C2173) *
               C33992) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C256 +
            (C19835 * C136 + C50862 * C146) * C251 -
            (C19835 * C126 + C50862 * C133) * C257 -
            (C19835 * C137 + C50862 * C147) * C252 +
            (C19835 * C127 + C50862 * C134) * C258 +
            (C19835 * C138 + C50862 * C148) * C253) *
               C51010 * C39326 +
           (C22273 + C22274 - C22275 - C22276 + C22277 + C22278) * C51010 *
               C39327 +
           (C22279 + C22280 - C22281 - C22282 + C22283 + C22284) * C51010 *
               C39328 +
           (C22889 * C256 + C22888 * C251 - C22887 * C257 - C22890 * C252 +
            (C19835 * C1056 + C50862 * C1064) * C258 +
            (C19835 * C1060 + C50862 * C1068) * C253) *
               C51010 * C39329) *
              C50951 * C51151 +
          ((C19991 - (C19990 + C19989) + C19992 - C19993 - C19994) * C51010 *
               C39326 +
           (C22063 - (C22062 + C22061) + C22064 - C22085 - C22086) * C51010 *
               C39327 +
           (C22087 - (C22070 + C22069) + C22088 - C22089 - C22090) * C51010 *
               C39328 +
           (C22891 * C257 - (C22708 * C251 + C22709 * C256) + C22892 * C252 -
            (C19835 * C6842 + C50862 * C6843) * C258 -
            (C19835 * C6844 + C50862 * C6845) * C253) *
               C51010 * C39329) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C603 +
            (C19835 * C136 + C50862 * C146) * C50880) *
               C51010 * C39326 +
           (C22689 + C22690) * C51010 * C39327 + C23055 * C51010 * C39328 +
           (C23059 + C23058) * C51010 * C39329) *
              C50951 * C599 -
          (C23057 * C51010 * C39329 + C22699 * C51010 * C39328 +
           C22700 * C51010 * C39327 + (C20308 + C20307) * C51010 * C39326) *
              C50951 * C600 +
          (C20319 * C51010 * C39326 + C22701 * C51010 * C39327 +
           C22702 * C51010 * C39328 + (C22714 + C22715) * C51010 * C39329) *
              C50951 * C601 -
          (((C19835 * C20753 + C50862 * C20755) * C50880 +
            (C19835 * C20752 + C50862 * C20754) * C603) *
               C51010 * C39329 +
           (C20686 + C20685) * C51010 * C39328 + C20461 * C51010 * C39327 +
           C20322 * C51010 * C39326) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C603 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50880) *
                C51010 * C33992 +
            ((C34323 + C34324 + C34325) * C603 +
             (C34326 + C34327 + C34328) * C50880) *
                C51010 * C51086) *
               C51152 -
           (((C17053 * C862 + C17048 * C868 + C17052 * C861 + C17047 * C867 +
              C17051 * C860 + C17046 * C866) *
                 C50880 +
             (C17053 * C853 + C17048 * C858 + C17052 * C852 + C17047 * C857 +
              C17051 * C851 + C17046 * C856) *
                 C603) *
                C51010 * C51086 +
            ((C34328 + C34327 + C34326) * C50880 +
             (C34325 + C34324 + C34323) * C603) *
                C51010 * C33992) *
               C50963) *
              C507 +
          ((((C17874 + C17873 + C17872) * C603 +
             (C17871 + C17870 + C17869) * C50880) *
                C51010 * C33992 +
            ((C18185 + C18186 + C18187) * C603 +
             (C18188 + C18189 + C18190) * C50880) *
                C51010 * C51086) *
               C50963 -
           (((C17869 + C17870 + C17871) * C50880 +
             (C17872 + C17873 + C17874) * C603) *
                C51010 * C51086 +
            ((C17242 + C17241 + C17240) * C50880 +
             (C17239 + C17238 + C17237) * C603) *
                C51010 * C33992) *
               C51152) *
              C508 +
          ((((C17579 + C17578 + C17577) * C603 +
             (C17576 + C17575 + C17574) * C50880) *
                C51010 * C33992 +
            ((C17875 + C17876 + C17877) * C603 +
             (C17878 + C17879 + C17880) * C50880) *
                C51010 * C51086) *
               C51152 -
           (((C17053 * C3218 + C17048 * C3221 + C17052 * C3216 +
              C17047 * C3220 + C17051 * C3215 + C17046 * C3219) *
                 C50880 +
             (C17053 * C3212 + C17048 * C3217 + C17052 * C3211 +
              C17047 * C3214 + C17051 * C3210 + C17046 * C3213) *
                 C603) *
                C51010 * C51086 +
            ((C17880 + C17879 + C17878) * C50880 +
             (C17877 + C17876 + C17875) * C603) *
                C51010 * C33992) *
               C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C256 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C251 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C257 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C252 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C258 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C253) *
               C51010 * C33992 +
           ((C34323 + C34324 + C34325) * C256 +
            (C34326 + C34327 + C34328) * C251 -
            (C34329 + C34330 + C34331) * C257 -
            (C34332 + C34333 + C34334) * C252 +
            (C34335 + C34336 + C34337) * C258 +
            (C34338 + C34339 + C34340) * C253) *
               C51010 * C51086) *
              C51152 +
          (((C34331 + C34330 + C34329) * C257 -
            ((C34328 + C34327 + C34326) * C251 +
             (C34325 + C34324 + C34323) * C256) +
            (C34334 + C34333 + C34332) * C252 -
            (C34337 + C34336 + C34335) * C258 -
            (C34340 + C34339 + C34338) * C253) *
               C51010 * C33992 +
           ((C17051 * C852 + C17046 * C857 + C17052 * C853 + C17047 * C858 +
             C17053 * C854 + C17048 * C859) *
                C257 -
            ((C17053 * C862 + C17048 * C868 + C17052 * C861 + C17047 * C867 +
              C17051 * C860 + C17046 * C866) *
                 C251 +
             (C17053 * C853 + C17048 * C858 + C17052 * C852 + C17047 * C857 +
              C17051 * C851 + C17046 * C856) *
                 C256) +
            (C17051 * C861 + C17046 * C867 + C17052 * C862 + C17047 * C868 +
             C17053 * C863 + C17048 * C869) *
                C252 -
            (C17053 * C855 + C17048 * C864 + C17052 * C854 + C17047 * C859 +
             C17051 * C853 + C17046 * C858) *
                C258 -
            (C17053 * C865 + C17048 * C870 + C17052 * C863 + C17047 * C869 +
             C17051 * C862 + C17046 * C868) *
                C253) *
               C51010 * C51086) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C256 +
             (C19835 * C136 + C50862 * C146) * C251 -
             (C19835 * C126 + C50862 * C133) * C257 -
             (C19835 * C137 + C50862 * C147) * C252 +
             (C19835 * C127 + C50862 * C134) * C258 +
             (C19835 * C138 + C50862 * C148) * C253) *
                C2173 +
            (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C2174 +
            (C19995 + C19996 - C19997 - C19998 + C19999 + C20000) * C2175) *
               C33992 +
           ((C22273 + C22274 - C22275 - C22276 + C22277 + C22278) * C2173 +
            (C22061 + C22062 - C22063 - C22064 + C22085 + C22086) * C2174 +
            (C31480 + C31481 - C31482 - C31483 + C31490 + C31491) * C2175) *
               C51086) *
              C51152 +
          (((C22275 - (C22274 + C22273) + C22276 - C22277 - C22278) * C2173 +
            (C22063 - (C22062 + C22061) + C22064 - C22085 - C22086) * C2174 +
            (C31482 - (C31481 + C31480) + C31483 - C31490 - C31491) * C2175) *
               C33992 +
           ((C22281 - (C22280 + C22279) + C22282 - C22283 - C22284) * C2173 +
            (C22087 - (C22070 + C22069) + C22088 - C22089 - C22090) * C2174 +
            (C22441 * C257 - (C20678 * C251 + C20677 * C256) + C22442 * C252 -
             (C19835 * C3212 + C50862 * C3217) * C258 -
             (C19835 * C3218 + C50862 * C3221) * C253) *
                C2175) *
               C51086) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C603 +
              (C19835 * C136 + C50862 * C146) * C50880) *
                 C2173 +
             (C20307 + C20308) * C2174 + C20319 * C2175) *
                C33992 +
            ((C22689 + C22690) * C2173 + C22691 * C2174 + C22701 * C2175) *
                C51086) *
               C51152 -
           ((C22707 * C2175 + C22699 * C2174 + (C22693 + C22692) * C2173) *
                C51086 +
            (C20462 * C2175 + C22700 * C2174 + (C22690 + C22689) * C2173) *
                C33992) *
               C50963) *
              C507 +
          (((C22691 * C2173 + C22701 * C2174 + C32031 * C2175) * C33992 +
            (C22694 * C2173 + C22702 * C2174 + (C20685 + C20686) * C2175) *
                C51086) *
               C50963 -
           ((C20461 * C2175 + C20462 * C2174 + C22700 * C2173) * C51086 +
            (C20322 * C2175 + (C20310 + C20309) * C2174 +
             (C20308 + C20307) * C2173) *
                C33992) *
               C51152) *
              C508 +
          (((C20319 * C2173 + C20320 * C2174 + (C20314 + C20313) * C2175) *
                C33992 +
            (C22701 * C2173 + C32031 * C2174 + (C20459 + C20460) * C2175) *
                C51086) *
               C51152 -
           ((((C19835 * C20659 + C50862 * C20661) * C50880 +
              (C19835 * C20658 + C50862 * C20660) * C603) *
                 C2175 +
             (C20686 + C20685) * C2174 + C22707 * C2173) *
                C51086 +
            ((C20460 + C20459) * C2175 + C20461 * C2174 + C20462 * C2173) *
                C33992) *
               C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C256 +
            (C19835 * C136 + C50862 * C146) * C251 -
            (C19835 * C126 + C50862 * C133) * C257 -
            (C19835 * C137 + C50862 * C147) * C252 +
            (C19835 * C127 + C50862 * C134) * C258 +
            (C19835 * C138 + C50862 * C148) * C253) *
               C51010 * C39326 +
           (C22273 + C22274 - C22275 - C22276 + C22277 + C22278) * C51010 *
               C39327 +
           (C22279 + C22280 - C22281 - C22282 + C22283 + C22284) * C51010 *
               C39328 +
           (C39527 + C39528 - C39529 - C39530 + C39537 + C39538) * C51010 *
               C39329) *
              C51152 +
          ((C22275 - (C22274 + C22273) + C22276 - C22277 - C22278) * C51010 *
               C39326 +
           (C22281 - (C22280 + C22279) + C22282 - C22283 - C22284) * C51010 *
               C39327 +
           (C39529 - (C39528 + C39527) + C39530 - C39537 - C39538) * C51010 *
               C39328 +
           ((C19835 * C6009 + C50862 * C6012) * C257 -
            (C23184 * C251 + C23183 * C256) +
            (C19835 * C6014 + C50862 * C6018) * C252 -
            (C19835 * C6010 + C50862 * C6015) * C258 -
            (C19835 * C6016 + C50862 * C6019) * C253) *
               C51010 * C39329) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C51010 * C39326 +
            (C22689 + C22690) * C51010 * C39327 + C23055 * C51010 * C39328 +
            (C23059 + C23058) * C51010 * C39329) *
               C51152 -
           ((C23187 + C23186) * C51010 * C39329 + C23177 * C51010 * C39328 +
            (C22693 + C22692) * C51010 * C39327 +
            (C22690 + C22689) * C51010 * C39326) *
               C50963) *
              C507 +
          ((C22691 * C51010 * C39326 + C22694 * C51010 * C39327 +
            C23060 * C51010 * C39328 + (C23072 + C23073) * C51010 * C39329) *
               C50963 -
           (C23057 * C51010 * C39329 + C22699 * C51010 * C39328 +
            C22700 * C51010 * C39327 + (C20308 + C20307) * C51010 * C39326) *
               C51152) *
              C508 +
          ((C20319 * C51010 * C39326 + C22701 * C51010 * C39327 +
            C22702 * C51010 * C39328 + (C22714 + C22715) * C51010 * C39329) *
               C51152 -
           (((C19835 * C23051 + C50862 * C23053) * C50880 +
             (C19835 * C23050 + C50862 * C23052) * C603) *
                C51010 * C39329 +
            (C22715 + C22714) * C51010 * C39328 + C22707 * C51010 * C39327 +
            C20462 * C51010 * C39326) *
               C50963) *
              C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C1174 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C51196 -
            (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                C1175 -
            (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                C51181 +
            (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                C1176 +
            (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                C1171) *
               C51010 * C51201 +
           ((C28133 + C28134) * C1174 + (C28135 + C28136) * C51196 -
            (C28137 + C28138) * C1175 - (C28139 + C28140) * C51181 +
            (C28141 + C28142) * C1176 + (C28143 + C28144) * C1171) *
               C51010 * C51202 +
           (C45524 * C1174 + C45525 * C51196 - C45526 * C1175 -
            C45527 * C51181 + (C44984 + C44985) * C1176 +
            (C44986 + C44987) * C1171) *
               C51010 * C44682) *
              C50951 * C1172 +
          (((C25025 + C25024) * C1175 -
            ((C25023 + C25022) * C51196 + (C25021 + C25020) * C1174) +
            (C25027 + C25026) * C51181 - (C25029 + C25028) * C1176 -
            (C25031 + C25030) * C1171) *
               C51010 * C51201 +
           (C29916 * C1175 - (C28665 * C51196 + C28666 * C1174) +
            C29919 * C51181 - (C27912 + C27911) * C1176 -
            (C27914 + C27913) * C1171) *
               C51010 * C51202 +
           ((C28904 + C28905) * C1175 - (C29102 * C51196 + C29103 * C1174) +
            (C28906 + C28907) * C51181 -
            (C49954 * C969 + C50867 * C977 + C49961 * C970 + C51138 * C978) *
                C1176 -
            (C49954 * C973 + C50867 * C981 + C49961 * C974 + C51138 * C982) *
                C1171) *
               C51010 * C44682) *
              C50951 * C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C1280 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C1275 -
            (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                C1281 -
            (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                C50885) *
               C51010 * C51201 +
           ((C28133 + C28134) * C1280 + (C28135 + C28136) * C1275 -
            (C28137 + C28138) * C1281 - (C28139 + C28140) * C50885) *
               C51010 * C51202 +
           (C45524 * C1280 + C45525 * C1275 - C45526 * C1281 -
            C45527 * C50885) *
               C51010 * C44682) *
              C50951 * C51197 +
          (((C25025 + C25024) * C1281 -
            ((C25023 + C25022) * C1275 + (C25021 + C25020) * C1280) +
            (C25027 + C25026) * C50885) *
               C51010 * C51201 +
           C29929 * C51010 * C51202 +
           ((C28904 + C28905) * C1281 - (C29102 * C1275 + C29103 * C1280) +
            (C28906 + C28907) * C50885) *
               C51010 * C44682) *
              C50951 * C51184 +
          (C26388 * C51010 * C51201 +
           (C28667 * C1280 + C28668 * C1275 - (C26604 + C26603) * C1281 -
            (C26606 + C26605) * C50885) *
               C51010 * C51202 +
           ((C25988 + C25989) * C1280 + (C25990 + C25991) * C1275 -
            (C49954 * C3212 + C50867 * C3217 + C49961 * C3211 +
             C51138 * C3214) *
                C1281 -
            (C49954 * C3218 + C50867 * C3221 + C49961 * C3216 +
             C51138 * C3220) *
                C50885) *
               C51010 * C44682) *
              C50951 * C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C1280 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C1275 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C1281 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C50885) *
                C51010 * C51201 +
            ((C28133 + C28134) * C1280 + (C28135 + C28136) * C1275 -
             (C28137 + C28138) * C1281 - (C28139 + C28140) * C50885) *
                C51010 * C51202 +
            (C45524 * C1280 + C45525 * C1275 - C45526 * C1281 -
             C45527 * C50885) *
                C51010 * C44682) *
               C51152 +
           (((C28138 + C28137) * C1281 -
             ((C28136 + C28135) * C1275 + (C28134 + C28133) * C1280) +
             (C28140 + C28139) * C50885) *
                C51010 * C51201 +
            ((C28896 + C28897) * C1281 -
             ((C28898 + C28899) * C1275 + (C28900 + C28901) * C1280) +
             (C28902 + C28903) * C50885) *
                C51010 * C51202 +
            ((C45540 + C45541) * C1281 - (C45797 * C1275 + C45798 * C1280) +
             (C45542 + C45543) * C50885) *
                C51010 * C44682) *
               C50963) *
              C1172 +
          ((((C25025 + C25024) * C1281 -
             ((C25023 + C25022) * C1275 + (C25021 + C25020) * C1280) +
             (C25027 + C25026) * C50885) *
                C51010 * C51201 +
            C29929 * C51010 * C51202 +
            ((C28904 + C28905) * C1281 - (C29102 * C1275 + C29103 * C1280) +
             (C28906 + C28907) * C50885) *
                C51010 * C44682) *
               C51152 +
           (C29928 * C51010 * C51201 +
            (C29104 * C1280 + C29105 * C1275 - (C28905 + C28904) * C1281 -
             (C28907 + C28906) * C50885) *
                C51010 * C51202 +
            ((C29118 + C29119) * C1280 + (C29120 + C29121) * C1275 -
             (C49954 * C6842 + C50867 * C6843 + C49961 * C3500 +
              C51138 * C3508) *
                 C1281 -
             (C49954 * C6844 + C50867 * C6845 + C49961 * C3506 +
              C51138 * C3512) *
                 C50885) *
                C51010 * C44682) *
               C50963) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C50007 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C51143 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C50000 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C50885) *
                C51010 * C51201 +
            ((C28133 + C28134) * C50007 + (C28135 + C28136) * C51143 -
             (C28137 + C28138) * C50000 - (C28139 + C28140) * C50885) *
                C51010 * C51202 +
            C45547 * C44682) *
               C1514 +
           (((C28138 + C28137) * C50000 -
             ((C28136 + C28135) * C51143 + (C28134 + C28133) * C50007) +
             (C28140 + C28139) * C50885) *
                C51010 * C51201 +
            ((C28896 + C28897) * C50000 -
             ((C28898 + C28899) * C51143 + (C28900 + C28901) * C50007) +
             (C28902 + C28903) * C50885) *
                C51010 * C51202 +
            ((C45540 + C45541) * C50000 - (C45797 * C51143 + C45798 * C50007) +
             (C45542 + C45543) * C50885) *
                C51010 * C44682) *
               C50963) *
              C1172 +
          ((((C25025 + C25024) * C50000 -
             ((C25023 + C25022) * C51143 + (C25021 + C25020) * C50007) +
             (C25027 + C25026) * C50885) *
                C51010 * C51201 +
            C30847 * C51010 * C51202 +
            ((C28904 + C28905) * C50000 - (C29102 * C51143 + C29103 * C50007) +
             (C28906 + C28907) * C50885) *
                C51010 * C44682) *
               C1514 +
           (C30846 * C51010 * C51201 +
            (C29104 * C50007 + C29105 * C51143 - (C28905 + C28904) * C50000 -
             (C28907 + C28906) * C50885) *
                C51010 * C51202 +
            ((C29118 + C29119) * C50007 + (C29120 + C29121) * C51143 -
             (C49954 * C6842 + C50867 * C6843 + C49961 * C3500 +
              C51138 * C3508) *
                 C50000 -
             (C49954 * C6844 + C50867 * C6845 + C49961 * C3506 +
              C51138 * C3512) *
                 C50885) *
                C51010 * C44682) *
               C50963) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C603 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C50880) *
                C51010 * C51201 +
            ((C28133 + C28134) * C603 + (C28135 + C28136) * C50880) * C51010 *
                C51202 +
            C45698 * C44682) *
               C1514 -
           (C45814 * C44682 +
            ((C28898 + C28899) * C50880 + (C28900 + C28901) * C603) * C51010 *
                C51202 +
            ((C28136 + C28135) * C50880 + (C28134 + C28133) * C603) * C51010 *
                C51201) *
               C50963) *
              C51197 +
          ((C28675 * C51010 * C51201 + C29123 * C51010 * C51202 +
            ((C29118 + C29119) * C603 + (C29120 + C29121) * C50880) * C51010 *
                C44682) *
               C50963 -
           (C45696 * C44682 + C28676 * C51010 * C51202 +
            ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C51010 *
                C51201) *
               C1514) *
              C51184 +
          ((C25481 * C51010 * C51201 + C28677 * C51010 * C51202 +
            ((C25988 + C25989) * C603 + (C25990 + C25991) * C50880) * C51010 *
                C44682) *
               C1514 -
           (((C49954 * C3502 + C50867 * C3510 + C49961 * C3503 +
              C51138 * C3511) *
                 C50880 +
             (C49954 * C3498 + C50867 * C3504 + C49961 * C3499 +
              C51138 * C3505) *
                 C603) *
                C51010 * C44682 +
            ((C25991 + C25990) * C50880 + (C25989 + C25988) * C603) * C51010 *
                C51202 +
            C25675 * C51010 * C51201) *
               C50963) *
              C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C603 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C50880) *
                C51010 * C51201 +
            ((C28133 + C28134) * C603 + (C28135 + C28136) * C50880) * C51010 *
                C51202 +
            C45698 * C44682) *
               C51198 -
           (C45814 * C44682 +
            ((C28898 + C28899) * C50880 + (C28900 + C28901) * C603) * C51010 *
                C51202 +
            ((C28136 + C28135) * C50880 + (C28134 + C28133) * C603) * C51010 *
                C51201) *
               C51187 +
           (C45698 * C51201 +
            ((C29262 + C29263) * C603 + (C29264 + C29265) * C50880) * C51010 *
                C51202 +
            ((C45809 + C45810) * C603 + (C45811 + C45812) * C50880) * C51010 *
                C44682) *
               C1746) *
              C1172 +
          ((C28675 * C51010 * C51201 + C29123 * C51010 * C51202 +
            ((C29118 + C29119) * C603 + (C29120 + C29121) * C50880) * C51010 *
                C44682) *
               C51187 -
           (C45696 * C44682 + C28676 * C51010 * C51202 +
            ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C51010 *
                C51201) *
               C51198 -
           (((C49954 * C6204 + C50867 * C6208 + C49961 * C6205 +
              C51138 * C6209) *
                 C50880 +
             (C49954 * C6202 + C50867 * C6206 + C49961 * C6203 +
              C51138 * C6207) *
                 C603) *
                C51010 * C44682 +
            ((C29121 + C29120) * C50880 + (C29119 + C29118) * C603) * C51010 *
                C51202 +
            C45696 * C51201) *
               C1746) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C50007 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C51143 -
            (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                C50000 -
            (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                C50885) *
               C51010 * C51201 +
           ((C28133 + C28134) * C50007 + (C28135 + C28136) * C51143 -
            (C28137 + C28138) * C50000 - (C28139 + C28140) * C50885) *
               C51010 * C51202 +
           ((C28901 + C28900) * C50007 + (C28899 + C28898) * C51143 -
            (C28897 + C28896) * C50000 - (C28903 + C28902) * C50885) *
               C51010 * C44682) *
              C50951 * C507 +
          (((C25025 + C25024) * C50000 -
            ((C25023 + C25022) * C51143 + (C25021 + C25020) * C50007) +
            (C25027 + C25026) * C50885) *
               C51010 * C51201 +
           C30847 * C51010 * C51202 +
           ((C28904 + C28905) * C50000 - (C29102 * C51143 + C29103 * C50007) +
            (C28906 + C28907) * C50885) *
               C51010 * C44682) *
              C50951 * C508 +
          (C25370 * C51010 * C51201 +
           (C28667 * C50007 + C28668 * C51143 - (C26604 + C26603) * C50000 -
            (C26606 + C26605) * C50885) *
               C51010 * C51202 +
           ((C25988 + C25989) * C50007 + (C25990 + C25991) * C51143 -
            (C49954 * C3212 + C50867 * C3217 + C49961 * C3211 +
             C51138 * C3214) *
                C50000 -
            (C49954 * C3218 + C50867 * C3221 + C49961 * C3216 +
             C51138 * C3220) *
                C50885) *
               C51010 * C44682) *
              C50951 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
               C121 +
           (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
               C109 -
           (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
               C122 -
           (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
               C110 +
           (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
               C123 +
           (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
               C111 -
           (C49954 * C129 + C50867 * C140 + C49961 * C128 + C51138 * C135) *
               C124 -
           (C49954 * C141 + C50867 * C150 + C49961 * C139 + C51138 * C149) *
               C112) *
              C51010 * C51201 +
          ((C28133 + C28134) * C121 + (C28135 + C28136) * C109 -
           (C28137 + C28138) * C122 - (C28139 + C28140) * C110 +
           (C28141 + C28142) * C123 + (C28143 + C28144) * C111 -
           (C49954 * C386 + C50867 * C392 + C49961 * C385 + C51138 * C391) *
               C124 -
           (C49954 * C398 + C50867 * C405 + C49961 * C393 + C51138 * C401) *
               C112) *
              C51010 * C51202 +
          ((C28901 + C28900) * C121 + (C28899 + C28898) * C109 -
           (C28897 + C28896) * C122 - (C28903 + C28902) * C110 +
           (C49961 * C853 + C51138 * C858 + C49954 * C854 + C50867 * C859) *
               C123 +
           (C49961 * C862 + C51138 * C868 + C49954 * C863 + C50867 * C869) *
               C111 -
           (C49954 * C855 + C50867 * C864 + C49961 * C854 + C51138 * C859) *
               C124 -
           (C49954 * C865 + C50867 * C870 + C49961 * C863 + C51138 * C869) *
               C112) *
              C51010 * C44682) *
         C50951 * C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C50007 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C51143 -
            (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                C50000 -
            (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                C50885) *
               C51010 * C51201 +
           ((C28133 + C28134) * C50007 + (C28135 + C28136) * C51143 -
            (C28137 + C28138) * C50000 - (C28139 + C28140) * C50885) *
               C51010 * C51202 +
           C45547 * C44682) *
              C848 +
          (((C28138 + C28137) * C50000 -
            ((C28136 + C28135) * C51143 + (C28134 + C28133) * C50007) +
            (C28140 + C28139) * C50885) *
               C51010 * C51201 +
           ((C28896 + C28897) * C50000 -
            ((C28898 + C28899) * C51143 + (C28900 + C28901) * C50007) +
            (C28902 + C28903) * C50885) *
               C51010 * C51202 +
           ((C45540 + C45541) * C50000 -
            ((C29265 + C29264) * C51143 + (C29263 + C29262) * C50007) +
            (C45542 + C45543) * C50885) *
               C51010 * C44682) *
              C849 +
          (C45547 * C51201 +
           ((C29262 + C29263) * C50007 + (C29264 + C29265) * C51143 -
            (C45541 + C45540) * C50000 - (C45543 + C45542) * C50885) *
               C51010 * C51202 +
           ((C49961 * C6008 + C51138 * C6011 + C49954 * C6009 +
             C50867 * C6012) *
                C50007 +
            (C49961 * C6013 + C51138 * C6017 + C49954 * C6014 +
             C50867 * C6018) *
                C51143 -
            (C49954 * C6010 + C50867 * C6015 + C49961 * C6009 +
             C51138 * C6012) *
                C50000 -
            (C49954 * C6016 + C50867 * C6019 + C49961 * C6014 +
             C51138 * C6018) *
                C50885) *
               C51010 * C44682) *
              C850) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C603 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C50880) *
               C51010 * C51201 +
           ((C28133 + C28134) * C603 + (C28135 + C28136) * C50880) * C51010 *
               C51202 +
           ((C28901 + C28900) * C603 + (C28899 + C28898) * C50880) * C51010 *
               C44682) *
              C50951 * C599 -
          (C29122 * C51010 * C44682 + C28676 * C51010 * C51202 +
           ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C51010 *
               C51201) *
              C50951 * C600 +
          (C25481 * C51010 * C51201 + C28677 * C51010 * C51202 +
           ((C25988 + C25989) * C603 + (C25990 + C25991) * C50880) * C51010 *
               C44682) *
              C50951 * C601 -
          (((C49954 * C3370 + C50867 * C3374 + C49961 * C3371 +
             C51138 * C3375) *
                C50880 +
            (C49954 * C3368 + C50867 * C3372 + C49961 * C3369 +
             C51138 * C3373) *
                C603) *
               C51010 * C44682 +
           ((C25670 + C25669) * C50880 + (C25668 + C25667) * C603) * C51010 *
               C51202 +
           C25488 * C51010 * C51201) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C256 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C251 -
            (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                C257 -
            (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                C252 +
            (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                C258 +
            (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                C253) *
               C51010 * C51201 +
           ((C28133 + C28134) * C256 + (C28135 + C28136) * C251 -
            (C28137 + C28138) * C257 - (C28139 + C28140) * C252 +
            (C28141 + C28142) * C258 + (C28143 + C28144) * C253) *
               C51010 * C51202 +
           ((C28901 + C28900) * C256 + (C28899 + C28898) * C251 -
            (C28897 + C28896) * C257 - (C28903 + C28902) * C252 +
            (C49961 * C853 + C51138 * C858 + C49954 * C854 + C50867 * C859) *
                C258 +
            (C49961 * C862 + C51138 * C868 + C49954 * C863 + C50867 * C869) *
                C253) *
               C51010 * C44682) *
              C50951 * C51151 +
          (((C25025 + C25024) * C257 -
            ((C25023 + C25022) * C251 + (C25021 + C25020) * C256) +
            (C25027 + C25026) * C252 - (C25029 + C25028) * C258 -
            (C25031 + C25030) * C253) *
               C51010 * C51201 +
           (C29916 * C257 - (C28665 * C251 + C28666 * C256) + C29919 * C252 -
            (C27912 + C27911) * C258 - (C27914 + C27913) * C253) *
               C51010 * C51202 +
           ((C28904 + C28905) * C257 - (C29102 * C251 + C29103 * C256) +
            (C28906 + C28907) * C252 -
            (C49954 * C969 + C50867 * C977 + C49961 * C970 + C51138 * C978) *
                C258 -
            (C49954 * C973 + C50867 * C981 + C49961 * C974 + C51138 * C982) *
                C253) *
               C51010 * C44682) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C603 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C50880) *
                C51010 * C51201 +
            ((C28133 + C28134) * C603 + (C28135 + C28136) * C50880) * C51010 *
                C51202 +
            C45698 * C44682) *
               C848 -
           (((C29265 + C29264) * C50880 + (C29263 + C29262) * C603) * C51010 *
                C44682 +
            ((C28898 + C28899) * C50880 + (C28900 + C28901) * C603) * C51010 *
                C51202 +
            ((C28136 + C28135) * C50880 + (C28134 + C28133) * C603) * C51010 *
                C51201) *
               C849 +
           (C45698 * C51201 +
            ((C29262 + C29263) * C603 + (C29264 + C29265) * C50880) * C51010 *
                C51202 +
            ((C49961 * C6008 + C51138 * C6011 + C49954 * C6009 +
              C50867 * C6012) *
                 C603 +
             (C49961 * C6013 + C51138 * C6017 + C49954 * C6014 +
              C50867 * C6018) *
                 C50880) *
                C51010 * C44682) *
               C850) *
              C51151 +
          ((C28675 * C51010 * C51201 + C29123 * C51010 * C51202 +
            ((C29118 + C29119) * C603 + (C29120 + C29121) * C50880) * C51010 *
                C44682) *
               C849 -
           (C45696 * C44682 + C28676 * C51010 * C51202 +
            ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C51010 *
                C51201) *
               C848 -
           (((C49954 * C6204 + C50867 * C6208 + C49961 * C6205 +
              C51138 * C6209) *
                 C50880 +
             (C49954 * C6202 + C50867 * C6206 + C49961 * C6203 +
              C51138 * C6207) *
                 C603) *
                C51010 * C44682 +
            ((C29121 + C29120) * C50880 + (C29119 + C29118) * C603) * C51010 *
                C51202 +
            C45696 * C51201) *
               C850) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C603 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C50880) *
                C51010 * C51201 +
            ((C28133 + C28134) * C603 + (C28135 + C28136) * C50880) * C51010 *
                C51202 +
            ((C28901 + C28900) * C603 + (C28899 + C28898) * C50880) * C51010 *
                C44682) *
               C51152 -
           (((C29265 + C29264) * C50880 + (C29263 + C29262) * C603) * C51010 *
                C44682 +
            ((C28898 + C28899) * C50880 + (C28900 + C28901) * C603) * C51010 *
                C51202 +
            ((C28136 + C28135) * C50880 + (C28134 + C28133) * C603) * C51010 *
                C51201) *
               C50963) *
              C507 +
          ((C28675 * C51010 * C51201 + C29123 * C51010 * C51202 +
            ((C29118 + C29119) * C603 + (C29120 + C29121) * C50880) * C51010 *
                C44682) *
               C50963 -
           (C29122 * C51010 * C44682 + C28676 * C51010 * C51202 +
            ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C51010 *
                C51201) *
               C51152) *
              C508 +
          ((C25481 * C51010 * C51201 + C28677 * C51010 * C51202 +
            ((C25988 + C25989) * C603 + (C25990 + C25991) * C50880) * C51010 *
                C44682) *
               C51152 -
           (((C49954 * C3502 + C50867 * C3510 + C49961 * C3503 +
              C51138 * C3511) *
                 C50880 +
             (C49954 * C3498 + C50867 * C3504 + C49961 * C3499 +
              C51138 * C3505) *
                 C603) *
                C51010 * C44682 +
            ((C25991 + C25990) * C50880 + (C25989 + C25988) * C603) * C51010 *
                C51202 +
            C25675 * C51010 * C51201) *
               C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C256 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C251 -
            (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                C257 -
            (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                C252 +
            (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                C258 +
            (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                C253) *
               C51010 * C51201 +
           ((C28133 + C28134) * C256 + (C28135 + C28136) * C251 -
            (C28137 + C28138) * C257 - (C28139 + C28140) * C252 +
            (C28141 + C28142) * C258 + (C28143 + C28144) * C253) *
               C51010 * C51202 +
           ((C28901 + C28900) * C256 + (C28899 + C28898) * C251 -
            (C28897 + C28896) * C257 - (C28903 + C28902) * C252 +
            (C44984 + C44985) * C258 + (C44986 + C44987) * C253) *
               C51010 * C44682) *
              C51152 +
          (((C28138 + C28137) * C257 -
            ((C28136 + C28135) * C251 + (C28134 + C28133) * C256) +
            (C28140 + C28139) * C252 - (C28142 + C28141) * C258 -
            (C28144 + C28143) * C253) *
               C51010 * C51201 +
           ((C28896 + C28897) * C257 -
            ((C28898 + C28899) * C251 + (C28900 + C28901) * C256) +
            (C28902 + C28903) * C252 - (C44985 + C44984) * C258 -
            (C44987 + C44986) * C253) *
               C51010 * C51202 +
           ((C49961 * C1057 + C51138 * C1065 + C49954 * C1056 +
             C50867 * C1064) *
                C257 -
            ((C29265 + C29264) * C251 + (C29263 + C29262) * C256) +
            (C49961 * C1061 + C51138 * C1069 + C49954 * C1060 +
             C50867 * C1068) *
                C252 -
            (C49954 * C1055 + C50867 * C1063 + C49961 * C1056 +
             C51138 * C1064) *
                C258 -
            (C49954 * C1059 + C50867 * C1067 + C49961 * C1060 +
             C51138 * C1068) *
                C253) *
               C51010 * C44682) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C603 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C50880) *
               C51010 * C51201 +
           ((C28133 + C28134) * C603 + (C28135 + C28136) * C50880) * C51010 *
               C51202 +
           C45698 * C44682) *
              C1051 -
          (C45814 * C44682 +
           ((C28898 + C28899) * C50880 + (C28900 + C28901) * C603) * C51010 *
               C51202 +
           ((C28136 + C28135) * C50880 + (C28134 + C28133) * C603) * C51010 *
               C51201) *
              C1052 +
          (C45698 * C51201 +
           ((C29262 + C29263) * C603 + (C29264 + C29265) * C50880) * C51010 *
               C51202 +
           ((C45809 + C45810) * C603 + (C45811 + C45812) * C50880) * C51010 *
               C44682) *
              C1053 -
          (((C49954 * C6332 + C50867 * C6336 + C49961 * C6333 +
             C51138 * C6337) *
                C50880 +
            (C49954 * C6330 + C50867 * C6334 + C49961 * C6331 +
             C51138 * C6335) *
                C603) *
               C51010 * C44682 +
           ((C45812 + C45811) * C50880 + (C45810 + C45809) * C603) * C51010 *
               C51202 +
           C45814 * C51201) *
              C1054) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C1174 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C51196 -
            (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                C1175 -
            (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                C51181 +
            (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                C1176 +
            (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                C1171) *
               C51010 * C51201 +
           ((C28133 + C28134) * C1174 + (C28135 + C28136) * C51196 -
            (C28137 + C28138) * C1175 - (C28139 + C28140) * C51181 +
            (C28141 + C28142) * C1176 + (C28143 + C28144) * C1171) *
               C51010 * C51202 +
           (C45524 * C1174 + C45525 * C51196 - C45526 * C1175 -
            C45527 * C51181 + (C44984 + C44985) * C1176 +
            (C44986 + C44987) * C1171) *
               C51010 * C44682) *
              C1514 +
          (((C28138 + C28137) * C1175 -
            ((C28136 + C28135) * C51196 + (C28134 + C28133) * C1174) +
            (C28140 + C28139) * C51181 - (C28142 + C28141) * C1176 -
            (C28144 + C28143) * C1171) *
               C51010 * C51201 +
           ((C28896 + C28897) * C1175 -
            ((C28898 + C28899) * C51196 + (C28900 + C28901) * C1174) +
            (C28902 + C28903) * C51181 - (C44985 + C44984) * C1176 -
            (C44987 + C44986) * C1171) *
               C51010 * C51202 +
           ((C45540 + C45541) * C1175 - (C45797 * C51196 + C45798 * C1174) +
            (C45542 + C45543) * C51181 -
            (C49954 * C1055 + C50867 * C1063 + C49961 * C1056 +
             C51138 * C1064) *
                C1176 -
            (C49954 * C1059 + C50867 * C1067 + C49961 * C1060 +
             C51138 * C1068) *
                C1171) *
               C51010 * C44682) *
              C50963) *
         C50925) /
        (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C1280 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C1275 -
             (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                 C1281 -
             (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                 C50885) *
                C51010 * C51201 +
            ((C28133 + C28134) * C1280 + (C28135 + C28136) * C1275 -
             (C28137 + C28138) * C1281 - (C28139 + C28140) * C50885) *
                C51010 * C51202 +
            (C45524 * C1280 + C45525 * C1275 - C45526 * C1281 -
             C45527 * C50885) *
                C51010 * C44682) *
               C1514 +
           (((C28138 + C28137) * C1281 -
             ((C28136 + C28135) * C1275 + (C28134 + C28133) * C1280) +
             (C28140 + C28139) * C50885) *
                C51010 * C51201 +
            ((C28896 + C28897) * C1281 -
             ((C28898 + C28899) * C1275 + (C28900 + C28901) * C1280) +
             (C28902 + C28903) * C50885) *
                C51010 * C51202 +
            ((C45540 + C45541) * C1281 - (C45797 * C1275 + C45798 * C1280) +
             (C45542 + C45543) * C50885) *
                C51010 * C44682) *
               C50963) *
              C51151 +
          ((((C25025 + C25024) * C1281 -
             ((C25023 + C25022) * C1275 + (C25021 + C25020) * C1280) +
             (C25027 + C25026) * C50885) *
                C51010 * C51201 +
            C29929 * C51010 * C51202 +
            ((C28904 + C28905) * C1281 - (C29102 * C1275 + C29103 * C1280) +
             (C28906 + C28907) * C50885) *
                C51010 * C44682) *
               C1514 +
           (C29928 * C51010 * C51201 +
            (C29104 * C1280 + C29105 * C1275 - (C28905 + C28904) * C1281 -
             (C28907 + C28906) * C50885) *
                C51010 * C51202 +
            ((C29118 + C29119) * C1280 + (C29120 + C29121) * C1275 -
             (C49954 * C6842 + C50867 * C6843 + C49961 * C3500 +
              C51138 * C3508) *
                 C1281 -
             (C49954 * C6844 + C50867 * C6845 + C49961 * C3506 +
              C51138 * C3512) *
                 C50885) *
                C51010 * C44682) *
               C50963) *
              C50939)) /
        (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C1280 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C1275 -
            (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                C1281 -
            (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                C50885) *
               C51010 * C51201 +
           ((C28133 + C28134) * C1280 + (C28135 + C28136) * C1275 -
            (C28137 + C28138) * C1281 - (C28139 + C28140) * C50885) *
               C51010 * C51202 +
           C46794 * C44682) *
              C51198 +
          (((C28138 + C28137) * C1281 -
            ((C28136 + C28135) * C1275 + (C28134 + C28133) * C1280) +
            (C28140 + C28139) * C50885) *
               C51010 * C51201 +
           ((C28896 + C28897) * C1281 -
            ((C28898 + C28899) * C1275 + (C28900 + C28901) * C1280) +
            (C28902 + C28903) * C50885) *
               C51010 * C51202 +
           ((C45540 + C45541) * C1281 - (C45797 * C1275 + C45798 * C1280) +
            (C45542 + C45543) * C50885) *
               C51010 * C44682) *
              C51187 +
          (C46794 * C51201 +
           ((C29262 + C29263) * C1280 + (C29264 + C29265) * C1275 -
            (C45541 + C45540) * C1281 - (C45543 + C45542) * C50885) *
               C51010 * C51202 +
           ((C45809 + C45810) * C1280 + (C45811 + C45812) * C1275 -
            (C49954 * C6010 + C50867 * C6015 + C49961 * C6009 +
             C51138 * C6012) *
                C1281 -
            (C49954 * C6016 + C50867 * C6019 + C49961 * C6014 +
             C51138 * C6018) *
                C50885) *
               C51010 * C44682) *
              C1746) *
         C50925) /
        (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
               C121 +
           (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
               C109 -
           (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
               C122 -
           (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
               C110 +
           (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
               C123 +
           (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
               C111 -
           (C49954 * C129 + C50867 * C140 + C49961 * C128 + C51138 * C135) *
               C124 -
           (C49954 * C141 + C50867 * C150 + C49961 * C139 + C51138 * C149) *
               C112) *
              C51010 * C51201 +
          ((C28133 + C28134) * C121 + (C28135 + C28136) * C109 -
           (C28137 + C28138) * C122 - (C28139 + C28140) * C110 +
           (C28141 + C28142) * C123 + (C28143 + C28144) * C111 -
           (C49954 * C386 + C50867 * C392 + C49961 * C385 + C51138 * C391) *
               C124 -
           (C49954 * C398 + C50867 * C405 + C49961 * C393 + C51138 * C401) *
               C112) *
              C51010 * C51202 +
          ((C28901 + C28900) * C121 + (C28899 + C28898) * C109 -
           (C28897 + C28896) * C122 - (C28903 + C28902) * C110 +
           (C49961 * C853 + C51138 * C858 + C49954 * C854 + C50867 * C859) *
               C123 +
           (C49961 * C862 + C51138 * C868 + C49954 * C863 + C50867 * C869) *
               C111 -
           (C49954 * C855 + C50867 * C864 + C49961 * C854 + C51138 * C859) *
               C124 -
           (C49954 * C865 + C50867 * C870 + C49961 * C863 + C51138 * C869) *
               C112) *
              C51010 * C44682) *
         C50951 * C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C50007 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C51143 -
            (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                C50000 -
            (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                C50885) *
               C51010 * C51201 +
           ((C28133 + C28134) * C50007 + (C28135 + C28136) * C51143 -
            (C28137 + C28138) * C50000 - (C28139 + C28140) * C50885) *
               C51010 * C51202 +
           ((C28901 + C28900) * C50007 + (C28899 + C28898) * C51143 -
            (C28897 + C28896) * C50000 - (C28903 + C28902) * C50885) *
               C51010 * C44682) *
              C50951 * C507 +
          (((C25025 + C25024) * C50000 -
            ((C25023 + C25022) * C51143 + (C25021 + C25020) * C50007) +
            (C25027 + C25026) * C50885) *
               C51010 * C51201 +
           C30847 * C51010 * C51202 +
           ((C28904 + C28905) * C50000 - (C29102 * C51143 + C29103 * C50007) +
            (C28906 + C28907) * C50885) *
               C51010 * C44682) *
              C50951 * C508 +
          (C25370 * C51010 * C51201 +
           (C28667 * C50007 + C28668 * C51143 - (C26604 + C26603) * C50000 -
            (C26606 + C26605) * C50885) *
               C51010 * C51202 +
           ((C25988 + C25989) * C50007 + (C25990 + C25991) * C51143 -
            (C49954 * C3212 + C50867 * C3217 + C49961 * C3211 +
             C51138 * C3214) *
                C50000 -
            (C49954 * C3218 + C50867 * C3221 + C49961 * C3216 +
             C51138 * C3220) *
                C50885) *
               C51010 * C44682) *
              C50951 * C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C256 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C251 -
            (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                C257 -
            (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                C252 +
            (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                C258 +
            (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                C253) *
               C51010 * C51201 +
           ((C28133 + C28134) * C256 + (C28135 + C28136) * C251 -
            (C28137 + C28138) * C257 - (C28139 + C28140) * C252 +
            (C28141 + C28142) * C258 + (C28143 + C28144) * C253) *
               C51010 * C51202 +
           ((C28901 + C28900) * C256 + (C28899 + C28898) * C251 -
            (C28897 + C28896) * C257 - (C28903 + C28902) * C252 +
            (C49961 * C853 + C51138 * C858 + C49954 * C854 + C50867 * C859) *
                C258 +
            (C49961 * C862 + C51138 * C868 + C49954 * C863 + C50867 * C869) *
                C253) *
               C51010 * C44682) *
              C50951 * C51151 +
          (((C25025 + C25024) * C257 -
            ((C25023 + C25022) * C251 + (C25021 + C25020) * C256) +
            (C25027 + C25026) * C252 - (C25029 + C25028) * C258 -
            (C25031 + C25030) * C253) *
               C51010 * C51201 +
           (C29916 * C257 - (C28665 * C251 + C28666 * C256) + C29919 * C252 -
            (C27912 + C27911) * C258 - (C27914 + C27913) * C253) *
               C51010 * C51202 +
           ((C28904 + C28905) * C257 - (C29102 * C251 + C29103 * C256) +
            (C28906 + C28907) * C252 -
            (C49954 * C969 + C50867 * C977 + C49961 * C970 + C51138 * C978) *
                C258 -
            (C49954 * C973 + C50867 * C981 + C49961 * C974 + C51138 * C982) *
                C253) *
               C51010 * C44682) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C603 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C50880) *
               C51010 * C51201 +
           ((C28133 + C28134) * C603 + (C28135 + C28136) * C50880) * C51010 *
               C51202 +
           ((C28901 + C28900) * C603 + (C28899 + C28898) * C50880) * C51010 *
               C44682) *
              C50951 * C599 -
          (C29122 * C51010 * C44682 + C28676 * C51010 * C51202 +
           ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C51010 *
               C51201) *
              C50951 * C600 +
          (C25481 * C51010 * C51201 + C28677 * C51010 * C51202 +
           ((C25988 + C25989) * C603 + (C25990 + C25991) * C50880) * C51010 *
               C44682) *
              C50951 * C601 -
          (((C49954 * C3370 + C50867 * C3374 + C49961 * C3371 +
             C51138 * C3375) *
                C50880 +
            (C49954 * C3368 + C50867 * C3372 + C49961 * C3369 +
             C51138 * C3373) *
                C603) *
               C51010 * C44682 +
           ((C25670 + C25669) * C50880 + (C25668 + C25667) * C603) * C51010 *
               C51202 +
           C25488 * C51010 * C51201) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                C256 +
            (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                C251 -
            (C49954 * C127 + C50867 * C134 + C49961 * C126 + C51138 * C133) *
                C257 -
            (C49954 * C138 + C50867 * C148 + C49961 * C137 + C51138 * C147) *
                C252 +
            (C49961 * C127 + C51138 * C134 + C49954 * C128 + C50867 * C135) *
                C258 +
            (C49961 * C138 + C51138 * C148 + C49954 * C139 + C50867 * C149) *
                C253) *
               C51010 * C51201 +
           ((C28133 + C28134) * C256 + (C28135 + C28136) * C251 -
            (C28137 + C28138) * C257 - (C28139 + C28140) * C252 +
            (C28141 + C28142) * C258 + (C28143 + C28144) * C253) *
               C51010 * C51202 +
           ((C28901 + C28900) * C256 + (C28899 + C28898) * C251 -
            (C28897 + C28896) * C257 - (C28903 + C28902) * C252 +
            (C44984 + C44985) * C258 + (C44986 + C44987) * C253) *
               C51010 * C44682) *
              C51152 +
          (((C28138 + C28137) * C257 -
            ((C28136 + C28135) * C251 + (C28134 + C28133) * C256) +
            (C28140 + C28139) * C252 - (C28142 + C28141) * C258 -
            (C28144 + C28143) * C253) *
               C51010 * C51201 +
           ((C28896 + C28897) * C257 -
            ((C28898 + C28899) * C251 + (C28900 + C28901) * C256) +
            (C28902 + C28903) * C252 - (C44985 + C44984) * C258 -
            (C44987 + C44986) * C253) *
               C51010 * C51202 +
           ((C49961 * C1057 + C51138 * C1065 + C49954 * C1056 +
             C50867 * C1064) *
                C257 -
            ((C29265 + C29264) * C251 + (C29263 + C29262) * C256) +
            (C49961 * C1061 + C51138 * C1069 + C49954 * C1060 +
             C50867 * C1068) *
                C252 -
            (C49954 * C1055 + C50867 * C1063 + C49961 * C1056 +
             C51138 * C1064) *
                C258 -
            (C49954 * C1059 + C50867 * C1067 + C49961 * C1060 +
             C51138 * C1068) *
                C253) *
               C51010 * C44682) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51138 * C132 + C49954 * C126 + C50867 * C133) *
                 C603 +
             (C49961 * C136 + C51138 * C146 + C49954 * C137 + C50867 * C147) *
                 C50880) *
                C51010 * C51201 +
            ((C28133 + C28134) * C603 + (C28135 + C28136) * C50880) * C51010 *
                C51202 +
            ((C28901 + C28900) * C603 + (C28899 + C28898) * C50880) * C51010 *
                C44682) *
               C51152 -
           (((C29265 + C29264) * C50880 + (C29263 + C29262) * C603) * C51010 *
                C44682 +
            ((C28898 + C28899) * C50880 + (C28900 + C28901) * C603) * C51010 *
                C51202 +
            ((C28136 + C28135) * C50880 + (C28134 + C28133) * C603) * C51010 *
                C51201) *
               C50963) *
              C507 +
          ((C28675 * C51010 * C51201 + C29123 * C51010 * C51202 +
            ((C29118 + C29119) * C603 + (C29120 + C29121) * C50880) * C51010 *
                C44682) *
               C50963 -
           (C29122 * C51010 * C44682 + C28676 * C51010 * C51202 +
            ((C25023 + C25022) * C50880 + (C25021 + C25020) * C603) * C51010 *
                C51201) *
               C51152) *
              C508 +
          ((C25481 * C51010 * C51201 + C28677 * C51010 * C51202 +
            ((C25988 + C25989) * C603 + (C25990 + C25991) * C50880) * C51010 *
                C44682) *
               C51152 -
           (((C49954 * C3502 + C50867 * C3510 + C49961 * C3503 +
              C51138 * C3511) *
                 C50880 +
             (C49954 * C3498 + C50867 * C3504 + C49961 * C3499 +
              C51138 * C3505) *
                 C603) *
                C51010 * C44682 +
            ((C25991 + C25990) * C50880 + (C25989 + C25988) * C603) * C51010 *
                C51202 +
            C25675 * C51010 * C51201) *
               C50963) *
              C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C1174 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C51196 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C1175 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C51181 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C1176 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C1171) *
               C51010 * C33992 +
           ((C34323 + C34324 + C34325) * C1174 +
            (C34326 + C34327 + C34328) * C51196 -
            (C34329 + C34330 + C34331) * C1175 -
            (C34332 + C34333 + C34334) * C51181 +
            (C34335 + C34336 + C34337) * C1176 +
            (C34338 + C34339 + C34340) * C1171) *
               C51010 * C51086) *
              C50951 * C1172 +
          (((C17245 + C17244 + C17243) * C1175 -
            ((C17242 + C17241 + C17240) * C51196 +
             (C17239 + C17238 + C17237) * C1174) +
            (C17248 + C17247 + C17246) * C51181 -
            (C17251 + C17250 + C17249) * C1176 -
            (C17254 + C17253 + C17252) * C1171) *
               C51010 * C33992 +
           ((C18787 + C18788 + C18789) * C1175 -
            ((C17869 + C17870 + C17871) * C51196 +
             (C17872 + C17873 + C17874) * C1174) +
            (C18790 + C18791 + C18792) * C51181 -
            (C17053 * C1412 + C17048 * C1413 + C17052 * C721 + C17047 * C729 +
             C17051 * C720 + C17046 * C728) *
                C1176 -
            (C17053 * C1414 + C17048 * C1415 + C17052 * C733 + C17047 * C745 +
             C17051 * C732 + C17046 * C744) *
                C1171) *
               C51010 * C51086) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C1174 +
             (C19835 * C136 + C50862 * C146) * C51196 -
             (C19835 * C126 + C50862 * C133) * C1175 -
             (C19835 * C137 + C50862 * C147) * C51181 +
             (C19835 * C127 + C50862 * C134) * C1176 +
             (C19835 * C138 + C50862 * C148) * C1171) *
                C2173 +
            (C20855 + C20856 - C20857 - C20858 + C20859 + C20860) * C2174 +
            (C20861 + C20862 - C20863 - C20864 + C20865 + C20866) * C2175) *
               C33992 +
           ((C23864 + C23865 - C23866 - C23867 + C23868 + C23869) * C2173 +
            (C23334 + C23335 - C23336 - C23337 + C23338 + C23339) * C2174 +
            (C32568 + C32569 - C32570 - C32571 + C32572 + C32573) * C2175) *
               C51086) *
              C50951 * C1172 +
          (((C20857 - (C20856 + C20855) + C20858 - C20859 - C20860) * C2173 +
            (C20863 - (C20862 + C20861) + C20864 - C20865 - C20866) * C2174 +
            (C20869 - (C20868 + C20867) + C20870 - C20871 - C20872) * C2175) *
               C33992 +
           ((C23336 - (C23335 + C23334) + C23337 - C23338 - C23339) * C2173 +
            (C32570 - (C32569 + C32568) + C32571 - C32572 - C32573) * C2174 +
            (C21145 * C1175 - (C20445 * C51196 + C20446 * C1174) +
             C21146 * C51181 - (C19835 * C4007 + C50862 * C4008) * C1176 -
             (C19835 * C4009 + C50862 * C4010) * C1171) *
                C2175) *
               C51086) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C1280 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C1275 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C1281 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C50885) *
               C51010 * C33992 +
           ((C34323 + C34324 + C34325) * C1280 +
            (C34326 + C34327 + C34328) * C1275 -
            (C34329 + C34330 + C34331) * C1281 -
            (C34332 + C34333 + C34334) * C50885) *
               C51010 * C51086) *
              C50951 * C51197 +
          (((C17245 + C17244 + C17243) * C1281 -
            ((C17242 + C17241 + C17240) * C1275 +
             (C17239 + C17238 + C17237) * C1280) +
            (C17248 + C17247 + C17246) * C50885) *
               C51010 * C33992 +
           ((C18787 + C18788 + C18789) * C1281 -
            ((C17869 + C17870 + C17871) * C1275 +
             (C17872 + C17873 + C17874) * C1280) +
            (C18790 + C18791 + C18792) * C50885) *
               C51010 * C51086) *
              C50951 * C51184 +
          (((C17579 + C17578 + C17577) * C1280 +
            (C17576 + C17575 + C17574) * C1275 -
            (C17573 + C17572 + C17571) * C1281 -
            (C17582 + C17581 + C17580) * C50885) *
               C51010 * C33992 +
           ((C17875 + C17876 + C17877) * C1280 +
            (C17878 + C17879 + C17880) * C1275 -
            (C17053 * C722 + C17048 * C738 + C17052 * C723 + C17047 * C739 +
             C17051 * C724 + C17046 * C740) *
                C1281 -
            (C17053 * C734 + C17048 * C746 + C17052 * C735 + C17047 * C747 +
             C17051 * C736 + C17046 * C748) *
                C50885) *
               C51010 * C51086) *
              C50951 * C1279)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C1280 +
             (C19835 * C136 + C50862 * C146) * C1275 -
             (C19835 * C126 + C50862 * C133) * C1281 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C2173 +
            (C20971 + C20972 - C20973 - C20974) * C2174 + C20991 * C2175) *
               C33992 +
           ((C23694 + C23695 - C23696 - C23697) * C2173 + C23714 * C2174 +
            C32722 * C2175) *
               C51086) *
              C50951 * C51197 +
          (((C20973 - (C20972 + C20971) + C20974) * C2173 +
            (C20977 - (C20976 + C20975) + C20978) * C2174 +
            (C20981 - (C20980 + C20979) + C20982) * C2175) *
               C33992 +
           (C23716 * C2173 + C32919 * C2174 +
            (C21151 - (C21137 + C21138) + C21152) * C2175) *
               C51086) *
              C50951 * C51184 +
          ((C20991 * C2173 + C20992 * C2174 +
            (C20985 + C20984 - C20983 - C20986) * C2175) *
               C33992 +
           (C32722 * C2173 + (C21138 + C21137 - C21151 - C21152) * C2174 +
            (C20451 * C1280 + C20452 * C1275 -
             (C19835 * C3009 + C50862 * C3017) * C1281 -
             (C19835 * C3015 + C50862 * C3021) * C50885) *
                C2175) *
               C51086) *
              C50951 * C1279)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C1280 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C1275 -
             (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
              C17051 * C126 + C17046 * C133) *
                 C1281 -
             (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
              C17051 * C137 + C17046 * C147) *
                 C50885) *
                C51010 * C33992 +
            ((C34323 + C34324 + C34325) * C1280 +
             (C34326 + C34327 + C34328) * C1275 -
             (C34329 + C34330 + C34331) * C1281 -
             (C34332 + C34333 + C34334) * C50885) *
                C51010 * C51086) *
               C51152 +
           (((C34331 + C34330 + C34329) * C1281 -
             ((C34328 + C34327 + C34326) * C1275 +
              (C34325 + C34324 + C34323) * C1280) +
             (C34334 + C34333 + C34332) * C50885) *
                C51010 * C33992 +
            ((C34901 + C34902 + C34903) * C1281 -
             ((C34904 + C34905 + C34906) * C1275 +
              (C34907 + C34908 + C34909) * C1280) +
             (C34910 + C34911 + C34912) * C50885) *
                C51010 * C51086) *
               C50963) *
              C1172 +
          ((((C17245 + C17244 + C17243) * C1281 -
             ((C17242 + C17241 + C17240) * C1275 +
              (C17239 + C17238 + C17237) * C1280) +
             (C17248 + C17247 + C17246) * C50885) *
                C51010 * C33992 +
            ((C18787 + C18788 + C18789) * C1281 -
             ((C17869 + C17870 + C17871) * C1275 +
              (C17872 + C17873 + C17874) * C1280) +
             (C18790 + C18791 + C18792) * C50885) *
                C51010 * C51086) *
               C51152 +
           (((C17874 + C17873 + C17872) * C1280 +
             (C17871 + C17870 + C17869) * C1275 -
             (C18789 + C18788 + C18787) * C1281 -
             (C18792 + C18791 + C18790) * C50885) *
                C51010 * C33992 +
            ((C18185 + C18186 + C18187) * C1280 +
             (C18188 + C18189 + C18190) * C1275 -
             (C17053 * C969 + C17048 * C977 + C17052 * C970 + C17047 * C978 +
              C17051 * C971 + C17046 * C979) *
                 C1281 -
             (C17053 * C973 + C17048 * C981 + C17052 * C974 + C17047 * C982 +
              C17051 * C975 + C17046 * C983) *
                 C50885) *
                C51010 * C51086) *
               C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C1280 +
              (C19835 * C136 + C50862 * C146) * C1275 -
              (C19835 * C126 + C50862 * C133) * C1281 -
              (C19835 * C137 + C50862 * C147) * C50885) *
                 C2173 +
             (C20971 + C20972 - C20973 - C20974) * C2174 + C20991 * C2175) *
                C33992 +
            ((C23694 + C23695 - C23696 - C23697) * C2173 + C23714 * C2174 +
             C32722 * C2175) *
                C51086) *
               C51152 +
           (((C23696 - (C23695 + C23694) + C23697) * C2173 + C23716 * C2174 +
             C32919 * C2175) *
                C33992 +
            ((C23701 - (C23700 + C23699) + C23702) * C2173 + C23717 * C2174 +
             (C23496 - (C23497 + C23498) + C23499) * C2175) *
                C51086) *
               C50963) *
              C1172 +
          ((((C20973 - (C20972 + C20971) + C20974) * C2173 +
             (C20977 - (C20976 + C20975) + C20978) * C2174 +
             (C20981 - (C20980 + C20979) + C20982) * C2175) *
                C33992 +
            (C23716 * C2173 + C32919 * C2174 +
             (C21151 - (C21137 + C21138) + C21152) * C2175) *
                C51086) *
               C51152 +
           ((C23714 * C2173 + C32722 * C2174 +
             (C21138 + C21137 - C21151 - C21152) * C2175) *
                C33992 +
            (C23715 * C2173 + (C23498 + C23497 - C23496 - C23499) * C2174 +
             (C20679 * C1280 + C20680 * C1275 -
              (C19835 * C3368 + C50862 * C3372) * C1281 -
              (C19835 * C3370 + C50862 * C3374) * C50885) *
                 C2175) *
                C51086) *
               C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C50007 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C51143 -
             (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
              C17051 * C126 + C17046 * C133) *
                 C50000 -
             (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
              C17051 * C137 + C17046 * C147) *
                 C50885) *
                C51010 * C33992 +
            ((C34323 + C34324 + C34325) * C50007 +
             (C34326 + C34327 + C34328) * C51143 -
             (C34329 + C34330 + C34331) * C50000 -
             (C34332 + C34333 + C34334) * C50885) *
                C51010 * C51086) *
               C1514 +
           (((C34331 + C34330 + C34329) * C50000 -
             ((C34328 + C34327 + C34326) * C51143 +
              (C34325 + C34324 + C34323) * C50007) +
             (C34334 + C34333 + C34332) * C50885) *
                C51010 * C33992 +
            ((C34901 + C34902 + C34903) * C50000 -
             ((C34904 + C34905 + C34906) * C51143 +
              (C34907 + C34908 + C34909) * C50007) +
             (C34910 + C34911 + C34912) * C50885) *
                C51010 * C51086) *
               C50963) *
              C1172 +
          ((((C17245 + C17244 + C17243) * C50000 -
             ((C17242 + C17241 + C17240) * C51143 +
              (C17239 + C17238 + C17237) * C50007) +
             (C17248 + C17247 + C17246) * C50885) *
                C51010 * C33992 +
            ((C18787 + C18788 + C18789) * C50000 -
             ((C17869 + C17870 + C17871) * C51143 +
              (C17872 + C17873 + C17874) * C50007) +
             (C18790 + C18791 + C18792) * C50885) *
                C51010 * C51086) *
               C1514 +
           (((C17874 + C17873 + C17872) * C50007 +
             (C17871 + C17870 + C17869) * C51143 -
             (C18789 + C18788 + C18787) * C50000 -
             (C18792 + C18791 + C18790) * C50885) *
                C51010 * C33992 +
            ((C18185 + C18186 + C18187) * C50007 +
             (C18188 + C18189 + C18190) * C51143 -
             (C17053 * C969 + C17048 * C977 + C17052 * C970 + C17047 * C978 +
              C17051 * C971 + C17046 * C979) *
                 C50000 -
             (C17053 * C973 + C17048 * C981 + C17052 * C974 + C17047 * C982 +
              C17051 * C975 + C17046 * C983) *
                 C50885) *
                C51010 * C51086) *
               C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C50007 +
              (C19835 * C136 + C50862 * C146) * C51143 -
              (C19835 * C126 + C50862 * C133) * C50000 -
              (C19835 * C137 + C50862 * C147) * C50885) *
                 C2173 +
             (C20203 + C20204 - C20205 - C20206) * C2174 + C20235 * C2175) *
                C33992 +
            ((C22862 + C22863 - C22864 - C22865) * C2173 + C24426 * C2174 +
             C31786 * C2175) *
                C51086) *
               C1514 +
           (((C22864 - (C22863 + C22862) + C22865) * C2173 + C24427 * C2174 +
             C33602 * C2175) *
                C33992 +
            ((C22868 - (C22867 + C22866) + C22869) * C2173 + C24428 * C2174 +
             (C22443 - (C22437 + C22438) + C22444) * C2175) *
                C51086) *
               C50963) *
              C1172 +
          ((((C20205 - (C20204 + C20203) + C20206) * C2173 +
             (C20209 - (C20208 + C20207) + C20210) * C2174 +
             (C20213 - (C20212 + C20211) + C20214) * C2175) *
                C33992 +
            (C24427 * C2173 + C33602 * C2174 +
             (C21617 - (C21618 + C21619) + C21620) * C2175) *
                C51086) *
               C1514 +
           ((C24426 * C2173 + C31786 * C2174 +
             (C21619 + C21618 - C21617 - C21620) * C2175) *
                C33992 +
            (C22894 * C2173 + (C22438 + C22437 - C22443 - C22444) * C2174 +
             (C20679 * C50007 + C20680 * C51143 -
              (C19835 * C3368 + C50862 * C3372) * C50000 -
              (C19835 * C3370 + C50862 * C3374) * C50885) *
                 C2175) *
                C51086) *
               C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C603 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50880) *
                C51010 * C33992 +
            ((C34323 + C34324 + C34325) * C603 +
             (C34326 + C34327 + C34328) * C50880) *
                C51010 * C51086) *
               C1514 -
           (((C34904 + C34905 + C34906) * C50880 +
             (C34907 + C34908 + C34909) * C603) *
                C51010 * C51086 +
            ((C34328 + C34327 + C34326) * C50880 +
             (C34325 + C34324 + C34323) * C603) *
                C51010 * C33992) *
               C50963) *
              C51197 +
          ((((C17874 + C17873 + C17872) * C603 +
             (C17871 + C17870 + C17869) * C50880) *
                C51010 * C33992 +
            ((C18185 + C18186 + C18187) * C603 +
             (C18188 + C18189 + C18190) * C50880) *
                C51010 * C51086) *
               C50963 -
           (((C17869 + C17870 + C17871) * C50880 +
             (C17872 + C17873 + C17874) * C603) *
                C51010 * C51086 +
            ((C17242 + C17241 + C17240) * C50880 +
             (C17239 + C17238 + C17237) * C603) *
                C51010 * C33992) *
               C1514) *
              C51184 +
          ((((C17579 + C17578 + C17577) * C603 +
             (C17576 + C17575 + C17574) * C50880) *
                C51010 * C33992 +
            ((C17875 + C17876 + C17877) * C603 +
             (C17878 + C17879 + C17880) * C50880) *
                C51010 * C51086) *
               C1514 -
           (((C17053 * C3218 + C17048 * C3221 + C17052 * C3216 +
              C17047 * C3220 + C17051 * C3215 + C17046 * C3219) *
                 C50880 +
             (C17053 * C3212 + C17048 * C3217 + C17052 * C3211 +
              C17047 * C3214 + C17051 * C3210 + C17046 * C3213) *
                 C603) *
                C51010 * C51086 +
            ((C17880 + C17879 + C17878) * C50880 +
             (C17877 + C17876 + C17875) * C603) *
                C51010 * C33992) *
               C50963) *
              C1279)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C603 +
              (C19835 * C136 + C50862 * C146) * C50880) *
                 C2173 +
             (C20307 + C20308) * C2174 + C20319 * C2175) *
                C33992 +
            ((C22689 + C22690) * C2173 + C22691 * C2174 + C22701 * C2175) *
                C51086) *
               C1514 -
           ((C22707 * C2175 + C22699 * C2174 + (C22693 + C22692) * C2173) *
                C51086 +
            (C20462 * C2175 + C22700 * C2174 + (C22690 + C22689) * C2173) *
                C33992) *
               C50963) *
              C51197 +
          (((C22691 * C2173 + C22701 * C2174 + C32031 * C2175) * C33992 +
            (C22694 * C2173 + C22702 * C2174 + (C20685 + C20686) * C2175) *
                C51086) *
               C50963 -
           ((C20461 * C2175 + C20462 * C2174 + C22700 * C2173) * C51086 +
            (C20322 * C2175 + (C20310 + C20309) * C2174 +
             (C20308 + C20307) * C2173) *
                C33992) *
               C1514) *
              C51184 +
          (((C20319 * C2173 + C20320 * C2174 + (C20314 + C20313) * C2175) *
                C33992 +
            (C22701 * C2173 + C32031 * C2174 + (C20459 + C20460) * C2175) *
                C51086) *
               C1514 -
           ((((C19835 * C20659 + C50862 * C20661) * C50880 +
              (C19835 * C20658 + C50862 * C20660) * C603) *
                 C2175 +
             (C20686 + C20685) * C2174 + C22707 * C2173) *
                C51086 +
            ((C20460 + C20459) * C2175 + C20461 * C2174 + C20462 * C2173) *
                C33992) *
               C50963) *
              C1279)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C603 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50880) *
                C51010 * C33992 +
            ((C34323 + C34324 + C34325) * C603 +
             (C34326 + C34327 + C34328) * C50880) *
                C51010 * C51086) *
               C51198 -
           (((C34904 + C34905 + C34906) * C50880 +
             (C34907 + C34908 + C34909) * C603) *
                C51010 * C51086 +
            ((C34328 + C34327 + C34326) * C50880 +
             (C34325 + C34324 + C34323) * C603) *
                C51010 * C33992) *
               C51187 +
           (((C34909 + C34908 + C34907) * C603 +
             (C34906 + C34905 + C34904) * C50880) *
                C51010 * C33992 +
            ((C35169 + C35170 + C35171) * C603 +
             (C35172 + C35173 + C35174) * C50880) *
                C51010 * C51086) *
               C1746) *
              C1172 +
          ((((C17874 + C17873 + C17872) * C603 +
             (C17871 + C17870 + C17869) * C50880) *
                C51010 * C33992 +
            ((C18185 + C18186 + C18187) * C603 +
             (C18188 + C18189 + C18190) * C50880) *
                C51010 * C51086) *
               C51187 -
           (((C17869 + C17870 + C17871) * C50880 +
             (C17872 + C17873 + C17874) * C603) *
                C51010 * C51086 +
            ((C17242 + C17241 + C17240) * C50880 +
             (C17239 + C17238 + C17237) * C603) *
                C51010 * C33992) *
               C51198 -
           (((C17053 * C6844 + C17048 * C6845 + C17052 * C3506 +
              C17047 * C3512 + C17051 * C3507 + C17046 * C3513) *
                 C50880 +
             (C17053 * C6842 + C17048 * C6843 + C17052 * C3500 +
              C17047 * C3508 + C17051 * C3501 + C17046 * C3509) *
                 C603) *
                C51010 * C51086 +
            ((C18190 + C18189 + C18188) * C50880 +
             (C18187 + C18186 + C18185) * C603) *
                C51010 * C33992) *
               C1746) *
              C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C603 +
              (C19835 * C136 + C50862 * C146) * C50880) *
                 C2173 +
             (C20307 + C20308) * C2174 + C20319 * C2175) *
                C33992 +
            ((C22689 + C22690) * C2173 + C22691 * C2174 + C22701 * C2175) *
                C51086) *
               C51198 -
           ((C22707 * C2175 + C22699 * C2174 + (C22693 + C22692) * C2173) *
                C51086 +
            (C20462 * C2175 + C22700 * C2174 + (C22690 + C22689) * C2173) *
                C33992) *
               C51187 +
           ((C23055 * C2173 + C22694 * C2174 + C22702 * C2175) * C33992 +
            ((C23059 + C23058) * C2173 + C23060 * C2174 +
             (C22714 + C22715) * C2175) *
                C51086) *
               C1746) *
              C1172 +
          (((C22691 * C2173 + C22701 * C2174 + C32031 * C2175) * C33992 +
            (C22694 * C2173 + C22702 * C2174 + (C20685 + C20686) * C2175) *
                C51086) *
               C51187 -
           ((C20461 * C2175 + C20462 * C2174 + C22700 * C2173) * C51086 +
            (C20322 * C2175 + (C20310 + C20309) * C2174 +
             (C20308 + C20307) * C2173) *
                C33992) *
               C51198 -
           ((((C19835 * C20753 + C50862 * C20755) * C50880 +
              (C19835 * C20752 + C50862 * C20754) * C603) *
                 C2175 +
             (C22715 + C22714) * C2174 + C23057 * C2173) *
                C51086 +
            ((C20686 + C20685) * C2175 + C22707 * C2174 + C22699 * C2173) *
                C33992) *
               C1746) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C50007 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C51143 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C50000 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C50885) *
               C51010 * C33992 +
           ((C34323 + C34324 + C34325) * C50007 +
            (C34326 + C34327 + C34328) * C51143 -
            (C34329 + C34330 + C34331) * C50000 -
            (C34332 + C34333 + C34334) * C50885) *
               C51010 * C51086) *
              C50951 * C507 +
          (((C17245 + C17244 + C17243) * C50000 -
            ((C17242 + C17241 + C17240) * C51143 +
             (C17239 + C17238 + C17237) * C50007) +
            (C17248 + C17247 + C17246) * C50885) *
               C51010 * C33992 +
           ((C18787 + C18788 + C18789) * C50000 -
            ((C17869 + C17870 + C17871) * C51143 +
             (C17872 + C17873 + C17874) * C50007) +
            (C18790 + C18791 + C18792) * C50885) *
               C51010 * C51086) *
              C50951 * C508 +
          (((C17579 + C17578 + C17577) * C50007 +
            (C17576 + C17575 + C17574) * C51143 -
            (C17573 + C17572 + C17571) * C50000 -
            (C17582 + C17581 + C17580) * C50885) *
               C51010 * C33992 +
           ((C17875 + C17876 + C17877) * C50007 +
            (C17878 + C17879 + C17880) * C51143 -
            (C17053 * C722 + C17048 * C738 + C17052 * C723 + C17047 * C739 +
             C17051 * C724 + C17046 * C740) *
                C50000 -
            (C17053 * C734 + C17048 * C746 + C17052 * C735 + C17047 * C747 +
             C17051 * C736 + C17046 * C748) *
                C50885) *
               C51010 * C51086) *
              C50951 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
            C17053 * C127 + C17048 * C134) *
               C121 +
           (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
            C17053 * C138 + C17048 * C148) *
               C109 -
           (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
            C17051 * C126 + C17046 * C133) *
               C122 -
           (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
            C17051 * C137 + C17046 * C147) *
               C110 +
           (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
            C17053 * C129 + C17048 * C140) *
               C123 +
           (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
            C17053 * C141 + C17048 * C150) *
               C111 -
           (C17053 * C130 + C17048 * C142 + C17052 * C129 + C17047 * C140 +
            C17051 * C128 + C17046 * C135) *
               C124 -
           (C17053 * C143 + C17048 * C151 + C17052 * C141 + C17047 * C150 +
            C17051 * C139 + C17046 * C149) *
               C112) *
              C51010 * C33992 +
          ((C17051 * C387 + C17046 * C397 + C17052 * C383 + C17047 * C389 +
            C17053 * C384 + C17048 * C390) *
               C121 +
           (C17051 * C396 + C17046 * C404 + C17052 * C395 + C17047 * C403 +
            C17053 * C394 + C17048 * C402) *
               C109 -
           (C17053 * C385 + C17048 * C391 + C17052 * C384 + C17047 * C390 +
            C17051 * C383 + C17046 * C389) *
               C122 -
           (C17053 * C393 + C17048 * C401 + C17052 * C394 + C17047 * C402 +
            C17051 * C395 + C17046 * C403) *
               C110 +
           (C17051 * C384 + C17046 * C390 + C17052 * C385 + C17047 * C391 +
            C17053 * C386 + C17048 * C392) *
               C123 +
           (C17051 * C394 + C17046 * C402 + C17052 * C393 + C17047 * C401 +
            C17053 * C398 + C17048 * C405) *
               C111 -
           (C17053 * C388 + C17048 * C399 + C17052 * C386 + C17047 * C392 +
            C17051 * C385 + C17046 * C391) *
               C124 -
           (C17053 * C400 + C17048 * C406 + C17052 * C398 + C17047 * C405 +
            C17051 * C393 + C17046 * C401) *
               C112) *
              C51010 * C51086) *
         C50951 * C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C50007 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C51143 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C50000 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C50885) *
               C51010 * C33992 +
           ((C34323 + C34324 + C34325) * C50007 +
            (C34326 + C34327 + C34328) * C51143 -
            (C34329 + C34330 + C34331) * C50000 -
            (C34332 + C34333 + C34334) * C50885) *
               C51010 * C51086) *
              C848 +
          (((C34331 + C34330 + C34329) * C50000 -
            ((C34328 + C34327 + C34326) * C51143 +
             (C34325 + C34324 + C34323) * C50007) +
            (C34334 + C34333 + C34332) * C50885) *
               C51010 * C33992 +
           ((C34901 + C34902 + C34903) * C50000 -
            ((C34904 + C34905 + C34906) * C51143 +
             (C34907 + C34908 + C34909) * C50007) +
            (C34910 + C34911 + C34912) * C50885) *
               C51010 * C51086) *
              C849 +
          (((C34909 + C34908 + C34907) * C50007 +
            (C34906 + C34905 + C34904) * C51143 -
            (C34903 + C34902 + C34901) * C50000 -
            (C34912 + C34911 + C34910) * C50885) *
               C51010 * C33992 +
           ((C17051 * C1058 + C17046 * C1066 + C17052 * C1057 + C17047 * C1065 +
             C17053 * C1056 + C17048 * C1064) *
                C50007 +
            (C17051 * C1062 + C17046 * C1070 + C17052 * C1061 + C17047 * C1069 +
             C17053 * C1060 + C17048 * C1068) *
                C51143 -
            (C17053 * C1055 + C17048 * C1063 + C17052 * C1056 + C17047 * C1064 +
             C17051 * C1057 + C17046 * C1065) *
                C50000 -
            (C17053 * C1059 + C17048 * C1067 + C17052 * C1060 + C17047 * C1068 +
             C17051 * C1061 + C17046 * C1069) *
                C50885) *
               C51010 * C51086) *
              C850) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C121 +
            (C19835 * C136 + C50862 * C146) * C109 -
            (C19835 * C126 + C50862 * C133) * C122 -
            (C19835 * C137 + C50862 * C147) * C110 +
            (C19835 * C127 + C50862 * C134) * C123 +
            (C19835 * C138 + C50862 * C148) * C111 -
            (C19835 * C128 + C50862 * C135) * C124 -
            (C19835 * C139 + C50862 * C149) * C112) *
               C2173 +
           (C19971 * C121 + C19972 * C109 - C19973 * C122 - C19974 * C110 +
            C19975 * C123 + C19976 * C111 -
            (C19835 * C261 + C50862 * C267) * C124 -
            (C19835 * C269 + C50862 * C277) * C112) *
               C2174 +
           (C19977 * C121 + C19978 * C109 - C19979 * C122 - C19980 * C110 +
            C19981 * C123 + C19982 * C111 -
            (C19835 * C515 + C50862 * C520) * C124 -
            (C19835 * C524 + C50862 * C530) * C112) *
               C2175) *
              C33992 +
          ((C22261 * C121 + C22262 * C109 - C22263 * C122 - C22264 * C110 +
            C22265 * C123 + C22266 * C111 -
            (C19835 * C385 + C50862 * C391) * C124 -
            (C19835 * C393 + C50862 * C401) * C112) *
               C2173 +
           (C20450 * C121 + C20449 * C109 - C21141 * C122 - C21142 * C110 +
            C22079 * C123 + C22080 * C111 -
            (C19835 * C721 + C50862 * C729) * C124 -
            (C19835 * C733 + C50862 * C745) * C112) *
               C2174 +
           (C20448 * C121 + C20447 * C109 - C21143 * C122 - C21144 * C110 +
            C31488 * C123 + C31489 * C111 -
            (C19835 * C722 + C50862 * C738) * C124 -
            (C19835 * C734 + C50862 * C746) * C112) *
               C2175) *
              C51086) *
         C50951 * C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C50007 +
             (C19835 * C136 + C50862 * C146) * C51143 -
             (C19835 * C126 + C50862 * C133) * C50000 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C2173 +
            (C20203 + C20204 - C20205 - C20206) * C2174 + C20235 * C2175) *
               C33992 +
           ((C22862 + C22863 - C22864 - C22865) * C2173 + C24426 * C2174 +
            C31786 * C2175) *
               C51086) *
              C50951 * C507 +
          (((C20205 - (C20204 + C20203) + C20206) * C2173 +
            (C20209 - (C20208 + C20207) + C20210) * C2174 +
            (C20213 - (C20212 + C20211) + C20214) * C2175) *
               C33992 +
           (C24427 * C2173 + C33602 * C2174 +
            (C21617 - (C21618 + C21619) + C21620) * C2175) *
               C51086) *
              C50951 * C508 +
          ((C20235 * C2173 + C20236 * C2174 +
            (C20233 + C20232 - C20231 - C20234) * C2175) *
               C33992 +
           (C31786 * C2173 + (C21619 + C21618 - C21617 - C21620) * C2174 +
            (C20451 * C50007 + C20452 * C51143 -
             (C19835 * C3009 + C50862 * C3017) * C50000 -
             (C19835 * C3015 + C50862 * C3021) * C50885) *
                C2175) *
               C51086) *
              C50951 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C50007 +
             (C19835 * C136 + C50862 * C146) * C51143 -
             (C19835 * C126 + C50862 * C133) * C50000 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C2173 +
            (C20203 + C20204 - C20205 - C20206) * C2174 + C20235 * C2175) *
               C33992 +
           ((C22862 + C22863 - C22864 - C22865) * C2173 + C24426 * C2174 +
            C31786 * C2175) *
               C51086) *
              C848 +
          (((C22864 - (C22863 + C22862) + C22865) * C2173 + C24427 * C2174 +
            C33602 * C2175) *
               C33992 +
           ((C22868 - (C22867 + C22866) + C22869) * C2173 + C24428 * C2174 +
            (C22443 - (C22437 + C22438) + C22444) * C2175) *
               C51086) *
              C849 +
          ((C22901 * C2173 + C22894 * C2174 +
            (C22438 + C22437 - C22443 - C22444) * C2175) *
               C33992 +
           ((C22897 + C22896 - C22895 - C22898) * C2173 +
            (C22882 + C22881 - C22899 - C22900) * C2174 +
            (C22710 * C50007 + C22711 * C51143 -
             (C19835 * C3498 + C50862 * C3504) * C50000 -
             (C19835 * C3502 + C50862 * C3510) * C50885) *
                C2175) *
               C51086) *
              C850) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C603 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C50880) *
               C51010 * C33992 +
           ((C34323 + C34324 + C34325) * C603 +
            (C34326 + C34327 + C34328) * C50880) *
               C51010 * C51086) *
              C50951 * C599 -
          (((C17869 + C17870 + C17871) * C50880 +
            (C17872 + C17873 + C17874) * C603) *
               C51010 * C51086 +
           ((C17242 + C17241 + C17240) * C50880 +
            (C17239 + C17238 + C17237) * C603) *
               C51010 * C33992) *
              C50951 * C600 +
          (((C17579 + C17578 + C17577) * C603 +
            (C17576 + C17575 + C17574) * C50880) *
               C51010 * C33992 +
           ((C17875 + C17876 + C17877) * C603 +
            (C17878 + C17879 + C17880) * C50880) *
               C51010 * C51086) *
              C50951 * C601 -
          (((C17053 * C4009 + C17048 * C4010 + C17052 * C3014 + C17047 * C3020 +
             C17051 * C3013 + C17046 * C3019) *
                C50880 +
            (C17053 * C4007 + C17048 * C4008 + C17052 * C3008 + C17047 * C3012 +
             C17051 * C3007 + C17046 * C3011) *
                C603) *
               C51010 * C51086 +
           ((C17698 + C17697 + C17696) * C50880 +
            (C17695 + C17694 + C17693) * C603) *
               C51010 * C33992) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C256 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C251 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C257 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C252 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C258 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C253) *
               C51010 * C33992 +
           ((C17051 * C387 + C17046 * C397 + C17052 * C383 + C17047 * C389 +
             C17053 * C384 + C17048 * C390) *
                C256 +
            (C17051 * C396 + C17046 * C404 + C17052 * C395 + C17047 * C403 +
             C17053 * C394 + C17048 * C402) *
                C251 -
            (C17053 * C385 + C17048 * C391 + C17052 * C384 + C17047 * C390 +
             C17051 * C383 + C17046 * C389) *
                C257 -
            (C17053 * C393 + C17048 * C401 + C17052 * C394 + C17047 * C402 +
             C17051 * C395 + C17046 * C403) *
                C252 +
            (C17051 * C384 + C17046 * C390 + C17052 * C385 + C17047 * C391 +
             C17053 * C386 + C17048 * C392) *
                C258 +
            (C17051 * C394 + C17046 * C402 + C17052 * C393 + C17047 * C401 +
             C17053 * C398 + C17048 * C405) *
                C253) *
               C51010 * C51086) *
              C50951 * C51151 +
          (((C17245 + C17244 + C17243) * C257 -
            ((C17242 + C17241 + C17240) * C251 +
             (C17239 + C17238 + C17237) * C256) +
            (C17248 + C17247 + C17246) * C252 -
            (C17251 + C17250 + C17249) * C258 -
            (C17254 + C17253 + C17252) * C253) *
               C51010 * C33992 +
           ((C18787 + C18788 + C18789) * C257 -
            ((C17869 + C17870 + C17871) * C251 +
             (C17872 + C17873 + C17874) * C256) +
            (C18790 + C18791 + C18792) * C252 -
            (C17053 * C1412 + C17048 * C1413 + C17052 * C721 + C17047 * C729 +
             C17051 * C720 + C17046 * C728) *
                C258 -
            (C17053 * C1414 + C17048 * C1415 + C17052 * C733 + C17047 * C745 +
             C17051 * C732 + C17046 * C744) *
                C253) *
               C51010 * C51086) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C603 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50880) *
                C51010 * C33992 +
            ((C34323 + C34324 + C34325) * C603 +
             (C34326 + C34327 + C34328) * C50880) *
                C51010 * C51086) *
               C848 -
           (((C34904 + C34905 + C34906) * C50880 +
             (C34907 + C34908 + C34909) * C603) *
                C51010 * C51086 +
            ((C34328 + C34327 + C34326) * C50880 +
             (C34325 + C34324 + C34323) * C603) *
                C51010 * C33992) *
               C849 +
           (((C34909 + C34908 + C34907) * C603 +
             (C34906 + C34905 + C34904) * C50880) *
                C51010 * C33992 +
            ((C17051 * C1058 + C17046 * C1066 + C17052 * C1057 +
              C17047 * C1065 + C17053 * C1056 + C17048 * C1064) *
                 C603 +
             (C17051 * C1062 + C17046 * C1070 + C17052 * C1061 +
              C17047 * C1069 + C17053 * C1060 + C17048 * C1068) *
                 C50880) *
                C51010 * C51086) *
               C850) *
              C51151 +
          ((((C17874 + C17873 + C17872) * C603 +
             (C17871 + C17870 + C17869) * C50880) *
                C51010 * C33992 +
            ((C18185 + C18186 + C18187) * C603 +
             (C18188 + C18189 + C18190) * C50880) *
                C51010 * C51086) *
               C849 -
           (((C17869 + C17870 + C17871) * C50880 +
             (C17872 + C17873 + C17874) * C603) *
                C51010 * C51086 +
            ((C17242 + C17241 + C17240) * C50880 +
             (C17239 + C17238 + C17237) * C603) *
                C51010 * C33992) *
               C848 -
           (((C17053 * C6844 + C17048 * C6845 + C17052 * C3506 +
              C17047 * C3512 + C17051 * C3507 + C17046 * C3513) *
                 C50880 +
             (C17053 * C6842 + C17048 * C6843 + C17052 * C3500 +
              C17047 * C3508 + C17051 * C3501 + C17046 * C3509) *
                 C603) *
                C51010 * C51086 +
            ((C18190 + C18189 + C18188) * C50880 +
             (C18187 + C18186 + C18185) * C603) *
                C51010 * C33992) *
               C850) *
              C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C256 +
             (C19835 * C136 + C50862 * C146) * C251 -
             (C19835 * C126 + C50862 * C133) * C257 -
             (C19835 * C137 + C50862 * C147) * C252 +
             (C19835 * C127 + C50862 * C134) * C258 +
             (C19835 * C138 + C50862 * C148) * C253) *
                C2173 +
            (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C2174 +
            (C19995 + C19996 - C19997 - C19998 + C19999 + C20000) * C2175) *
               C33992 +
           ((C22273 + C22274 - C22275 - C22276 + C22277 + C22278) * C2173 +
            (C22061 + C22062 - C22063 - C22064 + C22085 + C22086) * C2174 +
            (C31480 + C31481 - C31482 - C31483 + C31490 + C31491) * C2175) *
               C51086) *
              C50951 * C51151 +
          (((C19991 - (C19990 + C19989) + C19992 - C19993 - C19994) * C2173 +
            (C19997 - (C19996 + C19995) + C19998 - C19999 - C20000) * C2174 +
            (C20003 - (C20002 + C20001) + C20004 - C20005 - C20006) * C2175) *
               C33992 +
           ((C22063 - (C22062 + C22061) + C22064 - C22085 - C22086) * C2173 +
            (C31482 - (C31481 + C31480) + C31483 - C31490 - C31491) * C2174 +
            (C21145 * C257 - (C20445 * C251 + C20446 * C256) + C21146 * C252 -
             (C19835 * C4007 + C50862 * C4008) * C258 -
             (C19835 * C4009 + C50862 * C4010) * C253) *
                C2175) *
               C51086) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C2173 +
            (C20307 + C20308) * C2174 + C20319 * C2175) *
               C33992 +
           ((C22689 + C22690) * C2173 + C22691 * C2174 + C22701 * C2175) *
               C51086) *
              C50951 * C599 -
          ((C20461 * C2175 + C20462 * C2174 + C22700 * C2173) * C51086 +
           (C20322 * C2175 + (C20310 + C20309) * C2174 +
            (C20308 + C20307) * C2173) *
               C33992) *
              C50951 * C600 +
          ((C20319 * C2173 + C20320 * C2174 + (C20314 + C20313) * C2175) *
               C33992 +
           (C22701 * C2173 + C32031 * C2174 + (C20459 + C20460) * C2175) *
               C51086) *
              C50951 * C601 -
          ((((C19835 * C20425 + C50862 * C20427) * C50880 +
             (C19835 * C20424 + C50862 * C20426) * C603) *
                C2175 +
            (C20460 + C20459) * C2174 + C20461 * C2173) *
               C51086 +
           ((C20326 + C20325) * C2175 + C20321 * C2174 + C20322 * C2173) *
               C33992) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C603 +
              (C19835 * C136 + C50862 * C146) * C50880) *
                 C2173 +
             (C20307 + C20308) * C2174 + C20319 * C2175) *
                C33992 +
            ((C22689 + C22690) * C2173 + C22691 * C2174 + C22701 * C2175) *
                C51086) *
               C848 -
           ((C22707 * C2175 + C22699 * C2174 + (C22693 + C22692) * C2173) *
                C51086 +
            (C20462 * C2175 + C22700 * C2174 + (C22690 + C22689) * C2173) *
                C33992) *
               C849 +
           ((C23055 * C2173 + C22694 * C2174 + C22702 * C2175) * C33992 +
            ((C23059 + C23058) * C2173 + C23060 * C2174 +
             (C22714 + C22715) * C2175) *
                C51086) *
               C850) *
              C51151 +
          (((C22691 * C2173 + C22701 * C2174 + C32031 * C2175) * C33992 +
            (C22694 * C2173 + C22702 * C2174 + (C20685 + C20686) * C2175) *
                C51086) *
               C849 -
           ((C20461 * C2175 + C20462 * C2174 + C22700 * C2173) * C51086 +
            (C20322 * C2175 + (C20310 + C20309) * C2174 +
             (C20308 + C20307) * C2173) *
                C33992) *
               C848 -
           ((((C19835 * C20753 + C50862 * C20755) * C50880 +
              (C19835 * C20752 + C50862 * C20754) * C603) *
                 C2175 +
             (C22715 + C22714) * C2174 + C23057 * C2173) *
                C51086 +
            ((C20686 + C20685) * C2175 + C22707 * C2174 + C22699 * C2173) *
                C33992) *
               C850) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C603 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50880) *
                C51010 * C33992 +
            ((C34323 + C34324 + C34325) * C603 +
             (C34326 + C34327 + C34328) * C50880) *
                C51010 * C51086) *
               C51152 -
           (((C17053 * C862 + C17048 * C868 + C17052 * C861 + C17047 * C867 +
              C17051 * C860 + C17046 * C866) *
                 C50880 +
             (C17053 * C853 + C17048 * C858 + C17052 * C852 + C17047 * C857 +
              C17051 * C851 + C17046 * C856) *
                 C603) *
                C51010 * C51086 +
            ((C34328 + C34327 + C34326) * C50880 +
             (C34325 + C34324 + C34323) * C603) *
                C51010 * C33992) *
               C50963) *
              C507 +
          ((((C17874 + C17873 + C17872) * C603 +
             (C17871 + C17870 + C17869) * C50880) *
                C51010 * C33992 +
            ((C18185 + C18186 + C18187) * C603 +
             (C18188 + C18189 + C18190) * C50880) *
                C51010 * C51086) *
               C50963 -
           (((C17869 + C17870 + C17871) * C50880 +
             (C17872 + C17873 + C17874) * C603) *
                C51010 * C51086 +
            ((C17242 + C17241 + C17240) * C50880 +
             (C17239 + C17238 + C17237) * C603) *
                C51010 * C33992) *
               C51152) *
              C508 +
          ((((C17579 + C17578 + C17577) * C603 +
             (C17576 + C17575 + C17574) * C50880) *
                C51010 * C33992 +
            ((C17875 + C17876 + C17877) * C603 +
             (C17878 + C17879 + C17880) * C50880) *
                C51010 * C51086) *
               C51152 -
           (((C17053 * C3218 + C17048 * C3221 + C17052 * C3216 +
              C17047 * C3220 + C17051 * C3215 + C17046 * C3219) *
                 C50880 +
             (C17053 * C3212 + C17048 * C3217 + C17052 * C3211 +
              C17047 * C3214 + C17051 * C3210 + C17046 * C3213) *
                 C603) *
                C51010 * C51086 +
            ((C17880 + C17879 + C17878) * C50880 +
             (C17877 + C17876 + C17875) * C603) *
                C51010 * C33992) *
               C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C256 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C251 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C257 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C252 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C258 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C253) *
               C51010 * C33992 +
           ((C34323 + C34324 + C34325) * C256 +
            (C34326 + C34327 + C34328) * C251 -
            (C34329 + C34330 + C34331) * C257 -
            (C34332 + C34333 + C34334) * C252 +
            (C34335 + C34336 + C34337) * C258 +
            (C34338 + C34339 + C34340) * C253) *
               C51010 * C51086) *
              C51152 +
          (((C34331 + C34330 + C34329) * C257 -
            ((C34328 + C34327 + C34326) * C251 +
             (C34325 + C34324 + C34323) * C256) +
            (C34334 + C34333 + C34332) * C252 -
            (C34337 + C34336 + C34335) * C258 -
            (C34340 + C34339 + C34338) * C253) *
               C51010 * C33992 +
           ((C17051 * C852 + C17046 * C857 + C17052 * C853 + C17047 * C858 +
             C17053 * C854 + C17048 * C859) *
                C257 -
            ((C17053 * C862 + C17048 * C868 + C17052 * C861 + C17047 * C867 +
              C17051 * C860 + C17046 * C866) *
                 C251 +
             (C17053 * C853 + C17048 * C858 + C17052 * C852 + C17047 * C857 +
              C17051 * C851 + C17046 * C856) *
                 C256) +
            (C17051 * C861 + C17046 * C867 + C17052 * C862 + C17047 * C868 +
             C17053 * C863 + C17048 * C869) *
                C252 -
            (C17053 * C855 + C17048 * C864 + C17052 * C854 + C17047 * C859 +
             C17051 * C853 + C17046 * C858) *
                C258 -
            (C17053 * C865 + C17048 * C870 + C17052 * C863 + C17047 * C869 +
             C17051 * C862 + C17046 * C868) *
                C253) *
               C51010 * C51086) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C603 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C50880) *
               C51010 * C33992 +
           ((C34323 + C34324 + C34325) * C603 +
            (C34326 + C34327 + C34328) * C50880) *
               C51010 * C51086) *
              C1051 -
          (((C34904 + C34905 + C34906) * C50880 +
            (C34907 + C34908 + C34909) * C603) *
               C51010 * C51086 +
           ((C34328 + C34327 + C34326) * C50880 +
            (C34325 + C34324 + C34323) * C603) *
               C51010 * C33992) *
              C1052 +
          (((C34909 + C34908 + C34907) * C603 +
            (C34906 + C34905 + C34904) * C50880) *
               C51010 * C33992 +
           ((C35169 + C35170 + C35171) * C603 +
            (C35172 + C35173 + C35174) * C50880) *
               C51010 * C51086) *
              C1053 -
          (((C17053 * C6016 + C17048 * C6019 + C17052 * C6014 + C17047 * C6018 +
             C17051 * C6013 + C17046 * C6017) *
                C50880 +
            (C17053 * C6010 + C17048 * C6015 + C17052 * C6009 + C17047 * C6012 +
             C17051 * C6008 + C17046 * C6011) *
                C603) *
               C51010 * C51086 +
           ((C35174 + C35173 + C35172) * C50880 +
            (C35171 + C35170 + C35169) * C603) *
               C51010 * C33992) *
              C1054) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C256 +
             (C19835 * C136 + C50862 * C146) * C251 -
             (C19835 * C126 + C50862 * C133) * C257 -
             (C19835 * C137 + C50862 * C147) * C252 +
             (C19835 * C127 + C50862 * C134) * C258 +
             (C19835 * C138 + C50862 * C148) * C253) *
                C2173 +
            (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C2174 +
            (C19995 + C19996 - C19997 - C19998 + C19999 + C20000) * C2175) *
               C33992 +
           ((C22273 + C22274 - C22275 - C22276 + C22277 + C22278) * C2173 +
            (C22061 + C22062 - C22063 - C22064 + C22085 + C22086) * C2174 +
            (C31480 + C31481 - C31482 - C31483 + C31490 + C31491) * C2175) *
               C51086) *
              C51152 +
          (((C22275 - (C22274 + C22273) + C22276 - C22277 - C22278) * C2173 +
            (C22063 - (C22062 + C22061) + C22064 - C22085 - C22086) * C2174 +
            (C31482 - (C31481 + C31480) + C31483 - C31490 - C31491) * C2175) *
               C33992 +
           ((C22281 - (C22280 + C22279) + C22282 - C22283 - C22284) * C2173 +
            (C22087 - (C22070 + C22069) + C22088 - C22089 - C22090) * C2174 +
            (C22441 * C257 - (C20678 * C251 + C20677 * C256) + C22442 * C252 -
             (C19835 * C3212 + C50862 * C3217) * C258 -
             (C19835 * C3218 + C50862 * C3221) * C253) *
                C2175) *
               C51086) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C603 +
              (C19835 * C136 + C50862 * C146) * C50880) *
                 C2173 +
             (C20307 + C20308) * C2174 + C20319 * C2175) *
                C33992 +
            ((C22689 + C22690) * C2173 + C22691 * C2174 + C22701 * C2175) *
                C51086) *
               C51152 -
           ((C22707 * C2175 + C22699 * C2174 + (C22693 + C22692) * C2173) *
                C51086 +
            (C20462 * C2175 + C22700 * C2174 + (C22690 + C22689) * C2173) *
                C33992) *
               C50963) *
              C507 +
          (((C22691 * C2173 + C22701 * C2174 + C32031 * C2175) * C33992 +
            (C22694 * C2173 + C22702 * C2174 + (C20685 + C20686) * C2175) *
                C51086) *
               C50963 -
           ((C20461 * C2175 + C20462 * C2174 + C22700 * C2173) * C51086 +
            (C20322 * C2175 + (C20310 + C20309) * C2174 +
             (C20308 + C20307) * C2173) *
                C33992) *
               C51152) *
              C508 +
          (((C20319 * C2173 + C20320 * C2174 + (C20314 + C20313) * C2175) *
                C33992 +
            (C22701 * C2173 + C32031 * C2174 + (C20459 + C20460) * C2175) *
                C51086) *
               C51152 -
           ((((C19835 * C20659 + C50862 * C20661) * C50880 +
              (C19835 * C20658 + C50862 * C20660) * C603) *
                 C2175 +
             (C20686 + C20685) * C2174 + C22707 * C2173) *
                C51086 +
            ((C20460 + C20459) * C2175 + C20461 * C2174 + C20462 * C2173) *
                C33992) *
               C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C2173 +
            (C20307 + C20308) * C2174 + C20319 * C2175) *
               C33992 +
           ((C22689 + C22690) * C2173 + C22691 * C2174 + C22701 * C2175) *
               C51086) *
              C1051 -
          ((C22707 * C2175 + C22699 * C2174 + (C22693 + C22692) * C2173) *
               C51086 +
           (C20462 * C2175 + C22700 * C2174 + (C22690 + C22689) * C2173) *
               C33992) *
              C1052 +
          ((C23055 * C2173 + C22694 * C2174 + C22702 * C2175) * C33992 +
           ((C23059 + C23058) * C2173 + C23060 * C2174 +
            (C22714 + C22715) * C2175) *
               C51086) *
              C1053 -
          ((((C19835 * C23051 + C50862 * C23053) * C50880 +
             (C19835 * C23050 + C50862 * C23052) * C603) *
                C2175 +
            (C23073 + C23072) * C2174 + (C23187 + C23186) * C2173) *
               C51086 +
           ((C22715 + C22714) * C2175 + C23057 * C2174 + C23177 * C2173) *
               C33992) *
              C1054) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C1174 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C51196 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C1175 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C51181 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C1176 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C1171) *
               C51010 * C33992 +
           ((C34323 + C34324 + C34325) * C1174 +
            (C34326 + C34327 + C34328) * C51196 -
            (C34329 + C34330 + C34331) * C1175 -
            (C34332 + C34333 + C34334) * C51181 +
            (C34335 + C34336 + C34337) * C1176 +
            (C34338 + C34339 + C34340) * C1171) *
               C51010 * C51086) *
              C1514 +
          (((C34331 + C34330 + C34329) * C1175 -
            ((C34328 + C34327 + C34326) * C51196 +
             (C34325 + C34324 + C34323) * C1174) +
            (C34334 + C34333 + C34332) * C51181 -
            (C34337 + C34336 + C34335) * C1176 -
            (C34340 + C34339 + C34338) * C1171) *
               C51010 * C33992 +
           ((C34901 + C34902 + C34903) * C1175 -
            ((C34904 + C34905 + C34906) * C51196 +
             (C34907 + C34908 + C34909) * C1174) +
            (C34910 + C34911 + C34912) * C51181 -
            (C17053 * C855 + C17048 * C864 + C17052 * C854 + C17047 * C859 +
             C17051 * C853 + C17046 * C858) *
                C1176 -
            (C17053 * C865 + C17048 * C870 + C17052 * C863 + C17047 * C869 +
             C17051 * C862 + C17046 * C868) *
                C1171) *
               C51010 * C51086) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C1174 +
             (C19835 * C136 + C50862 * C146) * C51196 -
             (C19835 * C126 + C50862 * C133) * C1175 -
             (C19835 * C137 + C50862 * C147) * C51181 +
             (C19835 * C127 + C50862 * C134) * C1176 +
             (C19835 * C138 + C50862 * C148) * C1171) *
                C2173 +
            (C20855 + C20856 - C20857 - C20858 + C20859 + C20860) * C2174 +
            (C20861 + C20862 - C20863 - C20864 + C20865 + C20866) * C2175) *
               C33992 +
           ((C23864 + C23865 - C23866 - C23867 + C23868 + C23869) * C2173 +
            (C23334 + C23335 - C23336 - C23337 + C23338 + C23339) * C2174 +
            (C32568 + C32569 - C32570 - C32571 + C32572 + C32573) * C2175) *
               C51086) *
              C1514 +
          (((C23866 - (C23865 + C23864) + C23867 - C23868 - C23869) * C2173 +
            (C23336 - (C23335 + C23334) + C23337 - C23338 - C23339) * C2174 +
            (C32570 - (C32569 + C32568) + C32571 - C32572 - C32573) * C2175) *
               C33992 +
           ((C23872 - (C23871 + C23870) + C23873 - C23874 - C23875) * C2173 +
            (C23342 - (C23341 + C23340) + C23343 - C23344 - C23345) * C2174 +
            (C22441 * C1175 - (C20678 * C51196 + C20677 * C1174) +
             C22442 * C51181 - (C19835 * C3212 + C50862 * C3217) * C1176 -
             (C19835 * C3218 + C50862 * C3221) * C1171) *
                C2175) *
               C51086) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C1280 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C1275 -
             (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
              C17051 * C126 + C17046 * C133) *
                 C1281 -
             (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
              C17051 * C137 + C17046 * C147) *
                 C50885) *
                C51010 * C33992 +
            ((C34323 + C34324 + C34325) * C1280 +
             (C34326 + C34327 + C34328) * C1275 -
             (C34329 + C34330 + C34331) * C1281 -
             (C34332 + C34333 + C34334) * C50885) *
                C51010 * C51086) *
               C1514 +
           (((C34331 + C34330 + C34329) * C1281 -
             ((C34328 + C34327 + C34326) * C1275 +
              (C34325 + C34324 + C34323) * C1280) +
             (C34334 + C34333 + C34332) * C50885) *
                C51010 * C33992 +
            ((C34901 + C34902 + C34903) * C1281 -
             ((C34904 + C34905 + C34906) * C1275 +
              (C34907 + C34908 + C34909) * C1280) +
             (C34910 + C34911 + C34912) * C50885) *
                C51010 * C51086) *
               C50963) *
              C51151 +
          ((((C17245 + C17244 + C17243) * C1281 -
             ((C17242 + C17241 + C17240) * C1275 +
              (C17239 + C17238 + C17237) * C1280) +
             (C17248 + C17247 + C17246) * C50885) *
                C51010 * C33992 +
            ((C18787 + C18788 + C18789) * C1281 -
             ((C17869 + C17870 + C17871) * C1275 +
              (C17872 + C17873 + C17874) * C1280) +
             (C18790 + C18791 + C18792) * C50885) *
                C51010 * C51086) *
               C1514 +
           (((C17874 + C17873 + C17872) * C1280 +
             (C17871 + C17870 + C17869) * C1275 -
             (C18789 + C18788 + C18787) * C1281 -
             (C18792 + C18791 + C18790) * C50885) *
                C51010 * C33992 +
            ((C18185 + C18186 + C18187) * C1280 +
             (C18188 + C18189 + C18190) * C1275 -
             (C17053 * C969 + C17048 * C977 + C17052 * C970 + C17047 * C978 +
              C17051 * C971 + C17046 * C979) *
                 C1281 -
             (C17053 * C973 + C17048 * C981 + C17052 * C974 + C17047 * C982 +
              C17051 * C975 + C17046 * C983) *
                 C50885) *
                C51010 * C51086) *
               C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C1280 +
              (C19835 * C136 + C50862 * C146) * C1275 -
              (C19835 * C126 + C50862 * C133) * C1281 -
              (C19835 * C137 + C50862 * C147) * C50885) *
                 C2173 +
             (C20971 + C20972 - C20973 - C20974) * C2174 + C20991 * C2175) *
                C33992 +
            ((C23694 + C23695 - C23696 - C23697) * C2173 + C23714 * C2174 +
             C32722 * C2175) *
                C51086) *
               C1514 +
           (((C23696 - (C23695 + C23694) + C23697) * C2173 + C23716 * C2174 +
             C32919 * C2175) *
                C33992 +
            ((C23701 - (C23700 + C23699) + C23702) * C2173 + C23717 * C2174 +
             (C23496 - (C23497 + C23498) + C23499) * C2175) *
                C51086) *
               C50963) *
              C51151 +
          ((((C20973 - (C20972 + C20971) + C20974) * C2173 +
             (C20977 - (C20976 + C20975) + C20978) * C2174 +
             (C20981 - (C20980 + C20979) + C20982) * C2175) *
                C33992 +
            (C23716 * C2173 + C32919 * C2174 +
             (C21151 - (C21137 + C21138) + C21152) * C2175) *
                C51086) *
               C1514 +
           ((C23714 * C2173 + C32722 * C2174 +
             (C21138 + C21137 - C21151 - C21152) * C2175) *
                C33992 +
            (C23715 * C2173 + (C23498 + C23497 - C23496 - C23499) * C2174 +
             (C20679 * C1280 + C20680 * C1275 -
              (C19835 * C3368 + C50862 * C3372) * C1281 -
              (C19835 * C3370 + C50862 * C3374) * C50885) *
                 C2175) *
                C51086) *
               C50963) *
              C50939)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C1280 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C1275 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C1281 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C50885) *
               C51010 * C33992 +
           ((C34323 + C34324 + C34325) * C1280 +
            (C34326 + C34327 + C34328) * C1275 -
            (C34329 + C34330 + C34331) * C1281 -
            (C34332 + C34333 + C34334) * C50885) *
               C51010 * C51086) *
              C51198 +
          (((C34331 + C34330 + C34329) * C1281 -
            ((C34328 + C34327 + C34326) * C1275 +
             (C34325 + C34324 + C34323) * C1280) +
            (C34334 + C34333 + C34332) * C50885) *
               C51010 * C33992 +
           ((C34901 + C34902 + C34903) * C1281 -
            ((C34904 + C34905 + C34906) * C1275 +
             (C34907 + C34908 + C34909) * C1280) +
            (C34910 + C34911 + C34912) * C50885) *
               C51010 * C51086) *
              C51187 +
          (((C34909 + C34908 + C34907) * C1280 +
            (C34906 + C34905 + C34904) * C1275 -
            (C34903 + C34902 + C34901) * C1281 -
            (C34912 + C34911 + C34910) * C50885) *
               C51010 * C33992 +
           ((C35169 + C35170 + C35171) * C1280 +
            (C35172 + C35173 + C35174) * C1275 -
            (C17053 * C1055 + C17048 * C1063 + C17052 * C1056 + C17047 * C1064 +
             C17051 * C1057 + C17046 * C1065) *
                C1281 -
            (C17053 * C1059 + C17048 * C1067 + C17052 * C1060 + C17047 * C1068 +
             C17051 * C1061 + C17046 * C1069) *
                C50885) *
               C51010 * C51086) *
              C1746) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C1280 +
             (C19835 * C136 + C50862 * C146) * C1275 -
             (C19835 * C126 + C50862 * C133) * C1281 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C2173 +
            (C20971 + C20972 - C20973 - C20974) * C2174 + C20991 * C2175) *
               C33992 +
           ((C23694 + C23695 - C23696 - C23697) * C2173 + C23714 * C2174 +
            C32722 * C2175) *
               C51086) *
              C51198 +
          (((C23696 - (C23695 + C23694) + C23697) * C2173 + C23716 * C2174 +
            C32919 * C2175) *
               C33992 +
           ((C23701 - (C23700 + C23699) + C23702) * C2173 + C23717 * C2174 +
            (C23496 - (C23497 + C23498) + C23499) * C2175) *
               C51086) *
              C51187 +
          ((C24223 * C2173 + C23715 * C2174 +
            (C23498 + C23497 - C23496 - C23499) * C2175) *
               C33992 +
           ((C24220 + C24219 - C24218 - C24221) * C2173 +
            (C23708 + C23707 - C23706 - C23709) * C2174 +
            (C22710 * C1280 + C22711 * C1275 -
             (C19835 * C3498 + C50862 * C3504) * C1281 -
             (C19835 * C3502 + C50862 * C3510) * C50885) *
                C2175) *
               C51086) *
              C1746) *
         C50925) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
            C17053 * C127 + C17048 * C134) *
               C121 +
           (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
            C17053 * C138 + C17048 * C148) *
               C109 -
           (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
            C17051 * C126 + C17046 * C133) *
               C122 -
           (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
            C17051 * C137 + C17046 * C147) *
               C110 +
           (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
            C17053 * C129 + C17048 * C140) *
               C123 +
           (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
            C17053 * C141 + C17048 * C150) *
               C111 -
           (C17053 * C130 + C17048 * C142 + C17052 * C129 + C17047 * C140 +
            C17051 * C128 + C17046 * C135) *
               C124 -
           (C17053 * C143 + C17048 * C151 + C17052 * C141 + C17047 * C150 +
            C17051 * C139 + C17046 * C149) *
               C112) *
              C51010 * C33992 +
          ((C17051 * C387 + C17046 * C397 + C17052 * C383 + C17047 * C389 +
            C17053 * C384 + C17048 * C390) *
               C121 +
           (C17051 * C396 + C17046 * C404 + C17052 * C395 + C17047 * C403 +
            C17053 * C394 + C17048 * C402) *
               C109 -
           (C17053 * C385 + C17048 * C391 + C17052 * C384 + C17047 * C390 +
            C17051 * C383 + C17046 * C389) *
               C122 -
           (C17053 * C393 + C17048 * C401 + C17052 * C394 + C17047 * C402 +
            C17051 * C395 + C17046 * C403) *
               C110 +
           (C17051 * C384 + C17046 * C390 + C17052 * C385 + C17047 * C391 +
            C17053 * C386 + C17048 * C392) *
               C123 +
           (C17051 * C394 + C17046 * C402 + C17052 * C393 + C17047 * C401 +
            C17053 * C398 + C17048 * C405) *
               C111 -
           (C17053 * C388 + C17048 * C399 + C17052 * C386 + C17047 * C392 +
            C17051 * C385 + C17046 * C391) *
               C124 -
           (C17053 * C400 + C17048 * C406 + C17052 * C398 + C17047 * C405 +
            C17051 * C393 + C17046 * C401) *
               C112) *
              C51010 * C51086) *
         C50951 * C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C50007 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C51143 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C50000 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C50885) *
               C51010 * C33992 +
           ((C34323 + C34324 + C34325) * C50007 +
            (C34326 + C34327 + C34328) * C51143 -
            (C34329 + C34330 + C34331) * C50000 -
            (C34332 + C34333 + C34334) * C50885) *
               C51010 * C51086) *
              C50951 * C507 +
          (((C17245 + C17244 + C17243) * C50000 -
            ((C17242 + C17241 + C17240) * C51143 +
             (C17239 + C17238 + C17237) * C50007) +
            (C17248 + C17247 + C17246) * C50885) *
               C51010 * C33992 +
           ((C18787 + C18788 + C18789) * C50000 -
            ((C17869 + C17870 + C17871) * C51143 +
             (C17872 + C17873 + C17874) * C50007) +
            (C18790 + C18791 + C18792) * C50885) *
               C51010 * C51086) *
              C50951 * C508 +
          (((C17579 + C17578 + C17577) * C50007 +
            (C17576 + C17575 + C17574) * C51143 -
            (C17573 + C17572 + C17571) * C50000 -
            (C17582 + C17581 + C17580) * C50885) *
               C51010 * C33992 +
           ((C17875 + C17876 + C17877) * C50007 +
            (C17878 + C17879 + C17880) * C51143 -
            (C17053 * C722 + C17048 * C738 + C17052 * C723 + C17047 * C739 +
             C17051 * C724 + C17046 * C740) *
                C50000 -
            (C17053 * C734 + C17048 * C746 + C17052 * C735 + C17047 * C747 +
             C17051 * C736 + C17046 * C748) *
                C50885) *
               C51010 * C51086) *
              C50951 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19835 * C125 + C50862 * C132) * C121 +
            (C19835 * C136 + C50862 * C146) * C109 -
            (C19835 * C126 + C50862 * C133) * C122 -
            (C19835 * C137 + C50862 * C147) * C110 +
            (C19835 * C127 + C50862 * C134) * C123 +
            (C19835 * C138 + C50862 * C148) * C111 -
            (C19835 * C128 + C50862 * C135) * C124 -
            (C19835 * C139 + C50862 * C149) * C112) *
               C2173 +
           (C19971 * C121 + C19972 * C109 - C19973 * C122 - C19974 * C110 +
            C19975 * C123 + C19976 * C111 -
            (C19835 * C261 + C50862 * C267) * C124 -
            (C19835 * C269 + C50862 * C277) * C112) *
               C2174 +
           (C19977 * C121 + C19978 * C109 - C19979 * C122 - C19980 * C110 +
            C19981 * C123 + C19982 * C111 -
            (C19835 * C515 + C50862 * C520) * C124 -
            (C19835 * C524 + C50862 * C530) * C112) *
               C2175) *
              C33992 +
          ((C22261 * C121 + C22262 * C109 - C22263 * C122 - C22264 * C110 +
            C22265 * C123 + C22266 * C111 -
            (C19835 * C385 + C50862 * C391) * C124 -
            (C19835 * C393 + C50862 * C401) * C112) *
               C2173 +
           (C20450 * C121 + C20449 * C109 - C21141 * C122 - C21142 * C110 +
            C22079 * C123 + C22080 * C111 -
            (C19835 * C721 + C50862 * C729) * C124 -
            (C19835 * C733 + C50862 * C745) * C112) *
               C2174 +
           (C20448 * C121 + C20447 * C109 - C21143 * C122 - C21144 * C110 +
            C31488 * C123 + C31489 * C111 -
            (C19835 * C722 + C50862 * C738) * C124 -
            (C19835 * C734 + C50862 * C746) * C112) *
               C2175) *
              C51086) *
         C50951 * C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C50007 +
             (C19835 * C136 + C50862 * C146) * C51143 -
             (C19835 * C126 + C50862 * C133) * C50000 -
             (C19835 * C137 + C50862 * C147) * C50885) *
                C2173 +
            (C20203 + C20204 - C20205 - C20206) * C2174 + C20235 * C2175) *
               C33992 +
           ((C22862 + C22863 - C22864 - C22865) * C2173 + C24426 * C2174 +
            C31786 * C2175) *
               C51086) *
              C50951 * C507 +
          (((C20205 - (C20204 + C20203) + C20206) * C2173 +
            (C20209 - (C20208 + C20207) + C20210) * C2174 +
            (C20213 - (C20212 + C20211) + C20214) * C2175) *
               C33992 +
           (C24427 * C2173 + C33602 * C2174 +
            (C21617 - (C21618 + C21619) + C21620) * C2175) *
               C51086) *
              C50951 * C508 +
          ((C20235 * C2173 + C20236 * C2174 +
            (C20233 + C20232 - C20231 - C20234) * C2175) *
               C33992 +
           (C31786 * C2173 + (C21619 + C21618 - C21617 - C21620) * C2174 +
            (C20451 * C50007 + C20452 * C51143 -
             (C19835 * C3009 + C50862 * C3017) * C50000 -
             (C19835 * C3015 + C50862 * C3021) * C50885) *
                C2175) *
               C51086) *
              C50951 * C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C256 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C251 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C257 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C252 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C258 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C253) *
               C51010 * C33992 +
           ((C17051 * C387 + C17046 * C397 + C17052 * C383 + C17047 * C389 +
             C17053 * C384 + C17048 * C390) *
                C256 +
            (C17051 * C396 + C17046 * C404 + C17052 * C395 + C17047 * C403 +
             C17053 * C394 + C17048 * C402) *
                C251 -
            (C17053 * C385 + C17048 * C391 + C17052 * C384 + C17047 * C390 +
             C17051 * C383 + C17046 * C389) *
                C257 -
            (C17053 * C393 + C17048 * C401 + C17052 * C394 + C17047 * C402 +
             C17051 * C395 + C17046 * C403) *
                C252 +
            (C17051 * C384 + C17046 * C390 + C17052 * C385 + C17047 * C391 +
             C17053 * C386 + C17048 * C392) *
                C258 +
            (C17051 * C394 + C17046 * C402 + C17052 * C393 + C17047 * C401 +
             C17053 * C398 + C17048 * C405) *
                C253) *
               C51010 * C51086) *
              C50951 * C51151 +
          (((C17245 + C17244 + C17243) * C257 -
            ((C17242 + C17241 + C17240) * C251 +
             (C17239 + C17238 + C17237) * C256) +
            (C17248 + C17247 + C17246) * C252 -
            (C17251 + C17250 + C17249) * C258 -
            (C17254 + C17253 + C17252) * C253) *
               C51010 * C33992 +
           ((C18787 + C18788 + C18789) * C257 -
            ((C17869 + C17870 + C17871) * C251 +
             (C17872 + C17873 + C17874) * C256) +
            (C18790 + C18791 + C18792) * C252 -
            (C17053 * C1412 + C17048 * C1413 + C17052 * C721 + C17047 * C729 +
             C17051 * C720 + C17046 * C728) *
                C258 -
            (C17053 * C1414 + C17048 * C1415 + C17052 * C733 + C17047 * C745 +
             C17051 * C732 + C17046 * C744) *
                C253) *
               C51010 * C51086) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C603 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C50880) *
               C51010 * C33992 +
           ((C34323 + C34324 + C34325) * C603 +
            (C34326 + C34327 + C34328) * C50880) *
               C51010 * C51086) *
              C50951 * C599 -
          (((C17869 + C17870 + C17871) * C50880 +
            (C17872 + C17873 + C17874) * C603) *
               C51010 * C51086 +
           ((C17242 + C17241 + C17240) * C50880 +
            (C17239 + C17238 + C17237) * C603) *
               C51010 * C33992) *
              C50951 * C600 +
          (((C17579 + C17578 + C17577) * C603 +
            (C17576 + C17575 + C17574) * C50880) *
               C51010 * C33992 +
           ((C17875 + C17876 + C17877) * C603 +
            (C17878 + C17879 + C17880) * C50880) *
               C51010 * C51086) *
              C50951 * C601 -
          (((C17053 * C4009 + C17048 * C4010 + C17052 * C3014 + C17047 * C3020 +
             C17051 * C3013 + C17046 * C3019) *
                C50880 +
            (C17053 * C4007 + C17048 * C4008 + C17052 * C3008 + C17047 * C3012 +
             C17051 * C3007 + C17046 * C3011) *
                C603) *
               C51010 * C51086 +
           ((C17698 + C17697 + C17696) * C50880 +
            (C17695 + C17694 + C17693) * C603) *
               C51010 * C33992) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C256 +
             (C19835 * C136 + C50862 * C146) * C251 -
             (C19835 * C126 + C50862 * C133) * C257 -
             (C19835 * C137 + C50862 * C147) * C252 +
             (C19835 * C127 + C50862 * C134) * C258 +
             (C19835 * C138 + C50862 * C148) * C253) *
                C2173 +
            (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C2174 +
            (C19995 + C19996 - C19997 - C19998 + C19999 + C20000) * C2175) *
               C33992 +
           ((C22273 + C22274 - C22275 - C22276 + C22277 + C22278) * C2173 +
            (C22061 + C22062 - C22063 - C22064 + C22085 + C22086) * C2174 +
            (C31480 + C31481 - C31482 - C31483 + C31490 + C31491) * C2175) *
               C51086) *
              C50951 * C51151 +
          (((C19991 - (C19990 + C19989) + C19992 - C19993 - C19994) * C2173 +
            (C19997 - (C19996 + C19995) + C19998 - C19999 - C20000) * C2174 +
            (C20003 - (C20002 + C20001) + C20004 - C20005 - C20006) * C2175) *
               C33992 +
           ((C22063 - (C22062 + C22061) + C22064 - C22085 - C22086) * C2173 +
            (C31482 - (C31481 + C31480) + C31483 - C31490 - C31491) * C2174 +
            (C21145 * C257 - (C20445 * C251 + C20446 * C256) + C21146 * C252 -
             (C19835 * C4007 + C50862 * C4008) * C258 -
             (C19835 * C4009 + C50862 * C4010) * C253) *
                C2175) *
               C51086) *
              C50951 * C50939)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C603 +
             (C19835 * C136 + C50862 * C146) * C50880) *
                C2173 +
            (C20307 + C20308) * C2174 + C20319 * C2175) *
               C33992 +
           ((C22689 + C22690) * C2173 + C22691 * C2174 + C22701 * C2175) *
               C51086) *
              C50951 * C599 -
          ((C20461 * C2175 + C20462 * C2174 + C22700 * C2173) * C51086 +
           (C20322 * C2175 + (C20310 + C20309) * C2174 +
            (C20308 + C20307) * C2173) *
               C33992) *
              C50951 * C600 +
          ((C20319 * C2173 + C20320 * C2174 + (C20314 + C20313) * C2175) *
               C33992 +
           (C22701 * C2173 + C32031 * C2174 + (C20459 + C20460) * C2175) *
               C51086) *
              C50951 * C601 -
          ((((C19835 * C20425 + C50862 * C20427) * C50880 +
             (C19835 * C20424 + C50862 * C20426) * C603) *
                C2175 +
            (C20460 + C20459) * C2174 + C20461 * C2173) *
               C51086 +
           ((C20326 + C20325) * C2175 + C20321 * C2174 + C20322 * C2173) *
               C33992) *
              C50951 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
             C17053 * C127 + C17048 * C134) *
                C256 +
            (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
             C17053 * C138 + C17048 * C148) *
                C251 -
            (C17053 * C128 + C17048 * C135 + C17052 * C127 + C17047 * C134 +
             C17051 * C126 + C17046 * C133) *
                C257 -
            (C17053 * C139 + C17048 * C149 + C17052 * C138 + C17047 * C148 +
             C17051 * C137 + C17046 * C147) *
                C252 +
            (C17051 * C127 + C17046 * C134 + C17052 * C128 + C17047 * C135 +
             C17053 * C129 + C17048 * C140) *
                C258 +
            (C17051 * C138 + C17046 * C148 + C17052 * C139 + C17047 * C149 +
             C17053 * C141 + C17048 * C150) *
                C253) *
               C51010 * C33992 +
           ((C34323 + C34324 + C34325) * C256 +
            (C34326 + C34327 + C34328) * C251 -
            (C34329 + C34330 + C34331) * C257 -
            (C34332 + C34333 + C34334) * C252 +
            (C34335 + C34336 + C34337) * C258 +
            (C34338 + C34339 + C34340) * C253) *
               C51010 * C51086) *
              C51152 +
          (((C34331 + C34330 + C34329) * C257 -
            ((C34328 + C34327 + C34326) * C251 +
             (C34325 + C34324 + C34323) * C256) +
            (C34334 + C34333 + C34332) * C252 -
            (C34337 + C34336 + C34335) * C258 -
            (C34340 + C34339 + C34338) * C253) *
               C51010 * C33992 +
           ((C17051 * C852 + C17046 * C857 + C17052 * C853 + C17047 * C858 +
             C17053 * C854 + C17048 * C859) *
                C257 -
            ((C17053 * C862 + C17048 * C868 + C17052 * C861 + C17047 * C867 +
              C17051 * C860 + C17046 * C866) *
                 C251 +
             (C17053 * C853 + C17048 * C858 + C17052 * C852 + C17047 * C857 +
              C17051 * C851 + C17046 * C856) *
                 C256) +
            (C17051 * C861 + C17046 * C867 + C17052 * C862 + C17047 * C868 +
             C17053 * C863 + C17048 * C869) *
                C252 -
            (C17053 * C855 + C17048 * C864 + C17052 * C854 + C17047 * C859 +
             C17051 * C853 + C17046 * C858) *
                C258 -
            (C17053 * C865 + C17048 * C870 + C17052 * C863 + C17047 * C869 +
             C17051 * C862 + C17046 * C868) *
                C253) *
               C51010 * C51086) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C17051 * C125 + C17046 * C132 + C17052 * C126 + C17047 * C133 +
              C17053 * C127 + C17048 * C134) *
                 C603 +
             (C17051 * C136 + C17046 * C146 + C17052 * C137 + C17047 * C147 +
              C17053 * C138 + C17048 * C148) *
                 C50880) *
                C51010 * C33992 +
            ((C34323 + C34324 + C34325) * C603 +
             (C34326 + C34327 + C34328) * C50880) *
                C51010 * C51086) *
               C51152 -
           (((C17053 * C862 + C17048 * C868 + C17052 * C861 + C17047 * C867 +
              C17051 * C860 + C17046 * C866) *
                 C50880 +
             (C17053 * C853 + C17048 * C858 + C17052 * C852 + C17047 * C857 +
              C17051 * C851 + C17046 * C856) *
                 C603) *
                C51010 * C51086 +
            ((C34328 + C34327 + C34326) * C50880 +
             (C34325 + C34324 + C34323) * C603) *
                C51010 * C33992) *
               C50963) *
              C507 +
          ((((C17874 + C17873 + C17872) * C603 +
             (C17871 + C17870 + C17869) * C50880) *
                C51010 * C33992 +
            ((C18185 + C18186 + C18187) * C603 +
             (C18188 + C18189 + C18190) * C50880) *
                C51010 * C51086) *
               C50963 -
           (((C17869 + C17870 + C17871) * C50880 +
             (C17872 + C17873 + C17874) * C603) *
                C51010 * C51086 +
            ((C17242 + C17241 + C17240) * C50880 +
             (C17239 + C17238 + C17237) * C603) *
                C51010 * C33992) *
               C51152) *
              C508 +
          ((((C17579 + C17578 + C17577) * C603 +
             (C17576 + C17575 + C17574) * C50880) *
                C51010 * C33992 +
            ((C17875 + C17876 + C17877) * C603 +
             (C17878 + C17879 + C17880) * C50880) *
                C51010 * C51086) *
               C51152 -
           (((C17053 * C3218 + C17048 * C3221 + C17052 * C3216 +
              C17047 * C3220 + C17051 * C3215 + C17046 * C3219) *
                 C50880 +
             (C17053 * C3212 + C17048 * C3217 + C17052 * C3211 +
              C17047 * C3214 + C17051 * C3210 + C17046 * C3213) *
                 C603) *
                C51010 * C51086 +
            ((C17880 + C17879 + C17878) * C50880 +
             (C17877 + C17876 + C17875) * C603) *
                C51010 * C33992) *
               C50963) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19835 * C125 + C50862 * C132) * C256 +
             (C19835 * C136 + C50862 * C146) * C251 -
             (C19835 * C126 + C50862 * C133) * C257 -
             (C19835 * C137 + C50862 * C147) * C252 +
             (C19835 * C127 + C50862 * C134) * C258 +
             (C19835 * C138 + C50862 * C148) * C253) *
                C2173 +
            (C19989 + C19990 - C19991 - C19992 + C19993 + C19994) * C2174 +
            (C19995 + C19996 - C19997 - C19998 + C19999 + C20000) * C2175) *
               C33992 +
           ((C22273 + C22274 - C22275 - C22276 + C22277 + C22278) * C2173 +
            (C22061 + C22062 - C22063 - C22064 + C22085 + C22086) * C2174 +
            (C31480 + C31481 - C31482 - C31483 + C31490 + C31491) * C2175) *
               C51086) *
              C51152 +
          (((C22275 - (C22274 + C22273) + C22276 - C22277 - C22278) * C2173 +
            (C22063 - (C22062 + C22061) + C22064 - C22085 - C22086) * C2174 +
            (C31482 - (C31481 + C31480) + C31483 - C31490 - C31491) * C2175) *
               C33992 +
           ((C22281 - (C22280 + C22279) + C22282 - C22283 - C22284) * C2173 +
            (C22087 - (C22070 + C22069) + C22088 - C22089 - C22090) * C2174 +
            (C22441 * C257 - (C20678 * C251 + C20677 * C256) + C22442 * C252 -
             (C19835 * C3212 + C50862 * C3217) * C258 -
             (C19835 * C3218 + C50862 * C3221) * C253) *
                C2175) *
               C51086) *
              C50963) *
         C50925) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C19835 * C125 + C50862 * C132) * C603 +
              (C19835 * C136 + C50862 * C146) * C50880) *
                 C2173 +
             (C20307 + C20308) * C2174 + C20319 * C2175) *
                C33992 +
            ((C22689 + C22690) * C2173 + C22691 * C2174 + C22701 * C2175) *
                C51086) *
               C51152 -
           ((C22707 * C2175 + C22699 * C2174 + (C22693 + C22692) * C2173) *
                C51086 +
            (C20462 * C2175 + C22700 * C2174 + (C22690 + C22689) * C2173) *
                C33992) *
               C50963) *
              C507 +
          (((C22691 * C2173 + C22701 * C2174 + C32031 * C2175) * C33992 +
            (C22694 * C2173 + C22702 * C2174 + (C20685 + C20686) * C2175) *
                C51086) *
               C50963 -
           ((C20461 * C2175 + C20462 * C2174 + C22700 * C2173) * C51086 +
            (C20322 * C2175 + (C20310 + C20309) * C2174 +
             (C20308 + C20307) * C2173) *
                C33992) *
               C51152) *
              C508 +
          (((C20319 * C2173 + C20320 * C2174 + (C20314 + C20313) * C2175) *
                C33992 +
            (C22701 * C2173 + C32031 * C2174 + (C20459 + C20460) * C2175) *
                C51086) *
               C51152 -
           ((((C19835 * C20659 + C50862 * C20661) * C50880 +
              (C19835 * C20658 + C50862 * C20660) * C603) *
                 C2175 +
             (C20686 + C20685) * C2174 + C22707 * C2173) *
                C51086 +
            ((C20460 + C20459) * C2175 + C20461 * C2174 + C20462 * C2173) *
                C33992) *
               C50963) *
              C509)) /
            (p * q * std::sqrt(p + q));
}
