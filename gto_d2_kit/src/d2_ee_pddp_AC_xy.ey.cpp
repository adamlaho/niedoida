/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pddp_AC_xy.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1221_13_12(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49745 = 0 * ae;
    const double C49744 = ae * be;
    const double C49743 = 0 * be;
    const double C49742 = ae + be;
    const double C49741 = 0 * be;
    const double C49740 = xA - xB;
    const double C49783 = ce + de;
    const double C49782 = yC - yD;
    const double C49793 = ce * de;
    const double C49792 = 0 * de;
    const double C49811 = 0 * ce;
    const double C49807 = 0 * de;
    const double C49873 = yP - yQ;
    const double C49872 = p + q;
    const double C49871 = p * q;
    const double C49870 = xP - xQ;
    const double C49878 = bs[3];
    const double C49889 = bs[4];
    const double C49897 = bs[5];
    const double C49916 = bs[6];
    const double C49948 = bs[7];
    const double C50085 = zP - zQ;
    const double C50237 = bs[2];
    const double C122 = bs[0];
    const double C50629 = xC - xD;
    const double C50661 = zC - zD;
    const double C50754 = yA - yB;
    const double C50766 = zA - zB;
    const double C49750 = C49745 / C49742;
    const double C49747 = 2 * C49742;
    const double C49746 = std::pow(C49742, 2);
    const double C49749 = C49744 * C49740;
    const double C49748 = C49740 * C49743;
    const double C50607 = C49740 * be;
    const double C50606 = C49740 * ae;
    const double C50605 = std::pow(C49740, 2);
    const double C49791 = 2 * C49783;
    const double C49808 = std::pow(C49783, 2);
    const double C49881 = C49783 * C49742;
    const double C143 = (-(std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                           (xP - xQ) * (yP - yQ) * ae * ce) /
                         C49783) /
                        C49742;
    const double C50666 = std::pow(C49782, 2);
    const double C50682 = C49782 * de;
    const double C50681 = C49782 * ce;
    const double C49794 = C49793 * C49782;
    const double C49809 = C49782 * C49792;
    const double C49815 = C49811 / C49783;
    const double C49879 = C49873 * ce;
    const double C50094 = std::pow(C49873, 2);
    const double C49874 = 2 * C49871;
    const double C49880 = C49870 * C49873;
    const double C49899 = std::pow(C49870, 2);
    const double C49983 = C49870 * ae;
    const double C50170 = std::pow(C50085, 2);
    const double C50632 = C50629 * de;
    const double C50631 = C50629 * ce;
    const double C50630 = std::pow(C50629, 2);
    const double C50696 = std::pow(C50661, 2);
    const double C50708 = C50661 * de;
    const double C50707 = C50661 * ce;
    const double C50755 = std::pow(C50754, 2);
    const double C50805 = C50754 * be;
    const double C50804 = C50754 * ae;
    const double C50767 = std::pow(C50766, 2);
    const double C50831 = C50766 * be;
    const double C50830 = C50766 * ae;
    const double C50615 = std::pow(C49747, -1);
    const double C50913 = std::pow(C49747, -2);
    const double C49751 = 2 * C49746;
    const double C50891 = 4 * C49746;
    const double C49752 = C49748 / C49742;
    const double C50608 = C50605 * C49744;
    const double C50640 = std::pow(C49791, -1);
    const double C50900 = std::pow(C49791, -2);
    const double C49812 = 2 * C49808;
    const double C50898 = 4 * C49808;
    const double C50667 = C50666 * C49793;
    const double C49813 = C49809 / C49783;
    const double C49883 = C49878 * C49879;
    const double C49891 = C49889 * C49879;
    const double C49902 = C49897 * C49879;
    const double C49922 = C49916 * C49879;
    const double C49957 = C49948 * C49879;
    const double C49875 = C49874 / C49872;
    const double C133 = (bs[1] * C49879 * C49874) / (C49872 * C49783);
    const double C123 = -(C49870 * bs[1] * C49874) / C49872;
    const double C258 = -(C49873 * bs[1] * C49874) / C49872;
    const double C383 = -(C50085 * bs[1] * C49874) / C49872;
    const double C49884 = C49880 * ae;
    const double C49986 = C49889 * C49983;
    const double C49992 = C49897 * C49983;
    const double C50002 = C49916 * C49983;
    const double C50025 = C49878 * C49983;
    const double C50045 = C49948 * C49983;
    const double C129 = (-(bs[1] * C49983 * C49874) / C49872) / C49742;
    const double C50633 = C50630 * C49793;
    const double C50697 = C50696 * C49793;
    const double C50756 = C50755 * C49744;
    const double C50768 = C50767 * C49744;
    const double C49757 = C49743 / C49751;
    const double C49755 = C49741 / C49751;
    const double C49754 = 0 - C49752;
    const double C50609 = C50608 / C49742;
    const double C49820 = C49792 / C49812;
    const double C49818 = C49807 / C49812;
    const double C50668 = C50667 / C49783;
    const double C49817 = 0 - C49813;
    const double C49877 = -C49875;
    const double C49888 = std::pow(C49875, 4);
    const double C49915 = std::pow(C49875, 6);
    const double C144 =
        (-(C49870 * std::pow(-C49875, 3) * bs[3] * C49870 * C49873 * ae * ce) /
         C49783) /
            C49742 -
        (ae * std::pow(C49875, 2) * bs[2] * C49873 * ce) / (C49783 * C49742);
    const double C50236 = std::pow(C49875, 2);
    const double C130 =
        (C49870 * std::pow(C49875, 2) * bs[2] * C49983) / C49742 -
        (ae * bs[1] * C49874) / (C49872 * C49742);
    const double C49886 = C49884 * ce;
    const double C50634 = C50633 / C49783;
    const double C50698 = C50697 / C49783;
    const double C50757 = C50756 / C49742;
    const double C50769 = C50768 / C49742;
    const double C49759 = C49754 * ae;
    const double C50610 = -C50609;
    const double C50669 = -C50668;
    const double C49822 = C49817 * ce;
    const double C49882 = std::pow(C49877, 3);
    const double C49896 = std::pow(C49877, 5);
    const double C49947 = std::pow(C49877, 7);
    const double C49893 = C49888 * C49891;
    const double C49985 = C49889 * C49888;
    const double C49987 = C49888 * C49986;
    const double C49926 = C49915 * C49922;
    const double C50005 = C49916 * C49915;
    const double C50006 = C49915 * C50002;
    const double C50238 = C50237 * C50236;
    const double C134 = -(C49870 * C50236 * C50237 * C49879) / C49783;
    const double C264 = (C49873 * C50236 * C50237 * C49983) / C49742;
    const double C268 = (ce * bs[1] * C49874) / (C49872 * C49783) -
                        (C49873 * C50236 * C50237 * C49879) / C49783;
    const double C393 = -(C50085 * C50236 * C50237 * C49879) / C49783;
    const double C394 = (C50085 * C50236 * C50237 * C49983) / C49742;
    const double C49890 = C49889 * C49886;
    const double C49900 = C49897 * C49886;
    const double C49919 = C49916 * C49886;
    const double C49953 = C49948 * C49886;
    const double C50635 = -C50634;
    const double C50699 = -C50698;
    const double C50758 = -C50757;
    const double C50770 = -C50769;
    const double C49762 = C49759 / C49742;
    const double C50611 = std::exp(C50610);
    const double C50670 = std::exp(C50669);
    const double C49824 = C49822 / C49783;
    const double C49885 = C49882 * C49883;
    const double C49984 = C49878 * C49882;
    const double C50026 = C49882 * C50025;
    const double C276 =
        (-(C49873 * C49882 * C49878 * C49886) / C49783) / C49742 -
        (std::pow(C49875, 2) * bs[2] * C49983 * ce) / C49881;
    const double C401 =
        (-((zP - zQ) * C49882 * C49878 * C49886) / C49783) / C49742;
    const double C49904 = C49896 * C49902;
    const double C49995 = C49897 * C49896;
    const double C49996 = C49896 * C49992;
    const double C49962 = C49947 * C49957;
    const double C50050 = C49947 * C50045;
    const double C49898 = ae * C49893;
    const double C49895 = C49870 * C49893;
    const double C50348 = C49873 * C49893;
    const double C49994 = C49870 * C49985;
    const double C49993 = C49985 * ae;
    const double C50247 = C49985 * C49899;
    const double C50351 = C49985 * C50094;
    const double C50388 = C49873 * C49985;
    const double C50387 = C49985 * ce;
    const double C50585 = C49985 * C50170;
    const double C50597 = C50085 * C49985;
    const double C50028 = C49870 * C49987;
    const double C50093 = C49987 * ce;
    const double C50091 = C49873 * C49987;
    const double C49929 = C49926 * C49899;
    const double C49949 = ae * C49926;
    const double C49945 = C49870 * C49926;
    const double C50454 = C49873 * C49926;
    const double C50493 = C49926 * C50170;
    const double C50008 = C50005 * C49899;
    const double C50047 = C49870 * C50005;
    const double C50046 = C50005 * ae;
    const double C50458 = C50005 * C50094;
    const double C50010 = C49870 * C50006;
    const double C50138 = C50006 * C50094;
    const double C50190 = C50006 * ce;
    const double C50188 = C49873 * C50006;
    const double C50502 = C50006 * C50170;
    const double C124 = C50238 * C49899 - (bs[1] * C49874) / C49872;
    const double C257 = C49873 * C49870 * C50238;
    const double C379 = C50085 * C49870 * C50238;
    const double C509 = C50238 * C50094 - (bs[1] * C49874) / C49872;
    const double C718 = C50085 * C49873 * C50238;
    const double C851 = C50238 * C50170 - (bs[1] * C49874) / C49872;
    const double C49892 = C49888 * C49890;
    const double C49903 = C49896 * C49900;
    const double C49924 = C49915 * C49919;
    const double C49960 = C49947 * C49953;
    const double C50636 = std::exp(C50635);
    const double C50700 = std::exp(C50699);
    const double C50759 = std::exp(C50758);
    const double C50771 = std::exp(C50770);
    const double C49764 = C49762 - C49755;
    const double C19873 = C50611 * C264;
    const double C22029 = C50611 * C394;
    const double C49753 = C49749 * C50611;
    const double C50612 = C50611 * C50606;
    const double C50616 = C50615 * C50611;
    const double C50888 = C50611 * C50607;
    const double C50885 = C50611 / C49747;
    const double C16985 = C50913 * C50611;
    const double C49795 = C49794 * C50670;
    const double C121 = -(2 * ce * de * (yC - yD) * C50670) / (ce + de);
    const double C253 =
        ((C50670 - (C49782 * 2 * ce * de * C49782 * C50670) / C49783) * ce) /
            C49783 -
        (0 * de) / (2 * std::pow(C49783, 2));
    const double C254 =
        (0 * ce) / C49783 - (ce * de * C49782 * C50670) / std::pow(C49783, 2);
    const double C50683 = C50670 * C50681;
    const double C50686 = C50640 * C50670;
    const double C50903 = C50670 * C50682;
    const double C50902 = C50670 / C49791;
    const double C503 = C50900 * C50670;
    const double C49826 = C49824 - C49818;
    const double C145 =
        (-(ae * C49870 * C49885) / C49783) / C49742 -
        (C49882 * C49878 * C49886) / C49881 +
        C49870 * ((-(C49870 * std::pow(C49875, 4) * bs[4] * C49886) / C49783) /
                      C49742 -
                  (ae * C49885) / C49881);
    const double C135 = -(C49885 * C49899 + C50236 * C50237 * C49879) / C49783;
    const double C136 = (-2 * C49870 * C49885) / C49783 -
                        (C49870 * (C49893 * C49899 + C49885)) / C49783;
    const double C267 =
        -(C49873 * C49870 * C49885 + C49870 * C50238 * ce) / C49783;
    const double C389 = -(C50085 * C49870 * C49885) / C49783;
    const double C390 = -(C50085 * (C49893 * C49899 + C49885)) / C49783;
    const double C518 = -(C49873 * (C49873 * C49885 + C50238 * ce) +
                          C50236 * C50237 * C49879 + C49873 * C50238 * ce) /
                        C49783;
    const double C730 = -(C50085 * (C49873 * C49885 + C50238 * ce)) / C49783;
    const double C860 = -(C49885 * C50170 + C50236 * C50237 * C49879) / C49783;
    const double C1062 = (-2 * C50085 * C49885) / C49783 -
                         (C50085 * (C49893 * C50170 + C49885)) / C49783;
    const double C50029 = C49984 * ae;
    const double C50246 = C49870 * C49984;
    const double C50350 = C49873 * C49984;
    const double C50349 = C49984 * ce;
    const double C266 = -(C49873 * (C49893 * C49899 + C49885) +
                          (C50238 + C49984 * C49899) * ce) /
                        C49783;
    const double C615 = (-2 * (C49873 * C49885 + C50238 * ce)) / C49783 -
                        (C49873 * (C49873 * (C49873 * C49893 + C49984 * ce) +
                                   C49885 + C49873 * C49984 * ce)) /
                            C49783 -
                        ((C50238 + C49984 * C50094) * ce) / C49783;
    const double C741 = -(C50085 * (C49873 * (C49873 * C49893 + C49984 * ce) +
                                    C49885 + C49873 * C49984 * ce)) /
                        C49783;
    const double C980 = -((C49873 * C49893 + C49984 * ce) * C50170 +
                          C49873 * C49885 + C50238 * ce) /
                        C49783;
    const double C125 =
        2 * C49870 * C50238 + C49870 * (C50238 + C49984 * C49899);
    const double C256 = C49873 * (C50238 + C49984 * C49899);
    const double C380 = C50085 * (C50238 + C49984 * C49899);
    const double C607 =
        2 * C49873 * C50238 + C49873 * (C50238 + C49984 * C50094);
    const double C725 = C50085 * (C50238 + C49984 * C50094);
    const double C1058 =
        2 * C50085 * C50238 + C50085 * (C50238 + C49984 * C50170);
    const double C5985 =
        3 * (C50238 + C49984 * C50170) +
        C50085 * (2 * C50085 * C49984 + C50085 * (C49984 + C49985 * C50170));
    const double C131 =
        (C50236 * C50237 * C49983 + C49870 * (C49870 * C50026 + C50238 * ae) +
         C49870 * C50238 * ae) /
        C49742;
    const double C263 = (C49873 * (C49870 * C50026 + C50238 * ae)) / C49742;
    const double C385 = (C50085 * (C49870 * C50026 + C50238 * ae)) / C49742;
    const double C514 = (C50236 * C50237 * C49983 + C50026 * C50094) / C49742;
    const double C611 =
        (2 * C49873 * C50026 + C49873 * (C50026 + C49987 * C50094)) / C49742;
    const double C726 = (C50085 * C49873 * C50026) / C49742;
    const double C737 = (C50085 * (C50026 + C49987 * C50094)) / C49742;
    const double C856 = (C50236 * C50237 * C49983 + C50026 * C50170) / C49742;
    const double C1066 =
        (2 * C50085 * C50026 + C50085 * (C50026 + C49987 * C50170)) / C49742;
    const double C19875 = C50611 * C276;
    const double C22031 = C50611 * C401;
    const double C49906 = C49904 * C49899;
    const double C49917 = ae * C49904;
    const double C49913 = C49870 * C49904;
    const double C50386 = C49873 * C49904;
    const double C50441 = C49904 * C50170;
    const double C50492 = C50085 * C49904;
    const double C5990 =
        (-3 * (C49893 * C50170 + C49885)) / C49783 +
        C50085 * ((-2 * C50085 * C49893) / C49783 -
                  (C50085 * (C49904 * C50170 + C49893)) / C49783);
    const double C49997 = C49995 * C49899;
    const double C50004 = C49870 * C49995;
    const double C50003 = C49995 * ae;
    const double C50389 = C49995 * C50094;
    const double C50456 = C49873 * C49995;
    const double C50455 = C49995 * ce;
    const double C50598 = C49995 * C50170;
    const double C49998 = C49870 * C49996;
    const double C50097 = C49996 * C50094;
    const double C50137 = C49996 * ce;
    const double C50135 = C49873 * C49996;
    const double C50447 = C49996 * C50170;
    const double C50501 = C50085 * C49996;
    const double C5988 =
        (3 * (C50026 + C49987 * C50170) +
         C50085 * (2 * C50085 * C49987 + C50085 * (C49987 + C49996 * C50170))) /
        C49742;
    const double C49965 = C49962 * C49899;
    const double C50052 = C49870 * C50050;
    const double C50192 = C50050 * C50094;
    const double C49901 = C49898 / C49881;
    const double C861 = -(C49895 * C50170 + C49870 * C49885) / C49783;
    const double C50033 = C49994 * ae;
    const double C50250 = 2 * C49994;
    const double C50357 = C49873 * C49994;
    const double C50356 = C49994 * ce;
    const double C50248 = C49984 + C50247;
    const double C50353 = C49984 + C50351;
    const double C50393 = 2 * C50388;
    const double C50391 = C50388 * ce;
    const double C50586 = C49984 + C50585;
    const double C50599 = 2 * C50597;
    const double C50096 = C50093 / C49881;
    const double C976 = (C49873 * C50026 + C50091 * C50170) / C49742;
    const double C49932 = C49929 + C49904;
    const double C49954 = C49949 / C49881;
    const double C49956 = -2 * C49945;
    const double C49952 = ae * C49945;
    const double C50372 = C49873 * C49945;
    const double C50438 = C49945 * C50170;
    const double C50495 = C50493 + C49904;
    const double C50011 = C49995 + C50008;
    const double C50051 = C50047 * ae;
    const double C50375 = C50047 * C50094;
    const double C50464 = C49995 + C50458;
    const double C50143 = C49996 + C50138;
    const double C50196 = C50190 / C49881;
    const double C50197 = 2 * C50188;
    const double C50194 = C50188 * ce;
    const double C50489 = C50188 * C50170;
    const double C50504 = C49996 + C50502;
    const double C146 =
        2 * ((-(C49870 * C49892) / C49783) / C49742 - (ae * C49885) / C49881) -
        (ae * (C49893 * std::pow(C49870, 2) + C49885)) / C49881 +
        C49870 *
            ((-(ae * C49870 * C49893) / C49783) / C49742 - C49892 / C49881 +
             C49870 *
                 ((-(C49870 * std::pow(C49877, 5) * bs[5] * C49886) / C49783) /
                      C49742 -
                  (ae * C49893) / C49881));
    const double C275 = C49873 * ((-(C49870 * C49892) / C49783) / C49742 -
                                  (ae * C49885) / C49881) -
                        ((C49870 * C49882 * C49878 * C49983 +
                          bs[2] * std::pow(C49875, 2) * ae) *
                         ce) /
                            C49881;
    const double C397 = (zP - zQ) * ((-(C49870 * C49892) / C49783) / C49742 -
                                     (ae * C49885) / C49881);
    const double C524 = (-(C49873 * C50026 * ce) / C49783) / C49742 -
                        (C49882 * C49878 * C49886) / C49881 +
                        C49873 * ((-(C49873 * C49892) / C49783) / C49742 -
                                  (C50026 * ce) / C49881);
    const double C742 = (zP - zQ) * ((-(C49873 * C49892) / C49783) / C49742 -
                                     (C50026 * ce) / C49881);
    const double C866 = (-(C49892 * std::pow(zP - zQ, 2)) / C49783) / C49742 -
                        (C49882 * C49878 * C49886) / C49881;
    const double C49905 = C49870 * C49903;
    const double C49914 = C49903 / C49881;
    const double C50092 = C49873 * C49903;
    const double C619 =
        2 * ((-(C49873 * C49892) / C49783) / C49742 - (C50026 * ce) / C49881) -
        ((C50026 + C49987 * std::pow(C49873, 2)) * ce) / C49881 +
        C49873 *
            ((-(C49873 * C49987 * ce) / C49783) / C49742 - C49892 / C49881 +
             C49873 * ((-(C49873 * C49903) / C49783) / C49742 -
                       (C49987 * ce) / C49881));
    const double C749 =
        (zP - zQ) *
        ((-(C49873 * C49987 * ce) / C49783) / C49742 - C49892 / C49881 +
         C49873 *
             ((-(C49873 * C49903) / C49783) / C49742 - (C49987 * ce) / C49881));
    const double C984 =
        (-(C49873 * C49892) / C49783) / C49742 - (C50026 * ce) / C49881 +
        ((-(C49873 * C49903) / C49783) / C49742 - (C49987 * ce) / C49881) *
            std::pow(zP - zQ, 2);
    const double C1070 =
        (-2 * C50085 * C49892) / C49881 +
        C50085 * ((-(C49903 * std::pow(C50085, 2)) / C49783) / C49742 -
                  C49892 / C49881);
    const double C49928 = C49870 * C49924;
    const double C49946 = C49924 / C49881;
    const double C50136 = C49873 * C49924;
    const double C50179 = C49924 * C50170;
    const double C50223 = C50085 * C49924;
    const double C49964 = C49870 * C49960;
    const double C50189 = C49873 * C49960;
    const double C50224 = C49960 * C50170;
    const double C50637 = C50636 * C50631;
    const double C50641 = C50640 * C50636;
    const double C50894 = C50636 / C49791;
    const double C50893 = C50636 * C50632;
    const double C252 = C50900 * C50636;
    const double C50709 = C50700 * C50707;
    const double C50712 = C50640 * C50700;
    const double C50908 = C50700 * C50708;
    const double C50907 = C50700 / C49791;
    const double C850 = C50900 * C50700;
    const double C50806 = C50759 * C50804;
    const double C50809 = C50615 * C50759;
    const double C50917 = C50759 * C50805;
    const double C50912 = C50759 / C49747;
    const double C2175 = C50913 * C50759;
    const double C50832 = C50771 * C50830;
    const double C50835 = C50615 * C50771;
    const double C50921 = C50771 * C50831;
    const double C50914 = C50771 / C49747;
    const double C5084 = C50913 * C50771;
    const double C49758 = C49753 / C49746;
    const double C49756 = 2 * C49753;
    const double C50889 = C50612 / C49751;
    const double C50887 = C50612 / C49742;
    const double C50886 = C50612 * C50607;
    const double C16984 = (2 * C50615 * C50612) / C49742;
    const double C50890 = C50616 * C50607;
    const double C108 = C50616 / C50891;
    const double C7915 = C50616 / C49747;
    const double C50926 = C50888 / C49742;
    const double C16983 = (C50611 * std::pow(C50606, 2)) / C49746 + C50885;
    const double C49796 = 2 * C49795;
    const double C49816 = C49795 / C49808;
    const double C50905 = C50683 / C49812;
    const double C50904 = C50683 * C50682;
    const double C50899 = C50683 / C49783;
    const double C50689 = C50686 * C50682;
    const double C598 = C50686 / C50898;
    const double C1276 = C50686 / C49791;
    const double C50931 = C50903 / C49783;
    const double C502 = (-2 * C50640 * C50903) / C49783;
    const double C501 = (C50670 * std::pow(C50682, 2)) / C49808 + C50902;
    const double C50030 = C50028 + C50029;
    const double C519 = -(C49873 * (C49873 * C49895 + C50246 * ce) +
                          C49870 * C49885 + C49873 * C50246 * ce) /
                        C49783;
    const double C731 = -(C50085 * (C49873 * C49895 + C50246 * ce)) / C49783;
    const double C510 = C49870 * C50238 + C50246 * C50094;
    const double C606 =
        2 * C49873 * C50246 + C49873 * (C50246 + C49994 * C50094);
    const double C719 = C50085 * C49873 * C50246;
    const double C724 = C50085 * (C50246 + C49994 * C50094);
    const double C852 = C49870 * C50238 + C50246 * C50170;
    const double C1057 =
        2 * C50085 * C50246 + C50085 * (C50246 + C49994 * C50170);
    const double C972 = C49873 * C50238 + C50350 * C50170;
    const double C3485 =
        2 * C50085 * C50350 + C50085 * (C50350 + C50388 * C50170);
    const double C50352 = C50348 + C50349;
    const double C2326 = C50616 * C263;
    const double C19885 = C50611 * C263;
    const double C24807 = C50616 * C263;
    const double C5381 = C50616 * C385;
    const double C22051 = C50611 * C385;
    const double C27923 = C50616 * C385;
    const double C19877 = C50611 * C514;
    const double C19881 = C50611 * C611;
    const double C20313 = C50611 * C726;
    const double C20317 = C50611 * C737;
    const double C22035 = C50611 * C856;
    const double C22683 = C50611 * C1066;
    const double C49908 = C49906 + C49893;
    const double C49920 = C49917 / C49881;
    const double C49921 = -2 * C49913;
    const double C49918 = ae * C49913;
    const double C50355 = C49873 * C49913;
    const double C614 = (-2 * (C49873 * C49895 + C50246 * ce)) / C49783 -
                        (C49873 * (C49873 * (C49873 * C49913 + C49994 * ce) +
                                   C49895 + C49873 * C49994 * ce)) /
                            C49783 -
                        ((C50246 + C49994 * C50094) * ce) / C49783;
    const double C740 = -(C50085 * (C49873 * (C49873 * C49913 + C49994 * ce) +
                                    C49895 + C49873 * C49994 * ce)) /
                        C49783;
    const double C979 = -((C49873 * C49913 + C49994 * ce) * C50170 +
                          C49873 * C49895 + C50246 * ce) /
                        C49783;
    const double C1061 = (-2 * C50085 * C49895) / C49783 -
                         (C50085 * (C49913 * C50170 + C49895)) / C49783;
    const double C5991 =
        (-3 * (C49913 * C50170 + C49895)) / C49783 +
        C50085 * ((-2 * C50085 * C49913) / C49783 -
                  (C50085 * (C49945 * C50170 + C49913)) / C49783);
    const double C50390 = C50386 + C50387;
    const double C50442 = C50441 + C49893;
    const double C50494 = -2 * C50492;
    const double C49999 = C49985 + C49997;
    const double C50009 = 2 * C50004;
    const double C50007 = C50004 * ae;
    const double C50358 = C50004 * C50094;
    const double C50374 = C49873 * C50004;
    const double C50373 = C50004 * ce;
    const double C50582 = C50004 * C50170;
    const double C5986 =
        3 * (C50246 + C49994 * C50170) +
        C50085 * (2 * C50085 * C49994 + C50085 * (C49994 + C50004 * C50170));
    const double C50012 = C50010 + C50003;
    const double C50392 = C49985 + C50389;
    const double C50465 = 2 * C50456;
    const double C50462 = C50456 * ce;
    const double C50594 = C50456 * C50170;
    const double C6180 =
        3 * (C50350 + C50388 * C50170) +
        C50085 * (2 * C50085 * C50388 + C50085 * (C50388 + C50456 * C50170));
    const double C50461 = C50454 + C50455;
    const double C50600 = C49985 + C50598;
    const double C50000 = C49998 + C49993;
    const double C50099 = C49987 + C50097;
    const double C50141 = C50137 / C49881;
    const double C50142 = 2 * C50135;
    const double C50139 = C50135 * ce;
    const double C3493 =
        (2 * C50085 * C50091 + C50085 * (C50091 + C50135 * C50170)) / C49742;
    const double C6182 =
        (3 * (C50091 + C50135 * C50170) +
         C50085 * (2 * C50085 * C50135 + C50085 * (C50135 + C50188 * C50170))) /
        C49742;
    const double C50448 = C49987 + C50447;
    const double C50503 = 2 * C50501;
    const double C22996 = C50611 * C5988;
    const double C49968 = C49965 + C49926;
    const double C50053 = C50052 + C50046;
    const double C50198 = C50006 + C50192;
    const double C971 = C49873 * C50246 + C50357 * C50170;
    const double C126 = 3 * (C50238 + C49984 * C49899) +
                        C49870 * (2 * C50246 + C49870 * C50248);
    const double C255 = C49873 * (2 * C50246 + C49870 * C50248);
    const double C381 = C50085 * (2 * C50246 + C49870 * C50248);
    const double C511 = C50238 + C49984 * C49899 + C50248 * C50094;
    const double C720 = C50085 * C49873 * C50248;
    const double C853 = C50238 + C49984 * C49899 + C50248 * C50170;
    const double C2688 = 3 * (C50238 + C49984 * C50094) +
                         C49873 * (2 * C50350 + C49873 * C50353);
    const double C2995 = C50085 * (2 * C50350 + C49873 * C50353);
    const double C3194 = C50238 + C49984 * C50094 + C50353 * C50170;
    const double C6308 =
        4 * (2 * C50085 * C49984 + C50085 * C50586) +
        C50085 * (3 * C50586 + C50085 * (2 * C50085 * C49985 +
                                         C50085 * (C49985 + C49995 * C50170)));
    const double C20537 = C50611 * C976;
    const double C49935 = C49870 * C49932;
    const double C49950 = -3 * C49932;
    const double C49944 = ae * C49932;
    const double C50363 = C49873 * C49932;
    const double C49961 = C49956 / C49783;
    const double C49959 = C49952 / C49783;
    const double C50439 = C50438 + C49913;
    const double C50497 = C50085 * C50495;
    const double C50013 = C49870 * C50011;
    const double C50048 = C50011 * ae;
    const double C50366 = C50011 * C50094;
    const double C50378 = C50004 + C50375;
    const double C50467 = C49873 * C50464;
    const double C50146 = C49873 * C50143;
    const double C50191 = 3 * C50143;
    const double C50187 = C50143 * ce;
    const double C50200 = C50194 / C49783;
    const double C50490 = C50135 + C50489;
    const double C50505 = C50085 * C50504;
    const double C2330 = C50616 * C275;
    const double C19887 = C50611 * C275;
    const double C24811 = C50616 * C275;
    const double C5385 = C50616 * C397;
    const double C22049 = C50611 * C397;
    const double C27927 = C50616 * C397;
    const double C19879 = C50611 * C524;
    const double C20315 = C50611 * C742;
    const double C22037 = C50611 * C866;
    const double C49907 = C49905 / C49783;
    const double C5994 =
        3 * ((-(C49903 * C50170) / C49783) / C49742 - C49892 / C49881) +
        C50085 * ((-2 * C50085 * C49903) / C49881 +
                  C50085 * ((-(C49924 * C50170) / C49783) / C49742 - C49914));
    const double C50095 = C50092 / C49783;
    const double C19883 = C50611 * C619;
    const double C20319 = C50611 * C749;
    const double C20539 = C50611 * C984;
    const double C22681 = C50611 * C1070;
    const double C49931 = C49928 / C49783;
    const double C50140 = C50136 / C49783;
    const double C50180 = C50179 / C49783;
    const double C50225 = -2 * C50223;
    const double C49967 = C49964 / C49783;
    const double C50195 = C50189 / C49783;
    const double C50226 = C50224 / C49783;
    const double C50896 = C50637 / C49812;
    const double C50895 = C50637 * C50632;
    const double C50892 = C50637 / C49783;
    const double C50644 = C50641 * C50632;
    const double C115 = C50641 / C50898;
    const double C1173 = C50641 / C49791;
    const double C250 = (C50636 * std::pow(C50632, 2)) / C49808 + C50894;
    const double C50928 = C50893 / C49783;
    const double C251 = (-2 * C50640 * C50893) / C49783;
    const double C50910 = C50709 / C49812;
    const double C50909 = C50709 * C50708;
    const double C50901 = C50709 / C49783;
    const double C50715 = C50712 * C50708;
    const double C1054 = C50712 / C50898;
    const double C1746 = C50712 / C49791;
    const double C50934 = C50908 / C49783;
    const double C849 = (-2 * C50640 * C50908) / C49783;
    const double C848 = (C50700 * std::pow(C50708, 2)) / C49808 + C50907;
    const double C50919 = C50806 / C49751;
    const double C50918 = C50806 * C50805;
    const double C50915 = C50806 / C49742;
    const double C2174 = (2 * C50615 * C50806) / C49742;
    const double C50920 = C50809 * C50805;
    const double C19771 = C50809 / C50891;
    const double C24656 = C50809 / C49747;
    const double C50937 = C50917 / C49742;
    const double C2173 = (C50759 * std::pow(C50804, 2)) / C49746 + C50912;
    const double C50923 = C50832 / C49751;
    const double C50922 = C50832 * C50831;
    const double C50916 = C50832 / C49742;
    const double C5083 = (2 * C50615 * C50832) / C49742;
    const double C50924 = C50835 * C50831;
    const double C39120 = C50835 / C50891;
    const double C44486 = C50835 / C49747;
    const double C50940 = C50921 / C49742;
    const double C5082 = (C50771 * std::pow(C50830, 2)) / C49746 + C50914;
    const double C49761 = C49750 - C49758;
    const double C49760 = C49740 * C49756;
    const double C2177 = (-C49756 / C49742) / C49747 - (0 * be) / C49742;
    const double C19772 = -C49756 / C49742;
    const double C24827 = C50887 * C275;
    const double C24823 = C50887 * C263;
    const double C24821 = C50887 * C524;
    const double C24817 = C50887 * C514;
    const double C24813 = C50887 * C276;
    const double C24809 = C50887 * C264;
    const double C25177 = C50887 * C619;
    const double C25173 = C50887 * C611;
    const double C25471 = C50887 * C749;
    const double C25467 = C50887 * C737;
    const double C25461 = C50887 * C742;
    const double C25457 = C50887 * C726;
    const double C25793 = C50887 * C984;
    const double C25789 = C50887 * C976;
    const double C27935 = C50887 * C385;
    const double C27931 = C50887 * C397;
    const double C27925 = C50887 * C401;
    const double C27921 = C50887 * C394;
    const double C28697 = C50887 * C856;
    const double C28693 = C50887 * C866;
    const double C29055 = C50887 * C1070;
    const double C29051 = C50887 * C1066;
    const double C45607 = C50887 * C5988;
    const double C50925 = C50886 / C49746;
    const double C17147 = C16984 * C275;
    const double C17141 = C16984 * C263;
    const double C34087 = C16984 * C397;
    const double C34081 = C16984 * C385;
    const double C50927 = C50890 / C49742;
    const double C2171 = -C50926;
    const double C17157 = C16983 * C275;
    const double C17151 = C16983 * C263;
    const double C17149 = C16983 * C276;
    const double C17143 = C16983 * C264;
    const double C17491 = C16983 * C524;
    const double C17485 = C16983 * C514;
    const double C17629 = C16983 * C619;
    const double C17623 = C16983 * C611;
    const double C17805 = C16983 * C749;
    const double C17799 = C16983 * C737;
    const double C17789 = C16983 * C742;
    const double C17783 = C16983 * C726;
    const double C18121 = C16983 * C984;
    const double C18115 = C16983 * C976;
    const double C34101 = C16983 * C385;
    const double C34095 = C16983 * C397;
    const double C34085 = C16983 * C401;
    const double C34079 = C16983 * C394;
    const double C34691 = C16983 * C856;
    const double C34685 = C16983 * C866;
    const double C34955 = C16983 * C1070;
    const double C34949 = C16983 * C1066;
    const double C49810 = C49782 * C49796;
    const double C507 =
        ((-C49792 / C49783) / C49791 -
         ((C50670 - (C49782 * C49796) / C49783) * de) / C49783) /
            C49791 -
        ((C49782 * ((-C49796 / C49783) / C49791 - (0 * de) / C49783) + C50686) *
         de) /
            C49783;
    const double C508 =
        ((-C49796 / C49783) / C49791 - (0 * de) / C49783) / C49791 -
        (0 * de) / C49783;
    const double C1175 = (-C49796 / C49783) / C49791 - (0 * de) / C49783;
    const double C49821 = C49815 - C49816;
    const double C50932 = C50904 / C49808;
    const double C50906 = C50689 / C49783;
    const double C1169 = -C50931;
    const double C132 =
        (2 * (C49870 * C50026 + C50238 * ae) +
         C49870 * (C50026 + C49870 * C50030 + C49870 * C49984 * ae) +
         (C50238 + C49984 * C49899) * ae) /
        C49742;
    const double C262 =
        (C49873 * (C50026 + C49870 * C50030 + C50246 * ae)) / C49742;
    const double C386 =
        (C50085 * (C50026 + C49870 * C50030 + C50246 * ae)) / C49742;
    const double C515 =
        (C49870 * C50026 + C50238 * ae + C50030 * C50094) / C49742;
    const double C727 = (C50085 * C49873 * C50030) / C49742;
    const double C857 =
        (C49870 * C50026 + C50238 * ae + C50030 * C50170) / C49742;
    const double C2693 =
        (-3 * (C49873 * C50352 + C49885 + C50350 * ce)) / C49783 +
        C49873 * ((-2 * C50352) / C49783 -
                  (C49873 * (C49873 * (C49873 * C49904 + C49985 * ce) + C49893 +
                             C49873 * C49985 * ce)) /
                      C49783 -
                  (C50353 * ce) / C49783) -
        ((2 * C50350 + C49873 * C50353) * ce) / C49783;
    const double C137 =
        (-3 * (C49893 * C49899 + C49885)) / C49783 +
        C49870 * ((-2 * C49895) / C49783 - (C49870 * C49908) / C49783);
    const double C265 =
        C49873 * ((-2 * C49895) / C49783 - (C49870 * C49908) / C49783) -
        ((2 * C50246 + C49870 * C50248) * ce) / C49783;
    const double C391 =
        C50085 * ((-2 * C49895) / C49783 - (C49870 * C49908) / C49783);
    const double C520 = -(C49873 * (C49873 * C49908 + C50248 * ce) +
                          C49893 * C49899 + C49885 + C49873 * C50248 * ce) /
                        C49783;
    const double C732 = -(C50085 * (C49873 * C49908 + C50248 * ce)) / C49783;
    const double C862 = -(C49908 * C50170 + C49893 * C49899 + C49885) / C49783;
    const double C1060 = (-2 * C50085 * C49908) / C49783 -
                         (C50085 * (C49932 * C50170 + C49908)) / C49783;
    const double C49925 = C49921 / C49783;
    const double C49923 = C49918 / C49783;
    const double C50359 = C50355 + C50356;
    const double C50394 = C49873 * C50390;
    const double C50453 = -2 * C50390;
    const double C3491 = (-2 * C50085 * C50352) / C49783 -
                         (C50085 * (C50390 * C50170 + C50352)) / C49783;
    const double C6184 =
        (-3 * (C50390 * C50170 + C50352)) / C49783 +
        C50085 *
            ((-2 * C50085 * C50390) / C49783 -
             (C50085 * ((C49873 * C49926 + C49995 * ce) * C50170 + C50390)) /
                 C49783);
    const double C6310 =
        4 * ((-2 * C50085 * C49893) / C49783 - (C50085 * C50442) / C49783) +
        C50085 * ((-3 * C50442) / C49783 +
                  C50085 * ((-2 * C50085 * C49904) / C49783 -
                            (C50085 * (C49926 * C50170 + C49904)) / C49783));
    const double C50496 = C50494 / C49783;
    const double C50039 = C49999 * ae;
    const double C50251 = C49870 * C49999;
    const double C50256 = 3 * C49999;
    const double C50365 = C49873 * C49999;
    const double C50364 = C49999 * ce;
    const double C613 = (-2 * (C49873 * C49908 + C50248 * ce)) / C49783 -
                        (C49873 * (C49873 * (C49873 * C49932 + C49999 * ce) +
                                   C49908 + C49873 * C49999 * ce)) /
                            C49783 -
                        ((C50248 + C49999 * C50094) * ce) / C49783;
    const double C739 = -(C50085 * (C49873 * (C49873 * C49932 + C49999 * ce) +
                                    C49908 + C49873 * C49999 * ce)) /
                        C49783;
    const double C978 = -((C49873 * C49932 + C49999 * ce) * C50170 +
                          C49873 * C49908 + C50248 * ce) /
                        C49783;
    const double C605 =
        2 * C49873 * C50248 + C49873 * (C50248 + C49999 * C50094);
    const double C723 = C50085 * (C50248 + C49999 * C50094);
    const double C1056 =
        2 * C50085 * C50248 + C50085 * (C50248 + C49999 * C50170);
    const double C5987 =
        3 * (C50248 + C49999 * C50170) +
        C50085 * (2 * C50085 * C49999 + C50085 * (C49999 + C50011 * C50170));
    const double C50360 = C49994 + C50358;
    const double C50379 = 2 * C50374;
    const double C50377 = C50374 * ce;
    const double C3484 =
        2 * C50085 * C50357 + C50085 * (C50357 + C50374 * C50170);
    const double C6179 =
        3 * (C50357 + C50374 * C50170) +
        C50085 * (2 * C50085 * C50374 +
                  C50085 * (C50374 + C49873 * C50047 * C50170));
    const double C50376 = C50372 + C50373;
    const double C50583 = C49994 + C50582;
    const double C50014 = C49870 * C50012;
    const double C50044 = 2 * C50012;
    const double C50106 = C50012 * C50094;
    const double C50121 = C50012 * ce;
    const double C50119 = C49873 * C50012;
    const double C50444 = C50012 * C50170;
    const double C50395 = C49873 * C50392;
    const double C50459 = 3 * C50392;
    const double C50457 = C50392 * ce;
    const double C3483 =
        2 * C50085 * C50353 + C50085 * (C50353 + C50392 * C50170);
    const double C22847 =
        3 * (C50353 + C50392 * C50170) +
        C50085 * (2 * C50085 * C50392 + C50085 * (C50392 + C50464 * C50170));
    const double C50595 = C50388 + C50594;
    const double C50466 = C49873 * C50461;
    const double C50486 = C50461 * C50170;
    const double C50601 = C50085 * C50600;
    const double C50032 = C49870 * C50000;
    const double C50037 = 2 * C50000;
    const double C50105 = C50000 * ce;
    const double C50103 = C49873 * C50000;
    const double C610 =
        (2 * C49873 * C50030 + C49873 * (C50030 + C50000 * C50094)) / C49742;
    const double C736 = (C50085 * (C50030 + C50000 * C50094)) / C49742;
    const double C1065 =
        (2 * C50085 * C50030 + C50085 * (C50030 + C50000 * C50170)) / C49742;
    const double C5989 =
        (3 * (C50030 + C50000 * C50170) +
         C50085 * (2 * C50085 * C50000 + C50085 * (C50000 + C50012 * C50170))) /
        C49742;
    const double C2691 = (3 * (C50026 + C49987 * C50094) +
                          C49873 * (2 * C50091 + C49873 * C50099)) /
                         C49742;
    const double C2999 = (C50085 * (2 * C50091 + C49873 * C50099)) / C49742;
    const double C3197 = (C50026 + C49987 * C50094 + C50099 * C50170) / C49742;
    const double C3489 =
        (2 * C50085 * C50099 + C50085 * (C50099 + C50143 * C50170)) / C49742;
    const double C50144 = C50139 / C49783;
    const double C22509 = C50611 * C3493;
    const double C28911 = C50887 * C3493;
    const double C22877 = C50611 * C6182;
    const double C6312 =
        (4 * (2 * C50085 * C49987 + C50085 * C50448) +
         C50085 *
             (3 * C50448 + C50085 * (2 * C50085 * C49996 +
                                     C50085 * (C49996 + C50006 * C50170)))) /
        C49742;
    const double C49971 = C49870 * C49968;
    const double C5992 =
        (-3 * (C49932 * C50170 + C49908)) / C49783 +
        C50085 * ((-2 * C50085 * C49932) / C49783 -
                  (C50085 * (C49968 * C50170 + C49932)) / C49783);
    const double C50054 = C49870 * C50053;
    const double C50122 = C50053 * C50094;
    const double C50202 = C49873 * C50198;
    const double C22848 =
        (3 * (C50099 + C50143 * C50170) +
         C50085 * (2 * C50085 * C50143 + C50085 * (C50143 + C50198 * C50170))) /
        C49742;
    const double C49937 = C49935 / C49783;
    const double C49955 = C49950 / C49783;
    const double C49951 = C49944 / C49881;
    const double C49963 = -C49959;
    const double C6309 =
        4 * ((-2 * C50085 * C49913) / C49783 - (C50085 * C50439) / C49783) +
        C50085 * ((-3 * C50439) / C49783 +
                  C50085 * ((-2 * C50085 * C49945) / C49783 -
                            (C50085 * (C49870 * C49962 * C50170 + C49945)) /
                                C49783));
    const double C50498 = C50497 / C49783;
    const double C50015 = C50009 + C50013;
    const double C50368 = C49999 + C50366;
    const double C50381 = C49873 * C50378;
    const double C50469 = C50465 + C50467;
    const double C50149 = C50142 + C50146;
    const double C50193 = C50187 / C49881;
    const double C50203 = -C50200;
    const double C22990 =
        (4 * (2 * C50085 * C50135 + C50085 * C50490) +
         C50085 * (3 * C50490 +
                   C50085 * (2 * C50085 * C50188 +
                             C50085 * (C50188 + C49873 * C50050 * C50170)))) /
        C49742;
    const double C50506 = C50503 + C50505;
    const double C49909 = -C49907;
    const double C22998 = C50611 * C5994;
    const double C45611 = C50887 * C5994;
    const double C50098 = -C50095;
    const double C49934 = -C49931;
    const double C50145 = -C50140;
    const double C50181 = -C50180;
    const double C50227 = C50225 / C49881;
    const double C49970 = -C49967;
    const double C50201 = -C50195;
    const double C50228 = -C50226;
    const double C50929 = C50895 / C49808;
    const double C50897 = C50644 / C49783;
    const double C1277 = -C50928;
    const double C50935 = C50909 / C49808;
    const double C50911 = C50715 / C49783;
    const double C1514 = -C50934;
    const double C50938 = C50918 / C49746;
    const double C50939 = C50920 / C49742;
    const double C16986 = -C50937;
    const double C50941 = C50922 / C49746;
    const double C50942 = C50924 / C49742;
    const double C33783 = -C50940;
    const double C24838 = C49761 * C255;
    const double C24832 = C49761 * C511;
    const double C24828 = C49761 * C266;
    const double C24824 = C49761 * C256;
    const double C24818 = C49761 * C519;
    const double C24814 = C49761 * C510;
    const double C24810 = C49761 * C267;
    const double C24806 = C49761 * C257;
    const double C25178 = C49761 * C614;
    const double C25174 = C49761 * C606;
    const double C25468 = C49761 * C740;
    const double C25464 = C49761 * C724;
    const double C25462 = C49761 * C731;
    const double C25458 = C49761 * C719;
    const double C25790 = C49761 * C979;
    const double C25786 = C49761 * C971;
    const double C26394 = C49761 * C720;
    const double C27938 = C49761 * C381;
    const double C27932 = C49761 * C380;
    const double C27928 = C49761 * C390;
    const double C27926 = C49761 * C389;
    const double C27922 = C49761 * C379;
    const double C28694 = C49761 * C852;
    const double C28690 = C49761 * C861;
    const double C28676 = C49761 * C853;
    const double C29056 = C49761 * C1061;
    const double C29052 = C49761 * C1057;
    const double C45612 = C49761 * C5991;
    const double C45608 = C49761 * C5986;
    const double C120 =
        (C49761 / C49747 - (0 * be) / C49742) / C49747 + (0 * ae) / C49742;
    const double C7920 = C49761 / C49747 - (0 * be) / C49742;
    const double C16990 = C49761 / C49747 + (0 * ae) / C49742;
    const double C49763 = C49760 / C49742;
    const double C2357 = C2177 * C255;
    const double C2351 = C2177 * C511;
    const double C2347 = C2177 * C266;
    const double C2343 = C2177 * C256;
    const double C2337 = C2177 * C519;
    const double C2333 = C2177 * C510;
    const double C2329 = C2177 * C267;
    const double C2325 = C2177 * C257;
    const double C2709 = C2177 * C614;
    const double C2705 = C2177 * C606;
    const double C3023 = C2177 * C740;
    const double C3019 = C2177 * C724;
    const double C3017 = C2177 * C731;
    const double C3013 = C2177 * C719;
    const double C3365 = C2177 * C979;
    const double C3361 = C2177 * C971;
    const double C3989 = C2177 * C720;
    const double C5412 = C2177 * C381;
    const double C5406 = C2177 * C380;
    const double C5402 = C2177 * C390;
    const double C5398 = C2177 * C853;
    const double C5392 = C2177 * C861;
    const double C5388 = C2177 * C852;
    const double C5384 = C2177 * C389;
    const double C5380 = C2177 * C379;
    const double C6014 = C2177 * C1057;
    const double C6010 = C2177 * C1061;
    const double C6324 = C2177 * C5991;
    const double C6320 = C2177 * C5986;
    const double C19900 = C19772 * C511;
    const double C19898 = C19772 * C266;
    const double C19896 = C19772 * C256;
    const double C19894 = C19772 * C614;
    const double C19892 = C19772 * C606;
    const double C19890 = C19772 * C519;
    const double C19888 = C19772 * C510;
    const double C19886 = C19772 * C267;
    const double C19884 = C19772 * C257;
    const double C19882 = C19772 * C615;
    const double C19880 = C19772 * C607;
    const double C19878 = C19772 * C518;
    const double C19876 = C19772 * C509;
    const double C19874 = C19772 * C268;
    const double C19872 = C19772 * C258;
    const double C20122 = C19772 * C2688;
    const double C20320 = C19772 * C2995;
    const double C20318 = C19772 * C741;
    const double C20316 = C19772 * C725;
    const double C20314 = C19772 * C730;
    const double C20312 = C19772 * C718;
    const double C20540 = C19772 * C3194;
    const double C20538 = C19772 * C980;
    const double C20536 = C19772 * C972;
    const double C20956 = C19772 * C740;
    const double C20954 = C19772 * C724;
    const double C20952 = C19772 * C731;
    const double C20950 = C19772 * C719;
    const double C21868 = C19772 * C720;
    const double C21866 = C19772 * C979;
    const double C21864 = C19772 * C971;
    const double C22058 = C19772 * C853;
    const double C22054 = C19772 * C390;
    const double C22052 = C19772 * C380;
    const double C22050 = C19772 * C379;
    const double C22048 = C19772 * C389;
    const double C22044 = C19772 * C852;
    const double C22042 = C19772 * C861;
    const double C22036 = C19772 * C860;
    const double C22034 = C19772 * C851;
    const double C22030 = C19772 * C393;
    const double C22028 = C19772 * C383;
    const double C22508 = C19772 * C3485;
    const double C22682 = C19772 * C1058;
    const double C22680 = C19772 * C1062;
    const double C22672 = C19772 * C1061;
    const double C22670 = C19772 * C1057;
    const double C22876 = C19772 * C6180;
    const double C22997 = C19772 * C5990;
    const double C22995 = C19772 * C5985;
    const double C39698 = C19772 * C5991;
    const double C39696 = C19772 * C5986;
    const double C39885 = C19772 * C6308;
    const double C50943 = C50885 - C50925;
    const double C50944 = C50889 - C50927;
    const double C2346 = C2171 * C275;
    const double C2342 = C2171 * C263;
    const double C2340 = C2171 * C524;
    const double C2336 = C2171 * C514;
    const double C2332 = C2171 * C276;
    const double C2328 = C2171 * C264;
    const double C2708 = C2171 * C619;
    const double C2704 = C2171 * C611;
    const double C3026 = C2171 * C749;
    const double C3022 = C2171 * C737;
    const double C3016 = C2171 * C742;
    const double C3012 = C2171 * C726;
    const double C3368 = C2171 * C984;
    const double C3364 = C2171 * C976;
    const double C5409 = C2171 * C385;
    const double C5405 = C2171 * C397;
    const double C5391 = C2171 * C866;
    const double C5387 = C2171 * C856;
    const double C5383 = C2171 * C401;
    const double C5379 = C2171 * C394;
    const double C6017 = C2171 * C1066;
    const double C6013 = C2171 * C1070;
    const double C6193 = C2171 * C3493;
    const double C6323 = C2171 * C5994;
    const double C6319 = C2171 * C5988;
    const double C49814 = C49810 / C49783;
    const double C603 =
        (C49821 / C49791 - (0 * de) / C49783) / C49791 - (0 * de) / C49783;
    const double C1281 = C49821 / C49791 - (0 * de) / C49783;
    const double C50946 = C50902 - C50932;
    const double C50933 = C50905 - C50906;
    const double C506 =
        ((-(0 * de) / C49783) / C49791 -
         ((0 - (C49782 * C49792) / C49783) * de) / C49783) /
            C49791 -
        ((C49782 * ((-C49792 / C49783) / C49791 -
                    ((C50670 - (C49782 * C49796) / C49783) * de) / C49783) +
          C1169) *
         de) /
            C49783 +
        (-C49796 / C49783) / C49791 - (0 * de) / C49783;
    const double C2360 = C2171 * C262;
    const double C2344 = C50616 * C262;
    const double C8069 = C7915 * C262;
    const double C17167 = C16983 * C262;
    const double C17153 = C16984 * C262;
    const double C17139 = C16985 * C262;
    const double C19897 = C50611 * C262;
    const double C24841 = C50887 * C262;
    const double C24825 = C50616 * C262;
    const double C5411 = C2171 * C386;
    const double C5407 = C50616 * C386;
    const double C11029 = C7915 * C386;
    const double C22053 = C50611 * C386;
    const double C27937 = C50887 * C386;
    const double C27933 = C50616 * C386;
    const double C34103 = C16983 * C386;
    const double C34099 = C16984 * C386;
    const double C34083 = C16985 * C386;
    const double C2350 = C2171 * C515;
    const double C2334 = C50616 * C515;
    const double C17501 = C16983 * C515;
    const double C17487 = C16984 * C515;
    const double C19889 = C50611 * C515;
    const double C24831 = C50887 * C515;
    const double C24815 = C50616 * C515;
    const double C3014 = C50616 * C727;
    const double C3992 = C2171 * C727;
    const double C17785 = C16984 * C727;
    const double C18717 = C16983 * C727;
    const double C20951 = C50611 * C727;
    const double C25459 = C50616 * C727;
    const double C26397 = C50887 * C727;
    const double C5401 = C2171 * C857;
    const double C5389 = C50616 * C857;
    const double C22045 = C50611 * C857;
    const double C28695 = C50616 * C857;
    const double C28675 = C50887 * C857;
    const double C34689 = C16984 * C857;
    const double C34669 = C16983 * C857;
    const double C20124 = C19772 * C2693;
    const double C2361 = C2177 * C265;
    const double C24842 = C49761 * C265;
    const double C5416 = C2177 * C391;
    const double C27942 = C49761 * C391;
    const double C2355 = C2177 * C520;
    const double C19902 = C19772 * C520;
    const double C24836 = C49761 * C520;
    const double C3993 = C2177 * C732;
    const double C21870 = C19772 * C732;
    const double C26398 = C49761 * C732;
    const double C5394 = C2177 * C862;
    const double C22060 = C19772 * C862;
    const double C28680 = C49761 * C862;
    const double C6008 = C2177 * C1060;
    const double C39320 = C19772 * C1060;
    const double C45338 = C49761 * C1060;
    const double C49927 = -C49923;
    const double C50396 = C50394 + C49893;
    const double C50460 = C50453 / C49783;
    const double C22510 = C19772 * C3491;
    const double C22878 = C19772 * C6184;
    const double C39887 = C19772 * C6310;
    const double C50252 = C50250 + C50251;
    const double C970 = C49873 * C50248 + C50365 * C50170;
    const double C6819 =
        2 * C50085 * C50365 + C50085 * (C50365 + C49873 * C50011 * C50170);
    const double C50367 = C50363 + C50364;
    const double C2717 = C2177 * C613;
    const double C19906 = C19772 * C613;
    const double C25186 = C49761 * C613;
    const double C4001 = C2177 * C739;
    const double C26406 = C49761 * C739;
    const double C31250 = C19772 * C739;
    const double C6830 = C2177 * C978;
    const double C21874 = C19772 * C978;
    const double C28688 = C49761 * C978;
    const double C2713 = C2177 * C605;
    const double C19904 = C19772 * C605;
    const double C25182 = C49761 * C605;
    const double C3997 = C2177 * C723;
    const double C26402 = C49761 * C723;
    const double C31248 = C19772 * C723;
    const double C6004 = C2177 * C1056;
    const double C39318 = C19772 * C1056;
    const double C45334 = C49761 * C1056;
    const double C2694 =
        (-3 * (C49873 * C50359 + C49895 + C50357 * ce)) / C49783 +
        C49873 * ((-2 * C50359) / C49783 -
                  (C49873 * (C49873 * (C49873 * C49945 + C50004 * ce) + C49913 +
                             C49873 * C50004 * ce)) /
                      C49783 -
                  (C50360 * ce) / C49783) -
        ((2 * C50357 + C49873 * C50360) * ce) / C49783;
    const double C2689 = 3 * (C50246 + C49994 * C50094) +
                         C49873 * (2 * C50357 + C49873 * C50360);
    const double C2994 = C50085 * (2 * C50357 + C49873 * C50360);
    const double C3195 = C50246 + C49994 * C50094 + C50360 * C50170;
    const double C3482 =
        2 * C50085 * C50360 + C50085 * (C50360 + C50378 * C50170);
    const double C6194 = C2177 * C3484;
    const double C22674 = C19772 * C3484;
    const double C28908 = C49761 * C3484;
    const double C50380 = C49873 * C50376;
    const double C3490 = (-2 * C50085 * C50359) / C49783 -
                         (C50085 * (C50376 * C50170 + C50359)) / C49783;
    const double C6183 =
        (-3 * (C50376 * C50170 + C50359)) / C49783 +
        C50085 * ((-2 * C50085 * C50376) / C49783 -
                  (C50085 * ((C49873 * C49870 * C49962 + C50047 * ce) * C50170 +
                             C50376)) /
                      C49783);
    const double C6307 =
        4 * (2 * C50085 * C49994 + C50085 * C50583) +
        C50085 * (3 * C50583 + C50085 * (2 * C50085 * C50004 +
                                         C50085 * (C50004 + C50047 * C50170)));
    const double C50016 = C49996 + C50014;
    const double C50108 = C50000 + C50106;
    const double C50124 = C50121 / C49881;
    const double C50125 = 2 * C50119;
    const double C50123 = C50119 * ce;
    const double C50445 = C50000 + C50444;
    const double C50397 = C50393 + C50395;
    const double C50463 = C50457 / C49783;
    const double C22512 = C19772 * C3483;
    const double C22988 =
        4 * (2 * C50085 * C50388 + C50085 * C50595) +
        C50085 * (3 * C50595 +
                  C50085 * (2 * C50085 * C50456 +
                            C50085 * (C50456 + C49873 * C50005 * C50170)));
    const double C50468 = C50466 + C49904;
    const double C50487 = C50486 + C50390;
    const double C50602 = C50599 + C50601;
    const double C50034 = C49987 + C50032;
    const double C50107 = C50105 / C49881;
    const double C975 = (C49873 * C50030 + C50103 * C50170) / C49742;
    const double C3492 =
        (2 * C50085 * C50103 + C50085 * (C50103 + C50119 * C50170)) / C49742;
    const double C6181 =
        (3 * (C50103 + C50119 * C50170) +
         C50085 * (2 * C50085 * C50119 +
                   C50085 * (C50119 + C49873 * C50053 * C50170))) /
        C49742;
    const double C2716 = C2171 * C610;
    const double C2706 = C50616 * C610;
    const double C17621 = C16984 * C610;
    const double C19893 = C50611 * C610;
    const double C25185 = C50887 * C610;
    const double C25175 = C50616 * C610;
    const double C3020 = C50616 * C736;
    const double C4000 = C2171 * C736;
    const double C17797 = C16984 * C736;
    const double C20955 = C50611 * C736;
    const double C25465 = C50616 * C736;
    const double C26405 = C50887 * C736;
    const double C6015 = C50616 * C1065;
    const double C6003 = C2171 * C1065;
    const double C22671 = C50611 * C1065;
    const double C29053 = C50616 * C1065;
    const double C34951 = C16984 * C1065;
    const double C45333 = C50887 * C1065;
    const double C6321 = C50616 * C5989;
    const double C39697 = C50611 * C5989;
    const double C45609 = C50616 * C5989;
    const double C2840 = C2171 * C2691;
    const double C20123 = C50611 * C2691;
    const double C25301 = C50887 * C2691;
    const double C3030 = C2171 * C2999;
    const double C20321 = C50611 * C2999;
    const double C25475 = C50887 * C2999;
    const double C3372 = C2171 * C3197;
    const double C20541 = C50611 * C3197;
    const double C25797 = C50887 * C3197;
    const double C22513 = C50611 * C3489;
    const double C50147 = -C50144;
    const double C39886 = C50611 * C6312;
    const double C49973 = C49971 / C49783;
    const double C50055 = C50006 + C50054;
    const double C50126 = C50012 + C50122;
    const double C50205 = C50197 + C50202;
    const double C49939 = C49925 - C49937;
    const double C49966 = C49963 / C49742;
    const double C50499 = C50496 - C50498;
    const double C50049 = C50015 * ae;
    const double C50257 = C49870 * C50015;
    const double C2690 = 3 * (C50248 + C49999 * C50094) +
                         C49873 * (2 * C50365 + C49873 * C50368);
    const double C3196 = C50248 + C49999 * C50094 + C50368 * C50170;
    const double C3984 = C50085 * (2 * C50365 + C49873 * C50368);
    const double C50383 = C50379 + C50381;
    const double C50471 = C49873 * C50469;
    const double C2829 = (4 * (2 * C50091 + C49873 * C50099) +
                          C49873 * (3 * C50099 + C49873 * C50149)) /
                         C49742;
    const double C3003 = (C50085 * (3 * C50099 + C49873 * C50149)) / C49742;
    const double C3355 =
        (2 * C50091 + C49873 * C50099 + C50149 * C50170) / C49742;
    const double C50206 = C50203 / C49742;
    const double C39880 =
        (5 * (3 * C50448 + C50085 * C50506) +
         C50085 * (4 * C50506 +
                   C50085 * (3 * C50504 +
                             C50085 * (2 * C50085 * C50006 +
                                       C50085 * (C50006 + C50050 * C50170))))) /
        C49742;
    const double C49910 = C49909 / C49742;
    const double C50100 = C50098 / C49742;
    const double C49936 = C49934 / C49742;
    const double C50148 = C50145 / C49742;
    const double C50182 = C50181 / C49742;
    const double C49972 = C49970 / C49742;
    const double C50204 = C50201 / C49742;
    const double C50229 = C50228 / C49742;
    const double C50945 = C50894 - C50929;
    const double C50930 = C50896 - C50897;
    const double C50947 = C50907 - C50935;
    const double C50936 = C50910 - C50911;
    const double C50948 = C50912 - C50938;
    const double C50949 = C50919 - C50939;
    const double C50950 = C50914 - C50941;
    const double C50951 = C50923 - C50942;
    const double C24856 = C24810 + C24811;
    const double C24854 = C24806 + C24807;
    const double C27947 = C27926 + C27927;
    const double C27945 = C27922 + C27923;
    const double C8090 = C7920 * C265;
    const double C8084 = C7920 * C255;
    const double C8074 = C7920 * C266;
    const double C8068 = C7920 * C256;
    const double C8424 = C7920 * C520;
    const double C8418 = C7920 * C511;
    const double C8554 = C7920 * C613;
    const double C8548 = C7920 * C605;
    const double C8730 = C7920 * C739;
    const double C8724 = C7920 * C723;
    const double C8722 = C7920 * C732;
    const double C8716 = C7920 * C720;
    const double C9046 = C7920 * C978;
    const double C11042 = C7920 * C381;
    const double C11036 = C7920 * C391;
    const double C11034 = C7920 * C390;
    const double C11028 = C7920 * C380;
    const double C11632 = C7920 * C853;
    const double C11626 = C7920 * C862;
    const double C11904 = C7920 * C1060;
    const double C11898 = C7920 * C1056;
    const double C17160 = C16990 * C265;
    const double C17154 = C16990 * C255;
    const double C17144 = C16990 * C266;
    const double C17138 = C16990 * C256;
    const double C17494 = C16990 * C520;
    const double C17488 = C16990 * C511;
    const double C17624 = C16990 * C613;
    const double C17618 = C16990 * C605;
    const double C17800 = C16990 * C739;
    const double C17794 = C16990 * C723;
    const double C17792 = C16990 * C732;
    const double C17786 = C16990 * C720;
    const double C18116 = C16990 * C978;
    const double C34096 = C16990 * C381;
    const double C34090 = C16990 * C391;
    const double C34088 = C16990 * C390;
    const double C34082 = C16990 * C380;
    const double C34686 = C16990 * C853;
    const double C34680 = C16990 * C862;
    const double C34958 = C16990 * C1060;
    const double C34952 = C16990 * C1056;
    const double C49765 = C50611 - C49763;
    const double C2375 = C2329 + C2330;
    const double C2373 = C2325 + C2326;
    const double C5429 = C5384 + C5385;
    const double C5427 = C5380 + C5381;
    const double C19915 = C19886 + C19887;
    const double C19914 = C19884 + C19885;
    const double C19913 = C19882 + C19883;
    const double C19912 = C19880 + C19881;
    const double C19911 = C19878 + C19879;
    const double C19910 = C19876 + C19877;
    const double C19909 = C19874 + C19875;
    const double C19908 = C19872 + C19873;
    const double C20331 = C20318 + C20319;
    const double C20330 = C20316 + C20317;
    const double C20329 = C20314 + C20315;
    const double C20328 = C20312 + C20313;
    const double C20549 = C20538 + C20539;
    const double C20548 = C20536 + C20537;
    const double C22071 = C22050 + C22051;
    const double C22070 = C22048 + C22049;
    const double C22067 = C22036 + C22037;
    const double C22066 = C22034 + C22035;
    const double C22065 = C22030 + C22031;
    const double C22064 = C22028 + C22029;
    const double C22516 = C22508 + C22509;
    const double C22693 = C22682 + C22683;
    const double C22692 = C22680 + C22681;
    const double C22882 = C22876 + C22877;
    const double C23004 = C22997 + C22998;
    const double C23003 = C22995 + C22996;
    const double C8097 = C50943 * C262;
    const double C8087 = C50943 * C275;
    const double C8081 = C50943 * C263;
    const double C8079 = C50943 * C276;
    const double C8073 = C50943 * C264;
    const double C8431 = C50943 * C515;
    const double C8421 = C50943 * C524;
    const double C8415 = C50943 * C514;
    const double C8559 = C50943 * C619;
    const double C8553 = C50943 * C611;
    const double C8735 = C50943 * C749;
    const double C8729 = C50943 * C737;
    const double C8719 = C50943 * C742;
    const double C8713 = C50943 * C726;
    const double C9051 = C50943 * C984;
    const double C9045 = C50943 * C976;
    const double C9647 = C50943 * C727;
    const double C11049 = C50943 * C386;
    const double C11047 = C50943 * C385;
    const double C11041 = C50943 * C397;
    const double C11031 = C50943 * C401;
    const double C11025 = C50943 * C394;
    const double C11637 = C50943 * C856;
    const double C11631 = C50943 * C866;
    const double C11615 = C50943 * C857;
    const double C11901 = C50943 * C1070;
    const double C11895 = C50943 * C1066;
    const double C105 = (C50943 * C50606) / C49742 + (C50887 - C50926) / C49747;
    const double C8083 = C50944 * C262;
    const double C8077 = C50944 * C275;
    const double C8071 = C50944 * C263;
    const double C8417 = C50944 * C515;
    const double C8551 = C50944 * C610;
    const double C8727 = C50944 * C736;
    const double C8715 = C50944 * C727;
    const double C11045 = C50944 * C386;
    const double C11033 = C50944 * C397;
    const double C11027 = C50944 * C385;
    const double C11635 = C50944 * C857;
    const double C11897 = C50944 * C1065;
    const double C106 =
        (C50944 * C50606) / C49742 + (2 * C50616 + C50943) / C49747;
    const double C107 = (C50606 * C50616) / C49751 + C50944 / C49747;
    const double C49819 = C50670 - C49814;
    const double C595 = (C50899 - C50931) / C49791 - (C50946 * C50682) / C49783;
    const double C596 =
        (2 * C50686 + C50946) / C49791 - (C50933 * C50682) / C49783;
    const double C597 = C50933 / C49791 - C50689 / C49812;
    const double C2382 = C2343 + C2344;
    const double C19920 = C19896 + C19897;
    const double C24863 = C24824 + C24825;
    const double C5440 = C5406 + C5407;
    const double C22072 = C22052 + C22053;
    const double C27950 = C27932 + C27933;
    const double C2377 = C2333 + C2334;
    const double C19916 = C19888 + C19889;
    const double C24858 = C24814 + C24815;
    const double C3036 = C3013 + C3014;
    const double C20962 = C20950 + C20951;
    const double C25481 = C25458 + C25459;
    const double C5431 = C5388 + C5389;
    const double C22069 = C22044 + C22045;
    const double C28708 = C28694 + C28695;
    const double C49930 = C49927 / C49742;
    const double C50398 = C50396 + C50391;
    const double C127 = 4 * (2 * C50246 + C49870 * C50248) +
                        C49870 * (3 * C50248 + C49870 * C50252);
    const double C259 = C49873 * (3 * C50248 + C49870 * C50252);
    const double C382 = C50085 * (3 * C50248 + C49870 * C50252);
    const double C512 = 2 * C50246 + C49870 * C50248 + C50252 * C50094;
    const double C604 =
        2 * C49873 * C50252 + C49873 * (C50252 + C50015 * C50094);
    const double C721 = C50085 * C49873 * C50252;
    const double C722 = C50085 * (C50252 + C50015 * C50094);
    const double C854 = 2 * C50246 + C49870 * C50248 + C50252 * C50170;
    const double C969 = C49873 * C50252 + C49873 * C50015 * C50170;
    const double C1055 =
        2 * C50085 * C50252 + C50085 * (C50252 + C50015 * C50170);
    const double C6826 = C2177 * C970;
    const double C9040 = C7920 * C970;
    const double C18110 = C16990 * C970;
    const double C21872 = C19772 * C970;
    const double C28684 = C49761 * C970;
    const double C2696 =
        (-3 * (C49873 * C50367 + C49908 + C50365 * ce)) / C49783 +
        C49873 * ((-2 * C50367) / C49783 -
                  (C49873 * (C49873 * (C49873 * C49968 + C50011 * ce) + C49932 +
                             C49873 * C50011 * ce)) /
                      C49783 -
                  (C50368 * ce) / C49783) -
        ((2 * C50365 + C49873 * C50368) * ce) / C49783;
    const double C3201 = -((C49873 * (C49873 * C49968 + C50011 * ce) + C49932 +
                            C49873 * C50011 * ce) *
                               C50170 +
                           C49873 * C50367 + C49908 + C50365 * ce) /
                         C49783;
    const double C3986 =
        C50085 * ((-2 * C50367) / C49783 -
                  (C49873 * (C49873 * (C49873 * C49968 + C50011 * ce) + C49932 +
                             C49873 * C50011 * ce)) /
                      C49783 -
                  (C50368 * ce) / C49783);
    const double C6821 =
        (-2 * C50085 * C50367) / C49783 -
        (C50085 * ((C49873 * C49968 + C50011 * ce) * C50170 + C50367)) / C49783;
    const double C2841 = C2177 * C2694;
    const double C20128 = C19772 * C2694;
    const double C25302 = C49761 * C2694;
    const double C2837 = C2177 * C2689;
    const double C20126 = C19772 * C2689;
    const double C25298 = C49761 * C2689;
    const double C3027 = C2177 * C2994;
    const double C20958 = C19772 * C2994;
    const double C25472 = C49761 * C2994;
    const double C3369 = C2177 * C3195;
    const double C22234 = C19772 * C3195;
    const double C25794 = C49761 * C3195;
    const double C50382 = C50380 + C49913;
    const double C6198 = C2177 * C3490;
    const double C22676 = C19772 * C3490;
    const double C28912 = C49761 * C3490;
    const double C50017 = C50016 + C50007;
    const double C2692 = (3 * (C50030 + C50000 * C50094) +
                          C49873 * (2 * C50103 + C49873 * C50108)) /
                         C49742;
    const double C2998 = (C50085 * (2 * C50103 + C49873 * C50108)) / C49742;
    const double C3198 = (C50030 + C50000 * C50094 + C50108 * C50170) / C49742;
    const double C50127 = C50123 / C49881;
    const double C6311 =
        (4 * (2 * C50085 * C50000 + C50085 * C50445) +
         C50085 *
             (3 * C50445 + C50085 * (2 * C50085 * C50012 +
                                     C50085 * (C50012 + C50053 * C50170)))) /
        C49742;
    const double C2827 = 4 * (2 * C50350 + C49873 * C50353) +
                         C49873 * (3 * C50353 + C49873 * C50397);
    const double C2997 = C50085 * (3 * C50353 + C49873 * C50397);
    const double C3353 = 2 * C50350 + C49873 * C50353 + C50397 * C50170;
    const double C20619 =
        2 * C50085 * C50397 + C50085 * (C50397 + C50469 * C50170);
    const double C50470 = C50468 + C50462;
    const double C22989 =
        4 * ((-2 * C50085 * C50390) / C49783 - (C50085 * C50487) / C49783) +
        C50085 *
            ((-3 * C50487) / C49783 +
             C50085 * ((-2 * C50085 * C50461) / C49783 -
                       (C50085 *
                        ((C49873 * C49962 + C50005 * ce) * C50170 + C50461)) /
                           C49783));
    const double C39878 =
        5 * (3 * C50586 + C50085 * C50602) +
        C50085 * (4 * C50602 +
                  C50085 * (3 * C50600 +
                            C50085 * (2 * C50085 * C49995 +
                                      C50085 * (C49995 + C50005 * C50170))));
    const double C50035 = C50034 + C50033;
    const double C3362 = C50616 * C975;
    const double C6825 = C2171 * C975;
    const double C9043 = C50944 * C975;
    const double C18113 = C16984 * C975;
    const double C21865 = C50611 * C975;
    const double C25787 = C50616 * C975;
    const double C28683 = C50887 * C975;
    const double C6195 = C50616 * C3492;
    const double C22675 = C50611 * C3492;
    const double C28909 = C50616 * C3492;
    const double C2722 = C2705 + C2706;
    const double C19918 = C19892 + C19893;
    const double C25191 = C25174 + C25175;
    const double C3039 = C3019 + C3020;
    const double C20964 = C20954 + C20955;
    const double C25484 = C25464 + C25465;
    const double C6028 = C6014 + C6015;
    const double C22688 = C22670 + C22671;
    const double C29059 = C29052 + C29053;
    const double C6329 = C6320 + C6321;
    const double C39702 = C39696 + C39697;
    const double C45617 = C45608 + C45609;
    const double C20130 = C20122 + C20123;
    const double C20332 = C20320 + C20321;
    const double C20550 = C20540 + C20541;
    const double C22518 = C22512 + C22513;
    const double C50150 = C50147 / C49742;
    const double C39890 = C39885 + C39886;
    const double C49975 = C49961 - C49973;
    const double C50056 = C50055 + C50051;
    const double C50129 = C49873 * C50126;
    const double C3488 =
        (2 * C50085 * C50108 + C50085 * (C50108 + C50126 * C50170)) / C49742;
    const double C50208 = C49873 * C50205;
    const double C20621 =
        (2 * C50085 * C50149 + C50085 * (C50149 + C50205 * C50170)) / C49742;
    const double C140 =
        4 * ((-2 * C49895) / C49783 - (C49870 * C49908) / C49783) +
        C49870 * ((-3 * C49908) / C49783 + C49870 * C49939);
    const double C270 = C49873 * ((-3 * C49908) / C49783 + C49870 * C49939) -
                        ((3 * C50248 + C49870 * C50252) * ce) / C49783;
    const double C392 = C50085 * ((-3 * C49908) / C49783 + C49870 * C49939);
    const double C521 = (-2 * C49895) / C49783 - (C49870 * C49908) / C49783 +
                        C49873 * (C49873 * C49939 - (C50252 * ce) / C49783) -
                        (C49873 * C50252 * ce) / C49783;
    const double C733 = C50085 * (C49873 * C49939 - (C50252 * ce) / C49783);
    const double C863 =
        (-2 * C49895) / C49783 - (C49870 * C49908) / C49783 + C49939 * C50170;
    const double C49969 = C49966 - C49946;
    const double C39879 =
        5 * ((-3 * C50442) / C49783 + C50085 * C50499) +
        C50085 * (4 * C50499 +
                  C50085 * ((-3 * C50495) / C49783 +
                            C50085 * ((-2 * C50085 * C49926) / C49783 -
                                      (C50085 * (C49962 * C50170 + C49926)) /
                                          C49783)));
    const double C50258 = C50256 + C50257;
    const double C2826 = 4 * (2 * C50357 + C49873 * C50360) +
                         C49873 * (3 * C50360 + C49873 * C50383);
    const double C2996 = C50085 * (3 * C50360 + C49873 * C50383);
    const double C3352 = 2 * C50357 + C49873 * C50360 + C50383 * C50170;
    const double C50473 = C50459 + C50471;
    const double C20205 = C50611 * C2829;
    const double C20325 = C50611 * C3003;
    const double C20545 = C50611 * C3355;
    const double C50209 = C50206 - C49946;
    const double C49911 = C49910 - C49901;
    const double C50101 = C50100 - C50096;
    const double C49938 = C49936 - C49920;
    const double C50151 = C50148 - C50141;
    const double C50183 = C50182 - C49914;
    const double C49974 = C49972 - C49954;
    const double C50207 = C50204 - C50196;
    const double C50230 = C50229 - C49946;
    const double C112 = (C50892 - C50928) / C49791 - (C50945 * C50632) / C49783;
    const double C113 =
        (2 * C50641 + C50945) / C49791 - (C50930 * C50632) / C49783;
    const double C114 = C50930 / C49791 - C50644 / C49812;
    const double C1051 =
        (C50901 - C50934) / C49791 - (C50947 * C50708) / C49783;
    const double C1052 =
        (2 * C50712 + C50947) / C49791 - (C50936 * C50708) / C49783;
    const double C1053 = C50936 / C49791 - C50715 / C49812;
    const double C19768 =
        (C50948 * C50804) / C49742 + (C50915 - C50937) / C49747;
    const double C19769 =
        (C50949 * C50804) / C49742 + (2 * C50809 + C50948) / C49747;
    const double C19770 = (C50804 * C50809) / C49751 + C50949 / C49747;
    const double C39117 =
        (C50950 * C50830) / C49742 + (C50916 - C50940) / C49747;
    const double C39118 =
        (C50951 * C50830) / C49742 + (2 * C50835 + C50950) / C49747;
    const double C39119 = (C50830 * C50835) / C49751 + C50951 / C49747;
    const double C8104 = C8068 + C8069;
    const double C11062 = C11028 + C11029;
    const double C17174 = C17138 + C17139;
    const double C34116 = C34082 + C34083;
    const double C49766 = C49765 * ae;
    const double C2176 = (-C49743 / C49742) / C49747 - (C49765 * be) / C49742;
    const double C22493 = C20331 * C502;
    const double C22489 = C20331 * C503;
    const double C22859 = C20331 * C50686;
    const double C23501 = C20331 * C50686;
    const double C24377 = C20331 * C50933;
    const double C24373 = C20331 * C1276;
    const double C31401 = C20331 * C50670;
    const double C31797 = C20331 * C501;
    const double C32099 = C20331 * C50899;
    const double C32693 = C20331 * C1169;
    const double C33531 = C20331 * C50946;
    const double C22492 = C20330 * C507;
    const double C22488 = C20330 * C508;
    const double C22858 = C20330 * C254;
    const double C23500 = C20330 * C1175;
    const double C24372 = C20330 * C1281;
    const double C31400 = C20330 * C121;
    const double C31796 = C20330 * C506;
    const double C32098 = C20330 * C253;
    const double C22033 = C20329 * C50670;
    const double C22491 = C20329 * C501;
    const double C22487 = C20329 * C502;
    const double C22857 = C20329 * C50899;
    const double C22855 = C20329 * C50686;
    const double C23499 = C20329 * C1169;
    const double C23497 = C20329 * C50686;
    const double C24375 = C20329 * C50946;
    const double C24371 = C20329 * C50933;
    const double C22032 = C20328 * C121;
    const double C22490 = C20328 * C506;
    const double C22486 = C20328 * C507;
    const double C22856 = C20328 * C253;
    const double C22854 = C20328 * C254;
    const double C23496 = C20328 * C1175;
    const double C22039 = C20549 * C50670;
    const double C22503 = C20549 * C501;
    const double C22499 = C20549 * C502;
    const double C22865 = C20549 * C50899;
    const double C22863 = C20549 * C50686;
    const double C23507 = C20549 * C1169;
    const double C23505 = C20549 * C50686;
    const double C24387 = C20549 * C50946;
    const double C24383 = C20549 * C50933;
    const double C22038 = C20548 * C121;
    const double C22502 = C20548 * C506;
    const double C22498 = C20548 * C507;
    const double C22864 = C20548 * C253;
    const double C22862 = C20548 * C254;
    const double C23504 = C20548 * C1175;
    const double C22083 = C22071 * C121;
    const double C23868 = C22071 * C253;
    const double C22082 = C22070 * C50670;
    const double C23511 = C22070 * C1169;
    const double C23867 = C22070 * C50899;
    const double C22079 = C22067 * C50670;
    const double C22497 = C22067 * C501;
    const double C22861 = C22067 * C50899;
    const double C23503 = C22067 * C1169;
    const double C24381 = C22067 * C50946;
    const double C22078 = C22066 * C121;
    const double C22496 = C22066 * C506;
    const double C22860 = C22066 * C253;
    const double C22077 = C22065 * C50670;
    const double C22485 = C22065 * C501;
    const double C22853 = C22065 * C50899;
    const double C23495 = C22065 * C1169;
    const double C24369 = C22065 * C50946;
    const double C22076 = C22064 * C121;
    const double C22484 = C22064 * C506;
    const double C22852 = C22064 * C253;
    const double C22679 = C22516 * C121;
    const double C22874 = C22516 * C253;
    const double C22868 = C22516 * C254;
    const double C24540 = C22516 * C1175;
    const double C39590 = C22516 * C507;
    const double C22701 = C22693 * C121;
    const double C22870 = C22693 * C253;
    const double C39588 = C22693 * C506;
    const double C22700 = C22692 * C50670;
    const double C22869 = C22692 * C50899;
    const double C24541 = C22692 * C1169;
    const double C39589 = C22692 * C501;
    const double C40783 = C22692 * C50946;
    const double C22999 = C22882 * C121;
    const double C39806 = C22882 * C254;
    const double C40888 = C22882 * C1175;
    const double C23007 = C23004 * C50670;
    const double C39807 = C23004 * C50899;
    const double C40889 = C23004 * C1169;
    const double C23006 = C23003 * C121;
    const double C39808 = C23003 * C253;
    const double C49823 = C49819 * ce;
    const double C1174 = (-C49792 / C49783) / C49791 - (C49819 * de) / C49783;
    const double C22084 = C22072 * C121;
    const double C22047 = C20962 * C121;
    const double C23510 = C20962 * C1175;
    const double C23872 = C20962 * C253;
    const double C23866 = C20962 * C254;
    const double C22081 = C22069 * C121;
    const double C23876 = C22069 * C253;
    const double C49933 = C49930 - C49914;
    const double C2831 =
        4 * ((-2 * C50352) / C49783 - (C49873 * C50398) / C49783 -
             (C50353 * ce) / C49783) +
        C49873 *
            ((-3 * C50398) / C49783 +
             C49873 * ((-2 * C50390) / C49783 -
                       (C49873 * (C49873 * (C49873 * C49926 + C49995 * ce) +
                                  C49904 + C49873 * C49995 * ce)) /
                           C49783 -
                       (C50392 * ce) / C49783) -
             (C50397 * ce) / C49783) -
        ((3 * C50353 + C49873 * C50397) * ce) / C49783;
    const double C3001 =
        C50085 * ((-2 * C50352) / C49783 - (C49873 * C50398) / C49783 -
                  (C50353 * ce) / C49783);
    const double C3005 =
        C50085 *
        ((-3 * C50398) / C49783 +
         C49873 * ((-2 * C50390) / C49783 -
                   (C49873 * (C49873 * (C49873 * C49926 + C49995 * ce) +
                              C49904 + C49873 * C49995 * ce)) /
                       C49783 -
                   (C50392 * ce) / C49783) -
         (C50397 * ce) / C49783);
    const double C3199 =
        -(C50398 * C50170 + C49873 * C50352 + C49885 + C50350 * ce) / C49783;
    const double C3357 = (-2 * C50352) / C49783 - (C49873 * C50398) / C49783 -
                         (C50353 * ce) / C49783 +
                         ((-2 * C50390) / C49783 -
                          (C49873 * (C49873 * (C49873 * C49926 + C49995 * ce) +
                                     C49904 + C49873 * C49995 * ce)) /
                              C49783 -
                          (C50392 * ce) / C49783) *
                             C50170;
    const double C3487 = (-2 * C50085 * C50398) / C49783 -
                         (C50085 * ((C49873 * (C49873 * C49926 + C49995 * ce) +
                                     C49904 + C49873 * C49995 * ce) *
                                        C50170 +
                                    C50398)) /
                             C49783;
    const double C8092 = C7920 * C259;
    const double C17162 = C16990 * C259;
    const double C11052 = C7920 * C382;
    const double C34106 = C16990 * C382;
    const double C2365 = C2177 * C512;
    const double C8426 = C7920 * C512;
    const double C17496 = C16990 * C512;
    const double C24846 = C49761 * C512;
    const double C9642 = C7920 * C721;
    const double C13694 = C2177 * C721;
    const double C18712 = C16990 * C721;
    const double C27714 = C49761 * C721;
    const double C5420 = C2177 * C854;
    const double C11618 = C7920 * C854;
    const double C34672 = C16990 * C854;
    const double C44782 = C49761 * C854;
    const double C50384 = C50382 + C50377;
    const double C50038 = C49870 * C50017;
    const double C50043 = 3 * C50017;
    const double C50113 = C50017 * ce;
    const double C50111 = C49873 * C50017;
    const double C2838 = C50616 * C2692;
    const double C20127 = C50611 * C2692;
    const double C25299 = C50616 * C2692;
    const double C3028 = C50616 * C2998;
    const double C20959 = C50611 * C2998;
    const double C25473 = C50616 * C2998;
    const double C3370 = C50616 * C3198;
    const double C22235 = C50611 * C3198;
    const double C25795 = C50616 * C3198;
    const double C20204 = C19772 * C2827;
    const double C20324 = C19772 * C2997;
    const double C20544 = C19772 * C3353;
    const double C50472 = C49873 * C50470;
    const double C22849 =
        (-3 * (C50470 * C50170 + C50398)) / C49783 +
        C50085 * ((-2 * C50085 * C50470) / C49783 -
                  (C50085 * ((C49873 * (C49873 * C49962 + C50005 * ce) +
                              C49926 + C49873 * C50005 * ce) *
                                 C50170 +
                             C50470)) /
                      C49783);
    const double C138 = (3 * (C50026 + C49870 * C50030 + C50246 * ae) +
                         C49870 * (2 * C50030 + C49870 * C50035 + C50248 * ae) +
                         (2 * C50246 + C49870 * C50248) * ae) /
                        C49742;
    const double C261 =
        (C49873 * (2 * C50030 + C49870 * C50035 + C50248 * ae)) / C49742;
    const double C387 =
        (C50085 * (2 * C50030 + C49870 * C50035 + C50248 * ae)) / C49742;
    const double C516 =
        (C50026 + C49870 * C50030 + C50246 * ae + C50035 * C50094) / C49742;
    const double C609 =
        (2 * C49873 * C50035 + C49873 * (C50035 + C50017 * C50094)) / C49742;
    const double C728 = (C50085 * C49873 * C50035) / C49742;
    const double C735 = (C50085 * (C50035 + C50017 * C50094)) / C49742;
    const double C858 =
        (C50026 + C49870 * C50030 + C50246 * ae + C50035 * C50170) / C49742;
    const double C1064 =
        (2 * C50085 * C50035 + C50085 * (C50035 + C50017 * C50170)) / C49742;
    const double C3377 = C3361 + C3362;
    const double C21876 = C21864 + C21865;
    const double C25802 = C25786 + C25787;
    const double C6204 = C6194 + C6195;
    const double C22690 = C22674 + C22675;
    const double C28916 = C28908 + C28909;
    const double C23514 = C20964 * C1175;
    const double C23870 = C20964 * C254;
    const double C31403 = C20964 * C121;
    const double C33042 = C20964 * C253;
    const double C22696 = C22688 * C121;
    const double C40454 = C22688 * C253;
    const double C39704 = C39702 * C121;
    const double C22494 = C20332 * C508;
    const double C24378 = C20332 * C1281;
    const double C31798 = C20332 * C507;
    const double C32100 = C20332 * C254;
    const double C32694 = C20332 * C1175;
    const double C22504 = C20550 * C507;
    const double C22500 = C20550 * C508;
    const double C22866 = C20550 * C254;
    const double C23508 = C20550 * C1175;
    const double C24384 = C20550 * C1281;
    const double C31951 = C20550 * C121;
    const double C32104 = C20550 * C253;
    const double C22872 = C22518 * C254;
    const double C24544 = C22518 * C1175;
    const double C32204 = C22518 * C121;
    const double C39592 = C22518 * C508;
    const double C40786 = C22518 * C1281;
    const double C50152 = C50150 - C49914;
    const double C39892 = C39890 * C121;
    const double C49977 = C49870 * C49975;
    const double C612 =
        2 * (C49873 * C49939 - (C50252 * ce) / C49783) +
        C49873 * (C49939 + C49873 * (C49873 * C49975 - (C50015 * ce) / C49783) -
                  (C49873 * C50015 * ce) / C49783) -
        ((C50252 + C50015 * C50094) * ce) / C49783;
    const double C738 =
        C50085 * (C49939 + C49873 * (C49873 * C49975 - (C50015 * ce) / C49783) -
                  (C49873 * C50015 * ce) / C49783);
    const double C977 = C49873 * C49939 - (C50252 * ce) / C49783 +
                        (C49873 * C49975 - (C50015 * ce) / C49783) * C50170;
    const double C1059 =
        2 * C50085 * C49939 + C50085 * (C49939 + C49975 * C50170);
    const double C50057 = C49870 * C50056;
    const double C50114 = C50056 * C50094;
    const double C5993 =
        (3 * (C50035 + C50017 * C50170) +
         C50085 * (2 * C50085 * C50017 + C50085 * (C50017 + C50056 * C50170))) /
        C49742;
    const double C50132 = C50125 + C50129;
    const double C50211 = C50191 + C50208;
    const double C8098 = C7920 * C270;
    const double C17168 = C16990 * C270;
    const double C11058 = C7920 * C392;
    const double C34112 = C16990 * C392;
    const double C2369 = C2177 * C521;
    const double C8432 = C7920 * C521;
    const double C17502 = C16990 * C521;
    const double C24850 = C49761 * C521;
    const double C9648 = C7920 * C733;
    const double C13698 = C2177 * C733;
    const double C18718 = C16990 * C733;
    const double C27718 = C49761 * C733;
    const double C5424 = C2177 * C863;
    const double C11624 = C7920 * C863;
    const double C34678 = C16990 * C863;
    const double C44786 = C49761 * C863;
    const double C128 = 5 * (3 * C50248 + C49870 * C50252) +
                        C49870 * (4 * C50252 + C49870 * C50258);
    const double C260 = C49873 * (4 * C50252 + C49870 * C50258);
    const double C384 = C50085 * (4 * C50252 + C49870 * C50258);
    const double C513 = 3 * C50248 + C49870 * C50252 + C50258 * C50094;
    const double C855 = 3 * C50248 + C49870 * C50252 + C50258 * C50170;
    const double C1412 = C50085 * C49873 * C50258;
    const double C20199 = 5 * (3 * C50353 + C49873 * C50397) +
                          C49873 * (4 * C50397 + C49873 * C50473);
    const double C20307 = C50085 * (4 * C50397 + C49873 * C50473);
    const double C20531 = 3 * C50353 + C49873 * C50397 + C50473 * C50170;
    const double C147 =
        3 * ((-(ae * C49895) / C49783) / C49742 - C49892 / C49881 +
             C49870 * C49911) +
        (((-2 * C49895) / C49783 - (C49870 * C49908) / C49783) * ae) / C49742 +
        C49870 *
            (2 * C49911 - (ae * C49908) / C49881 +
             C49870 *
                 ((-(ae * C49870 * C49904) / C49783) / C49742 -
                  C49903 / C49881 +
                  C49870 * ((-(C49870 * std::pow(C49875, 6) * bs[6] * C49886) /
                             C49783) /
                                C49742 -
                            (ae * C49904) / C49881)));
    const double C274 =
        C49873 * ((-(ae * C49895) / C49783) / C49742 - C49892 / C49881 +
                  C49870 * C49911) -
        ((C49882 * C49878 * C49983 + C49870 * (C49870 * C49987 + C49984 * ae) +
          C49870 * C49984 * ae) *
         ce) /
            C49881;
    const double C398 = (zP - zQ) * ((-(ae * C49895) / C49783) / C49742 -
                                     C49892 / C49881 + C49870 * C49911);
    const double C525 = (-(C49870 * C49892) / C49783) / C49742 -
                        (ae * C49885) / C49881 -
                        (C49873 * C50030 * ce) / C49881 +
                        C49873 * (C49873 * C49911 - (C50030 * ce) / C49881);
    const double C743 = (zP - zQ) * (C49873 * C49911 - (C50030 * ce) / C49881);
    const double C867 = (-(C49870 * C49892) / C49783) / C49742 -
                        (ae * C49885) / C49881 + C49911 * std::pow(zP - zQ, 2);
    const double C2697 =
        3 * ((-(C50091 * ce) / C49783) / C49742 - C49892 / C49881 +
             C49873 * C50101) -
        ((2 * C50091 + C49873 * C50099) * ce) / C49881 +
        C49873 *
            (2 * C50101 - (C50099 * ce) / C49881 +
             C49873 * ((-(C49873 * C49996 * ce) / C49783) / C49742 - C49914 +
                       C49873 * ((-(C49873 * C49924) / C49783) / C49742 -
                                 (C49996 * ce) / C49881)));
    const double C49940 = C49870 * C49938;
    const double C49943 = 2 * C49938;
    const double C50104 = C49873 * C49938;
    const double C50130 = C49938 - C50127;
    const double C618 =
        2 * (C49873 * C49911 - (C50030 * ce) / C49881) -
        ((C50030 + C50000 * std::pow(C49873, 2)) * ce) / C49881 +
        C49873 * (C49911 - (C49873 * C50000 * ce) / C49881 +
                  C49873 * (C49873 * C49938 - (C50000 * ce) / C49881));
    const double C748 =
        (zP - zQ) * (C49911 - (C49873 * C50000 * ce) / C49881 +
                     C49873 * (C49873 * C49938 - (C50000 * ce) / C49881));
    const double C983 =
        C49873 * C49911 - (C50030 * ce) / C49881 +
        (C49873 * C49938 - (C50000 * ce) / C49881) * std::pow(zP - zQ, 2);
    const double C1069 =
        2 * C50085 * C49911 + C50085 * (C49911 + C49938 * std::pow(C50085, 2));
    const double C50153 = C49873 * C50151;
    const double C50186 = 2 * C50151;
    const double C3497 =
        2 * C50085 * C50101 + C50085 * (C50101 + C50151 * std::pow(C50085, 2));
    const double C6186 =
        3 * (C50101 + C50151 * C50170) +
        C50085 * (2 * C50085 * C50151 +
                  C50085 * (C50151 + ((-(C49873 * C49960) / C49783) / C49742 -
                                      (C50006 * ce) / C49881) *
                                         C50170));
    const double C6314 =
        4 * ((-2 * C50085 * C49903) / C49881 + C50085 * C50183) +
        C50085 * (3 * C50183 +
                  C50085 * ((-2 * C50085 * C49924) / C49881 +
                            C50085 * ((-(C49960 * C50170) / C49783) / C49742 -
                                      C49946)));
    const double C49976 = C49870 * C49974;
    const double C50120 = C49873 * C49974;
    const double C50176 = C49974 * C50170;
    const double C5995 =
        3 * (C49911 + C49938 * C50170) +
        C50085 * (2 * C50085 * C49938 + C50085 * (C49938 + C49974 * C50170));
    const double C50210 = C49873 * C50207;
    const double C50220 = C50207 * C50170;
    const double C50231 = C50085 * C50230;
    const double C49767 = C49766 / C49742;
    const double C2371 = C2176 * C520;
    const double C2367 = C2176 * C511;
    const double C2363 = C2176 * C266;
    const double C2359 = C2176 * C256;
    const double C2353 = C2176 * C519;
    const double C2349 = C2176 * C510;
    const double C2345 = C2176 * C267;
    const double C2341 = C2176 * C257;
    const double C2339 = C2176 * C518;
    const double C2335 = C2176 * C509;
    const double C2331 = C2176 * C268;
    const double C2327 = C2176 * C258;
    const double C2719 = C2176 * C614;
    const double C2715 = C2176 * C606;
    const double C2707 = C2176 * C615;
    const double C2703 = C2176 * C607;
    const double C2843 = C2176 * C2693;
    const double C2839 = C2176 * C2688;
    const double C3029 = C2176 * C2995;
    const double C3025 = C2176 * C741;
    const double C3021 = C2176 * C725;
    const double C3015 = C2176 * C730;
    const double C3011 = C2176 * C718;
    const double C3371 = C2176 * C3194;
    const double C3367 = C2176 * C980;
    const double C3363 = C2176 * C972;
    const double C4003 = C2176 * C740;
    const double C3999 = C2176 * C724;
    const double C3995 = C2176 * C731;
    const double C3991 = C2176 * C719;
    const double C5422 = C2176 * C862;
    const double C5418 = C2176 * C853;
    const double C5414 = C2176 * C390;
    const double C5410 = C2176 * C380;
    const double C5408 = C2176 * C379;
    const double C5404 = C2176 * C389;
    const double C5400 = C2176 * C852;
    const double C5396 = C2176 * C861;
    const double C5390 = C2176 * C860;
    const double C5386 = C2176 * C851;
    const double C5382 = C2176 * C393;
    const double C5378 = C2176 * C383;
    const double C6016 = C2176 * C1058;
    const double C6012 = C2176 * C1062;
    const double C6006 = C2176 * C1061;
    const double C6002 = C2176 * C1057;
    const double C6196 = C2176 * C3491;
    const double C6192 = C2176 * C3485;
    const double C6322 = C2176 * C5990;
    const double C6318 = C2176 * C5985;
    const double C6828 = C2176 * C979;
    const double C6824 = C2176 * C971;
    const double C13700 = C2176 * C732;
    const double C13696 = C2176 * C720;
    const double C22667 = C22038 + C22039;
    const double C22881 = C22864 + C22865;
    const double C22666 = C22078 + C22079;
    const double C22880 = C22860 + C22861;
    const double C22994 = C22700 + C22701;
    const double C39693 = C22701 + C22700;
    const double C39805 = C22870 + C22869;
    const double C39883 = C23007 + C23006;
    const double C49825 = C49823 / C49783;
    const double C23520 = C22069 * C1174;
    const double C23516 = C20962 * C1174;
    const double C23512 = C22071 * C1174;
    const double C23506 = C20548 * C1174;
    const double C23502 = C22066 * C1174;
    const double C23498 = C20328 * C1174;
    const double C23494 = C22064 * C1174;
    const double C24546 = C22516 * C1174;
    const double C24542 = C22693 * C1174;
    const double C32698 = C20964 * C1174;
    const double C32692 = C20330 * C1174;
    const double C33684 = C20550 * C1174;
    const double C40222 = C22688 * C1174;
    const double C40890 = C23003 * C1174;
    const double C20206 = C19772 * C2831;
    const double C3033 = C2176 * C3001;
    const double C20322 = C19772 * C3001;
    const double C20326 = C19772 * C3005;
    const double C3375 = C2176 * C3199;
    const double C20542 = C19772 * C3199;
    const double C20546 = C19772 * C3357;
    const double C22514 = C19772 * C3487;
    const double C2830 =
        4 * ((-2 * C50359) / C49783 - (C49873 * C50384) / C49783 -
             (C50360 * ce) / C49783) +
        C49873 *
            ((-3 * C50384) / C49783 +
             C49873 *
                 ((-2 * C50376) / C49783 -
                  (C49873 * (C49873 * (C49873 * C49870 * C49962 + C50047 * ce) +
                             C49945 + C49873 * C50047 * ce)) /
                      C49783 -
                  (C50378 * ce) / C49783) -
             (C50383 * ce) / C49783) -
        ((3 * C50360 + C49873 * C50383) * ce) / C49783;
    const double C3000 =
        C50085 * ((-2 * C50359) / C49783 - (C49873 * C50384) / C49783 -
                  (C50360 * ce) / C49783);
    const double C3004 =
        C50085 *
        ((-3 * C50384) / C49783 +
         C49873 *
             ((-2 * C50376) / C49783 -
              (C49873 * (C49873 * (C49873 * C49870 * C49962 + C50047 * ce) +
                         C49945 + C49873 * C50047 * ce)) /
                  C49783 -
              (C50378 * ce) / C49783) -
         (C50383 * ce) / C49783);
    const double C3200 =
        -(C50384 * C50170 + C49873 * C50359 + C49895 + C50357 * ce) / C49783;
    const double C3356 =
        (-2 * C50359) / C49783 - (C49873 * C50384) / C49783 -
        (C50360 * ce) / C49783 +
        ((-2 * C50376) / C49783 -
         (C49873 * (C49873 * (C49873 * C49870 * C49962 + C50047 * ce) + C49945 +
                    C49873 * C50047 * ce)) /
             C49783 -
         (C50378 * ce) / C49783) *
            C50170;
    const double C3486 =
        (-2 * C50085 * C50384) / C49783 -
        (C50085 * ((C49873 * (C49873 * C49870 * C49962 + C50047 * ce) + C49945 +
                    C49873 * C50047 * ce) *
                       C50170 +
                   C50384)) /
            C49783;
    const double C50040 = C50037 + C50038;
    const double C50115 = C50113 / C49881;
    const double C974 = (C49873 * C50035 + C50111 * C50170) / C49742;
    const double C6820 =
        (2 * C50085 * C50111 + C50085 * (C50111 + C49873 * C50056 * C50170)) /
        C49742;
    const double C2845 = C2837 + C2838;
    const double C20132 = C20126 + C20127;
    const double C25306 = C25298 + C25299;
    const double C3043 = C3027 + C3028;
    const double C20966 = C20958 + C20959;
    const double C25488 = C25472 + C25473;
    const double C3381 = C3369 + C3370;
    const double C22238 = C22234 + C22235;
    const double C25806 = C25794 + C25795;
    const double C20208 = C20204 + C20205;
    const double C20334 = C20324 + C20325;
    const double C20552 = C20544 + C20545;
    const double C50474 = C50472 / C49783;
    const double C2358 = C50616 * C261;
    const double C8095 = C50944 * C261;
    const double C8085 = C7915 * C261;
    const double C17165 = C16984 * C261;
    const double C17155 = C16985 * C261;
    const double C24839 = C50616 * C261;
    const double C5413 = C50616 * C387;
    const double C11051 = C50944 * C387;
    const double C11043 = C7915 * C387;
    const double C27939 = C50616 * C387;
    const double C34105 = C16984 * C387;
    const double C34097 = C16985 * C387;
    const double C2368 = C2171 * C516;
    const double C2352 = C50616 * C516;
    const double C8429 = C50944 * C516;
    const double C8419 = C7915 * C516;
    const double C17499 = C16984 * C516;
    const double C17489 = C16985 * C516;
    const double C19901 = C50611 * C516;
    const double C24849 = C50887 * C516;
    const double C24833 = C50616 * C516;
    const double C2714 = C50616 * C609;
    const double C8549 = C7915 * C609;
    const double C17619 = C16985 * C609;
    const double C19905 = C50611 * C609;
    const double C25183 = C50616 * C609;
    const double C3990 = C50616 * C728;
    const double C8717 = C7915 * C728;
    const double C9645 = C50944 * C728;
    const double C13697 = C2171 * C728;
    const double C17787 = C16985 * C728;
    const double C18715 = C16984 * C728;
    const double C21869 = C50611 * C728;
    const double C26395 = C50616 * C728;
    const double C27717 = C50887 * C728;
    const double C3998 = C50616 * C735;
    const double C8725 = C7915 * C735;
    const double C17795 = C16985 * C735;
    const double C26403 = C50616 * C735;
    const double C31249 = C50611 * C735;
    const double C5419 = C2171 * C858;
    const double C5399 = C50616 * C858;
    const double C11633 = C7915 * C858;
    const double C11617 = C50944 * C858;
    const double C22059 = C50611 * C858;
    const double C28677 = C50616 * C858;
    const double C34687 = C16985 * C858;
    const double C34671 = C16984 * C858;
    const double C44781 = C50887 * C858;
    const double C6005 = C50616 * C1064;
    const double C11899 = C7915 * C1064;
    const double C34953 = C16985 * C1064;
    const double C39319 = C50611 * C1064;
    const double C45335 = C50616 * C1064;
    const double C22041 = C21876 * C121;
    const double C23524 = C21876 * C1174;
    const double C23518 = C21876 * C1175;
    const double C23880 = C21876 * C253;
    const double C23874 = C21876 * C254;
    const double C22698 = C22690 * C121;
    const double C40220 = C22690 * C1175;
    const double C40452 = C22690 * C254;
    const double C49979 = C49955 + C49977;
    const double C50058 = C50044 + C50057;
    const double C50116 = C50017 + C50114;
    const double C2828 = (4 * (2 * C50103 + C49873 * C50108) +
                          C49873 * (3 * C50108 + C49873 * C50132)) /
                         C49742;
    const double C3002 = (C50085 * (3 * C50108 + C49873 * C50132)) / C49742;
    const double C3354 =
        (2 * C50103 + C49873 * C50108 + C50132 * C50170) / C49742;
    const double C20200 = (5 * (3 * C50099 + C49873 * C50149) +
                           C49873 * (4 * C50149 + C49873 * C50211)) /
                          C49742;
    const double C20308 = (C50085 * (4 * C50149 + C49873 * C50211)) / C49742;
    const double C20532 =
        (3 * C50099 + C49873 * C50149 + C50211 * C50170) / C49742;
    const double C2364 = C2171 * C274;
    const double C2348 = C50616 * C274;
    const double C8103 = C50943 * C274;
    const double C8089 = C50944 * C274;
    const double C8075 = C7915 * C274;
    const double C17173 = C16983 * C274;
    const double C17159 = C16984 * C274;
    const double C17145 = C16985 * C274;
    const double C19899 = C50611 * C274;
    const double C24845 = C50887 * C274;
    const double C24829 = C50616 * C274;
    const double C5415 = C2171 * C398;
    const double C5403 = C50616 * C398;
    const double C11055 = C50943 * C398;
    const double C11039 = C50944 * C398;
    const double C11035 = C7915 * C398;
    const double C22055 = C50611 * C398;
    const double C27941 = C50887 * C398;
    const double C27929 = C50616 * C398;
    const double C34109 = C16983 * C398;
    const double C34093 = C16984 * C398;
    const double C34089 = C16985 * C398;
    const double C2354 = C2171 * C525;
    const double C2338 = C50616 * C525;
    const double C8437 = C50943 * C525;
    const double C8423 = C50944 * C525;
    const double C17507 = C16983 * C525;
    const double C17493 = C16984 * C525;
    const double C19891 = C50611 * C525;
    const double C24835 = C50887 * C525;
    const double C24819 = C50616 * C525;
    const double C3018 = C50616 * C743;
    const double C3996 = C2171 * C743;
    const double C8721 = C50944 * C743;
    const double C9653 = C50943 * C743;
    const double C17791 = C16984 * C743;
    const double C18723 = C16983 * C743;
    const double C20953 = C50611 * C743;
    const double C25463 = C50616 * C743;
    const double C26401 = C50887 * C743;
    const double C5397 = C2171 * C867;
    const double C5393 = C50616 * C867;
    const double C11629 = C50944 * C867;
    const double C11621 = C50943 * C867;
    const double C22043 = C50611 * C867;
    const double C28691 = C50616 * C867;
    const double C28679 = C50887 * C867;
    const double C34683 = C16984 * C867;
    const double C34675 = C16983 * C867;
    const double C2844 = C2171 * C2697;
    const double C20125 = C50611 * C2697;
    const double C25305 = C50887 * C2697;
    const double C49941 = C49933 + C49940;
    const double C49958 = C49943 - C49951;
    const double C50109 = C50104 - C50107;
    const double C2720 = C2171 * C618;
    const double C2710 = C50616 * C618;
    const double C8557 = C50944 * C618;
    const double C17627 = C16984 * C618;
    const double C19895 = C50611 * C618;
    const double C25189 = C50887 * C618;
    const double C25179 = C50616 * C618;
    const double C3024 = C50616 * C748;
    const double C4004 = C2171 * C748;
    const double C8733 = C50944 * C748;
    const double C17803 = C16984 * C748;
    const double C20957 = C50611 * C748;
    const double C25469 = C50616 * C748;
    const double C26409 = C50887 * C748;
    const double C3366 = C50616 * C983;
    const double C6829 = C2171 * C983;
    const double C9049 = C50944 * C983;
    const double C18119 = C16984 * C983;
    const double C21867 = C50611 * C983;
    const double C25791 = C50616 * C983;
    const double C28687 = C50887 * C983;
    const double C6011 = C50616 * C1069;
    const double C6007 = C2171 * C1069;
    const double C11903 = C50944 * C1069;
    const double C22673 = C50611 * C1069;
    const double C29057 = C50616 * C1069;
    const double C34957 = C16984 * C1069;
    const double C45337 = C50887 * C1069;
    const double C50154 = C50152 + C50153;
    const double C50199 = C50186 - C50193;
    const double C6197 = C2171 * C3497;
    const double C22511 = C50611 * C3497;
    const double C28915 = C50887 * C3497;
    const double C22879 = C50611 * C6186;
    const double C39888 = C50611 * C6314;
    const double C49978 = C49969 + C49976;
    const double C50128 = C50120 - C50124;
    const double C50177 = C49938 + C50176;
    const double C6325 = C50616 * C5995;
    const double C39699 = C50611 * C5995;
    const double C45613 = C50616 * C5995;
    const double C50212 = C50209 + C50210;
    const double C50221 = C50151 + C50220;
    const double C50232 = C50227 + C50231;
    const double C49768 = C49767 - C49757;
    const double C2390 = C2359 + C2360;
    const double C2385 = C2349 + C2350;
    const double C2383 = C2345 + C2346;
    const double C2381 = C2341 + C2342;
    const double C2380 = C2339 + C2340;
    const double C2378 = C2335 + C2336;
    const double C2376 = C2331 + C2332;
    const double C2374 = C2327 + C2328;
    const double C2726 = C2715 + C2716;
    const double C2723 = C2707 + C2708;
    const double C2721 = C2703 + C2704;
    const double C2846 = C2839 + C2840;
    const double C3044 = C3029 + C3030;
    const double C3042 = C3025 + C3026;
    const double C3040 = C3021 + C3022;
    const double C3037 = C3015 + C3016;
    const double C3035 = C3011 + C3012;
    const double C3382 = C3371 + C3372;
    const double C3380 = C3367 + C3368;
    const double C3378 = C3363 + C3364;
    const double C4010 = C3999 + C4000;
    const double C4006 = C3991 + C3992;
    const double C5442 = C5410 + C5411;
    const double C5441 = C5408 + C5409;
    const double C5439 = C5404 + C5405;
    const double C5437 = C5400 + C5401;
    const double C5432 = C5390 + C5391;
    const double C5430 = C5386 + C5387;
    const double C5428 = C5382 + C5383;
    const double C5426 = C5378 + C5379;
    const double C6029 = C6016 + C6017;
    const double C6027 = C6012 + C6013;
    const double C6022 = C6002 + C6003;
    const double C6203 = C6192 + C6193;
    const double C6330 = C6322 + C6323;
    const double C6328 = C6318 + C6319;
    const double C6832 = C6824 + C6825;
    const double C22685 = C22667 * C50809;
    const double C48015 = C22667 * C50809;
    const double C22885 = C22881 - C22866;
    const double C22684 = C22666 * C16986;
    const double C39692 = C22666 * C50759;
    const double C48014 = C22666 * C50915;
    const double C22884 = C22880 - C22862;
    const double C23002 = C22994 * C16986;
    const double C39884 = C22994 * C50759;
    const double C48268 = C22994 * C50915;
    const double C39700 = C39693 * C50759;
    const double C39810 = C39805 - C22868;
    const double C39889 = C39883 * C50759;
    const double C49827 = C49825 - C49820;
    const double C24539 = C23506 + C23507;
    const double C24538 = C23502 + C23503;
    const double C40887 = C24542 + C24541;
    const double C3031 = C2177 * C3000;
    const double C20960 = C19772 * C3000;
    const double C25476 = C49761 * C3000;
    const double C3373 = C2177 * C3200;
    const double C22236 = C19772 * C3200;
    const double C25798 = C49761 * C3200;
    const double C50041 = C50040 + C50039;
    const double C6827 = C50616 * C974;
    const double C9041 = C7915 * C974;
    const double C18111 = C16985 * C974;
    const double C21873 = C50611 * C974;
    const double C28685 = C50616 * C974;
    const double C32696 = C20966 * C1175;
    const double C33040 = C20966 * C254;
    const double C23522 = C22238 * C1175;
    const double C23878 = C22238 * C254;
    const double C31948 = C22238 * C121;
    const double C31800 = C20334 * C508;
    const double C33534 = C20334 * C1281;
    const double C22506 = C20552 * C508;
    const double C24390 = C20552 * C1281;
    const double C32102 = C20552 * C254;
    const double C33682 = C20552 * C1175;
    const double C50475 = C50460 - C50474;
    const double C2389 = C2357 + C2358;
    const double C8112 = C8084 + C8085;
    const double C17182 = C17154 + C17155;
    const double C24870 = C24838 + C24839;
    const double C5443 = C5412 + C5413;
    const double C11069 = C11042 + C11043;
    const double C27953 = C27938 + C27939;
    const double C34123 = C34096 + C34097;
    const double C2394 = C2367 + C2368;
    const double C2386 = C2351 + C2352;
    const double C8440 = C8418 + C8419;
    const double C17510 = C17488 + C17489;
    const double C19922 = C19900 + C19901;
    const double C24867 = C24832 + C24833;
    const double C2725 = C2713 + C2714;
    const double C8560 = C8548 + C8549;
    const double C17630 = C17618 + C17619;
    const double C19924 = C19904 + C19905;
    const double C25194 = C25182 + C25183;
    const double C4005 = C3989 + C3990;
    const double C8738 = C8716 + C8717;
    const double C13703 = C13696 + C13697;
    const double C17808 = C17786 + C17787;
    const double C21878 = C21868 + C21869;
    const double C26410 = C26394 + C26395;
    const double C4009 = C3997 + C3998;
    const double C8742 = C8724 + C8725;
    const double C17812 = C17794 + C17795;
    const double C26414 = C26402 + C26403;
    const double C31252 = C31248 + C31249;
    const double C5446 = C5418 + C5419;
    const double C5436 = C5398 + C5399;
    const double C11647 = C11632 + C11633;
    const double C22074 = C22058 + C22059;
    const double C28699 = C28676 + C28677;
    const double C34701 = C34686 + C34687;
    const double C6023 = C6004 + C6005;
    const double C11908 = C11898 + C11899;
    const double C34962 = C34952 + C34953;
    const double C39322 = C39318 + C39319;
    const double C45345 = C45334 + C45335;
    const double C141 = 5 * ((-3 * C49908) / C49783 + C49870 * C49939) +
                        C49870 * (4 * C49939 + C49870 * C49979);
    const double C272 = C49873 * (4 * C49939 + C49870 * C49979) -
                        ((4 * C50252 + C49870 * C50258) * ce) / C49783;
    const double C395 = C50085 * (4 * C49939 + C49870 * C49979);
    const double C523 = (-3 * C49908) / C49783 + C49870 * C49939 +
                        C49873 * (C49873 * C49979 - (C50258 * ce) / C49783) -
                        (C49873 * C50258 * ce) / C49783;
    const double C864 =
        (-3 * C49908) / C49783 + C49870 * C49939 + C49979 * C50170;
    const double C1414 = C50085 * (C49873 * C49979 - (C50258 * ce) / C49783);
    const double C50059 = C50058 + C50048;
    const double C2695 = (3 * (C50035 + C50017 * C50094) +
                          C49873 * (2 * C50111 + C49873 * C50116)) /
                         C49742;
    const double C3202 = (C50035 + C50017 * C50094 + C50116 * C50170) / C49742;
    const double C3985 = (C50085 * (2 * C50111 + C49873 * C50116)) / C49742;
    const double C2392 = C2363 + C2364;
    const double C2384 = C2347 + C2348;
    const double C8107 = C8074 + C8075;
    const double C17177 = C17144 + C17145;
    const double C19921 = C19898 + C19899;
    const double C24865 = C24828 + C24829;
    const double C5444 = C5414 + C5415;
    const double C5438 = C5402 + C5403;
    const double C11065 = C11034 + C11035;
    const double C22073 = C22054 + C22055;
    const double C27948 = C27928 + C27929;
    const double C34119 = C34088 + C34089;
    const double C2387 = C2353 + C2354;
    const double C2379 = C2337 + C2338;
    const double C19917 = C19890 + C19891;
    const double C24860 = C24818 + C24819;
    const double C3038 = C3017 + C3018;
    const double C4008 = C3995 + C3996;
    const double C20963 = C20952 + C20953;
    const double C25483 = C25462 + C25463;
    const double C5435 = C5396 + C5397;
    const double C5433 = C5392 + C5393;
    const double C22068 = C22042 + C22043;
    const double C28706 = C28690 + C28691;
    const double C2848 = C2843 + C2844;
    const double C20131 = C20124 + C20125;
    const double C148 =
        4 * (2 * C49911 - (ae * C49908) / C49881 + C49870 * C49941) +
        (((-3 * C49908) / C49783 + C49870 * C49939) * ae) / C49742 +
        C49870 *
            (3 * C49941 + (C49939 * ae) / C49742 +
             C49870 * (2 * C49938 - (ae * C49932) / C49881 +
                       C49870 * ((-(ae * C49870 * C49926) / C49783) / C49742 -
                                 C49924 / C49881 +
                                 C49870 * ((-(C49870 * std::pow(C49877, 7) *
                                              bs[7] * C49886) /
                                            C49783) /
                                               C49742 -
                                           (ae * C49926) / C49881))));
    const double C273 =
        C49873 * (2 * C49911 - (ae * C49908) / C49881 + C49870 * C49941) -
        ((2 * (C49870 * C49987 + C49984 * ae) +
          C49870 * (C49987 +
                    C49870 * (C49870 * C49896 * C49897 * C49983 + C49985 * ae) +
                    C49870 * C49985 * ae) +
          (C49984 + C49985 * C49899) * ae) *
         ce) /
            C49881;
    const double C399 =
        (zP - zQ) * (2 * C49911 - (ae * C49908) / C49881 + C49870 * C49941);
    const double C526 = (-(ae * C49895) / C49783) / C49742 - C49892 / C49881 +
                        C49870 * C49911 - (C49873 * C50035 * ce) / C49881 +
                        C49873 * (C49873 * C49941 - (C50035 * ce) / C49881);
    const double C744 = (zP - zQ) * (C49873 * C49941 - (C50035 * ce) / C49881);
    const double C868 = (-(ae * C49895) / C49783) / C49742 - C49892 / C49881 +
                        C49870 * C49911 + C49941 * std::pow(zP - zQ, 2);
    const double C2698 =
        3 * (C49911 - (C50103 * ce) / C49881 + C49873 * C50109) -
        ((2 * C50103 + C49873 * C50108) * ce) / C49881 +
        C49873 *
            (2 * C50109 - (C50108 * ce) / C49881 +
             C49873 * (C49938 - (C49873 * C50012 * ce) / C49881 +
                       C49873 * (C49873 * C49974 - (C50012 * ce) / C49881)));
    const double C2728 = C2719 + C2720;
    const double C2724 = C2709 + C2710;
    const double C19919 = C19894 + C19895;
    const double C25193 = C25178 + C25179;
    const double C3041 = C3023 + C3024;
    const double C4012 = C4003 + C4004;
    const double C20965 = C20956 + C20957;
    const double C25486 = C25468 + C25469;
    const double C3379 = C3365 + C3366;
    const double C6834 = C6828 + C6829;
    const double C21877 = C21866 + C21867;
    const double C25804 = C25790 + C25791;
    const double C6026 = C6010 + C6011;
    const double C6024 = C6006 + C6007;
    const double C22689 = C22672 + C22673;
    const double C29061 = C29056 + C29057;
    const double C2833 =
        4 * (2 * C50101 - (C50099 * ce) / C49881 + C49873 * C50154) -
        ((3 * C50099 + C49873 * C50149) * ce) / C49881 +
        C49873 *
            (3 * C50154 - (C50149 * ce) / C49881 +
             C49873 *
                 (2 * C50151 - (C50143 * ce) / C49881 +
                  C49873 *
                      ((-(C49873 * C50006 * ce) / C49783) / C49742 - C49946 +
                       C49873 * ((-(C49873 * C49960) / C49783) / C49742 -
                                 (C50006 * ce) / C49881))));
    const double C3007 =
        C50085 * (2 * C50101 - (C50099 * ce) / C49881 + C49873 * C50154);
    const double C3009 =
        C50085 *
        (3 * C50154 - (C50149 * ce) / C49881 +
         C49873 *
             (2 * C50151 - (C50143 * ce) / C49881 +
              C49873 * ((-(C49873 * C50006 * ce) / C49783) / C49742 - C49946 +
                        C49873 * ((-(C49873 * C49960) / C49783) / C49742 -
                                  (C50006 * ce) / C49881))));
    const double C3203 = (-(C50091 * ce) / C49783) / C49742 - C49892 / C49881 +
                         C49873 * C50101 + C50154 * std::pow(C50085, 2);
    const double C3359 =
        2 * C50101 - (C50099 * ce) / C49881 + C49873 * C50154 +
        (2 * C50151 - (C50143 * ce) / C49881 +
         C49873 * ((-(C49873 * C50006 * ce) / C49783) / C49742 - C49946 +
                   C49873 * ((-(C49873 * C49960) / C49783) / C49742 -
                             (C50006 * ce) / C49881))) *
            std::pow(C50085, 2);
    const double C3495 =
        2 * C50085 * C50154 +
        C50085 *
            (C50154 + ((-(C49873 * C50006 * ce) / C49783) / C49742 - C49946 +
                       C49873 * ((-(C49873 * C49960) / C49783) / C49742 -
                                 (C50006 * ce) / C49881)) *
                          std::pow(C50085, 2));
    const double C6205 = C6196 + C6197;
    const double C22517 = C22510 + C22511;
    const double C22883 = C22878 + C22879;
    const double C39891 = C39887 + C39888;
    const double C49980 = C49870 * C49978;
    const double C50112 = C49873 * C49978;
    const double C617 =
        2 * (C49873 * C49941 - (C50035 * ce) / C49881) -
        ((C50035 + C50017 * std::pow(C49873, 2)) * ce) / C49881 +
        C49873 * (C49941 - (C49873 * C50017 * ce) / C49881 +
                  C49873 * (C49873 * C49978 - (C50017 * ce) / C49881));
    const double C747 =
        (zP - zQ) * (C49941 - (C49873 * C50017 * ce) / C49881 +
                     C49873 * (C49873 * C49978 - (C50017 * ce) / C49881));
    const double C982 =
        C49873 * C49941 - (C50035 * ce) / C49881 +
        (C49873 * C49978 - (C50017 * ce) / C49881) * std::pow(zP - zQ, 2);
    const double C1068 =
        2 * C50085 * C49941 + C50085 * (C49941 + C49978 * std::pow(C50085, 2));
    const double C5996 =
        3 * (C49941 + C49978 * C50170) +
        C50085 *
            (2 * C50085 * C49978 +
             C50085 *
                 (C49978 +
                  ((-(ae * C49870 * C49962) / C49783) / C49742 -
                   C49960 / C49881 +
                   C49870 * ((-(C49870 * std::pow(C49875, 8) * bs[8] * C49886) /
                              C49783) /
                                 C49742 -
                             (ae * C49962) / C49881)) *
                      C50170));
    const double C50131 = C49873 * C50128;
    const double C3496 =
        2 * C50085 * C50109 + C50085 * (C50109 + C50128 * std::pow(C50085, 2));
    const double C6185 =
        3 * (C50109 + C50128 * C50170) +
        C50085 *
            (2 * C50085 * C50128 +
             C50085 *
                 (C50128 +
                  (C49873 * ((-(C49870 * std::pow(C49875, 8) * bs[8] * C49886) /
                              C49783) /
                                 C49742 -
                             (ae * C49962) / C49881) -
                   (C50053 * ce) / C49881) *
                      C50170));
    const double C6313 =
        4 * (2 * C50085 * C49938 + C50085 * C50177) +
        C50085 *
            (3 * C50177 +
             C50085 * (2 * C50085 * C49974 +
                       C50085 * (C49974 + ((-(C49870 * std::pow(C49875, 8) *
                                              bs[8] * C49886) /
                                            C49783) /
                                               C49742 -
                                           (ae * C49962) / C49881) *
                                              C50170)));
    const double C6331 = C6324 + C6325;
    const double C39703 = C39698 + C39699;
    const double C45619 = C45612 + C45613;
    const double C50213 = C49873 * C50212;
    const double C22850 =
        3 * (C50154 + C50212 * C50170) +
        C50085 *
            (2 * C50085 * C50212 +
             C50085 *
                 (C50212 +
                  ((-(C49873 * C50050 * ce) / C49783) / C49742 -
                   C49960 / C49881 +
                   C49873 * ((-(C49873 * std::pow(C49875, 8) * bs[8] * C49886) /
                              C49783) /
                                 C49742 -
                             (C50050 * ce) / C49881)) *
                      C50170));
    const double C22991 =
        4 * (2 * C50085 * C50151 + C50085 * C50221) +
        C50085 *
            (3 * C50221 +
             C50085 * (2 * C50085 * C50207 +
                       C50085 * (C50207 + ((-(C49873 * std::pow(C49875, 8) *
                                              bs[8] * C49886) /
                                            C49783) /
                                               C49742 -
                                           (C50050 * ce) / C49881) *
                                              C50170)));
    const double C39881 =
        5 * (3 * C50183 + C50085 * C50232) +
        C50085 * (4 * C50232 +
                  C50085 * (3 * C50230 +
                            C50085 * ((-2 * C50085 * C49960) / C49881 +
                                      C50085 * ((-(std::pow(C49875, 8) * bs[8] *
                                                   C49886 * C50170) /
                                                 C49783) /
                                                    C49742 -
                                                C49960 / C49881))));
    const double C24852 = C49768 * C520;
    const double C24848 = C49768 * C511;
    const double C24844 = C49768 * C266;
    const double C24840 = C49768 * C256;
    const double C24834 = C49768 * C519;
    const double C24830 = C49768 * C510;
    const double C24826 = C49768 * C267;
    const double C24822 = C49768 * C257;
    const double C24820 = C49768 * C518;
    const double C24816 = C49768 * C509;
    const double C24812 = C49768 * C268;
    const double C24808 = C49768 * C258;
    const double C25188 = C49768 * C614;
    const double C25184 = C49768 * C606;
    const double C25176 = C49768 * C615;
    const double C25172 = C49768 * C607;
    const double C25304 = C49768 * C2693;
    const double C25300 = C49768 * C2688;
    const double C25478 = C49768 * C3001;
    const double C25474 = C49768 * C2995;
    const double C25470 = C49768 * C741;
    const double C25466 = C49768 * C725;
    const double C25460 = C49768 * C730;
    const double C25456 = C49768 * C718;
    const double C25800 = C49768 * C3199;
    const double C25796 = C49768 * C3194;
    const double C25792 = C49768 * C980;
    const double C25788 = C49768 * C972;
    const double C26408 = C49768 * C740;
    const double C26404 = C49768 * C724;
    const double C26400 = C49768 * C731;
    const double C26396 = C49768 * C719;
    const double C27720 = C49768 * C732;
    const double C27716 = C49768 * C720;
    const double C27940 = C49768 * C390;
    const double C27936 = C49768 * C380;
    const double C27934 = C49768 * C379;
    const double C27930 = C49768 * C389;
    const double C27924 = C49768 * C393;
    const double C27920 = C49768 * C383;
    const double C28696 = C49768 * C851;
    const double C28692 = C49768 * C860;
    const double C28686 = C49768 * C979;
    const double C28682 = C49768 * C971;
    const double C28678 = C49768 * C861;
    const double C28674 = C49768 * C852;
    const double C28914 = C49768 * C3491;
    const double C28910 = C49768 * C3485;
    const double C29054 = C49768 * C1062;
    const double C29050 = C49768 * C1058;
    const double C44784 = C49768 * C862;
    const double C44780 = C49768 * C853;
    const double C45336 = C49768 * C1061;
    const double C45332 = C49768 * C1057;
    const double C45610 = C49768 * C5990;
    const double C45606 = C49768 * C5985;
    const double C117 =
        ((((0 - (C49740 * C49741) / C49742) * ae) / C49742 - (0 * be) / C49751 +
          C49743 / C49742) /
             C49747 -
         ((C49740 * C49764 + 0) * be) / C49742) /
            C49747 +
        ((C49740 * (C49764 / C49747 -
                    ((C49740 * C49768 + C50887) * be) / C49742 + C49761) +
          C50943) *
         ae) /
            C49742 +
        C49768 / C49747 - ((C49740 * C49761 + C50616) * be) / C49742;
    const double C118 =
        (C49764 / C49747 - ((C49740 * C49768 + C50887) * be) / C49742 +
         C49761) /
            C49747 +
        ((C49740 *
              (C49768 / C49747 - ((C49740 * C49761 + C50616) * be) / C49742) +
          C50944) *
         ae) /
            C49742 +
        2 * (C49761 / C49747 - (0 * be) / C49742);
    const double C119 =
        (C49768 / C49747 - ((C49740 * C49761 + C50616) * be) / C49742) /
            C49747 +
        ((C49740 * (C49761 / C49747 - (0 * be) / C49742) + C7915) * ae) /
            C49742;
    const double C7918 =
        C49764 / C49747 - ((C49740 * C49768 + C50887) * be) / C49742 + C49761;
    const double C7919 =
        C49768 / C49747 - ((C49740 * C49761 + C50616) * be) / C49742;
    const double C16988 =
        C49764 / C49747 + ((C49740 * C49768 + C50887) * ae) / C49742 + C49761;
    const double C16989 =
        C49768 / C49747 + ((C49740 * C49761 + C50616) * ae) / C49742;
    const double C2701 = C2378 + C2377;
    const double C2835 = C2722 + C2721;
    const double C3047 = C3039 + C3040;
    const double C14420 = C3040 + C3039;
    const double C14422 = C3035 + C3036;
    const double C14418 = C3036 + C3035;
    const double C6190 = C3377 + C3378;
    const double C14812 = C3378 + C3377;
    const double C5998 = C5430 + C5431;
    const double C6317 = C6028 + C6029;
    const double C22694 = C22684 + C22685;
    const double C48018 = C48014 + C48015;
    const double C22886 = C22884 - C22863;
    const double C600 =
        ((((0 - (C49782 * C49807) / C49783) * ce) / C49783 - (0 * de) / C49812 +
          C49792 / C49783) /
             C49791 -
         ((C49782 * C49826 + 0) * de) / C49783) /
            C49791 -
        ((C49782 * (C49826 / C49791 -
                    ((C49782 * C49827 + C50899) * de) / C49783 + C49821) +
          C50946) *
         de) /
            C49783 +
        C49827 / C49791 - ((C49782 * C49821 + C50686) * de) / C49783;
    const double C601 =
        (C49826 / C49791 - ((C49782 * C49827 + C50899) * de) / C49783 +
         C49821) /
            C49791 -
        ((C49782 *
              (C49827 / C49791 - ((C49782 * C49821 + C50686) * de) / C49783) +
          C50933) *
         de) /
            C49783 +
        2 * (C49821 / C49791 - (0 * de) / C49783);
    const double C602 =
        (C49827 / C49791 - ((C49782 * C49821 + C50686) * de) / C49783) /
            C49791 -
        ((C49782 * (C49821 / C49791 - (0 * de) / C49783) + C1276) * de) /
            C49783;
    const double C1279 =
        C49826 / C49791 - ((C49782 * C49827 + C50899) * de) / C49783 + C49821;
    const double C1280 =
        C49827 / C49791 - ((C49782 * C49821 + C50686) * de) / C49783;
    const double C24549 = C24539 - C23508;
    const double C24548 = C24538 - C23504;
    const double C40892 = C40887 - C24540;
    const double C139 = (4 * (2 * C50030 + C49870 * C50035 + C50248 * ae) +
                         C49870 * (3 * C50035 + C49870 * C50041 + C50252 * ae) +
                         (3 * C50248 + C49870 * C50252) * ae) /
                        C49742;
    const double C269 =
        (C49873 * (3 * C50035 + C49870 * C50041 + C50252 * ae)) / C49742;
    const double C388 =
        (C50085 * (3 * C50035 + C49870 * C50041 + C50252 * ae)) / C49742;
    const double C517 =
        (2 * C50030 + C49870 * C50035 + C50248 * ae + C50041 * C50094) / C49742;
    const double C729 = (C50085 * C49873 * C50041) / C49742;
    const double C859 =
        (2 * C50030 + C49870 * C50035 + C50248 * ae + C50041 * C50170) / C49742;
    const double C6833 = C6826 + C6827;
    const double C9052 = C9040 + C9041;
    const double C18122 = C18110 + C18111;
    const double C21880 = C21872 + C21873;
    const double C28703 = C28684 + C28685;
    const double C50476 = C50475 - C50463;
    const double C2711 = C2386 + C2385;
    const double C15593 = C4005 + C4006;
    const double C15590 = C4006 + C4005;
    const double C22056 = C21878 * C121;
    const double C31404 = C31252 * C121;
    const double C6001 = C5436 + C5437;
    const double C22086 = C22074 * C121;
    const double C39324 = C39322 * C121;
    const double C50060 = C49870 * C50059;
    const double C608 =
        (2 * C49873 * C50041 + C49873 * (C50041 + C50059 * C50094)) / C49742;
    const double C734 = (C50085 * (C50041 + C50059 * C50094)) / C49742;
    const double C973 = (C49873 * C50041 + C49873 * C50059 * C50170) / C49742;
    const double C1063 =
        (2 * C50085 * C50041 + C50085 * (C50041 + C50059 * C50170)) / C49742;
    const double C22085 = C22073 * C50670;
    const double C2702 = C2380 + C2379;
    const double C14423 = C3037 + C3038;
    const double C14419 = C3038 + C3037;
    const double C22046 = C20963 * C50670;
    const double C23515 = C20963 * C1169;
    const double C23513 = C20963 * C50686;
    const double C23871 = C20963 * C50899;
    const double C23869 = C20963 * C50686;
    const double C5999 = C5432 + C5433;
    const double C22080 = C22068 * C50670;
    const double C23519 = C22068 * C1169;
    const double C23875 = C22068 * C50899;
    const double C2362 = C50616 * C273;
    const double C8101 = C50944 * C273;
    const double C8091 = C7915 * C273;
    const double C17171 = C16984 * C273;
    const double C17161 = C16985 * C273;
    const double C24843 = C50616 * C273;
    const double C5417 = C50616 * C399;
    const double C11057 = C50944 * C399;
    const double C11037 = C7915 * C399;
    const double C27943 = C50616 * C399;
    const double C34111 = C16984 * C399;
    const double C34091 = C16985 * C399;
    const double C2372 = C2171 * C526;
    const double C2356 = C50616 * C526;
    const double C8435 = C50944 * C526;
    const double C8425 = C7915 * C526;
    const double C17505 = C16984 * C526;
    const double C17495 = C16985 * C526;
    const double C19903 = C50611 * C526;
    const double C24853 = C50887 * C526;
    const double C24837 = C50616 * C526;
    const double C3994 = C50616 * C744;
    const double C8723 = C7915 * C744;
    const double C9651 = C50944 * C744;
    const double C13701 = C2171 * C744;
    const double C17793 = C16985 * C744;
    const double C18721 = C16984 * C744;
    const double C21871 = C50611 * C744;
    const double C26399 = C50616 * C744;
    const double C27721 = C50887 * C744;
    const double C5423 = C2171 * C868;
    const double C5395 = C50616 * C868;
    const double C11627 = C7915 * C868;
    const double C11623 = C50944 * C868;
    const double C22061 = C50611 * C868;
    const double C28681 = C50616 * C868;
    const double C34681 = C16985 * C868;
    const double C34677 = C16984 * C868;
    const double C44785 = C50887 * C868;
    const double C2842 = C50616 * C2698;
    const double C20129 = C50611 * C2698;
    const double C25303 = C50616 * C2698;
    const double C2836 = C2724 + C2723;
    const double C3048 = C3041 + C3042;
    const double C14421 = C3042 + C3041;
    const double C23517 = C20965 * C50686;
    const double C23873 = C20965 * C50686;
    const double C31402 = C20965 * C50670;
    const double C32697 = C20965 * C1169;
    const double C33041 = C20965 * C50899;
    const double C6191 = C3379 + C3380;
    const double C14813 = C3380 + C3379;
    const double C22040 = C21877 * C50670;
    const double C23523 = C21877 * C1169;
    const double C23521 = C21877 * C50686;
    const double C23879 = C21877 * C50899;
    const double C23877 = C21877 * C50686;
    const double C6316 = C6026 + C6027;
    const double C22697 = C22689 * C50670;
    const double C40221 = C22689 * C1169;
    const double C40453 = C22689 * C50899;
    const double C20207 = C50611 * C2833;
    const double C3034 = C2171 * C3007;
    const double C20323 = C50611 * C3007;
    const double C25479 = C50887 * C3007;
    const double C20327 = C50611 * C3009;
    const double C3376 = C2171 * C3203;
    const double C20543 = C50611 * C3203;
    const double C25801 = C50887 * C3203;
    const double C20547 = C50611 * C3359;
    const double C22515 = C50611 * C3495;
    const double C22678 = C22517 * C50670;
    const double C22873 = C22517 * C50899;
    const double C22871 = C22517 * C50686;
    const double C24545 = C22517 * C1169;
    const double C24543 = C22517 * C50686;
    const double C39591 = C22517 * C502;
    const double C40785 = C22517 * C50933;
    const double C23000 = C22883 * C50670;
    const double C39809 = C22883 * C50686;
    const double C40891 = C22883 * C50686;
    const double C39893 = C39891 * C50670;
    const double C49981 = C49958 + C49980;
    const double C50117 = C50112 - C50115;
    const double C2718 = C50616 * C617;
    const double C8555 = C7915 * C617;
    const double C17625 = C16985 * C617;
    const double C19907 = C50611 * C617;
    const double C25187 = C50616 * C617;
    const double C4002 = C50616 * C747;
    const double C8731 = C7915 * C747;
    const double C17801 = C16985 * C747;
    const double C26407 = C50616 * C747;
    const double C31251 = C50611 * C747;
    const double C6831 = C50616 * C982;
    const double C9047 = C7915 * C982;
    const double C18117 = C16985 * C982;
    const double C21875 = C50611 * C982;
    const double C28689 = C50616 * C982;
    const double C6009 = C50616 * C1068;
    const double C11905 = C7915 * C1068;
    const double C34959 = C16985 * C1068;
    const double C39321 = C50611 * C1068;
    const double C45339 = C50616 * C1068;
    const double C50133 = C50130 + C50131;
    const double C6199 = C50616 * C3496;
    const double C22677 = C50611 * C3496;
    const double C28913 = C50616 * C3496;
    const double C39705 = C39703 * C50670;
    const double C50214 = C50199 + C50213;
    const double C24875 = C24848 + C24849;
    const double C24873 = C24844 + C24845;
    const double C24871 = C24840 + C24841;
    const double C24868 = C24834 + C24835;
    const double C24866 = C24830 + C24831;
    const double C24864 = C24826 + C24827;
    const double C24862 = C24822 + C24823;
    const double C24861 = C24820 + C24821;
    const double C24859 = C24816 + C24817;
    const double C24857 = C24812 + C24813;
    const double C24855 = C24808 + C24809;
    const double C25197 = C25188 + C25189;
    const double C25195 = C25184 + C25185;
    const double C25192 = C25176 + C25177;
    const double C25190 = C25172 + C25173;
    const double C25309 = C25304 + C25305;
    const double C25307 = C25300 + C25301;
    const double C25489 = C25474 + C25475;
    const double C25487 = C25470 + C25471;
    const double C25485 = C25466 + C25467;
    const double C25482 = C25460 + C25461;
    const double C25480 = C25456 + C25457;
    const double C25807 = C25796 + C25797;
    const double C25805 = C25792 + C25793;
    const double C25803 = C25788 + C25789;
    const double C26417 = C26408 + C26409;
    const double C26415 = C26404 + C26405;
    const double C26413 = C26400 + C26401;
    const double C26411 = C26396 + C26397;
    const double C27723 = C27716 + C27717;
    const double C27954 = C27940 + C27941;
    const double C27952 = C27936 + C27937;
    const double C27951 = C27934 + C27935;
    const double C27949 = C27930 + C27931;
    const double C27946 = C27924 + C27925;
    const double C27944 = C27920 + C27921;
    const double C28709 = C28696 + C28697;
    const double C28707 = C28692 + C28693;
    const double C28704 = C28686 + C28687;
    const double C28702 = C28682 + C28683;
    const double C28700 = C28678 + C28679;
    const double C28698 = C28674 + C28675;
    const double C28919 = C28914 + C28915;
    const double C28917 = C28910 + C28911;
    const double C29060 = C29054 + C29055;
    const double C29058 = C29050 + C29051;
    const double C44788 = C44780 + C44781;
    const double C45346 = C45336 + C45337;
    const double C45344 = C45332 + C45333;
    const double C45618 = C45610 + C45611;
    const double C45616 = C45606 + C45607;
    const double C8102 = C7918 * C266;
    const double C8096 = C7918 * C256;
    const double C8086 = C7918 * C267;
    const double C8080 = C7918 * C257;
    const double C8078 = C7918 * C268;
    const double C8072 = C7918 * C258;
    const double C8436 = C7918 * C519;
    const double C8430 = C7918 * C510;
    const double C8420 = C7918 * C518;
    const double C8414 = C7918 * C509;
    const double C8558 = C7918 * C615;
    const double C8552 = C7918 * C607;
    const double C8734 = C7918 * C741;
    const double C8728 = C7918 * C725;
    const double C8718 = C7918 * C730;
    const double C8712 = C7918 * C718;
    const double C9050 = C7918 * C980;
    const double C9044 = C7918 * C972;
    const double C9652 = C7918 * C731;
    const double C9646 = C7918 * C719;
    const double C11054 = C7918 * C390;
    const double C11048 = C7918 * C380;
    const double C11046 = C7918 * C379;
    const double C11040 = C7918 * C389;
    const double C11030 = C7918 * C393;
    const double C11024 = C7918 * C383;
    const double C11636 = C7918 * C851;
    const double C11630 = C7918 * C860;
    const double C11620 = C7918 * C861;
    const double C11614 = C7918 * C852;
    const double C11900 = C7918 * C1062;
    const double C11894 = C7918 * C1058;
    const double C8100 = C7919 * C265;
    const double C8094 = C7919 * C255;
    const double C8088 = C7919 * C266;
    const double C8082 = C7919 * C256;
    const double C8076 = C7919 * C267;
    const double C8070 = C7919 * C257;
    const double C8434 = C7919 * C520;
    const double C8428 = C7919 * C511;
    const double C8422 = C7919 * C519;
    const double C8416 = C7919 * C510;
    const double C8556 = C7919 * C614;
    const double C8550 = C7919 * C606;
    const double C8732 = C7919 * C740;
    const double C8726 = C7919 * C724;
    const double C8720 = C7919 * C731;
    const double C8714 = C7919 * C719;
    const double C9048 = C7919 * C979;
    const double C9042 = C7919 * C971;
    const double C9650 = C7919 * C732;
    const double C9644 = C7919 * C720;
    const double C11056 = C7919 * C391;
    const double C11050 = C7919 * C381;
    const double C11044 = C7919 * C380;
    const double C11038 = C7919 * C390;
    const double C11032 = C7919 * C389;
    const double C11026 = C7919 * C379;
    const double C11634 = C7919 * C852;
    const double C11628 = C7919 * C861;
    const double C11622 = C7919 * C862;
    const double C11616 = C7919 * C853;
    const double C11902 = C7919 * C1061;
    const double C11896 = C7919 * C1057;
    const double C17172 = C16988 * C266;
    const double C17166 = C16988 * C256;
    const double C17156 = C16988 * C267;
    const double C17150 = C16988 * C257;
    const double C17148 = C16988 * C268;
    const double C17142 = C16988 * C258;
    const double C17506 = C16988 * C519;
    const double C17500 = C16988 * C510;
    const double C17490 = C16988 * C518;
    const double C17484 = C16988 * C509;
    const double C17628 = C16988 * C615;
    const double C17622 = C16988 * C607;
    const double C17804 = C16988 * C741;
    const double C17798 = C16988 * C725;
    const double C17788 = C16988 * C730;
    const double C17782 = C16988 * C718;
    const double C18120 = C16988 * C980;
    const double C18114 = C16988 * C972;
    const double C18722 = C16988 * C731;
    const double C18716 = C16988 * C719;
    const double C34108 = C16988 * C390;
    const double C34102 = C16988 * C380;
    const double C34100 = C16988 * C379;
    const double C34094 = C16988 * C389;
    const double C34084 = C16988 * C393;
    const double C34078 = C16988 * C383;
    const double C34690 = C16988 * C851;
    const double C34684 = C16988 * C860;
    const double C34674 = C16988 * C861;
    const double C34668 = C16988 * C852;
    const double C34954 = C16988 * C1062;
    const double C34948 = C16988 * C1058;
    const double C17170 = C16989 * C265;
    const double C17164 = C16989 * C255;
    const double C17158 = C16989 * C266;
    const double C17152 = C16989 * C256;
    const double C17146 = C16989 * C267;
    const double C17140 = C16989 * C257;
    const double C17504 = C16989 * C520;
    const double C17498 = C16989 * C511;
    const double C17492 = C16989 * C519;
    const double C17486 = C16989 * C510;
    const double C17626 = C16989 * C614;
    const double C17620 = C16989 * C606;
    const double C17802 = C16989 * C740;
    const double C17796 = C16989 * C724;
    const double C17790 = C16989 * C731;
    const double C17784 = C16989 * C719;
    const double C18118 = C16989 * C979;
    const double C18112 = C16989 * C971;
    const double C18720 = C16989 * C732;
    const double C18714 = C16989 * C720;
    const double C34110 = C16989 * C391;
    const double C34104 = C16989 * C381;
    const double C34098 = C16989 * C380;
    const double C34092 = C16989 * C390;
    const double C34086 = C16989 * C389;
    const double C34080 = C16989 * C379;
    const double C34688 = C16989 * C852;
    const double C34682 = C16989 * C861;
    const double C34676 = C16989 * C862;
    const double C34670 = C16989 * C853;
    const double C34956 = C16989 * C1061;
    const double C34950 = C16989 * C1057;
    const double C6201 = C6190 * C254;
    const double C7810 = C6190 * C1175;
    const double C6018 = C5998 * C121;
    const double C6188 = C5998 * C253;
    const double C7808 = C5998 * C1174;
    const double C6327 = C6317 * C121;
    const double C22888 = C22886 * C16986;
    const double C39804 = C22886 * C50759;
    const double C48166 = C22886 * C50915;
    const double C24386 = C20548 * C1279;
    const double C24380 = C22066 * C1279;
    const double C24374 = C20328 * C1279;
    const double C24368 = C22064 * C1279;
    const double C33530 = C20330 * C1279;
    const double C40782 = C22693 * C1279;
    const double C24388 = C20550 * C1280;
    const double C24382 = C20548 * C1280;
    const double C24376 = C20330 * C1280;
    const double C24370 = C20328 * C1280;
    const double C33532 = C20332 * C1280;
    const double C40784 = C22516 * C1280;
    const double C24550 = C24548 - C23505;
    const double C8093 = C7915 * C269;
    const double C17163 = C16985 * C269;
    const double C11053 = C7915 * C388;
    const double C34107 = C16985 * C388;
    const double C2366 = C50616 * C517;
    const double C8427 = C7915 * C517;
    const double C17497 = C16985 * C517;
    const double C24847 = C50616 * C517;
    const double C9643 = C7915 * C729;
    const double C13695 = C50616 * C729;
    const double C18713 = C16985 * C729;
    const double C27715 = C50616 * C729;
    const double C5421 = C50616 * C859;
    const double C11619 = C7915 * C859;
    const double C34673 = C16985 * C859;
    const double C44783 = C50616 * C859;
    const double C22062 = C21880 * C121;
    const double C20201 =
        5 * ((-3 * C50398) / C49783 + C49873 * C50476 -
             (C50397 * ce) / C49783) +
        C49873 *
            (4 * C50476 +
             C49873 * ((-3 * C50470) / C49783 +
                       C49873 * ((-2 * C50461) / C49783 -
                                 (C49873 *
                                  (C49873 * (C49873 * C49962 + C50005 * ce) +
                                   C49926 + C49873 * C50005 * ce)) /
                                     C49783 -
                                 (C50464 * ce) / C49783) -
                       (C50469 * ce) / C49783) -
             (C50473 * ce) / C49783) -
        ((4 * C50397 + C49873 * C50473) * ce) / C49783;
    const double C20309 =
        C50085 *
        (4 * C50476 +
         C49873 *
             ((-3 * C50470) / C49783 +
              C49873 * ((-2 * C50461) / C49783 -
                        (C49873 * (C49873 * (C49873 * C49962 + C50005 * ce) +
                                   C49926 + C49873 * C50005 * ce)) /
                            C49783 -
                        (C50464 * ce) / C49783) -
              (C50469 * ce) / C49783) -
         (C50473 * ce) / C49783);
    const double C20533 =
        (-3 * C50398) / C49783 + C49873 * C50476 - (C50397 * ce) / C49783 +
        ((-3 * C50470) / C49783 +
         C49873 * ((-2 * C50461) / C49783 -
                   (C49873 * (C49873 * (C49873 * C49962 + C50005 * ce) +
                              C49926 + C49873 * C50005 * ce)) /
                       C49783 -
                   (C50464 * ce) / C49783) -
         (C50469 * ce) / C49783) *
            C50170;
    const double C20620 =
        2 * C50085 * C50476 +
        C50085 *
            (C50476 + ((-2 * C50461) / C49783 -
                       (C49873 * (C49873 * (C49873 * C49962 + C50005 * ce) +
                                  C49926 + C49873 * C50005 * ce)) /
                           C49783 -
                       (C50464 * ce) / C49783) *
                          C50170);
    const double C6021 = C6001 * C121;
    const double C50061 = C50043 + C50060;
    const double C6019 = C5999 * C50670;
    const double C6189 = C5999 * C50899;
    const double C7809 = C5999 * C1169;
    const double C22669 = C22080 + C22081;
    const double C2391 = C2361 + C2362;
    const double C8115 = C8090 + C8091;
    const double C17185 = C17160 + C17161;
    const double C24872 = C24842 + C24843;
    const double C5445 = C5416 + C5417;
    const double C11066 = C11036 + C11037;
    const double C27955 = C27942 + C27943;
    const double C34120 = C34090 + C34091;
    const double C2396 = C2371 + C2372;
    const double C2388 = C2355 + C2356;
    const double C8443 = C8424 + C8425;
    const double C17513 = C17494 + C17495;
    const double C19923 = C19902 + C19903;
    const double C24877 = C24852 + C24853;
    const double C24869 = C24836 + C24837;
    const double C4007 = C3993 + C3994;
    const double C8741 = C8722 + C8723;
    const double C13705 = C13700 + C13701;
    const double C17811 = C17792 + C17793;
    const double C21879 = C21870 + C21871;
    const double C26412 = C26398 + C26399;
    const double C27725 = C27720 + C27721;
    const double C5448 = C5422 + C5423;
    const double C5434 = C5394 + C5395;
    const double C11644 = C11626 + C11627;
    const double C22075 = C22060 + C22061;
    const double C28701 = C28680 + C28681;
    const double C34698 = C34680 + C34681;
    const double C44790 = C44784 + C44785;
    const double C2847 = C2841 + C2842;
    const double C20133 = C20128 + C20129;
    const double C25308 = C25302 + C25303;
    const double C6202 = C6191 * C50686;
    const double C7811 = C6191 * C50686;
    const double C22668 = C22040 + C22041;
    const double C6326 = C6316 * C50670;
    const double C39694 = C22697 + C22696;
    const double C20209 = C20206 + C20207;
    const double C3046 = C3033 + C3034;
    const double C20333 = C20322 + C20323;
    const double C25491 = C25478 + C25479;
    const double C20335 = C20326 + C20327;
    const double C3384 = C3375 + C3376;
    const double C20551 = C20542 + C20543;
    const double C25809 = C25800 + C25801;
    const double C20553 = C20546 + C20547;
    const double C22519 = C22514 + C22515;
    const double C22993 = C22678 + C22679;
    const double C39811 = C39810 - C22871;
    const double C40893 = C40892 - C24543;
    const double C149 =
        5 * (3 * C49941 + (C49939 * ae) / C49742 + C49870 * C49981) +
        ((4 * C49939 + C49870 * C49979) * ae) / C49742 +
        C49870 *
            (4 * C49981 + (C49979 * ae) / C49742 +
             C49870 *
                 (3 * C49978 + (C49975 * ae) / C49742 +
                  C49870 *
                      (2 * C49974 - (ae * C49968) / C49881 +
                       C49870 * ((-(ae * C49870 * C49962) / C49783) / C49742 -
                                 C49960 / C49881 +
                                 C49870 * ((-(C49870 * std::pow(C49875, 8) *
                                              bs[8] * C49886) /
                                            C49783) /
                                               C49742 -
                                           (ae * C49962) / C49881)))));
    const double C277 =
        C49873 * (3 * C49941 + (C49939 * ae) / C49742 + C49870 * C49981) -
        ((3 * (C49987 + C49870 * C50000 + C49994 * ae) +
          C49870 * (2 * C50000 +
                    C49870 * (C49996 +
                              C49870 * (C49870 * C49915 * C49916 * C49983 +
                                        C49995 * ae) +
                              C49870 * C49995 * ae) +
                    C49999 * ae) +
          (2 * C49994 + C49870 * C49999) * ae) *
         ce) /
            C49881;
    const double C278 =
        C49873 *
            (4 * C49981 + (C49979 * ae) / C49742 +
             C49870 *
                 (3 * C49978 + (C49975 * ae) / C49742 +
                  C49870 *
                      (2 * C49974 - (ae * C49968) / C49881 +
                       C49870 * ((-(ae * C49870 * C49962) / C49783) / C49742 -
                                 C49960 / C49881 +
                                 C49870 * ((-(C49870 * std::pow(C49875, 8) *
                                              bs[8] * C49886) /
                                            C49783) /
                                               C49742 -
                                           (ae * C49962) / C49881))))) -
        ((4 * (2 * C50000 + C49870 * C50017 + C49999 * ae) +
          C49870 *
              (3 * C50017 +
               C49870 * (2 * C50012 +
                         C49870 * (C50006 +
                                   C49870 * (C49870 * C49947 * C49948 * C49983 +
                                             C50005 * ae) +
                                   C49870 * C50005 * ae) +
                         C50011 * ae) +
               C50015 * ae) +
          (3 * C49999 + C49870 * C50015) * ae) *
         ce) /
            C49881;
    const double C400 =
        (zP - zQ) * (3 * C49941 + (C49939 * ae) / C49742 + C49870 * C49981);
    const double C402 =
        (zP - zQ) *
        (4 * C49981 + (C49979 * ae) / C49742 +
         C49870 *
             (3 * C49978 + (C49975 * ae) / C49742 +
              C49870 * (2 * C49974 - (ae * C49968) / C49881 +
                        C49870 * ((-(ae * C49870 * C49962) / C49783) / C49742 -
                                  C49960 / C49881 +
                                  C49870 * ((-(C49870 * std::pow(C49875, 8) *
                                               bs[8] * C49886) /
                                             C49783) /
                                                C49742 -
                                            (ae * C49962) / C49881)))));
    const double C527 = 2 * C49911 - (ae * C49908) / C49881 + C49870 * C49941 -
                        (C49873 * C50041 * ce) / C49881 +
                        C49873 * (C49873 * C49981 - (C50041 * ce) / C49881);
    const double C616 =
        2 * (C49873 * C49981 - (C50041 * ce) / C49881) -
        ((C50041 + C50059 * std::pow(C49873, 2)) * ce) / C49881 +
        C49873 *
            (C49981 - (C49873 * C50059 * ce) / C49881 +
             C49873 *
                 (C49873 *
                      (2 * C49974 - (ae * C49968) / C49881 +
                       C49870 * ((-(ae * C49870 * C49962) / C49783) / C49742 -
                                 C49960 / C49881 +
                                 C49870 * ((-(C49870 * std::pow(C49875, 8) *
                                              bs[8] * C49886) /
                                            C49783) /
                                               C49742 -
                                           (ae * C49962) / C49881))) -
                  (C50059 * ce) / C49881));
    const double C745 = (zP - zQ) * (C49873 * C49981 - (C50041 * ce) / C49881);
    const double C746 =
        (zP - zQ) *
        (C49981 - (C49873 * C50059 * ce) / C49881 +
         C49873 *
             (C49873 * (2 * C49974 - (ae * C49968) / C49881 +
                        C49870 * ((-(ae * C49870 * C49962) / C49783) / C49742 -
                                  C49960 / C49881 +
                                  C49870 * ((-(C49870 * std::pow(C49875, 8) *
                                               bs[8] * C49886) /
                                             C49783) /
                                                C49742 -
                                            (ae * C49962) / C49881))) -
              (C50059 * ce) / C49881));
    const double C869 = 2 * C49911 - (ae * C49908) / C49881 + C49870 * C49941 +
                        C49981 * std::pow(zP - zQ, 2);
    const double C870 =
        3 * C49941 + (C49939 * ae) / C49742 + C49870 * C49981 +
        (3 * C49978 + (C49975 * ae) / C49742 +
         C49870 *
             (2 * C49974 - (ae * C49968) / C49881 +
              C49870 *
                  ((-(ae * C49870 * C49962) / C49783) / C49742 -
                   C49960 / C49881 +
                   C49870 * ((-(C49870 * std::pow(C49875, 8) * bs[8] * C49886) /
                              C49783) /
                                 C49742 -
                             (ae * C49962) / C49881)))) *
            std::pow(zP - zQ, 2);
    const double C981 =
        C49873 * C49981 - (C50041 * ce) / C49881 +
        (C49873 *
             (2 * C49974 - (ae * C49968) / C49881 +
              C49870 *
                  ((-(ae * C49870 * C49962) / C49783) / C49742 -
                   C49960 / C49881 +
                   C49870 * ((-(C49870 * std::pow(C49875, 8) * bs[8] * C49886) /
                              C49783) /
                                 C49742 -
                             (ae * C49962) / C49881))) -
         (C50059 * ce) / C49881) *
            std::pow(zP - zQ, 2);
    const double C1067 =
        2 * C50085 * C49981 +
        C50085 *
            (C49981 +
             (2 * C49974 - (ae * C49968) / C49881 +
              C49870 *
                  ((-(ae * C49870 * C49962) / C49783) / C49742 -
                   C49960 / C49881 +
                   C49870 * ((-(C49870 * std::pow(C49875, 8) * bs[8] * C49886) /
                              C49783) /
                                 C49742 -
                             (ae * C49962) / C49881))) *
                 std::pow(C50085, 2));
    const double C2699 =
        3 * (C49941 - (C50111 * ce) / C49881 + C49873 * C50117) -
        ((2 * C50111 + C49873 * C50116) * ce) / C49881 +
        C49873 *
            (2 * C50117 - (C50116 * ce) / C49881 +
             C49873 *
                 (C49978 - (C49873 * C50056 * ce) / C49881 +
                  C49873 *
                      (C49873 * ((-(ae * C49870 * C49962) / C49783) / C49742 -
                                 C49960 / C49881 +
                                 C49870 * ((-(C49870 * std::pow(C49875, 8) *
                                              bs[8] * C49886) /
                                            C49783) /
                                               C49742 -
                                           (ae * C49962) / C49881)) -
                       (C50056 * ce) / C49881)));
    const double C3205 =
        C49941 - (C50111 * ce) / C49881 + C49873 * C50117 +
        (C49978 - (C49873 * C50056 * ce) / C49881 +
         C49873 *
             (C49873 *
                  ((-(ae * C49870 * C49962) / C49783) / C49742 -
                   C49960 / C49881 +
                   C49870 * ((-(C49870 * std::pow(C49875, 8) * bs[8] * C49886) /
                              C49783) /
                                 C49742 -
                             (ae * C49962) / C49881)) -
              (C50056 * ce) / C49881)) *
            std::pow(C50085, 2);
    const double C3987 =
        C50085 *
        (2 * C50117 - (C50116 * ce) / C49881 +
         C49873 *
             (C49978 - (C49873 * C50056 * ce) / C49881 +
              C49873 * (C49873 * ((-(ae * C49870 * C49962) / C49783) / C49742 -
                                  C49960 / C49881 +
                                  C49870 * ((-(C49870 * std::pow(C49875, 8) *
                                               bs[8] * C49886) /
                                             C49783) /
                                                C49742 -
                                            (ae * C49962) / C49881)) -
                        (C50056 * ce) / C49881)));
    const double C6822 =
        2 * C50085 * C50117 +
        C50085 *
            (C50117 +
             (C49873 *
                  ((-(ae * C49870 * C49962) / C49783) / C49742 -
                   C49960 / C49881 +
                   C49870 * ((-(C49870 * std::pow(C49875, 8) * bs[8] * C49886) /
                              C49783) /
                                 C49742 -
                             (ae * C49962) / C49881)) -
              (C50056 * ce) / C49881) *
                 C50170);
    const double C2727 = C2717 + C2718;
    const double C8563 = C8554 + C8555;
    const double C17633 = C17624 + C17625;
    const double C19925 = C19906 + C19907;
    const double C25196 = C25186 + C25187;
    const double C4011 = C4001 + C4002;
    const double C8745 = C8730 + C8731;
    const double C17815 = C17800 + C17801;
    const double C26416 = C26406 + C26407;
    const double C31253 = C31250 + C31251;
    const double C6835 = C6830 + C6831;
    const double C9055 = C9046 + C9047;
    const double C18125 = C18116 + C18117;
    const double C21881 = C21874 + C21875;
    const double C28705 = C28688 + C28689;
    const double C6025 = C6008 + C6009;
    const double C11911 = C11904 + C11905;
    const double C34965 = C34958 + C34959;
    const double C39323 = C39320 + C39321;
    const double C45347 = C45338 + C45339;
    const double C2832 =
        4 * (2 * C50109 - (C50108 * ce) / C49881 + C49873 * C50133) -
        ((3 * C50108 + C49873 * C50132) * ce) / C49881 +
        C49873 *
            (3 * C50133 - (C50132 * ce) / C49881 +
             C49873 *
                 (2 * C50128 - (C50126 * ce) / C49881 +
                  C49873 *
                      (C49974 - (C49873 * C50053 * ce) / C49881 +
                       C49873 * (C49873 * ((-(C49870 * std::pow(C49875, 8) *
                                              bs[8] * C49886) /
                                            C49783) /
                                               C49742 -
                                           (ae * C49962) / C49881) -
                                 (C50053 * ce) / C49881))));
    const double C3006 =
        C50085 * (2 * C50109 - (C50108 * ce) / C49881 + C49873 * C50133);
    const double C3008 =
        C50085 *
        (3 * C50133 - (C50132 * ce) / C49881 +
         C49873 *
             (2 * C50128 - (C50126 * ce) / C49881 +
              C49873 * (C49974 - (C49873 * C50053 * ce) / C49881 +
                        C49873 * (C49873 * ((-(C49870 * std::pow(C49875, 8) *
                                               bs[8] * C49886) /
                                             C49783) /
                                                C49742 -
                                            (ae * C49962) / C49881) -
                                  (C50053 * ce) / C49881))));
    const double C3204 = C49911 - (C50103 * ce) / C49881 + C49873 * C50109 +
                         C50133 * std::pow(C50085, 2);
    const double C3358 =
        2 * C50109 - (C50108 * ce) / C49881 + C49873 * C50133 +
        (2 * C50128 - (C50126 * ce) / C49881 +
         C49873 *
             (C49974 - (C49873 * C50053 * ce) / C49881 +
              C49873 *
                  (C49873 * ((-(C49870 * std::pow(C49875, 8) * bs[8] * C49886) /
                              C49783) /
                                 C49742 -
                             (ae * C49962) / C49881) -
                   (C50053 * ce) / C49881))) *
            std::pow(C50085, 2);
    const double C3494 =
        2 * C50085 * C50133 +
        C50085 *
            (C50133 +
             (C49974 - (C49873 * C50053 * ce) / C49881 +
              C49873 *
                  (C49873 * ((-(C49870 * std::pow(C49875, 8) * bs[8] * C49886) /
                              C49783) /
                                 C49742 -
                             (ae * C49962) / C49881) -
                   (C50053 * ce) / C49881)) *
                 std::pow(C50085, 2));
    const double C6206 = C6198 + C6199;
    const double C22691 = C22676 + C22677;
    const double C28918 = C28912 + C28913;
    const double C20202 =
        5 * (3 * C50154 - (C50149 * ce) / C49881 + C49873 * C50214) -
        ((4 * C50149 + C49873 * C50211) * ce) / C49881 +
        C49873 *
            (4 * C50214 - (C50211 * ce) / C49881 +
             C49873 *
                 (3 * C50212 - (C50205 * ce) / C49881 +
                  C49873 *
                      (2 * C50207 - (C50198 * ce) / C49881 +
                       C49873 * ((-(C49873 * C50050 * ce) / C49783) / C49742 -
                                 C49960 / C49881 +
                                 C49873 * ((-(C49873 * std::pow(C49875, 8) *
                                              bs[8] * C49886) /
                                            C49783) /
                                               C49742 -
                                           (C50050 * ce) / C49881)))));
    const double C20310 =
        C50085 *
        (4 * C50214 - (C50211 * ce) / C49881 +
         C49873 *
             (3 * C50212 - (C50205 * ce) / C49881 +
              C49873 * (2 * C50207 - (C50198 * ce) / C49881 +
                        C49873 * ((-(C49873 * C50050 * ce) / C49783) / C49742 -
                                  C49960 / C49881 +
                                  C49873 * ((-(C49873 * std::pow(C49875, 8) *
                                               bs[8] * C49886) /
                                             C49783) /
                                                C49742 -
                                            (C50050 * ce) / C49881)))));
    const double C20534 =
        3 * C50154 - (C50149 * ce) / C49881 + C49873 * C50214 +
        (3 * C50212 - (C50205 * ce) / C49881 +
         C49873 *
             (2 * C50207 - (C50198 * ce) / C49881 +
              C49873 *
                  ((-(C49873 * C50050 * ce) / C49783) / C49742 -
                   C49960 / C49881 +
                   C49873 * ((-(C49873 * std::pow(C49875, 8) * bs[8] * C49886) /
                              C49783) /
                                 C49742 -
                             (C50050 * ce) / C49881)))) *
            C50170;
    const double C20622 =
        2 * C50085 * C50214 +
        C50085 *
            (C50214 +
             (2 * C50207 - (C50198 * ce) / C49881 +
              C49873 *
                  ((-(C49873 * C50050 * ce) / C49783) / C49742 -
                   C49960 / C49881 +
                   C49873 * ((-(C49873 * std::pow(C49875, 8) * bs[8] * C49886) /
                              C49783) /
                                 C49742 -
                             (C50050 * ce) / C49881))) *
                 C50170);
    const double C25180 = C24867 + C24866;
    const double C25171 = C24861 + C24860;
    const double C25170 = C24859 + C24858;
    const double C25297 = C25193 + C25192;
    const double C25296 = C25191 + C25190;
    const double C25493 = C25486 + C25487;
    const double C28477 = C25487 + C25486;
    const double C25492 = C25484 + C25485;
    const double C28476 = C25485 + C25484;
    const double C28479 = C25482 + C25483;
    const double C28475 = C25483 + C25482;
    const double C28478 = C25480 + C25481;
    const double C28474 = C25481 + C25480;
    const double C28906 = C25804 + C25805;
    const double C28905 = C25805 + C25804;
    const double C28907 = C25802 + C25803;
    const double C28904 = C25803 + C25802;
    const double C29711 = C26410 + C26411;
    const double C29708 = C26411 + C26410;
    const double C45328 = C28709 + C28708;
    const double C45329 = C28707 + C28706;
    const double C45331 = C28699 + C28698;
    const double C45604 = C29061 + C29060;
    const double C45605 = C29059 + C29058;
    const double C8121 = C8102 + C8103;
    const double C8118 = C8096 + C8097;
    const double C8113 = C8086 + C8087;
    const double C8110 = C8080 + C8081;
    const double C8109 = C8078 + C8079;
    const double C8106 = C8072 + C8073;
    const double C8449 = C8436 + C8437;
    const double C8446 = C8430 + C8431;
    const double C8441 = C8420 + C8421;
    const double C8438 = C8414 + C8415;
    const double C8565 = C8558 + C8559;
    const double C8562 = C8552 + C8553;
    const double C8747 = C8734 + C8735;
    const double C8744 = C8728 + C8729;
    const double C8739 = C8718 + C8719;
    const double C8736 = C8712 + C8713;
    const double C9057 = C9050 + C9051;
    const double C9054 = C9044 + C9045;
    const double C9659 = C9652 + C9653;
    const double C9656 = C9646 + C9647;
    const double C11075 = C11054 + C11055;
    const double C11072 = C11048 + C11049;
    const double C11071 = C11046 + C11047;
    const double C11068 = C11040 + C11041;
    const double C11063 = C11030 + C11031;
    const double C11060 = C11024 + C11025;
    const double C11649 = C11636 + C11637;
    const double C11646 = C11630 + C11631;
    const double C11641 = C11620 + C11621;
    const double C11638 = C11614 + C11615;
    const double C11909 = C11900 + C11901;
    const double C11906 = C11894 + C11895;
    const double C8120 = C8100 + C8101;
    const double C8117 = C8094 + C8095;
    const double C8114 = C8088 + C8089;
    const double C8111 = C8082 + C8083;
    const double C8108 = C8076 + C8077;
    const double C8105 = C8070 + C8071;
    const double C8448 = C8434 + C8435;
    const double C8445 = C8428 + C8429;
    const double C8442 = C8422 + C8423;
    const double C8439 = C8416 + C8417;
    const double C8564 = C8556 + C8557;
    const double C8561 = C8550 + C8551;
    const double C8746 = C8732 + C8733;
    const double C8743 = C8726 + C8727;
    const double C8740 = C8720 + C8721;
    const double C8737 = C8714 + C8715;
    const double C9056 = C9048 + C9049;
    const double C9053 = C9042 + C9043;
    const double C9658 = C9650 + C9651;
    const double C9655 = C9644 + C9645;
    const double C11076 = C11056 + C11057;
    const double C11073 = C11050 + C11051;
    const double C11070 = C11044 + C11045;
    const double C11067 = C11038 + C11039;
    const double C11064 = C11032 + C11033;
    const double C11061 = C11026 + C11027;
    const double C11648 = C11634 + C11635;
    const double C11645 = C11628 + C11629;
    const double C11642 = C11622 + C11623;
    const double C11639 = C11616 + C11617;
    const double C11910 = C11902 + C11903;
    const double C11907 = C11896 + C11897;
    const double C17191 = C17172 + C17173;
    const double C17188 = C17166 + C17167;
    const double C17183 = C17156 + C17157;
    const double C17180 = C17150 + C17151;
    const double C17179 = C17148 + C17149;
    const double C17176 = C17142 + C17143;
    const double C17519 = C17506 + C17507;
    const double C17516 = C17500 + C17501;
    const double C17511 = C17490 + C17491;
    const double C17508 = C17484 + C17485;
    const double C17635 = C17628 + C17629;
    const double C17632 = C17622 + C17623;
    const double C17817 = C17804 + C17805;
    const double C17814 = C17798 + C17799;
    const double C17809 = C17788 + C17789;
    const double C17806 = C17782 + C17783;
    const double C18127 = C18120 + C18121;
    const double C18124 = C18114 + C18115;
    const double C18729 = C18722 + C18723;
    const double C18726 = C18716 + C18717;
    const double C34129 = C34108 + C34109;
    const double C34126 = C34102 + C34103;
    const double C34125 = C34100 + C34101;
    const double C34122 = C34094 + C34095;
    const double C34117 = C34084 + C34085;
    const double C34114 = C34078 + C34079;
    const double C34703 = C34690 + C34691;
    const double C34700 = C34684 + C34685;
    const double C34695 = C34674 + C34675;
    const double C34692 = C34668 + C34669;
    const double C34963 = C34954 + C34955;
    const double C34960 = C34948 + C34949;
    const double C17190 = C17170 + C17171;
    const double C17187 = C17164 + C17165;
    const double C17184 = C17158 + C17159;
    const double C17181 = C17152 + C17153;
    const double C17178 = C17146 + C17147;
    const double C17175 = C17140 + C17141;
    const double C17518 = C17504 + C17505;
    const double C17515 = C17498 + C17499;
    const double C17512 = C17492 + C17493;
    const double C17509 = C17486 + C17487;
    const double C17634 = C17626 + C17627;
    const double C17631 = C17620 + C17621;
    const double C17816 = C17802 + C17803;
    const double C17813 = C17796 + C17797;
    const double C17810 = C17790 + C17791;
    const double C17807 = C17784 + C17785;
    const double C18126 = C18118 + C18119;
    const double C18123 = C18112 + C18113;
    const double C18728 = C18720 + C18721;
    const double C18725 = C18714 + C18715;
    const double C34130 = C34110 + C34111;
    const double C34127 = C34104 + C34105;
    const double C34124 = C34098 + C34099;
    const double C34121 = C34092 + C34093;
    const double C34118 = C34086 + C34087;
    const double C34115 = C34080 + C34081;
    const double C34702 = C34688 + C34689;
    const double C34699 = C34682 + C34683;
    const double C34696 = C34676 + C34677;
    const double C34693 = C34670 + C34671;
    const double C34964 = C34956 + C34957;
    const double C34961 = C34950 + C34951;
    const double C24552 = C24550 * C16986;
    const double C40886 = C24550 * C50759;
    const double C49728 = C24550 * C50915;
    const double C8116 = C8092 + C8093;
    const double C17186 = C17162 + C17163;
    const double C11074 = C11052 + C11053;
    const double C34128 = C34106 + C34107;
    const double C2393 = C2365 + C2366;
    const double C8444 = C8426 + C8427;
    const double C17514 = C17496 + C17497;
    const double C24874 = C24846 + C24847;
    const double C9654 = C9642 + C9643;
    const double C13702 = C13694 + C13695;
    const double C18724 = C18712 + C18713;
    const double C27722 = C27714 + C27715;
    const double C5447 = C5420 + C5421;
    const double C11640 = C11618 + C11619;
    const double C34694 = C34672 + C34673;
    const double C44789 = C44782 + C44783;
    const double C50062 = C50061 + C50049;
    const double C6030 = C6018 + C6019;
    const double C6200 = C6188 + C6189;
    const double C7812 = C7808 + C7809;
    const double C22687 = C22669 * C16986;
    const double C39695 = C22669 * C50759;
    const double C48017 = C22669 * C50915;
    const double C2712 = C2388 + C2387;
    const double C25181 = C24869 + C24868;
    const double C15592 = C4007 + C4008;
    const double C15591 = C4008 + C4007;
    const double C22057 = C21879 * C50670;
    const double C29710 = C26412 + C26413;
    const double C29709 = C26413 + C26412;
    const double C6000 = C5434 + C5435;
    const double C22087 = C22075 * C50670;
    const double C45330 = C28701 + C28700;
    const double C22686 = C22668 * C50809;
    const double C48016 = C22668 * C50809;
    const double C6332 = C6326 + C6327;
    const double C39701 = C39694 * C50759;
    const double C22495 = C20333 * C503;
    const double C24379 = C20333 * C1276;
    const double C31799 = C20333 * C502;
    const double C32101 = C20333 * C50686;
    const double C32695 = C20333 * C50686;
    const double C33533 = C20333 * C50933;
    const double C31801 = C20335 * C503;
    const double C33535 = C20335 * C1276;
    const double C22505 = C20551 * C502;
    const double C22501 = C20551 * C503;
    const double C22867 = C20551 * C50686;
    const double C23509 = C20551 * C50686;
    const double C24389 = C20551 * C50933;
    const double C24385 = C20551 * C1276;
    const double C31950 = C20551 * C50670;
    const double C32103 = C20551 * C50899;
    const double C33683 = C20551 * C1169;
    const double C22507 = C20553 * C503;
    const double C24391 = C20553 * C1276;
    const double C32105 = C20553 * C50686;
    const double C33685 = C20553 * C50686;
    const double C22875 = C22519 * C50686;
    const double C24547 = C22519 * C50686;
    const double C32205 = C22519 * C50670;
    const double C39593 = C22519 * C503;
    const double C40787 = C22519 * C1276;
    const double C23001 = C22993 * C50809;
    const double C48267 = C22993 * C50809;
    const double C39812 = C39811 * C50759;
    const double C40894 = C40893 * C50759;
    const double C8099 = C7915 * C277;
    const double C17169 = C16985 * C277;
    const double C11059 = C7915 * C400;
    const double C34113 = C16985 * C400;
    const double C2370 = C50616 * C527;
    const double C8433 = C7915 * C527;
    const double C17503 = C16985 * C527;
    const double C24851 = C50616 * C527;
    const double C9649 = C7915 * C745;
    const double C13699 = C50616 * C745;
    const double C18719 = C16985 * C745;
    const double C27719 = C50616 * C745;
    const double C5425 = C50616 * C869;
    const double C11625 = C7915 * C869;
    const double C34679 = C16985 * C869;
    const double C44787 = C50616 * C869;
    const double C31405 = C31253 * C50670;
    const double C22063 = C21881 * C50670;
    const double C39325 = C39323 * C50670;
    const double C3032 = C50616 * C3006;
    const double C20961 = C50611 * C3006;
    const double C25477 = C50616 * C3006;
    const double C3374 = C50616 * C3204;
    const double C22237 = C50611 * C3204;
    const double C25799 = C50616 * C3204;
    const double C22699 = C22691 * C50670;
    const double C40223 = C22691 * C50686;
    const double C40455 = C22691 * C50686;
    const double C45501 = C28906 * C50686;
    const double C47083 = C28906 * C50686;
    const double C45500 = C28907 * C254;
    const double C47082 = C28907 * C1175;
    const double C45340 = C45328 * C121;
    const double C45498 = C45328 * C253;
    const double C47080 = C45328 * C1174;
    const double C45341 = C45329 * C50670;
    const double C45499 = C45329 * C50899;
    const double C47081 = C45329 * C1169;
    const double C45343 = C45331 * C121;
    const double C45614 = C45604 * C50670;
    const double C45615 = C45605 * C121;
    const double C528 =
        3 * C49941 + (C49939 * ae) / C49742 + C49870 * C49981 -
        (C49873 * C50062 * ce) / C49881 +
        C49873 *
            (C49873 *
                 (3 * C49978 + (C49975 * ae) / C49742 +
                  C49870 *
                      (2 * C49974 - (ae * C49968) / C49881 +
                       C49870 * ((-(ae * C49870 * C49962) / C49783) / C49742 -
                                 C49960 / C49881 +
                                 C49870 * ((-(C49870 * std::pow(C49875, 8) *
                                              bs[8] * C49886) /
                                            C49783) /
                                               C49742 -
                                           (ae * C49962) / C49881)))) -
             (C50062 * ce) / C49881);
    const double C1415 =
        C50085 *
        (C49873 *
             (3 * C49978 + (C49975 * ae) / C49742 +
              C49870 * (2 * C49974 - (ae * C49968) / C49881 +
                        C49870 * ((-(ae * C49870 * C49962) / C49783) / C49742 -
                                  C49960 / C49881 +
                                  C49870 * ((-(C49870 * std::pow(C49875, 8) *
                                               bs[8] * C49886) /
                                             C49783) /
                                                C49742 -
                                            (ae * C49962) / C49881)))) -
         (C50062 * ce) / C49881);
    const double C142 = (5 * (3 * C50035 + C49870 * C50041 + C50252 * ae) +
                         C49870 * (4 * C50041 + C49870 * C50062 + C50258 * ae) +
                         (4 * C50252 + C49870 * C50258) * ae) /
                        C49742;
    const double C271 =
        (C49873 * (4 * C50041 + C49870 * C50062 + C50258 * ae)) / C49742;
    const double C396 =
        (C50085 * (4 * C50041 + C49870 * C50062 + C50258 * ae)) / C49742;
    const double C522 =
        (3 * C50035 + C49870 * C50041 + C50252 * ae + C50062 * C50094) / C49742;
    const double C865 =
        (3 * C50035 + C49870 * C50041 + C50252 * ae + C50062 * C50170) / C49742;
    const double C1413 = (C50085 * C49873 * C50062) / C49742;
    const double C6032 = C6030 * C50759;
    const double C6207 = C6200 - C6201;
    const double C7813 = C7812 - C7810;
    const double C6020 = C6000 * C50670;
    const double C45342 = C45330 * C50670;
    const double C22695 = C22686 + C22687;
    const double C48019 = C48016 + C48017;
    const double C6333 = C6332 * C50759;
    const double C22887 = C22885 - C22867;
    const double C24551 = C24549 - C23509;
    const double C23005 = C23001 + C23002;
    const double C48269 = C48267 + C48268;
    const double C8119 = C8098 + C8099;
    const double C17189 = C17168 + C17169;
    const double C11077 = C11058 + C11059;
    const double C34131 = C34112 + C34113;
    const double C2395 = C2369 + C2370;
    const double C8447 = C8432 + C8433;
    const double C17517 = C17502 + C17503;
    const double C24876 = C24850 + C24851;
    const double C9657 = C9648 + C9649;
    const double C13704 = C13698 + C13699;
    const double C18727 = C18718 + C18719;
    const double C27724 = C27718 + C27719;
    const double C5449 = C5424 + C5425;
    const double C11643 = C11624 + C11625;
    const double C34697 = C34678 + C34679;
    const double C44791 = C44786 + C44787;
    const double C3045 = C3031 + C3032;
    const double C20967 = C20960 + C20961;
    const double C25490 = C25476 + C25477;
    const double C3383 = C3373 + C3374;
    const double C22239 = C22236 + C22237;
    const double C25808 = C25798 + C25799;
    const double C45348 = C45340 + C45341;
    const double C45502 = C45498 + C45499;
    const double C47084 = C47080 + C47081;
    const double C45620 = C45614 + C45615;
    const double C6208 = C6207 - C6202;
    const double C7814 = C7813 - C7811;
    const double C6031 = C6020 + C6021;
    const double C45349 = C45342 + C45343;
    const double C22889 = C22887 * C50809;
    const double C48167 = C22887 * C50809;
    const double C24553 = C24551 * C50809;
    const double C49729 = C24551 * C50809;
    const double C32699 = C20967 * C50686;
    const double C33043 = C20967 * C50686;
    const double C23525 = C22239 * C50686;
    const double C23881 = C22239 * C50686;
    const double C31949 = C22239 * C50670;
    const double C45350 = C45348 * C50759;
    const double C45503 = C45502 - C45500;
    const double C47085 = C47084 - C47082;
    const double C45621 = C45620 * C50759;
    const double C6209 = C6208 * C50759;
    const double C7815 = C7814 * C50759;
    const double C6033 = C6031 * C50759;
    const double C45351 = C45349 * C50759;
    const double C22890 = C22888 + C22889;
    const double C48168 = C48166 + C48167;
    const double C24554 = C24552 + C24553;
    const double C49730 = C49728 + C49729;
    const double C45504 = C45503 - C45501;
    const double C47086 = C47085 - C47083;
    const double C45505 = C45504 * C50759;
    const double C47087 = C47086 * C50759;
    d2ee[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
             C7920 * C124 + C7915 * C131) *
                C1174 +
            (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
             C7920 * C135 + C7915 * C145) *
                C1169 -
            (C8104 + C8105 + C8106) * C1175 -
            (C8107 + C8108 + C8109) * C50686) *
               C50915 +
           ((C8106 + C8105 + C8104) * C1174 + (C8109 + C8108 + C8107) * C1169 -
            (C8440 + C8439 + C8438) * C1175 -
            (C8443 + C8442 + C8441) * C50686) *
               C50809) *
              C50771 * C50945 +
          (((C8110 + C8111 + C8112) * C1175 -
            ((C7920 * C136 + C7915 * C146 + C7919 * C135 + C50944 * C145 +
              C7918 * C134 + C50943 * C144) *
                 C1169 +
             (C7920 * C125 + C7915 * C132 + C7919 * C124 + C50944 * C131 +
              C7918 * C123 + C50943 * C130) *
                 C1174) +
            (C8113 + C8114 + C8115) * C50686) *
               C50915 +
           ((C8446 + C8445 + C8444) * C1175 -
            ((C8115 + C8114 + C8113) * C1169 +
             (C8112 + C8111 + C8110) * C1174) +
            (C8449 + C8448 + C8447) * C50686) *
               C50809) *
              C50771 * C50930 +
          (((C7918 * C124 + C50943 * C131 + C7919 * C125 + C50944 * C132 +
             C7920 * C126 + C7915 * C138) *
                C1174 +
            (C7918 * C135 + C50943 * C145 + C7919 * C136 + C50944 * C146 +
             C7920 * C137 + C7915 * C147) *
                C1169 -
            (C8116 + C8117 + C8118) * C1175 -
            (C8119 + C8120 + C8121) * C50686) *
               C50915 +
           ((C8118 + C8117 + C8116) * C1174 + (C8121 + C8120 + C8119) * C1169 -
            (C7920 * C513 + C7915 * C522 + C7919 * C512 + C50944 * C517 +
             C7918 * C511 + C50943 * C516) *
                C1175 -
            (C7920 * C523 + C7915 * C528 + C7919 * C521 + C50944 * C527 +
             C7918 * C520 + C50943 * C526) *
                C50686) *
               C50809) *
              C50771 * C1173) *
         C50700) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
             C7920 * C124 + C7915 * C131) *
                C1279 +
            (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
             C7920 * C135 + C7915 * C145) *
                C50946 -
            (C8104 + C8105 + C8106) * C1280 - (C8107 + C8108 + C8109) * C50933 +
            (C8438 + C8439 + C8440) * C1281 + (C8441 + C8442 + C8443) * C1276) *
               C50915 +
           ((C8106 + C8105 + C8104) * C1279 + (C8109 + C8108 + C8107) * C50946 -
            (C8440 + C8439 + C8438) * C1280 - (C8443 + C8442 + C8441) * C50933 +
            (C8562 + C8561 + C8560) * C1281 + (C8565 + C8564 + C8563) * C1276) *
               C50809) *
              C50771 * C1277 +
          (((C8110 + C8111 + C8112) * C1280 -
            ((C7920 * C136 + C7915 * C146 + C7919 * C135 + C50944 * C145 +
              C7918 * C134 + C50943 * C144) *
                 C50946 +
             (C7920 * C125 + C7915 * C132 + C7919 * C124 + C50944 * C131 +
              C7918 * C123 + C50943 * C130) *
                 C1279) +
            (C8113 + C8114 + C8115) * C50933 - (C8444 + C8445 + C8446) * C1281 -
            (C8447 + C8448 + C8449) * C1276) *
               C50915 +
           ((C8446 + C8445 + C8444) * C1280 -
            ((C8115 + C8114 + C8113) * C50946 +
             (C8112 + C8111 + C8110) * C1279) +
            (C8449 + C8448 + C8447) * C50933 -
            (C7920 * C604 + C7915 * C608 + C7919 * C605 + C50944 * C609 +
             C7918 * C606 + C50943 * C610) *
                C1281 -
            (C7920 * C612 + C7915 * C616 + C7919 * C613 + C50944 * C617 +
             C7918 * C614 + C50943 * C618) *
                C1276) *
               C50809) *
              C50771 * C50641) *
         C50700) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
              C7920 * C124 + C7915 * C131) *
                 C1174 +
             (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
              C7920 * C135 + C7915 * C145) *
                 C1169 -
             (C8104 + C8105 + C8106) * C1175 -
             (C8107 + C8108 + C8109) * C50686) *
                C50915 +
            ((C8106 + C8105 + C8104) * C1174 + (C8109 + C8108 + C8107) * C1169 -
             (C8440 + C8439 + C8438) * C1175 -
             (C8443 + C8442 + C8441) * C50686) *
                C50809) *
               C50771 * C1277 +
           (((C8110 + C8111 + C8112) * C1175 -
             ((C7920 * C136 + C7915 * C146 + C7919 * C135 + C50944 * C145 +
               C7918 * C134 + C50943 * C144) *
                  C1169 +
              (C7920 * C125 + C7915 * C132 + C7919 * C124 + C50944 * C131 +
               C7918 * C123 + C50943 * C130) *
                  C1174) +
             (C8113 + C8114 + C8115) * C50686) *
                C50915 +
            ((C8446 + C8445 + C8444) * C1175 -
             ((C8115 + C8114 + C8113) * C1169 +
              (C8112 + C8111 + C8110) * C1174) +
             (C8449 + C8448 + C8447) * C50686) *
                C50809) *
               C50771 * C50641) *
              C50901 +
          ((((C8736 + C8737 + C8738) * C1175 -
             ((C7920 * C390 + C7915 * C398 + C7919 * C389 + C50944 * C397 +
               C7918 * C393 + C50943 * C401) *
                  C1169 +
              (C7920 * C380 + C7915 * C386 + C7919 * C379 + C50944 * C385 +
               C7918 * C383 + C50943 * C394) *
                  C1174) +
             (C8739 + C8740 + C8741) * C50686) *
                C50915 +
            ((C8744 + C8743 + C8742) * C1175 -
             ((C8741 + C8740 + C8739) * C1169 +
              (C8738 + C8737 + C8736) * C1174) +
             (C8747 + C8746 + C8745) * C50686) *
                C50809) *
               C50771 * C1277 +
           (((C7918 * C379 + C50943 * C385 + C7919 * C380 + C50944 * C386 +
              C7920 * C381 + C7915 * C387) *
                 C1174 +
             (C7918 * C389 + C50943 * C397 + C7919 * C390 + C50944 * C398 +
              C7920 * C391 + C7915 * C399) *
                 C1169 -
             (C9654 + C9655 + C9656) * C1175 -
             (C9657 + C9658 + C9659) * C50686) *
                C50915 +
            ((C9656 + C9655 + C9654) * C1174 + (C9659 + C9658 + C9657) * C1169 -
             (C7920 * C722 + C7915 * C734 + C7919 * C723 + C50944 * C735 +
              C7918 * C724 + C50943 * C736) *
                 C1175 -
             (C7920 * C738 + C7915 * C746 + C7919 * C739 + C50944 * C747 +
              C7918 * C740 + C50943 * C748) *
                 C50686) *
                C50809) *
               C50771 * C50641) *
              C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
              C7920 * C124 + C7915 * C131) *
                 C1174 +
             (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
              C7920 * C135 + C7915 * C145) *
                 C1169 -
             (C8104 + C8105 + C8106) * C1175 -
             (C8107 + C8108 + C8109) * C50686) *
                C50915 +
            ((C8106 + C8105 + C8104) * C1174 + (C8109 + C8108 + C8107) * C1169 -
             (C8440 + C8439 + C8438) * C1175 -
             (C8443 + C8442 + C8441) * C50686) *
                C50809) *
               C50771 * C50892 +
           (((C8110 + C8111 + C8112) * C1175 -
             ((C7920 * C136 + C7915 * C146 + C7919 * C135 + C50944 * C145 +
               C7918 * C134 + C50943 * C144) *
                  C1169 +
              (C7920 * C125 + C7915 * C132 + C7919 * C124 + C50944 * C131 +
               C7918 * C123 + C50943 * C130) *
                  C1174) +
             (C8113 + C8114 + C8115) * C50686) *
                C50915 +
            ((C8446 + C8445 + C8444) * C1175 -
             ((C8115 + C8114 + C8113) * C1169 +
              (C8112 + C8111 + C8110) * C1174) +
             (C8449 + C8448 + C8447) * C50686) *
                C50809) *
               C50771 * C50641) *
              C1514 +
          ((((C8736 + C8737 + C8738) * C1175 -
             ((C7920 * C390 + C7915 * C398 + C7919 * C389 + C50944 * C397 +
               C7918 * C393 + C50943 * C401) *
                  C1169 +
              (C7920 * C380 + C7915 * C386 + C7919 * C379 + C50944 * C385 +
               C7918 * C383 + C50943 * C394) *
                  C1174) +
             (C8739 + C8740 + C8741) * C50686) *
                C50915 +
            ((C8744 + C8743 + C8742) * C1175 -
             ((C8741 + C8740 + C8739) * C1169 +
              (C8738 + C8737 + C8736) * C1174) +
             (C8747 + C8746 + C8745) * C50686) *
                C50809) *
               C50771 * C50892 +
           (((C7918 * C379 + C50943 * C385 + C7919 * C380 + C50944 * C386 +
              C7920 * C381 + C7915 * C387) *
                 C1174 +
             (C7918 * C389 + C50943 * C397 + C7919 * C390 + C50944 * C398 +
              C7920 * C391 + C7915 * C399) *
                 C1169 -
             (C9654 + C9655 + C9656) * C1175 -
             (C9657 + C9658 + C9659) * C50686) *
                C50915 +
            ((C9656 + C9655 + C9654) * C1174 + (C9659 + C9658 + C9657) * C1169 -
             (C7920 * C722 + C7915 * C734 + C7919 * C723 + C50944 * C735 +
              C7918 * C724 + C50943 * C736) *
                 C1175 -
             (C7920 * C738 + C7915 * C746 + C7919 * C739 + C50944 * C747 +
              C7918 * C740 + C50943 * C748) *
                 C50686) *
                C50809) *
               C50771 * C50641) *
              C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
             C7920 * C124 + C7915 * C131) *
                C1279 +
            (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
             C7920 * C135 + C7915 * C145) *
                C50946 -
            (C8104 + C8105 + C8106) * C1280 - (C8107 + C8108 + C8109) * C50933 +
            (C8438 + C8439 + C8440) * C1281 + (C8441 + C8442 + C8443) * C1276) *
               C50915 +
           ((C8106 + C8105 + C8104) * C1279 + (C8109 + C8108 + C8107) * C50946 -
            (C8440 + C8439 + C8438) * C1280 - (C8443 + C8442 + C8441) * C50933 +
            (C8562 + C8561 + C8560) * C1281 + (C8565 + C8564 + C8563) * C1276) *
               C50809) *
              C50771 * C50636 * C1514 +
          (((C8736 + C8737 + C8738) * C1280 -
            ((C7920 * C390 + C7915 * C398 + C7919 * C389 + C50944 * C397 +
              C7918 * C393 + C50943 * C401) *
                 C50946 +
             (C7920 * C380 + C7915 * C386 + C7919 * C379 + C50944 * C385 +
              C7918 * C383 + C50943 * C394) *
                 C1279) +
            (C8739 + C8740 + C8741) * C50933 - (C8742 + C8743 + C8744) * C1281 -
            (C8745 + C8746 + C8747) * C1276) *
               C50915 +
           ((C8744 + C8743 + C8742) * C1280 -
            ((C8741 + C8740 + C8739) * C50946 +
             (C8738 + C8737 + C8736) * C1279) +
            (C8747 + C8746 + C8745) * C50933 -
            (C7920 * C3984 + C7915 * C3985 + C7919 * C2994 + C50944 * C2998 +
             C7918 * C2995 + C50943 * C2999) *
                C1281 -
            (C7920 * C3986 + C7915 * C3987 + C7919 * C3000 + C50944 * C3006 +
             C7918 * C3001 + C50943 * C3007) *
                C1276) *
               C50809) *
              C50771 * C50636 * C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
             C7920 * C124 + C7915 * C131) *
                C1174 +
            (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
             C7920 * C135 + C7915 * C145) *
                C1169 -
            (C8104 + C8105 + C8106) * C1175 -
            (C8107 + C8108 + C8109) * C50686) *
               C50915 +
           ((C8106 + C8105 + C8104) * C1174 + (C8109 + C8108 + C8107) * C1169 -
            (C8440 + C8439 + C8438) * C1175 -
            (C8443 + C8442 + C8441) * C50686) *
               C50809) *
              C50771 * C50636 * C50947 +
          (((C8736 + C8737 + C8738) * C1175 -
            ((C7920 * C390 + C7915 * C398 + C7919 * C389 + C50944 * C397 +
              C7918 * C393 + C50943 * C401) *
                 C1169 +
             (C7920 * C380 + C7915 * C386 + C7919 * C379 + C50944 * C385 +
              C7918 * C383 + C50943 * C394) *
                 C1174) +
            (C8739 + C8740 + C8741) * C50686) *
               C50915 +
           ((C8744 + C8743 + C8742) * C1175 -
            ((C8741 + C8740 + C8739) * C1169 +
             (C8738 + C8737 + C8736) * C1174) +
            (C8747 + C8746 + C8745) * C50686) *
               C50809) *
              C50771 * C50636 * C50936 +
          (((C7918 * C851 + C50943 * C856 + C7919 * C852 + C50944 * C857 +
             C7920 * C853 + C7915 * C858) *
                C1174 +
            (C7918 * C860 + C50943 * C866 + C7919 * C861 + C50944 * C867 +
             C7920 * C862 + C7915 * C868) *
                C1169 -
            (C9052 + C9053 + C9054) * C1175 -
            (C9055 + C9056 + C9057) * C50686) *
               C50915 +
           ((C9054 + C9053 + C9052) * C1174 + (C9057 + C9056 + C9055) * C1169 -
            (C7920 * C3196 + C7915 * C3202 + C7919 * C3195 + C50944 * C3198 +
             C7918 * C3194 + C50943 * C3197) *
                C1175 -
            (C7920 * C3201 + C7915 * C3205 + C7919 * C3200 + C50944 * C3204 +
             C7918 * C3199 + C50943 * C3203) *
                C50686) *
               C50809) *
              C50771 * C50636 * C1746)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
             C7920 * C124 + C7915 * C131) *
                C506 +
            (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
             C7920 * C135 + C7915 * C145) *
                C501 -
            (C8104 + C8105 + C8106) * C507 - (C8107 + C8108 + C8109) * C502 +
            (C8438 + C8439 + C8440) * C508 + (C8441 + C8442 + C8443) * C503) *
               C50915 +
           ((C8106 + C8105 + C8104) * C506 + (C8109 + C8108 + C8107) * C501 -
            (C8440 + C8439 + C8438) * C507 - (C8443 + C8442 + C8441) * C502 +
            (C7918 * C607 + C50943 * C611 + C7919 * C606 + C50944 * C610 +
             C7920 * C605 + C7915 * C609) *
                C508 +
            (C7918 * C615 + C50943 * C619 + C7919 * C614 + C50944 * C618 +
             C7920 * C613 + C7915 * C617) *
                C503) *
               C50809) *
              C50771 * C50892 +
          (((C8110 + C8111 + C8112) * C507 -
            ((C7920 * C136 + C7915 * C146 + C7919 * C135 + C50944 * C145 +
              C7918 * C134 + C50943 * C144) *
                 C501 +
             (C7920 * C125 + C7915 * C132 + C7919 * C124 + C50944 * C131 +
              C7918 * C123 + C50943 * C130) *
                 C506) +
            (C8113 + C8114 + C8115) * C502 - (C8444 + C8445 + C8446) * C508 -
            (C8447 + C8448 + C8449) * C503) *
               C50915 +
           ((C8446 + C8445 + C8444) * C507 -
            ((C8115 + C8114 + C8113) * C501 + (C8112 + C8111 + C8110) * C506) +
            (C8449 + C8448 + C8447) * C502 -
            (C7920 * C604 + C7915 * C608 + C7919 * C605 + C50944 * C609 +
             C7918 * C606 + C50943 * C610) *
                C508 -
            (C7920 * C612 + C7915 * C616 + C7919 * C613 + C50944 * C617 +
             C7918 * C614 + C50943 * C618) *
                C503) *
               C50809) *
              C50771 * C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
             C7920 * C124 + C7915 * C131) *
                C121 +
            (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
             C7920 * C135 + C7915 * C145) *
                C50670) *
               C50915 +
           ((C7918 * C258 + C50943 * C264 + C7919 * C257 + C50944 * C263 +
             C7920 * C256 + C7915 * C262) *
                C121 +
            (C7918 * C268 + C50943 * C276 + C7919 * C267 + C50944 * C275 +
             C7920 * C266 + C7915 * C274) *
                C50670) *
               C50809) *
              C50771 * C112 -
          (((C7920 * C265 + C7915 * C273 + C7919 * C266 + C50944 * C274 +
             C7918 * C267 + C50943 * C275) *
                C50670 +
            (C7920 * C255 + C7915 * C261 + C7919 * C256 + C50944 * C262 +
             C7918 * C257 + C50943 * C263) *
                C121) *
               C50809 +
           ((C7920 * C136 + C7915 * C146 + C7919 * C135 + C50944 * C145 +
             C7918 * C134 + C50943 * C144) *
                C50670 +
            (C7920 * C125 + C7915 * C132 + C7919 * C124 + C50944 * C131 +
             C7918 * C123 + C50943 * C130) *
                C121) *
               C50915) *
              C50771 * C113 +
          (((C7918 * C124 + C50943 * C131 + C7919 * C125 + C50944 * C132 +
             C7920 * C126 + C7915 * C138) *
                C121 +
            (C7918 * C135 + C50943 * C145 + C7919 * C136 + C50944 * C146 +
             C7920 * C137 + C7915 * C147) *
                C50670) *
               C50915 +
           ((C7918 * C256 + C50943 * C262 + C7919 * C255 + C50944 * C261 +
             C7920 * C259 + C7915 * C269) *
                C121 +
            (C7918 * C266 + C50943 * C274 + C7919 * C265 + C50944 * C273 +
             C7920 * C270 + C7915 * C277) *
                C50670) *
               C50809) *
              C50771 * C114 -
          (((C7920 * C272 + C7915 * C278 + C7919 * C270 + C50944 * C277 +
             C7918 * C265 + C50943 * C273) *
                C50670 +
            (C7920 * C260 + C7915 * C271 + C7919 * C259 + C50944 * C269 +
             C7918 * C255 + C50943 * C261) *
                C121) *
               C50809 +
           ((C7920 * C140 + C7915 * C148 + C7919 * C137 + C50944 * C147 +
             C7918 * C136 + C50943 * C146) *
                C50670 +
            (C7920 * C127 + C7915 * C139 + C7919 * C126 + C50944 * C138 +
             C7918 * C125 + C50943 * C132) *
                C121) *
               C50915) *
              C50771 * C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
              C7920 * C124 + C7915 * C131) *
                 C121 +
             (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
              C7920 * C135 + C7915 * C145) *
                 C50670) *
                C50915 +
            ((C8106 + C8105 + C8104) * C121 +
             (C8109 + C8108 + C8107) * C50670) *
                C50809) *
               C50771 * C50892 -
           (((C8115 + C8114 + C8113) * C50670 +
             (C8112 + C8111 + C8110) * C121) *
                C50809 +
            ((C7920 * C136 + C7915 * C146 + C7919 * C135 + C50944 * C145 +
              C7918 * C134 + C50943 * C144) *
                 C50670 +
             (C7920 * C125 + C7915 * C132 + C7919 * C124 + C50944 * C131 +
              C7918 * C123 + C50943 * C130) *
                 C121) *
                C50915) *
               C50771 * C50641) *
              C848 +
          ((((C7918 * C379 + C50943 * C385 + C7919 * C380 + C50944 * C386 +
              C7920 * C381 + C7915 * C387) *
                 C121 +
             (C7918 * C389 + C50943 * C397 + C7919 * C390 + C50944 * C398 +
              C7920 * C391 + C7915 * C399) *
                 C50670) *
                C50915 +
            ((C7918 * C719 + C50943 * C727 + C7919 * C720 + C50944 * C728 +
              C7920 * C721 + C7915 * C729) *
                 C121 +
             (C7918 * C731 + C50943 * C743 + C7919 * C732 + C50944 * C744 +
              C7920 * C733 + C7915 * C745) *
                 C50670) *
                C50809) *
               C50771 * C50641 -
           (((C8741 + C8740 + C8739) * C50670 +
             (C8738 + C8737 + C8736) * C121) *
                C50809 +
            ((C7920 * C390 + C7915 * C398 + C7919 * C389 + C50944 * C397 +
              C7918 * C393 + C50943 * C401) *
                 C50670 +
             (C7920 * C380 + C7915 * C386 + C7919 * C379 + C50944 * C385 +
              C7918 * C383 + C50943 * C394) *
                 C121) *
                C50915) *
               C50771 * C50892) *
              C849 +
          ((((C7918 * C851 + C50943 * C856 + C7919 * C852 + C50944 * C857 +
              C7920 * C853 + C7915 * C858) *
                 C121 +
             (C7918 * C860 + C50943 * C866 + C7919 * C861 + C50944 * C867 +
              C7920 * C862 + C7915 * C868) *
                 C50670) *
                C50915 +
            ((C7918 * C972 + C50943 * C976 + C7919 * C971 + C50944 * C975 +
              C7920 * C970 + C7915 * C974) *
                 C121 +
             (C7918 * C980 + C50943 * C984 + C7919 * C979 + C50944 * C983 +
              C7920 * C978 + C7915 * C982) *
                 C50670) *
                C50809) *
               C50771 * C50892 -
           (((C7920 * C977 + C7915 * C981 + C7919 * C978 + C50944 * C982 +
              C7918 * C979 + C50943 * C983) *
                 C50670 +
             (C7920 * C969 + C7915 * C973 + C7919 * C970 + C50944 * C974 +
              C7918 * C971 + C50943 * C975) *
                 C121) *
                C50809 +
            ((C7920 * C863 + C7915 * C869 + C7919 * C862 + C50944 * C868 +
              C7918 * C861 + C50943 * C867) *
                 C50670 +
             (C7920 * C854 + C7915 * C859 + C7919 * C853 + C50944 * C858 +
              C7918 * C852 + C50943 * C857) *
                 C121) *
                C50915) *
               C50771 * C50641) *
              C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
            C7920 * C124 + C7915 * C131) *
               C600 +
           (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
            C7920 * C135 + C7915 * C145) *
               C595 -
           (C8104 + C8105 + C8106) * C601 - (C8107 + C8108 + C8109) * C596 +
           (C8438 + C8439 + C8440) * C602 + (C8441 + C8442 + C8443) * C597 -
           (C8560 + C8561 + C8562) * C603 - (C8563 + C8564 + C8565) * C598) *
              C50915 +
          ((C8106 + C8105 + C8104) * C600 + (C8109 + C8108 + C8107) * C595 -
           (C8440 + C8439 + C8438) * C601 - (C8443 + C8442 + C8441) * C596 +
           (C8562 + C8561 + C8560) * C602 + (C8565 + C8564 + C8563) * C597 -
           (C7920 * C2690 + C7915 * C2695 + C7919 * C2689 + C50944 * C2692 +
            C7918 * C2688 + C50943 * C2691) *
               C603 -
           (C7920 * C2696 + C7915 * C2699 + C7919 * C2694 + C50944 * C2698 +
            C7918 * C2693 + C50943 * C2697) *
               C598) *
              C50809) *
         C50771 * C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
             C7920 * C124 + C7915 * C131) *
                C253 +
            (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
             C7920 * C135 + C7915 * C145) *
                C50899 -
            (C8104 + C8105 + C8106) * C254 - (C8107 + C8108 + C8109) * C50686) *
               C50915 +
           ((C8106 + C8105 + C8104) * C253 + (C8109 + C8108 + C8107) * C50899 -
            (C7920 * C511 + C7915 * C516 + C7919 * C510 + C50944 * C515 +
             C7918 * C509 + C50943 * C514) *
                C254 -
            (C7920 * C520 + C7915 * C526 + C7919 * C519 + C50944 * C525 +
             C7918 * C518 + C50943 * C524) *
                C50686) *
               C50809) *
              C50771 * C250 +
          (((C8110 + C8111 + C8112) * C254 -
            ((C7920 * C136 + C7915 * C146 + C7919 * C135 + C50944 * C145 +
              C7918 * C134 + C50943 * C144) *
                 C50899 +
             (C7920 * C125 + C7915 * C132 + C7919 * C124 + C50944 * C131 +
              C7918 * C123 + C50943 * C130) *
                 C253) +
            (C8113 + C8114 + C8115) * C50686) *
               C50915 +
           ((C7918 * C510 + C50943 * C515 + C7919 * C511 + C50944 * C516 +
             C7920 * C512 + C7915 * C517) *
                C254 -
            ((C8115 + C8114 + C8113) * C50899 +
             (C8112 + C8111 + C8110) * C253) +
            (C7918 * C519 + C50943 * C525 + C7919 * C520 + C50944 * C526 +
             C7920 * C521 + C7915 * C527) *
                C50686) *
               C50809) *
              C50771 * C251 +
          (((C7918 * C124 + C50943 * C131 + C7919 * C125 + C50944 * C132 +
             C7920 * C126 + C7915 * C138) *
                C253 +
            (C7918 * C135 + C50943 * C145 + C7919 * C136 + C50944 * C146 +
             C7920 * C137 + C7915 * C147) *
                C50899 -
            (C8116 + C8117 + C8118) * C254 - (C8119 + C8120 + C8121) * C50686) *
               C50915 +
           ((C8118 + C8117 + C8116) * C253 + (C8121 + C8120 + C8119) * C50899 -
            (C7920 * C513 + C7915 * C522 + C7919 * C512 + C50944 * C517 +
             C7918 * C511 + C50943 * C516) *
                C254 -
            (C7920 * C523 + C7915 * C528 + C7919 * C521 + C50944 * C527 +
             C7918 * C520 + C50943 * C526) *
                C50686) *
               C50809) *
              C50771 * C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
             C7920 * C124 + C7915 * C131) *
                C253 +
            (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
             C7920 * C135 + C7915 * C145) *
                C50899 -
            (C8104 + C8105 + C8106) * C254 - (C8107 + C8108 + C8109) * C50686) *
               C50915 +
           ((C8106 + C8105 + C8104) * C253 + (C8109 + C8108 + C8107) * C50899 -
            (C8440 + C8439 + C8438) * C254 - (C8443 + C8442 + C8441) * C50686) *
               C50809) *
              C50771 * C50636 * C848 +
          (((C8736 + C8737 + C8738) * C254 -
            ((C7920 * C390 + C7915 * C398 + C7919 * C389 + C50944 * C397 +
              C7918 * C393 + C50943 * C401) *
                 C50899 +
             (C7920 * C380 + C7915 * C386 + C7919 * C379 + C50944 * C385 +
              C7918 * C383 + C50943 * C394) *
                 C253) +
            (C8739 + C8740 + C8741) * C50686) *
               C50915 +
           ((C8744 + C8743 + C8742) * C254 -
            ((C8741 + C8740 + C8739) * C50899 +
             (C8738 + C8737 + C8736) * C253) +
            (C8747 + C8746 + C8745) * C50686) *
               C50809) *
              C50771 * C50636 * C849 +
          (((C7918 * C851 + C50943 * C856 + C7919 * C852 + C50944 * C857 +
             C7920 * C853 + C7915 * C858) *
                C253 +
            (C7918 * C860 + C50943 * C866 + C7919 * C861 + C50944 * C867 +
             C7920 * C862 + C7915 * C868) *
                C50899 -
            (C9052 + C9053 + C9054) * C254 - (C9055 + C9056 + C9057) * C50686) *
               C50915 +
           ((C9054 + C9053 + C9052) * C253 + (C9057 + C9056 + C9055) * C50899 -
            (C7920 * C3196 + C7915 * C3202 + C7919 * C3195 + C50944 * C3198 +
             C7918 * C3194 + C50943 * C3197) *
                C254 -
            (C7920 * C3201 + C7915 * C3205 + C7919 * C3200 + C50944 * C3204 +
             C7918 * C3199 + C50943 * C3203) *
                C50686) *
               C50809) *
              C50771 * C50636 * C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
             C7920 * C124 + C7915 * C131) *
                C506 +
            (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
             C7920 * C135 + C7915 * C145) *
                C501 -
            (C8104 + C8105 + C8106) * C507 - (C8107 + C8108 + C8109) * C502 +
            (C8438 + C8439 + C8440) * C508 + (C8441 + C8442 + C8443) * C503) *
               C50915 +
           ((C8106 + C8105 + C8104) * C506 + (C8109 + C8108 + C8107) * C501 -
            (C8440 + C8439 + C8438) * C507 - (C8443 + C8442 + C8441) * C502 +
            (C8562 + C8561 + C8560) * C508 + (C8565 + C8564 + C8563) * C503) *
               C50809) *
              C50771 * C50636 * C50901 +
          (((C8736 + C8737 + C8738) * C507 -
            ((C7920 * C390 + C7915 * C398 + C7919 * C389 + C50944 * C397 +
              C7918 * C393 + C50943 * C401) *
                 C501 +
             (C7920 * C380 + C7915 * C386 + C7919 * C379 + C50944 * C385 +
              C7918 * C383 + C50943 * C394) *
                 C506) +
            (C8739 + C8740 + C8741) * C502 - (C8742 + C8743 + C8744) * C508 -
            (C8745 + C8746 + C8747) * C503) *
               C50915 +
           ((C8744 + C8743 + C8742) * C507 -
            ((C8741 + C8740 + C8739) * C501 + (C8738 + C8737 + C8736) * C506) +
            (C8747 + C8746 + C8745) * C502 -
            (C7920 * C3984 + C7915 * C3985 + C7919 * C2994 + C50944 * C2998 +
             C7918 * C2995 + C50943 * C2999) *
                C508 -
            (C7920 * C3986 + C7915 * C3987 + C7919 * C3000 + C50944 * C3006 +
             C7918 * C3001 + C50943 * C3007) *
                C503) *
               C50809) *
              C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
              C7920 * C124 + C7915 * C131) *
                 C121 +
             (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
              C7920 * C135 + C7915 * C145) *
                 C50670) *
                C50915 +
            ((C8106 + C8105 + C8104) * C121 +
             (C8109 + C8108 + C8107) * C50670) *
                C50809) *
               C50771 * C250 -
           (((C8115 + C8114 + C8113) * C50670 +
             (C8112 + C8111 + C8110) * C121) *
                C50809 +
            ((C7920 * C136 + C7915 * C146 + C7919 * C135 + C50944 * C145 +
              C7918 * C134 + C50943 * C144) *
                 C50670 +
             (C7920 * C125 + C7915 * C132 + C7919 * C124 + C50944 * C131 +
              C7918 * C123 + C50943 * C130) *
                 C121) *
                C50915) *
               C50771 * C251 +
           (((C7918 * C124 + C50943 * C131 + C7919 * C125 + C50944 * C132 +
              C7920 * C126 + C7915 * C138) *
                 C121 +
             (C7918 * C135 + C50943 * C145 + C7919 * C136 + C50944 * C146 +
              C7920 * C137 + C7915 * C147) *
                 C50670) *
                C50915 +
            ((C8118 + C8117 + C8116) * C121 +
             (C8121 + C8120 + C8119) * C50670) *
                C50809) *
               C50771 * C252) *
              C50901 +
          ((((C7918 * C379 + C50943 * C385 + C7919 * C380 + C50944 * C386 +
              C7920 * C381 + C7915 * C387) *
                 C121 +
             (C7918 * C389 + C50943 * C397 + C7919 * C390 + C50944 * C398 +
              C7920 * C391 + C7915 * C399) *
                 C50670) *
                C50915 +
            ((C7918 * C719 + C50943 * C727 + C7919 * C720 + C50944 * C728 +
              C7920 * C721 + C7915 * C729) *
                 C121 +
             (C7918 * C731 + C50943 * C743 + C7919 * C732 + C50944 * C744 +
              C7920 * C733 + C7915 * C745) *
                 C50670) *
                C50809) *
               C50771 * C251 -
           (((C7920 * C732 + C7915 * C744 + C7919 * C731 + C50944 * C743 +
              C7918 * C730 + C50943 * C742) *
                 C50670 +
             (C7920 * C720 + C7915 * C728 + C7919 * C719 + C50944 * C727 +
              C7918 * C718 + C50943 * C726) *
                 C121) *
                C50809 +
            ((C7920 * C390 + C7915 * C398 + C7919 * C389 + C50944 * C397 +
              C7918 * C393 + C50943 * C401) *
                 C50670 +
             (C7920 * C380 + C7915 * C386 + C7919 * C379 + C50944 * C385 +
              C7918 * C383 + C50943 * C394) *
                 C121) *
                C50915) *
               C50771 * C250 -
           (((C7920 * C1414 + C7915 * C1415 + C7919 * C733 + C50944 * C745 +
              C7918 * C732 + C50943 * C744) *
                 C50670 +
             (C7920 * C1412 + C7915 * C1413 + C7919 * C721 + C50944 * C729 +
              C7918 * C720 + C50943 * C728) *
                 C121) *
                C50809 +
            ((C7920 * C392 + C7915 * C400 + C7919 * C391 + C50944 * C399 +
              C7918 * C390 + C50943 * C398) *
                 C50670 +
             (C7920 * C382 + C7915 * C388 + C7919 * C381 + C50944 * C387 +
              C7918 * C380 + C50943 * C386) *
                 C121) *
                C50915) *
               C50771 * C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
             C7920 * C124 + C7915 * C131) *
                C121 +
            (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
             C7920 * C135 + C7915 * C145) *
                C50670) *
               C50915 +
           ((C8106 + C8105 + C8104) * C121 + (C8109 + C8108 + C8107) * C50670) *
               C50809) *
              C50771 * C50636 * C1051 -
          (((C8741 + C8740 + C8739) * C50670 + (C8738 + C8737 + C8736) * C121) *
               C50809 +
           ((C7920 * C390 + C7915 * C398 + C7919 * C389 + C50944 * C397 +
             C7918 * C393 + C50943 * C401) *
                C50670 +
            (C7920 * C380 + C7915 * C386 + C7919 * C379 + C50944 * C385 +
             C7918 * C383 + C50943 * C394) *
                C121) *
               C50915) *
              C50771 * C50636 * C1052 +
          (((C7918 * C851 + C50943 * C856 + C7919 * C852 + C50944 * C857 +
             C7920 * C853 + C7915 * C858) *
                C121 +
            (C7918 * C860 + C50943 * C866 + C7919 * C861 + C50944 * C867 +
             C7920 * C862 + C7915 * C868) *
                C50670) *
               C50915 +
           ((C9054 + C9053 + C9052) * C121 + (C9057 + C9056 + C9055) * C50670) *
               C50809) *
              C50771 * C50636 * C1053 -
          (((C7920 * C6821 + C7915 * C6822 + C7919 * C3490 + C50944 * C3496 +
             C7918 * C3491 + C50943 * C3497) *
                C50670 +
            (C7920 * C6819 + C7915 * C6820 + C7919 * C3484 + C50944 * C3492 +
             C7918 * C3485 + C50943 * C3493) *
                C121) *
               C50809 +
           ((C7920 * C1060 + C7915 * C1068 + C7919 * C1061 + C50944 * C1069 +
             C7918 * C1062 + C50943 * C1070) *
                C50670 +
            (C7920 * C1056 + C7915 * C1064 + C7919 * C1057 + C50944 * C1065 +
             C7918 * C1058 + C50943 * C1066) *
                C121) *
               C50915) *
              C50771 * C50636 * C1054)) /
            (p * q * std::sqrt(p + q));
    d2ee[9] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C7918 * C122 + C50943 * C129 + C7919 * C123 +
                     C50944 * C130 + C7920 * C124 + C7915 * C131) *
                        C121 +
                    (C7918 * C133 + C50943 * C143 + C7919 * C134 +
                     C50944 * C144 + C7920 * C135 + C7915 * C145) *
                        C50670) *
                       C50915 +
                   ((C8106 + C8105 + C8104) * C121 +
                    (C8109 + C8108 + C8107) * C50670) *
                       C50809) *
                      C50771 * C50945 -
                  (((C8115 + C8114 + C8113) * C50670 +
                    (C8112 + C8111 + C8110) * C121) *
                       C50809 +
                   ((C7920 * C136 + C7915 * C146 + C7919 * C135 +
                     C50944 * C145 + C7918 * C134 + C50943 * C144) *
                        C50670 +
                    (C7920 * C125 + C7915 * C132 + C7919 * C124 +
                     C50944 * C131 + C7918 * C123 + C50943 * C130) *
                        C121) *
                       C50915) *
                      C50771 * C50930 +
                  (((C7918 * C124 + C50943 * C131 + C7919 * C125 +
                     C50944 * C132 + C7920 * C126 + C7915 * C138) *
                        C121 +
                    (C7918 * C135 + C50943 * C145 + C7919 * C136 +
                     C50944 * C146 + C7920 * C137 + C7915 * C147) *
                        C50670) *
                       C50915 +
                   ((C8118 + C8117 + C8116) * C121 +
                    (C8121 + C8120 + C8119) * C50670) *
                       C50809) *
                      C50771 * C1173) *
                     C1514 +
                 ((((C7918 * C379 + C50943 * C385 + C7919 * C380 +
                     C50944 * C386 + C7920 * C381 + C7915 * C387) *
                        C121 +
                    (C7918 * C389 + C50943 * C397 + C7919 * C390 +
                     C50944 * C398 + C7920 * C391 + C7915 * C399) *
                        C50670) *
                       C50915 +
                   ((C9656 + C9655 + C9654) * C121 +
                    (C9659 + C9658 + C9657) * C50670) *
                       C50809) *
                      C50771 * C50930 -
                  (((C8741 + C8740 + C8739) * C50670 +
                    (C8738 + C8737 + C8736) * C121) *
                       C50809 +
                   ((C7920 * C390 + C7915 * C398 + C7919 * C389 +
                     C50944 * C397 + C7918 * C393 + C50943 * C401) *
                        C50670 +
                    (C7920 * C380 + C7915 * C386 + C7919 * C379 +
                     C50944 * C385 + C7918 * C383 + C50943 * C394) *
                        C121) *
                       C50915) *
                      C50771 * C50945 -
                  (((C7920 * C1414 + C7915 * C1415 + C7919 * C733 +
                     C50944 * C745 + C7918 * C732 + C50943 * C744) *
                        C50670 +
                    (C7920 * C1412 + C7915 * C1413 + C7919 * C721 +
                     C50944 * C729 + C7918 * C720 + C50943 * C728) *
                        C121) *
                       C50809 +
                   ((C7920 * C392 + C7915 * C400 + C7919 * C391 +
                     C50944 * C399 + C7918 * C390 + C50943 * C398) *
                        C50670 +
                    (C7920 * C382 + C7915 * C388 + C7919 * C381 +
                     C50944 * C387 + C7918 * C380 + C50943 * C386) *
                        C121) *
                       C50915) *
                      C50771 * C1173) *
                     C50712)) /
               (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
              C7920 * C124 + C7915 * C131) *
                 C253 +
             (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
              C7920 * C135 + C7915 * C145) *
                 C50899 -
             (C8104 + C8105 + C8106) * C254 -
             (C8107 + C8108 + C8109) * C50686) *
                C50915 +
            ((C8106 + C8105 + C8104) * C253 + (C8109 + C8108 + C8107) * C50899 -
             (C8440 + C8439 + C8438) * C254 -
             (C8443 + C8442 + C8441) * C50686) *
                C50809) *
               C50771 * C1277 +
           (((C8110 + C8111 + C8112) * C254 -
             ((C7920 * C136 + C7915 * C146 + C7919 * C135 + C50944 * C145 +
               C7918 * C134 + C50943 * C144) *
                  C50899 +
              (C7920 * C125 + C7915 * C132 + C7919 * C124 + C50944 * C131 +
               C7918 * C123 + C50943 * C130) *
                  C253) +
             (C8113 + C8114 + C8115) * C50686) *
                C50915 +
            ((C8446 + C8445 + C8444) * C254 -
             ((C8115 + C8114 + C8113) * C50899 +
              (C8112 + C8111 + C8110) * C253) +
             (C8449 + C8448 + C8447) * C50686) *
                C50809) *
               C50771 * C50641) *
              C1514 +
          ((((C8736 + C8737 + C8738) * C254 -
             ((C7920 * C390 + C7915 * C398 + C7919 * C389 + C50944 * C397 +
               C7918 * C393 + C50943 * C401) *
                  C50899 +
              (C7920 * C380 + C7915 * C386 + C7919 * C379 + C50944 * C385 +
               C7918 * C383 + C50943 * C394) *
                  C253) +
             (C8739 + C8740 + C8741) * C50686) *
                C50915 +
            ((C8744 + C8743 + C8742) * C254 -
             ((C8741 + C8740 + C8739) * C50899 +
              (C8738 + C8737 + C8736) * C253) +
             (C8747 + C8746 + C8745) * C50686) *
                C50809) *
               C50771 * C1277 +
           (((C7918 * C379 + C50943 * C385 + C7919 * C380 + C50944 * C386 +
              C7920 * C381 + C7915 * C387) *
                 C253 +
             (C7918 * C389 + C50943 * C397 + C7919 * C390 + C50944 * C398 +
              C7920 * C391 + C7915 * C399) *
                 C50899 -
             (C9654 + C9655 + C9656) * C254 -
             (C9657 + C9658 + C9659) * C50686) *
                C50915 +
            ((C9656 + C9655 + C9654) * C253 + (C9659 + C9658 + C9657) * C50899 -
             (C7920 * C722 + C7915 * C734 + C7919 * C723 + C50944 * C735 +
              C7918 * C724 + C50943 * C736) *
                 C254 -
             (C7920 * C738 + C7915 * C746 + C7919 * C739 + C50944 * C747 +
              C7918 * C740 + C50943 * C748) *
                 C50686) *
                C50809) *
               C50771 * C50641) *
              C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[11] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7918 * C122 + C50943 * C129 + C7919 * C123 +
                      C50944 * C130 + C7920 * C124 + C7915 * C131) *
                         C121 +
                     (C7918 * C133 + C50943 * C143 + C7919 * C134 +
                      C50944 * C144 + C7920 * C135 + C7915 * C145) *
                         C50670) *
                        C50915 +
                    ((C8106 + C8105 + C8104) * C121 +
                     (C8109 + C8108 + C8107) * C50670) *
                        C50809) *
                       C50771 * C1277 -
                   (((C8115 + C8114 + C8113) * C50670 +
                     (C8112 + C8111 + C8110) * C121) *
                        C50809 +
                    ((C7920 * C136 + C7915 * C146 + C7919 * C135 +
                      C50944 * C145 + C7918 * C134 + C50943 * C144) *
                         C50670 +
                     (C7920 * C125 + C7915 * C132 + C7919 * C124 +
                      C50944 * C131 + C7918 * C123 + C50943 * C130) *
                         C121) *
                        C50915) *
                       C50771 * C50641) *
                      C50947 +
                  ((((C7918 * C379 + C50943 * C385 + C7919 * C380 +
                      C50944 * C386 + C7920 * C381 + C7915 * C387) *
                         C121 +
                     (C7918 * C389 + C50943 * C397 + C7919 * C390 +
                      C50944 * C398 + C7920 * C391 + C7915 * C399) *
                         C50670) *
                        C50915 +
                    ((C9656 + C9655 + C9654) * C121 +
                     (C9659 + C9658 + C9657) * C50670) *
                        C50809) *
                       C50771 * C50641 -
                   (((C8741 + C8740 + C8739) * C50670 +
                     (C8738 + C8737 + C8736) * C121) *
                        C50809 +
                    ((C7920 * C390 + C7915 * C398 + C7919 * C389 +
                      C50944 * C397 + C7918 * C393 + C50943 * C401) *
                         C50670 +
                     (C7920 * C380 + C7915 * C386 + C7919 * C379 +
                      C50944 * C385 + C7918 * C383 + C50943 * C394) *
                         C121) *
                        C50915) *
                       C50771 * C1277) *
                      C50936 +
                  ((((C7918 * C851 + C50943 * C856 + C7919 * C852 +
                      C50944 * C857 + C7920 * C853 + C7915 * C858) *
                         C121 +
                     (C7918 * C860 + C50943 * C866 + C7919 * C861 +
                      C50944 * C867 + C7920 * C862 + C7915 * C868) *
                         C50670) *
                        C50915 +
                    ((C9054 + C9053 + C9052) * C121 +
                     (C9057 + C9056 + C9055) * C50670) *
                        C50809) *
                       C50771 * C1277 -
                   (((C7920 * C977 + C7915 * C981 + C7919 * C978 +
                      C50944 * C982 + C7918 * C979 + C50943 * C983) *
                         C50670 +
                     (C7920 * C969 + C7915 * C973 + C7919 * C970 +
                      C50944 * C974 + C7918 * C971 + C50943 * C975) *
                         C121) *
                        C50809 +
                    ((C7920 * C863 + C7915 * C869 + C7919 * C862 +
                      C50944 * C868 + C7918 * C861 + C50943 * C867) *
                         C50670 +
                     (C7920 * C854 + C7915 * C859 + C7919 * C853 +
                      C50944 * C858 + C7918 * C852 + C50943 * C857) *
                         C121) *
                        C50915) *
                       C50771 * C50641) *
                      C1746)) /
                (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
             C7920 * C124 + C7915 * C131) *
                C121 +
            (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
             C7920 * C135 + C7915 * C145) *
                C50670) *
               C50915 +
           ((C7918 * C258 + C50943 * C264 + C7919 * C257 + C50944 * C263 +
             C7920 * C256 + C7915 * C262) *
                C121 +
            (C7918 * C268 + C50943 * C276 + C7919 * C267 + C50944 * C275 +
             C7920 * C266 + C7915 * C274) *
                C50670) *
               C50809) *
              C50771 * C112 -
          (((C7920 * C265 + C7915 * C273 + C7919 * C266 + C50944 * C274 +
             C7918 * C267 + C50943 * C275) *
                C50670 +
            (C7920 * C255 + C7915 * C261 + C7919 * C256 + C50944 * C262 +
             C7918 * C257 + C50943 * C263) *
                C121) *
               C50809 +
           ((C7920 * C136 + C7915 * C146 + C7919 * C135 + C50944 * C145 +
             C7918 * C134 + C50943 * C144) *
                C50670 +
            (C7920 * C125 + C7915 * C132 + C7919 * C124 + C50944 * C131 +
             C7918 * C123 + C50943 * C130) *
                C121) *
               C50915) *
              C50771 * C113 +
          (((C7918 * C124 + C50943 * C131 + C7919 * C125 + C50944 * C132 +
             C7920 * C126 + C7915 * C138) *
                C121 +
            (C7918 * C135 + C50943 * C145 + C7919 * C136 + C50944 * C146 +
             C7920 * C137 + C7915 * C147) *
                C50670) *
               C50915 +
           ((C7918 * C256 + C50943 * C262 + C7919 * C255 + C50944 * C261 +
             C7920 * C259 + C7915 * C269) *
                C121 +
            (C7918 * C266 + C50943 * C274 + C7919 * C265 + C50944 * C273 +
             C7920 * C270 + C7915 * C277) *
                C50670) *
               C50809) *
              C50771 * C114 -
          (((C7920 * C272 + C7915 * C278 + C7919 * C270 + C50944 * C277 +
             C7918 * C265 + C50943 * C273) *
                C50670 +
            (C7920 * C260 + C7915 * C271 + C7919 * C259 + C50944 * C269 +
             C7918 * C255 + C50943 * C261) *
                C121) *
               C50809 +
           ((C7920 * C140 + C7915 * C148 + C7919 * C137 + C50944 * C147 +
             C7918 * C136 + C50943 * C146) *
                C50670 +
            (C7920 * C127 + C7915 * C139 + C7919 * C126 + C50944 * C138 +
             C7918 * C125 + C50943 * C132) *
                C121) *
               C50915) *
              C50771 * C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
             C7920 * C124 + C7915 * C131) *
                C506 +
            (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
             C7920 * C135 + C7915 * C145) *
                C501 -
            (C8104 + C8105 + C8106) * C507 - (C8107 + C8108 + C8109) * C502 +
            (C8438 + C8439 + C8440) * C508 + (C8441 + C8442 + C8443) * C503) *
               C50915 +
           ((C8106 + C8105 + C8104) * C506 + (C8109 + C8108 + C8107) * C501 -
            (C8440 + C8439 + C8438) * C507 - (C8443 + C8442 + C8441) * C502 +
            (C7918 * C607 + C50943 * C611 + C7919 * C606 + C50944 * C610 +
             C7920 * C605 + C7915 * C609) *
                C508 +
            (C7918 * C615 + C50943 * C619 + C7919 * C614 + C50944 * C618 +
             C7920 * C613 + C7915 * C617) *
                C503) *
               C50809) *
              C50771 * C50892 +
          (((C8110 + C8111 + C8112) * C507 -
            ((C7920 * C136 + C7915 * C146 + C7919 * C135 + C50944 * C145 +
              C7918 * C134 + C50943 * C144) *
                 C501 +
             (C7920 * C125 + C7915 * C132 + C7919 * C124 + C50944 * C131 +
              C7918 * C123 + C50943 * C130) *
                 C506) +
            (C8113 + C8114 + C8115) * C502 - (C8444 + C8445 + C8446) * C508 -
            (C8447 + C8448 + C8449) * C503) *
               C50915 +
           ((C8446 + C8445 + C8444) * C507 -
            ((C8115 + C8114 + C8113) * C501 + (C8112 + C8111 + C8110) * C506) +
            (C8449 + C8448 + C8447) * C502 -
            (C7920 * C604 + C7915 * C608 + C7919 * C605 + C50944 * C609 +
             C7918 * C606 + C50943 * C610) *
                C508 -
            (C7920 * C612 + C7915 * C616 + C7919 * C613 + C50944 * C617 +
             C7918 * C614 + C50943 * C618) *
                C503) *
               C50809) *
              C50771 * C50641) *
         C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
             C7920 * C124 + C7915 * C131) *
                C253 +
            (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
             C7920 * C135 + C7915 * C145) *
                C50899 -
            (C8104 + C8105 + C8106) * C254 - (C8107 + C8108 + C8109) * C50686) *
               C50915 +
           ((C8106 + C8105 + C8104) * C253 + (C8109 + C8108 + C8107) * C50899 -
            (C7920 * C511 + C7915 * C516 + C7919 * C510 + C50944 * C515 +
             C7918 * C509 + C50943 * C514) *
                C254 -
            (C7920 * C520 + C7915 * C526 + C7919 * C519 + C50944 * C525 +
             C7918 * C518 + C50943 * C524) *
                C50686) *
               C50809) *
              C50771 * C250 +
          (((C8110 + C8111 + C8112) * C254 -
            ((C7920 * C136 + C7915 * C146 + C7919 * C135 + C50944 * C145 +
              C7918 * C134 + C50943 * C144) *
                 C50899 +
             (C7920 * C125 + C7915 * C132 + C7919 * C124 + C50944 * C131 +
              C7918 * C123 + C50943 * C130) *
                 C253) +
            (C8113 + C8114 + C8115) * C50686) *
               C50915 +
           ((C7918 * C510 + C50943 * C515 + C7919 * C511 + C50944 * C516 +
             C7920 * C512 + C7915 * C517) *
                C254 -
            ((C8115 + C8114 + C8113) * C50899 +
             (C8112 + C8111 + C8110) * C253) +
            (C7918 * C519 + C50943 * C525 + C7919 * C520 + C50944 * C526 +
             C7920 * C521 + C7915 * C527) *
                C50686) *
               C50809) *
              C50771 * C251 +
          (((C7918 * C124 + C50943 * C131 + C7919 * C125 + C50944 * C132 +
             C7920 * C126 + C7915 * C138) *
                C253 +
            (C7918 * C135 + C50943 * C145 + C7919 * C136 + C50944 * C146 +
             C7920 * C137 + C7915 * C147) *
                C50899 -
            (C8116 + C8117 + C8118) * C254 - (C8119 + C8120 + C8121) * C50686) *
               C50915 +
           ((C8118 + C8117 + C8116) * C253 + (C8121 + C8120 + C8119) * C50899 -
            (C7920 * C513 + C7915 * C522 + C7919 * C512 + C50944 * C517 +
             C7918 * C511 + C50943 * C516) *
                C254 -
            (C7920 * C523 + C7915 * C528 + C7919 * C521 + C50944 * C527 +
             C7918 * C520 + C50943 * C526) *
                C50686) *
               C50809) *
              C50771 * C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
            C7920 * C124 + C7915 * C131) *
               C600 +
           (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
            C7920 * C135 + C7915 * C145) *
               C595 -
           (C8104 + C8105 + C8106) * C601 - (C8107 + C8108 + C8109) * C596 +
           (C8438 + C8439 + C8440) * C602 + (C8441 + C8442 + C8443) * C597 -
           (C8560 + C8561 + C8562) * C603 - (C8563 + C8564 + C8565) * C598) *
              C50915 +
          ((C8106 + C8105 + C8104) * C600 + (C8109 + C8108 + C8107) * C595 -
           (C8440 + C8439 + C8438) * C601 - (C8443 + C8442 + C8441) * C596 +
           (C8562 + C8561 + C8560) * C602 + (C8565 + C8564 + C8563) * C597 -
           (C7920 * C2690 + C7915 * C2695 + C7919 * C2689 + C50944 * C2692 +
            C7918 * C2688 + C50943 * C2691) *
               C603 -
           (C7920 * C2696 + C7915 * C2699 + C7919 * C2694 + C50944 * C2698 +
            C7918 * C2693 + C50943 * C2697) *
               C598) *
              C50809) *
         C50771 * C50636 * C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
              C7920 * C124 + C7915 * C131) *
                 C121 +
             (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
              C7920 * C135 + C7915 * C145) *
                 C50670) *
                C50915 +
            ((C8106 + C8105 + C8104) * C121 +
             (C8109 + C8108 + C8107) * C50670) *
                C50809) *
               C50771 * C250 -
           (((C8115 + C8114 + C8113) * C50670 +
             (C8112 + C8111 + C8110) * C121) *
                C50809 +
            ((C7920 * C136 + C7915 * C146 + C7919 * C135 + C50944 * C145 +
              C7918 * C134 + C50943 * C144) *
                 C50670 +
             (C7920 * C125 + C7915 * C132 + C7919 * C124 + C50944 * C131 +
              C7918 * C123 + C50943 * C130) *
                 C121) *
                C50915) *
               C50771 * C251 +
           (((C7918 * C124 + C50943 * C131 + C7919 * C125 + C50944 * C132 +
              C7920 * C126 + C7915 * C138) *
                 C121 +
             (C7918 * C135 + C50943 * C145 + C7919 * C136 + C50944 * C146 +
              C7920 * C137 + C7915 * C147) *
                 C50670) *
                C50915 +
            ((C8118 + C8117 + C8116) * C121 +
             (C8121 + C8120 + C8119) * C50670) *
                C50809) *
               C50771 * C252) *
              C50901 +
          ((((C7918 * C379 + C50943 * C385 + C7919 * C380 + C50944 * C386 +
              C7920 * C381 + C7915 * C387) *
                 C121 +
             (C7918 * C389 + C50943 * C397 + C7919 * C390 + C50944 * C398 +
              C7920 * C391 + C7915 * C399) *
                 C50670) *
                C50915 +
            ((C7918 * C719 + C50943 * C727 + C7919 * C720 + C50944 * C728 +
              C7920 * C721 + C7915 * C729) *
                 C121 +
             (C7918 * C731 + C50943 * C743 + C7919 * C732 + C50944 * C744 +
              C7920 * C733 + C7915 * C745) *
                 C50670) *
                C50809) *
               C50771 * C251 -
           (((C7920 * C732 + C7915 * C744 + C7919 * C731 + C50944 * C743 +
              C7918 * C730 + C50943 * C742) *
                 C50670 +
             (C7920 * C720 + C7915 * C728 + C7919 * C719 + C50944 * C727 +
              C7918 * C718 + C50943 * C726) *
                 C121) *
                C50809 +
            ((C7920 * C390 + C7915 * C398 + C7919 * C389 + C50944 * C397 +
              C7918 * C393 + C50943 * C401) *
                 C50670 +
             (C7920 * C380 + C7915 * C386 + C7919 * C379 + C50944 * C385 +
              C7918 * C383 + C50943 * C394) *
                 C121) *
                C50915) *
               C50771 * C250 -
           (((C7920 * C1414 + C7915 * C1415 + C7919 * C733 + C50944 * C745 +
              C7918 * C732 + C50943 * C744) *
                 C50670 +
             (C7920 * C1412 + C7915 * C1413 + C7919 * C721 + C50944 * C729 +
              C7918 * C720 + C50943 * C728) *
                 C121) *
                C50809 +
            ((C7920 * C392 + C7915 * C400 + C7919 * C391 + C50944 * C399 +
              C7918 * C390 + C50943 * C398) *
                 C50670 +
             (C7920 * C382 + C7915 * C388 + C7919 * C381 + C50944 * C387 +
              C7918 * C380 + C50943 * C386) *
                 C121) *
                C50915) *
               C50771 * C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
             C7920 * C124 + C7915 * C131) *
                C506 +
            (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
             C7920 * C135 + C7915 * C145) *
                C501 -
            (C8104 + C8105 + C8106) * C507 - (C8107 + C8108 + C8109) * C502 +
            (C8438 + C8439 + C8440) * C508 + (C8441 + C8442 + C8443) * C503) *
               C50915 +
           ((C8106 + C8105 + C8104) * C506 + (C8109 + C8108 + C8107) * C501 -
            (C8440 + C8439 + C8438) * C507 - (C8443 + C8442 + C8441) * C502 +
            (C8562 + C8561 + C8560) * C508 + (C8565 + C8564 + C8563) * C503) *
               C50809) *
              C50771 * C50636 * C50901 +
          (((C8736 + C8737 + C8738) * C507 -
            ((C7920 * C390 + C7915 * C398 + C7919 * C389 + C50944 * C397 +
              C7918 * C393 + C50943 * C401) *
                 C501 +
             (C7920 * C380 + C7915 * C386 + C7919 * C379 + C50944 * C385 +
              C7918 * C383 + C50943 * C394) *
                 C506) +
            (C8739 + C8740 + C8741) * C502 - (C8742 + C8743 + C8744) * C508 -
            (C8745 + C8746 + C8747) * C503) *
               C50915 +
           ((C8744 + C8743 + C8742) * C507 -
            ((C8741 + C8740 + C8739) * C501 + (C8738 + C8737 + C8736) * C506) +
            (C8747 + C8746 + C8745) * C502 -
            (C7920 * C3984 + C7915 * C3985 + C7919 * C2994 + C50944 * C2998 +
             C7918 * C2995 + C50943 * C2999) *
                C508 -
            (C7920 * C3986 + C7915 * C3987 + C7919 * C3000 + C50944 * C3006 +
             C7918 * C3001 + C50943 * C3007) *
                C503) *
               C50809) *
              C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C1174 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C1169 -
             (C2373 + C2374) * C1175 - (C2375 + C2376) * C50686) *
                C50915 +
            ((C2374 + C2373) * C1174 + (C2376 + C2375) * C1169 -
             (C2377 + C2378) * C1175 - (C2379 + C2380) * C50686) *
                C50809) *
               C50916 +
           (((C5426 + C5427) * C1174 + (C5428 + C5429) * C1169 -
             C14418 * C1175 - C14419 * C50686) *
                C50915 +
            (C14422 * C1174 + C14423 * C1169 - C3047 * C1175 - C3048 * C50686) *
                C50809) *
               C50835) *
              C50945 +
          ((((C2381 + C2382) * C1175 -
             ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                  C1169 +
              (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                  C1174) +
             (C2383 + C2384) * C50686) *
                C50915 +
            ((C2385 + C2386) * C1175 -
             ((C2384 + C2383) * C1169 + (C2382 + C2381) * C1174) +
             (C2387 + C2388) * C50686) *
                C50809) *
               C50916 +
           (((C4006 + C4005) * C1175 -
             ((C5438 + C5439) * C1169 + (C5440 + C5441) * C1174) +
             (C4008 + C4007) * C50686) *
                C50915 +
            ((C4010 + C4009) * C1175 -
             ((C4007 + C4008) * C1169 + (C4005 + C4006) * C1174) +
             (C4012 + C4011) * C50686) *
                C50809) *
               C50835) *
              C50930 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                 C1174 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                 C1169 -
             (C2389 + C2390) * C1175 - (C2391 + C2392) * C50686) *
                C50915 +
            ((C2390 + C2389) * C1174 + (C2392 + C2391) * C1169 -
             (C2393 + C2394) * C1175 - (C2395 + C2396) * C50686) *
                C50809) *
               C50916 +
           (((C5442 + C5443) * C1174 + (C5444 + C5445) * C1169 -
             (C13702 + C13703) * C1175 - (C13704 + C13705) * C50686) *
                C50915 +
            ((C13703 + C13702) * C1174 + (C13705 + C13704) * C1169 -
             (C2177 * C722 + C50616 * C734 + C2176 * C723 + C2171 * C735) *
                 C1175 -
             (C2177 * C738 + C50616 * C746 + C2176 * C739 + C2171 * C747) *
                 C50686) *
                C50809) *
               C50835) *
              C1173) *
         C50700) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C1279 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C50946 -
             (C2373 + C2374) * C1280 - (C2375 + C2376) * C50933 +
             C2701 * C1281 + C2702 * C1276) *
                C50915 +
            ((C2374 + C2373) * C1279 + (C2376 + C2375) * C50946 -
             (C2377 + C2378) * C1280 - (C2379 + C2380) * C50933 +
             (C2721 + C2722) * C1281 + (C2723 + C2724) * C1276) *
                C50809) *
               C50916 +
           (((C5426 + C5427) * C1279 + (C5428 + C5429) * C50946 -
             C14418 * C1280 - C14419 * C50933 + C14420 * C1281 +
             C14421 * C1276) *
                C50915 +
            (C14422 * C1279 + C14423 * C50946 - C3047 * C1280 - C3048 * C50933 +
             (C3044 + C3043) * C1281 + (C3046 + C3045) * C1276) *
                C50809) *
               C50835) *
              C1277 +
          ((((C2381 + C2382) * C1280 -
             ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                  C50946 +
              (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                  C1279) +
             (C2383 + C2384) * C50933 - C2711 * C1281 - C2712 * C1276) *
                C50915 +
            ((C2385 + C2386) * C1280 -
             ((C2384 + C2383) * C50946 + (C2382 + C2381) * C1279) +
             (C2387 + C2388) * C50933 - (C2725 + C2726) * C1281 -
             (C2727 + C2728) * C1276) *
                C50809) *
               C50916 +
           (((C4006 + C4005) * C1280 -
             ((C5438 + C5439) * C50946 + (C5440 + C5441) * C1279) +
             (C4008 + C4007) * C50933 - (C4009 + C4010) * C1281 -
             (C4011 + C4012) * C1276) *
                C50915 +
            ((C4010 + C4009) * C1280 -
             ((C4007 + C4008) * C50946 + (C4005 + C4006) * C1279) +
             (C4012 + C4011) * C50933 -
             (C2177 * C3984 + C50616 * C3985 + C2176 * C2994 + C2171 * C2998) *
                 C1281 -
             (C2177 * C3986 + C50616 * C3987 + C2176 * C3000 + C2171 * C3006) *
                 C1276) *
                C50809) *
               C50835) *
              C50641) *
         C50700) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                  C1174 +
              (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                  C1169 -
              (C2373 + C2374) * C1175 - (C2375 + C2376) * C50686) *
                 C50915 +
             ((C2374 + C2373) * C1174 + (C2376 + C2375) * C1169 -
              (C2377 + C2378) * C1175 - (C2379 + C2380) * C50686) *
                 C50809) *
                C50916 +
            (((C5426 + C5427) * C1174 + (C5428 + C5429) * C1169 -
              C14418 * C1175 - C14419 * C50686) *
                 C50915 +
             (C14422 * C1174 + C14423 * C1169 - C3047 * C1175 -
              C3048 * C50686) *
                 C50809) *
                C50835) *
               C1277 +
           ((((C2381 + C2382) * C1175 -
              ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                   C1169 +
               (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                   C1174) +
              (C2383 + C2384) * C50686) *
                 C50915 +
             ((C2385 + C2386) * C1175 -
              ((C2384 + C2383) * C1169 + (C2382 + C2381) * C1174) +
              (C2387 + C2388) * C50686) *
                 C50809) *
                C50916 +
            ((C15590 * C1175 -
              ((C5438 + C5439) * C1169 + (C5440 + C5441) * C1174) +
              C15591 * C50686) *
                 C50915 +
             ((C4010 + C4009) * C1175 - (C15592 * C1169 + C15593 * C1174) +
              (C4012 + C4011) * C50686) *
                 C50809) *
                C50835) *
               C50641) *
              C50901 +
          ((((C14422 * C1175 -
              ((C5429 + C5428) * C1169 + (C5427 + C5426) * C1174) +
              C14423 * C50686) *
                 C50915 +
             (C14420 * C1175 - (C14419 * C1169 + C14418 * C1174) +
              C14421 * C50686) *
                 C50809) *
                C50916 +
            ((C14812 * C1175 -
              ((C5433 + C5432) * C1169 + (C5431 + C5430) * C1174) +
              C14813 * C50686) *
                 C50915 +
             ((C3382 + C3381) * C1175 - (C6191 * C1169 + C6190 * C1174) +
              (C3384 + C3383) * C50686) *
                 C50809) *
                C50835) *
               C1277 +
           ((((C5441 + C5440) * C1174 + (C5439 + C5438) * C1169 -
              C15593 * C1175 - C15592 * C50686) *
                 C50915 +
             (C15590 * C1174 + C15591 * C1169 - (C4009 + C4010) * C1175 -
              (C4011 + C4012) * C50686) *
                 C50809) *
                C50916 +
            (((C5437 + C5436) * C1174 + (C5435 + C5434) * C1169 -
              (C6833 + C6832) * C1175 - (C6835 + C6834) * C50686) *
                 C50915 +
             ((C6832 + C6833) * C1174 + (C6834 + C6835) * C1169 -
              (C2177 * C3196 + C50616 * C3202 + C2176 * C3195 + C2171 * C3198) *
                  C1175 -
              (C2177 * C3201 + C50616 * C3205 + C2176 * C3200 + C2171 * C3204) *
                  C50686) *
                 C50809) *
                C50835) *
               C50641) *
              C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                  C1174 +
              (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                  C1169 -
              (C2373 + C2374) * C1175 - (C2375 + C2376) * C50686) *
                 C50915 +
             ((C2374 + C2373) * C1174 + (C2376 + C2375) * C1169 -
              (C2377 + C2378) * C1175 - (C2379 + C2380) * C50686) *
                 C50809) *
                C50916 +
            (((C5426 + C5427) * C1174 + (C5428 + C5429) * C1169 -
              C14418 * C1175 - C14419 * C50686) *
                 C50915 +
             (C14422 * C1174 + C14423 * C1169 - C3047 * C1175 -
              C3048 * C50686) *
                 C50809) *
                C50835) *
               C50892 +
           ((((C2381 + C2382) * C1175 -
              ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                   C1169 +
               (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                   C1174) +
              (C2383 + C2384) * C50686) *
                 C50915 +
             ((C2385 + C2386) * C1175 -
              ((C2384 + C2383) * C1169 + (C2382 + C2381) * C1174) +
              (C2387 + C2388) * C50686) *
                 C50809) *
                C50916 +
            ((C15590 * C1175 -
              ((C5438 + C5439) * C1169 + (C5440 + C5441) * C1174) +
              C15591 * C50686) *
                 C50915 +
             ((C4010 + C4009) * C1175 - (C15592 * C1169 + C15593 * C1174) +
              (C4012 + C4011) * C50686) *
                 C50809) *
                C50835) *
               C50641) *
              C1514 +
          ((((C14422 * C1175 -
              ((C5429 + C5428) * C1169 + (C5427 + C5426) * C1174) +
              C14423 * C50686) *
                 C50915 +
             (C14420 * C1175 - (C14419 * C1169 + C14418 * C1174) +
              C14421 * C50686) *
                 C50809) *
                C50916 +
            ((C14812 * C1175 -
              ((C5433 + C5432) * C1169 + (C5431 + C5430) * C1174) +
              C14813 * C50686) *
                 C50915 +
             ((C3382 + C3381) * C1175 - (C6191 * C1169 + C6190 * C1174) +
              (C3384 + C3383) * C50686) *
                 C50809) *
                C50835) *
               C50892 +
           ((((C5441 + C5440) * C1174 + (C5439 + C5438) * C1169 -
              C15593 * C1175 - C15592 * C50686) *
                 C50915 +
             (C15590 * C1174 + C15591 * C1169 - (C4009 + C4010) * C1175 -
              (C4011 + C4012) * C50686) *
                 C50809) *
                C50916 +
            (((C5437 + C5436) * C1174 + (C5435 + C5434) * C1169 -
              (C6833 + C6832) * C1175 - (C6835 + C6834) * C50686) *
                 C50915 +
             ((C6832 + C6833) * C1174 + (C6834 + C6835) * C1169 -
              (C2177 * C3196 + C50616 * C3202 + C2176 * C3195 + C2171 * C3198) *
                  C1175 -
              (C2177 * C3201 + C50616 * C3205 + C2176 * C3200 + C2171 * C3204) *
                  C50686) *
                 C50809) *
                C50835) *
               C50641) *
              C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C1279 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C50946 -
             (C2373 + C2374) * C1280 - (C2375 + C2376) * C50933 +
             C2701 * C1281 + C2702 * C1276) *
                C50915 +
            ((C2374 + C2373) * C1279 + (C2376 + C2375) * C50946 -
             (C2377 + C2378) * C1280 - (C2379 + C2380) * C50933 +
             (C2721 + C2722) * C1281 + (C2723 + C2724) * C1276) *
                C50809) *
               C50916 +
           (((C5426 + C5427) * C1279 + (C5428 + C5429) * C50946 -
             C14418 * C1280 - C14419 * C50933 + C14420 * C1281 +
             C14421 * C1276) *
                C50915 +
            (C14422 * C1279 + C14423 * C50946 - C3047 * C1280 - C3048 * C50933 +
             (C3044 + C3043) * C1281 + (C3046 + C3045) * C1276) *
                C50809) *
               C50835) *
              C50636 * C1514 +
          (((C14422 * C1280 -
             ((C5429 + C5428) * C50946 + (C5427 + C5426) * C1279) +
             C14423 * C50933 - C3047 * C1281 - C3048 * C1276) *
                C50915 +
            (C14420 * C1280 - (C14419 * C50946 + C14418 * C1279) +
             C14421 * C50933 - (C3043 + C3044) * C1281 -
             (C3045 + C3046) * C1276) *
                C50809) *
               C50916 +
           ((C14812 * C1280 -
             ((C5433 + C5432) * C50946 + (C5431 + C5430) * C1279) +
             C14813 * C50933 - (C3381 + C3382) * C1281 -
             (C3383 + C3384) * C1276) *
                C50915 +
            ((C3382 + C3381) * C1280 - (C6191 * C50946 + C6190 * C1279) +
             (C3384 + C3383) * C50933 -
             (C2177 * C3352 + C50616 * C3354 + C2176 * C3353 + C2171 * C3355) *
                 C1281 -
             (C2177 * C3356 + C50616 * C3358 + C2176 * C3357 + C2171 * C3359) *
                 C1276) *
                C50809) *
               C50835) *
              C50636 * C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C1174 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C1169 -
             (C2373 + C2374) * C1175 - (C2375 + C2376) * C50686) *
                C50915 +
            ((C2374 + C2373) * C1174 + (C2376 + C2375) * C1169 -
             (C2377 + C2378) * C1175 - (C2379 + C2380) * C50686) *
                C50809) *
               C50916 +
           (((C5426 + C5427) * C1174 + (C5428 + C5429) * C1169 -
             C14418 * C1175 - C14419 * C50686) *
                C50915 +
            (C14422 * C1174 + C14423 * C1169 - C3047 * C1175 - C3048 * C50686) *
                C50809) *
               C50835) *
              C50636 * C50947 +
          (((C14422 * C1175 -
             ((C5429 + C5428) * C1169 + (C5427 + C5426) * C1174) +
             C14423 * C50686) *
                C50915 +
            (C14420 * C1175 - (C14419 * C1169 + C14418 * C1174) +
             C14421 * C50686) *
                C50809) *
               C50916 +
           ((C14812 * C1175 -
             ((C5433 + C5432) * C1169 + (C5431 + C5430) * C1174) +
             C14813 * C50686) *
                C50915 +
            ((C3382 + C3381) * C1175 - (C6191 * C1169 + C6190 * C1174) +
             (C3384 + C3383) * C50686) *
                C50809) *
               C50835) *
              C50636 * C50936 +
          ((C7814 * C50915 +
            (C14812 * C1174 + C14813 * C1169 - (C3381 + C3382) * C1175 -
             (C3383 + C3384) * C50686) *
                C50809) *
               C50916 +
           (((C6029 + C6028) * C1174 + (C6027 + C6026) * C1169 -
             (C6204 + C6203) * C1175 - (C6206 + C6205) * C50686) *
                C50915 +
            ((C6203 + C6204) * C1174 + (C6205 + C6206) * C1169 -
             (C2177 * C3482 + C50616 * C3488 + C2176 * C3483 + C2171 * C3489) *
                 C1175 -
             (C2177 * C3486 + C50616 * C3494 + C2176 * C3487 + C2171 * C3495) *
                 C50686) *
                C50809) *
               C50835) *
              C50636 * C1746)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C506 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C501 -
             (C2373 + C2374) * C507 - (C2375 + C2376) * C502 + C2701 * C508 +
             C2702 * C503) *
                C50915 +
            ((C2374 + C2373) * C506 + (C2376 + C2375) * C501 -
             (C2377 + C2378) * C507 - (C2379 + C2380) * C502 +
             (C2721 + C2722) * C508 + (C2723 + C2724) * C503) *
                C50809) *
               C50916 +
           (((C5426 + C5427) * C506 + (C5428 + C5429) * C501 -
             (C3036 + C3035) * C507 - (C3038 + C3037) * C502 +
             (C3040 + C3039) * C508 + (C3042 + C3041) * C503) *
                C50915 +
            ((C3035 + C3036) * C506 + (C3037 + C3038) * C501 - C3047 * C507 -
             C3048 * C502 + (C3044 + C3043) * C508 + (C3046 + C3045) * C503) *
                C50809) *
               C50835) *
              C50892 +
          ((((C2381 + C2382) * C507 -
             ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                  C501 +
              (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                  C506) +
             (C2383 + C2384) * C502 - C2711 * C508 - C2712 * C503) *
                C50915 +
            ((C2385 + C2386) * C507 -
             ((C2384 + C2383) * C501 + (C2382 + C2381) * C506) +
             (C2387 + C2388) * C502 - (C2725 + C2726) * C508 -
             (C2727 + C2728) * C503) *
                C50809) *
               C50916 +
           (((C4006 + C4005) * C507 -
             ((C5438 + C5439) * C501 + (C5440 + C5441) * C506) +
             (C4008 + C4007) * C502 - (C4009 + C4010) * C508 -
             (C4011 + C4012) * C503) *
                C50915 +
            ((C4010 + C4009) * C507 -
             ((C4007 + C4008) * C501 + (C4005 + C4006) * C506) +
             (C4012 + C4011) * C502 -
             (C2177 * C3984 + C50616 * C3985 + C2176 * C2994 + C2171 * C2998) *
                 C508 -
             (C2177 * C3986 + C50616 * C3987 + C2176 * C3000 + C2171 * C3006) *
                 C503) *
                C50809) *
               C50835) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C50670) *
                C50915 +
            ((C2374 + C2373) * C121 + (C2376 + C2375) * C50670) * C50809) *
               C50916 +
           (((C5426 + C5427) * C121 + (C5428 + C5429) * C50670) * C50915 +
            ((C3035 + C3036) * C121 + (C3037 + C3038) * C50670) * C50809) *
               C50835) *
              C112 -
          ((((C4007 + C4008) * C50670 + (C4005 + C4006) * C121) * C50809 +
            ((C5438 + C5439) * C50670 + (C5440 + C5441) * C121) * C50915) *
               C50835 +
           (((C2384 + C2383) * C50670 + (C2382 + C2381) * C121) * C50809 +
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C50670 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C50915) *
               C50916) *
              C113 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                 C50670) *
                C50915 +
            ((C2390 + C2389) * C121 + (C2392 + C2391) * C50670) * C50809) *
               C50916 +
           (((C5442 + C5443) * C121 + (C5444 + C5445) * C50670) * C50915 +
            ((C2176 * C720 + C2171 * C728 + C2177 * C721 + C50616 * C729) *
                 C121 +
             (C2176 * C732 + C2171 * C744 + C2177 * C733 + C50616 * C745) *
                 C50670) *
                C50809) *
               C50835) *
              C114 -
          ((((C2177 * C1414 + C50616 * C1415 + C2176 * C733 + C2171 * C745) *
                 C50670 +
             (C2177 * C1412 + C50616 * C1413 + C2176 * C721 + C2171 * C729) *
                 C121) *
                C50809 +
            ((C2177 * C392 + C50616 * C400 + C2176 * C391 + C2171 * C399) *
                 C50670 +
             (C2177 * C382 + C50616 * C388 + C2176 * C381 + C2171 * C387) *
                 C121) *
                C50915) *
               C50835 +
           (((C2177 * C270 + C50616 * C277 + C2176 * C265 + C2171 * C273) *
                 C50670 +
             (C2177 * C259 + C50616 * C269 + C2176 * C255 + C2171 * C261) *
                 C121) *
                C50809 +
            ((C2177 * C137 + C50616 * C147 + C2176 * C136 + C2171 * C146) *
                 C50670 +
             (C2177 * C126 + C50616 * C138 + C2176 * C125 + C2171 * C132) *
                 C121) *
                C50915) *
               C50916) *
              C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                  C121 +
              (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                  C50670) *
                 C50915 +
             ((C2374 + C2373) * C121 + (C2376 + C2375) * C50670) * C50809) *
                C50916 +
            (((C5426 + C5427) * C121 + (C5428 + C5429) * C50670) * C50915 +
             (C14422 * C121 + C14423 * C50670) * C50809) *
                C50835) *
               C50892 -
           ((((C4007 + C4008) * C50670 + (C4005 + C4006) * C121) * C50809 +
             ((C5438 + C5439) * C50670 + (C5440 + C5441) * C121) * C50915) *
                C50835 +
            (((C2384 + C2383) * C50670 + (C2382 + C2381) * C121) * C50809 +
             ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                  C50670 +
              (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                  C121) *
                 C50915) *
                C50916) *
               C50641) *
              C848 +
          (((((C5441 + C5440) * C121 + (C5439 + C5438) * C50670) * C50915 +
             ((C4006 + C4005) * C121 + (C4008 + C4007) * C50670) * C50809) *
                C50916 +
            (((C5437 + C5436) * C121 + (C5435 + C5434) * C50670) * C50915 +
             ((C6832 + C6833) * C121 + (C6834 + C6835) * C50670) * C50809) *
                C50835) *
               C50641 -
           (((C6191 * C50670 + C6190 * C121) * C50809 +
             ((C5433 + C5432) * C50670 + (C5431 + C5430) * C121) * C50915) *
                C50835 +
            ((C14419 * C50670 + C14418 * C121) * C50809 +
             ((C5429 + C5428) * C50670 + (C5427 + C5426) * C121) * C50915) *
                C50916) *
               C50892) *
              C849 +
          (((C6030 * C50915 +
             ((C3378 + C3377) * C121 + (C3380 + C3379) * C50670) * C50809) *
                C50916 +
            (((C6029 + C6028) * C121 + (C6027 + C6026) * C50670) * C50915 +
             ((C6203 + C6204) * C121 + (C6205 + C6206) * C50670) * C50809) *
                C50835) *
               C50892 -
           ((((C2177 * C6821 + C50616 * C6822 + C2176 * C3490 + C2171 * C3496) *
                  C50670 +
              (C2177 * C6819 + C50616 * C6820 + C2176 * C3484 + C2171 * C3492) *
                  C121) *
                 C50809 +
             ((C6025 + C6024) * C50670 + (C6023 + C6022) * C121) * C50915) *
                C50835 +
            (((C6835 + C6834) * C50670 + (C6833 + C6832) * C121) * C50809 +
             C6031 * C50915) *
                C50916) *
               C50641) *
              C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C600 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C595 -
            (C2373 + C2374) * C601 - (C2375 + C2376) * C596 + C2701 * C602 +
            C2702 * C597 - C2835 * C603 - C2836 * C598) *
               C50915 +
           ((C2374 + C2373) * C600 + (C2376 + C2375) * C595 -
            (C2377 + C2378) * C601 - (C2379 + C2380) * C596 +
            (C2721 + C2722) * C602 + (C2723 + C2724) * C597 -
            (C2845 + C2846) * C603 - (C2847 + C2848) * C598) *
               C50809) *
              C50916 +
          (((C5426 + C5427) * C600 + (C5428 + C5429) * C595 -
            (C3036 + C3035) * C601 - (C3038 + C3037) * C596 +
            (C3040 + C3039) * C602 + (C3042 + C3041) * C597 -
            (C3043 + C3044) * C603 - (C3045 + C3046) * C598) *
               C50915 +
           ((C3035 + C3036) * C600 + (C3037 + C3038) * C595 - C3047 * C601 -
            C3048 * C596 + (C3044 + C3043) * C602 + (C3046 + C3045) * C597 -
            (C2177 * C2996 + C50616 * C3002 + C2176 * C2997 + C2171 * C3003) *
                C603 -
            (C2177 * C3004 + C50616 * C3008 + C2176 * C3005 + C2171 * C3009) *
                C598) *
               C50809) *
              C50835) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C253 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C50899 -
             (C2373 + C2374) * C254 - (C2375 + C2376) * C50686) *
                C50915 +
            ((C2374 + C2373) * C253 + (C2376 + C2375) * C50899 -
             (C2377 + C2378) * C254 - (C2379 + C2380) * C50686) *
                C50809) *
               C50916 +
           (((C5426 + C5427) * C253 + (C5428 + C5429) * C50899 -
             (C3036 + C3035) * C254 - (C3038 + C3037) * C50686) *
                C50915 +
            ((C3035 + C3036) * C253 + (C3037 + C3038) * C50899 - C3047 * C254 -
             C3048 * C50686) *
                C50809) *
               C50835) *
              C250 +
          ((((C2381 + C2382) * C254 -
             ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                  C50899 +
              (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                  C253) +
             (C2383 + C2384) * C50686) *
                C50915 +
            ((C2385 + C2386) * C254 -
             ((C2384 + C2383) * C50899 + (C2382 + C2381) * C253) +
             (C2387 + C2388) * C50686) *
                C50809) *
               C50916 +
           (((C4006 + C4005) * C254 -
             ((C5438 + C5439) * C50899 + (C5440 + C5441) * C253) +
             (C4008 + C4007) * C50686) *
                C50915 +
            ((C4010 + C4009) * C254 -
             ((C4007 + C4008) * C50899 + (C4005 + C4006) * C253) +
             (C4012 + C4011) * C50686) *
                C50809) *
               C50835) *
              C251 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                 C253 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                 C50899 -
             (C2389 + C2390) * C254 - (C2391 + C2392) * C50686) *
                C50915 +
            ((C2390 + C2389) * C253 + (C2392 + C2391) * C50899 -
             (C2393 + C2394) * C254 - (C2395 + C2396) * C50686) *
                C50809) *
               C50916 +
           (((C5442 + C5443) * C253 + (C5444 + C5445) * C50899 -
             (C13702 + C13703) * C254 - (C13704 + C13705) * C50686) *
                C50915 +
            ((C13703 + C13702) * C253 + (C13705 + C13704) * C50899 -
             (C2177 * C722 + C50616 * C734 + C2176 * C723 + C2171 * C735) *
                 C254 -
             (C2177 * C738 + C50616 * C746 + C2176 * C739 + C2171 * C747) *
                 C50686) *
                C50809) *
               C50835) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C253 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C50899 -
             (C2373 + C2374) * C254 - (C2375 + C2376) * C50686) *
                C50915 +
            ((C2374 + C2373) * C253 + (C2376 + C2375) * C50899 -
             (C2377 + C2378) * C254 - (C2379 + C2380) * C50686) *
                C50809) *
               C50916 +
           (((C5426 + C5427) * C253 + (C5428 + C5429) * C50899 - C14418 * C254 -
             C14419 * C50686) *
                C50915 +
            (C14422 * C253 + C14423 * C50899 - C3047 * C254 - C3048 * C50686) *
                C50809) *
               C50835) *
              C50636 * C848 +
          (((C14422 * C254 -
             ((C5429 + C5428) * C50899 + (C5427 + C5426) * C253) +
             C14423 * C50686) *
                C50915 +
            (C14420 * C254 - (C14419 * C50899 + C14418 * C253) +
             C14421 * C50686) *
                C50809) *
               C50916 +
           ((C14812 * C254 -
             ((C5433 + C5432) * C50899 + (C5431 + C5430) * C253) +
             C14813 * C50686) *
                C50915 +
            ((C3382 + C3381) * C254 - (C6191 * C50899 + C6190 * C253) +
             (C3384 + C3383) * C50686) *
                C50809) *
               C50835) *
              C50636 * C849 +
          ((C6208 * C50915 +
            (C14812 * C253 + C14813 * C50899 - (C3381 + C3382) * C254 -
             (C3383 + C3384) * C50686) *
                C50809) *
               C50916 +
           (((C6029 + C6028) * C253 + (C6027 + C6026) * C50899 -
             (C6204 + C6203) * C254 - (C6206 + C6205) * C50686) *
                C50915 +
            ((C6203 + C6204) * C253 + (C6205 + C6206) * C50899 -
             (C2177 * C3482 + C50616 * C3488 + C2176 * C3483 + C2171 * C3489) *
                 C254 -
             (C2177 * C3486 + C50616 * C3494 + C2176 * C3487 + C2171 * C3495) *
                 C50686) *
                C50809) *
               C50835) *
              C50636 * C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C506 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C501 -
             (C2373 + C2374) * C507 - (C2375 + C2376) * C502 + C2701 * C508 +
             C2702 * C503) *
                C50915 +
            ((C2374 + C2373) * C506 + (C2376 + C2375) * C501 -
             (C2377 + C2378) * C507 - (C2379 + C2380) * C502 +
             (C2721 + C2722) * C508 + (C2723 + C2724) * C503) *
                C50809) *
               C50916 +
           (((C5426 + C5427) * C506 + (C5428 + C5429) * C501 - C14418 * C507 -
             C14419 * C502 + C14420 * C508 + C14421 * C503) *
                C50915 +
            (C14422 * C506 + C14423 * C501 - C3047 * C507 - C3048 * C502 +
             (C3044 + C3043) * C508 + (C3046 + C3045) * C503) *
                C50809) *
               C50835) *
              C50636 * C50901 +
          (((C14422 * C507 - ((C5429 + C5428) * C501 + (C5427 + C5426) * C506) +
             C14423 * C502 - C3047 * C508 - C3048 * C503) *
                C50915 +
            (C14420 * C507 - (C14419 * C501 + C14418 * C506) + C14421 * C502 -
             (C3043 + C3044) * C508 - (C3045 + C3046) * C503) *
                C50809) *
               C50916 +
           (((C3378 + C3377) * C507 -
             ((C5433 + C5432) * C501 + (C5431 + C5430) * C506) +
             (C3380 + C3379) * C502 - (C3381 + C3382) * C508 -
             (C3383 + C3384) * C503) *
                C50915 +
            ((C3382 + C3381) * C507 - (C6191 * C501 + C6190 * C506) +
             (C3384 + C3383) * C502 -
             (C2177 * C3352 + C50616 * C3354 + C2176 * C3353 + C2171 * C3355) *
                 C508 -
             (C2177 * C3356 + C50616 * C3358 + C2176 * C3357 + C2171 * C3359) *
                 C503) *
                C50809) *
               C50835) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                  C121 +
              (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                  C50670) *
                 C50915 +
             ((C2374 + C2373) * C121 + (C2376 + C2375) * C50670) * C50809) *
                C50916 +
            (((C5426 + C5427) * C121 + (C5428 + C5429) * C50670) * C50915 +
             ((C3035 + C3036) * C121 + (C3037 + C3038) * C50670) * C50809) *
                C50835) *
               C250 -
           ((((C4007 + C4008) * C50670 + (C4005 + C4006) * C121) * C50809 +
             ((C5438 + C5439) * C50670 + (C5440 + C5441) * C121) * C50915) *
                C50835 +
            (((C2384 + C2383) * C50670 + (C2382 + C2381) * C121) * C50809 +
             ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                  C50670 +
              (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                  C121) *
                 C50915) *
                C50916) *
               C251 +
           ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                  C121 +
              (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                  C50670) *
                 C50915 +
             ((C2390 + C2389) * C121 + (C2392 + C2391) * C50670) * C50809) *
                C50916 +
            (((C5442 + C5443) * C121 + (C5444 + C5445) * C50670) * C50915 +
             ((C13703 + C13702) * C121 + (C13705 + C13704) * C50670) * C50809) *
                C50835) *
               C252) *
              C50901 +
          (((((C5441 + C5440) * C121 + (C5439 + C5438) * C50670) * C50915 +
             ((C4006 + C4005) * C121 + (C4008 + C4007) * C50670) * C50809) *
                C50916 +
            (((C5437 + C5436) * C121 + (C5435 + C5434) * C50670) * C50915 +
             ((C6832 + C6833) * C121 + (C6834 + C6835) * C50670) * C50809) *
                C50835) *
               C251 -
           (((C6191 * C50670 + C6190 * C121) * C50809 +
             ((C5433 + C5432) * C50670 + (C5431 + C5430) * C121) * C50915) *
                C50835 +
            (((C3038 + C3037) * C50670 + (C3036 + C3035) * C121) * C50809 +
             ((C5429 + C5428) * C50670 + (C5427 + C5426) * C121) * C50915) *
                C50916) *
               C250 -
           ((((C2177 * C977 + C50616 * C981 + C2176 * C978 + C2171 * C982) *
                  C50670 +
              (C2177 * C969 + C50616 * C973 + C2176 * C970 + C2171 * C974) *
                  C121) *
                 C50809 +
             ((C5449 + C5448) * C50670 + (C5447 + C5446) * C121) * C50915) *
                C50835 +
            (((C13704 + C13705) * C50670 + (C13702 + C13703) * C121) * C50809 +
             ((C5445 + C5444) * C50670 + (C5443 + C5442) * C121) * C50915) *
                C50916) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C50670) *
                C50915 +
            ((C2374 + C2373) * C121 + (C2376 + C2375) * C50670) * C50809) *
               C50916 +
           (((C5426 + C5427) * C121 + (C5428 + C5429) * C50670) * C50915 +
            (C14422 * C121 + C14423 * C50670) * C50809) *
               C50835) *
              C50636 * C1051 -
          (((C6191 * C50670 + C6190 * C121) * C50809 +
            ((C5433 + C5432) * C50670 + (C5431 + C5430) * C121) * C50915) *
               C50835 +
           ((C14419 * C50670 + C14418 * C121) * C50809 +
            ((C5429 + C5428) * C50670 + (C5427 + C5426) * C121) * C50915) *
               C50916) *
              C50636 * C1052 +
          ((C6030 * C50915 + (C14812 * C121 + C14813 * C50670) * C50809) *
               C50916 +
           (((C6029 + C6028) * C121 + (C6027 + C6026) * C50670) * C50915 +
            ((C6203 + C6204) * C121 + (C6205 + C6206) * C50670) * C50809) *
               C50835) *
              C50636 * C1053 -
          ((((C2177 * C6183 + C50616 * C6185 + C2176 * C6184 + C2171 * C6186) *
                 C50670 +
             (C2177 * C6179 + C50616 * C6181 + C2176 * C6180 + C2171 * C6182) *
                 C121) *
                C50809 +
            ((C6331 + C6330) * C50670 + (C6329 + C6328) * C121) * C50915) *
               C50835 +
           (((C6206 + C6205) * C50670 + (C6204 + C6203) * C121) * C50809 +
            C6332 * C50915) *
               C50916) *
              C50636 * C1054)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                  C121 +
              (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                  C50670) *
                 C50915 +
             ((C2374 + C2373) * C121 + (C2376 + C2375) * C50670) * C50809) *
                C50916 +
            (((C5426 + C5427) * C121 + (C5428 + C5429) * C50670) * C50915 +
             (C14422 * C121 + C14423 * C50670) * C50809) *
                C50835) *
               C50945 -
           (((C15592 * C50670 + C15593 * C121) * C50809 +
             ((C5438 + C5439) * C50670 + (C5440 + C5441) * C121) * C50915) *
                C50835 +
            (((C2384 + C2383) * C50670 + (C2382 + C2381) * C121) * C50809 +
             ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                  C50670 +
              (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                  C121) *
                 C50915) *
                C50916) *
               C50930 +
           ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                  C121 +
              (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                  C50670) *
                 C50915 +
             ((C2390 + C2389) * C121 + (C2392 + C2391) * C50670) * C50809) *
                C50916 +
            (((C5442 + C5443) * C121 + (C5444 + C5445) * C50670) * C50915 +
             ((C13703 + C13702) * C121 + (C13705 + C13704) * C50670) * C50809) *
                C50835) *
               C1173) *
              C1514 +
          (((((C5441 + C5440) * C121 + (C5439 + C5438) * C50670) * C50915 +
             (C15590 * C121 + C15591 * C50670) * C50809) *
                C50916 +
            (((C5437 + C5436) * C121 + (C5435 + C5434) * C50670) * C50915 +
             ((C6832 + C6833) * C121 + (C6834 + C6835) * C50670) * C50809) *
                C50835) *
               C50930 -
           (((C6191 * C50670 + C6190 * C121) * C50809 +
             ((C5433 + C5432) * C50670 + (C5431 + C5430) * C121) * C50915) *
                C50835 +
            ((C14419 * C50670 + C14418 * C121) * C50809 +
             ((C5429 + C5428) * C50670 + (C5427 + C5426) * C121) * C50915) *
                C50916) *
               C50945 -
           ((((C2177 * C977 + C50616 * C981 + C2176 * C978 + C2171 * C982) *
                  C50670 +
              (C2177 * C969 + C50616 * C973 + C2176 * C970 + C2171 * C974) *
                  C121) *
                 C50809 +
             ((C5449 + C5448) * C50670 + (C5447 + C5446) * C121) * C50915) *
                C50835 +
            (((C13704 + C13705) * C50670 + (C13702 + C13703) * C121) * C50809 +
             ((C5445 + C5444) * C50670 + (C5443 + C5442) * C121) * C50915) *
                C50916) *
               C1173) *
              C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                  C253 +
              (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                  C50899 -
              (C2373 + C2374) * C254 - (C2375 + C2376) * C50686) *
                 C50915 +
             ((C2374 + C2373) * C253 + (C2376 + C2375) * C50899 -
              (C2377 + C2378) * C254 - (C2379 + C2380) * C50686) *
                 C50809) *
                C50916 +
            (((C5426 + C5427) * C253 + (C5428 + C5429) * C50899 -
              C14418 * C254 - C14419 * C50686) *
                 C50915 +
             (C14422 * C253 + C14423 * C50899 - C3047 * C254 - C3048 * C50686) *
                 C50809) *
                C50835) *
               C1277 +
           ((((C2381 + C2382) * C254 -
              ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                   C50899 +
               (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                   C253) +
              (C2383 + C2384) * C50686) *
                 C50915 +
             ((C2385 + C2386) * C254 -
              ((C2384 + C2383) * C50899 + (C2382 + C2381) * C253) +
              (C2387 + C2388) * C50686) *
                 C50809) *
                C50916 +
            ((C15590 * C254 -
              ((C5438 + C5439) * C50899 + (C5440 + C5441) * C253) +
              C15591 * C50686) *
                 C50915 +
             ((C4010 + C4009) * C254 - (C15592 * C50899 + C15593 * C253) +
              (C4012 + C4011) * C50686) *
                 C50809) *
                C50835) *
               C50641) *
              C1514 +
          ((((C14422 * C254 -
              ((C5429 + C5428) * C50899 + (C5427 + C5426) * C253) +
              C14423 * C50686) *
                 C50915 +
             (C14420 * C254 - (C14419 * C50899 + C14418 * C253) +
              C14421 * C50686) *
                 C50809) *
                C50916 +
            ((C14812 * C254 -
              ((C5433 + C5432) * C50899 + (C5431 + C5430) * C253) +
              C14813 * C50686) *
                 C50915 +
             ((C3382 + C3381) * C254 - (C6191 * C50899 + C6190 * C253) +
              (C3384 + C3383) * C50686) *
                 C50809) *
                C50835) *
               C1277 +
           ((((C5441 + C5440) * C253 + (C5439 + C5438) * C50899 -
              C15593 * C254 - C15592 * C50686) *
                 C50915 +
             (C15590 * C253 + C15591 * C50899 - (C4009 + C4010) * C254 -
              (C4011 + C4012) * C50686) *
                 C50809) *
                C50916 +
            (((C5437 + C5436) * C253 + (C5435 + C5434) * C50899 -
              (C6833 + C6832) * C254 - (C6835 + C6834) * C50686) *
                 C50915 +
             ((C6832 + C6833) * C253 + (C6834 + C6835) * C50899 -
              (C2177 * C3196 + C50616 * C3202 + C2176 * C3195 + C2171 * C3198) *
                  C254 -
              (C2177 * C3201 + C50616 * C3205 + C2176 * C3200 + C2171 * C3204) *
                  C50686) *
                 C50809) *
                C50835) *
               C50641) *
              C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                  C121 +
              (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                  C50670) *
                 C50915 +
             ((C2374 + C2373) * C121 + (C2376 + C2375) * C50670) * C50809) *
                C50916 +
            (((C5426 + C5427) * C121 + (C5428 + C5429) * C50670) * C50915 +
             (C14422 * C121 + C14423 * C50670) * C50809) *
                C50835) *
               C1277 -
           (((C15592 * C50670 + C15593 * C121) * C50809 +
             ((C5438 + C5439) * C50670 + (C5440 + C5441) * C121) * C50915) *
                C50835 +
            (((C2384 + C2383) * C50670 + (C2382 + C2381) * C121) * C50809 +
             ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                  C50670 +
              (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                  C121) *
                 C50915) *
                C50916) *
               C50641) *
              C50947 +
          (((((C5441 + C5440) * C121 + (C5439 + C5438) * C50670) * C50915 +
             (C15590 * C121 + C15591 * C50670) * C50809) *
                C50916 +
            (((C5437 + C5436) * C121 + (C5435 + C5434) * C50670) * C50915 +
             ((C6832 + C6833) * C121 + (C6834 + C6835) * C50670) * C50809) *
                C50835) *
               C50641 -
           (((C6191 * C50670 + C6190 * C121) * C50809 +
             ((C5433 + C5432) * C50670 + (C5431 + C5430) * C121) * C50915) *
                C50835 +
            ((C14419 * C50670 + C14418 * C121) * C50809 +
             ((C5429 + C5428) * C50670 + (C5427 + C5426) * C121) * C50915) *
                C50916) *
               C1277) *
              C50936 +
          (((C6030 * C50915 + (C14812 * C121 + C14813 * C50670) * C50809) *
                C50916 +
            (((C6029 + C6028) * C121 + (C6027 + C6026) * C50670) * C50915 +
             ((C6203 + C6204) * C121 + (C6205 + C6206) * C50670) * C50809) *
                C50835) *
               C1277 -
           ((((C2177 * C6821 + C50616 * C6822 + C2176 * C3490 + C2171 * C3496) *
                  C50670 +
              (C2177 * C6819 + C50616 * C6820 + C2176 * C3484 + C2171 * C3492) *
                  C121) *
                 C50809 +
             ((C6025 + C6024) * C50670 + (C6023 + C6022) * C121) * C50915) *
                C50835 +
            (((C6835 + C6834) * C50670 + (C6833 + C6832) * C121) * C50809 +
             C6031 * C50915) *
                C50916) *
               C50641) *
              C1746)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C50670) *
                C50915 +
            ((C2374 + C2373) * C121 + (C2376 + C2375) * C50670) * C50809) *
               C50916 +
           (((C5426 + C5427) * C121 + (C5428 + C5429) * C50670) * C50915 +
            ((C3035 + C3036) * C121 + (C3037 + C3038) * C50670) * C50809) *
               C50835) *
              C112 -
          ((((C4007 + C4008) * C50670 + (C4005 + C4006) * C121) * C50809 +
            ((C5438 + C5439) * C50670 + (C5440 + C5441) * C121) * C50915) *
               C50835 +
           (((C2384 + C2383) * C50670 + (C2382 + C2381) * C121) * C50809 +
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C50670 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C50915) *
               C50916) *
              C113 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                 C50670) *
                C50915 +
            ((C2390 + C2389) * C121 + (C2392 + C2391) * C50670) * C50809) *
               C50916 +
           (((C5442 + C5443) * C121 + (C5444 + C5445) * C50670) * C50915 +
            ((C2176 * C720 + C2171 * C728 + C2177 * C721 + C50616 * C729) *
                 C121 +
             (C2176 * C732 + C2171 * C744 + C2177 * C733 + C50616 * C745) *
                 C50670) *
                C50809) *
               C50835) *
              C114 -
          ((((C2177 * C1414 + C50616 * C1415 + C2176 * C733 + C2171 * C745) *
                 C50670 +
             (C2177 * C1412 + C50616 * C1413 + C2176 * C721 + C2171 * C729) *
                 C121) *
                C50809 +
            ((C2177 * C392 + C50616 * C400 + C2176 * C391 + C2171 * C399) *
                 C50670 +
             (C2177 * C382 + C50616 * C388 + C2176 * C381 + C2171 * C387) *
                 C121) *
                C50915) *
               C50835 +
           (((C2177 * C270 + C50616 * C277 + C2176 * C265 + C2171 * C273) *
                 C50670 +
             (C2177 * C259 + C50616 * C269 + C2176 * C255 + C2171 * C261) *
                 C121) *
                C50809 +
            ((C2177 * C137 + C50616 * C147 + C2176 * C136 + C2171 * C146) *
                 C50670 +
             (C2177 * C126 + C50616 * C138 + C2176 * C125 + C2171 * C132) *
                 C121) *
                C50915) *
               C50916) *
              C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C506 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C501 -
             (C2373 + C2374) * C507 - (C2375 + C2376) * C502 + C2701 * C508 +
             C2702 * C503) *
                C50915 +
            ((C2374 + C2373) * C506 + (C2376 + C2375) * C501 -
             (C2377 + C2378) * C507 - (C2379 + C2380) * C502 +
             (C2721 + C2722) * C508 + (C2723 + C2724) * C503) *
                C50809) *
               C50916 +
           (((C5426 + C5427) * C506 + (C5428 + C5429) * C501 -
             (C3036 + C3035) * C507 - (C3038 + C3037) * C502 +
             (C3040 + C3039) * C508 + (C3042 + C3041) * C503) *
                C50915 +
            ((C3035 + C3036) * C506 + (C3037 + C3038) * C501 - C3047 * C507 -
             C3048 * C502 + (C3044 + C3043) * C508 + (C3046 + C3045) * C503) *
                C50809) *
               C50835) *
              C50892 +
          ((((C2381 + C2382) * C507 -
             ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                  C501 +
              (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                  C506) +
             (C2383 + C2384) * C502 - C2711 * C508 - C2712 * C503) *
                C50915 +
            ((C2385 + C2386) * C507 -
             ((C2384 + C2383) * C501 + (C2382 + C2381) * C506) +
             (C2387 + C2388) * C502 - (C2725 + C2726) * C508 -
             (C2727 + C2728) * C503) *
                C50809) *
               C50916 +
           (((C4006 + C4005) * C507 -
             ((C5438 + C5439) * C501 + (C5440 + C5441) * C506) +
             (C4008 + C4007) * C502 - (C4009 + C4010) * C508 -
             (C4011 + C4012) * C503) *
                C50915 +
            ((C4010 + C4009) * C507 -
             ((C4007 + C4008) * C501 + (C4005 + C4006) * C506) +
             (C4012 + C4011) * C502 -
             (C2177 * C3984 + C50616 * C3985 + C2176 * C2994 + C2171 * C2998) *
                 C508 -
             (C2177 * C3986 + C50616 * C3987 + C2176 * C3000 + C2171 * C3006) *
                 C503) *
                C50809) *
               C50835) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C253 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C50899 -
             (C2373 + C2374) * C254 - (C2375 + C2376) * C50686) *
                C50915 +
            ((C2374 + C2373) * C253 + (C2376 + C2375) * C50899 -
             (C2377 + C2378) * C254 - (C2379 + C2380) * C50686) *
                C50809) *
               C50916 +
           (((C5426 + C5427) * C253 + (C5428 + C5429) * C50899 -
             (C3036 + C3035) * C254 - (C3038 + C3037) * C50686) *
                C50915 +
            ((C3035 + C3036) * C253 + (C3037 + C3038) * C50899 - C3047 * C254 -
             C3048 * C50686) *
                C50809) *
               C50835) *
              C250 +
          ((((C2381 + C2382) * C254 -
             ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                  C50899 +
              (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                  C253) +
             (C2383 + C2384) * C50686) *
                C50915 +
            ((C2385 + C2386) * C254 -
             ((C2384 + C2383) * C50899 + (C2382 + C2381) * C253) +
             (C2387 + C2388) * C50686) *
                C50809) *
               C50916 +
           (((C4006 + C4005) * C254 -
             ((C5438 + C5439) * C50899 + (C5440 + C5441) * C253) +
             (C4008 + C4007) * C50686) *
                C50915 +
            ((C4010 + C4009) * C254 -
             ((C4007 + C4008) * C50899 + (C4005 + C4006) * C253) +
             (C4012 + C4011) * C50686) *
                C50809) *
               C50835) *
              C251 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                 C253 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                 C50899 -
             (C2389 + C2390) * C254 - (C2391 + C2392) * C50686) *
                C50915 +
            ((C2390 + C2389) * C253 + (C2392 + C2391) * C50899 -
             (C2393 + C2394) * C254 - (C2395 + C2396) * C50686) *
                C50809) *
               C50916 +
           (((C5442 + C5443) * C253 + (C5444 + C5445) * C50899 -
             (C13702 + C13703) * C254 - (C13704 + C13705) * C50686) *
                C50915 +
            ((C13703 + C13702) * C253 + (C13705 + C13704) * C50899 -
             (C2177 * C722 + C50616 * C734 + C2176 * C723 + C2171 * C735) *
                 C254 -
             (C2177 * C738 + C50616 * C746 + C2176 * C739 + C2171 * C747) *
                 C50686) *
                C50809) *
               C50835) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C600 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C595 -
            (C2373 + C2374) * C601 - (C2375 + C2376) * C596 + C2701 * C602 +
            C2702 * C597 - C2835 * C603 - C2836 * C598) *
               C50915 +
           ((C2374 + C2373) * C600 + (C2376 + C2375) * C595 -
            (C2377 + C2378) * C601 - (C2379 + C2380) * C596 +
            (C2721 + C2722) * C602 + (C2723 + C2724) * C597 -
            (C2845 + C2846) * C603 - (C2847 + C2848) * C598) *
               C50809) *
              C50916 +
          (((C5426 + C5427) * C600 + (C5428 + C5429) * C595 -
            (C3036 + C3035) * C601 - (C3038 + C3037) * C596 +
            (C3040 + C3039) * C602 + (C3042 + C3041) * C597 -
            (C3043 + C3044) * C603 - (C3045 + C3046) * C598) *
               C50915 +
           ((C3035 + C3036) * C600 + (C3037 + C3038) * C595 - C3047 * C601 -
            C3048 * C596 + (C3044 + C3043) * C602 + (C3046 + C3045) * C597 -
            (C2177 * C2996 + C50616 * C3002 + C2176 * C2997 + C2171 * C3003) *
                C603 -
            (C2177 * C3004 + C50616 * C3008 + C2176 * C3005 + C2171 * C3009) *
                C598) *
               C50809) *
              C50835) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                  C121 +
              (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                  C50670) *
                 C50915 +
             ((C2374 + C2373) * C121 + (C2376 + C2375) * C50670) * C50809) *
                C50916 +
            (((C5426 + C5427) * C121 + (C5428 + C5429) * C50670) * C50915 +
             ((C3035 + C3036) * C121 + (C3037 + C3038) * C50670) * C50809) *
                C50835) *
               C250 -
           ((((C4007 + C4008) * C50670 + (C4005 + C4006) * C121) * C50809 +
             ((C5438 + C5439) * C50670 + (C5440 + C5441) * C121) * C50915) *
                C50835 +
            (((C2384 + C2383) * C50670 + (C2382 + C2381) * C121) * C50809 +
             ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                  C50670 +
              (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                  C121) *
                 C50915) *
                C50916) *
               C251 +
           ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                  C121 +
              (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                  C50670) *
                 C50915 +
             ((C2390 + C2389) * C121 + (C2392 + C2391) * C50670) * C50809) *
                C50916 +
            (((C5442 + C5443) * C121 + (C5444 + C5445) * C50670) * C50915 +
             ((C13703 + C13702) * C121 + (C13705 + C13704) * C50670) * C50809) *
                C50835) *
               C252) *
              C50901 +
          (((((C5441 + C5440) * C121 + (C5439 + C5438) * C50670) * C50915 +
             ((C4006 + C4005) * C121 + (C4008 + C4007) * C50670) * C50809) *
                C50916 +
            (((C5437 + C5436) * C121 + (C5435 + C5434) * C50670) * C50915 +
             ((C6832 + C6833) * C121 + (C6834 + C6835) * C50670) * C50809) *
                C50835) *
               C251 -
           (((C6191 * C50670 + C6190 * C121) * C50809 +
             ((C5433 + C5432) * C50670 + (C5431 + C5430) * C121) * C50915) *
                C50835 +
            (((C3038 + C3037) * C50670 + (C3036 + C3035) * C121) * C50809 +
             ((C5429 + C5428) * C50670 + (C5427 + C5426) * C121) * C50915) *
                C50916) *
               C250 -
           ((((C2177 * C977 + C50616 * C981 + C2176 * C978 + C2171 * C982) *
                  C50670 +
              (C2177 * C969 + C50616 * C973 + C2176 * C970 + C2171 * C974) *
                  C121) *
                 C50809 +
             ((C5449 + C5448) * C50670 + (C5447 + C5446) * C121) * C50915) *
                C50835 +
            (((C13704 + C13705) * C50670 + (C13702 + C13703) * C121) * C50809 +
             ((C5445 + C5444) * C50670 + (C5443 + C5442) * C121) * C50915) *
                C50916) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C506 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C501 -
             (C2373 + C2374) * C507 - (C2375 + C2376) * C502 + C2701 * C508 +
             C2702 * C503) *
                C50915 +
            ((C2374 + C2373) * C506 + (C2376 + C2375) * C501 -
             (C2377 + C2378) * C507 - (C2379 + C2380) * C502 +
             (C2721 + C2722) * C508 + (C2723 + C2724) * C503) *
                C50809) *
               C50916 +
           (((C5426 + C5427) * C506 + (C5428 + C5429) * C501 - C14418 * C507 -
             C14419 * C502 + C14420 * C508 + C14421 * C503) *
                C50915 +
            (C14422 * C506 + C14423 * C501 - C3047 * C507 - C3048 * C502 +
             (C3044 + C3043) * C508 + (C3046 + C3045) * C503) *
                C50809) *
               C50835) *
              C50636 * C50901 +
          (((C14422 * C507 - ((C5429 + C5428) * C501 + (C5427 + C5426) * C506) +
             C14423 * C502 - C3047 * C508 - C3048 * C503) *
                C50915 +
            (C14420 * C507 - (C14419 * C501 + C14418 * C506) + C14421 * C502 -
             (C3043 + C3044) * C508 - (C3045 + C3046) * C503) *
                C50809) *
               C50916 +
           (((C3378 + C3377) * C507 -
             ((C5433 + C5432) * C501 + (C5431 + C5430) * C506) +
             (C3380 + C3379) * C502 - (C3381 + C3382) * C508 -
             (C3383 + C3384) * C503) *
                C50915 +
            ((C3382 + C3381) * C507 - (C6191 * C501 + C6190 * C506) +
             (C3384 + C3383) * C502 -
             (C2177 * C3352 + C50616 * C3354 + C2176 * C3353 + C2171 * C3355) *
                 C508 -
             (C2177 * C3356 + C50616 * C3358 + C2176 * C3357 + C2171 * C3359) *
                 C503) *
                C50809) *
               C50835) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C1174 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C1169 -
            (C2373 + C2374) * C1175 - (C2375 + C2376) * C50686) *
               C2173 +
           ((C2374 + C2373) * C1174 + (C2376 + C2375) * C1169 -
            (C2377 + C2378) * C1175 - (C2379 + C2380) * C50686) *
               C2174 +
           (C2701 * C1174 + C2702 * C1169 - C2835 * C1175 - C2836 * C50686) *
               C2175) *
              C50771 * C50945 +
          (((C2381 + C2382) * C1175 -
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C1169 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C1174) +
            (C2383 + C2384) * C50686) *
               C2173 +
           ((C2385 + C2386) * C1175 -
            ((C2384 + C2383) * C1169 + (C2382 + C2381) * C1174) +
            (C2387 + C2388) * C50686) *
               C2174 +
           ((C2726 + C2725) * C1175 - (C2712 * C1169 + C2711 * C1174) +
            (C2728 + C2727) * C50686) *
               C2175) *
              C50771 * C50930 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                C1174 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                C1169 -
            (C2389 + C2390) * C1175 - (C2391 + C2392) * C50686) *
               C2173 +
           ((C2390 + C2389) * C1174 + (C2392 + C2391) * C1169 -
            (C2393 + C2394) * C1175 - (C2395 + C2396) * C50686) *
               C2174 +
           ((C2394 + C2393) * C1174 + (C2396 + C2395) * C1169 -
            (C2177 * C604 + C50616 * C608 + C2176 * C605 + C2171 * C609) *
                C1175 -
            (C2177 * C612 + C50616 * C616 + C2176 * C613 + C2171 * C617) *
                C50686) *
               C2175) *
              C50771 * C1173) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C1174 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C1169 -
           (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
            C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
               C1175 -
           (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
            C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
               C50686) *
              C50759 * C50771 * C50945 +
          ((C117 * C257 + C105 * C263 + C118 * C256 + C106 * C262 +
            C119 * C255 + C107 * C261 + C120 * C259 + C108 * C269) *
               C1175 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C1169 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C1174) +
           (C117 * C267 + C105 * C275 + C118 * C266 + C106 * C274 +
            C119 * C265 + C107 * C273 + C120 * C270 + C108 * C277) *
               C50686) *
              C50759 * C50771 * C50930 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C1174 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C1169 -
           (C120 * C260 + C108 * C271 + C119 * C259 + C107 * C269 +
            C118 * C255 + C106 * C261 + C117 * C256 + C105 * C262) *
               C1175 -
           (C120 * C272 + C108 * C278 + C119 * C270 + C107 * C277 +
            C118 * C265 + C106 * C273 + C117 * C266 + C105 * C274) *
               C50686) *
              C50759 * C50771 * C1173) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C1174 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C1169 -
            (C2373 + C2374) * C1175 - (C2375 + C2376) * C50686) *
               C50759 * C5082 +
           ((C5426 + C5427) * C1174 + (C5428 + C5429) * C1169 -
            (C3036 + C3035) * C1175 - (C3038 + C3037) * C50686) *
               C50759 * C5083 +
           (C5998 * C1174 + C5999 * C1169 - C6190 * C1175 - C6191 * C50686) *
               C50759 * C5084) *
              C50945 +
          (((C2381 + C2382) * C1175 -
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C1169 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C1174) +
            (C2383 + C2384) * C50686) *
               C50759 * C5082 +
           ((C4006 + C4005) * C1175 -
            ((C5438 + C5439) * C1169 + (C5440 + C5441) * C1174) +
            (C4008 + C4007) * C50686) *
               C50759 * C5083 +
           ((C2176 * C971 + C2171 * C975 + C2177 * C970 + C50616 * C974) *
                C1175 -
            (C6000 * C1169 + C6001 * C1174) +
            (C2176 * C979 + C2171 * C983 + C2177 * C978 + C50616 * C982) *
                C50686) *
               C50759 * C5084) *
              C50930 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                C1174 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                C1169 -
            (C2389 + C2390) * C1175 - (C2391 + C2392) * C50686) *
               C50759 * C5082 +
           ((C5442 + C5443) * C1174 + (C5444 + C5445) * C1169 -
            (C2177 * C721 + C50616 * C729 + C2176 * C720 + C2171 * C728) *
                C1175 -
            (C2177 * C733 + C50616 * C745 + C2176 * C732 + C2171 * C744) *
                C50686) *
               C50759 * C5083 +
           ((C5446 + C5447) * C1174 + (C5448 + C5449) * C1169 -
            (C2177 * C969 + C50616 * C973 + C2176 * C970 + C2171 * C974) *
                C1175 -
            (C2177 * C977 + C50616 * C981 + C2176 * C978 + C2171 * C982) *
                C50686) *
               C50759 * C5084) *
              C1173) *
         C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C1279 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C50946 -
            (C2373 + C2374) * C1280 - (C2375 + C2376) * C50933 + C2701 * C1281 +
            C2702 * C1276) *
               C2173 +
           ((C2374 + C2373) * C1279 + (C2376 + C2375) * C50946 -
            (C2377 + C2378) * C1280 - (C2379 + C2380) * C50933 +
            (C2721 + C2722) * C1281 + (C2723 + C2724) * C1276) *
               C2174 +
           (C2701 * C1279 + C2702 * C50946 - C2835 * C1280 - C2836 * C50933 +
            (C2846 + C2845) * C1281 + (C2848 + C2847) * C1276) *
               C2175) *
              C50771 * C1277 +
          (((C2381 + C2382) * C1280 -
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C50946 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C1279) +
            (C2383 + C2384) * C50933 - C2711 * C1281 - C2712 * C1276) *
               C2173 +
           ((C2385 + C2386) * C1280 -
            ((C2384 + C2383) * C50946 + (C2382 + C2381) * C1279) +
            (C2387 + C2388) * C50933 - (C2725 + C2726) * C1281 -
            (C2727 + C2728) * C1276) *
               C2174 +
           ((C2726 + C2725) * C1280 - (C2712 * C50946 + C2711 * C1279) +
            (C2728 + C2727) * C50933 -
            (C2177 * C2690 + C50616 * C2695 + C2176 * C2689 + C2171 * C2692) *
                C1281 -
            (C2177 * C2696 + C50616 * C2699 + C2176 * C2694 + C2171 * C2698) *
                C1276) *
               C2175) *
              C50771 * C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C1279 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50946 -
           (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
            C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
               C1280 -
           (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
            C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
               C50933 +
           (C117 * C509 + C105 * C514 + C118 * C510 + C106 * C515 +
            C119 * C511 + C107 * C516 + C120 * C512 + C108 * C517) *
               C1281 +
           (C117 * C518 + C105 * C524 + C118 * C519 + C106 * C525 +
            C119 * C520 + C107 * C526 + C120 * C521 + C108 * C527) *
               C1276) *
              C50759 * C50771 * C1277 +
          ((C117 * C257 + C105 * C263 + C118 * C256 + C106 * C262 +
            C119 * C255 + C107 * C261 + C120 * C259 + C108 * C269) *
               C1280 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50946 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C1279) +
           (C117 * C267 + C105 * C275 + C118 * C266 + C106 * C274 +
            C119 * C265 + C107 * C273 + C120 * C270 + C108 * C277) *
               C50933 -
           (C120 * C513 + C108 * C522 + C119 * C512 + C107 * C517 +
            C118 * C511 + C106 * C516 + C117 * C510 + C105 * C515) *
               C1281 -
           (C120 * C523 + C108 * C528 + C119 * C521 + C107 * C527 +
            C118 * C520 + C106 * C526 + C117 * C519 + C105 * C525) *
               C1276) *
              C50759 * C50771 * C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C1279 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C50946 -
            (C2373 + C2374) * C1280 - (C2375 + C2376) * C50933 + C2701 * C1281 +
            C2702 * C1276) *
               C50759 * C5082 +
           ((C5426 + C5427) * C1279 + (C5428 + C5429) * C50946 -
            (C3036 + C3035) * C1280 - (C3038 + C3037) * C50933 +
            (C3040 + C3039) * C1281 + (C3042 + C3041) * C1276) *
               C50759 * C5083 +
           (C5998 * C1279 + C5999 * C50946 - C6190 * C1280 - C6191 * C50933 +
            (C3382 + C3381) * C1281 + (C3384 + C3383) * C1276) *
               C50759 * C5084) *
              C1277 +
          (((C2381 + C2382) * C1280 -
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C50946 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C1279) +
            (C2383 + C2384) * C50933 - C2711 * C1281 - C2712 * C1276) *
               C50759 * C5082 +
           ((C4006 + C4005) * C1280 -
            ((C5438 + C5439) * C50946 + (C5440 + C5441) * C1279) +
            (C4008 + C4007) * C50933 - (C4009 + C4010) * C1281 -
            (C4011 + C4012) * C1276) *
               C50759 * C5083 +
           ((C2176 * C971 + C2171 * C975 + C2177 * C970 + C50616 * C974) *
                C1280 -
            (C6000 * C50946 + C6001 * C1279) +
            (C2176 * C979 + C2171 * C983 + C2177 * C978 + C50616 * C982) *
                C50933 -
            (C2177 * C3196 + C50616 * C3202 + C2176 * C3195 + C2171 * C3198) *
                C1281 -
            (C2177 * C3201 + C50616 * C3205 + C2176 * C3200 + C2171 * C3204) *
                C1276) *
               C50759 * C5084) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C1174 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C1169 -
             (C2373 + C2374) * C1175 - (C2375 + C2376) * C50686) *
                C2173 +
            ((C2374 + C2373) * C1174 + (C2376 + C2375) * C1169 -
             (C2377 + C2378) * C1175 - (C2379 + C2380) * C50686) *
                C2174 +
            (C2701 * C1174 + C2702 * C1169 - C2835 * C1175 - C2836 * C50686) *
                C2175) *
               C50771 * C1277 +
           (((C2381 + C2382) * C1175 -
             ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                  C1169 +
              (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                  C1174) +
             (C2383 + C2384) * C50686) *
                C2173 +
            ((C2385 + C2386) * C1175 -
             ((C2384 + C2383) * C1169 + (C2382 + C2381) * C1174) +
             (C2387 + C2388) * C50686) *
                C2174 +
            ((C2726 + C2725) * C1175 - (C2712 * C1169 + C2711 * C1174) +
             (C2728 + C2727) * C50686) *
                C2175) *
               C50771 * C50641) *
              C50901 +
          ((((C3035 + C3036) * C1175 -
             ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                  C1169 +
              (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                  C1174) +
             (C3037 + C3038) * C50686) *
                C2173 +
            ((C3040 + C3039) * C1175 -
             ((C3038 + C3037) * C1169 + (C3036 + C3035) * C1174) +
             (C3042 + C3041) * C50686) *
                C2174 +
            ((C3044 + C3043) * C1175 - (C3048 * C1169 + C3047 * C1174) +
             (C3046 + C3045) * C50686) *
                C2175) *
               C50771 * C1277 +
           (((C2176 * C379 + C2171 * C385 + C2177 * C380 + C50616 * C386) *
                 C1174 +
             (C2176 * C389 + C2171 * C397 + C2177 * C390 + C50616 * C398) *
                 C1169 -
             (C4005 + C4006) * C1175 - (C4007 + C4008) * C50686) *
                C2173 +
            ((C4006 + C4005) * C1174 + (C4008 + C4007) * C1169 -
             (C4009 + C4010) * C1175 - (C4011 + C4012) * C50686) *
                C2174 +
            ((C4010 + C4009) * C1174 + (C4012 + C4011) * C1169 -
             (C2177 * C3984 + C50616 * C3985 + C2176 * C2994 + C2171 * C2998) *
                 C1175 -
             (C2177 * C3986 + C50616 * C3987 + C2176 * C3000 + C2171 * C3006) *
                 C50686) *
                C2175) *
               C50771 * C50641) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C1174 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C1169 -
            (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
             C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
                C1175 -
            (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
             C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
                C50686) *
               C50759 * C50771 * C1277 +
           ((C117 * C257 + C105 * C263 + C118 * C256 + C106 * C262 +
             C119 * C255 + C107 * C261 + C120 * C259 + C108 * C269) *
                C1175 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C1169 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C1174) +
            (C117 * C267 + C105 * C275 + C118 * C266 + C106 * C274 +
             C119 * C265 + C107 * C273 + C120 * C270 + C108 * C277) *
                C50686) *
               C50759 * C50771 * C50641) *
              C50901 +
          (((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C1175 -
            ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
              C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
                 C1169 +
             (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
              C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
                 C1174) +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C50686) *
               C50759 * C50771 * C1277 +
           ((C117 * C379 + C105 * C385 + C118 * C380 + C106 * C386 +
             C119 * C381 + C107 * C387 + C120 * C382 + C108 * C388) *
                C1174 +
            (C117 * C389 + C105 * C397 + C118 * C390 + C106 * C398 +
             C119 * C391 + C107 * C399 + C120 * C392 + C108 * C400) *
                C1169 -
            (C120 * C1412 + C108 * C1413 + C119 * C721 + C107 * C729 +
             C118 * C720 + C106 * C728 + C117 * C719 + C105 * C727) *
                C1175 -
            (C120 * C1414 + C108 * C1415 + C119 * C733 + C107 * C745 +
             C118 * C732 + C106 * C744 + C117 * C731 + C105 * C743) *
                C50686) *
               C50759 * C50771 * C50641) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C1174 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C1169 -
             (C2373 + C2374) * C1175 - (C2375 + C2376) * C50686) *
                C50759 * C5082 +
            ((C5426 + C5427) * C1174 + (C5428 + C5429) * C1169 -
             (C3036 + C3035) * C1175 - (C3038 + C3037) * C50686) *
                C50759 * C5083 +
            (C5998 * C1174 + C5999 * C1169 - C6190 * C1175 - C6191 * C50686) *
                C50759 * C5084) *
               C1277 +
           (((C2381 + C2382) * C1175 -
             ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                  C1169 +
              (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                  C1174) +
             (C2383 + C2384) * C50686) *
                C50759 * C5082 +
            ((C4006 + C4005) * C1175 -
             ((C5438 + C5439) * C1169 + (C5440 + C5441) * C1174) +
             (C4008 + C4007) * C50686) *
                C50759 * C5083 +
            ((C6832 + C6833) * C1175 - (C6000 * C1169 + C6001 * C1174) +
             (C6834 + C6835) * C50686) *
                C50759 * C5084) *
               C50641) *
              C50901 +
          ((((C3035 + C3036) * C1175 -
             ((C5429 + C5428) * C1169 + (C5427 + C5426) * C1174) +
             (C3037 + C3038) * C50686) *
                C50759 * C5082 +
            ((C3378 + C3377) * C1175 -
             ((C5433 + C5432) * C1169 + (C5431 + C5430) * C1174) +
             (C3380 + C3379) * C50686) *
                C50759 * C5083 +
            ((C6203 + C6204) * C1175 - (C6316 * C1169 + C6317 * C1174) +
             (C6205 + C6206) * C50686) *
                C50759 * C5084) *
               C1277 +
           (((C5441 + C5440) * C1174 + (C5439 + C5438) * C1169 -
             (C4005 + C4006) * C1175 - (C4007 + C4008) * C50686) *
                C50759 * C5082 +
            ((C5437 + C5436) * C1174 + (C5435 + C5434) * C1169 -
             (C6833 + C6832) * C1175 - (C6835 + C6834) * C50686) *
                C50759 * C5083 +
            ((C6022 + C6023) * C1174 + (C6024 + C6025) * C1169 -
             (C2177 * C6819 + C50616 * C6820 + C2176 * C3484 + C2171 * C3492) *
                 C1175 -
             (C2177 * C6821 + C50616 * C6822 + C2176 * C3490 + C2171 * C3496) *
                 C50686) *
                C50759 * C5084) *
               C50641) *
              C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C1174 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C1169 -
             (C2373 + C2374) * C1175 - (C2375 + C2376) * C50686) *
                C2173 +
            ((C2374 + C2373) * C1174 + (C2376 + C2375) * C1169 -
             (C2377 + C2378) * C1175 - (C2379 + C2380) * C50686) *
                C2174 +
            (C2701 * C1174 + C2702 * C1169 - C2835 * C1175 - C2836 * C50686) *
                C2175) *
               C50771 * C50892 +
           (((C2381 + C2382) * C1175 -
             ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                  C1169 +
              (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                  C1174) +
             (C2383 + C2384) * C50686) *
                C2173 +
            ((C2385 + C2386) * C1175 -
             ((C2384 + C2383) * C1169 + (C2382 + C2381) * C1174) +
             (C2387 + C2388) * C50686) *
                C2174 +
            ((C2726 + C2725) * C1175 - (C2712 * C1169 + C2711 * C1174) +
             (C2728 + C2727) * C50686) *
                C2175) *
               C50771 * C50641) *
              C1514 +
          ((((C3035 + C3036) * C1175 -
             ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                  C1169 +
              (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                  C1174) +
             (C3037 + C3038) * C50686) *
                C2173 +
            ((C3040 + C3039) * C1175 -
             ((C3038 + C3037) * C1169 + (C3036 + C3035) * C1174) +
             (C3042 + C3041) * C50686) *
                C2174 +
            ((C3044 + C3043) * C1175 - (C3048 * C1169 + C3047 * C1174) +
             (C3046 + C3045) * C50686) *
                C2175) *
               C50771 * C50892 +
           (((C2176 * C379 + C2171 * C385 + C2177 * C380 + C50616 * C386) *
                 C1174 +
             (C2176 * C389 + C2171 * C397 + C2177 * C390 + C50616 * C398) *
                 C1169 -
             (C4005 + C4006) * C1175 - (C4007 + C4008) * C50686) *
                C2173 +
            ((C4006 + C4005) * C1174 + (C4008 + C4007) * C1169 -
             (C4009 + C4010) * C1175 - (C4011 + C4012) * C50686) *
                C2174 +
            ((C4010 + C4009) * C1174 + (C4012 + C4011) * C1169 -
             (C2177 * C3984 + C50616 * C3985 + C2176 * C2994 + C2171 * C2998) *
                 C1175 -
             (C2177 * C3986 + C50616 * C3987 + C2176 * C3000 + C2171 * C3006) *
                 C50686) *
                C2175) *
               C50771 * C50641) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C1174 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C1169 -
            (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
             C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
                C1175 -
            (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
             C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
                C50686) *
               C50759 * C50771 * C50892 +
           ((C117 * C257 + C105 * C263 + C118 * C256 + C106 * C262 +
             C119 * C255 + C107 * C261 + C120 * C259 + C108 * C269) *
                C1175 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C1169 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C1174) +
            (C117 * C267 + C105 * C275 + C118 * C266 + C106 * C274 +
             C119 * C265 + C107 * C273 + C120 * C270 + C108 * C277) *
                C50686) *
               C50759 * C50771 * C50641) *
              C1514 +
          (((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C1175 -
            ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
              C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
                 C1169 +
             (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
              C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
                 C1174) +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C50686) *
               C50759 * C50771 * C50892 +
           ((C117 * C379 + C105 * C385 + C118 * C380 + C106 * C386 +
             C119 * C381 + C107 * C387 + C120 * C382 + C108 * C388) *
                C1174 +
            (C117 * C389 + C105 * C397 + C118 * C390 + C106 * C398 +
             C119 * C391 + C107 * C399 + C120 * C392 + C108 * C400) *
                C1169 -
            (C120 * C1412 + C108 * C1413 + C119 * C721 + C107 * C729 +
             C118 * C720 + C106 * C728 + C117 * C719 + C105 * C727) *
                C1175 -
            (C120 * C1414 + C108 * C1415 + C119 * C733 + C107 * C745 +
             C118 * C732 + C106 * C744 + C117 * C731 + C105 * C743) *
                C50686) *
               C50759 * C50771 * C50641) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C1174 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C1169 -
             (C2373 + C2374) * C1175 - (C2375 + C2376) * C50686) *
                C50759 * C5082 +
            ((C5426 + C5427) * C1174 + (C5428 + C5429) * C1169 -
             (C3036 + C3035) * C1175 - (C3038 + C3037) * C50686) *
                C50759 * C5083 +
            (C5998 * C1174 + C5999 * C1169 - C6190 * C1175 - C6191 * C50686) *
                C50759 * C5084) *
               C50892 +
           (((C2381 + C2382) * C1175 -
             ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                  C1169 +
              (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                  C1174) +
             (C2383 + C2384) * C50686) *
                C50759 * C5082 +
            ((C4006 + C4005) * C1175 -
             ((C5438 + C5439) * C1169 + (C5440 + C5441) * C1174) +
             (C4008 + C4007) * C50686) *
                C50759 * C5083 +
            ((C6832 + C6833) * C1175 - (C6000 * C1169 + C6001 * C1174) +
             (C6834 + C6835) * C50686) *
                C50759 * C5084) *
               C50641) *
              C1514 +
          ((((C3035 + C3036) * C1175 -
             ((C5429 + C5428) * C1169 + (C5427 + C5426) * C1174) +
             (C3037 + C3038) * C50686) *
                C50759 * C5082 +
            ((C3378 + C3377) * C1175 -
             ((C5433 + C5432) * C1169 + (C5431 + C5430) * C1174) +
             (C3380 + C3379) * C50686) *
                C50759 * C5083 +
            ((C6203 + C6204) * C1175 - (C6316 * C1169 + C6317 * C1174) +
             (C6205 + C6206) * C50686) *
                C50759 * C5084) *
               C50892 +
           (((C5441 + C5440) * C1174 + (C5439 + C5438) * C1169 -
             (C4005 + C4006) * C1175 - (C4007 + C4008) * C50686) *
                C50759 * C5082 +
            ((C5437 + C5436) * C1174 + (C5435 + C5434) * C1169 -
             (C6833 + C6832) * C1175 - (C6835 + C6834) * C50686) *
                C50759 * C5083 +
            ((C6022 + C6023) * C1174 + (C6024 + C6025) * C1169 -
             (C2177 * C6819 + C50616 * C6820 + C2176 * C3484 + C2171 * C3492) *
                 C1175 -
             (C2177 * C6821 + C50616 * C6822 + C2176 * C3490 + C2171 * C3496) *
                 C50686) *
                C50759 * C5084) *
               C50641) *
              C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C1279 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C50946 -
            (C2373 + C2374) * C1280 - (C2375 + C2376) * C50933 + C2701 * C1281 +
            C2702 * C1276) *
               C2173 +
           ((C2374 + C2373) * C1279 + (C2376 + C2375) * C50946 -
            (C2377 + C2378) * C1280 - (C2379 + C2380) * C50933 +
            (C2721 + C2722) * C1281 + (C2723 + C2724) * C1276) *
               C2174 +
           (C2701 * C1279 + C2702 * C50946 - C2835 * C1280 - C2836 * C50933 +
            (C2846 + C2845) * C1281 + (C2848 + C2847) * C1276) *
               C2175) *
              C50771 * C50636 * C1514 +
          (((C3035 + C3036) * C1280 -
            ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                 C50946 +
             (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                 C1279) +
            (C3037 + C3038) * C50933 - C3047 * C1281 - C3048 * C1276) *
               C2173 +
           ((C3040 + C3039) * C1280 -
            ((C3038 + C3037) * C50946 + (C3036 + C3035) * C1279) +
            (C3042 + C3041) * C50933 - (C3043 + C3044) * C1281 -
            (C3045 + C3046) * C1276) *
               C2174 +
           ((C3044 + C3043) * C1280 - (C3048 * C50946 + C3047 * C1279) +
            (C3046 + C3045) * C50933 -
            (C2177 * C2996 + C50616 * C3002 + C2176 * C2997 + C2171 * C3003) *
                C1281 -
            (C2177 * C3004 + C50616 * C3008 + C2176 * C3005 + C2171 * C3009) *
                C1276) *
               C2175) *
              C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C1279 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50946 -
           (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
            C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
               C1280 -
           (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
            C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
               C50933 +
           (C117 * C509 + C105 * C514 + C118 * C510 + C106 * C515 +
            C119 * C511 + C107 * C516 + C120 * C512 + C108 * C517) *
               C1281 +
           (C117 * C518 + C105 * C524 + C118 * C519 + C106 * C525 +
            C119 * C520 + C107 * C526 + C120 * C521 + C108 * C527) *
               C1276) *
              C50759 * C50771 * C50636 * C1514 +
          ((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
            C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
               C1280 -
           ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
             C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
                C50946 +
            (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
             C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
                C1279) +
           (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
            C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
               C50933 -
           (C120 * C722 + C108 * C734 + C119 * C723 + C107 * C735 +
            C118 * C724 + C106 * C736 + C117 * C725 + C105 * C737) *
               C1281 -
           (C120 * C738 + C108 * C746 + C119 * C739 + C107 * C747 +
            C118 * C740 + C106 * C748 + C117 * C741 + C105 * C749) *
               C1276) *
              C50759 * C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C1279 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C50946 -
            (C2373 + C2374) * C1280 - (C2375 + C2376) * C50933 + C2701 * C1281 +
            C2702 * C1276) *
               C50759 * C5082 +
           ((C5426 + C5427) * C1279 + (C5428 + C5429) * C50946 -
            (C3036 + C3035) * C1280 - (C3038 + C3037) * C50933 +
            (C3040 + C3039) * C1281 + (C3042 + C3041) * C1276) *
               C50759 * C5083 +
           (C5998 * C1279 + C5999 * C50946 - C6190 * C1280 - C6191 * C50933 +
            (C3382 + C3381) * C1281 + (C3384 + C3383) * C1276) *
               C50759 * C5084) *
              C50636 * C1514 +
          (((C3035 + C3036) * C1280 -
            ((C5429 + C5428) * C50946 + (C5427 + C5426) * C1279) +
            (C3037 + C3038) * C50933 - C3047 * C1281 - C3048 * C1276) *
               C50759 * C5082 +
           ((C3378 + C3377) * C1280 -
            ((C5433 + C5432) * C50946 + (C5431 + C5430) * C1279) +
            (C3380 + C3379) * C50933 - (C3381 + C3382) * C1281 -
            (C3383 + C3384) * C1276) *
               C50759 * C5083 +
           ((C6203 + C6204) * C1280 - (C6316 * C50946 + C6317 * C1279) +
            (C6205 + C6206) * C50933 -
            (C2177 * C3482 + C50616 * C3488 + C2176 * C3483 + C2171 * C3489) *
                C1281 -
            (C2177 * C3486 + C50616 * C3494 + C2176 * C3487 + C2171 * C3495) *
                C1276) *
               C50759 * C5084) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C1174 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C1169 -
            (C2373 + C2374) * C1175 - (C2375 + C2376) * C50686) *
               C2173 +
           ((C2374 + C2373) * C1174 + (C2376 + C2375) * C1169 -
            (C2377 + C2378) * C1175 - (C2379 + C2380) * C50686) *
               C2174 +
           (C2701 * C1174 + C2702 * C1169 - C2835 * C1175 - C2836 * C50686) *
               C2175) *
              C50771 * C50636 * C50947 +
          (((C3035 + C3036) * C1175 -
            ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                 C1169 +
             (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                 C1174) +
            (C3037 + C3038) * C50686) *
               C2173 +
           ((C3040 + C3039) * C1175 -
            ((C3038 + C3037) * C1169 + (C3036 + C3035) * C1174) +
            (C3042 + C3041) * C50686) *
               C2174 +
           ((C3044 + C3043) * C1175 - (C3048 * C1169 + C3047 * C1174) +
            (C3046 + C3045) * C50686) *
               C2175) *
              C50771 * C50636 * C50936 +
          (((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50616 * C857) *
                C1174 +
            (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50616 * C867) *
                C1169 -
            (C3377 + C3378) * C1175 - (C3379 + C3380) * C50686) *
               C2173 +
           ((C3378 + C3377) * C1174 + (C3380 + C3379) * C1169 -
            (C3381 + C3382) * C1175 - (C3383 + C3384) * C50686) *
               C2174 +
           ((C3382 + C3381) * C1174 + (C3384 + C3383) * C1169 -
            (C2177 * C3352 + C50616 * C3354 + C2176 * C3353 + C2171 * C3355) *
                C1175 -
            (C2177 * C3356 + C50616 * C3358 + C2176 * C3357 + C2171 * C3359) *
                C50686) *
               C2175) *
              C50771 * C50636 * C1746)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C1174 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C1169 -
           (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
            C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
               C1175 -
           (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
            C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
               C50686) *
              C50759 * C50771 * C50636 * C50947 +
          ((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
            C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
               C1175 -
           ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
             C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
                C1169 +
            (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
             C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
                C1174) +
           (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
            C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
               C50686) *
              C50759 * C50771 * C50636 * C50936 +
          ((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
            C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
               C1174 +
           (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
            C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
               C1169 -
           (C120 * C969 + C108 * C973 + C119 * C970 + C107 * C974 +
            C118 * C971 + C106 * C975 + C117 * C972 + C105 * C976) *
               C1175 -
           (C120 * C977 + C108 * C981 + C119 * C978 + C107 * C982 +
            C118 * C979 + C106 * C983 + C117 * C980 + C105 * C984) *
               C50686) *
              C50759 * C50771 * C50636 * C1746)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C1174 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C1169 -
            (C2373 + C2374) * C1175 - (C2375 + C2376) * C50686) *
               C50759 * C5082 +
           ((C5426 + C5427) * C1174 + (C5428 + C5429) * C1169 -
            (C3036 + C3035) * C1175 - (C3038 + C3037) * C50686) *
               C50759 * C5083 +
           C7815 * C5084) *
              C50636 * C50947 +
          (((C3035 + C3036) * C1175 -
            ((C5429 + C5428) * C1169 + (C5427 + C5426) * C1174) +
            (C3037 + C3038) * C50686) *
               C50759 * C5082 +
           ((C3378 + C3377) * C1175 -
            ((C5433 + C5432) * C1169 + (C5431 + C5430) * C1174) +
            (C3380 + C3379) * C50686) *
               C50759 * C5083 +
           ((C6203 + C6204) * C1175 - (C6316 * C1169 + C6317 * C1174) +
            (C6205 + C6206) * C50686) *
               C50759 * C5084) *
              C50636 * C50936 +
          (C7815 * C5082 +
           ((C6029 + C6028) * C1174 + (C6027 + C6026) * C1169 -
            (C6204 + C6203) * C1175 - (C6206 + C6205) * C50686) *
               C50759 * C5083 +
           ((C6328 + C6329) * C1174 + (C6330 + C6331) * C1169 -
            (C2177 * C6179 + C50616 * C6181 + C2176 * C6180 + C2171 * C6182) *
                C1175 -
            (C2177 * C6183 + C50616 * C6185 + C2176 * C6184 + C2171 * C6186) *
                C50686) *
               C50759 * C5084) *
              C50636 * C1746)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                   C121 +
               (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                   C50670) *
                  C50759 * C50771 * C112 -
              ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
                C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                   C50670 +
               (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
                C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                   C121) *
                  C50759 * C50771 * C113 +
              ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
                C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                   C121 +
               (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
                C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                   C50670) *
                  C50759 * C50771 * C114 -
              ((C120 * C141 + C108 * C149 + C119 * C140 + C107 * C148 +
                C118 * C137 + C106 * C147 + C117 * C136 + C105 * C146) *
                   C50670 +
               (C120 * C128 + C108 * C142 + C119 * C127 + C107 * C139 +
                C118 * C126 + C106 * C138 + C117 * C125 + C105 * C132) *
                   C121) *
                  C50759 * C50771 * C115) *
             C50700 +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                   C506 +
               (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                   C501 -
               (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
                C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
                   C507 -
               (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
                C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
                   C502 +
               (C117 * C509 + C105 * C514 + C118 * C510 + C106 * C515 +
                C119 * C511 + C107 * C516 + C120 * C512 + C108 * C517) *
                   C508 +
               (C117 * C518 + C105 * C524 + C118 * C519 + C106 * C525 +
                C119 * C520 + C107 * C526 + C120 * C521 + C108 * C527) *
                   C503) *
                  C50759 * C50771 * C50892 +
              ((C117 * C257 + C105 * C263 + C118 * C256 + C106 * C262 +
                C119 * C255 + C107 * C261 + C120 * C259 + C108 * C269) *
                   C507 -
               ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
                 C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                    C501 +
                (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
                 C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                    C506) +
               (C117 * C267 + C105 * C275 + C118 * C266 + C106 * C274 +
                C119 * C265 + C107 * C273 + C120 * C270 + C108 * C277) *
                   C502 -
               (C120 * C513 + C108 * C522 + C119 * C512 + C107 * C517 +
                C118 * C511 + C106 * C516 + C117 * C510 + C105 * C515) *
                   C508 -
               (C120 * C523 + C108 * C528 + C119 * C521 + C107 * C527 +
                C118 * C520 + C106 * C526 + C117 * C519 + C105 * C525) *
                   C503) *
                  C50759 * C50771 * C50641) *
             C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50670) *
               C50759 * C50771 * C50892 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50670 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50759 * C50771 * C50641) *
              C848 +
          (((C117 * C379 + C105 * C385 + C118 * C380 + C106 * C386 +
             C119 * C381 + C107 * C387 + C120 * C382 + C108 * C388) *
                C121 +
            (C117 * C389 + C105 * C397 + C118 * C390 + C106 * C398 +
             C119 * C391 + C107 * C399 + C120 * C392 + C108 * C400) *
                C50670) *
               C50759 * C50771 * C50641 -
           ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
             C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
                C50670 +
            (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
             C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
                C121) *
               C50759 * C50771 * C50892) *
              C849 +
          (((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
             C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
                C121 +
            (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
             C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
                C50670) *
               C50759 * C50771 * C50892 -
           ((C120 * C864 + C108 * C870 + C119 * C863 + C107 * C869 +
             C118 * C862 + C106 * C868 + C117 * C861 + C105 * C867) *
                C50670 +
            (C120 * C855 + C108 * C865 + C119 * C854 + C107 * C859 +
             C118 * C853 + C106 * C858 + C117 * C852 + C105 * C857) *
                C121) *
               C50759 * C50771 * C50641) *
              C850)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C50670) *
               C2173 +
           ((C2176 * C258 + C2171 * C264 + C2177 * C257 + C50616 * C263) *
                C121 +
            (C2176 * C268 + C2171 * C276 + C2177 * C267 + C50616 * C275) *
                C50670) *
               C2174 +
           ((C2176 * C509 + C2171 * C514 + C2177 * C510 + C50616 * C515) *
                C121 +
            (C2176 * C518 + C2171 * C524 + C2177 * C519 + C50616 * C525) *
                C50670) *
               C2175) *
              C50771 * C112 -
          (((C2177 * C520 + C50616 * C526 + C2176 * C519 + C2171 * C525) *
                C50670 +
            (C2177 * C511 + C50616 * C516 + C2176 * C510 + C2171 * C515) *
                C121) *
               C2175 +
           ((C2177 * C266 + C50616 * C274 + C2176 * C267 + C2171 * C275) *
                C50670 +
            (C2177 * C256 + C50616 * C262 + C2176 * C257 + C2171 * C263) *
                C121) *
               C2174 +
           ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                C50670 +
            (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                C121) *
               C2173) *
              C50771 * C113 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                C121 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                C50670) *
               C2173 +
           ((C2176 * C256 + C2171 * C262 + C2177 * C255 + C50616 * C261) *
                C121 +
            (C2176 * C266 + C2171 * C274 + C2177 * C265 + C50616 * C273) *
                C50670) *
               C2174 +
           ((C2176 * C511 + C2171 * C516 + C2177 * C512 + C50616 * C517) *
                C121 +
            (C2176 * C520 + C2171 * C526 + C2177 * C521 + C50616 * C527) *
                C50670) *
               C2175) *
              C50771 * C114 -
          (((C2177 * C523 + C50616 * C528 + C2176 * C521 + C2171 * C527) *
                C50670 +
            (C2177 * C513 + C50616 * C522 + C2176 * C512 + C2171 * C517) *
                C121) *
               C2175 +
           ((C2177 * C270 + C50616 * C277 + C2176 * C265 + C2171 * C273) *
                C50670 +
            (C2177 * C259 + C50616 * C269 + C2176 * C255 + C2171 * C261) *
                C121) *
               C2174 +
           ((C2177 * C137 + C50616 * C147 + C2176 * C136 + C2171 * C146) *
                C50670 +
            (C2177 * C126 + C50616 * C138 + C2176 * C125 + C2171 * C132) *
                C121) *
               C2173) *
              C50771 * C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C506 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C501 -
            (C2373 + C2374) * C507 - (C2375 + C2376) * C502 + C2701 * C508 +
            C2702 * C503) *
               C2173 +
           ((C2374 + C2373) * C506 + (C2376 + C2375) * C501 -
            (C2377 + C2378) * C507 - (C2379 + C2380) * C502 +
            (C2721 + C2722) * C508 + (C2723 + C2724) * C503) *
               C2174 +
           (C2701 * C506 + C2702 * C501 - (C2722 + C2721) * C507 -
            (C2724 + C2723) * C502 +
            (C2176 * C2688 + C2171 * C2691 + C2177 * C2689 + C50616 * C2692) *
                C508 +
            (C2176 * C2693 + C2171 * C2697 + C2177 * C2694 + C50616 * C2698) *
                C503) *
               C2175) *
              C50771 * C50892 +
          (((C2381 + C2382) * C507 -
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C501 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C506) +
            (C2383 + C2384) * C502 - C2711 * C508 - C2712 * C503) *
               C2173 +
           ((C2385 + C2386) * C507 -
            ((C2384 + C2383) * C501 + (C2382 + C2381) * C506) +
            (C2387 + C2388) * C502 - (C2725 + C2726) * C508 -
            (C2727 + C2728) * C503) *
               C2174 +
           ((C2726 + C2725) * C507 - (C2712 * C501 + C2711 * C506) +
            (C2728 + C2727) * C502 -
            (C2177 * C2690 + C50616 * C2695 + C2176 * C2689 + C2171 * C2692) *
                C508 -
            (C2177 * C2696 + C50616 * C2699 + C2176 * C2694 + C2171 * C2698) *
                C503) *
               C2175) *
              C50771 * C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C50670) *
                C2173 +
            ((C2374 + C2373) * C121 + (C2376 + C2375) * C50670) * C2174 +
            (C2701 * C121 + C2702 * C50670) * C2175) *
               C50771 * C50892 -
           ((C2712 * C50670 + C2711 * C121) * C2175 +
            ((C2384 + C2383) * C50670 + (C2382 + C2381) * C121) * C2174 +
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C50670 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50771 * C50641) *
              C848 +
          ((((C2176 * C379 + C2171 * C385 + C2177 * C380 + C50616 * C386) *
                 C121 +
             (C2176 * C389 + C2171 * C397 + C2177 * C390 + C50616 * C398) *
                 C50670) *
                C2173 +
            ((C2176 * C719 + C2171 * C727 + C2177 * C720 + C50616 * C728) *
                 C121 +
             (C2176 * C731 + C2171 * C743 + C2177 * C732 + C50616 * C744) *
                 C50670) *
                C2174 +
            ((C2176 * C724 + C2171 * C736 + C2177 * C723 + C50616 * C735) *
                 C121 +
             (C2176 * C740 + C2171 * C748 + C2177 * C739 + C50616 * C747) *
                 C50670) *
                C2175) *
               C50771 * C50641 -
           ((C3048 * C50670 + C3047 * C121) * C2175 +
            ((C3038 + C3037) * C50670 + (C3036 + C3035) * C121) * C2174 +
            ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                 C50670 +
             (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                 C121) *
                C2173) *
               C50771 * C50892) *
              C849 +
          ((((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50616 * C857) *
                 C121 +
             (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50616 * C867) *
                 C50670) *
                C2173 +
            ((C2176 * C972 + C2171 * C976 + C2177 * C971 + C50616 * C975) *
                 C121 +
             (C2176 * C980 + C2171 * C984 + C2177 * C979 + C50616 * C983) *
                 C50670) *
                C2174 +
            ((C2176 * C3194 + C2171 * C3197 + C2177 * C3195 + C50616 * C3198) *
                 C121 +
             (C2176 * C3199 + C2171 * C3203 + C2177 * C3200 + C50616 * C3204) *
                 C50670) *
                C2175) *
               C50771 * C50892 -
           (((C2177 * C3201 + C50616 * C3205 + C2176 * C3200 + C2171 * C3204) *
                 C50670 +
             (C2177 * C3196 + C50616 * C3202 + C2176 * C3195 + C2171 * C3198) *
                 C121) *
                C2175 +
            ((C2177 * C978 + C50616 * C982 + C2176 * C979 + C2171 * C983) *
                 C50670 +
             (C2177 * C970 + C50616 * C974 + C2176 * C971 + C2171 * C975) *
                 C121) *
                C2174 +
            ((C2177 * C862 + C50616 * C868 + C2176 * C861 + C2171 * C867) *
                 C50670 +
             (C2177 * C853 + C50616 * C858 + C2176 * C852 + C2171 * C857) *
                 C121) *
                C2173) *
               C50771 * C50641) *
              C850)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C50670) *
               C50759 * C5082 +
           ((C2176 * C383 + C2171 * C394 + C2177 * C379 + C50616 * C385) *
                C121 +
            (C2176 * C393 + C2171 * C401 + C2177 * C389 + C50616 * C397) *
                C50670) *
               C50759 * C5083 +
           ((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50616 * C857) *
                C121 +
            (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50616 * C867) *
                C50670) *
               C50759 * C5084) *
              C112 -
          (((C2177 * C862 + C50616 * C868 + C2176 * C861 + C2171 * C867) *
                C50670 +
            (C2177 * C853 + C50616 * C858 + C2176 * C852 + C2171 * C857) *
                C121) *
               C50759 * C5084 +
           ((C2177 * C390 + C50616 * C398 + C2176 * C389 + C2171 * C397) *
                C50670 +
            (C2177 * C380 + C50616 * C386 + C2176 * C379 + C2171 * C385) *
                C121) *
               C50759 * C5083 +
           ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                C50670 +
            (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                C121) *
               C50759 * C5082) *
              C113 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                C121 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                C50670) *
               C50759 * C5082 +
           ((C2176 * C380 + C2171 * C386 + C2177 * C381 + C50616 * C387) *
                C121 +
            (C2176 * C390 + C2171 * C398 + C2177 * C391 + C50616 * C399) *
                C50670) *
               C50759 * C5083 +
           ((C2176 * C853 + C2171 * C858 + C2177 * C854 + C50616 * C859) *
                C121 +
            (C2176 * C862 + C2171 * C868 + C2177 * C863 + C50616 * C869) *
                C50670) *
               C50759 * C5084) *
              C114 -
          (((C2177 * C864 + C50616 * C870 + C2176 * C863 + C2171 * C869) *
                C50670 +
            (C2177 * C855 + C50616 * C865 + C2176 * C854 + C2171 * C859) *
                C121) *
               C50759 * C5084 +
           ((C2177 * C392 + C50616 * C400 + C2176 * C391 + C2171 * C399) *
                C50670 +
            (C2177 * C382 + C50616 * C388 + C2176 * C381 + C2171 * C387) *
                C121) *
               C50759 * C5083 +
           ((C2177 * C137 + C50616 * C147 + C2176 * C136 + C2171 * C146) *
                C50670 +
            (C2177 * C126 + C50616 * C138 + C2176 * C125 + C2171 * C132) *
                C121) *
               C50759 * C5082) *
              C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C506 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C501 -
            (C2373 + C2374) * C507 - (C2375 + C2376) * C502 + C2701 * C508 +
            C2702 * C503) *
               C50759 * C5082 +
           ((C5426 + C5427) * C506 + (C5428 + C5429) * C501 -
            (C3036 + C3035) * C507 - (C3038 + C3037) * C502 +
            (C3040 + C3039) * C508 + (C3042 + C3041) * C503) *
               C50759 * C5083 +
           ((C5430 + C5431) * C506 + (C5432 + C5433) * C501 -
            (C3377 + C3378) * C507 - (C3379 + C3380) * C502 +
            (C3382 + C3381) * C508 + (C3384 + C3383) * C503) *
               C50759 * C5084) *
              C50892 +
          (((C2381 + C2382) * C507 -
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C501 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C506) +
            (C2383 + C2384) * C502 - C2711 * C508 - C2712 * C503) *
               C50759 * C5082 +
           ((C4006 + C4005) * C507 -
            ((C5438 + C5439) * C501 + (C5440 + C5441) * C506) +
            (C4008 + C4007) * C502 - (C4009 + C4010) * C508 -
            (C4011 + C4012) * C503) *
               C50759 * C5083 +
           ((C2176 * C971 + C2171 * C975 + C2177 * C970 + C50616 * C974) *
                C507 -
            ((C5434 + C5435) * C501 + (C5436 + C5437) * C506) +
            (C2176 * C979 + C2171 * C983 + C2177 * C978 + C50616 * C982) *
                C502 -
            (C2177 * C3196 + C50616 * C3202 + C2176 * C3195 + C2171 * C3198) *
                C508 -
            (C2177 * C3201 + C50616 * C3205 + C2176 * C3200 + C2171 * C3204) *
                C503) *
               C50759 * C5084) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C50670) *
                C50759 * C5082 +
            ((C5426 + C5427) * C121 + (C5428 + C5429) * C50670) * C50759 *
                C5083 +
            C6032 * C5084) *
               C50892 -
           (C6033 * C5084 +
            ((C5438 + C5439) * C50670 + (C5440 + C5441) * C121) * C50759 *
                C5083 +
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C50670 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C50759 * C5082) *
               C50641) *
              C848 +
          ((((C5441 + C5440) * C121 + (C5439 + C5438) * C50670) * C50759 *
                C5082 +
            ((C5437 + C5436) * C121 + (C5435 + C5434) * C50670) * C50759 *
                C5083 +
            ((C6022 + C6023) * C121 + (C6024 + C6025) * C50670) * C50759 *
                C5084) *
               C50641 -
           (((C6026 + C6027) * C50670 + (C6028 + C6029) * C121) * C50759 *
                C5084 +
            ((C5433 + C5432) * C50670 + (C5431 + C5430) * C121) * C50759 *
                C5083 +
            ((C5429 + C5428) * C50670 + (C5427 + C5426) * C121) * C50759 *
                C5082) *
               C50892) *
              C849 +
          ((C6032 * C5082 +
            ((C6029 + C6028) * C121 + (C6027 + C6026) * C50670) * C50759 *
                C5083 +
            ((C2176 * C5985 + C2171 * C5988 + C2177 * C5986 + C50616 * C5989) *
                 C121 +
             (C2176 * C5990 + C2171 * C5994 + C2177 * C5991 + C50616 * C5995) *
                 C50670) *
                C50759 * C5084) *
               C50892 -
           (((C2177 * C5992 + C50616 * C5996 + C2176 * C5991 + C2171 * C5995) *
                 C50670 +
             (C2177 * C5987 + C50616 * C5993 + C2176 * C5986 + C2171 * C5989) *
                 C121) *
                C50759 * C5084 +
            ((C6025 + C6024) * C50670 + (C6023 + C6022) * C121) * C50759 *
                C5083 +
            C6033 * C5082) *
               C50641) *
              C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                   C253 +
               (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                   C50899 -
               (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
                C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
                   C254 -
               (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
                C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
                   C50686) *
                  C50759 * C50771 * C250 +
              ((C117 * C257 + C105 * C263 + C118 * C256 + C106 * C262 +
                C119 * C255 + C107 * C261 + C120 * C259 + C108 * C269) *
                   C254 -
               ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
                 C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                    C50899 +
                (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
                 C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                    C253) +
               (C117 * C267 + C105 * C275 + C118 * C266 + C106 * C274 +
                C119 * C265 + C107 * C273 + C120 * C270 + C108 * C277) *
                   C50686) *
                  C50759 * C50771 * C251 +
              ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
                C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                   C253 +
               (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
                C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                   C50899 -
               (C120 * C260 + C108 * C271 + C119 * C259 + C107 * C269 +
                C118 * C255 + C106 * C261 + C117 * C256 + C105 * C262) *
                   C254 -
               (C120 * C272 + C108 * C278 + C119 * C270 + C107 * C277 +
                C118 * C265 + C106 * C273 + C117 * C266 + C105 * C274) *
                   C50686) *
                  C50759 * C50771 * C252) *
             C50700 +
         0.5 * std::pow(Pi, 2.5) *
             ((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
               C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                  C600 +
              (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
               C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                  C595 -
              (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
               C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
                  C601 -
              (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
               C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
                  C596 +
              (C117 * C509 + C105 * C514 + C118 * C510 + C106 * C515 +
               C119 * C511 + C107 * C516 + C120 * C512 + C108 * C517) *
                  C602 +
              (C117 * C518 + C105 * C524 + C118 * C519 + C106 * C525 +
               C119 * C520 + C107 * C526 + C120 * C521 + C108 * C527) *
                  C597 -
              (C120 * C604 + C108 * C608 + C119 * C605 + C107 * C609 +
               C118 * C606 + C106 * C610 + C117 * C607 + C105 * C611) *
                  C603 -
              (C120 * C612 + C108 * C616 + C119 * C613 + C107 * C617 +
               C118 * C614 + C106 * C618 + C117 * C615 + C105 * C619) *
                  C598) *
             C50759 * C50771 * C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C253 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50899 -
           (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
            C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
               C254 -
           (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
            C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
               C50686) *
              C50759 * C50771 * C50636 * C848 +
          ((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
            C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
               C254 -
           ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
             C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
                C50899 +
            (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
             C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
                C253) +
           (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
            C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
               C50686) *
              C50759 * C50771 * C50636 * C849 +
          ((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
            C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
               C253 +
           (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
            C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
               C50899 -
           (C120 * C969 + C108 * C973 + C119 * C970 + C107 * C974 +
            C118 * C971 + C106 * C975 + C117 * C972 + C105 * C976) *
               C254 -
           (C120 * C977 + C108 * C981 + C119 * C978 + C107 * C982 +
            C118 * C979 + C106 * C983 + C117 * C980 + C105 * C984) *
               C50686) *
              C50759 * C50771 * C50636 * C850)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C253 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C50899 -
            (C2373 + C2374) * C254 - (C2375 + C2376) * C50686) *
               C2173 +
           ((C2374 + C2373) * C253 + (C2376 + C2375) * C50899 -
            (C2377 + C2378) * C254 - (C2379 + C2380) * C50686) *
               C2174 +
           ((C2378 + C2377) * C253 + (C2380 + C2379) * C50899 -
            (C2177 * C606 + C50616 * C610 + C2176 * C607 + C2171 * C611) *
                C254 -
            (C2177 * C614 + C50616 * C618 + C2176 * C615 + C2171 * C619) *
                C50686) *
               C2175) *
              C50771 * C250 +
          (((C2381 + C2382) * C254 -
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C50899 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C253) +
            (C2383 + C2384) * C50686) *
               C2173 +
           ((C2385 + C2386) * C254 -
            ((C2384 + C2383) * C50899 + (C2382 + C2381) * C253) +
            (C2387 + C2388) * C50686) *
               C2174 +
           ((C2176 * C606 + C2171 * C610 + C2177 * C605 + C50616 * C609) *
                C254 -
            ((C2388 + C2387) * C50899 + (C2386 + C2385) * C253) +
            (C2176 * C614 + C2171 * C618 + C2177 * C613 + C50616 * C617) *
                C50686) *
               C2175) *
              C50771 * C251 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                C253 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                C50899 -
            (C2389 + C2390) * C254 - (C2391 + C2392) * C50686) *
               C2173 +
           ((C2390 + C2389) * C253 + (C2392 + C2391) * C50899 -
            (C2393 + C2394) * C254 - (C2395 + C2396) * C50686) *
               C2174 +
           ((C2394 + C2393) * C253 + (C2396 + C2395) * C50899 -
            (C2177 * C604 + C50616 * C608 + C2176 * C605 + C2171 * C609) *
                C254 -
            (C2177 * C612 + C50616 * C616 + C2176 * C613 + C2171 * C617) *
                C50686) *
               C2175) *
              C50771 * C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) * C600 +
           (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) * C595 -
           (C2373 + C2374) * C601 - (C2375 + C2376) * C596 + C2701 * C602 +
           C2702 * C597 - C2835 * C603 - C2836 * C598) *
              C2173 +
          ((C2374 + C2373) * C600 + (C2376 + C2375) * C595 -
           (C2377 + C2378) * C601 - (C2379 + C2380) * C596 +
           (C2721 + C2722) * C602 + (C2723 + C2724) * C597 -
           (C2845 + C2846) * C603 - (C2847 + C2848) * C598) *
              C2174 +
          (C2701 * C600 + C2702 * C595 - C2835 * C601 - C2836 * C596 +
           (C2846 + C2845) * C602 + (C2848 + C2847) * C597 -
           (C2177 * C2826 + C50616 * C2828 + C2176 * C2827 + C2171 * C2829) *
               C603 -
           (C2177 * C2830 + C50616 * C2832 + C2176 * C2831 + C2171 * C2833) *
               C598) *
              C2175) *
         C50771 * C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C253 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C50899 -
            (C2373 + C2374) * C254 - (C2375 + C2376) * C50686) *
               C2173 +
           ((C2374 + C2373) * C253 + (C2376 + C2375) * C50899 -
            (C2377 + C2378) * C254 - (C2379 + C2380) * C50686) *
               C2174 +
           (C2701 * C253 + C2702 * C50899 - C2835 * C254 - C2836 * C50686) *
               C2175) *
              C50771 * C50636 * C848 +
          (((C3035 + C3036) * C254 -
            ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                 C50899 +
             (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                 C253) +
            (C3037 + C3038) * C50686) *
               C2173 +
           ((C3040 + C3039) * C254 -
            ((C3038 + C3037) * C50899 + (C3036 + C3035) * C253) +
            (C3042 + C3041) * C50686) *
               C2174 +
           ((C3044 + C3043) * C254 - (C3048 * C50899 + C3047 * C253) +
            (C3046 + C3045) * C50686) *
               C2175) *
              C50771 * C50636 * C849 +
          (((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50616 * C857) *
                C253 +
            (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50616 * C867) *
                C50899 -
            (C3377 + C3378) * C254 - (C3379 + C3380) * C50686) *
               C2173 +
           ((C3378 + C3377) * C253 + (C3380 + C3379) * C50899 -
            (C3381 + C3382) * C254 - (C3383 + C3384) * C50686) *
               C2174 +
           ((C3382 + C3381) * C253 + (C3384 + C3383) * C50899 -
            (C2177 * C3352 + C50616 * C3354 + C2176 * C3353 + C2171 * C3355) *
                C254 -
            (C2177 * C3356 + C50616 * C3358 + C2176 * C3357 + C2171 * C3359) *
                C50686) *
               C2175) *
              C50771 * C50636 * C850)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C253 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C50899 -
            (C2373 + C2374) * C254 - (C2375 + C2376) * C50686) *
               C50759 * C5082 +
           ((C2176 * C383 + C2171 * C394 + C2177 * C379 + C50616 * C385) *
                C253 +
            (C2176 * C393 + C2171 * C401 + C2177 * C389 + C50616 * C397) *
                C50899 -
            (C3036 + C3035) * C254 - (C3038 + C3037) * C50686) *
               C50759 * C5083 +
           ((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50616 * C857) *
                C253 +
            (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50616 * C867) *
                C50899 -
            (C3377 + C3378) * C254 - (C3379 + C3380) * C50686) *
               C50759 * C5084) *
              C250 +
          (((C2381 + C2382) * C254 -
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C50899 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C253) +
            (C2383 + C2384) * C50686) *
               C50759 * C5082 +
           ((C4006 + C4005) * C254 -
            ((C2177 * C390 + C50616 * C398 + C2176 * C389 + C2171 * C397) *
                 C50899 +
             (C2177 * C380 + C50616 * C386 + C2176 * C379 + C2171 * C385) *
                 C253) +
            (C4008 + C4007) * C50686) *
               C50759 * C5083 +
           ((C2176 * C971 + C2171 * C975 + C2177 * C970 + C50616 * C974) *
                C254 -
            ((C2177 * C862 + C50616 * C868 + C2176 * C861 + C2171 * C867) *
                 C50899 +
             (C2177 * C853 + C50616 * C858 + C2176 * C852 + C2171 * C857) *
                 C253) +
            (C2176 * C979 + C2171 * C983 + C2177 * C978 + C50616 * C982) *
                C50686) *
               C50759 * C5084) *
              C251 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                C253 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                C50899 -
            (C2389 + C2390) * C254 - (C2391 + C2392) * C50686) *
               C50759 * C5082 +
           ((C2176 * C380 + C2171 * C386 + C2177 * C381 + C50616 * C387) *
                C253 +
            (C2176 * C390 + C2171 * C398 + C2177 * C391 + C50616 * C399) *
                C50899 -
            (C2177 * C721 + C50616 * C729 + C2176 * C720 + C2171 * C728) *
                C254 -
            (C2177 * C733 + C50616 * C745 + C2176 * C732 + C2171 * C744) *
                C50686) *
               C50759 * C5083 +
           ((C2176 * C853 + C2171 * C858 + C2177 * C854 + C50616 * C859) *
                C253 +
            (C2176 * C862 + C2171 * C868 + C2177 * C863 + C50616 * C869) *
                C50899 -
            (C2177 * C969 + C50616 * C973 + C2176 * C970 + C2171 * C974) *
                C254 -
            (C2177 * C977 + C50616 * C981 + C2176 * C978 + C2171 * C982) *
                C50686) *
               C50759 * C5084) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) * C600 +
           (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) * C595 -
           (C2373 + C2374) * C601 - (C2375 + C2376) * C596 + C2701 * C602 +
           C2702 * C597 - C2835 * C603 - C2836 * C598) *
              C50759 * C5082 +
          ((C5426 + C5427) * C600 + (C5428 + C5429) * C595 -
           (C3036 + C3035) * C601 - (C3038 + C3037) * C596 +
           (C3040 + C3039) * C602 + (C3042 + C3041) * C597 -
           (C3043 + C3044) * C603 - (C3045 + C3046) * C598) *
              C50759 * C5083 +
          ((C5430 + C5431) * C600 + (C5432 + C5433) * C595 -
           (C3377 + C3378) * C601 - (C3379 + C3380) * C596 +
           (C3382 + C3381) * C602 + (C3384 + C3383) * C597 -
           (C2177 * C3352 + C50616 * C3354 + C2176 * C3353 + C2171 * C3355) *
               C603 -
           (C2177 * C3356 + C50616 * C3358 + C2176 * C3357 + C2171 * C3359) *
               C598) *
              C50759 * C5084) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C253 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C50899 -
            (C2373 + C2374) * C254 - (C2375 + C2376) * C50686) *
               C50759 * C5082 +
           ((C5426 + C5427) * C253 + (C5428 + C5429) * C50899 -
            (C3036 + C3035) * C254 - (C3038 + C3037) * C50686) *
               C50759 * C5083 +
           C6209 * C5084) *
              C50636 * C848 +
          (((C3035 + C3036) * C254 -
            ((C5429 + C5428) * C50899 + (C5427 + C5426) * C253) +
            (C3037 + C3038) * C50686) *
               C50759 * C5082 +
           ((C3378 + C3377) * C254 -
            ((C5433 + C5432) * C50899 + (C5431 + C5430) * C253) +
            (C3380 + C3379) * C50686) *
               C50759 * C5083 +
           ((C6203 + C6204) * C254 -
            ((C6026 + C6027) * C50899 + (C6028 + C6029) * C253) +
            (C6205 + C6206) * C50686) *
               C50759 * C5084) *
              C50636 * C849 +
          (C6209 * C5082 +
           ((C6029 + C6028) * C253 + (C6027 + C6026) * C50899 -
            (C6204 + C6203) * C254 - (C6206 + C6205) * C50686) *
               C50759 * C5083 +
           ((C2176 * C5985 + C2171 * C5988 + C2177 * C5986 + C50616 * C5989) *
                C253 +
            (C2176 * C5990 + C2171 * C5994 + C2177 * C5991 + C50616 * C5995) *
                C50899 -
            (C2177 * C6179 + C50616 * C6181 + C2176 * C6180 + C2171 * C6182) *
                C254 -
            (C2177 * C6183 + C50616 * C6185 + C2176 * C6184 + C2171 * C6186) *
                C50686) *
               C50759 * C5084) *
              C50636 * C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                 C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                    C121 +
                (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                 C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                    C50670) *
                   C50759 * C50771 * C250 -
               ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
                 C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                    C50670 +
                (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
                 C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                    C121) *
                   C50759 * C50771 * C251 +
               ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
                 C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                    C121 +
                (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
                 C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                    C50670) *
                   C50759 * C50771 * C252) *
                  C50901 +
              (((C117 * C379 + C105 * C385 + C118 * C380 + C106 * C386 +
                 C119 * C381 + C107 * C387 + C120 * C382 + C108 * C388) *
                    C121 +
                (C117 * C389 + C105 * C397 + C118 * C390 + C106 * C398 +
                 C119 * C391 + C107 * C399 + C120 * C392 + C108 * C400) *
                    C50670) *
                   C50759 * C50771 * C251 -
               ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
                 C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
                    C50670 +
                (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
                 C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
                    C121) *
                   C50759 * C50771 * C250 -
               ((C120 * C395 + C108 * C402 + C119 * C392 + C107 * C400 +
                 C118 * C391 + C106 * C399 + C117 * C390 + C105 * C398) *
                    C50670 +
                (C120 * C384 + C108 * C396 + C119 * C382 + C107 * C388 +
                 C118 * C381 + C106 * C387 + C117 * C380 + C105 * C386) *
                    C121) *
                   C50759 * C50771 * C252) *
                  C50712) +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                   C506 +
               (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                   C501 -
               (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
                C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
                   C507 -
               (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
                C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
                   C502 +
               (C117 * C509 + C105 * C514 + C118 * C510 + C106 * C515 +
                C119 * C511 + C107 * C516 + C120 * C512 + C108 * C517) *
                   C508 +
               (C117 * C518 + C105 * C524 + C118 * C519 + C106 * C525 +
                C119 * C520 + C107 * C526 + C120 * C521 + C108 * C527) *
                   C503) *
                  C50759 * C50771 * C50636 * C50901 +
              ((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
                C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                   C507 -
               ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
                 C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
                    C501 +
                (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
                 C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
                    C506) +
               (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
                C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                   C502 -
               (C120 * C722 + C108 * C734 + C119 * C723 + C107 * C735 +
                C118 * C724 + C106 * C736 + C117 * C725 + C105 * C737) *
                   C508 -
               (C120 * C738 + C108 * C746 + C119 * C739 + C107 * C747 +
                C118 * C740 + C106 * C748 + C117 * C741 + C105 * C749) *
                   C503) *
                  C50759 * C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50670) *
              C50759 * C50771 * C50636 * C1051 -
          ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
            C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
               C50670 +
           (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
            C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
               C121) *
              C50759 * C50771 * C50636 * C1052 +
          ((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
            C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
               C121 +
           (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
            C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
               C50670) *
              C50759 * C50771 * C50636 * C1053 -
          ((C120 * C1059 + C108 * C1067 + C119 * C1060 + C107 * C1068 +
            C118 * C1061 + C106 * C1069 + C117 * C1062 + C105 * C1070) *
               C50670 +
           (C120 * C1055 + C108 * C1063 + C119 * C1056 + C107 * C1064 +
            C118 * C1057 + C106 * C1065 + C117 * C1058 + C105 * C1066) *
               C121) *
              C50759 * C50771 * C50636 * C1054)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C50670) *
                C2173 +
            ((C2374 + C2373) * C121 + (C2376 + C2375) * C50670) * C2174 +
            ((C2378 + C2377) * C121 + (C2380 + C2379) * C50670) * C2175) *
               C50771 * C250 -
           (((C2388 + C2387) * C50670 + (C2386 + C2385) * C121) * C2175 +
            ((C2384 + C2383) * C50670 + (C2382 + C2381) * C121) * C2174 +
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C50670 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50771 * C251 +
           (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                 C50670) *
                C2173 +
            ((C2390 + C2389) * C121 + (C2392 + C2391) * C50670) * C2174 +
            ((C2394 + C2393) * C121 + (C2396 + C2395) * C50670) * C2175) *
               C50771 * C252) *
              C50901 +
          ((((C2176 * C379 + C2171 * C385 + C2177 * C380 + C50616 * C386) *
                 C121 +
             (C2176 * C389 + C2171 * C397 + C2177 * C390 + C50616 * C398) *
                 C50670) *
                C2173 +
            ((C2176 * C719 + C2171 * C727 + C2177 * C720 + C50616 * C728) *
                 C121 +
             (C2176 * C731 + C2171 * C743 + C2177 * C732 + C50616 * C744) *
                 C50670) *
                C2174 +
            ((C2176 * C724 + C2171 * C736 + C2177 * C723 + C50616 * C735) *
                 C121 +
             (C2176 * C740 + C2171 * C748 + C2177 * C739 + C50616 * C747) *
                 C50670) *
                C2175) *
               C50771 * C251 -
           (((C2177 * C740 + C50616 * C748 + C2176 * C741 + C2171 * C749) *
                 C50670 +
             (C2177 * C724 + C50616 * C736 + C2176 * C725 + C2171 * C737) *
                 C121) *
                C2175 +
            ((C2177 * C731 + C50616 * C743 + C2176 * C730 + C2171 * C742) *
                 C50670 +
             (C2177 * C719 + C50616 * C727 + C2176 * C718 + C2171 * C726) *
                 C121) *
                C2174 +
            ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                 C50670 +
             (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                 C121) *
                C2173) *
               C50771 * C250 -
           (((C2177 * C738 + C50616 * C746 + C2176 * C739 + C2171 * C747) *
                 C50670 +
             (C2177 * C722 + C50616 * C734 + C2176 * C723 + C2171 * C735) *
                 C121) *
                C2175 +
            ((C2177 * C733 + C50616 * C745 + C2176 * C732 + C2171 * C744) *
                 C50670 +
             (C2177 * C721 + C50616 * C729 + C2176 * C720 + C2171 * C728) *
                 C121) *
                C2174 +
            ((C2177 * C391 + C50616 * C399 + C2176 * C390 + C2171 * C398) *
                 C50670 +
             (C2177 * C381 + C50616 * C387 + C2176 * C380 + C2171 * C386) *
                 C121) *
                C2173) *
               C50771 * C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C506 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C501 -
            (C2373 + C2374) * C507 - (C2375 + C2376) * C502 + C2701 * C508 +
            C2702 * C503) *
               C2173 +
           ((C2374 + C2373) * C506 + (C2376 + C2375) * C501 -
            (C2377 + C2378) * C507 - (C2379 + C2380) * C502 +
            (C2721 + C2722) * C508 + (C2723 + C2724) * C503) *
               C2174 +
           (C2701 * C506 + C2702 * C501 - C2835 * C507 - C2836 * C502 +
            (C2846 + C2845) * C508 + (C2848 + C2847) * C503) *
               C2175) *
              C50771 * C50636 * C50901 +
          (((C3035 + C3036) * C507 -
            ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                 C501 +
             (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                 C506) +
            (C3037 + C3038) * C502 - C3047 * C508 - C3048 * C503) *
               C2173 +
           ((C3040 + C3039) * C507 -
            ((C3038 + C3037) * C501 + (C3036 + C3035) * C506) +
            (C3042 + C3041) * C502 - (C3043 + C3044) * C508 -
            (C3045 + C3046) * C503) *
               C2174 +
           ((C3044 + C3043) * C507 - (C3048 * C501 + C3047 * C506) +
            (C3046 + C3045) * C502 -
            (C2177 * C2996 + C50616 * C3002 + C2176 * C2997 + C2171 * C3003) *
                C508 -
            (C2177 * C3004 + C50616 * C3008 + C2176 * C3005 + C2171 * C3009) *
                C503) *
               C2175) *
              C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C50670) *
               C2173 +
           ((C2374 + C2373) * C121 + (C2376 + C2375) * C50670) * C2174 +
           (C2701 * C121 + C2702 * C50670) * C2175) *
              C50771 * C50636 * C1051 -
          ((C3048 * C50670 + C3047 * C121) * C2175 +
           ((C3038 + C3037) * C50670 + (C3036 + C3035) * C121) * C2174 +
           ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                C50670 +
            (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                C121) *
               C2173) *
              C50771 * C50636 * C1052 +
          (((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50616 * C857) *
                C121 +
            (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50616 * C867) *
                C50670) *
               C2173 +
           ((C3378 + C3377) * C121 + (C3380 + C3379) * C50670) * C2174 +
           ((C3382 + C3381) * C121 + (C3384 + C3383) * C50670) * C2175) *
              C50771 * C50636 * C1053 -
          (((C2177 * C3486 + C50616 * C3494 + C2176 * C3487 + C2171 * C3495) *
                C50670 +
            (C2177 * C3482 + C50616 * C3488 + C2176 * C3483 + C2171 * C3489) *
                C121) *
               C2175 +
           ((C2177 * C3490 + C50616 * C3496 + C2176 * C3491 + C2171 * C3497) *
                C50670 +
            (C2177 * C3484 + C50616 * C3492 + C2176 * C3485 + C2171 * C3493) *
                C121) *
               C2174 +
           ((C2177 * C1061 + C50616 * C1069 + C2176 * C1062 + C2171 * C1070) *
                C50670 +
            (C2177 * C1057 + C50616 * C1065 + C2176 * C1058 + C2171 * C1066) *
                C121) *
               C2173) *
              C50771 * C50636 * C1054)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C50670) *
                C50759 * C5082 +
            ((C5426 + C5427) * C121 + (C5428 + C5429) * C50670) * C50759 *
                C5083 +
            ((C5430 + C5431) * C121 + (C5432 + C5433) * C50670) * C50759 *
                C5084) *
               C250 -
           (((C5434 + C5435) * C50670 + (C5436 + C5437) * C121) * C50759 *
                C5084 +
            ((C5438 + C5439) * C50670 + (C5440 + C5441) * C121) * C50759 *
                C5083 +
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C50670 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C50759 * C5082) *
               C251 +
           (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                 C50670) *
                C50759 * C5082 +
            ((C5442 + C5443) * C121 + (C5444 + C5445) * C50670) * C50759 *
                C5083 +
            ((C5446 + C5447) * C121 + (C5448 + C5449) * C50670) * C50759 *
                C5084) *
               C252) *
              C50901 +
          ((((C5441 + C5440) * C121 + (C5439 + C5438) * C50670) * C50759 *
                C5082 +
            ((C5437 + C5436) * C121 + (C5435 + C5434) * C50670) * C50759 *
                C5083 +
            ((C2176 * C1057 + C2171 * C1065 + C2177 * C1056 + C50616 * C1064) *
                 C121 +
             (C2176 * C1061 + C2171 * C1069 + C2177 * C1060 + C50616 * C1068) *
                 C50670) *
                C50759 * C5084) *
               C251 -
           (((C2177 * C1061 + C50616 * C1069 + C2176 * C1062 + C2171 * C1070) *
                 C50670 +
             (C2177 * C1057 + C50616 * C1065 + C2176 * C1058 + C2171 * C1066) *
                 C121) *
                C50759 * C5084 +
            ((C5433 + C5432) * C50670 + (C5431 + C5430) * C121) * C50759 *
                C5083 +
            ((C5429 + C5428) * C50670 + (C5427 + C5426) * C121) * C50759 *
                C5082) *
               C250 -
           (((C2177 * C1059 + C50616 * C1067 + C2176 * C1060 + C2171 * C1068) *
                 C50670 +
             (C2177 * C1055 + C50616 * C1063 + C2176 * C1056 + C2171 * C1064) *
                 C121) *
                C50759 * C5084 +
            ((C5449 + C5448) * C50670 + (C5447 + C5446) * C121) * C50759 *
                C5083 +
            ((C5445 + C5444) * C50670 + (C5443 + C5442) * C121) * C50759 *
                C5082) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C506 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C501 -
            (C2373 + C2374) * C507 - (C2375 + C2376) * C502 + C2701 * C508 +
            C2702 * C503) *
               C50759 * C5082 +
           ((C5426 + C5427) * C506 + (C5428 + C5429) * C501 -
            (C3036 + C3035) * C507 - (C3038 + C3037) * C502 +
            (C3040 + C3039) * C508 + (C3042 + C3041) * C503) *
               C50759 * C5083 +
           ((C5430 + C5431) * C506 + (C5432 + C5433) * C501 -
            (C3377 + C3378) * C507 - (C3379 + C3380) * C502 +
            (C3382 + C3381) * C508 + (C3384 + C3383) * C503) *
               C50759 * C5084) *
              C50636 * C50901 +
          (((C3035 + C3036) * C507 -
            ((C5429 + C5428) * C501 + (C5427 + C5426) * C506) +
            (C3037 + C3038) * C502 - C3047 * C508 - C3048 * C503) *
               C50759 * C5082 +
           ((C3378 + C3377) * C507 -
            ((C5433 + C5432) * C501 + (C5431 + C5430) * C506) +
            (C3380 + C3379) * C502 - (C3381 + C3382) * C508 -
            (C3383 + C3384) * C503) *
               C50759 * C5083 +
           ((C2176 * C3485 + C2171 * C3493 + C2177 * C3484 + C50616 * C3492) *
                C507 -
            ((C2177 * C1061 + C50616 * C1069 + C2176 * C1062 + C2171 * C1070) *
                 C501 +
             (C2177 * C1057 + C50616 * C1065 + C2176 * C1058 + C2171 * C1066) *
                 C506) +
            (C2176 * C3491 + C2171 * C3497 + C2177 * C3490 + C50616 * C3496) *
                C502 -
            (C2177 * C3482 + C50616 * C3488 + C2176 * C3483 + C2171 * C3489) *
                C508 -
            (C2177 * C3486 + C50616 * C3494 + C2176 * C3487 + C2171 * C3495) *
                C503) *
               C50759 * C5084) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C50670) *
               C50759 * C5082 +
           ((C5426 + C5427) * C121 + (C5428 + C5429) * C50670) * C50759 *
               C5083 +
           C6032 * C5084) *
              C50636 * C1051 -
          (C6333 * C5084 +
           ((C5433 + C5432) * C50670 + (C5431 + C5430) * C121) * C50759 *
               C5083 +
           ((C5429 + C5428) * C50670 + (C5427 + C5426) * C121) * C50759 *
               C5082) *
              C50636 * C1052 +
          (C6032 * C5082 +
           ((C6029 + C6028) * C121 + (C6027 + C6026) * C50670) * C50759 *
               C5083 +
           ((C6328 + C6329) * C121 + (C6330 + C6331) * C50670) * C50759 *
               C5084) *
              C50636 * C1053 -
          (((C2177 * C6309 + C50616 * C6313 + C2176 * C6310 + C2171 * C6314) *
                C50670 +
            (C2177 * C6307 + C50616 * C6311 + C2176 * C6308 + C2171 * C6312) *
                C121) *
               C50759 * C5084 +
           ((C6331 + C6330) * C50670 + (C6329 + C6328) * C121) * C50759 *
               C5083 +
           C6333 * C5082) *
              C50636 * C1054)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C50670) *
                C2173 +
            ((C2374 + C2373) * C121 + (C2376 + C2375) * C50670) * C2174 +
            (C2701 * C121 + C2702 * C50670) * C2175) *
               C50771 * C50945 -
           ((C2712 * C50670 + C2711 * C121) * C2175 +
            ((C2384 + C2383) * C50670 + (C2382 + C2381) * C121) * C2174 +
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C50670 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50771 * C50930 +
           (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                 C50670) *
                C2173 +
            ((C2390 + C2389) * C121 + (C2392 + C2391) * C50670) * C2174 +
            ((C2394 + C2393) * C121 + (C2396 + C2395) * C50670) * C2175) *
               C50771 * C1173) *
              C1514 +
          ((((C2176 * C379 + C2171 * C385 + C2177 * C380 + C50616 * C386) *
                 C121 +
             (C2176 * C389 + C2171 * C397 + C2177 * C390 + C50616 * C398) *
                 C50670) *
                C2173 +
            ((C4006 + C4005) * C121 + (C4008 + C4007) * C50670) * C2174 +
            ((C4010 + C4009) * C121 + (C4012 + C4011) * C50670) * C2175) *
               C50771 * C50930 -
           ((C3048 * C50670 + C3047 * C121) * C2175 +
            ((C3038 + C3037) * C50670 + (C3036 + C3035) * C121) * C2174 +
            ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                 C50670 +
             (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                 C121) *
                C2173) *
               C50771 * C50945 -
           (((C2177 * C738 + C50616 * C746 + C2176 * C739 + C2171 * C747) *
                 C50670 +
             (C2177 * C722 + C50616 * C734 + C2176 * C723 + C2171 * C735) *
                 C121) *
                C2175 +
            ((C2177 * C733 + C50616 * C745 + C2176 * C732 + C2171 * C744) *
                 C50670 +
             (C2177 * C721 + C50616 * C729 + C2176 * C720 + C2171 * C728) *
                 C121) *
                C2174 +
            ((C2177 * C391 + C50616 * C399 + C2176 * C390 + C2171 * C398) *
                 C50670 +
             (C2177 * C381 + C50616 * C387 + C2176 * C380 + C2171 * C386) *
                 C121) *
                C2173) *
               C50771 * C1173) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50670) *
               C50759 * C50771 * C50945 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50670 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50759 * C50771 * C50930 +
           ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50670) *
               C50759 * C50771 * C1173) *
              C1514 +
          (((C117 * C379 + C105 * C385 + C118 * C380 + C106 * C386 +
             C119 * C381 + C107 * C387 + C120 * C382 + C108 * C388) *
                C121 +
            (C117 * C389 + C105 * C397 + C118 * C390 + C106 * C398 +
             C119 * C391 + C107 * C399 + C120 * C392 + C108 * C400) *
                C50670) *
               C50759 * C50771 * C50930 -
           ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
             C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
                C50670 +
            (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
             C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
                C121) *
               C50759 * C50771 * C50945 -
           ((C120 * C395 + C108 * C402 + C119 * C392 + C107 * C400 +
             C118 * C391 + C106 * C399 + C117 * C390 + C105 * C398) *
                C50670 +
            (C120 * C384 + C108 * C396 + C119 * C382 + C107 * C388 +
             C118 * C381 + C106 * C387 + C117 * C380 + C105 * C386) *
                C121) *
               C50759 * C50771 * C1173) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C50670) *
                C50759 * C5082 +
            ((C5426 + C5427) * C121 + (C5428 + C5429) * C50670) * C50759 *
                C5083 +
            C6032 * C5084) *
               C50945 -
           (C6033 * C5084 +
            ((C5438 + C5439) * C50670 + (C5440 + C5441) * C121) * C50759 *
                C5083 +
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C50670 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C50759 * C5082) *
               C50930 +
           (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                 C50670) *
                C50759 * C5082 +
            ((C5442 + C5443) * C121 + (C5444 + C5445) * C50670) * C50759 *
                C5083 +
            ((C5446 + C5447) * C121 + (C5448 + C5449) * C50670) * C50759 *
                C5084) *
               C1173) *
              C1514 +
          ((((C5441 + C5440) * C121 + (C5439 + C5438) * C50670) * C50759 *
                C5082 +
            ((C5437 + C5436) * C121 + (C5435 + C5434) * C50670) * C50759 *
                C5083 +
            ((C6022 + C6023) * C121 + (C6024 + C6025) * C50670) * C50759 *
                C5084) *
               C50930 -
           (C6333 * C5084 +
            ((C5433 + C5432) * C50670 + (C5431 + C5430) * C121) * C50759 *
                C5083 +
            ((C5429 + C5428) * C50670 + (C5427 + C5426) * C121) * C50759 *
                C5082) *
               C50945 -
           (((C2177 * C1059 + C50616 * C1067 + C2176 * C1060 + C2171 * C1068) *
                 C50670 +
             (C2177 * C1055 + C50616 * C1063 + C2176 * C1056 + C2171 * C1064) *
                 C121) *
                C50759 * C5084 +
            ((C5449 + C5448) * C50670 + (C5447 + C5446) * C121) * C50759 *
                C5083 +
            ((C5445 + C5444) * C50670 + (C5443 + C5442) * C121) * C50759 *
                C5082) *
               C1173) *
              C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C253 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C50899 -
             (C2373 + C2374) * C254 - (C2375 + C2376) * C50686) *
                C2173 +
            ((C2374 + C2373) * C253 + (C2376 + C2375) * C50899 -
             (C2377 + C2378) * C254 - (C2379 + C2380) * C50686) *
                C2174 +
            (C2701 * C253 + C2702 * C50899 - C2835 * C254 - C2836 * C50686) *
                C2175) *
               C50771 * C1277 +
           (((C2381 + C2382) * C254 -
             ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                  C50899 +
              (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                  C253) +
             (C2383 + C2384) * C50686) *
                C2173 +
            ((C2385 + C2386) * C254 -
             ((C2384 + C2383) * C50899 + (C2382 + C2381) * C253) +
             (C2387 + C2388) * C50686) *
                C2174 +
            ((C2726 + C2725) * C254 - (C2712 * C50899 + C2711 * C253) +
             (C2728 + C2727) * C50686) *
                C2175) *
               C50771 * C50641) *
              C1514 +
          ((((C3035 + C3036) * C254 -
             ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                  C50899 +
              (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                  C253) +
             (C3037 + C3038) * C50686) *
                C2173 +
            ((C3040 + C3039) * C254 -
             ((C3038 + C3037) * C50899 + (C3036 + C3035) * C253) +
             (C3042 + C3041) * C50686) *
                C2174 +
            ((C3044 + C3043) * C254 - (C3048 * C50899 + C3047 * C253) +
             (C3046 + C3045) * C50686) *
                C2175) *
               C50771 * C1277 +
           (((C2176 * C379 + C2171 * C385 + C2177 * C380 + C50616 * C386) *
                 C253 +
             (C2176 * C389 + C2171 * C397 + C2177 * C390 + C50616 * C398) *
                 C50899 -
             (C4005 + C4006) * C254 - (C4007 + C4008) * C50686) *
                C2173 +
            ((C4006 + C4005) * C253 + (C4008 + C4007) * C50899 -
             (C4009 + C4010) * C254 - (C4011 + C4012) * C50686) *
                C2174 +
            ((C4010 + C4009) * C253 + (C4012 + C4011) * C50899 -
             (C2177 * C3984 + C50616 * C3985 + C2176 * C2994 + C2171 * C2998) *
                 C254 -
             (C2177 * C3986 + C50616 * C3987 + C2176 * C3000 + C2171 * C3006) *
                 C50686) *
                C2175) *
               C50771 * C50641) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C253 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50899 -
            (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
             C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
                C254 -
            (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
             C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
                C50686) *
               C50759 * C50771 * C1277 +
           ((C117 * C257 + C105 * C263 + C118 * C256 + C106 * C262 +
             C119 * C255 + C107 * C261 + C120 * C259 + C108 * C269) *
                C254 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C50899 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C253) +
            (C117 * C267 + C105 * C275 + C118 * C266 + C106 * C274 +
             C119 * C265 + C107 * C273 + C120 * C270 + C108 * C277) *
                C50686) *
               C50759 * C50771 * C50641) *
              C1514 +
          (((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C254 -
            ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
              C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
                 C50899 +
             (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
              C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
                 C253) +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C50686) *
               C50759 * C50771 * C1277 +
           ((C117 * C379 + C105 * C385 + C118 * C380 + C106 * C386 +
             C119 * C381 + C107 * C387 + C120 * C382 + C108 * C388) *
                C253 +
            (C117 * C389 + C105 * C397 + C118 * C390 + C106 * C398 +
             C119 * C391 + C107 * C399 + C120 * C392 + C108 * C400) *
                C50899 -
            (C120 * C1412 + C108 * C1413 + C119 * C721 + C107 * C729 +
             C118 * C720 + C106 * C728 + C117 * C719 + C105 * C727) *
                C254 -
            (C120 * C1414 + C108 * C1415 + C119 * C733 + C107 * C745 +
             C118 * C732 + C106 * C744 + C117 * C731 + C105 * C743) *
                C50686) *
               C50759 * C50771 * C50641) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C253 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C50899 -
             (C2373 + C2374) * C254 - (C2375 + C2376) * C50686) *
                C50759 * C5082 +
            ((C5426 + C5427) * C253 + (C5428 + C5429) * C50899 -
             (C3036 + C3035) * C254 - (C3038 + C3037) * C50686) *
                C50759 * C5083 +
            C6209 * C5084) *
               C1277 +
           (((C2381 + C2382) * C254 -
             ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                  C50899 +
              (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                  C253) +
             (C2383 + C2384) * C50686) *
                C50759 * C5082 +
            ((C4006 + C4005) * C254 -
             ((C5438 + C5439) * C50899 + (C5440 + C5441) * C253) +
             (C4008 + C4007) * C50686) *
                C50759 * C5083 +
            ((C6832 + C6833) * C254 - (C6000 * C50899 + C6001 * C253) +
             (C6834 + C6835) * C50686) *
                C50759 * C5084) *
               C50641) *
              C1514 +
          ((((C3035 + C3036) * C254 -
             ((C5429 + C5428) * C50899 + (C5427 + C5426) * C253) +
             (C3037 + C3038) * C50686) *
                C50759 * C5082 +
            ((C3378 + C3377) * C254 -
             ((C5433 + C5432) * C50899 + (C5431 + C5430) * C253) +
             (C3380 + C3379) * C50686) *
                C50759 * C5083 +
            ((C6203 + C6204) * C254 - (C6316 * C50899 + C6317 * C253) +
             (C6205 + C6206) * C50686) *
                C50759 * C5084) *
               C1277 +
           (((C5441 + C5440) * C253 + (C5439 + C5438) * C50899 -
             (C4005 + C4006) * C254 - (C4007 + C4008) * C50686) *
                C50759 * C5082 +
            ((C5437 + C5436) * C253 + (C5435 + C5434) * C50899 -
             (C6833 + C6832) * C254 - (C6835 + C6834) * C50686) *
                C50759 * C5083 +
            ((C6022 + C6023) * C253 + (C6024 + C6025) * C50899 -
             (C2177 * C6819 + C50616 * C6820 + C2176 * C3484 + C2171 * C3492) *
                 C254 -
             (C2177 * C6821 + C50616 * C6822 + C2176 * C3490 + C2171 * C3496) *
                 C50686) *
                C50759 * C5084) *
               C50641) *
              C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C50670) *
                C2173 +
            ((C2374 + C2373) * C121 + (C2376 + C2375) * C50670) * C2174 +
            (C2701 * C121 + C2702 * C50670) * C2175) *
               C50771 * C1277 -
           ((C2712 * C50670 + C2711 * C121) * C2175 +
            ((C2384 + C2383) * C50670 + (C2382 + C2381) * C121) * C2174 +
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C50670 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50771 * C50641) *
              C50947 +
          ((((C2176 * C379 + C2171 * C385 + C2177 * C380 + C50616 * C386) *
                 C121 +
             (C2176 * C389 + C2171 * C397 + C2177 * C390 + C50616 * C398) *
                 C50670) *
                C2173 +
            ((C4006 + C4005) * C121 + (C4008 + C4007) * C50670) * C2174 +
            ((C4010 + C4009) * C121 + (C4012 + C4011) * C50670) * C2175) *
               C50771 * C50641 -
           ((C3048 * C50670 + C3047 * C121) * C2175 +
            ((C3038 + C3037) * C50670 + (C3036 + C3035) * C121) * C2174 +
            ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                 C50670 +
             (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                 C121) *
                C2173) *
               C50771 * C1277) *
              C50936 +
          ((((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50616 * C857) *
                 C121 +
             (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50616 * C867) *
                 C50670) *
                C2173 +
            ((C3378 + C3377) * C121 + (C3380 + C3379) * C50670) * C2174 +
            ((C3382 + C3381) * C121 + (C3384 + C3383) * C50670) * C2175) *
               C50771 * C1277 -
           (((C2177 * C3201 + C50616 * C3205 + C2176 * C3200 + C2171 * C3204) *
                 C50670 +
             (C2177 * C3196 + C50616 * C3202 + C2176 * C3195 + C2171 * C3198) *
                 C121) *
                C2175 +
            ((C2177 * C978 + C50616 * C982 + C2176 * C979 + C2171 * C983) *
                 C50670 +
             (C2177 * C970 + C50616 * C974 + C2176 * C971 + C2171 * C975) *
                 C121) *
                C2174 +
            ((C2177 * C862 + C50616 * C868 + C2176 * C861 + C2171 * C867) *
                 C50670 +
             (C2177 * C853 + C50616 * C858 + C2176 * C852 + C2171 * C857) *
                 C121) *
                C2173) *
               C50771 * C50641) *
              C1746)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50670) *
               C50759 * C50771 * C1277 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50670 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50759 * C50771 * C50641) *
              C50947 +
          (((C117 * C379 + C105 * C385 + C118 * C380 + C106 * C386 +
             C119 * C381 + C107 * C387 + C120 * C382 + C108 * C388) *
                C121 +
            (C117 * C389 + C105 * C397 + C118 * C390 + C106 * C398 +
             C119 * C391 + C107 * C399 + C120 * C392 + C108 * C400) *
                C50670) *
               C50759 * C50771 * C50641 -
           ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
             C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
                C50670 +
            (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
             C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
                C121) *
               C50759 * C50771 * C1277) *
              C50936 +
          (((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
             C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
                C121 +
            (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
             C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
                C50670) *
               C50759 * C50771 * C1277 -
           ((C120 * C864 + C108 * C870 + C119 * C863 + C107 * C869 +
             C118 * C862 + C106 * C868 + C117 * C861 + C105 * C867) *
                C50670 +
            (C120 * C855 + C108 * C865 + C119 * C854 + C107 * C859 +
             C118 * C853 + C106 * C858 + C117 * C852 + C105 * C857) *
                C121) *
               C50759 * C50771 * C50641) *
              C1746)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C50670) *
                C50759 * C5082 +
            ((C5426 + C5427) * C121 + (C5428 + C5429) * C50670) * C50759 *
                C5083 +
            C6032 * C5084) *
               C1277 -
           (C6033 * C5084 +
            ((C5438 + C5439) * C50670 + (C5440 + C5441) * C121) * C50759 *
                C5083 +
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C50670 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C50759 * C5082) *
               C50641) *
              C50947 +
          ((((C5441 + C5440) * C121 + (C5439 + C5438) * C50670) * C50759 *
                C5082 +
            ((C5437 + C5436) * C121 + (C5435 + C5434) * C50670) * C50759 *
                C5083 +
            ((C6022 + C6023) * C121 + (C6024 + C6025) * C50670) * C50759 *
                C5084) *
               C50641 -
           (C6333 * C5084 +
            ((C5433 + C5432) * C50670 + (C5431 + C5430) * C121) * C50759 *
                C5083 +
            ((C5429 + C5428) * C50670 + (C5427 + C5426) * C121) * C50759 *
                C5082) *
               C1277) *
              C50936 +
          ((C6032 * C5082 +
            ((C6029 + C6028) * C121 + (C6027 + C6026) * C50670) * C50759 *
                C5083 +
            ((C6328 + C6329) * C121 + (C6330 + C6331) * C50670) * C50759 *
                C5084) *
               C1277 -
           (((C2177 * C5992 + C50616 * C5996 + C2176 * C5991 + C2171 * C5995) *
                 C50670 +
             (C2177 * C5987 + C50616 * C5993 + C2176 * C5986 + C2171 * C5989) *
                 C121) *
                C50759 * C5084 +
            ((C6025 + C6024) * C50670 + (C6023 + C6022) * C121) * C50759 *
                C5083 +
            C6033 * C5082) *
               C50641) *
              C1746)) /
            (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C506 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C501 -
           (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
            C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
               C507 -
           (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
            C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
               C502 +
           (C117 * C509 + C105 * C514 + C118 * C510 + C106 * C515 +
            C119 * C511 + C107 * C516 + C120 * C512 + C108 * C517) *
               C508 +
           (C117 * C518 + C105 * C524 + C118 * C519 + C106 * C525 +
            C119 * C520 + C107 * C526 + C120 * C521 + C108 * C527) *
               C503) *
              C50759 * C50771 * C50892 +
          ((C117 * C257 + C105 * C263 + C118 * C256 + C106 * C262 +
            C119 * C255 + C107 * C261 + C120 * C259 + C108 * C269) *
               C507 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C501 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C506) +
           (C117 * C267 + C105 * C275 + C118 * C266 + C106 * C274 +
            C119 * C265 + C107 * C273 + C120 * C270 + C108 * C277) *
               C502 -
           (C120 * C513 + C108 * C522 + C119 * C512 + C107 * C517 +
            C118 * C511 + C106 * C516 + C117 * C510 + C105 * C515) *
               C508 -
           (C120 * C523 + C108 * C528 + C119 * C521 + C107 * C527 +
            C118 * C520 + C106 * C526 + C117 * C519 + C105 * C525) *
               C503) *
              C50759 * C50771 * C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50670) *
              C50759 * C50771 * C112 -
          ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
            C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
               C50670 +
           (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
            C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
               C121) *
              C50759 * C50771 * C113 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C121 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C50670) *
              C50759 * C50771 * C114 -
          ((C120 * C141 + C108 * C149 + C119 * C140 + C107 * C148 +
            C118 * C137 + C106 * C147 + C117 * C136 + C105 * C146) *
               C50670 +
           (C120 * C128 + C108 * C142 + C119 * C127 + C107 * C139 +
            C118 * C126 + C106 * C138 + C117 * C125 + C105 * C132) *
               C121) *
              C50759 * C50771 * C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C50670) *
               C2173 +
           ((C2176 * C258 + C2171 * C264 + C2177 * C257 + C50616 * C263) *
                C121 +
            (C2176 * C268 + C2171 * C276 + C2177 * C267 + C50616 * C275) *
                C50670) *
               C2174 +
           ((C2176 * C509 + C2171 * C514 + C2177 * C510 + C50616 * C515) *
                C121 +
            (C2176 * C518 + C2171 * C524 + C2177 * C519 + C50616 * C525) *
                C50670) *
               C2175) *
              C50771 * C112 -
          (((C2177 * C520 + C50616 * C526 + C2176 * C519 + C2171 * C525) *
                C50670 +
            (C2177 * C511 + C50616 * C516 + C2176 * C510 + C2171 * C515) *
                C121) *
               C2175 +
           ((C2177 * C266 + C50616 * C274 + C2176 * C267 + C2171 * C275) *
                C50670 +
            (C2177 * C256 + C50616 * C262 + C2176 * C257 + C2171 * C263) *
                C121) *
               C2174 +
           ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                C50670 +
            (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                C121) *
               C2173) *
              C50771 * C113 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                C121 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                C50670) *
               C2173 +
           ((C2176 * C256 + C2171 * C262 + C2177 * C255 + C50616 * C261) *
                C121 +
            (C2176 * C266 + C2171 * C274 + C2177 * C265 + C50616 * C273) *
                C50670) *
               C2174 +
           ((C2176 * C511 + C2171 * C516 + C2177 * C512 + C50616 * C517) *
                C121 +
            (C2176 * C520 + C2171 * C526 + C2177 * C521 + C50616 * C527) *
                C50670) *
               C2175) *
              C50771 * C114 -
          (((C2177 * C523 + C50616 * C528 + C2176 * C521 + C2171 * C527) *
                C50670 +
            (C2177 * C513 + C50616 * C522 + C2176 * C512 + C2171 * C517) *
                C121) *
               C2175 +
           ((C2177 * C270 + C50616 * C277 + C2176 * C265 + C2171 * C273) *
                C50670 +
            (C2177 * C259 + C50616 * C269 + C2176 * C255 + C2171 * C261) *
                C121) *
               C2174 +
           ((C2177 * C137 + C50616 * C147 + C2176 * C136 + C2171 * C146) *
                C50670 +
            (C2177 * C126 + C50616 * C138 + C2176 * C125 + C2171 * C132) *
                C121) *
               C2173) *
              C50771 * C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C506 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C501 -
            (C2373 + C2374) * C507 - (C2375 + C2376) * C502 + C2701 * C508 +
            C2702 * C503) *
               C2173 +
           ((C2374 + C2373) * C506 + (C2376 + C2375) * C501 -
            (C2377 + C2378) * C507 - (C2379 + C2380) * C502 +
            (C2721 + C2722) * C508 + (C2723 + C2724) * C503) *
               C2174 +
           (C2701 * C506 + C2702 * C501 - (C2722 + C2721) * C507 -
            (C2724 + C2723) * C502 +
            (C2176 * C2688 + C2171 * C2691 + C2177 * C2689 + C50616 * C2692) *
                C508 +
            (C2176 * C2693 + C2171 * C2697 + C2177 * C2694 + C50616 * C2698) *
                C503) *
               C2175) *
              C50771 * C50892 +
          (((C2381 + C2382) * C507 -
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C501 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C506) +
            (C2383 + C2384) * C502 - C2711 * C508 - C2712 * C503) *
               C2173 +
           ((C2385 + C2386) * C507 -
            ((C2384 + C2383) * C501 + (C2382 + C2381) * C506) +
            (C2387 + C2388) * C502 - (C2725 + C2726) * C508 -
            (C2727 + C2728) * C503) *
               C2174 +
           ((C2726 + C2725) * C507 - (C2712 * C501 + C2711 * C506) +
            (C2728 + C2727) * C502 -
            (C2177 * C2690 + C50616 * C2695 + C2176 * C2689 + C2171 * C2692) *
                C508 -
            (C2177 * C2696 + C50616 * C2699 + C2176 * C2694 + C2171 * C2698) *
                C503) *
               C2175) *
              C50771 * C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C50670) *
               C50759 * C5082 +
           ((C2176 * C383 + C2171 * C394 + C2177 * C379 + C50616 * C385) *
                C121 +
            (C2176 * C393 + C2171 * C401 + C2177 * C389 + C50616 * C397) *
                C50670) *
               C50759 * C5083 +
           ((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50616 * C857) *
                C121 +
            (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50616 * C867) *
                C50670) *
               C50759 * C5084) *
              C112 -
          (((C2177 * C862 + C50616 * C868 + C2176 * C861 + C2171 * C867) *
                C50670 +
            (C2177 * C853 + C50616 * C858 + C2176 * C852 + C2171 * C857) *
                C121) *
               C50759 * C5084 +
           ((C2177 * C390 + C50616 * C398 + C2176 * C389 + C2171 * C397) *
                C50670 +
            (C2177 * C380 + C50616 * C386 + C2176 * C379 + C2171 * C385) *
                C121) *
               C50759 * C5083 +
           ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                C50670 +
            (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                C121) *
               C50759 * C5082) *
              C113 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                C121 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                C50670) *
               C50759 * C5082 +
           ((C2176 * C380 + C2171 * C386 + C2177 * C381 + C50616 * C387) *
                C121 +
            (C2176 * C390 + C2171 * C398 + C2177 * C391 + C50616 * C399) *
                C50670) *
               C50759 * C5083 +
           ((C2176 * C853 + C2171 * C858 + C2177 * C854 + C50616 * C859) *
                C121 +
            (C2176 * C862 + C2171 * C868 + C2177 * C863 + C50616 * C869) *
                C50670) *
               C50759 * C5084) *
              C114 -
          (((C2177 * C864 + C50616 * C870 + C2176 * C863 + C2171 * C869) *
                C50670 +
            (C2177 * C855 + C50616 * C865 + C2176 * C854 + C2171 * C859) *
                C121) *
               C50759 * C5084 +
           ((C2177 * C392 + C50616 * C400 + C2176 * C391 + C2171 * C399) *
                C50670 +
            (C2177 * C382 + C50616 * C388 + C2176 * C381 + C2171 * C387) *
                C121) *
               C50759 * C5083 +
           ((C2177 * C137 + C50616 * C147 + C2176 * C136 + C2171 * C146) *
                C50670 +
            (C2177 * C126 + C50616 * C138 + C2176 * C125 + C2171 * C132) *
                C121) *
               C50759 * C5082) *
              C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C506 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C501 -
            (C2373 + C2374) * C507 - (C2375 + C2376) * C502 + C2701 * C508 +
            C2702 * C503) *
               C50759 * C5082 +
           ((C5426 + C5427) * C506 + (C5428 + C5429) * C501 -
            (C3036 + C3035) * C507 - (C3038 + C3037) * C502 +
            (C3040 + C3039) * C508 + (C3042 + C3041) * C503) *
               C50759 * C5083 +
           ((C5430 + C5431) * C506 + (C5432 + C5433) * C501 -
            (C3377 + C3378) * C507 - (C3379 + C3380) * C502 +
            (C3382 + C3381) * C508 + (C3384 + C3383) * C503) *
               C50759 * C5084) *
              C50892 +
          (((C2381 + C2382) * C507 -
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C501 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C506) +
            (C2383 + C2384) * C502 - C2711 * C508 - C2712 * C503) *
               C50759 * C5082 +
           ((C4006 + C4005) * C507 -
            ((C5438 + C5439) * C501 + (C5440 + C5441) * C506) +
            (C4008 + C4007) * C502 - (C4009 + C4010) * C508 -
            (C4011 + C4012) * C503) *
               C50759 * C5083 +
           ((C2176 * C971 + C2171 * C975 + C2177 * C970 + C50616 * C974) *
                C507 -
            ((C5434 + C5435) * C501 + (C5436 + C5437) * C506) +
            (C2176 * C979 + C2171 * C983 + C2177 * C978 + C50616 * C982) *
                C502 -
            (C2177 * C3196 + C50616 * C3202 + C2176 * C3195 + C2171 * C3198) *
                C508 -
            (C2177 * C3201 + C50616 * C3205 + C2176 * C3200 + C2171 * C3204) *
                C503) *
               C50759 * C5084) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 + C119 * C124 +
           C107 * C131 + C120 * C125 + C108 * C132) *
              C600 +
          (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 + C119 * C135 +
           C107 * C145 + C120 * C136 + C108 * C146) *
              C595 -
          (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 + C118 * C257 +
           C106 * C263 + C117 * C258 + C105 * C264) *
              C601 -
          (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 + C118 * C267 +
           C106 * C275 + C117 * C268 + C105 * C276) *
              C596 +
          (C117 * C509 + C105 * C514 + C118 * C510 + C106 * C515 + C119 * C511 +
           C107 * C516 + C120 * C512 + C108 * C517) *
              C602 +
          (C117 * C518 + C105 * C524 + C118 * C519 + C106 * C525 + C119 * C520 +
           C107 * C526 + C120 * C521 + C108 * C527) *
              C597 -
          (C120 * C604 + C108 * C608 + C119 * C605 + C107 * C609 + C118 * C606 +
           C106 * C610 + C117 * C607 + C105 * C611) *
              C603 -
          (C120 * C612 + C108 * C616 + C119 * C613 + C107 * C617 + C118 * C614 +
           C106 * C618 + C117 * C615 + C105 * C619) *
              C598) *
         C50759 * C50771 * C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C253 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50899 -
           (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
            C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
               C254 -
           (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
            C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
               C50686) *
              C50759 * C50771 * C250 +
          ((C117 * C257 + C105 * C263 + C118 * C256 + C106 * C262 +
            C119 * C255 + C107 * C261 + C120 * C259 + C108 * C269) *
               C254 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50899 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C253) +
           (C117 * C267 + C105 * C275 + C118 * C266 + C106 * C274 +
            C119 * C265 + C107 * C273 + C120 * C270 + C108 * C277) *
               C50686) *
              C50759 * C50771 * C251 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C253 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C50899 -
           (C120 * C260 + C108 * C271 + C119 * C259 + C107 * C269 +
            C118 * C255 + C106 * C261 + C117 * C256 + C105 * C262) *
               C254 -
           (C120 * C272 + C108 * C278 + C119 * C270 + C107 * C277 +
            C118 * C265 + C106 * C273 + C117 * C266 + C105 * C274) *
               C50686) *
              C50759 * C50771 * C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C253 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C50899 -
            (C2373 + C2374) * C254 - (C2375 + C2376) * C50686) *
               C2173 +
           ((C2374 + C2373) * C253 + (C2376 + C2375) * C50899 -
            (C2377 + C2378) * C254 - (C2379 + C2380) * C50686) *
               C2174 +
           ((C2378 + C2377) * C253 + (C2380 + C2379) * C50899 -
            (C2177 * C606 + C50616 * C610 + C2176 * C607 + C2171 * C611) *
                C254 -
            (C2177 * C614 + C50616 * C618 + C2176 * C615 + C2171 * C619) *
                C50686) *
               C2175) *
              C50771 * C250 +
          (((C2381 + C2382) * C254 -
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C50899 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C253) +
            (C2383 + C2384) * C50686) *
               C2173 +
           ((C2385 + C2386) * C254 -
            ((C2384 + C2383) * C50899 + (C2382 + C2381) * C253) +
            (C2387 + C2388) * C50686) *
               C2174 +
           ((C2176 * C606 + C2171 * C610 + C2177 * C605 + C50616 * C609) *
                C254 -
            ((C2388 + C2387) * C50899 + (C2386 + C2385) * C253) +
            (C2176 * C614 + C2171 * C618 + C2177 * C613 + C50616 * C617) *
                C50686) *
               C2175) *
              C50771 * C251 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                C253 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                C50899 -
            (C2389 + C2390) * C254 - (C2391 + C2392) * C50686) *
               C2173 +
           ((C2390 + C2389) * C253 + (C2392 + C2391) * C50899 -
            (C2393 + C2394) * C254 - (C2395 + C2396) * C50686) *
               C2174 +
           ((C2394 + C2393) * C253 + (C2396 + C2395) * C50899 -
            (C2177 * C604 + C50616 * C608 + C2176 * C605 + C2171 * C609) *
                C254 -
            (C2177 * C612 + C50616 * C616 + C2176 * C613 + C2171 * C617) *
                C50686) *
               C2175) *
              C50771 * C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) * C600 +
           (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) * C595 -
           (C2373 + C2374) * C601 - (C2375 + C2376) * C596 + C2701 * C602 +
           C2702 * C597 - C2835 * C603 - C2836 * C598) *
              C2173 +
          ((C2374 + C2373) * C600 + (C2376 + C2375) * C595 -
           (C2377 + C2378) * C601 - (C2379 + C2380) * C596 +
           (C2721 + C2722) * C602 + (C2723 + C2724) * C597 -
           (C2845 + C2846) * C603 - (C2847 + C2848) * C598) *
              C2174 +
          (C2701 * C600 + C2702 * C595 - C2835 * C601 - C2836 * C596 +
           (C2846 + C2845) * C602 + (C2848 + C2847) * C597 -
           (C2177 * C2826 + C50616 * C2828 + C2176 * C2827 + C2171 * C2829) *
               C603 -
           (C2177 * C2830 + C50616 * C2832 + C2176 * C2831 + C2171 * C2833) *
               C598) *
              C2175) *
         C50771 * C50636 * C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C253 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C50899 -
            (C2373 + C2374) * C254 - (C2375 + C2376) * C50686) *
               C50759 * C5082 +
           ((C2176 * C383 + C2171 * C394 + C2177 * C379 + C50616 * C385) *
                C253 +
            (C2176 * C393 + C2171 * C401 + C2177 * C389 + C50616 * C397) *
                C50899 -
            (C3036 + C3035) * C254 - (C3038 + C3037) * C50686) *
               C50759 * C5083 +
           ((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50616 * C857) *
                C253 +
            (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50616 * C867) *
                C50899 -
            (C3377 + C3378) * C254 - (C3379 + C3380) * C50686) *
               C50759 * C5084) *
              C250 +
          (((C2381 + C2382) * C254 -
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C50899 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C253) +
            (C2383 + C2384) * C50686) *
               C50759 * C5082 +
           ((C4006 + C4005) * C254 -
            ((C2177 * C390 + C50616 * C398 + C2176 * C389 + C2171 * C397) *
                 C50899 +
             (C2177 * C380 + C50616 * C386 + C2176 * C379 + C2171 * C385) *
                 C253) +
            (C4008 + C4007) * C50686) *
               C50759 * C5083 +
           ((C2176 * C971 + C2171 * C975 + C2177 * C970 + C50616 * C974) *
                C254 -
            ((C2177 * C862 + C50616 * C868 + C2176 * C861 + C2171 * C867) *
                 C50899 +
             (C2177 * C853 + C50616 * C858 + C2176 * C852 + C2171 * C857) *
                 C253) +
            (C2176 * C979 + C2171 * C983 + C2177 * C978 + C50616 * C982) *
                C50686) *
               C50759 * C5084) *
              C251 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                C253 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                C50899 -
            (C2389 + C2390) * C254 - (C2391 + C2392) * C50686) *
               C50759 * C5082 +
           ((C2176 * C380 + C2171 * C386 + C2177 * C381 + C50616 * C387) *
                C253 +
            (C2176 * C390 + C2171 * C398 + C2177 * C391 + C50616 * C399) *
                C50899 -
            (C2177 * C721 + C50616 * C729 + C2176 * C720 + C2171 * C728) *
                C254 -
            (C2177 * C733 + C50616 * C745 + C2176 * C732 + C2171 * C744) *
                C50686) *
               C50759 * C5083 +
           ((C2176 * C853 + C2171 * C858 + C2177 * C854 + C50616 * C859) *
                C253 +
            (C2176 * C862 + C2171 * C868 + C2177 * C863 + C50616 * C869) *
                C50899 -
            (C2177 * C969 + C50616 * C973 + C2176 * C970 + C2171 * C974) *
                C254 -
            (C2177 * C977 + C50616 * C981 + C2176 * C978 + C2171 * C982) *
                C50686) *
               C50759 * C5084) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) * C600 +
           (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) * C595 -
           (C2373 + C2374) * C601 - (C2375 + C2376) * C596 + C2701 * C602 +
           C2702 * C597 - C2835 * C603 - C2836 * C598) *
              C50759 * C5082 +
          ((C5426 + C5427) * C600 + (C5428 + C5429) * C595 -
           (C3036 + C3035) * C601 - (C3038 + C3037) * C596 +
           (C3040 + C3039) * C602 + (C3042 + C3041) * C597 -
           (C3043 + C3044) * C603 - (C3045 + C3046) * C598) *
              C50759 * C5083 +
          ((C5430 + C5431) * C600 + (C5432 + C5433) * C595 -
           (C3377 + C3378) * C601 - (C3379 + C3380) * C596 +
           (C3382 + C3381) * C602 + (C3384 + C3383) * C597 -
           (C2177 * C3352 + C50616 * C3354 + C2176 * C3353 + C2171 * C3355) *
               C603 -
           (C2177 * C3356 + C50616 * C3358 + C2176 * C3357 + C2171 * C3359) *
               C598) *
              C50759 * C5084) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C506 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C501 -
           (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
            C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
               C507 -
           (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
            C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
               C502 +
           (C117 * C509 + C105 * C514 + C118 * C510 + C106 * C515 +
            C119 * C511 + C107 * C516 + C120 * C512 + C108 * C517) *
               C508 +
           (C117 * C518 + C105 * C524 + C118 * C519 + C106 * C525 +
            C119 * C520 + C107 * C526 + C120 * C521 + C108 * C527) *
               C503) *
              C50759 * C50771 * C50636 * C50901 +
          ((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
            C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
               C507 -
           ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
             C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
                C501 +
            (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
             C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
                C506) +
           (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
            C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
               C502 -
           (C120 * C722 + C108 * C734 + C119 * C723 + C107 * C735 +
            C118 * C724 + C106 * C736 + C117 * C725 + C105 * C737) *
               C508 -
           (C120 * C738 + C108 * C746 + C119 * C739 + C107 * C747 +
            C118 * C740 + C106 * C748 + C117 * C741 + C105 * C749) *
               C503) *
              C50759 * C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50670) *
               C50759 * C50771 * C250 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50670 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50759 * C50771 * C251 +
           ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50670) *
               C50759 * C50771 * C252) *
              C50901 +
          (((C117 * C379 + C105 * C385 + C118 * C380 + C106 * C386 +
             C119 * C381 + C107 * C387 + C120 * C382 + C108 * C388) *
                C121 +
            (C117 * C389 + C105 * C397 + C118 * C390 + C106 * C398 +
             C119 * C391 + C107 * C399 + C120 * C392 + C108 * C400) *
                C50670) *
               C50759 * C50771 * C251 -
           ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
             C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
                C50670 +
            (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
             C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
                C121) *
               C50759 * C50771 * C250 -
           ((C120 * C395 + C108 * C402 + C119 * C392 + C107 * C400 +
             C118 * C391 + C106 * C399 + C117 * C390 + C105 * C398) *
                C50670 +
            (C120 * C384 + C108 * C396 + C119 * C382 + C107 * C388 +
             C118 * C381 + C106 * C387 + C117 * C380 + C105 * C386) *
                C121) *
               C50759 * C50771 * C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C50670) *
                C2173 +
            ((C2374 + C2373) * C121 + (C2376 + C2375) * C50670) * C2174 +
            ((C2378 + C2377) * C121 + (C2380 + C2379) * C50670) * C2175) *
               C50771 * C250 -
           (((C2388 + C2387) * C50670 + (C2386 + C2385) * C121) * C2175 +
            ((C2384 + C2383) * C50670 + (C2382 + C2381) * C121) * C2174 +
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C50670 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50771 * C251 +
           (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                 C50670) *
                C2173 +
            ((C2390 + C2389) * C121 + (C2392 + C2391) * C50670) * C2174 +
            ((C2394 + C2393) * C121 + (C2396 + C2395) * C50670) * C2175) *
               C50771 * C252) *
              C50901 +
          ((((C2176 * C379 + C2171 * C385 + C2177 * C380 + C50616 * C386) *
                 C121 +
             (C2176 * C389 + C2171 * C397 + C2177 * C390 + C50616 * C398) *
                 C50670) *
                C2173 +
            ((C2176 * C719 + C2171 * C727 + C2177 * C720 + C50616 * C728) *
                 C121 +
             (C2176 * C731 + C2171 * C743 + C2177 * C732 + C50616 * C744) *
                 C50670) *
                C2174 +
            ((C2176 * C724 + C2171 * C736 + C2177 * C723 + C50616 * C735) *
                 C121 +
             (C2176 * C740 + C2171 * C748 + C2177 * C739 + C50616 * C747) *
                 C50670) *
                C2175) *
               C50771 * C251 -
           (((C2177 * C740 + C50616 * C748 + C2176 * C741 + C2171 * C749) *
                 C50670 +
             (C2177 * C724 + C50616 * C736 + C2176 * C725 + C2171 * C737) *
                 C121) *
                C2175 +
            ((C2177 * C731 + C50616 * C743 + C2176 * C730 + C2171 * C742) *
                 C50670 +
             (C2177 * C719 + C50616 * C727 + C2176 * C718 + C2171 * C726) *
                 C121) *
                C2174 +
            ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                 C50670 +
             (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                 C121) *
                C2173) *
               C50771 * C250 -
           (((C2177 * C738 + C50616 * C746 + C2176 * C739 + C2171 * C747) *
                 C50670 +
             (C2177 * C722 + C50616 * C734 + C2176 * C723 + C2171 * C735) *
                 C121) *
                C2175 +
            ((C2177 * C733 + C50616 * C745 + C2176 * C732 + C2171 * C744) *
                 C50670 +
             (C2177 * C721 + C50616 * C729 + C2176 * C720 + C2171 * C728) *
                 C121) *
                C2174 +
            ((C2177 * C391 + C50616 * C399 + C2176 * C390 + C2171 * C398) *
                 C50670 +
             (C2177 * C381 + C50616 * C387 + C2176 * C380 + C2171 * C386) *
                 C121) *
                C2173) *
               C50771 * C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C506 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C501 -
            (C2373 + C2374) * C507 - (C2375 + C2376) * C502 + C2701 * C508 +
            C2702 * C503) *
               C2173 +
           ((C2374 + C2373) * C506 + (C2376 + C2375) * C501 -
            (C2377 + C2378) * C507 - (C2379 + C2380) * C502 +
            (C2721 + C2722) * C508 + (C2723 + C2724) * C503) *
               C2174 +
           (C2701 * C506 + C2702 * C501 - C2835 * C507 - C2836 * C502 +
            (C2846 + C2845) * C508 + (C2848 + C2847) * C503) *
               C2175) *
              C50771 * C50636 * C50901 +
          (((C3035 + C3036) * C507 -
            ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                 C501 +
             (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                 C506) +
            (C3037 + C3038) * C502 - C3047 * C508 - C3048 * C503) *
               C2173 +
           ((C3040 + C3039) * C507 -
            ((C3038 + C3037) * C501 + (C3036 + C3035) * C506) +
            (C3042 + C3041) * C502 - (C3043 + C3044) * C508 -
            (C3045 + C3046) * C503) *
               C2174 +
           ((C3044 + C3043) * C507 - (C3048 * C501 + C3047 * C506) +
            (C3046 + C3045) * C502 -
            (C2177 * C2996 + C50616 * C3002 + C2176 * C2997 + C2171 * C3003) *
                C508 -
            (C2177 * C3004 + C50616 * C3008 + C2176 * C3005 + C2171 * C3009) *
                C503) *
               C2175) *
              C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C50670) *
                C50759 * C5082 +
            ((C5426 + C5427) * C121 + (C5428 + C5429) * C50670) * C50759 *
                C5083 +
            ((C5430 + C5431) * C121 + (C5432 + C5433) * C50670) * C50759 *
                C5084) *
               C250 -
           (((C5434 + C5435) * C50670 + (C5436 + C5437) * C121) * C50759 *
                C5084 +
            ((C5438 + C5439) * C50670 + (C5440 + C5441) * C121) * C50759 *
                C5083 +
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C50670 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C50759 * C5082) *
               C251 +
           (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                 C50670) *
                C50759 * C5082 +
            ((C5442 + C5443) * C121 + (C5444 + C5445) * C50670) * C50759 *
                C5083 +
            ((C5446 + C5447) * C121 + (C5448 + C5449) * C50670) * C50759 *
                C5084) *
               C252) *
              C50901 +
          ((((C5441 + C5440) * C121 + (C5439 + C5438) * C50670) * C50759 *
                C5082 +
            ((C5437 + C5436) * C121 + (C5435 + C5434) * C50670) * C50759 *
                C5083 +
            ((C2176 * C1057 + C2171 * C1065 + C2177 * C1056 + C50616 * C1064) *
                 C121 +
             (C2176 * C1061 + C2171 * C1069 + C2177 * C1060 + C50616 * C1068) *
                 C50670) *
                C50759 * C5084) *
               C251 -
           (((C2177 * C1061 + C50616 * C1069 + C2176 * C1062 + C2171 * C1070) *
                 C50670 +
             (C2177 * C1057 + C50616 * C1065 + C2176 * C1058 + C2171 * C1066) *
                 C121) *
                C50759 * C5084 +
            ((C5433 + C5432) * C50670 + (C5431 + C5430) * C121) * C50759 *
                C5083 +
            ((C5429 + C5428) * C50670 + (C5427 + C5426) * C121) * C50759 *
                C5082) *
               C250 -
           (((C2177 * C1059 + C50616 * C1067 + C2176 * C1060 + C2171 * C1068) *
                 C50670 +
             (C2177 * C1055 + C50616 * C1063 + C2176 * C1056 + C2171 * C1064) *
                 C121) *
                C50759 * C5084 +
            ((C5449 + C5448) * C50670 + (C5447 + C5446) * C121) * C50759 *
                C5083 +
            ((C5445 + C5444) * C50670 + (C5443 + C5442) * C121) * C50759 *
                C5082) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C506 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C501 -
            (C2373 + C2374) * C507 - (C2375 + C2376) * C502 + C2701 * C508 +
            C2702 * C503) *
               C50759 * C5082 +
           ((C5426 + C5427) * C506 + (C5428 + C5429) * C501 -
            (C3036 + C3035) * C507 - (C3038 + C3037) * C502 +
            (C3040 + C3039) * C508 + (C3042 + C3041) * C503) *
               C50759 * C5083 +
           ((C5430 + C5431) * C506 + (C5432 + C5433) * C501 -
            (C3377 + C3378) * C507 - (C3379 + C3380) * C502 +
            (C3382 + C3381) * C508 + (C3384 + C3383) * C503) *
               C50759 * C5084) *
              C50636 * C50901 +
          (((C3035 + C3036) * C507 -
            ((C5429 + C5428) * C501 + (C5427 + C5426) * C506) +
            (C3037 + C3038) * C502 - C3047 * C508 - C3048 * C503) *
               C50759 * C5082 +
           ((C3378 + C3377) * C507 -
            ((C5433 + C5432) * C501 + (C5431 + C5430) * C506) +
            (C3380 + C3379) * C502 - (C3381 + C3382) * C508 -
            (C3383 + C3384) * C503) *
               C50759 * C5083 +
           ((C2176 * C3485 + C2171 * C3493 + C2177 * C3484 + C50616 * C3492) *
                C507 -
            ((C2177 * C1061 + C50616 * C1069 + C2176 * C1062 + C2171 * C1070) *
                 C501 +
             (C2177 * C1057 + C50616 * C1065 + C2176 * C1058 + C2171 * C1066) *
                 C506) +
            (C2176 * C3491 + C2171 * C3497 + C2177 * C3490 + C50616 * C3496) *
                C502 -
            (C2177 * C3482 + C50616 * C3488 + C2176 * C3483 + C2171 * C3489) *
                C508 -
            (C2177 * C3486 + C50616 * C3494 + C2176 * C3487 + C2171 * C3495) *
                C503) *
               C50759 * C5084) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C7918 * C122 + C50943 * C129 + C7919 * C123 +
                     C50944 * C130 + C7920 * C124 + C7915 * C131) *
                        C1174 +
                    (C7918 * C133 + C50943 * C143 + C7919 * C134 +
                     C50944 * C144 + C7920 * C135 + C7915 * C145) *
                        C1169 -
                    (C8104 + C8105 + C8106) * C1175 -
                    (C8107 + C8108 + C8109) * C50686) *
                       C50759 * C50916 +
                   ((C11060 + C11061 + C11062) * C1174 +
                    (C11063 + C11064 + C11065) * C1169 -
                    (C8738 + C8737 + C8736) * C1175 -
                    (C8741 + C8740 + C8739) * C50686) *
                       C50759 * C50835) *
                      C50945 +
                  (((C8110 + C8111 + C8112) * C1175 -
                    ((C7920 * C136 + C7915 * C146 + C7919 * C135 +
                      C50944 * C145 + C7918 * C134 + C50943 * C144) *
                         C1169 +
                     (C7920 * C125 + C7915 * C132 + C7919 * C124 +
                      C50944 * C131 + C7918 * C123 + C50943 * C130) *
                         C1174) +
                    (C8113 + C8114 + C8115) * C50686) *
                       C50759 * C50916 +
                   ((C9656 + C9655 + C9654) * C1175 -
                    ((C11066 + C11067 + C11068) * C1169 +
                     (C11069 + C11070 + C11071) * C1174) +
                    (C9659 + C9658 + C9657) * C50686) *
                       C50759 * C50835) *
                      C50930 +
                  (((C7918 * C124 + C50943 * C131 + C7919 * C125 +
                     C50944 * C132 + C7920 * C126 + C7915 * C138) *
                        C1174 +
                    (C7918 * C135 + C50943 * C145 + C7919 * C136 +
                     C50944 * C146 + C7920 * C137 + C7915 * C147) *
                        C1169 -
                    (C8116 + C8117 + C8118) * C1175 -
                    (C8119 + C8120 + C8121) * C50686) *
                       C50759 * C50916 +
                   ((C11072 + C11073 + C11074) * C1174 +
                    (C11075 + C11076 + C11077) * C1169 -
                    (C7920 * C1412 + C7915 * C1413 + C7919 * C721 +
                     C50944 * C729 + C7918 * C720 + C50943 * C728) *
                        C1175 -
                    (C7920 * C1414 + C7915 * C1415 + C7919 * C733 +
                     C50944 * C745 + C7918 * C732 + C50943 * C744) *
                        C50686) *
                       C50759 * C50835) *
                      C1173) *
                 C50700) /
                (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
             C7920 * C124 + C7915 * C131) *
                C1279 +
            (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
             C7920 * C135 + C7915 * C145) *
                C50946 -
            (C8104 + C8105 + C8106) * C1280 - (C8107 + C8108 + C8109) * C50933 +
            (C8438 + C8439 + C8440) * C1281 + (C8441 + C8442 + C8443) * C1276) *
               C50759 * C50916 +
           ((C11060 + C11061 + C11062) * C1279 +
            (C11063 + C11064 + C11065) * C50946 -
            (C8738 + C8737 + C8736) * C1280 - (C8741 + C8740 + C8739) * C50933 +
            (C8744 + C8743 + C8742) * C1281 + (C8747 + C8746 + C8745) * C1276) *
               C50759 * C50835) *
              C1277 +
          (((C8110 + C8111 + C8112) * C1280 -
            ((C7920 * C136 + C7915 * C146 + C7919 * C135 + C50944 * C145 +
              C7918 * C134 + C50943 * C144) *
                 C50946 +
             (C7920 * C125 + C7915 * C132 + C7919 * C124 + C50944 * C131 +
              C7918 * C123 + C50943 * C130) *
                 C1279) +
            (C8113 + C8114 + C8115) * C50933 - (C8444 + C8445 + C8446) * C1281 -
            (C8447 + C8448 + C8449) * C1276) *
               C50759 * C50916 +
           ((C9656 + C9655 + C9654) * C1280 -
            ((C11066 + C11067 + C11068) * C50946 +
             (C11069 + C11070 + C11071) * C1279) +
            (C9659 + C9658 + C9657) * C50933 -
            (C7920 * C722 + C7915 * C734 + C7919 * C723 + C50944 * C735 +
             C7918 * C724 + C50943 * C736) *
                C1281 -
            (C7920 * C738 + C7915 * C746 + C7919 * C739 + C50944 * C747 +
             C7918 * C740 + C50943 * C748) *
                C1276) *
               C50759 * C50835) *
              C50641) *
         C50700) /
        (p * q * std::sqrt(p + q));
    d2ee[47] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7918 * C122 + C50943 * C129 + C7919 * C123 +
                      C50944 * C130 + C7920 * C124 + C7915 * C131) *
                         C1174 +
                     (C7918 * C133 + C50943 * C143 + C7919 * C134 +
                      C50944 * C144 + C7920 * C135 + C7915 * C145) *
                         C1169 -
                     (C8104 + C8105 + C8106) * C1175 -
                     (C8107 + C8108 + C8109) * C50686) *
                        C50759 * C50916 +
                    ((C11060 + C11061 + C11062) * C1174 +
                     (C11063 + C11064 + C11065) * C1169 -
                     (C8738 + C8737 + C8736) * C1175 -
                     (C8741 + C8740 + C8739) * C50686) *
                        C50759 * C50835) *
                       C1277 +
                   (((C8110 + C8111 + C8112) * C1175 -
                     ((C7920 * C136 + C7915 * C146 + C7919 * C135 +
                       C50944 * C145 + C7918 * C134 + C50943 * C144) *
                          C1169 +
                      (C7920 * C125 + C7915 * C132 + C7919 * C124 +
                       C50944 * C131 + C7918 * C123 + C50943 * C130) *
                          C1174) +
                     (C8113 + C8114 + C8115) * C50686) *
                        C50759 * C50916 +
                    ((C9656 + C9655 + C9654) * C1175 -
                     ((C11066 + C11067 + C11068) * C1169 +
                      (C11069 + C11070 + C11071) * C1174) +
                     (C9659 + C9658 + C9657) * C50686) *
                        C50759 * C50835) *
                       C50641) *
                      C50901 +
                  ((((C8736 + C8737 + C8738) * C1175 -
                     ((C11065 + C11064 + C11063) * C1169 +
                      (C11062 + C11061 + C11060) * C1174) +
                     (C8739 + C8740 + C8741) * C50686) *
                        C50759 * C50916 +
                    ((C9054 + C9053 + C9052) * C1175 -
                     ((C11644 + C11645 + C11646) * C1169 +
                      (C11647 + C11648 + C11649) * C1174) +
                     (C9057 + C9056 + C9055) * C50686) *
                        C50759 * C50835) *
                       C1277 +
                   (((C11071 + C11070 + C11069) * C1174 +
                     (C11068 + C11067 + C11066) * C1169 -
                     (C9654 + C9655 + C9656) * C1175 -
                     (C9657 + C9658 + C9659) * C50686) *
                        C50759 * C50916 +
                    ((C11638 + C11639 + C11640) * C1174 +
                     (C11641 + C11642 + C11643) * C1169 -
                     (C7920 * C969 + C7915 * C973 + C7919 * C970 +
                      C50944 * C974 + C7918 * C971 + C50943 * C975) *
                         C1175 -
                     (C7920 * C977 + C7915 * C981 + C7919 * C978 +
                      C50944 * C982 + C7918 * C979 + C50943 * C983) *
                         C50686) *
                        C50759 * C50835) *
                       C50641) *
                      C50712)) /
                (p * q * std::sqrt(p + q));
    d2ee[48] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7918 * C122 + C50943 * C129 + C7919 * C123 +
                      C50944 * C130 + C7920 * C124 + C7915 * C131) *
                         C1174 +
                     (C7918 * C133 + C50943 * C143 + C7919 * C134 +
                      C50944 * C144 + C7920 * C135 + C7915 * C145) *
                         C1169 -
                     (C8104 + C8105 + C8106) * C1175 -
                     (C8107 + C8108 + C8109) * C50686) *
                        C50759 * C50916 +
                    ((C11060 + C11061 + C11062) * C1174 +
                     (C11063 + C11064 + C11065) * C1169 -
                     (C8738 + C8737 + C8736) * C1175 -
                     (C8741 + C8740 + C8739) * C50686) *
                        C50759 * C50835) *
                       C50892 +
                   (((C8110 + C8111 + C8112) * C1175 -
                     ((C7920 * C136 + C7915 * C146 + C7919 * C135 +
                       C50944 * C145 + C7918 * C134 + C50943 * C144) *
                          C1169 +
                      (C7920 * C125 + C7915 * C132 + C7919 * C124 +
                       C50944 * C131 + C7918 * C123 + C50943 * C130) *
                          C1174) +
                     (C8113 + C8114 + C8115) * C50686) *
                        C50759 * C50916 +
                    ((C9656 + C9655 + C9654) * C1175 -
                     ((C11066 + C11067 + C11068) * C1169 +
                      (C11069 + C11070 + C11071) * C1174) +
                     (C9659 + C9658 + C9657) * C50686) *
                        C50759 * C50835) *
                       C50641) *
                      C1514 +
                  ((((C8736 + C8737 + C8738) * C1175 -
                     ((C11065 + C11064 + C11063) * C1169 +
                      (C11062 + C11061 + C11060) * C1174) +
                     (C8739 + C8740 + C8741) * C50686) *
                        C50759 * C50916 +
                    ((C9054 + C9053 + C9052) * C1175 -
                     ((C11644 + C11645 + C11646) * C1169 +
                      (C11647 + C11648 + C11649) * C1174) +
                     (C9057 + C9056 + C9055) * C50686) *
                        C50759 * C50835) *
                       C50892 +
                   (((C11071 + C11070 + C11069) * C1174 +
                     (C11068 + C11067 + C11066) * C1169 -
                     (C9654 + C9655 + C9656) * C1175 -
                     (C9657 + C9658 + C9659) * C50686) *
                        C50759 * C50916 +
                    ((C11638 + C11639 + C11640) * C1174 +
                     (C11641 + C11642 + C11643) * C1169 -
                     (C7920 * C969 + C7915 * C973 + C7919 * C970 +
                      C50944 * C974 + C7918 * C971 + C50943 * C975) *
                         C1175 -
                     (C7920 * C977 + C7915 * C981 + C7919 * C978 +
                      C50944 * C982 + C7918 * C979 + C50943 * C983) *
                         C50686) *
                        C50759 * C50835) *
                       C50641) *
                      C50712)) /
                (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
             C7920 * C124 + C7915 * C131) *
                C1279 +
            (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
             C7920 * C135 + C7915 * C145) *
                C50946 -
            (C8104 + C8105 + C8106) * C1280 - (C8107 + C8108 + C8109) * C50933 +
            (C8438 + C8439 + C8440) * C1281 + (C8441 + C8442 + C8443) * C1276) *
               C50759 * C50916 +
           ((C11060 + C11061 + C11062) * C1279 +
            (C11063 + C11064 + C11065) * C50946 -
            (C8738 + C8737 + C8736) * C1280 - (C8741 + C8740 + C8739) * C50933 +
            (C8744 + C8743 + C8742) * C1281 + (C8747 + C8746 + C8745) * C1276) *
               C50759 * C50835) *
              C50636 * C1514 +
          (((C8736 + C8737 + C8738) * C1280 -
            ((C11065 + C11064 + C11063) * C50946 +
             (C11062 + C11061 + C11060) * C1279) +
            (C8739 + C8740 + C8741) * C50933 - (C8742 + C8743 + C8744) * C1281 -
            (C8745 + C8746 + C8747) * C1276) *
               C50759 * C50916 +
           ((C9054 + C9053 + C9052) * C1280 -
            ((C11644 + C11645 + C11646) * C50946 +
             (C11647 + C11648 + C11649) * C1279) +
            (C9057 + C9056 + C9055) * C50933 -
            (C7920 * C3196 + C7915 * C3202 + C7919 * C3195 + C50944 * C3198 +
             C7918 * C3194 + C50943 * C3197) *
                C1281 -
            (C7920 * C3201 + C7915 * C3205 + C7919 * C3200 + C50944 * C3204 +
             C7918 * C3199 + C50943 * C3203) *
                C1276) *
               C50759 * C50835) *
              C50636 * C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[50] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C7918 * C122 + C50943 * C129 + C7919 * C123 +
                     C50944 * C130 + C7920 * C124 + C7915 * C131) *
                        C1174 +
                    (C7918 * C133 + C50943 * C143 + C7919 * C134 +
                     C50944 * C144 + C7920 * C135 + C7915 * C145) *
                        C1169 -
                    (C8104 + C8105 + C8106) * C1175 -
                    (C8107 + C8108 + C8109) * C50686) *
                       C50759 * C50916 +
                   ((C11060 + C11061 + C11062) * C1174 +
                    (C11063 + C11064 + C11065) * C1169 -
                    (C8738 + C8737 + C8736) * C1175 -
                    (C8741 + C8740 + C8739) * C50686) *
                       C50759 * C50835) *
                      C50636 * C50947 +
                  (((C8736 + C8737 + C8738) * C1175 -
                    ((C11065 + C11064 + C11063) * C1169 +
                     (C11062 + C11061 + C11060) * C1174) +
                    (C8739 + C8740 + C8741) * C50686) *
                       C50759 * C50916 +
                   ((C9054 + C9053 + C9052) * C1175 -
                    ((C11644 + C11645 + C11646) * C1169 +
                     (C11647 + C11648 + C11649) * C1174) +
                    (C9057 + C9056 + C9055) * C50686) *
                       C50759 * C50835) *
                      C50636 * C50936 +
                  (((C11649 + C11648 + C11647) * C1174 +
                    (C11646 + C11645 + C11644) * C1169 -
                    (C9052 + C9053 + C9054) * C1175 -
                    (C9055 + C9056 + C9057) * C50686) *
                       C50759 * C50916 +
                   ((C11906 + C11907 + C11908) * C1174 +
                    (C11909 + C11910 + C11911) * C1169 -
                    (C7920 * C6819 + C7915 * C6820 + C7919 * C3484 +
                     C50944 * C3492 + C7918 * C3485 + C50943 * C3493) *
                        C1175 -
                    (C7920 * C6821 + C7915 * C6822 + C7919 * C3490 +
                     C50944 * C3496 + C7918 * C3491 + C50943 * C3497) *
                        C50686) *
                       C50759 * C50835) *
                      C50636 * C1746)) /
                (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
             C7920 * C124 + C7915 * C131) *
                C506 +
            (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
             C7920 * C135 + C7915 * C145) *
                C501 -
            (C8104 + C8105 + C8106) * C507 - (C8107 + C8108 + C8109) * C502 +
            (C8438 + C8439 + C8440) * C508 + (C8441 + C8442 + C8443) * C503) *
               C50759 * C50916 +
           ((C11060 + C11061 + C11062) * C506 +
            (C11063 + C11064 + C11065) * C501 - (C8738 + C8737 + C8736) * C507 -
            (C8741 + C8740 + C8739) * C502 + (C8744 + C8743 + C8742) * C508 +
            (C8747 + C8746 + C8745) * C503) *
               C50759 * C50835) *
              C50892 +
          (((C8110 + C8111 + C8112) * C507 -
            ((C7920 * C136 + C7915 * C146 + C7919 * C135 + C50944 * C145 +
              C7918 * C134 + C50943 * C144) *
                 C501 +
             (C7920 * C125 + C7915 * C132 + C7919 * C124 + C50944 * C131 +
              C7918 * C123 + C50943 * C130) *
                 C506) +
            (C8113 + C8114 + C8115) * C502 - (C8444 + C8445 + C8446) * C508 -
            (C8447 + C8448 + C8449) * C503) *
               C50759 * C50916 +
           ((C9656 + C9655 + C9654) * C507 -
            ((C11066 + C11067 + C11068) * C501 +
             (C11069 + C11070 + C11071) * C506) +
            (C9659 + C9658 + C9657) * C502 -
            (C7920 * C722 + C7915 * C734 + C7919 * C723 + C50944 * C735 +
             C7918 * C724 + C50943 * C736) *
                C508 -
            (C7920 * C738 + C7915 * C746 + C7919 * C739 + C50944 * C747 +
             C7918 * C740 + C50943 * C748) *
                C503) *
               C50759 * C50835) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
             C7920 * C124 + C7915 * C131) *
                C121 +
            (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
             C7920 * C135 + C7915 * C145) *
                C50670) *
               C50759 * C50916 +
           ((C7918 * C383 + C50943 * C394 + C7919 * C379 + C50944 * C385 +
             C7920 * C380 + C7915 * C386) *
                C121 +
            (C7918 * C393 + C50943 * C401 + C7919 * C389 + C50944 * C397 +
             C7920 * C390 + C7915 * C398) *
                C50670) *
               C50759 * C50835) *
              C112 -
          (((C7920 * C391 + C7915 * C399 + C7919 * C390 + C50944 * C398 +
             C7918 * C389 + C50943 * C397) *
                C50670 +
            (C7920 * C381 + C7915 * C387 + C7919 * C380 + C50944 * C386 +
             C7918 * C379 + C50943 * C385) *
                C121) *
               C50759 * C50835 +
           ((C7920 * C136 + C7915 * C146 + C7919 * C135 + C50944 * C145 +
             C7918 * C134 + C50943 * C144) *
                C50670 +
            (C7920 * C125 + C7915 * C132 + C7919 * C124 + C50944 * C131 +
             C7918 * C123 + C50943 * C130) *
                C121) *
               C50759 * C50916) *
              C113 +
          (((C7918 * C124 + C50943 * C131 + C7919 * C125 + C50944 * C132 +
             C7920 * C126 + C7915 * C138) *
                C121 +
            (C7918 * C135 + C50943 * C145 + C7919 * C136 + C50944 * C146 +
             C7920 * C137 + C7915 * C147) *
                C50670) *
               C50759 * C50916 +
           ((C7918 * C380 + C50943 * C386 + C7919 * C381 + C50944 * C387 +
             C7920 * C382 + C7915 * C388) *
                C121 +
            (C7918 * C390 + C50943 * C398 + C7919 * C391 + C50944 * C399 +
             C7920 * C392 + C7915 * C400) *
                C50670) *
               C50759 * C50835) *
              C114 -
          (((C7920 * C395 + C7915 * C402 + C7919 * C392 + C50944 * C400 +
             C7918 * C391 + C50943 * C399) *
                C50670 +
            (C7920 * C384 + C7915 * C396 + C7919 * C382 + C50944 * C388 +
             C7918 * C381 + C50943 * C387) *
                C121) *
               C50759 * C50835 +
           ((C7920 * C140 + C7915 * C148 + C7919 * C137 + C50944 * C147 +
             C7918 * C136 + C50943 * C146) *
                C50670 +
            (C7920 * C127 + C7915 * C139 + C7919 * C126 + C50944 * C138 +
             C7918 * C125 + C50943 * C132) *
                C121) *
               C50759 * C50916) *
              C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
              C7920 * C124 + C7915 * C131) *
                 C121 +
             (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
              C7920 * C135 + C7915 * C145) *
                 C50670) *
                C50759 * C50916 +
            ((C11060 + C11061 + C11062) * C121 +
             (C11063 + C11064 + C11065) * C50670) *
                C50759 * C50835) *
               C50892 -
           (((C11066 + C11067 + C11068) * C50670 +
             (C11069 + C11070 + C11071) * C121) *
                C50759 * C50835 +
            ((C7920 * C136 + C7915 * C146 + C7919 * C135 + C50944 * C145 +
              C7918 * C134 + C50943 * C144) *
                 C50670 +
             (C7920 * C125 + C7915 * C132 + C7919 * C124 + C50944 * C131 +
              C7918 * C123 + C50943 * C130) *
                 C121) *
                C50759 * C50916) *
               C50641) *
              C848 +
          ((((C11071 + C11070 + C11069) * C121 +
             (C11068 + C11067 + C11066) * C50670) *
                C50759 * C50916 +
            ((C11638 + C11639 + C11640) * C121 +
             (C11641 + C11642 + C11643) * C50670) *
                C50759 * C50835) *
               C50641 -
           (((C11644 + C11645 + C11646) * C50670 +
             (C11647 + C11648 + C11649) * C121) *
                C50759 * C50835 +
            ((C11065 + C11064 + C11063) * C50670 +
             (C11062 + C11061 + C11060) * C121) *
                C50759 * C50916) *
               C50892) *
              C849 +
          ((((C11649 + C11648 + C11647) * C121 +
             (C11646 + C11645 + C11644) * C50670) *
                C50759 * C50916 +
            ((C7918 * C1058 + C50943 * C1066 + C7919 * C1057 + C50944 * C1065 +
              C7920 * C1056 + C7915 * C1064) *
                 C121 +
             (C7918 * C1062 + C50943 * C1070 + C7919 * C1061 + C50944 * C1069 +
              C7920 * C1060 + C7915 * C1068) *
                 C50670) *
                C50759 * C50835) *
               C50892 -
           (((C7920 * C1059 + C7915 * C1067 + C7919 * C1060 + C50944 * C1068 +
              C7918 * C1061 + C50943 * C1069) *
                 C50670 +
             (C7920 * C1055 + C7915 * C1063 + C7919 * C1056 + C50944 * C1064 +
              C7918 * C1057 + C50943 * C1065) *
                 C121) *
                C50759 * C50835 +
            ((C11643 + C11642 + C11641) * C50670 +
             (C11640 + C11639 + C11638) * C121) *
                C50759 * C50916) *
               C50641) *
              C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
            C7920 * C124 + C7915 * C131) *
               C600 +
           (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
            C7920 * C135 + C7915 * C145) *
               C595 -
           (C8104 + C8105 + C8106) * C601 - (C8107 + C8108 + C8109) * C596 +
           (C8438 + C8439 + C8440) * C602 + (C8441 + C8442 + C8443) * C597 -
           (C8560 + C8561 + C8562) * C603 - (C8563 + C8564 + C8565) * C598) *
              C50759 * C50916 +
          ((C11060 + C11061 + C11062) * C600 +
           (C11063 + C11064 + C11065) * C595 - (C8738 + C8737 + C8736) * C601 -
           (C8741 + C8740 + C8739) * C596 + (C8744 + C8743 + C8742) * C602 +
           (C8747 + C8746 + C8745) * C597 -
           (C7920 * C3984 + C7915 * C3985 + C7919 * C2994 + C50944 * C2998 +
            C7918 * C2995 + C50943 * C2999) *
               C603 -
           (C7920 * C3986 + C7915 * C3987 + C7919 * C3000 + C50944 * C3006 +
            C7918 * C3001 + C50943 * C3007) *
               C598) *
              C50759 * C50835) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
             C7920 * C124 + C7915 * C131) *
                C253 +
            (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
             C7920 * C135 + C7915 * C145) *
                C50899 -
            (C8104 + C8105 + C8106) * C254 - (C8107 + C8108 + C8109) * C50686) *
               C50759 * C50916 +
           ((C7918 * C383 + C50943 * C394 + C7919 * C379 + C50944 * C385 +
             C7920 * C380 + C7915 * C386) *
                C253 +
            (C7918 * C393 + C50943 * C401 + C7919 * C389 + C50944 * C397 +
             C7920 * C390 + C7915 * C398) *
                C50899 -
            (C8738 + C8737 + C8736) * C254 - (C8741 + C8740 + C8739) * C50686) *
               C50759 * C50835) *
              C250 +
          (((C8110 + C8111 + C8112) * C254 -
            ((C7920 * C136 + C7915 * C146 + C7919 * C135 + C50944 * C145 +
              C7918 * C134 + C50943 * C144) *
                 C50899 +
             (C7920 * C125 + C7915 * C132 + C7919 * C124 + C50944 * C131 +
              C7918 * C123 + C50943 * C130) *
                 C253) +
            (C8113 + C8114 + C8115) * C50686) *
               C50759 * C50916 +
           ((C9656 + C9655 + C9654) * C254 -
            ((C7920 * C391 + C7915 * C399 + C7919 * C390 + C50944 * C398 +
              C7918 * C389 + C50943 * C397) *
                 C50899 +
             (C7920 * C381 + C7915 * C387 + C7919 * C380 + C50944 * C386 +
              C7918 * C379 + C50943 * C385) *
                 C253) +
            (C9659 + C9658 + C9657) * C50686) *
               C50759 * C50835) *
              C251 +
          (((C7918 * C124 + C50943 * C131 + C7919 * C125 + C50944 * C132 +
             C7920 * C126 + C7915 * C138) *
                C253 +
            (C7918 * C135 + C50943 * C145 + C7919 * C136 + C50944 * C146 +
             C7920 * C137 + C7915 * C147) *
                C50899 -
            (C8116 + C8117 + C8118) * C254 - (C8119 + C8120 + C8121) * C50686) *
               C50759 * C50916 +
           ((C7918 * C380 + C50943 * C386 + C7919 * C381 + C50944 * C387 +
             C7920 * C382 + C7915 * C388) *
                C253 +
            (C7918 * C390 + C50943 * C398 + C7919 * C391 + C50944 * C399 +
             C7920 * C392 + C7915 * C400) *
                C50899 -
            (C7920 * C1412 + C7915 * C1413 + C7919 * C721 + C50944 * C729 +
             C7918 * C720 + C50943 * C728) *
                C254 -
            (C7920 * C1414 + C7915 * C1415 + C7919 * C733 + C50944 * C745 +
             C7918 * C732 + C50943 * C744) *
                C50686) *
               C50759 * C50835) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
             C7920 * C124 + C7915 * C131) *
                C253 +
            (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
             C7920 * C135 + C7915 * C145) *
                C50899 -
            (C8104 + C8105 + C8106) * C254 - (C8107 + C8108 + C8109) * C50686) *
               C50759 * C50916 +
           ((C11060 + C11061 + C11062) * C253 +
            (C11063 + C11064 + C11065) * C50899 -
            (C8738 + C8737 + C8736) * C254 - (C8741 + C8740 + C8739) * C50686) *
               C50759 * C50835) *
              C50636 * C848 +
          (((C8736 + C8737 + C8738) * C254 -
            ((C11065 + C11064 + C11063) * C50899 +
             (C11062 + C11061 + C11060) * C253) +
            (C8739 + C8740 + C8741) * C50686) *
               C50759 * C50916 +
           ((C9054 + C9053 + C9052) * C254 -
            ((C11644 + C11645 + C11646) * C50899 +
             (C11647 + C11648 + C11649) * C253) +
            (C9057 + C9056 + C9055) * C50686) *
               C50759 * C50835) *
              C50636 * C849 +
          (((C11649 + C11648 + C11647) * C253 +
            (C11646 + C11645 + C11644) * C50899 -
            (C9052 + C9053 + C9054) * C254 - (C9055 + C9056 + C9057) * C50686) *
               C50759 * C50916 +
           ((C7918 * C1058 + C50943 * C1066 + C7919 * C1057 + C50944 * C1065 +
             C7920 * C1056 + C7915 * C1064) *
                C253 +
            (C7918 * C1062 + C50943 * C1070 + C7919 * C1061 + C50944 * C1069 +
             C7920 * C1060 + C7915 * C1068) *
                C50899 -
            (C7920 * C6819 + C7915 * C6820 + C7919 * C3484 + C50944 * C3492 +
             C7918 * C3485 + C50943 * C3493) *
                C254 -
            (C7920 * C6821 + C7915 * C6822 + C7919 * C3490 + C50944 * C3496 +
             C7918 * C3491 + C50943 * C3497) *
                C50686) *
               C50759 * C50835) *
              C50636 * C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
             C7920 * C124 + C7915 * C131) *
                C506 +
            (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
             C7920 * C135 + C7915 * C145) *
                C501 -
            (C8104 + C8105 + C8106) * C507 - (C8107 + C8108 + C8109) * C502 +
            (C8438 + C8439 + C8440) * C508 + (C8441 + C8442 + C8443) * C503) *
               C50759 * C50916 +
           ((C11060 + C11061 + C11062) * C506 +
            (C11063 + C11064 + C11065) * C501 - (C8738 + C8737 + C8736) * C507 -
            (C8741 + C8740 + C8739) * C502 + (C8744 + C8743 + C8742) * C508 +
            (C8747 + C8746 + C8745) * C503) *
               C50759 * C50835) *
              C50636 * C50901 +
          (((C8736 + C8737 + C8738) * C507 -
            ((C11065 + C11064 + C11063) * C501 +
             (C11062 + C11061 + C11060) * C506) +
            (C8739 + C8740 + C8741) * C502 - (C8742 + C8743 + C8744) * C508 -
            (C8745 + C8746 + C8747) * C503) *
               C50759 * C50916 +
           ((C9054 + C9053 + C9052) * C507 -
            ((C7920 * C862 + C7915 * C868 + C7919 * C861 + C50944 * C867 +
              C7918 * C860 + C50943 * C866) *
                 C501 +
             (C7920 * C853 + C7915 * C858 + C7919 * C852 + C50944 * C857 +
              C7918 * C851 + C50943 * C856) *
                 C506) +
            (C9057 + C9056 + C9055) * C502 -
            (C7920 * C3196 + C7915 * C3202 + C7919 * C3195 + C50944 * C3198 +
             C7918 * C3194 + C50943 * C3197) *
                C508 -
            (C7920 * C3201 + C7915 * C3205 + C7919 * C3200 + C50944 * C3204 +
             C7918 * C3199 + C50943 * C3203) *
                C503) *
               C50759 * C50835) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
              C7920 * C124 + C7915 * C131) *
                 C121 +
             (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
              C7920 * C135 + C7915 * C145) *
                 C50670) *
                C50759 * C50916 +
            ((C11060 + C11061 + C11062) * C121 +
             (C11063 + C11064 + C11065) * C50670) *
                C50759 * C50835) *
               C250 -
           (((C11066 + C11067 + C11068) * C50670 +
             (C11069 + C11070 + C11071) * C121) *
                C50759 * C50835 +
            ((C7920 * C136 + C7915 * C146 + C7919 * C135 + C50944 * C145 +
              C7918 * C134 + C50943 * C144) *
                 C50670 +
             (C7920 * C125 + C7915 * C132 + C7919 * C124 + C50944 * C131 +
              C7918 * C123 + C50943 * C130) *
                 C121) *
                C50759 * C50916) *
               C251 +
           (((C7918 * C124 + C50943 * C131 + C7919 * C125 + C50944 * C132 +
              C7920 * C126 + C7915 * C138) *
                 C121 +
             (C7918 * C135 + C50943 * C145 + C7919 * C136 + C50944 * C146 +
              C7920 * C137 + C7915 * C147) *
                 C50670) *
                C50759 * C50916 +
            ((C11072 + C11073 + C11074) * C121 +
             (C11075 + C11076 + C11077) * C50670) *
                C50759 * C50835) *
               C252) *
              C50901 +
          ((((C11071 + C11070 + C11069) * C121 +
             (C11068 + C11067 + C11066) * C50670) *
                C50759 * C50916 +
            ((C7918 * C852 + C50943 * C857 + C7919 * C853 + C50944 * C858 +
              C7920 * C854 + C7915 * C859) *
                 C121 +
             (C7918 * C861 + C50943 * C867 + C7919 * C862 + C50944 * C868 +
              C7920 * C863 + C7915 * C869) *
                 C50670) *
                C50759 * C50835) *
               C251 -
           (((C7920 * C862 + C7915 * C868 + C7919 * C861 + C50944 * C867 +
              C7918 * C860 + C50943 * C866) *
                 C50670 +
             (C7920 * C853 + C7915 * C858 + C7919 * C852 + C50944 * C857 +
              C7918 * C851 + C50943 * C856) *
                 C121) *
                C50759 * C50835 +
            ((C11065 + C11064 + C11063) * C50670 +
             (C11062 + C11061 + C11060) * C121) *
                C50759 * C50916) *
               C250 -
           (((C7920 * C864 + C7915 * C870 + C7919 * C863 + C50944 * C869 +
              C7918 * C862 + C50943 * C868) *
                 C50670 +
             (C7920 * C855 + C7915 * C865 + C7919 * C854 + C50944 * C859 +
              C7918 * C853 + C50943 * C858) *
                 C121) *
                C50759 * C50835 +
            ((C11077 + C11076 + C11075) * C50670 +
             (C11074 + C11073 + C11072) * C121) *
                C50759 * C50916) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
             C7920 * C124 + C7915 * C131) *
                C121 +
            (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
             C7920 * C135 + C7915 * C145) *
                C50670) *
               C50759 * C50916 +
           ((C11060 + C11061 + C11062) * C121 +
            (C11063 + C11064 + C11065) * C50670) *
               C50759 * C50835) *
              C50636 * C1051 -
          (((C11644 + C11645 + C11646) * C50670 +
            (C11647 + C11648 + C11649) * C121) *
               C50759 * C50835 +
           ((C11065 + C11064 + C11063) * C50670 +
            (C11062 + C11061 + C11060) * C121) *
               C50759 * C50916) *
              C50636 * C1052 +
          (((C11649 + C11648 + C11647) * C121 +
            (C11646 + C11645 + C11644) * C50670) *
               C50759 * C50916 +
           ((C11906 + C11907 + C11908) * C121 +
            (C11909 + C11910 + C11911) * C50670) *
               C50759 * C50835) *
              C50636 * C1053 -
          (((C7920 * C5992 + C7915 * C5996 + C7919 * C5991 + C50944 * C5995 +
             C7918 * C5990 + C50943 * C5994) *
                C50670 +
            (C7920 * C5987 + C7915 * C5993 + C7919 * C5986 + C50944 * C5989 +
             C7918 * C5985 + C50943 * C5988) *
                C121) *
               C50759 * C50835 +
           ((C11911 + C11910 + C11909) * C50670 +
            (C11908 + C11907 + C11906) * C121) *
               C50759 * C50916) *
              C50636 * C1054)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7918 * C122 + C50943 * C129 + C7919 * C123 +
                      C50944 * C130 + C7920 * C124 + C7915 * C131) *
                         C121 +
                     (C7918 * C133 + C50943 * C143 + C7919 * C134 +
                      C50944 * C144 + C7920 * C135 + C7915 * C145) *
                         C50670) *
                        C50759 * C50916 +
                    ((C11060 + C11061 + C11062) * C121 +
                     (C11063 + C11064 + C11065) * C50670) *
                        C50759 * C50835) *
                       C50945 -
                   (((C11066 + C11067 + C11068) * C50670 +
                     (C11069 + C11070 + C11071) * C121) *
                        C50759 * C50835 +
                    ((C7920 * C136 + C7915 * C146 + C7919 * C135 +
                      C50944 * C145 + C7918 * C134 + C50943 * C144) *
                         C50670 +
                     (C7920 * C125 + C7915 * C132 + C7919 * C124 +
                      C50944 * C131 + C7918 * C123 + C50943 * C130) *
                         C121) *
                        C50759 * C50916) *
                       C50930 +
                   (((C7918 * C124 + C50943 * C131 + C7919 * C125 +
                      C50944 * C132 + C7920 * C126 + C7915 * C138) *
                         C121 +
                     (C7918 * C135 + C50943 * C145 + C7919 * C136 +
                      C50944 * C146 + C7920 * C137 + C7915 * C147) *
                         C50670) *
                        C50759 * C50916 +
                    ((C11072 + C11073 + C11074) * C121 +
                     (C11075 + C11076 + C11077) * C50670) *
                        C50759 * C50835) *
                       C1173) *
                      C1514 +
                  ((((C11071 + C11070 + C11069) * C121 +
                     (C11068 + C11067 + C11066) * C50670) *
                        C50759 * C50916 +
                    ((C11638 + C11639 + C11640) * C121 +
                     (C11641 + C11642 + C11643) * C50670) *
                        C50759 * C50835) *
                       C50930 -
                   (((C11644 + C11645 + C11646) * C50670 +
                     (C11647 + C11648 + C11649) * C121) *
                        C50759 * C50835 +
                    ((C11065 + C11064 + C11063) * C50670 +
                     (C11062 + C11061 + C11060) * C121) *
                        C50759 * C50916) *
                       C50945 -
                   (((C7920 * C864 + C7915 * C870 + C7919 * C863 +
                      C50944 * C869 + C7918 * C862 + C50943 * C868) *
                         C50670 +
                     (C7920 * C855 + C7915 * C865 + C7919 * C854 +
                      C50944 * C859 + C7918 * C853 + C50943 * C858) *
                         C121) *
                        C50759 * C50835 +
                    ((C11077 + C11076 + C11075) * C50670 +
                     (C11074 + C11073 + C11072) * C121) *
                        C50759 * C50916) *
                       C1173) *
                      C50712)) /
                (p * q * std::sqrt(p + q));
    d2ee[55] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7918 * C122 + C50943 * C129 + C7919 * C123 +
                      C50944 * C130 + C7920 * C124 + C7915 * C131) *
                         C253 +
                     (C7918 * C133 + C50943 * C143 + C7919 * C134 +
                      C50944 * C144 + C7920 * C135 + C7915 * C145) *
                         C50899 -
                     (C8104 + C8105 + C8106) * C254 -
                     (C8107 + C8108 + C8109) * C50686) *
                        C50759 * C50916 +
                    ((C11060 + C11061 + C11062) * C253 +
                     (C11063 + C11064 + C11065) * C50899 -
                     (C8738 + C8737 + C8736) * C254 -
                     (C8741 + C8740 + C8739) * C50686) *
                        C50759 * C50835) *
                       C1277 +
                   (((C8110 + C8111 + C8112) * C254 -
                     ((C7920 * C136 + C7915 * C146 + C7919 * C135 +
                       C50944 * C145 + C7918 * C134 + C50943 * C144) *
                          C50899 +
                      (C7920 * C125 + C7915 * C132 + C7919 * C124 +
                       C50944 * C131 + C7918 * C123 + C50943 * C130) *
                          C253) +
                     (C8113 + C8114 + C8115) * C50686) *
                        C50759 * C50916 +
                    ((C9656 + C9655 + C9654) * C254 -
                     ((C11066 + C11067 + C11068) * C50899 +
                      (C11069 + C11070 + C11071) * C253) +
                     (C9659 + C9658 + C9657) * C50686) *
                        C50759 * C50835) *
                       C50641) *
                      C1514 +
                  ((((C8736 + C8737 + C8738) * C254 -
                     ((C11065 + C11064 + C11063) * C50899 +
                      (C11062 + C11061 + C11060) * C253) +
                     (C8739 + C8740 + C8741) * C50686) *
                        C50759 * C50916 +
                    ((C9054 + C9053 + C9052) * C254 -
                     ((C11644 + C11645 + C11646) * C50899 +
                      (C11647 + C11648 + C11649) * C253) +
                     (C9057 + C9056 + C9055) * C50686) *
                        C50759 * C50835) *
                       C1277 +
                   (((C11071 + C11070 + C11069) * C253 +
                     (C11068 + C11067 + C11066) * C50899 -
                     (C9654 + C9655 + C9656) * C254 -
                     (C9657 + C9658 + C9659) * C50686) *
                        C50759 * C50916 +
                    ((C11638 + C11639 + C11640) * C253 +
                     (C11641 + C11642 + C11643) * C50899 -
                     (C7920 * C969 + C7915 * C973 + C7919 * C970 +
                      C50944 * C974 + C7918 * C971 + C50943 * C975) *
                         C254 -
                     (C7920 * C977 + C7915 * C981 + C7919 * C978 +
                      C50944 * C982 + C7918 * C979 + C50943 * C983) *
                         C50686) *
                        C50759 * C50835) *
                       C50641) *
                      C50712)) /
                (p * q * std::sqrt(p + q));
    d2ee[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7918 * C122 + C50943 * C129 + C7919 * C123 +
                      C50944 * C130 + C7920 * C124 + C7915 * C131) *
                         C121 +
                     (C7918 * C133 + C50943 * C143 + C7919 * C134 +
                      C50944 * C144 + C7920 * C135 + C7915 * C145) *
                         C50670) *
                        C50759 * C50916 +
                    ((C11060 + C11061 + C11062) * C121 +
                     (C11063 + C11064 + C11065) * C50670) *
                        C50759 * C50835) *
                       C1277 -
                   (((C11066 + C11067 + C11068) * C50670 +
                     (C11069 + C11070 + C11071) * C121) *
                        C50759 * C50835 +
                    ((C7920 * C136 + C7915 * C146 + C7919 * C135 +
                      C50944 * C145 + C7918 * C134 + C50943 * C144) *
                         C50670 +
                     (C7920 * C125 + C7915 * C132 + C7919 * C124 +
                      C50944 * C131 + C7918 * C123 + C50943 * C130) *
                         C121) *
                        C50759 * C50916) *
                       C50641) *
                      C50947 +
                  ((((C11071 + C11070 + C11069) * C121 +
                     (C11068 + C11067 + C11066) * C50670) *
                        C50759 * C50916 +
                    ((C11638 + C11639 + C11640) * C121 +
                     (C11641 + C11642 + C11643) * C50670) *
                        C50759 * C50835) *
                       C50641 -
                   (((C11644 + C11645 + C11646) * C50670 +
                     (C11647 + C11648 + C11649) * C121) *
                        C50759 * C50835 +
                    ((C11065 + C11064 + C11063) * C50670 +
                     (C11062 + C11061 + C11060) * C121) *
                        C50759 * C50916) *
                       C1277) *
                      C50936 +
                  ((((C11649 + C11648 + C11647) * C121 +
                     (C11646 + C11645 + C11644) * C50670) *
                        C50759 * C50916 +
                    ((C11906 + C11907 + C11908) * C121 +
                     (C11909 + C11910 + C11911) * C50670) *
                        C50759 * C50835) *
                       C1277 -
                   (((C7920 * C1059 + C7915 * C1067 + C7919 * C1060 +
                      C50944 * C1068 + C7918 * C1061 + C50943 * C1069) *
                         C50670 +
                     (C7920 * C1055 + C7915 * C1063 + C7919 * C1056 +
                      C50944 * C1064 + C7918 * C1057 + C50943 * C1065) *
                         C121) *
                        C50759 * C50835 +
                    ((C11643 + C11642 + C11641) * C50670 +
                     (C11640 + C11639 + C11638) * C121) *
                        C50759 * C50916) *
                       C50641) *
                      C1746)) /
                (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
             C7920 * C124 + C7915 * C131) *
                C121 +
            (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
             C7920 * C135 + C7915 * C145) *
                C50670) *
               C50759 * C50916 +
           ((C7918 * C383 + C50943 * C394 + C7919 * C379 + C50944 * C385 +
             C7920 * C380 + C7915 * C386) *
                C121 +
            (C7918 * C393 + C50943 * C401 + C7919 * C389 + C50944 * C397 +
             C7920 * C390 + C7915 * C398) *
                C50670) *
               C50759 * C50835) *
              C112 -
          (((C7920 * C391 + C7915 * C399 + C7919 * C390 + C50944 * C398 +
             C7918 * C389 + C50943 * C397) *
                C50670 +
            (C7920 * C381 + C7915 * C387 + C7919 * C380 + C50944 * C386 +
             C7918 * C379 + C50943 * C385) *
                C121) *
               C50759 * C50835 +
           ((C7920 * C136 + C7915 * C146 + C7919 * C135 + C50944 * C145 +
             C7918 * C134 + C50943 * C144) *
                C50670 +
            (C7920 * C125 + C7915 * C132 + C7919 * C124 + C50944 * C131 +
             C7918 * C123 + C50943 * C130) *
                C121) *
               C50759 * C50916) *
              C113 +
          (((C7918 * C124 + C50943 * C131 + C7919 * C125 + C50944 * C132 +
             C7920 * C126 + C7915 * C138) *
                C121 +
            (C7918 * C135 + C50943 * C145 + C7919 * C136 + C50944 * C146 +
             C7920 * C137 + C7915 * C147) *
                C50670) *
               C50759 * C50916 +
           ((C7918 * C380 + C50943 * C386 + C7919 * C381 + C50944 * C387 +
             C7920 * C382 + C7915 * C388) *
                C121 +
            (C7918 * C390 + C50943 * C398 + C7919 * C391 + C50944 * C399 +
             C7920 * C392 + C7915 * C400) *
                C50670) *
               C50759 * C50835) *
              C114 -
          (((C7920 * C395 + C7915 * C402 + C7919 * C392 + C50944 * C400 +
             C7918 * C391 + C50943 * C399) *
                C50670 +
            (C7920 * C384 + C7915 * C396 + C7919 * C382 + C50944 * C388 +
             C7918 * C381 + C50943 * C387) *
                C121) *
               C50759 * C50835 +
           ((C7920 * C140 + C7915 * C148 + C7919 * C137 + C50944 * C147 +
             C7918 * C136 + C50943 * C146) *
                C50670 +
            (C7920 * C127 + C7915 * C139 + C7919 * C126 + C50944 * C138 +
             C7918 * C125 + C50943 * C132) *
                C121) *
               C50759 * C50916) *
              C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
             C7920 * C124 + C7915 * C131) *
                C506 +
            (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
             C7920 * C135 + C7915 * C145) *
                C501 -
            (C8104 + C8105 + C8106) * C507 - (C8107 + C8108 + C8109) * C502 +
            (C8438 + C8439 + C8440) * C508 + (C8441 + C8442 + C8443) * C503) *
               C50759 * C50916 +
           ((C11060 + C11061 + C11062) * C506 +
            (C11063 + C11064 + C11065) * C501 - (C8738 + C8737 + C8736) * C507 -
            (C8741 + C8740 + C8739) * C502 + (C8744 + C8743 + C8742) * C508 +
            (C8747 + C8746 + C8745) * C503) *
               C50759 * C50835) *
              C50892 +
          (((C8110 + C8111 + C8112) * C507 -
            ((C7920 * C136 + C7915 * C146 + C7919 * C135 + C50944 * C145 +
              C7918 * C134 + C50943 * C144) *
                 C501 +
             (C7920 * C125 + C7915 * C132 + C7919 * C124 + C50944 * C131 +
              C7918 * C123 + C50943 * C130) *
                 C506) +
            (C8113 + C8114 + C8115) * C502 - (C8444 + C8445 + C8446) * C508 -
            (C8447 + C8448 + C8449) * C503) *
               C50759 * C50916 +
           ((C9656 + C9655 + C9654) * C507 -
            ((C11066 + C11067 + C11068) * C501 +
             (C11069 + C11070 + C11071) * C506) +
            (C9659 + C9658 + C9657) * C502 -
            (C7920 * C722 + C7915 * C734 + C7919 * C723 + C50944 * C735 +
             C7918 * C724 + C50943 * C736) *
                C508 -
            (C7920 * C738 + C7915 * C746 + C7919 * C739 + C50944 * C747 +
             C7918 * C740 + C50943 * C748) *
                C503) *
               C50759 * C50835) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
             C7920 * C124 + C7915 * C131) *
                C253 +
            (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
             C7920 * C135 + C7915 * C145) *
                C50899 -
            (C8104 + C8105 + C8106) * C254 - (C8107 + C8108 + C8109) * C50686) *
               C50759 * C50916 +
           ((C7918 * C383 + C50943 * C394 + C7919 * C379 + C50944 * C385 +
             C7920 * C380 + C7915 * C386) *
                C253 +
            (C7918 * C393 + C50943 * C401 + C7919 * C389 + C50944 * C397 +
             C7920 * C390 + C7915 * C398) *
                C50899 -
            (C8738 + C8737 + C8736) * C254 - (C8741 + C8740 + C8739) * C50686) *
               C50759 * C50835) *
              C250 +
          (((C8110 + C8111 + C8112) * C254 -
            ((C7920 * C136 + C7915 * C146 + C7919 * C135 + C50944 * C145 +
              C7918 * C134 + C50943 * C144) *
                 C50899 +
             (C7920 * C125 + C7915 * C132 + C7919 * C124 + C50944 * C131 +
              C7918 * C123 + C50943 * C130) *
                 C253) +
            (C8113 + C8114 + C8115) * C50686) *
               C50759 * C50916 +
           ((C9656 + C9655 + C9654) * C254 -
            ((C7920 * C391 + C7915 * C399 + C7919 * C390 + C50944 * C398 +
              C7918 * C389 + C50943 * C397) *
                 C50899 +
             (C7920 * C381 + C7915 * C387 + C7919 * C380 + C50944 * C386 +
              C7918 * C379 + C50943 * C385) *
                 C253) +
            (C9659 + C9658 + C9657) * C50686) *
               C50759 * C50835) *
              C251 +
          (((C7918 * C124 + C50943 * C131 + C7919 * C125 + C50944 * C132 +
             C7920 * C126 + C7915 * C138) *
                C253 +
            (C7918 * C135 + C50943 * C145 + C7919 * C136 + C50944 * C146 +
             C7920 * C137 + C7915 * C147) *
                C50899 -
            (C8116 + C8117 + C8118) * C254 - (C8119 + C8120 + C8121) * C50686) *
               C50759 * C50916 +
           ((C7918 * C380 + C50943 * C386 + C7919 * C381 + C50944 * C387 +
             C7920 * C382 + C7915 * C388) *
                C253 +
            (C7918 * C390 + C50943 * C398 + C7919 * C391 + C50944 * C399 +
             C7920 * C392 + C7915 * C400) *
                C50899 -
            (C7920 * C1412 + C7915 * C1413 + C7919 * C721 + C50944 * C729 +
             C7918 * C720 + C50943 * C728) *
                C254 -
            (C7920 * C1414 + C7915 * C1415 + C7919 * C733 + C50944 * C745 +
             C7918 * C732 + C50943 * C744) *
                C50686) *
               C50759 * C50835) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
            C7920 * C124 + C7915 * C131) *
               C600 +
           (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
            C7920 * C135 + C7915 * C145) *
               C595 -
           (C8104 + C8105 + C8106) * C601 - (C8107 + C8108 + C8109) * C596 +
           (C8438 + C8439 + C8440) * C602 + (C8441 + C8442 + C8443) * C597 -
           (C8560 + C8561 + C8562) * C603 - (C8563 + C8564 + C8565) * C598) *
              C50759 * C50916 +
          ((C11060 + C11061 + C11062) * C600 +
           (C11063 + C11064 + C11065) * C595 - (C8738 + C8737 + C8736) * C601 -
           (C8741 + C8740 + C8739) * C596 + (C8744 + C8743 + C8742) * C602 +
           (C8747 + C8746 + C8745) * C597 -
           (C7920 * C3984 + C7915 * C3985 + C7919 * C2994 + C50944 * C2998 +
            C7918 * C2995 + C50943 * C2999) *
               C603 -
           (C7920 * C3986 + C7915 * C3987 + C7919 * C3000 + C50944 * C3006 +
            C7918 * C3001 + C50943 * C3007) *
               C598) *
              C50759 * C50835) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
              C7920 * C124 + C7915 * C131) *
                 C121 +
             (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
              C7920 * C135 + C7915 * C145) *
                 C50670) *
                C50759 * C50916 +
            ((C11060 + C11061 + C11062) * C121 +
             (C11063 + C11064 + C11065) * C50670) *
                C50759 * C50835) *
               C250 -
           (((C11066 + C11067 + C11068) * C50670 +
             (C11069 + C11070 + C11071) * C121) *
                C50759 * C50835 +
            ((C7920 * C136 + C7915 * C146 + C7919 * C135 + C50944 * C145 +
              C7918 * C134 + C50943 * C144) *
                 C50670 +
             (C7920 * C125 + C7915 * C132 + C7919 * C124 + C50944 * C131 +
              C7918 * C123 + C50943 * C130) *
                 C121) *
                C50759 * C50916) *
               C251 +
           (((C7918 * C124 + C50943 * C131 + C7919 * C125 + C50944 * C132 +
              C7920 * C126 + C7915 * C138) *
                 C121 +
             (C7918 * C135 + C50943 * C145 + C7919 * C136 + C50944 * C146 +
              C7920 * C137 + C7915 * C147) *
                 C50670) *
                C50759 * C50916 +
            ((C11072 + C11073 + C11074) * C121 +
             (C11075 + C11076 + C11077) * C50670) *
                C50759 * C50835) *
               C252) *
              C50901 +
          ((((C11071 + C11070 + C11069) * C121 +
             (C11068 + C11067 + C11066) * C50670) *
                C50759 * C50916 +
            ((C7918 * C852 + C50943 * C857 + C7919 * C853 + C50944 * C858 +
              C7920 * C854 + C7915 * C859) *
                 C121 +
             (C7918 * C861 + C50943 * C867 + C7919 * C862 + C50944 * C868 +
              C7920 * C863 + C7915 * C869) *
                 C50670) *
                C50759 * C50835) *
               C251 -
           (((C7920 * C862 + C7915 * C868 + C7919 * C861 + C50944 * C867 +
              C7918 * C860 + C50943 * C866) *
                 C50670 +
             (C7920 * C853 + C7915 * C858 + C7919 * C852 + C50944 * C857 +
              C7918 * C851 + C50943 * C856) *
                 C121) *
                C50759 * C50835 +
            ((C11065 + C11064 + C11063) * C50670 +
             (C11062 + C11061 + C11060) * C121) *
                C50759 * C50916) *
               C250 -
           (((C7920 * C864 + C7915 * C870 + C7919 * C863 + C50944 * C869 +
              C7918 * C862 + C50943 * C868) *
                 C50670 +
             (C7920 * C855 + C7915 * C865 + C7919 * C854 + C50944 * C859 +
              C7918 * C853 + C50943 * C858) *
                 C121) *
                C50759 * C50835 +
            ((C11077 + C11076 + C11075) * C50670 +
             (C11074 + C11073 + C11072) * C121) *
                C50759 * C50916) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7918 * C122 + C50943 * C129 + C7919 * C123 + C50944 * C130 +
             C7920 * C124 + C7915 * C131) *
                C506 +
            (C7918 * C133 + C50943 * C143 + C7919 * C134 + C50944 * C144 +
             C7920 * C135 + C7915 * C145) *
                C501 -
            (C8104 + C8105 + C8106) * C507 - (C8107 + C8108 + C8109) * C502 +
            (C8438 + C8439 + C8440) * C508 + (C8441 + C8442 + C8443) * C503) *
               C50759 * C50916 +
           ((C11060 + C11061 + C11062) * C506 +
            (C11063 + C11064 + C11065) * C501 - (C8738 + C8737 + C8736) * C507 -
            (C8741 + C8740 + C8739) * C502 + (C8744 + C8743 + C8742) * C508 +
            (C8747 + C8746 + C8745) * C503) *
               C50759 * C50835) *
              C50636 * C50901 +
          (((C8736 + C8737 + C8738) * C507 -
            ((C11065 + C11064 + C11063) * C501 +
             (C11062 + C11061 + C11060) * C506) +
            (C8739 + C8740 + C8741) * C502 - (C8742 + C8743 + C8744) * C508 -
            (C8745 + C8746 + C8747) * C503) *
               C50759 * C50916 +
           ((C9054 + C9053 + C9052) * C507 -
            ((C7920 * C862 + C7915 * C868 + C7919 * C861 + C50944 * C867 +
              C7918 * C860 + C50943 * C866) *
                 C501 +
             (C7920 * C853 + C7915 * C858 + C7919 * C852 + C50944 * C857 +
              C7918 * C851 + C50943 * C856) *
                 C506) +
            (C9057 + C9056 + C9055) * C502 -
            (C7920 * C3196 + C7915 * C3202 + C7919 * C3195 + C50944 * C3198 +
             C7918 * C3194 + C50943 * C3197) *
                C508 -
            (C7920 * C3201 + C7915 * C3205 + C7919 * C3200 + C50944 * C3204 +
             C7918 * C3199 + C50943 * C3203) *
                C503) *
               C50759 * C50835) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C1174 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C1169 -
           (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
            C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
               C1175 -
           (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
            C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
               C50686) *
              C50759 * C50771 * C50945 +
          ((C117 * C257 + C105 * C263 + C118 * C256 + C106 * C262 +
            C119 * C255 + C107 * C261 + C120 * C259 + C108 * C269) *
               C1175 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C1169 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C1174) +
           (C117 * C267 + C105 * C275 + C118 * C266 + C106 * C274 +
            C119 * C265 + C107 * C273 + C120 * C270 + C108 * C277) *
               C50686) *
              C50759 * C50771 * C50930 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C1174 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C1169 -
           (C120 * C260 + C108 * C271 + C119 * C259 + C107 * C269 +
            C118 * C255 + C106 * C261 + C117 * C256 + C105 * C262) *
               C1175 -
           (C120 * C272 + C108 * C278 + C119 * C270 + C107 * C277 +
            C118 * C265 + C106 * C273 + C117 * C266 + C105 * C274) *
               C50686) *
              C50759 * C50771 * C1173) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C1174 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C1169 -
            (C2373 + C2374) * C1175 - (C2375 + C2376) * C50686) *
               C2173 +
           ((C2374 + C2373) * C1174 + (C2376 + C2375) * C1169 -
            (C2377 + C2378) * C1175 - (C2379 + C2380) * C50686) *
               C2174 +
           (C2701 * C1174 + C2702 * C1169 - C2835 * C1175 - C2836 * C50686) *
               C2175) *
              C50771 * C50945 +
          (((C2381 + C2382) * C1175 -
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C1169 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C1174) +
            (C2383 + C2384) * C50686) *
               C2173 +
           ((C2385 + C2386) * C1175 -
            ((C2384 + C2383) * C1169 + (C2382 + C2381) * C1174) +
            (C2387 + C2388) * C50686) *
               C2174 +
           ((C2726 + C2725) * C1175 - (C2712 * C1169 + C2711 * C1174) +
            (C2728 + C2727) * C50686) *
               C2175) *
              C50771 * C50930 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                C1174 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                C1169 -
            (C2389 + C2390) * C1175 - (C2391 + C2392) * C50686) *
               C2173 +
           ((C2390 + C2389) * C1174 + (C2392 + C2391) * C1169 -
            (C2393 + C2394) * C1175 - (C2395 + C2396) * C50686) *
               C2174 +
           ((C2394 + C2393) * C1174 + (C2396 + C2395) * C1169 -
            (C2177 * C604 + C50616 * C608 + C2176 * C605 + C2171 * C609) *
                C1175 -
            (C2177 * C612 + C50616 * C616 + C2176 * C613 + C2171 * C617) *
                C50686) *
               C2175) *
              C50771 * C1173) *
         C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C1279 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50946 -
           (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
            C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
               C1280 -
           (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
            C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
               C50933 +
           (C117 * C509 + C105 * C514 + C118 * C510 + C106 * C515 +
            C119 * C511 + C107 * C516 + C120 * C512 + C108 * C517) *
               C1281 +
           (C117 * C518 + C105 * C524 + C118 * C519 + C106 * C525 +
            C119 * C520 + C107 * C526 + C120 * C521 + C108 * C527) *
               C1276) *
              C50759 * C50771 * C1277 +
          ((C117 * C257 + C105 * C263 + C118 * C256 + C106 * C262 +
            C119 * C255 + C107 * C261 + C120 * C259 + C108 * C269) *
               C1280 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50946 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C1279) +
           (C117 * C267 + C105 * C275 + C118 * C266 + C106 * C274 +
            C119 * C265 + C107 * C273 + C120 * C270 + C108 * C277) *
               C50933 -
           (C120 * C513 + C108 * C522 + C119 * C512 + C107 * C517 +
            C118 * C511 + C106 * C516 + C117 * C510 + C105 * C515) *
               C1281 -
           (C120 * C523 + C108 * C528 + C119 * C521 + C107 * C527 +
            C118 * C520 + C106 * C526 + C117 * C519 + C105 * C525) *
               C1276) *
              C50759 * C50771 * C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C1279 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C50946 -
            (C2373 + C2374) * C1280 - (C2375 + C2376) * C50933 + C2701 * C1281 +
            C2702 * C1276) *
               C2173 +
           ((C2374 + C2373) * C1279 + (C2376 + C2375) * C50946 -
            (C2377 + C2378) * C1280 - (C2379 + C2380) * C50933 +
            (C2721 + C2722) * C1281 + (C2723 + C2724) * C1276) *
               C2174 +
           (C2701 * C1279 + C2702 * C50946 - C2835 * C1280 - C2836 * C50933 +
            (C2846 + C2845) * C1281 + (C2848 + C2847) * C1276) *
               C2175) *
              C50771 * C1277 +
          (((C2381 + C2382) * C1280 -
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C50946 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C1279) +
            (C2383 + C2384) * C50933 - C2711 * C1281 - C2712 * C1276) *
               C2173 +
           ((C2385 + C2386) * C1280 -
            ((C2384 + C2383) * C50946 + (C2382 + C2381) * C1279) +
            (C2387 + C2388) * C50933 - (C2725 + C2726) * C1281 -
            (C2727 + C2728) * C1276) *
               C2174 +
           ((C2726 + C2725) * C1280 - (C2712 * C50946 + C2711 * C1279) +
            (C2728 + C2727) * C50933 -
            (C2177 * C2690 + C50616 * C2695 + C2176 * C2689 + C2171 * C2692) *
                C1281 -
            (C2177 * C2696 + C50616 * C2699 + C2176 * C2694 + C2171 * C2698) *
                C1276) *
               C2175) *
              C50771 * C50641) *
         C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C1174 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C1169 -
            (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
             C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
                C1175 -
            (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
             C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
                C50686) *
               C50759 * C50771 * C1277 +
           ((C117 * C257 + C105 * C263 + C118 * C256 + C106 * C262 +
             C119 * C255 + C107 * C261 + C120 * C259 + C108 * C269) *
                C1175 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C1169 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C1174) +
            (C117 * C267 + C105 * C275 + C118 * C266 + C106 * C274 +
             C119 * C265 + C107 * C273 + C120 * C270 + C108 * C277) *
                C50686) *
               C50759 * C50771 * C50641) *
              C50901 +
          (((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C1175 -
            ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
              C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
                 C1169 +
             (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
              C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
                 C1174) +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C50686) *
               C50759 * C50771 * C1277 +
           ((C117 * C379 + C105 * C385 + C118 * C380 + C106 * C386 +
             C119 * C381 + C107 * C387 + C120 * C382 + C108 * C388) *
                C1174 +
            (C117 * C389 + C105 * C397 + C118 * C390 + C106 * C398 +
             C119 * C391 + C107 * C399 + C120 * C392 + C108 * C400) *
                C1169 -
            (C120 * C1412 + C108 * C1413 + C119 * C721 + C107 * C729 +
             C118 * C720 + C106 * C728 + C117 * C719 + C105 * C727) *
                C1175 -
            (C120 * C1414 + C108 * C1415 + C119 * C733 + C107 * C745 +
             C118 * C732 + C106 * C744 + C117 * C731 + C105 * C743) *
                C50686) *
               C50759 * C50771 * C50641) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C1174 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C1169 -
             (C2373 + C2374) * C1175 - (C2375 + C2376) * C50686) *
                C2173 +
            ((C2374 + C2373) * C1174 + (C2376 + C2375) * C1169 -
             (C2377 + C2378) * C1175 - (C2379 + C2380) * C50686) *
                C2174 +
            (C2701 * C1174 + C2702 * C1169 - C2835 * C1175 - C2836 * C50686) *
                C2175) *
               C50771 * C1277 +
           (((C2381 + C2382) * C1175 -
             ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                  C1169 +
              (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                  C1174) +
             (C2383 + C2384) * C50686) *
                C2173 +
            ((C2385 + C2386) * C1175 -
             ((C2384 + C2383) * C1169 + (C2382 + C2381) * C1174) +
             (C2387 + C2388) * C50686) *
                C2174 +
            ((C2726 + C2725) * C1175 - (C2712 * C1169 + C2711 * C1174) +
             (C2728 + C2727) * C50686) *
                C2175) *
               C50771 * C50641) *
              C50901 +
          ((((C3035 + C3036) * C1175 -
             ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                  C1169 +
              (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                  C1174) +
             (C3037 + C3038) * C50686) *
                C2173 +
            ((C3040 + C3039) * C1175 -
             ((C3038 + C3037) * C1169 + (C3036 + C3035) * C1174) +
             (C3042 + C3041) * C50686) *
                C2174 +
            ((C3044 + C3043) * C1175 - (C3048 * C1169 + C3047 * C1174) +
             (C3046 + C3045) * C50686) *
                C2175) *
               C50771 * C1277 +
           (((C2176 * C379 + C2171 * C385 + C2177 * C380 + C50616 * C386) *
                 C1174 +
             (C2176 * C389 + C2171 * C397 + C2177 * C390 + C50616 * C398) *
                 C1169 -
             (C4005 + C4006) * C1175 - (C4007 + C4008) * C50686) *
                C2173 +
            ((C4006 + C4005) * C1174 + (C4008 + C4007) * C1169 -
             (C4009 + C4010) * C1175 - (C4011 + C4012) * C50686) *
                C2174 +
            ((C4010 + C4009) * C1174 + (C4012 + C4011) * C1169 -
             (C2177 * C3984 + C50616 * C3985 + C2176 * C2994 + C2171 * C2998) *
                 C1175 -
             (C2177 * C3986 + C50616 * C3987 + C2176 * C3000 + C2171 * C3006) *
                 C50686) *
                C2175) *
               C50771 * C50641) *
              C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C1174 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C1169 -
            (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
             C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
                C1175 -
            (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
             C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
                C50686) *
               C50759 * C50771 * C50892 +
           ((C117 * C257 + C105 * C263 + C118 * C256 + C106 * C262 +
             C119 * C255 + C107 * C261 + C120 * C259 + C108 * C269) *
                C1175 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C1169 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C1174) +
            (C117 * C267 + C105 * C275 + C118 * C266 + C106 * C274 +
             C119 * C265 + C107 * C273 + C120 * C270 + C108 * C277) *
                C50686) *
               C50759 * C50771 * C50641) *
              C1514 +
          (((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C1175 -
            ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
              C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
                 C1169 +
             (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
              C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
                 C1174) +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C50686) *
               C50759 * C50771 * C50892 +
           ((C117 * C379 + C105 * C385 + C118 * C380 + C106 * C386 +
             C119 * C381 + C107 * C387 + C120 * C382 + C108 * C388) *
                C1174 +
            (C117 * C389 + C105 * C397 + C118 * C390 + C106 * C398 +
             C119 * C391 + C107 * C399 + C120 * C392 + C108 * C400) *
                C1169 -
            (C120 * C1412 + C108 * C1413 + C119 * C721 + C107 * C729 +
             C118 * C720 + C106 * C728 + C117 * C719 + C105 * C727) *
                C1175 -
            (C120 * C1414 + C108 * C1415 + C119 * C733 + C107 * C745 +
             C118 * C732 + C106 * C744 + C117 * C731 + C105 * C743) *
                C50686) *
               C50759 * C50771 * C50641) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C1174 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C1169 -
             (C2373 + C2374) * C1175 - (C2375 + C2376) * C50686) *
                C2173 +
            ((C2374 + C2373) * C1174 + (C2376 + C2375) * C1169 -
             (C2377 + C2378) * C1175 - (C2379 + C2380) * C50686) *
                C2174 +
            (C2701 * C1174 + C2702 * C1169 - C2835 * C1175 - C2836 * C50686) *
                C2175) *
               C50771 * C50892 +
           (((C2381 + C2382) * C1175 -
             ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                  C1169 +
              (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                  C1174) +
             (C2383 + C2384) * C50686) *
                C2173 +
            ((C2385 + C2386) * C1175 -
             ((C2384 + C2383) * C1169 + (C2382 + C2381) * C1174) +
             (C2387 + C2388) * C50686) *
                C2174 +
            ((C2726 + C2725) * C1175 - (C2712 * C1169 + C2711 * C1174) +
             (C2728 + C2727) * C50686) *
                C2175) *
               C50771 * C50641) *
              C1514 +
          ((((C3035 + C3036) * C1175 -
             ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                  C1169 +
              (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                  C1174) +
             (C3037 + C3038) * C50686) *
                C2173 +
            ((C3040 + C3039) * C1175 -
             ((C3038 + C3037) * C1169 + (C3036 + C3035) * C1174) +
             (C3042 + C3041) * C50686) *
                C2174 +
            ((C3044 + C3043) * C1175 - (C3048 * C1169 + C3047 * C1174) +
             (C3046 + C3045) * C50686) *
                C2175) *
               C50771 * C50892 +
           (((C2176 * C379 + C2171 * C385 + C2177 * C380 + C50616 * C386) *
                 C1174 +
             (C2176 * C389 + C2171 * C397 + C2177 * C390 + C50616 * C398) *
                 C1169 -
             (C4005 + C4006) * C1175 - (C4007 + C4008) * C50686) *
                C2173 +
            ((C4006 + C4005) * C1174 + (C4008 + C4007) * C1169 -
             (C4009 + C4010) * C1175 - (C4011 + C4012) * C50686) *
                C2174 +
            ((C4010 + C4009) * C1174 + (C4012 + C4011) * C1169 -
             (C2177 * C3984 + C50616 * C3985 + C2176 * C2994 + C2171 * C2998) *
                 C1175 -
             (C2177 * C3986 + C50616 * C3987 + C2176 * C3000 + C2171 * C3006) *
                 C50686) *
                C2175) *
               C50771 * C50641) *
              C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C1279 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50946 -
           (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
            C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
               C1280 -
           (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
            C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
               C50933 +
           (C117 * C509 + C105 * C514 + C118 * C510 + C106 * C515 +
            C119 * C511 + C107 * C516 + C120 * C512 + C108 * C517) *
               C1281 +
           (C117 * C518 + C105 * C524 + C118 * C519 + C106 * C525 +
            C119 * C520 + C107 * C526 + C120 * C521 + C108 * C527) *
               C1276) *
              C50759 * C50771 * C50636 * C1514 +
          ((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
            C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
               C1280 -
           ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
             C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
                C50946 +
            (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
             C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
                C1279) +
           (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
            C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
               C50933 -
           (C120 * C722 + C108 * C734 + C119 * C723 + C107 * C735 +
            C118 * C724 + C106 * C736 + C117 * C725 + C105 * C737) *
               C1281 -
           (C120 * C738 + C108 * C746 + C119 * C739 + C107 * C747 +
            C118 * C740 + C106 * C748 + C117 * C741 + C105 * C749) *
               C1276) *
              C50759 * C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C1279 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C50946 -
            (C2373 + C2374) * C1280 - (C2375 + C2376) * C50933 + C2701 * C1281 +
            C2702 * C1276) *
               C2173 +
           ((C2374 + C2373) * C1279 + (C2376 + C2375) * C50946 -
            (C2377 + C2378) * C1280 - (C2379 + C2380) * C50933 +
            (C2721 + C2722) * C1281 + (C2723 + C2724) * C1276) *
               C2174 +
           (C2701 * C1279 + C2702 * C50946 - C2835 * C1280 - C2836 * C50933 +
            (C2846 + C2845) * C1281 + (C2848 + C2847) * C1276) *
               C2175) *
              C50771 * C50636 * C1514 +
          (((C3035 + C3036) * C1280 -
            ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                 C50946 +
             (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                 C1279) +
            (C3037 + C3038) * C50933 - C3047 * C1281 - C3048 * C1276) *
               C2173 +
           ((C3040 + C3039) * C1280 -
            ((C3038 + C3037) * C50946 + (C3036 + C3035) * C1279) +
            (C3042 + C3041) * C50933 - (C3043 + C3044) * C1281 -
            (C3045 + C3046) * C1276) *
               C2174 +
           ((C3044 + C3043) * C1280 - (C3048 * C50946 + C3047 * C1279) +
            (C3046 + C3045) * C50933 -
            (C2177 * C2996 + C50616 * C3002 + C2176 * C2997 + C2171 * C3003) *
                C1281 -
            (C2177 * C3004 + C50616 * C3008 + C2176 * C3005 + C2171 * C3009) *
                C1276) *
               C2175) *
              C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C1174 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C1169 -
           (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
            C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
               C1175 -
           (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
            C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
               C50686) *
              C50759 * C50771 * C50636 * C50947 +
          ((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
            C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
               C1175 -
           ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
             C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
                C1169 +
            (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
             C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
                C1174) +
           (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
            C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
               C50686) *
              C50759 * C50771 * C50636 * C50936 +
          ((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
            C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
               C1174 +
           (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
            C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
               C1169 -
           (C120 * C969 + C108 * C973 + C119 * C970 + C107 * C974 +
            C118 * C971 + C106 * C975 + C117 * C972 + C105 * C976) *
               C1175 -
           (C120 * C977 + C108 * C981 + C119 * C978 + C107 * C982 +
            C118 * C979 + C106 * C983 + C117 * C980 + C105 * C984) *
               C50686) *
              C50759 * C50771 * C50636 * C1746)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C1174 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C1169 -
            (C2373 + C2374) * C1175 - (C2375 + C2376) * C50686) *
               C2173 +
           ((C2374 + C2373) * C1174 + (C2376 + C2375) * C1169 -
            (C2377 + C2378) * C1175 - (C2379 + C2380) * C50686) *
               C2174 +
           (C2701 * C1174 + C2702 * C1169 - C2835 * C1175 - C2836 * C50686) *
               C2175) *
              C50771 * C50636 * C50947 +
          (((C3035 + C3036) * C1175 -
            ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                 C1169 +
             (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                 C1174) +
            (C3037 + C3038) * C50686) *
               C2173 +
           ((C3040 + C3039) * C1175 -
            ((C3038 + C3037) * C1169 + (C3036 + C3035) * C1174) +
            (C3042 + C3041) * C50686) *
               C2174 +
           ((C3044 + C3043) * C1175 - (C3048 * C1169 + C3047 * C1174) +
            (C3046 + C3045) * C50686) *
               C2175) *
              C50771 * C50636 * C50936 +
          (((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50616 * C857) *
                C1174 +
            (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50616 * C867) *
                C1169 -
            (C3377 + C3378) * C1175 - (C3379 + C3380) * C50686) *
               C2173 +
           ((C3378 + C3377) * C1174 + (C3380 + C3379) * C1169 -
            (C3381 + C3382) * C1175 - (C3383 + C3384) * C50686) *
               C2174 +
           ((C3382 + C3381) * C1174 + (C3384 + C3383) * C1169 -
            (C2177 * C3352 + C50616 * C3354 + C2176 * C3353 + C2171 * C3355) *
                C1175 -
            (C2177 * C3356 + C50616 * C3358 + C2176 * C3357 + C2171 * C3359) *
                C50686) *
               C2175) *
              C50771 * C50636 * C1746)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C506 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C501 -
           (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
            C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
               C507 -
           (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
            C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
               C502 +
           (C117 * C509 + C105 * C514 + C118 * C510 + C106 * C515 +
            C119 * C511 + C107 * C516 + C120 * C512 + C108 * C517) *
               C508 +
           (C117 * C518 + C105 * C524 + C118 * C519 + C106 * C525 +
            C119 * C520 + C107 * C526 + C120 * C521 + C108 * C527) *
               C503) *
              C50759 * C50771 * C50892 +
          ((C117 * C257 + C105 * C263 + C118 * C256 + C106 * C262 +
            C119 * C255 + C107 * C261 + C120 * C259 + C108 * C269) *
               C507 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C501 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C506) +
           (C117 * C267 + C105 * C275 + C118 * C266 + C106 * C274 +
            C119 * C265 + C107 * C273 + C120 * C270 + C108 * C277) *
               C502 -
           (C120 * C513 + C108 * C522 + C119 * C512 + C107 * C517 +
            C118 * C511 + C106 * C516 + C117 * C510 + C105 * C515) *
               C508 -
           (C120 * C523 + C108 * C528 + C119 * C521 + C107 * C527 +
            C118 * C520 + C106 * C526 + C117 * C519 + C105 * C525) *
               C503) *
              C50759 * C50771 * C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50670) *
              C50759 * C50771 * C112 -
          ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
            C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
               C50670 +
           (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
            C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
               C121) *
              C50759 * C50771 * C113 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C121 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C50670) *
              C50759 * C50771 * C114 -
          ((C120 * C141 + C108 * C149 + C119 * C140 + C107 * C148 +
            C118 * C137 + C106 * C147 + C117 * C136 + C105 * C146) *
               C50670 +
           (C120 * C128 + C108 * C142 + C119 * C127 + C107 * C139 +
            C118 * C126 + C106 * C138 + C117 * C125 + C105 * C132) *
               C121) *
              C50759 * C50771 * C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50670) *
               C50759 * C50771 * C50892 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50670 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50759 * C50771 * C50641) *
              C848 +
          (((C117 * C379 + C105 * C385 + C118 * C380 + C106 * C386 +
             C119 * C381 + C107 * C387 + C120 * C382 + C108 * C388) *
                C121 +
            (C117 * C389 + C105 * C397 + C118 * C390 + C106 * C398 +
             C119 * C391 + C107 * C399 + C120 * C392 + C108 * C400) *
                C50670) *
               C50759 * C50771 * C50641 -
           ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
             C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
                C50670 +
            (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
             C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
                C121) *
               C50759 * C50771 * C50892) *
              C849 +
          (((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
             C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
                C121 +
            (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
             C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
                C50670) *
               C50759 * C50771 * C50892 -
           ((C120 * C864 + C108 * C870 + C119 * C863 + C107 * C869 +
             C118 * C862 + C106 * C868 + C117 * C861 + C105 * C867) *
                C50670 +
            (C120 * C855 + C108 * C865 + C119 * C854 + C107 * C859 +
             C118 * C853 + C106 * C858 + C117 * C852 + C105 * C857) *
                C121) *
               C50759 * C50771 * C50641) *
              C850)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C50670) *
               C2173 +
           ((C2176 * C258 + C2171 * C264 + C2177 * C257 + C50616 * C263) *
                C121 +
            (C2176 * C268 + C2171 * C276 + C2177 * C267 + C50616 * C275) *
                C50670) *
               C2174 +
           ((C2176 * C509 + C2171 * C514 + C2177 * C510 + C50616 * C515) *
                C121 +
            (C2176 * C518 + C2171 * C524 + C2177 * C519 + C50616 * C525) *
                C50670) *
               C2175) *
              C50771 * C112 -
          (((C2177 * C520 + C50616 * C526 + C2176 * C519 + C2171 * C525) *
                C50670 +
            (C2177 * C511 + C50616 * C516 + C2176 * C510 + C2171 * C515) *
                C121) *
               C2175 +
           ((C2177 * C266 + C50616 * C274 + C2176 * C267 + C2171 * C275) *
                C50670 +
            (C2177 * C256 + C50616 * C262 + C2176 * C257 + C2171 * C263) *
                C121) *
               C2174 +
           ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                C50670 +
            (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                C121) *
               C2173) *
              C50771 * C113 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                C121 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                C50670) *
               C2173 +
           ((C2176 * C256 + C2171 * C262 + C2177 * C255 + C50616 * C261) *
                C121 +
            (C2176 * C266 + C2171 * C274 + C2177 * C265 + C50616 * C273) *
                C50670) *
               C2174 +
           ((C2176 * C511 + C2171 * C516 + C2177 * C512 + C50616 * C517) *
                C121 +
            (C2176 * C520 + C2171 * C526 + C2177 * C521 + C50616 * C527) *
                C50670) *
               C2175) *
              C50771 * C114 -
          (((C2177 * C523 + C50616 * C528 + C2176 * C521 + C2171 * C527) *
                C50670 +
            (C2177 * C513 + C50616 * C522 + C2176 * C512 + C2171 * C517) *
                C121) *
               C2175 +
           ((C2177 * C270 + C50616 * C277 + C2176 * C265 + C2171 * C273) *
                C50670 +
            (C2177 * C259 + C50616 * C269 + C2176 * C255 + C2171 * C261) *
                C121) *
               C2174 +
           ((C2177 * C137 + C50616 * C147 + C2176 * C136 + C2171 * C146) *
                C50670 +
            (C2177 * C126 + C50616 * C138 + C2176 * C125 + C2171 * C132) *
                C121) *
               C2173) *
              C50771 * C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C506 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C501 -
            (C2373 + C2374) * C507 - (C2375 + C2376) * C502 + C2701 * C508 +
            C2702 * C503) *
               C2173 +
           ((C2374 + C2373) * C506 + (C2376 + C2375) * C501 -
            (C2377 + C2378) * C507 - (C2379 + C2380) * C502 +
            (C2721 + C2722) * C508 + (C2723 + C2724) * C503) *
               C2174 +
           (C2701 * C506 + C2702 * C501 - (C2722 + C2721) * C507 -
            (C2724 + C2723) * C502 +
            (C2176 * C2688 + C2171 * C2691 + C2177 * C2689 + C50616 * C2692) *
                C508 +
            (C2176 * C2693 + C2171 * C2697 + C2177 * C2694 + C50616 * C2698) *
                C503) *
               C2175) *
              C50771 * C50892 +
          (((C2381 + C2382) * C507 -
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C501 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C506) +
            (C2383 + C2384) * C502 - C2711 * C508 - C2712 * C503) *
               C2173 +
           ((C2385 + C2386) * C507 -
            ((C2384 + C2383) * C501 + (C2382 + C2381) * C506) +
            (C2387 + C2388) * C502 - (C2725 + C2726) * C508 -
            (C2727 + C2728) * C503) *
               C2174 +
           ((C2726 + C2725) * C507 - (C2712 * C501 + C2711 * C506) +
            (C2728 + C2727) * C502 -
            (C2177 * C2690 + C50616 * C2695 + C2176 * C2689 + C2171 * C2692) *
                C508 -
            (C2177 * C2696 + C50616 * C2699 + C2176 * C2694 + C2171 * C2698) *
                C503) *
               C2175) *
              C50771 * C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C50670) *
                C2173 +
            ((C2374 + C2373) * C121 + (C2376 + C2375) * C50670) * C2174 +
            (C2701 * C121 + C2702 * C50670) * C2175) *
               C50771 * C50892 -
           ((C2712 * C50670 + C2711 * C121) * C2175 +
            ((C2384 + C2383) * C50670 + (C2382 + C2381) * C121) * C2174 +
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C50670 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50771 * C50641) *
              C848 +
          ((((C2176 * C379 + C2171 * C385 + C2177 * C380 + C50616 * C386) *
                 C121 +
             (C2176 * C389 + C2171 * C397 + C2177 * C390 + C50616 * C398) *
                 C50670) *
                C2173 +
            ((C2176 * C719 + C2171 * C727 + C2177 * C720 + C50616 * C728) *
                 C121 +
             (C2176 * C731 + C2171 * C743 + C2177 * C732 + C50616 * C744) *
                 C50670) *
                C2174 +
            ((C2176 * C724 + C2171 * C736 + C2177 * C723 + C50616 * C735) *
                 C121 +
             (C2176 * C740 + C2171 * C748 + C2177 * C739 + C50616 * C747) *
                 C50670) *
                C2175) *
               C50771 * C50641 -
           ((C3048 * C50670 + C3047 * C121) * C2175 +
            ((C3038 + C3037) * C50670 + (C3036 + C3035) * C121) * C2174 +
            ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                 C50670 +
             (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                 C121) *
                C2173) *
               C50771 * C50892) *
              C849 +
          ((((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50616 * C857) *
                 C121 +
             (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50616 * C867) *
                 C50670) *
                C2173 +
            ((C2176 * C972 + C2171 * C976 + C2177 * C971 + C50616 * C975) *
                 C121 +
             (C2176 * C980 + C2171 * C984 + C2177 * C979 + C50616 * C983) *
                 C50670) *
                C2174 +
            ((C2176 * C3194 + C2171 * C3197 + C2177 * C3195 + C50616 * C3198) *
                 C121 +
             (C2176 * C3199 + C2171 * C3203 + C2177 * C3200 + C50616 * C3204) *
                 C50670) *
                C2175) *
               C50771 * C50892 -
           (((C2177 * C3201 + C50616 * C3205 + C2176 * C3200 + C2171 * C3204) *
                 C50670 +
             (C2177 * C3196 + C50616 * C3202 + C2176 * C3195 + C2171 * C3198) *
                 C121) *
                C2175 +
            ((C2177 * C978 + C50616 * C982 + C2176 * C979 + C2171 * C983) *
                 C50670 +
             (C2177 * C970 + C50616 * C974 + C2176 * C971 + C2171 * C975) *
                 C121) *
                C2174 +
            ((C2177 * C862 + C50616 * C868 + C2176 * C861 + C2171 * C867) *
                 C50670 +
             (C2177 * C853 + C50616 * C858 + C2176 * C852 + C2171 * C857) *
                 C121) *
                C2173) *
               C50771 * C50641) *
              C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 + C119 * C124 +
           C107 * C131 + C120 * C125 + C108 * C132) *
              C600 +
          (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 + C119 * C135 +
           C107 * C145 + C120 * C136 + C108 * C146) *
              C595 -
          (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 + C118 * C257 +
           C106 * C263 + C117 * C258 + C105 * C264) *
              C601 -
          (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 + C118 * C267 +
           C106 * C275 + C117 * C268 + C105 * C276) *
              C596 +
          (C117 * C509 + C105 * C514 + C118 * C510 + C106 * C515 + C119 * C511 +
           C107 * C516 + C120 * C512 + C108 * C517) *
              C602 +
          (C117 * C518 + C105 * C524 + C118 * C519 + C106 * C525 + C119 * C520 +
           C107 * C526 + C120 * C521 + C108 * C527) *
              C597 -
          (C120 * C604 + C108 * C608 + C119 * C605 + C107 * C609 + C118 * C606 +
           C106 * C610 + C117 * C607 + C105 * C611) *
              C603 -
          (C120 * C612 + C108 * C616 + C119 * C613 + C107 * C617 + C118 * C614 +
           C106 * C618 + C117 * C615 + C105 * C619) *
              C598) *
         C50759 * C50771 * C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C253 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50899 -
           (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
            C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
               C254 -
           (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
            C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
               C50686) *
              C50759 * C50771 * C250 +
          ((C117 * C257 + C105 * C263 + C118 * C256 + C106 * C262 +
            C119 * C255 + C107 * C261 + C120 * C259 + C108 * C269) *
               C254 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50899 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C253) +
           (C117 * C267 + C105 * C275 + C118 * C266 + C106 * C274 +
            C119 * C265 + C107 * C273 + C120 * C270 + C108 * C277) *
               C50686) *
              C50759 * C50771 * C251 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C253 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C50899 -
           (C120 * C260 + C108 * C271 + C119 * C259 + C107 * C269 +
            C118 * C255 + C106 * C261 + C117 * C256 + C105 * C262) *
               C254 -
           (C120 * C272 + C108 * C278 + C119 * C270 + C107 * C277 +
            C118 * C265 + C106 * C273 + C117 * C266 + C105 * C274) *
               C50686) *
              C50759 * C50771 * C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C253 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50899 -
           (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
            C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
               C254 -
           (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
            C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
               C50686) *
              C50759 * C50771 * C50636 * C848 +
          ((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
            C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
               C254 -
           ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
             C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
                C50899 +
            (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
             C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
                C253) +
           (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
            C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
               C50686) *
              C50759 * C50771 * C50636 * C849 +
          ((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
            C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
               C253 +
           (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
            C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
               C50899 -
           (C120 * C969 + C108 * C973 + C119 * C970 + C107 * C974 +
            C118 * C971 + C106 * C975 + C117 * C972 + C105 * C976) *
               C254 -
           (C120 * C977 + C108 * C981 + C119 * C978 + C107 * C982 +
            C118 * C979 + C106 * C983 + C117 * C980 + C105 * C984) *
               C50686) *
              C50759 * C50771 * C50636 * C850)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C253 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C50899 -
            (C2373 + C2374) * C254 - (C2375 + C2376) * C50686) *
               C2173 +
           ((C2374 + C2373) * C253 + (C2376 + C2375) * C50899 -
            (C2377 + C2378) * C254 - (C2379 + C2380) * C50686) *
               C2174 +
           ((C2378 + C2377) * C253 + (C2380 + C2379) * C50899 -
            (C2177 * C606 + C50616 * C610 + C2176 * C607 + C2171 * C611) *
                C254 -
            (C2177 * C614 + C50616 * C618 + C2176 * C615 + C2171 * C619) *
                C50686) *
               C2175) *
              C50771 * C250 +
          (((C2381 + C2382) * C254 -
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C50899 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C253) +
            (C2383 + C2384) * C50686) *
               C2173 +
           ((C2385 + C2386) * C254 -
            ((C2384 + C2383) * C50899 + (C2382 + C2381) * C253) +
            (C2387 + C2388) * C50686) *
               C2174 +
           ((C2176 * C606 + C2171 * C610 + C2177 * C605 + C50616 * C609) *
                C254 -
            ((C2388 + C2387) * C50899 + (C2386 + C2385) * C253) +
            (C2176 * C614 + C2171 * C618 + C2177 * C613 + C50616 * C617) *
                C50686) *
               C2175) *
              C50771 * C251 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                C253 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                C50899 -
            (C2389 + C2390) * C254 - (C2391 + C2392) * C50686) *
               C2173 +
           ((C2390 + C2389) * C253 + (C2392 + C2391) * C50899 -
            (C2393 + C2394) * C254 - (C2395 + C2396) * C50686) *
               C2174 +
           ((C2394 + C2393) * C253 + (C2396 + C2395) * C50899 -
            (C2177 * C604 + C50616 * C608 + C2176 * C605 + C2171 * C609) *
                C254 -
            (C2177 * C612 + C50616 * C616 + C2176 * C613 + C2171 * C617) *
                C50686) *
               C2175) *
              C50771 * C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) * C600 +
           (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) * C595 -
           (C2373 + C2374) * C601 - (C2375 + C2376) * C596 + C2701 * C602 +
           C2702 * C597 - C2835 * C603 - C2836 * C598) *
              C2173 +
          ((C2374 + C2373) * C600 + (C2376 + C2375) * C595 -
           (C2377 + C2378) * C601 - (C2379 + C2380) * C596 +
           (C2721 + C2722) * C602 + (C2723 + C2724) * C597 -
           (C2845 + C2846) * C603 - (C2847 + C2848) * C598) *
              C2174 +
          (C2701 * C600 + C2702 * C595 - C2835 * C601 - C2836 * C596 +
           (C2846 + C2845) * C602 + (C2848 + C2847) * C597 -
           (C2177 * C2826 + C50616 * C2828 + C2176 * C2827 + C2171 * C2829) *
               C603 -
           (C2177 * C2830 + C50616 * C2832 + C2176 * C2831 + C2171 * C2833) *
               C598) *
              C2175) *
         C50771 * C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C253 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C50899 -
            (C2373 + C2374) * C254 - (C2375 + C2376) * C50686) *
               C2173 +
           ((C2374 + C2373) * C253 + (C2376 + C2375) * C50899 -
            (C2377 + C2378) * C254 - (C2379 + C2380) * C50686) *
               C2174 +
           (C2701 * C253 + C2702 * C50899 - C2835 * C254 - C2836 * C50686) *
               C2175) *
              C50771 * C50636 * C848 +
          (((C3035 + C3036) * C254 -
            ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                 C50899 +
             (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                 C253) +
            (C3037 + C3038) * C50686) *
               C2173 +
           ((C3040 + C3039) * C254 -
            ((C3038 + C3037) * C50899 + (C3036 + C3035) * C253) +
            (C3042 + C3041) * C50686) *
               C2174 +
           ((C3044 + C3043) * C254 - (C3048 * C50899 + C3047 * C253) +
            (C3046 + C3045) * C50686) *
               C2175) *
              C50771 * C50636 * C849 +
          (((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50616 * C857) *
                C253 +
            (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50616 * C867) *
                C50899 -
            (C3377 + C3378) * C254 - (C3379 + C3380) * C50686) *
               C2173 +
           ((C3378 + C3377) * C253 + (C3380 + C3379) * C50899 -
            (C3381 + C3382) * C254 - (C3383 + C3384) * C50686) *
               C2174 +
           ((C3382 + C3381) * C253 + (C3384 + C3383) * C50899 -
            (C2177 * C3352 + C50616 * C3354 + C2176 * C3353 + C2171 * C3355) *
                C254 -
            (C2177 * C3356 + C50616 * C3358 + C2176 * C3357 + C2171 * C3359) *
                C50686) *
               C2175) *
              C50771 * C50636 * C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C506 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C501 -
           (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
            C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
               C507 -
           (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
            C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
               C502 +
           (C117 * C509 + C105 * C514 + C118 * C510 + C106 * C515 +
            C119 * C511 + C107 * C516 + C120 * C512 + C108 * C517) *
               C508 +
           (C117 * C518 + C105 * C524 + C118 * C519 + C106 * C525 +
            C119 * C520 + C107 * C526 + C120 * C521 + C108 * C527) *
               C503) *
              C50759 * C50771 * C50636 * C50901 +
          ((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
            C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
               C507 -
           ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
             C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
                C501 +
            (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
             C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
                C506) +
           (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
            C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
               C502 -
           (C120 * C722 + C108 * C734 + C119 * C723 + C107 * C735 +
            C118 * C724 + C106 * C736 + C117 * C725 + C105 * C737) *
               C508 -
           (C120 * C738 + C108 * C746 + C119 * C739 + C107 * C747 +
            C118 * C740 + C106 * C748 + C117 * C741 + C105 * C749) *
               C503) *
              C50759 * C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50670) *
               C50759 * C50771 * C250 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50670 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50759 * C50771 * C251 +
           ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50670) *
               C50759 * C50771 * C252) *
              C50901 +
          (((C117 * C379 + C105 * C385 + C118 * C380 + C106 * C386 +
             C119 * C381 + C107 * C387 + C120 * C382 + C108 * C388) *
                C121 +
            (C117 * C389 + C105 * C397 + C118 * C390 + C106 * C398 +
             C119 * C391 + C107 * C399 + C120 * C392 + C108 * C400) *
                C50670) *
               C50759 * C50771 * C251 -
           ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
             C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
                C50670 +
            (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
             C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
                C121) *
               C50759 * C50771 * C250 -
           ((C120 * C395 + C108 * C402 + C119 * C392 + C107 * C400 +
             C118 * C391 + C106 * C399 + C117 * C390 + C105 * C398) *
                C50670 +
            (C120 * C384 + C108 * C396 + C119 * C382 + C107 * C388 +
             C118 * C381 + C106 * C387 + C117 * C380 + C105 * C386) *
                C121) *
               C50759 * C50771 * C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50670) *
              C50759 * C50771 * C50636 * C1051 -
          ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
            C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
               C50670 +
           (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
            C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
               C121) *
              C50759 * C50771 * C50636 * C1052 +
          ((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
            C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
               C121 +
           (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
            C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
               C50670) *
              C50759 * C50771 * C50636 * C1053 -
          ((C120 * C1059 + C108 * C1067 + C119 * C1060 + C107 * C1068 +
            C118 * C1061 + C106 * C1069 + C117 * C1062 + C105 * C1070) *
               C50670 +
           (C120 * C1055 + C108 * C1063 + C119 * C1056 + C107 * C1064 +
            C118 * C1057 + C106 * C1065 + C117 * C1058 + C105 * C1066) *
               C121) *
              C50759 * C50771 * C50636 * C1054)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C50670) *
                C2173 +
            ((C2374 + C2373) * C121 + (C2376 + C2375) * C50670) * C2174 +
            ((C2378 + C2377) * C121 + (C2380 + C2379) * C50670) * C2175) *
               C50771 * C250 -
           (((C2388 + C2387) * C50670 + (C2386 + C2385) * C121) * C2175 +
            ((C2384 + C2383) * C50670 + (C2382 + C2381) * C121) * C2174 +
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C50670 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50771 * C251 +
           (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                 C50670) *
                C2173 +
            ((C2390 + C2389) * C121 + (C2392 + C2391) * C50670) * C2174 +
            ((C2394 + C2393) * C121 + (C2396 + C2395) * C50670) * C2175) *
               C50771 * C252) *
              C50901 +
          ((((C2176 * C379 + C2171 * C385 + C2177 * C380 + C50616 * C386) *
                 C121 +
             (C2176 * C389 + C2171 * C397 + C2177 * C390 + C50616 * C398) *
                 C50670) *
                C2173 +
            ((C2176 * C719 + C2171 * C727 + C2177 * C720 + C50616 * C728) *
                 C121 +
             (C2176 * C731 + C2171 * C743 + C2177 * C732 + C50616 * C744) *
                 C50670) *
                C2174 +
            ((C2176 * C724 + C2171 * C736 + C2177 * C723 + C50616 * C735) *
                 C121 +
             (C2176 * C740 + C2171 * C748 + C2177 * C739 + C50616 * C747) *
                 C50670) *
                C2175) *
               C50771 * C251 -
           (((C2177 * C740 + C50616 * C748 + C2176 * C741 + C2171 * C749) *
                 C50670 +
             (C2177 * C724 + C50616 * C736 + C2176 * C725 + C2171 * C737) *
                 C121) *
                C2175 +
            ((C2177 * C731 + C50616 * C743 + C2176 * C730 + C2171 * C742) *
                 C50670 +
             (C2177 * C719 + C50616 * C727 + C2176 * C718 + C2171 * C726) *
                 C121) *
                C2174 +
            ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                 C50670 +
             (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                 C121) *
                C2173) *
               C50771 * C250 -
           (((C2177 * C738 + C50616 * C746 + C2176 * C739 + C2171 * C747) *
                 C50670 +
             (C2177 * C722 + C50616 * C734 + C2176 * C723 + C2171 * C735) *
                 C121) *
                C2175 +
            ((C2177 * C733 + C50616 * C745 + C2176 * C732 + C2171 * C744) *
                 C50670 +
             (C2177 * C721 + C50616 * C729 + C2176 * C720 + C2171 * C728) *
                 C121) *
                C2174 +
            ((C2177 * C391 + C50616 * C399 + C2176 * C390 + C2171 * C398) *
                 C50670 +
             (C2177 * C381 + C50616 * C387 + C2176 * C380 + C2171 * C386) *
                 C121) *
                C2173) *
               C50771 * C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C506 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C501 -
            (C2373 + C2374) * C507 - (C2375 + C2376) * C502 + C2701 * C508 +
            C2702 * C503) *
               C2173 +
           ((C2374 + C2373) * C506 + (C2376 + C2375) * C501 -
            (C2377 + C2378) * C507 - (C2379 + C2380) * C502 +
            (C2721 + C2722) * C508 + (C2723 + C2724) * C503) *
               C2174 +
           (C2701 * C506 + C2702 * C501 - C2835 * C507 - C2836 * C502 +
            (C2846 + C2845) * C508 + (C2848 + C2847) * C503) *
               C2175) *
              C50771 * C50636 * C50901 +
          (((C3035 + C3036) * C507 -
            ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                 C501 +
             (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                 C506) +
            (C3037 + C3038) * C502 - C3047 * C508 - C3048 * C503) *
               C2173 +
           ((C3040 + C3039) * C507 -
            ((C3038 + C3037) * C501 + (C3036 + C3035) * C506) +
            (C3042 + C3041) * C502 - (C3043 + C3044) * C508 -
            (C3045 + C3046) * C503) *
               C2174 +
           ((C3044 + C3043) * C507 - (C3048 * C501 + C3047 * C506) +
            (C3046 + C3045) * C502 -
            (C2177 * C2996 + C50616 * C3002 + C2176 * C2997 + C2171 * C3003) *
                C508 -
            (C2177 * C3004 + C50616 * C3008 + C2176 * C3005 + C2171 * C3009) *
                C503) *
               C2175) *
              C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C50670) *
               C2173 +
           ((C2374 + C2373) * C121 + (C2376 + C2375) * C50670) * C2174 +
           (C2701 * C121 + C2702 * C50670) * C2175) *
              C50771 * C50636 * C1051 -
          ((C3048 * C50670 + C3047 * C121) * C2175 +
           ((C3038 + C3037) * C50670 + (C3036 + C3035) * C121) * C2174 +
           ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                C50670 +
            (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                C121) *
               C2173) *
              C50771 * C50636 * C1052 +
          (((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50616 * C857) *
                C121 +
            (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50616 * C867) *
                C50670) *
               C2173 +
           ((C3378 + C3377) * C121 + (C3380 + C3379) * C50670) * C2174 +
           ((C3382 + C3381) * C121 + (C3384 + C3383) * C50670) * C2175) *
              C50771 * C50636 * C1053 -
          (((C2177 * C3486 + C50616 * C3494 + C2176 * C3487 + C2171 * C3495) *
                C50670 +
            (C2177 * C3482 + C50616 * C3488 + C2176 * C3483 + C2171 * C3489) *
                C121) *
               C2175 +
           ((C2177 * C3490 + C50616 * C3496 + C2176 * C3491 + C2171 * C3497) *
                C50670 +
            (C2177 * C3484 + C50616 * C3492 + C2176 * C3485 + C2171 * C3493) *
                C121) *
               C2174 +
           ((C2177 * C1061 + C50616 * C1069 + C2176 * C1062 + C2171 * C1070) *
                C50670 +
            (C2177 * C1057 + C50616 * C1065 + C2176 * C1058 + C2171 * C1066) *
                C121) *
               C2173) *
              C50771 * C50636 * C1054)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50670) *
               C50759 * C50771 * C50945 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50670 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50759 * C50771 * C50930 +
           ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50670) *
               C50759 * C50771 * C1173) *
              C1514 +
          (((C117 * C379 + C105 * C385 + C118 * C380 + C106 * C386 +
             C119 * C381 + C107 * C387 + C120 * C382 + C108 * C388) *
                C121 +
            (C117 * C389 + C105 * C397 + C118 * C390 + C106 * C398 +
             C119 * C391 + C107 * C399 + C120 * C392 + C108 * C400) *
                C50670) *
               C50759 * C50771 * C50930 -
           ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
             C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
                C50670 +
            (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
             C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
                C121) *
               C50759 * C50771 * C50945 -
           ((C120 * C395 + C108 * C402 + C119 * C392 + C107 * C400 +
             C118 * C391 + C106 * C399 + C117 * C390 + C105 * C398) *
                C50670 +
            (C120 * C384 + C108 * C396 + C119 * C382 + C107 * C388 +
             C118 * C381 + C106 * C387 + C117 * C380 + C105 * C386) *
                C121) *
               C50759 * C50771 * C1173) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C50670) *
                C2173 +
            ((C2374 + C2373) * C121 + (C2376 + C2375) * C50670) * C2174 +
            (C2701 * C121 + C2702 * C50670) * C2175) *
               C50771 * C50945 -
           ((C2712 * C50670 + C2711 * C121) * C2175 +
            ((C2384 + C2383) * C50670 + (C2382 + C2381) * C121) * C2174 +
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C50670 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50771 * C50930 +
           (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                 C50670) *
                C2173 +
            ((C2390 + C2389) * C121 + (C2392 + C2391) * C50670) * C2174 +
            ((C2394 + C2393) * C121 + (C2396 + C2395) * C50670) * C2175) *
               C50771 * C1173) *
              C1514 +
          ((((C2176 * C379 + C2171 * C385 + C2177 * C380 + C50616 * C386) *
                 C121 +
             (C2176 * C389 + C2171 * C397 + C2177 * C390 + C50616 * C398) *
                 C50670) *
                C2173 +
            ((C4006 + C4005) * C121 + (C4008 + C4007) * C50670) * C2174 +
            ((C4010 + C4009) * C121 + (C4012 + C4011) * C50670) * C2175) *
               C50771 * C50930 -
           ((C3048 * C50670 + C3047 * C121) * C2175 +
            ((C3038 + C3037) * C50670 + (C3036 + C3035) * C121) * C2174 +
            ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                 C50670 +
             (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                 C121) *
                C2173) *
               C50771 * C50945 -
           (((C2177 * C738 + C50616 * C746 + C2176 * C739 + C2171 * C747) *
                 C50670 +
             (C2177 * C722 + C50616 * C734 + C2176 * C723 + C2171 * C735) *
                 C121) *
                C2175 +
            ((C2177 * C733 + C50616 * C745 + C2176 * C732 + C2171 * C744) *
                 C50670 +
             (C2177 * C721 + C50616 * C729 + C2176 * C720 + C2171 * C728) *
                 C121) *
                C2174 +
            ((C2177 * C391 + C50616 * C399 + C2176 * C390 + C2171 * C398) *
                 C50670 +
             (C2177 * C381 + C50616 * C387 + C2176 * C380 + C2171 * C386) *
                 C121) *
                C2173) *
               C50771 * C1173) *
              C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C253 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50899 -
            (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
             C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
                C254 -
            (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
             C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
                C50686) *
               C50759 * C50771 * C1277 +
           ((C117 * C257 + C105 * C263 + C118 * C256 + C106 * C262 +
             C119 * C255 + C107 * C261 + C120 * C259 + C108 * C269) *
                C254 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C50899 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C253) +
            (C117 * C267 + C105 * C275 + C118 * C266 + C106 * C274 +
             C119 * C265 + C107 * C273 + C120 * C270 + C108 * C277) *
                C50686) *
               C50759 * C50771 * C50641) *
              C1514 +
          (((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C254 -
            ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
              C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
                 C50899 +
             (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
              C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
                 C253) +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C50686) *
               C50759 * C50771 * C1277 +
           ((C117 * C379 + C105 * C385 + C118 * C380 + C106 * C386 +
             C119 * C381 + C107 * C387 + C120 * C382 + C108 * C388) *
                C253 +
            (C117 * C389 + C105 * C397 + C118 * C390 + C106 * C398 +
             C119 * C391 + C107 * C399 + C120 * C392 + C108 * C400) *
                C50899 -
            (C120 * C1412 + C108 * C1413 + C119 * C721 + C107 * C729 +
             C118 * C720 + C106 * C728 + C117 * C719 + C105 * C727) *
                C254 -
            (C120 * C1414 + C108 * C1415 + C119 * C733 + C107 * C745 +
             C118 * C732 + C106 * C744 + C117 * C731 + C105 * C743) *
                C50686) *
               C50759 * C50771 * C50641) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C253 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C50899 -
             (C2373 + C2374) * C254 - (C2375 + C2376) * C50686) *
                C2173 +
            ((C2374 + C2373) * C253 + (C2376 + C2375) * C50899 -
             (C2377 + C2378) * C254 - (C2379 + C2380) * C50686) *
                C2174 +
            (C2701 * C253 + C2702 * C50899 - C2835 * C254 - C2836 * C50686) *
                C2175) *
               C50771 * C1277 +
           (((C2381 + C2382) * C254 -
             ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                  C50899 +
              (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                  C253) +
             (C2383 + C2384) * C50686) *
                C2173 +
            ((C2385 + C2386) * C254 -
             ((C2384 + C2383) * C50899 + (C2382 + C2381) * C253) +
             (C2387 + C2388) * C50686) *
                C2174 +
            ((C2726 + C2725) * C254 - (C2712 * C50899 + C2711 * C253) +
             (C2728 + C2727) * C50686) *
                C2175) *
               C50771 * C50641) *
              C1514 +
          ((((C3035 + C3036) * C254 -
             ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                  C50899 +
              (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                  C253) +
             (C3037 + C3038) * C50686) *
                C2173 +
            ((C3040 + C3039) * C254 -
             ((C3038 + C3037) * C50899 + (C3036 + C3035) * C253) +
             (C3042 + C3041) * C50686) *
                C2174 +
            ((C3044 + C3043) * C254 - (C3048 * C50899 + C3047 * C253) +
             (C3046 + C3045) * C50686) *
                C2175) *
               C50771 * C1277 +
           (((C2176 * C379 + C2171 * C385 + C2177 * C380 + C50616 * C386) *
                 C253 +
             (C2176 * C389 + C2171 * C397 + C2177 * C390 + C50616 * C398) *
                 C50899 -
             (C4005 + C4006) * C254 - (C4007 + C4008) * C50686) *
                C2173 +
            ((C4006 + C4005) * C253 + (C4008 + C4007) * C50899 -
             (C4009 + C4010) * C254 - (C4011 + C4012) * C50686) *
                C2174 +
            ((C4010 + C4009) * C253 + (C4012 + C4011) * C50899 -
             (C2177 * C3984 + C50616 * C3985 + C2176 * C2994 + C2171 * C2998) *
                 C254 -
             (C2177 * C3986 + C50616 * C3987 + C2176 * C3000 + C2171 * C3006) *
                 C50686) *
                C2175) *
               C50771 * C50641) *
              C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50670) *
               C50759 * C50771 * C1277 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50670 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50759 * C50771 * C50641) *
              C50947 +
          (((C117 * C379 + C105 * C385 + C118 * C380 + C106 * C386 +
             C119 * C381 + C107 * C387 + C120 * C382 + C108 * C388) *
                C121 +
            (C117 * C389 + C105 * C397 + C118 * C390 + C106 * C398 +
             C119 * C391 + C107 * C399 + C120 * C392 + C108 * C400) *
                C50670) *
               C50759 * C50771 * C50641 -
           ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
             C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
                C50670 +
            (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
             C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
                C121) *
               C50759 * C50771 * C1277) *
              C50936 +
          (((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
             C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
                C121 +
            (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
             C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
                C50670) *
               C50759 * C50771 * C1277 -
           ((C120 * C864 + C108 * C870 + C119 * C863 + C107 * C869 +
             C118 * C862 + C106 * C868 + C117 * C861 + C105 * C867) *
                C50670 +
            (C120 * C855 + C108 * C865 + C119 * C854 + C107 * C859 +
             C118 * C853 + C106 * C858 + C117 * C852 + C105 * C857) *
                C121) *
               C50759 * C50771 * C50641) *
              C1746)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C50670) *
                C2173 +
            ((C2374 + C2373) * C121 + (C2376 + C2375) * C50670) * C2174 +
            (C2701 * C121 + C2702 * C50670) * C2175) *
               C50771 * C1277 -
           ((C2712 * C50670 + C2711 * C121) * C2175 +
            ((C2384 + C2383) * C50670 + (C2382 + C2381) * C121) * C2174 +
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C50670 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50771 * C50641) *
              C50947 +
          ((((C2176 * C379 + C2171 * C385 + C2177 * C380 + C50616 * C386) *
                 C121 +
             (C2176 * C389 + C2171 * C397 + C2177 * C390 + C50616 * C398) *
                 C50670) *
                C2173 +
            ((C4006 + C4005) * C121 + (C4008 + C4007) * C50670) * C2174 +
            ((C4010 + C4009) * C121 + (C4012 + C4011) * C50670) * C2175) *
               C50771 * C50641 -
           ((C3048 * C50670 + C3047 * C121) * C2175 +
            ((C3038 + C3037) * C50670 + (C3036 + C3035) * C121) * C2174 +
            ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                 C50670 +
             (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                 C121) *
                C2173) *
               C50771 * C1277) *
              C50936 +
          ((((C2176 * C851 + C2171 * C856 + C2177 * C852 + C50616 * C857) *
                 C121 +
             (C2176 * C860 + C2171 * C866 + C2177 * C861 + C50616 * C867) *
                 C50670) *
                C2173 +
            ((C3378 + C3377) * C121 + (C3380 + C3379) * C50670) * C2174 +
            ((C3382 + C3381) * C121 + (C3384 + C3383) * C50670) * C2175) *
               C50771 * C1277 -
           (((C2177 * C3201 + C50616 * C3205 + C2176 * C3200 + C2171 * C3204) *
                 C50670 +
             (C2177 * C3196 + C50616 * C3202 + C2176 * C3195 + C2171 * C3198) *
                 C121) *
                C2175 +
            ((C2177 * C978 + C50616 * C982 + C2176 * C979 + C2171 * C983) *
                 C50670 +
             (C2177 * C970 + C50616 * C974 + C2176 * C971 + C2171 * C975) *
                 C121) *
                C2174 +
            ((C2177 * C862 + C50616 * C868 + C2176 * C861 + C2171 * C867) *
                 C50670 +
             (C2177 * C853 + C50616 * C858 + C2176 * C852 + C2171 * C857) *
                 C121) *
                C2173) *
               C50771 * C50641) *
              C1746)) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50670) *
              C50759 * C50771 * C112 -
          ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
            C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
               C50670 +
           (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
            C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
               C121) *
              C50759 * C50771 * C113 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C121 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C50670) *
              C50759 * C50771 * C114 -
          ((C120 * C141 + C108 * C149 + C119 * C140 + C107 * C148 +
            C118 * C137 + C106 * C147 + C117 * C136 + C105 * C146) *
               C50670 +
           (C120 * C128 + C108 * C142 + C119 * C127 + C107 * C139 +
            C118 * C126 + C106 * C138 + C117 * C125 + C105 * C132) *
               C121) *
              C50759 * C50771 * C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C506 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C501 -
           (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
            C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
               C507 -
           (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
            C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
               C502 +
           (C117 * C509 + C105 * C514 + C118 * C510 + C106 * C515 +
            C119 * C511 + C107 * C516 + C120 * C512 + C108 * C517) *
               C508 +
           (C117 * C518 + C105 * C524 + C118 * C519 + C106 * C525 +
            C119 * C520 + C107 * C526 + C120 * C521 + C108 * C527) *
               C503) *
              C50759 * C50771 * C50892 +
          ((C117 * C257 + C105 * C263 + C118 * C256 + C106 * C262 +
            C119 * C255 + C107 * C261 + C120 * C259 + C108 * C269) *
               C507 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C501 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C506) +
           (C117 * C267 + C105 * C275 + C118 * C266 + C106 * C274 +
            C119 * C265 + C107 * C273 + C120 * C270 + C108 * C277) *
               C502 -
           (C120 * C513 + C108 * C522 + C119 * C512 + C107 * C517 +
            C118 * C511 + C106 * C516 + C117 * C510 + C105 * C515) *
               C508 -
           (C120 * C523 + C108 * C528 + C119 * C521 + C107 * C527 +
            C118 * C520 + C106 * C526 + C117 * C519 + C105 * C525) *
               C503) *
              C50759 * C50771 * C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C50670) *
               C2173 +
           ((C2176 * C258 + C2171 * C264 + C2177 * C257 + C50616 * C263) *
                C121 +
            (C2176 * C268 + C2171 * C276 + C2177 * C267 + C50616 * C275) *
                C50670) *
               C2174 +
           ((C2176 * C509 + C2171 * C514 + C2177 * C510 + C50616 * C515) *
                C121 +
            (C2176 * C518 + C2171 * C524 + C2177 * C519 + C50616 * C525) *
                C50670) *
               C2175) *
              C50771 * C112 -
          (((C2177 * C520 + C50616 * C526 + C2176 * C519 + C2171 * C525) *
                C50670 +
            (C2177 * C511 + C50616 * C516 + C2176 * C510 + C2171 * C515) *
                C121) *
               C2175 +
           ((C2177 * C266 + C50616 * C274 + C2176 * C267 + C2171 * C275) *
                C50670 +
            (C2177 * C256 + C50616 * C262 + C2176 * C257 + C2171 * C263) *
                C121) *
               C2174 +
           ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                C50670 +
            (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                C121) *
               C2173) *
              C50771 * C113 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                C121 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                C50670) *
               C2173 +
           ((C2176 * C256 + C2171 * C262 + C2177 * C255 + C50616 * C261) *
                C121 +
            (C2176 * C266 + C2171 * C274 + C2177 * C265 + C50616 * C273) *
                C50670) *
               C2174 +
           ((C2176 * C511 + C2171 * C516 + C2177 * C512 + C50616 * C517) *
                C121 +
            (C2176 * C520 + C2171 * C526 + C2177 * C521 + C50616 * C527) *
                C50670) *
               C2175) *
              C50771 * C114 -
          (((C2177 * C523 + C50616 * C528 + C2176 * C521 + C2171 * C527) *
                C50670 +
            (C2177 * C513 + C50616 * C522 + C2176 * C512 + C2171 * C517) *
                C121) *
               C2175 +
           ((C2177 * C270 + C50616 * C277 + C2176 * C265 + C2171 * C273) *
                C50670 +
            (C2177 * C259 + C50616 * C269 + C2176 * C255 + C2171 * C261) *
                C121) *
               C2174 +
           ((C2177 * C137 + C50616 * C147 + C2176 * C136 + C2171 * C146) *
                C50670 +
            (C2177 * C126 + C50616 * C138 + C2176 * C125 + C2171 * C132) *
                C121) *
               C2173) *
              C50771 * C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C506 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C501 -
            (C2373 + C2374) * C507 - (C2375 + C2376) * C502 + C2701 * C508 +
            C2702 * C503) *
               C2173 +
           ((C2374 + C2373) * C506 + (C2376 + C2375) * C501 -
            (C2377 + C2378) * C507 - (C2379 + C2380) * C502 +
            (C2721 + C2722) * C508 + (C2723 + C2724) * C503) *
               C2174 +
           (C2701 * C506 + C2702 * C501 - (C2722 + C2721) * C507 -
            (C2724 + C2723) * C502 +
            (C2176 * C2688 + C2171 * C2691 + C2177 * C2689 + C50616 * C2692) *
                C508 +
            (C2176 * C2693 + C2171 * C2697 + C2177 * C2694 + C50616 * C2698) *
                C503) *
               C2175) *
              C50771 * C50892 +
          (((C2381 + C2382) * C507 -
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C501 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C506) +
            (C2383 + C2384) * C502 - C2711 * C508 - C2712 * C503) *
               C2173 +
           ((C2385 + C2386) * C507 -
            ((C2384 + C2383) * C501 + (C2382 + C2381) * C506) +
            (C2387 + C2388) * C502 - (C2725 + C2726) * C508 -
            (C2727 + C2728) * C503) *
               C2174 +
           ((C2726 + C2725) * C507 - (C2712 * C501 + C2711 * C506) +
            (C2728 + C2727) * C502 -
            (C2177 * C2690 + C50616 * C2695 + C2176 * C2689 + C2171 * C2692) *
                C508 -
            (C2177 * C2696 + C50616 * C2699 + C2176 * C2694 + C2171 * C2698) *
                C503) *
               C2175) *
              C50771 * C50641) *
         C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C253 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50899 -
           (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
            C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
               C254 -
           (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
            C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
               C50686) *
              C50759 * C50771 * C250 +
          ((C117 * C257 + C105 * C263 + C118 * C256 + C106 * C262 +
            C119 * C255 + C107 * C261 + C120 * C259 + C108 * C269) *
               C254 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50899 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C253) +
           (C117 * C267 + C105 * C275 + C118 * C266 + C106 * C274 +
            C119 * C265 + C107 * C273 + C120 * C270 + C108 * C277) *
               C50686) *
              C50759 * C50771 * C251 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C253 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C50899 -
           (C120 * C260 + C108 * C271 + C119 * C259 + C107 * C269 +
            C118 * C255 + C106 * C261 + C117 * C256 + C105 * C262) *
               C254 -
           (C120 * C272 + C108 * C278 + C119 * C270 + C107 * C277 +
            C118 * C265 + C106 * C273 + C117 * C266 + C105 * C274) *
               C50686) *
              C50759 * C50771 * C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 + C119 * C124 +
           C107 * C131 + C120 * C125 + C108 * C132) *
              C600 +
          (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 + C119 * C135 +
           C107 * C145 + C120 * C136 + C108 * C146) *
              C595 -
          (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 + C118 * C257 +
           C106 * C263 + C117 * C258 + C105 * C264) *
              C601 -
          (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 + C118 * C267 +
           C106 * C275 + C117 * C268 + C105 * C276) *
              C596 +
          (C117 * C509 + C105 * C514 + C118 * C510 + C106 * C515 + C119 * C511 +
           C107 * C516 + C120 * C512 + C108 * C517) *
              C602 +
          (C117 * C518 + C105 * C524 + C118 * C519 + C106 * C525 + C119 * C520 +
           C107 * C526 + C120 * C521 + C108 * C527) *
              C597 -
          (C120 * C604 + C108 * C608 + C119 * C605 + C107 * C609 + C118 * C606 +
           C106 * C610 + C117 * C607 + C105 * C611) *
              C603 -
          (C120 * C612 + C108 * C616 + C119 * C613 + C107 * C617 + C118 * C614 +
           C106 * C618 + C117 * C615 + C105 * C619) *
              C598) *
         C50759 * C50771 * C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C253 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C50899 -
            (C2373 + C2374) * C254 - (C2375 + C2376) * C50686) *
               C2173 +
           ((C2374 + C2373) * C253 + (C2376 + C2375) * C50899 -
            (C2377 + C2378) * C254 - (C2379 + C2380) * C50686) *
               C2174 +
           ((C2378 + C2377) * C253 + (C2380 + C2379) * C50899 -
            (C2177 * C606 + C50616 * C610 + C2176 * C607 + C2171 * C611) *
                C254 -
            (C2177 * C614 + C50616 * C618 + C2176 * C615 + C2171 * C619) *
                C50686) *
               C2175) *
              C50771 * C250 +
          (((C2381 + C2382) * C254 -
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C50899 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C253) +
            (C2383 + C2384) * C50686) *
               C2173 +
           ((C2385 + C2386) * C254 -
            ((C2384 + C2383) * C50899 + (C2382 + C2381) * C253) +
            (C2387 + C2388) * C50686) *
               C2174 +
           ((C2176 * C606 + C2171 * C610 + C2177 * C605 + C50616 * C609) *
                C254 -
            ((C2388 + C2387) * C50899 + (C2386 + C2385) * C253) +
            (C2176 * C614 + C2171 * C618 + C2177 * C613 + C50616 * C617) *
                C50686) *
               C2175) *
              C50771 * C251 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                C253 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                C50899 -
            (C2389 + C2390) * C254 - (C2391 + C2392) * C50686) *
               C2173 +
           ((C2390 + C2389) * C253 + (C2392 + C2391) * C50899 -
            (C2393 + C2394) * C254 - (C2395 + C2396) * C50686) *
               C2174 +
           ((C2394 + C2393) * C253 + (C2396 + C2395) * C50899 -
            (C2177 * C604 + C50616 * C608 + C2176 * C605 + C2171 * C609) *
                C254 -
            (C2177 * C612 + C50616 * C616 + C2176 * C613 + C2171 * C617) *
                C50686) *
               C2175) *
              C50771 * C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) * C600 +
           (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) * C595 -
           (C2373 + C2374) * C601 - (C2375 + C2376) * C596 + C2701 * C602 +
           C2702 * C597 - C2835 * C603 - C2836 * C598) *
              C2173 +
          ((C2374 + C2373) * C600 + (C2376 + C2375) * C595 -
           (C2377 + C2378) * C601 - (C2379 + C2380) * C596 +
           (C2721 + C2722) * C602 + (C2723 + C2724) * C597 -
           (C2845 + C2846) * C603 - (C2847 + C2848) * C598) *
              C2174 +
          (C2701 * C600 + C2702 * C595 - C2835 * C601 - C2836 * C596 +
           (C2846 + C2845) * C602 + (C2848 + C2847) * C597 -
           (C2177 * C2826 + C50616 * C2828 + C2176 * C2827 + C2171 * C2829) *
               C603 -
           (C2177 * C2830 + C50616 * C2832 + C2176 * C2831 + C2171 * C2833) *
               C598) *
              C2175) *
         C50771 * C50636 * C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50670) *
               C50759 * C50771 * C250 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50670 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50759 * C50771 * C251 +
           ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50670) *
               C50759 * C50771 * C252) *
              C50901 +
          (((C117 * C379 + C105 * C385 + C118 * C380 + C106 * C386 +
             C119 * C381 + C107 * C387 + C120 * C382 + C108 * C388) *
                C121 +
            (C117 * C389 + C105 * C397 + C118 * C390 + C106 * C398 +
             C119 * C391 + C107 * C399 + C120 * C392 + C108 * C400) *
                C50670) *
               C50759 * C50771 * C251 -
           ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
             C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
                C50670 +
            (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
             C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
                C121) *
               C50759 * C50771 * C250 -
           ((C120 * C395 + C108 * C402 + C119 * C392 + C107 * C400 +
             C118 * C391 + C106 * C399 + C117 * C390 + C105 * C398) *
                C50670 +
            (C120 * C384 + C108 * C396 + C119 * C382 + C107 * C388 +
             C118 * C381 + C106 * C387 + C117 * C380 + C105 * C386) *
                C121) *
               C50759 * C50771 * C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C506 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C501 -
           (C120 * C255 + C108 * C261 + C119 * C256 + C107 * C262 +
            C118 * C257 + C106 * C263 + C117 * C258 + C105 * C264) *
               C507 -
           (C120 * C265 + C108 * C273 + C119 * C266 + C107 * C274 +
            C118 * C267 + C106 * C275 + C117 * C268 + C105 * C276) *
               C502 +
           (C117 * C509 + C105 * C514 + C118 * C510 + C106 * C515 +
            C119 * C511 + C107 * C516 + C120 * C512 + C108 * C517) *
               C508 +
           (C117 * C518 + C105 * C524 + C118 * C519 + C106 * C525 +
            C119 * C520 + C107 * C526 + C120 * C521 + C108 * C527) *
               C503) *
              C50759 * C50771 * C50636 * C50901 +
          ((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
            C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
               C507 -
           ((C120 * C391 + C108 * C399 + C119 * C390 + C107 * C398 +
             C118 * C389 + C106 * C397 + C117 * C393 + C105 * C401) *
                C501 +
            (C120 * C381 + C108 * C387 + C119 * C380 + C107 * C386 +
             C118 * C379 + C106 * C385 + C117 * C383 + C105 * C394) *
                C506) +
           (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
            C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
               C502 -
           (C120 * C722 + C108 * C734 + C119 * C723 + C107 * C735 +
            C118 * C724 + C106 * C736 + C117 * C725 + C105 * C737) *
               C508 -
           (C120 * C738 + C108 * C746 + C119 * C739 + C107 * C747 +
            C118 * C740 + C106 * C748 + C117 * C741 + C105 * C749) *
               C503) *
              C50759 * C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                 C50670) *
                C2173 +
            ((C2374 + C2373) * C121 + (C2376 + C2375) * C50670) * C2174 +
            ((C2378 + C2377) * C121 + (C2380 + C2379) * C50670) * C2175) *
               C50771 * C250 -
           (((C2388 + C2387) * C50670 + (C2386 + C2385) * C121) * C2175 +
            ((C2384 + C2383) * C50670 + (C2382 + C2381) * C121) * C2174 +
            ((C2177 * C135 + C50616 * C145 + C2176 * C134 + C2171 * C144) *
                 C50670 +
             (C2177 * C124 + C50616 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50771 * C251 +
           (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50616 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50616 * C146) *
                 C50670) *
                C2173 +
            ((C2390 + C2389) * C121 + (C2392 + C2391) * C50670) * C2174 +
            ((C2394 + C2393) * C121 + (C2396 + C2395) * C50670) * C2175) *
               C50771 * C252) *
              C50901 +
          ((((C2176 * C379 + C2171 * C385 + C2177 * C380 + C50616 * C386) *
                 C121 +
             (C2176 * C389 + C2171 * C397 + C2177 * C390 + C50616 * C398) *
                 C50670) *
                C2173 +
            ((C2176 * C719 + C2171 * C727 + C2177 * C720 + C50616 * C728) *
                 C121 +
             (C2176 * C731 + C2171 * C743 + C2177 * C732 + C50616 * C744) *
                 C50670) *
                C2174 +
            ((C2176 * C724 + C2171 * C736 + C2177 * C723 + C50616 * C735) *
                 C121 +
             (C2176 * C740 + C2171 * C748 + C2177 * C739 + C50616 * C747) *
                 C50670) *
                C2175) *
               C50771 * C251 -
           (((C2177 * C740 + C50616 * C748 + C2176 * C741 + C2171 * C749) *
                 C50670 +
             (C2177 * C724 + C50616 * C736 + C2176 * C725 + C2171 * C737) *
                 C121) *
                C2175 +
            ((C2177 * C731 + C50616 * C743 + C2176 * C730 + C2171 * C742) *
                 C50670 +
             (C2177 * C719 + C50616 * C727 + C2176 * C718 + C2171 * C726) *
                 C121) *
                C2174 +
            ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                 C50670 +
             (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                 C121) *
                C2173) *
               C50771 * C250 -
           (((C2177 * C738 + C50616 * C746 + C2176 * C739 + C2171 * C747) *
                 C50670 +
             (C2177 * C722 + C50616 * C734 + C2176 * C723 + C2171 * C735) *
                 C121) *
                C2175 +
            ((C2177 * C733 + C50616 * C745 + C2176 * C732 + C2171 * C744) *
                 C50670 +
             (C2177 * C721 + C50616 * C729 + C2176 * C720 + C2171 * C728) *
                 C121) *
                C2174 +
            ((C2177 * C391 + C50616 * C399 + C2176 * C390 + C2171 * C398) *
                 C50670 +
             (C2177 * C381 + C50616 * C387 + C2176 * C380 + C2171 * C386) *
                 C121) *
                C2173) *
               C50771 * C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50616 * C130) *
                C506 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50616 * C144) *
                C501 -
            (C2373 + C2374) * C507 - (C2375 + C2376) * C502 + C2701 * C508 +
            C2702 * C503) *
               C2173 +
           ((C2374 + C2373) * C506 + (C2376 + C2375) * C501 -
            (C2377 + C2378) * C507 - (C2379 + C2380) * C502 +
            (C2721 + C2722) * C508 + (C2723 + C2724) * C503) *
               C2174 +
           (C2701 * C506 + C2702 * C501 - C2835 * C507 - C2836 * C502 +
            (C2846 + C2845) * C508 + (C2848 + C2847) * C503) *
               C2175) *
              C50771 * C50636 * C50901 +
          (((C3035 + C3036) * C507 -
            ((C2177 * C389 + C50616 * C397 + C2176 * C393 + C2171 * C401) *
                 C501 +
             (C2177 * C379 + C50616 * C385 + C2176 * C383 + C2171 * C394) *
                 C506) +
            (C3037 + C3038) * C502 - C3047 * C508 - C3048 * C503) *
               C2173 +
           ((C3040 + C3039) * C507 -
            ((C3038 + C3037) * C501 + (C3036 + C3035) * C506) +
            (C3042 + C3041) * C502 - (C3043 + C3044) * C508 -
            (C3045 + C3046) * C503) *
               C2174 +
           ((C3044 + C3043) * C507 - (C3048 * C501 + C3047 * C506) +
            (C3046 + C3045) * C502 -
            (C2177 * C2996 + C50616 * C3002 + C2176 * C2997 + C2171 * C3003) *
                C508 -
            (C2177 * C3004 + C50616 * C3008 + C2176 * C3005 + C2171 * C3009) *
                C503) *
               C2175) *
              C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C1174 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C1169 -
            (C24854 + C24855) * C1175 - (C24856 + C24857) * C50686) *
               C50948 +
           ((C24855 + C24854) * C1174 + (C24857 + C24856) * C1169 -
            (C24858 + C24859) * C1175 - (C24860 + C24861) * C50686) *
               C50949 +
           (C25170 * C1174 + C25171 * C1169 - C25296 * C1175 -
            C25297 * C50686) *
               C24656) *
              C50771 * C50945 +
          (((C24862 + C24863) * C1175 -
            ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                 C1169 +
             (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                 C1174) +
            (C24864 + C24865) * C50686) *
               C50948 +
           ((C24866 + C24867) * C1175 -
            ((C24865 + C24864) * C1169 + (C24863 + C24862) * C1174) +
            (C24868 + C24869) * C50686) *
               C50949 +
           ((C25195 + C25194) * C1175 - (C25181 * C1169 + C25180 * C1174) +
            (C25197 + C25196) * C50686) *
               C24656) *
              C50771 * C50930 +
          (((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                C1174 +
            (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                C1169 -
            (C24870 + C24871) * C1175 - (C24872 + C24873) * C50686) *
               C50948 +
           ((C24871 + C24870) * C1174 + (C24873 + C24872) * C1169 -
            (C24874 + C24875) * C1175 - (C24876 + C24877) * C50686) *
               C50949 +
           ((C24875 + C24874) * C1174 + (C24877 + C24876) * C1169 -
            (C49761 * C604 + C50616 * C608 + C49768 * C605 + C50887 * C609) *
                C1175 -
            (C49761 * C612 + C50616 * C616 + C49768 * C613 + C50887 * C617) *
                C50686) *
               C24656) *
              C50771 * C1173) *
         C50700) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C1279 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C50946 -
            (C24854 + C24855) * C1280 - (C24856 + C24857) * C50933 +
            C25170 * C1281 + C25171 * C1276) *
               C50948 +
           ((C24855 + C24854) * C1279 + (C24857 + C24856) * C50946 -
            (C24858 + C24859) * C1280 - (C24860 + C24861) * C50933 +
            (C25190 + C25191) * C1281 + (C25192 + C25193) * C1276) *
               C50949 +
           (C25170 * C1279 + C25171 * C50946 - C25296 * C1280 -
            C25297 * C50933 + (C25307 + C25306) * C1281 +
            (C25309 + C25308) * C1276) *
               C24656) *
              C50771 * C1277 +
          (((C24862 + C24863) * C1280 -
            ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                 C50946 +
             (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                 C1279) +
            (C24864 + C24865) * C50933 - C25180 * C1281 - C25181 * C1276) *
               C50948 +
           ((C24866 + C24867) * C1280 -
            ((C24865 + C24864) * C50946 + (C24863 + C24862) * C1279) +
            (C24868 + C24869) * C50933 - (C25194 + C25195) * C1281 -
            (C25196 + C25197) * C1276) *
               C50949 +
           ((C25195 + C25194) * C1280 - (C25181 * C50946 + C25180 * C1279) +
            (C25197 + C25196) * C50933 -
            (C49761 * C2690 + C50616 * C2695 + C49768 * C2689 +
             C50887 * C2692) *
                C1281 -
            (C49761 * C2696 + C50616 * C2699 + C49768 * C2694 +
             C50887 * C2698) *
                C1276) *
               C24656) *
              C50771 * C50641) *
         C50700) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C1174 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C1169 -
             (C24854 + C24855) * C1175 - (C24856 + C24857) * C50686) *
                C50948 +
            ((C24855 + C24854) * C1174 + (C24857 + C24856) * C1169 -
             (C24858 + C24859) * C1175 - (C24860 + C24861) * C50686) *
                C50949 +
            (C25170 * C1174 + C25171 * C1169 - C25296 * C1175 -
             C25297 * C50686) *
                C24656) *
               C50771 * C1277 +
           (((C24862 + C24863) * C1175 -
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C1169 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C1174) +
             (C24864 + C24865) * C50686) *
                C50948 +
            ((C24866 + C24867) * C1175 -
             ((C24865 + C24864) * C1169 + (C24863 + C24862) * C1174) +
             (C24868 + C24869) * C50686) *
                C50949 +
            ((C25195 + C25194) * C1175 - (C25181 * C1169 + C25180 * C1174) +
             (C25197 + C25196) * C50686) *
                C24656) *
               C50771 * C50641) *
              C50901 +
          ((((C25480 + C25481) * C1175 -
             ((C49761 * C389 + C50616 * C397 + C49768 * C393 + C50887 * C401) *
                  C1169 +
              (C49761 * C379 + C50616 * C385 + C49768 * C383 + C50887 * C394) *
                  C1174) +
             (C25482 + C25483) * C50686) *
                C50948 +
            ((C25485 + C25484) * C1175 -
             ((C25483 + C25482) * C1169 + (C25481 + C25480) * C1174) +
             (C25487 + C25486) * C50686) *
                C50949 +
            ((C25489 + C25488) * C1175 - (C25493 * C1169 + C25492 * C1174) +
             (C25491 + C25490) * C50686) *
                C24656) *
               C50771 * C1277 +
           (((C49768 * C379 + C50887 * C385 + C49761 * C380 + C50616 * C386) *
                 C1174 +
             (C49768 * C389 + C50887 * C397 + C49761 * C390 + C50616 * C398) *
                 C1169 -
             (C26410 + C26411) * C1175 - (C26412 + C26413) * C50686) *
                C50948 +
            ((C26411 + C26410) * C1174 + (C26413 + C26412) * C1169 -
             (C26414 + C26415) * C1175 - (C26416 + C26417) * C50686) *
                C50949 +
            ((C26415 + C26414) * C1174 + (C26417 + C26416) * C1169 -
             (C49761 * C3984 + C50616 * C3985 + C49768 * C2994 +
              C50887 * C2998) *
                 C1175 -
             (C49761 * C3986 + C50616 * C3987 + C49768 * C3000 +
              C50887 * C3006) *
                 C50686) *
                C24656) *
               C50771 * C50641) *
              C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C1174 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C1169 -
             (C24854 + C24855) * C1175 - (C24856 + C24857) * C50686) *
                C50948 +
            ((C24855 + C24854) * C1174 + (C24857 + C24856) * C1169 -
             (C24858 + C24859) * C1175 - (C24860 + C24861) * C50686) *
                C50949 +
            (C25170 * C1174 + C25171 * C1169 - C25296 * C1175 -
             C25297 * C50686) *
                C24656) *
               C50771 * C50892 +
           (((C24862 + C24863) * C1175 -
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C1169 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C1174) +
             (C24864 + C24865) * C50686) *
                C50948 +
            ((C24866 + C24867) * C1175 -
             ((C24865 + C24864) * C1169 + (C24863 + C24862) * C1174) +
             (C24868 + C24869) * C50686) *
                C50949 +
            ((C25195 + C25194) * C1175 - (C25181 * C1169 + C25180 * C1174) +
             (C25197 + C25196) * C50686) *
                C24656) *
               C50771 * C50641) *
              C1514 +
          ((((C25480 + C25481) * C1175 -
             ((C49761 * C389 + C50616 * C397 + C49768 * C393 + C50887 * C401) *
                  C1169 +
              (C49761 * C379 + C50616 * C385 + C49768 * C383 + C50887 * C394) *
                  C1174) +
             (C25482 + C25483) * C50686) *
                C50948 +
            ((C25485 + C25484) * C1175 -
             ((C25483 + C25482) * C1169 + (C25481 + C25480) * C1174) +
             (C25487 + C25486) * C50686) *
                C50949 +
            ((C25489 + C25488) * C1175 - (C25493 * C1169 + C25492 * C1174) +
             (C25491 + C25490) * C50686) *
                C24656) *
               C50771 * C50892 +
           (((C49768 * C379 + C50887 * C385 + C49761 * C380 + C50616 * C386) *
                 C1174 +
             (C49768 * C389 + C50887 * C397 + C49761 * C390 + C50616 * C398) *
                 C1169 -
             (C26410 + C26411) * C1175 - (C26412 + C26413) * C50686) *
                C50948 +
            ((C26411 + C26410) * C1174 + (C26413 + C26412) * C1169 -
             (C26414 + C26415) * C1175 - (C26416 + C26417) * C50686) *
                C50949 +
            ((C26415 + C26414) * C1174 + (C26417 + C26416) * C1169 -
             (C49761 * C3984 + C50616 * C3985 + C49768 * C2994 +
              C50887 * C2998) *
                 C1175 -
             (C49761 * C3986 + C50616 * C3987 + C49768 * C3000 +
              C50887 * C3006) *
                 C50686) *
                C24656) *
               C50771 * C50641) *
              C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C1279 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C50946 -
            (C24854 + C24855) * C1280 - (C24856 + C24857) * C50933 +
            C25170 * C1281 + C25171 * C1276) *
               C50948 +
           ((C24855 + C24854) * C1279 + (C24857 + C24856) * C50946 -
            (C24858 + C24859) * C1280 - (C24860 + C24861) * C50933 +
            (C25190 + C25191) * C1281 + (C25192 + C25193) * C1276) *
               C50949 +
           (C25170 * C1279 + C25171 * C50946 - C25296 * C1280 -
            C25297 * C50933 + (C25307 + C25306) * C1281 +
            (C25309 + C25308) * C1276) *
               C24656) *
              C50771 * C50636 * C1514 +
          (((C25480 + C25481) * C1280 -
            ((C49761 * C389 + C50616 * C397 + C49768 * C393 + C50887 * C401) *
                 C50946 +
             (C49761 * C379 + C50616 * C385 + C49768 * C383 + C50887 * C394) *
                 C1279) +
            (C25482 + C25483) * C50933 - C25492 * C1281 - C25493 * C1276) *
               C50948 +
           ((C25485 + C25484) * C1280 -
            ((C25483 + C25482) * C50946 + (C25481 + C25480) * C1279) +
            (C25487 + C25486) * C50933 - (C25488 + C25489) * C1281 -
            (C25490 + C25491) * C1276) *
               C50949 +
           ((C25489 + C25488) * C1280 - (C25493 * C50946 + C25492 * C1279) +
            (C25491 + C25490) * C50933 -
            (C49761 * C2996 + C50616 * C3002 + C49768 * C2997 +
             C50887 * C3003) *
                C1281 -
            (C49761 * C3004 + C50616 * C3008 + C49768 * C3005 +
             C50887 * C3009) *
                C1276) *
               C24656) *
              C50771 * C50636 * C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C1174 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C1169 -
            (C24854 + C24855) * C1175 - (C24856 + C24857) * C50686) *
               C50948 +
           ((C24855 + C24854) * C1174 + (C24857 + C24856) * C1169 -
            (C24858 + C24859) * C1175 - (C24860 + C24861) * C50686) *
               C50949 +
           (C25170 * C1174 + C25171 * C1169 - C25296 * C1175 -
            C25297 * C50686) *
               C24656) *
              C50771 * C50636 * C50947 +
          (((C25480 + C25481) * C1175 -
            ((C49761 * C389 + C50616 * C397 + C49768 * C393 + C50887 * C401) *
                 C1169 +
             (C49761 * C379 + C50616 * C385 + C49768 * C383 + C50887 * C394) *
                 C1174) +
            (C25482 + C25483) * C50686) *
               C50948 +
           ((C25485 + C25484) * C1175 -
            ((C25483 + C25482) * C1169 + (C25481 + C25480) * C1174) +
            (C25487 + C25486) * C50686) *
               C50949 +
           ((C25489 + C25488) * C1175 - (C25493 * C1169 + C25492 * C1174) +
            (C25491 + C25490) * C50686) *
               C24656) *
              C50771 * C50636 * C50936 +
          (((C49768 * C851 + C50887 * C856 + C49761 * C852 + C50616 * C857) *
                C1174 +
            (C49768 * C860 + C50887 * C866 + C49761 * C861 + C50616 * C867) *
                C1169 -
            (C25802 + C25803) * C1175 - (C25804 + C25805) * C50686) *
               C50948 +
           ((C25803 + C25802) * C1174 + (C25805 + C25804) * C1169 -
            (C25806 + C25807) * C1175 - (C25808 + C25809) * C50686) *
               C50949 +
           ((C25807 + C25806) * C1174 + (C25809 + C25808) * C1169 -
            (C49761 * C3352 + C50616 * C3354 + C49768 * C3353 +
             C50887 * C3355) *
                C1175 -
            (C49761 * C3356 + C50616 * C3358 + C49768 * C3357 +
             C50887 * C3359) *
                C50686) *
               C24656) *
              C50771 * C50636 * C1746)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C506 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C501 -
            (C24854 + C24855) * C507 - (C24856 + C24857) * C502 +
            C25170 * C508 + C25171 * C503) *
               C50948 +
           ((C24855 + C24854) * C506 + (C24857 + C24856) * C501 -
            (C24858 + C24859) * C507 - (C24860 + C24861) * C502 +
            (C25190 + C25191) * C508 + (C25192 + C25193) * C503) *
               C50949 +
           (C25170 * C506 + C25171 * C501 - (C25191 + C25190) * C507 -
            (C25193 + C25192) * C502 +
            (C49768 * C2688 + C50887 * C2691 + C49761 * C2689 +
             C50616 * C2692) *
                C508 +
            (C49768 * C2693 + C50887 * C2697 + C49761 * C2694 +
             C50616 * C2698) *
                C503) *
               C24656) *
              C50771 * C50892 +
          (((C24862 + C24863) * C507 -
            ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                 C501 +
             (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                 C506) +
            (C24864 + C24865) * C502 - C25180 * C508 - C25181 * C503) *
               C50948 +
           ((C24866 + C24867) * C507 -
            ((C24865 + C24864) * C501 + (C24863 + C24862) * C506) +
            (C24868 + C24869) * C502 - (C25194 + C25195) * C508 -
            (C25196 + C25197) * C503) *
               C50949 +
           ((C25195 + C25194) * C507 - (C25181 * C501 + C25180 * C506) +
            (C25197 + C25196) * C502 -
            (C49761 * C2690 + C50616 * C2695 + C49768 * C2689 +
             C50887 * C2692) *
                C508 -
            (C49761 * C2696 + C50616 * C2699 + C49768 * C2694 +
             C50887 * C2698) *
                C503) *
               C24656) *
              C50771 * C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C121 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C50670) *
               C50948 +
           ((C49768 * C258 + C50887 * C264 + C49761 * C257 + C50616 * C263) *
                C121 +
            (C49768 * C268 + C50887 * C276 + C49761 * C267 + C50616 * C275) *
                C50670) *
               C50949 +
           ((C49768 * C509 + C50887 * C514 + C49761 * C510 + C50616 * C515) *
                C121 +
            (C49768 * C518 + C50887 * C524 + C49761 * C519 + C50616 * C525) *
                C50670) *
               C24656) *
              C50771 * C112 -
          (((C49761 * C520 + C50616 * C526 + C49768 * C519 + C50887 * C525) *
                C50670 +
            (C49761 * C511 + C50616 * C516 + C49768 * C510 + C50887 * C515) *
                C121) *
               C24656 +
           ((C49761 * C266 + C50616 * C274 + C49768 * C267 + C50887 * C275) *
                C50670 +
            (C49761 * C256 + C50616 * C262 + C49768 * C257 + C50887 * C263) *
                C121) *
               C50949 +
           ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                C50670 +
            (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                C121) *
               C50948) *
              C50771 * C113 +
          (((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                C121 +
            (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                C50670) *
               C50948 +
           ((C49768 * C256 + C50887 * C262 + C49761 * C255 + C50616 * C261) *
                C121 +
            (C49768 * C266 + C50887 * C274 + C49761 * C265 + C50616 * C273) *
                C50670) *
               C50949 +
           ((C49768 * C511 + C50887 * C516 + C49761 * C512 + C50616 * C517) *
                C121 +
            (C49768 * C520 + C50887 * C526 + C49761 * C521 + C50616 * C527) *
                C50670) *
               C24656) *
              C50771 * C114 -
          (((C49761 * C523 + C50616 * C528 + C49768 * C521 + C50887 * C527) *
                C50670 +
            (C49761 * C513 + C50616 * C522 + C49768 * C512 + C50887 * C517) *
                C121) *
               C24656 +
           ((C49761 * C270 + C50616 * C277 + C49768 * C265 + C50887 * C273) *
                C50670 +
            (C49761 * C259 + C50616 * C269 + C49768 * C255 + C50887 * C261) *
                C121) *
               C50949 +
           ((C49761 * C137 + C50616 * C147 + C49768 * C136 + C50887 * C146) *
                C50670 +
            (C49761 * C126 + C50616 * C138 + C49768 * C125 + C50887 * C132) *
                C121) *
               C50948) *
              C50771 * C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C121 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50670) *
                C50948 +
            ((C24855 + C24854) * C121 + (C24857 + C24856) * C50670) * C50949 +
            (C25170 * C121 + C25171 * C50670) * C24656) *
               C50771 * C50892 -
           ((C25181 * C50670 + C25180 * C121) * C24656 +
            ((C24865 + C24864) * C50670 + (C24863 + C24862) * C121) * C50949 +
            ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                 C50670 +
             (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                 C121) *
                C50948) *
               C50771 * C50641) *
              C848 +
          ((((C49768 * C379 + C50887 * C385 + C49761 * C380 + C50616 * C386) *
                 C121 +
             (C49768 * C389 + C50887 * C397 + C49761 * C390 + C50616 * C398) *
                 C50670) *
                C50948 +
            ((C49768 * C719 + C50887 * C727 + C49761 * C720 + C50616 * C728) *
                 C121 +
             (C49768 * C731 + C50887 * C743 + C49761 * C732 + C50616 * C744) *
                 C50670) *
                C50949 +
            ((C49768 * C724 + C50887 * C736 + C49761 * C723 + C50616 * C735) *
                 C121 +
             (C49768 * C740 + C50887 * C748 + C49761 * C739 + C50616 * C747) *
                 C50670) *
                C24656) *
               C50771 * C50641 -
           ((C25493 * C50670 + C25492 * C121) * C24656 +
            ((C25483 + C25482) * C50670 + (C25481 + C25480) * C121) * C50949 +
            ((C49761 * C389 + C50616 * C397 + C49768 * C393 + C50887 * C401) *
                 C50670 +
             (C49761 * C379 + C50616 * C385 + C49768 * C383 + C50887 * C394) *
                 C121) *
                C50948) *
               C50771 * C50892) *
              C849 +
          ((((C49768 * C851 + C50887 * C856 + C49761 * C852 + C50616 * C857) *
                 C121 +
             (C49768 * C860 + C50887 * C866 + C49761 * C861 + C50616 * C867) *
                 C50670) *
                C50948 +
            ((C49768 * C972 + C50887 * C976 + C49761 * C971 + C50616 * C975) *
                 C121 +
             (C49768 * C980 + C50887 * C984 + C49761 * C979 + C50616 * C983) *
                 C50670) *
                C50949 +
            ((C49768 * C3194 + C50887 * C3197 + C49761 * C3195 +
              C50616 * C3198) *
                 C121 +
             (C49768 * C3199 + C50887 * C3203 + C49761 * C3200 +
              C50616 * C3204) *
                 C50670) *
                C24656) *
               C50771 * C50892 -
           (((C49761 * C3201 + C50616 * C3205 + C49768 * C3200 +
              C50887 * C3204) *
                 C50670 +
             (C49761 * C3196 + C50616 * C3202 + C49768 * C3195 +
              C50887 * C3198) *
                 C121) *
                C24656 +
            ((C49761 * C978 + C50616 * C982 + C49768 * C979 + C50887 * C983) *
                 C50670 +
             (C49761 * C970 + C50616 * C974 + C49768 * C971 + C50887 * C975) *
                 C121) *
                C50949 +
            ((C49761 * C862 + C50616 * C868 + C49768 * C861 + C50887 * C867) *
                 C50670 +
             (C49761 * C853 + C50616 * C858 + C49768 * C852 + C50887 * C857) *
                 C121) *
                C50948) *
               C50771 * C50641) *
              C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
               C600 +
           (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
               C595 -
           (C24854 + C24855) * C601 - (C24856 + C24857) * C596 + C25170 * C602 +
           C25171 * C597 - C25296 * C603 - C25297 * C598) *
              C50948 +
          ((C24855 + C24854) * C600 + (C24857 + C24856) * C595 -
           (C24858 + C24859) * C601 - (C24860 + C24861) * C596 +
           (C25190 + C25191) * C602 + (C25192 + C25193) * C597 -
           (C25306 + C25307) * C603 - (C25308 + C25309) * C598) *
              C50949 +
          (C25170 * C600 + C25171 * C595 - C25296 * C601 - C25297 * C596 +
           (C25307 + C25306) * C602 + (C25309 + C25308) * C597 -
           (C49761 * C2826 + C50616 * C2828 + C49768 * C2827 + C50887 * C2829) *
               C603 -
           (C49761 * C2830 + C50616 * C2832 + C49768 * C2831 + C50887 * C2833) *
               C598) *
              C24656) *
         C50771 * C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C253 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C50899 -
            (C24854 + C24855) * C254 - (C24856 + C24857) * C50686) *
               C50948 +
           ((C24855 + C24854) * C253 + (C24857 + C24856) * C50899 -
            (C24858 + C24859) * C254 - (C24860 + C24861) * C50686) *
               C50949 +
           ((C24859 + C24858) * C253 + (C24861 + C24860) * C50899 -
            (C49761 * C606 + C50616 * C610 + C49768 * C607 + C50887 * C611) *
                C254 -
            (C49761 * C614 + C50616 * C618 + C49768 * C615 + C50887 * C619) *
                C50686) *
               C24656) *
              C50771 * C250 +
          (((C24862 + C24863) * C254 -
            ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                 C50899 +
             (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                 C253) +
            (C24864 + C24865) * C50686) *
               C50948 +
           ((C24866 + C24867) * C254 -
            ((C24865 + C24864) * C50899 + (C24863 + C24862) * C253) +
            (C24868 + C24869) * C50686) *
               C50949 +
           ((C49768 * C606 + C50887 * C610 + C49761 * C605 + C50616 * C609) *
                C254 -
            ((C24869 + C24868) * C50899 + (C24867 + C24866) * C253) +
            (C49768 * C614 + C50887 * C618 + C49761 * C613 + C50616 * C617) *
                C50686) *
               C24656) *
              C50771 * C251 +
          (((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                C253 +
            (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                C50899 -
            (C24870 + C24871) * C254 - (C24872 + C24873) * C50686) *
               C50948 +
           ((C24871 + C24870) * C253 + (C24873 + C24872) * C50899 -
            (C24874 + C24875) * C254 - (C24876 + C24877) * C50686) *
               C50949 +
           ((C24875 + C24874) * C253 + (C24877 + C24876) * C50899 -
            (C49761 * C604 + C50616 * C608 + C49768 * C605 + C50887 * C609) *
                C254 -
            (C49761 * C612 + C50616 * C616 + C49768 * C613 + C50887 * C617) *
                C50686) *
               C24656) *
              C50771 * C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C253 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C50899 -
            (C24854 + C24855) * C254 - (C24856 + C24857) * C50686) *
               C50948 +
           ((C24855 + C24854) * C253 + (C24857 + C24856) * C50899 -
            (C24858 + C24859) * C254 - (C24860 + C24861) * C50686) *
               C50949 +
           (C25170 * C253 + C25171 * C50899 - C25296 * C254 - C25297 * C50686) *
               C24656) *
              C50771 * C50636 * C848 +
          (((C25480 + C25481) * C254 -
            ((C49761 * C389 + C50616 * C397 + C49768 * C393 + C50887 * C401) *
                 C50899 +
             (C49761 * C379 + C50616 * C385 + C49768 * C383 + C50887 * C394) *
                 C253) +
            (C25482 + C25483) * C50686) *
               C50948 +
           ((C25485 + C25484) * C254 -
            ((C25483 + C25482) * C50899 + (C25481 + C25480) * C253) +
            (C25487 + C25486) * C50686) *
               C50949 +
           ((C25489 + C25488) * C254 - (C25493 * C50899 + C25492 * C253) +
            (C25491 + C25490) * C50686) *
               C24656) *
              C50771 * C50636 * C849 +
          (((C49768 * C851 + C50887 * C856 + C49761 * C852 + C50616 * C857) *
                C253 +
            (C49768 * C860 + C50887 * C866 + C49761 * C861 + C50616 * C867) *
                C50899 -
            (C25802 + C25803) * C254 - (C25804 + C25805) * C50686) *
               C50948 +
           ((C25803 + C25802) * C253 + (C25805 + C25804) * C50899 -
            (C25806 + C25807) * C254 - (C25808 + C25809) * C50686) *
               C50949 +
           ((C25807 + C25806) * C253 + (C25809 + C25808) * C50899 -
            (C49761 * C3352 + C50616 * C3354 + C49768 * C3353 +
             C50887 * C3355) *
                C254 -
            (C49761 * C3356 + C50616 * C3358 + C49768 * C3357 +
             C50887 * C3359) *
                C50686) *
               C24656) *
              C50771 * C50636 * C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C506 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C501 -
            (C24854 + C24855) * C507 - (C24856 + C24857) * C502 +
            C25170 * C508 + C25171 * C503) *
               C50948 +
           ((C24855 + C24854) * C506 + (C24857 + C24856) * C501 -
            (C24858 + C24859) * C507 - (C24860 + C24861) * C502 +
            (C25190 + C25191) * C508 + (C25192 + C25193) * C503) *
               C50949 +
           (C25170 * C506 + C25171 * C501 - C25296 * C507 - C25297 * C502 +
            (C25307 + C25306) * C508 + (C25309 + C25308) * C503) *
               C24656) *
              C50771 * C50636 * C50901 +
          (((C25480 + C25481) * C507 -
            ((C49761 * C389 + C50616 * C397 + C49768 * C393 + C50887 * C401) *
                 C501 +
             (C49761 * C379 + C50616 * C385 + C49768 * C383 + C50887 * C394) *
                 C506) +
            (C25482 + C25483) * C502 - C25492 * C508 - C25493 * C503) *
               C50948 +
           ((C25485 + C25484) * C507 -
            ((C25483 + C25482) * C501 + (C25481 + C25480) * C506) +
            (C25487 + C25486) * C502 - (C25488 + C25489) * C508 -
            (C25490 + C25491) * C503) *
               C50949 +
           ((C25489 + C25488) * C507 - (C25493 * C501 + C25492 * C506) +
            (C25491 + C25490) * C502 -
            (C49761 * C2996 + C50616 * C3002 + C49768 * C2997 +
             C50887 * C3003) *
                C508 -
            (C49761 * C3004 + C50616 * C3008 + C49768 * C3005 +
             C50887 * C3009) *
                C503) *
               C24656) *
              C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C121 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50670) *
                C50948 +
            ((C24855 + C24854) * C121 + (C24857 + C24856) * C50670) * C50949 +
            ((C24859 + C24858) * C121 + (C24861 + C24860) * C50670) * C24656) *
               C50771 * C250 -
           (((C24869 + C24868) * C50670 + (C24867 + C24866) * C121) * C24656 +
            ((C24865 + C24864) * C50670 + (C24863 + C24862) * C121) * C50949 +
            ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                 C50670 +
             (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                 C121) *
                C50948) *
               C50771 * C251 +
           (((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                 C121 +
             (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                 C50670) *
                C50948 +
            ((C24871 + C24870) * C121 + (C24873 + C24872) * C50670) * C50949 +
            ((C24875 + C24874) * C121 + (C24877 + C24876) * C50670) * C24656) *
               C50771 * C252) *
              C50901 +
          ((((C49768 * C379 + C50887 * C385 + C49761 * C380 + C50616 * C386) *
                 C121 +
             (C49768 * C389 + C50887 * C397 + C49761 * C390 + C50616 * C398) *
                 C50670) *
                C50948 +
            ((C49768 * C719 + C50887 * C727 + C49761 * C720 + C50616 * C728) *
                 C121 +
             (C49768 * C731 + C50887 * C743 + C49761 * C732 + C50616 * C744) *
                 C50670) *
                C50949 +
            ((C49768 * C724 + C50887 * C736 + C49761 * C723 + C50616 * C735) *
                 C121 +
             (C49768 * C740 + C50887 * C748 + C49761 * C739 + C50616 * C747) *
                 C50670) *
                C24656) *
               C50771 * C251 -
           (((C49761 * C740 + C50616 * C748 + C49768 * C741 + C50887 * C749) *
                 C50670 +
             (C49761 * C724 + C50616 * C736 + C49768 * C725 + C50887 * C737) *
                 C121) *
                C24656 +
            ((C49761 * C731 + C50616 * C743 + C49768 * C730 + C50887 * C742) *
                 C50670 +
             (C49761 * C719 + C50616 * C727 + C49768 * C718 + C50887 * C726) *
                 C121) *
                C50949 +
            ((C49761 * C389 + C50616 * C397 + C49768 * C393 + C50887 * C401) *
                 C50670 +
             (C49761 * C379 + C50616 * C385 + C49768 * C383 + C50887 * C394) *
                 C121) *
                C50948) *
               C50771 * C250 -
           (((C49761 * C738 + C50616 * C746 + C49768 * C739 + C50887 * C747) *
                 C50670 +
             (C49761 * C722 + C50616 * C734 + C49768 * C723 + C50887 * C735) *
                 C121) *
                C24656 +
            ((C49761 * C733 + C50616 * C745 + C49768 * C732 + C50887 * C744) *
                 C50670 +
             (C49761 * C721 + C50616 * C729 + C49768 * C720 + C50887 * C728) *
                 C121) *
                C50949 +
            ((C49761 * C391 + C50616 * C399 + C49768 * C390 + C50887 * C398) *
                 C50670 +
             (C49761 * C381 + C50616 * C387 + C49768 * C380 + C50887 * C386) *
                 C121) *
                C50948) *
               C50771 * C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C121 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C50670) *
               C50948 +
           ((C24855 + C24854) * C121 + (C24857 + C24856) * C50670) * C50949 +
           (C25170 * C121 + C25171 * C50670) * C24656) *
              C50771 * C50636 * C1051 -
          ((C25493 * C50670 + C25492 * C121) * C24656 +
           ((C25483 + C25482) * C50670 + (C25481 + C25480) * C121) * C50949 +
           ((C49761 * C389 + C50616 * C397 + C49768 * C393 + C50887 * C401) *
                C50670 +
            (C49761 * C379 + C50616 * C385 + C49768 * C383 + C50887 * C394) *
                C121) *
               C50948) *
              C50771 * C50636 * C1052 +
          (((C49768 * C851 + C50887 * C856 + C49761 * C852 + C50616 * C857) *
                C121 +
            (C49768 * C860 + C50887 * C866 + C49761 * C861 + C50616 * C867) *
                C50670) *
               C50948 +
           ((C25803 + C25802) * C121 + (C25805 + C25804) * C50670) * C50949 +
           ((C25807 + C25806) * C121 + (C25809 + C25808) * C50670) * C24656) *
              C50771 * C50636 * C1053 -
          (((C49761 * C3486 + C50616 * C3494 + C49768 * C3487 +
             C50887 * C3495) *
                C50670 +
            (C49761 * C3482 + C50616 * C3488 + C49768 * C3483 +
             C50887 * C3489) *
                C121) *
               C24656 +
           ((C49761 * C3490 + C50616 * C3496 + C49768 * C3491 +
             C50887 * C3497) *
                C50670 +
            (C49761 * C3484 + C50616 * C3492 + C49768 * C3485 +
             C50887 * C3493) *
                C121) *
               C50949 +
           ((C49761 * C1061 + C50616 * C1069 + C49768 * C1062 +
             C50887 * C1070) *
                C50670 +
            (C49761 * C1057 + C50616 * C1065 + C49768 * C1058 +
             C50887 * C1066) *
                C121) *
               C50948) *
              C50771 * C50636 * C1054)) /
            (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C121 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50670) *
                C50948 +
            ((C24855 + C24854) * C121 + (C24857 + C24856) * C50670) * C50949 +
            (C25170 * C121 + C25171 * C50670) * C24656) *
               C50771 * C50945 -
           ((C25181 * C50670 + C25180 * C121) * C24656 +
            ((C24865 + C24864) * C50670 + (C24863 + C24862) * C121) * C50949 +
            ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                 C50670 +
             (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                 C121) *
                C50948) *
               C50771 * C50930 +
           (((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                 C121 +
             (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                 C50670) *
                C50948 +
            ((C24871 + C24870) * C121 + (C24873 + C24872) * C50670) * C50949 +
            ((C24875 + C24874) * C121 + (C24877 + C24876) * C50670) * C24656) *
               C50771 * C1173) *
              C1514 +
          ((((C49768 * C379 + C50887 * C385 + C49761 * C380 + C50616 * C386) *
                 C121 +
             (C49768 * C389 + C50887 * C397 + C49761 * C390 + C50616 * C398) *
                 C50670) *
                C50948 +
            ((C26411 + C26410) * C121 + (C26413 + C26412) * C50670) * C50949 +
            ((C26415 + C26414) * C121 + (C26417 + C26416) * C50670) * C24656) *
               C50771 * C50930 -
           ((C25493 * C50670 + C25492 * C121) * C24656 +
            ((C25483 + C25482) * C50670 + (C25481 + C25480) * C121) * C50949 +
            ((C49761 * C389 + C50616 * C397 + C49768 * C393 + C50887 * C401) *
                 C50670 +
             (C49761 * C379 + C50616 * C385 + C49768 * C383 + C50887 * C394) *
                 C121) *
                C50948) *
               C50771 * C50945 -
           (((C49761 * C738 + C50616 * C746 + C49768 * C739 + C50887 * C747) *
                 C50670 +
             (C49761 * C722 + C50616 * C734 + C49768 * C723 + C50887 * C735) *
                 C121) *
                C24656 +
            ((C49761 * C733 + C50616 * C745 + C49768 * C732 + C50887 * C744) *
                 C50670 +
             (C49761 * C721 + C50616 * C729 + C49768 * C720 + C50887 * C728) *
                 C121) *
                C50949 +
            ((C49761 * C391 + C50616 * C399 + C49768 * C390 + C50887 * C398) *
                 C50670 +
             (C49761 * C381 + C50616 * C387 + C49768 * C380 + C50887 * C386) *
                 C121) *
                C50948) *
               C50771 * C1173) *
              C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C253 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50899 -
             (C24854 + C24855) * C254 - (C24856 + C24857) * C50686) *
                C50948 +
            ((C24855 + C24854) * C253 + (C24857 + C24856) * C50899 -
             (C24858 + C24859) * C254 - (C24860 + C24861) * C50686) *
                C50949 +
            (C25170 * C253 + C25171 * C50899 - C25296 * C254 -
             C25297 * C50686) *
                C24656) *
               C50771 * C1277 +
           (((C24862 + C24863) * C254 -
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C50899 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C253) +
             (C24864 + C24865) * C50686) *
                C50948 +
            ((C24866 + C24867) * C254 -
             ((C24865 + C24864) * C50899 + (C24863 + C24862) * C253) +
             (C24868 + C24869) * C50686) *
                C50949 +
            ((C25195 + C25194) * C254 - (C25181 * C50899 + C25180 * C253) +
             (C25197 + C25196) * C50686) *
                C24656) *
               C50771 * C50641) *
              C1514 +
          ((((C25480 + C25481) * C254 -
             ((C49761 * C389 + C50616 * C397 + C49768 * C393 + C50887 * C401) *
                  C50899 +
              (C49761 * C379 + C50616 * C385 + C49768 * C383 + C50887 * C394) *
                  C253) +
             (C25482 + C25483) * C50686) *
                C50948 +
            ((C25485 + C25484) * C254 -
             ((C25483 + C25482) * C50899 + (C25481 + C25480) * C253) +
             (C25487 + C25486) * C50686) *
                C50949 +
            ((C25489 + C25488) * C254 - (C25493 * C50899 + C25492 * C253) +
             (C25491 + C25490) * C50686) *
                C24656) *
               C50771 * C1277 +
           (((C49768 * C379 + C50887 * C385 + C49761 * C380 + C50616 * C386) *
                 C253 +
             (C49768 * C389 + C50887 * C397 + C49761 * C390 + C50616 * C398) *
                 C50899 -
             (C26410 + C26411) * C254 - (C26412 + C26413) * C50686) *
                C50948 +
            ((C26411 + C26410) * C253 + (C26413 + C26412) * C50899 -
             (C26414 + C26415) * C254 - (C26416 + C26417) * C50686) *
                C50949 +
            ((C26415 + C26414) * C253 + (C26417 + C26416) * C50899 -
             (C49761 * C3984 + C50616 * C3985 + C49768 * C2994 +
              C50887 * C2998) *
                 C254 -
             (C49761 * C3986 + C50616 * C3987 + C49768 * C3000 +
              C50887 * C3006) *
                 C50686) *
                C24656) *
               C50771 * C50641) *
              C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C121 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50670) *
                C50948 +
            ((C24855 + C24854) * C121 + (C24857 + C24856) * C50670) * C50949 +
            (C25170 * C121 + C25171 * C50670) * C24656) *
               C50771 * C1277 -
           ((C25181 * C50670 + C25180 * C121) * C24656 +
            ((C24865 + C24864) * C50670 + (C24863 + C24862) * C121) * C50949 +
            ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                 C50670 +
             (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                 C121) *
                C50948) *
               C50771 * C50641) *
              C50947 +
          ((((C49768 * C379 + C50887 * C385 + C49761 * C380 + C50616 * C386) *
                 C121 +
             (C49768 * C389 + C50887 * C397 + C49761 * C390 + C50616 * C398) *
                 C50670) *
                C50948 +
            ((C26411 + C26410) * C121 + (C26413 + C26412) * C50670) * C50949 +
            ((C26415 + C26414) * C121 + (C26417 + C26416) * C50670) * C24656) *
               C50771 * C50641 -
           ((C25493 * C50670 + C25492 * C121) * C24656 +
            ((C25483 + C25482) * C50670 + (C25481 + C25480) * C121) * C50949 +
            ((C49761 * C389 + C50616 * C397 + C49768 * C393 + C50887 * C401) *
                 C50670 +
             (C49761 * C379 + C50616 * C385 + C49768 * C383 + C50887 * C394) *
                 C121) *
                C50948) *
               C50771 * C1277) *
              C50936 +
          ((((C49768 * C851 + C50887 * C856 + C49761 * C852 + C50616 * C857) *
                 C121 +
             (C49768 * C860 + C50887 * C866 + C49761 * C861 + C50616 * C867) *
                 C50670) *
                C50948 +
            ((C25803 + C25802) * C121 + (C25805 + C25804) * C50670) * C50949 +
            ((C25807 + C25806) * C121 + (C25809 + C25808) * C50670) * C24656) *
               C50771 * C1277 -
           (((C49761 * C3201 + C50616 * C3205 + C49768 * C3200 +
              C50887 * C3204) *
                 C50670 +
             (C49761 * C3196 + C50616 * C3202 + C49768 * C3195 +
              C50887 * C3198) *
                 C121) *
                C24656 +
            ((C49761 * C978 + C50616 * C982 + C49768 * C979 + C50887 * C983) *
                 C50670 +
             (C49761 * C970 + C50616 * C974 + C49768 * C971 + C50887 * C975) *
                 C121) *
                C50949 +
            ((C49761 * C862 + C50616 * C868 + C49768 * C861 + C50887 * C867) *
                 C50670 +
             (C49761 * C853 + C50616 * C858 + C49768 * C852 + C50887 * C857) *
                 C121) *
                C50948) *
               C50771 * C50641) *
              C1746)) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C121 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C50670) *
               C50948 +
           ((C49768 * C258 + C50887 * C264 + C49761 * C257 + C50616 * C263) *
                C121 +
            (C49768 * C268 + C50887 * C276 + C49761 * C267 + C50616 * C275) *
                C50670) *
               C50949 +
           ((C49768 * C509 + C50887 * C514 + C49761 * C510 + C50616 * C515) *
                C121 +
            (C49768 * C518 + C50887 * C524 + C49761 * C519 + C50616 * C525) *
                C50670) *
               C24656) *
              C50771 * C112 -
          (((C49761 * C520 + C50616 * C526 + C49768 * C519 + C50887 * C525) *
                C50670 +
            (C49761 * C511 + C50616 * C516 + C49768 * C510 + C50887 * C515) *
                C121) *
               C24656 +
           ((C49761 * C266 + C50616 * C274 + C49768 * C267 + C50887 * C275) *
                C50670 +
            (C49761 * C256 + C50616 * C262 + C49768 * C257 + C50887 * C263) *
                C121) *
               C50949 +
           ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                C50670 +
            (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                C121) *
               C50948) *
              C50771 * C113 +
          (((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                C121 +
            (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                C50670) *
               C50948 +
           ((C49768 * C256 + C50887 * C262 + C49761 * C255 + C50616 * C261) *
                C121 +
            (C49768 * C266 + C50887 * C274 + C49761 * C265 + C50616 * C273) *
                C50670) *
               C50949 +
           ((C49768 * C511 + C50887 * C516 + C49761 * C512 + C50616 * C517) *
                C121 +
            (C49768 * C520 + C50887 * C526 + C49761 * C521 + C50616 * C527) *
                C50670) *
               C24656) *
              C50771 * C114 -
          (((C49761 * C523 + C50616 * C528 + C49768 * C521 + C50887 * C527) *
                C50670 +
            (C49761 * C513 + C50616 * C522 + C49768 * C512 + C50887 * C517) *
                C121) *
               C24656 +
           ((C49761 * C270 + C50616 * C277 + C49768 * C265 + C50887 * C273) *
                C50670 +
            (C49761 * C259 + C50616 * C269 + C49768 * C255 + C50887 * C261) *
                C121) *
               C50949 +
           ((C49761 * C137 + C50616 * C147 + C49768 * C136 + C50887 * C146) *
                C50670 +
            (C49761 * C126 + C50616 * C138 + C49768 * C125 + C50887 * C132) *
                C121) *
               C50948) *
              C50771 * C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C506 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C501 -
            (C24854 + C24855) * C507 - (C24856 + C24857) * C502 +
            C25170 * C508 + C25171 * C503) *
               C50948 +
           ((C24855 + C24854) * C506 + (C24857 + C24856) * C501 -
            (C24858 + C24859) * C507 - (C24860 + C24861) * C502 +
            (C25190 + C25191) * C508 + (C25192 + C25193) * C503) *
               C50949 +
           (C25170 * C506 + C25171 * C501 - (C25191 + C25190) * C507 -
            (C25193 + C25192) * C502 +
            (C49768 * C2688 + C50887 * C2691 + C49761 * C2689 +
             C50616 * C2692) *
                C508 +
            (C49768 * C2693 + C50887 * C2697 + C49761 * C2694 +
             C50616 * C2698) *
                C503) *
               C24656) *
              C50771 * C50892 +
          (((C24862 + C24863) * C507 -
            ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                 C501 +
             (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                 C506) +
            (C24864 + C24865) * C502 - C25180 * C508 - C25181 * C503) *
               C50948 +
           ((C24866 + C24867) * C507 -
            ((C24865 + C24864) * C501 + (C24863 + C24862) * C506) +
            (C24868 + C24869) * C502 - (C25194 + C25195) * C508 -
            (C25196 + C25197) * C503) *
               C50949 +
           ((C25195 + C25194) * C507 - (C25181 * C501 + C25180 * C506) +
            (C25197 + C25196) * C502 -
            (C49761 * C2690 + C50616 * C2695 + C49768 * C2689 +
             C50887 * C2692) *
                C508 -
            (C49761 * C2696 + C50616 * C2699 + C49768 * C2694 +
             C50887 * C2698) *
                C503) *
               C24656) *
              C50771 * C50641) *
         C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C253 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C50899 -
            (C24854 + C24855) * C254 - (C24856 + C24857) * C50686) *
               C50948 +
           ((C24855 + C24854) * C253 + (C24857 + C24856) * C50899 -
            (C24858 + C24859) * C254 - (C24860 + C24861) * C50686) *
               C50949 +
           ((C24859 + C24858) * C253 + (C24861 + C24860) * C50899 -
            (C49761 * C606 + C50616 * C610 + C49768 * C607 + C50887 * C611) *
                C254 -
            (C49761 * C614 + C50616 * C618 + C49768 * C615 + C50887 * C619) *
                C50686) *
               C24656) *
              C50771 * C250 +
          (((C24862 + C24863) * C254 -
            ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                 C50899 +
             (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                 C253) +
            (C24864 + C24865) * C50686) *
               C50948 +
           ((C24866 + C24867) * C254 -
            ((C24865 + C24864) * C50899 + (C24863 + C24862) * C253) +
            (C24868 + C24869) * C50686) *
               C50949 +
           ((C49768 * C606 + C50887 * C610 + C49761 * C605 + C50616 * C609) *
                C254 -
            ((C24869 + C24868) * C50899 + (C24867 + C24866) * C253) +
            (C49768 * C614 + C50887 * C618 + C49761 * C613 + C50616 * C617) *
                C50686) *
               C24656) *
              C50771 * C251 +
          (((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                C253 +
            (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                C50899 -
            (C24870 + C24871) * C254 - (C24872 + C24873) * C50686) *
               C50948 +
           ((C24871 + C24870) * C253 + (C24873 + C24872) * C50899 -
            (C24874 + C24875) * C254 - (C24876 + C24877) * C50686) *
               C50949 +
           ((C24875 + C24874) * C253 + (C24877 + C24876) * C50899 -
            (C49761 * C604 + C50616 * C608 + C49768 * C605 + C50887 * C609) *
                C254 -
            (C49761 * C612 + C50616 * C616 + C49768 * C613 + C50887 * C617) *
                C50686) *
               C24656) *
              C50771 * C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
               C600 +
           (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
               C595 -
           (C24854 + C24855) * C601 - (C24856 + C24857) * C596 + C25170 * C602 +
           C25171 * C597 - C25296 * C603 - C25297 * C598) *
              C50948 +
          ((C24855 + C24854) * C600 + (C24857 + C24856) * C595 -
           (C24858 + C24859) * C601 - (C24860 + C24861) * C596 +
           (C25190 + C25191) * C602 + (C25192 + C25193) * C597 -
           (C25306 + C25307) * C603 - (C25308 + C25309) * C598) *
              C50949 +
          (C25170 * C600 + C25171 * C595 - C25296 * C601 - C25297 * C596 +
           (C25307 + C25306) * C602 + (C25309 + C25308) * C597 -
           (C49761 * C2826 + C50616 * C2828 + C49768 * C2827 + C50887 * C2829) *
               C603 -
           (C49761 * C2830 + C50616 * C2832 + C49768 * C2831 + C50887 * C2833) *
               C598) *
              C24656) *
         C50771 * C50636 * C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C121 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50670) *
                C50948 +
            ((C24855 + C24854) * C121 + (C24857 + C24856) * C50670) * C50949 +
            ((C24859 + C24858) * C121 + (C24861 + C24860) * C50670) * C24656) *
               C50771 * C250 -
           (((C24869 + C24868) * C50670 + (C24867 + C24866) * C121) * C24656 +
            ((C24865 + C24864) * C50670 + (C24863 + C24862) * C121) * C50949 +
            ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                 C50670 +
             (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                 C121) *
                C50948) *
               C50771 * C251 +
           (((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                 C121 +
             (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                 C50670) *
                C50948 +
            ((C24871 + C24870) * C121 + (C24873 + C24872) * C50670) * C50949 +
            ((C24875 + C24874) * C121 + (C24877 + C24876) * C50670) * C24656) *
               C50771 * C252) *
              C50901 +
          ((((C49768 * C379 + C50887 * C385 + C49761 * C380 + C50616 * C386) *
                 C121 +
             (C49768 * C389 + C50887 * C397 + C49761 * C390 + C50616 * C398) *
                 C50670) *
                C50948 +
            ((C49768 * C719 + C50887 * C727 + C49761 * C720 + C50616 * C728) *
                 C121 +
             (C49768 * C731 + C50887 * C743 + C49761 * C732 + C50616 * C744) *
                 C50670) *
                C50949 +
            ((C49768 * C724 + C50887 * C736 + C49761 * C723 + C50616 * C735) *
                 C121 +
             (C49768 * C740 + C50887 * C748 + C49761 * C739 + C50616 * C747) *
                 C50670) *
                C24656) *
               C50771 * C251 -
           (((C49761 * C740 + C50616 * C748 + C49768 * C741 + C50887 * C749) *
                 C50670 +
             (C49761 * C724 + C50616 * C736 + C49768 * C725 + C50887 * C737) *
                 C121) *
                C24656 +
            ((C49761 * C731 + C50616 * C743 + C49768 * C730 + C50887 * C742) *
                 C50670 +
             (C49761 * C719 + C50616 * C727 + C49768 * C718 + C50887 * C726) *
                 C121) *
                C50949 +
            ((C49761 * C389 + C50616 * C397 + C49768 * C393 + C50887 * C401) *
                 C50670 +
             (C49761 * C379 + C50616 * C385 + C49768 * C383 + C50887 * C394) *
                 C121) *
                C50948) *
               C50771 * C250 -
           (((C49761 * C738 + C50616 * C746 + C49768 * C739 + C50887 * C747) *
                 C50670 +
             (C49761 * C722 + C50616 * C734 + C49768 * C723 + C50887 * C735) *
                 C121) *
                C24656 +
            ((C49761 * C733 + C50616 * C745 + C49768 * C732 + C50887 * C744) *
                 C50670 +
             (C49761 * C721 + C50616 * C729 + C49768 * C720 + C50887 * C728) *
                 C121) *
                C50949 +
            ((C49761 * C391 + C50616 * C399 + C49768 * C390 + C50887 * C398) *
                 C50670 +
             (C49761 * C381 + C50616 * C387 + C49768 * C380 + C50887 * C386) *
                 C121) *
                C50948) *
               C50771 * C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C506 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C501 -
            (C24854 + C24855) * C507 - (C24856 + C24857) * C502 +
            C25170 * C508 + C25171 * C503) *
               C50948 +
           ((C24855 + C24854) * C506 + (C24857 + C24856) * C501 -
            (C24858 + C24859) * C507 - (C24860 + C24861) * C502 +
            (C25190 + C25191) * C508 + (C25192 + C25193) * C503) *
               C50949 +
           (C25170 * C506 + C25171 * C501 - C25296 * C507 - C25297 * C502 +
            (C25307 + C25306) * C508 + (C25309 + C25308) * C503) *
               C24656) *
              C50771 * C50636 * C50901 +
          (((C25480 + C25481) * C507 -
            ((C49761 * C389 + C50616 * C397 + C49768 * C393 + C50887 * C401) *
                 C501 +
             (C49761 * C379 + C50616 * C385 + C49768 * C383 + C50887 * C394) *
                 C506) +
            (C25482 + C25483) * C502 - C25492 * C508 - C25493 * C503) *
               C50948 +
           ((C25485 + C25484) * C507 -
            ((C25483 + C25482) * C501 + (C25481 + C25480) * C506) +
            (C25487 + C25486) * C502 - (C25488 + C25489) * C508 -
            (C25490 + C25491) * C503) *
               C50949 +
           ((C25489 + C25488) * C507 - (C25493 * C501 + C25492 * C506) +
            (C25491 + C25490) * C502 -
            (C49761 * C2996 + C50616 * C3002 + C49768 * C2997 +
             C50887 * C3003) *
                C508 -
            (C49761 * C3004 + C50616 * C3008 + C49768 * C3005 +
             C50887 * C3009) *
                C503) *
               C24656) *
              C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[90] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C19772 * C122 + C50611 * C129) * C1174 +
                     (C19772 * C133 + C50611 * C143) * C1169 - C19908 * C1175 -
                     C19909 * C50686) *
                        C50948 +
                    (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                     C19911 * C50686) *
                        C50949 +
                    (C19910 * C1174 + C19911 * C1169 - C19912 * C1175 -
                     C19913 * C50686) *
                        C24656) *
                       C50916 +
                   ((C23494 + C23495 - C23496 - C23497) * C50948 +
                    (C23498 + C23499 - C23500 - C23501) * C50949 +
                    (C20330 * C1174 + C20331 * C1169 - C20332 * C1175 -
                     C20333 * C50686) *
                        C24656) *
                       C50835) *
                      C50945 +
                  (((C19914 * C1175 -
                     ((C19772 * C134 + C50611 * C144) * C1169 +
                      (C19772 * C123 + C50611 * C130) * C1174) +
                     C19915 * C50686) *
                        C50948 +
                    (C19916 * C1175 - (C19915 * C1169 + C19914 * C1174) +
                     C19917 * C50686) *
                        C50949 +
                    (C19918 * C1175 - (C19917 * C1169 + C19916 * C1174) +
                     C19919 * C50686) *
                        C24656) *
                       C50916 +
                   ((C23510 - (C23511 + C23512) + C23513) * C50948 +
                    (C23514 - (C23515 + C23516) + C23517) * C50949 +
                    (C20966 * C1175 - (C20965 * C1169 + C20964 * C1174) +
                     C20967 * C50686) *
                        C24656) *
                       C50835) *
                      C50930 +
                  ((((C19772 * C124 + C50611 * C131) * C1174 +
                     (C19772 * C135 + C50611 * C145) * C1169 - C19920 * C1175 -
                     C19921 * C50686) *
                        C50948 +
                    (C19920 * C1174 + C19921 * C1169 - C19922 * C1175 -
                     C19923 * C50686) *
                        C50949 +
                    (C19922 * C1174 + C19923 * C1169 - C19924 * C1175 -
                     C19925 * C50686) *
                        C24656) *
                       C50916 +
                   ((C22072 * C1174 + C22073 * C1169 - C21878 * C1175 -
                     C21879 * C50686) *
                        C50948 +
                    (C21878 * C1174 + C21879 * C1169 - C31252 * C1175 -
                     C31253 * C50686) *
                        C50949 +
                    (C31252 * C1174 + C31253 * C1169 -
                     (C19772 * C3984 + C50611 * C3985) * C1175 -
                     (C19772 * C3986 + C50611 * C3987) * C50686) *
                        C24656) *
                       C50835) *
                      C1173) *
                 C50700) /
                (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C1279 +
             (C19772 * C133 + C50611 * C143) * C50946 - C19908 * C1280 -
             C19909 * C50933 + C19910 * C1281 + C19911 * C1276) *
                C50948 +
            (C19908 * C1279 + C19909 * C50946 - C19910 * C1280 -
             C19911 * C50933 + C19912 * C1281 + C19913 * C1276) *
                C50949 +
            (C19910 * C1279 + C19911 * C50946 - C19912 * C1280 -
             C19913 * C50933 + C20130 * C1281 + C20131 * C1276) *
                C24656) *
               C50916 +
           ((C24368 + C24369 - C24370 - C24371 + C24372 + C24373) * C50948 +
            (C24374 + C24375 - C24376 - C24377 + C24378 + C24379) * C50949 +
            (C20330 * C1279 + C20331 * C50946 - C20332 * C1280 -
             C20333 * C50933 + C20334 * C1281 + C20335 * C1276) *
                C24656) *
               C50835) *
              C1277 +
          (((C19914 * C1280 -
             ((C19772 * C134 + C50611 * C144) * C50946 +
              (C19772 * C123 + C50611 * C130) * C1279) +
             C19915 * C50933 - C19916 * C1281 - C19917 * C1276) *
                C50948 +
            (C19916 * C1280 - (C19915 * C50946 + C19914 * C1279) +
             C19917 * C50933 - C19918 * C1281 - C19919 * C1276) *
                C50949 +
            (C19918 * C1280 - (C19917 * C50946 + C19916 * C1279) +
             C19919 * C50933 - C20132 * C1281 - C20133 * C1276) *
                C24656) *
               C50916 +
           ((C20962 * C1280 - (C22070 * C50946 + C22071 * C1279) +
             C20963 * C50933 - C20964 * C1281 - C20965 * C1276) *
                C50948 +
            (C20964 * C1280 - (C20963 * C50946 + C20962 * C1279) +
             C20965 * C50933 - C20966 * C1281 - C20967 * C1276) *
                C50949 +
            (C20966 * C1280 - (C20965 * C50946 + C20964 * C1279) +
             C20967 * C50933 - (C19772 * C2996 + C50611 * C3002) * C1281 -
             (C19772 * C3004 + C50611 * C3008) * C1276) *
                C24656) *
               C50835) *
              C50641) *
         C50700) /
        (p * q * std::sqrt(p + q));
    d2ee[92] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C19772 * C122 + C50611 * C129) * C1174 +
                      (C19772 * C133 + C50611 * C143) * C1169 - C19908 * C1175 -
                      C19909 * C50686) *
                         C50948 +
                     (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                      C19911 * C50686) *
                         C50949 +
                     (C19910 * C1174 + C19911 * C1169 - C19912 * C1175 -
                      C19913 * C50686) *
                         C24656) *
                        C50916 +
                    ((C23494 + C23495 - C23496 - C23497) * C50948 +
                     (C23498 + C23499 - C23500 - C23501) * C50949 +
                     (C32692 + C32693 - C32694 - C32695) * C24656) *
                        C50835) *
                       C1277 +
                   (((C19914 * C1175 -
                      ((C19772 * C134 + C50611 * C144) * C1169 +
                       (C19772 * C123 + C50611 * C130) * C1174) +
                      C19915 * C50686) *
                         C50948 +
                     (C19916 * C1175 - (C19915 * C1169 + C19914 * C1174) +
                      C19917 * C50686) *
                         C50949 +
                     (C19918 * C1175 - (C19917 * C1169 + C19916 * C1174) +
                      C19919 * C50686) *
                         C24656) *
                        C50916 +
                    ((C23510 - (C23511 + C23512) + C23513) * C50948 +
                     (C23514 - (C23515 + C23516) + C23517) * C50949 +
                     (C32696 - (C32697 + C32698) + C32699) * C24656) *
                        C50835) *
                       C50641) *
                      C50901 +
                  ((((C23496 - (C23495 + C23494) + C23497) * C50948 +
                     (C23500 - (C23499 + C23498) + C23501) * C50949 +
                     (C32694 - (C32693 + C32692) + C32695) * C24656) *
                        C50916 +
                    ((C23504 - (C23503 + C23502) + C23505) * C50948 +
                     (C23508 - (C23507 + C23506) + C23509) * C50949 +
                     (C20552 * C1175 - (C20551 * C1169 + C20550 * C1174) +
                      C20553 * C50686) *
                         C24656) *
                        C50835) *
                       C1277 +
                   (((C23512 + C23511 - C23510 - C23513) * C50948 +
                     (C23516 + C23515 - C23514 - C23517) * C50949 +
                     (C32698 + C32697 - C32696 - C32699) * C24656) *
                        C50916 +
                    ((C23520 + C23519 - C23518 - C23521) * C50948 +
                     (C23524 + C23523 - C23522 - C23525) * C50949 +
                     (C22238 * C1174 + C22239 * C1169 -
                      (C19772 * C3352 + C50611 * C3354) * C1175 -
                      (C19772 * C3356 + C50611 * C3358) * C50686) *
                         C24656) *
                        C50835) *
                       C50641) *
                      C50712)) /
                (p * q * std::sqrt(p + q));
    d2ee[93] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C19772 * C122 + C50611 * C129) * C1174 +
                      (C19772 * C133 + C50611 * C143) * C1169 - C19908 * C1175 -
                      C19909 * C50686) *
                         C50948 +
                     (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                      C19911 * C50686) *
                         C50949 +
                     (C19910 * C1174 + C19911 * C1169 - C19912 * C1175 -
                      C19913 * C50686) *
                         C24656) *
                        C50916 +
                    ((C23494 + C23495 - C23496 - C23497) * C50948 +
                     (C23498 + C23499 - C23500 - C23501) * C50949 +
                     (C32692 + C32693 - C32694 - C32695) * C24656) *
                        C50835) *
                       C50892 +
                   (((C19914 * C1175 -
                      ((C19772 * C134 + C50611 * C144) * C1169 +
                       (C19772 * C123 + C50611 * C130) * C1174) +
                      C19915 * C50686) *
                         C50948 +
                     (C19916 * C1175 - (C19915 * C1169 + C19914 * C1174) +
                      C19917 * C50686) *
                         C50949 +
                     (C19918 * C1175 - (C19917 * C1169 + C19916 * C1174) +
                      C19919 * C50686) *
                         C24656) *
                        C50916 +
                    ((C23510 - (C23511 + C23512) + C23513) * C50948 +
                     (C23514 - (C23515 + C23516) + C23517) * C50949 +
                     (C32696 - (C32697 + C32698) + C32699) * C24656) *
                        C50835) *
                       C50641) *
                      C1514 +
                  ((((C23496 - (C23495 + C23494) + C23497) * C50948 +
                     (C23500 - (C23499 + C23498) + C23501) * C50949 +
                     (C32694 - (C32693 + C32692) + C32695) * C24656) *
                        C50916 +
                    ((C23504 - (C23503 + C23502) + C23505) * C50948 +
                     (C23508 - (C23507 + C23506) + C23509) * C50949 +
                     (C20552 * C1175 - (C20551 * C1169 + C20550 * C1174) +
                      C20553 * C50686) *
                         C24656) *
                        C50835) *
                       C50892 +
                   (((C23512 + C23511 - C23510 - C23513) * C50948 +
                     (C23516 + C23515 - C23514 - C23517) * C50949 +
                     (C32698 + C32697 - C32696 - C32699) * C24656) *
                        C50916 +
                    ((C23520 + C23519 - C23518 - C23521) * C50948 +
                     (C23524 + C23523 - C23522 - C23525) * C50949 +
                     (C22238 * C1174 + C22239 * C1169 -
                      (C19772 * C3352 + C50611 * C3354) * C1175 -
                      (C19772 * C3356 + C50611 * C3358) * C50686) *
                         C24656) *
                        C50835) *
                       C50641) *
                      C50712)) /
                (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C1279 +
             (C19772 * C133 + C50611 * C143) * C50946 - C19908 * C1280 -
             C19909 * C50933 + C19910 * C1281 + C19911 * C1276) *
                C50948 +
            (C19908 * C1279 + C19909 * C50946 - C19910 * C1280 -
             C19911 * C50933 + C19912 * C1281 + C19913 * C1276) *
                C50949 +
            (C19910 * C1279 + C19911 * C50946 - C19912 * C1280 -
             C19913 * C50933 + C20130 * C1281 + C20131 * C1276) *
                C24656) *
               C50916 +
           ((C24368 + C24369 - C24370 - C24371 + C24372 + C24373) * C50948 +
            (C24374 + C24375 - C24376 - C24377 + C24378 + C24379) * C50949 +
            (C33530 + C33531 - C33532 - C33533 + C33534 + C33535) * C24656) *
               C50835) *
              C50636 * C1514 +
          (((C24370 - (C24369 + C24368) + C24371 - C24372 - C24373) * C50948 +
            (C24376 - (C24375 + C24374) + C24377 - C24378 - C24379) * C50949 +
            (C33532 - (C33531 + C33530) + C33533 - C33534 - C33535) * C24656) *
               C50916 +
           ((C24382 - (C24381 + C24380) + C24383 - C24384 - C24385) * C50948 +
            (C24388 - (C24387 + C24386) + C24389 - C24390 - C24391) * C50949 +
            (C20552 * C1280 - (C20551 * C50946 + C20550 * C1279) +
             C20553 * C50933 - (C19772 * C20531 + C50611 * C20532) * C1281 -
             (C19772 * C20533 + C50611 * C20534) * C1276) *
                C24656) *
               C50835) *
              C50636 * C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[95] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C19772 * C122 + C50611 * C129) * C1174 +
                     (C19772 * C133 + C50611 * C143) * C1169 - C19908 * C1175 -
                     C19909 * C50686) *
                        C50948 +
                    (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                     C19911 * C50686) *
                        C50949 +
                    (C19910 * C1174 + C19911 * C1169 - C19912 * C1175 -
                     C19913 * C50686) *
                        C24656) *
                       C50916 +
                   ((C23494 + C23495 - C23496 - C23497) * C50948 +
                    (C23498 + C23499 - C23500 - C23501) * C50949 +
                    (C32692 + C32693 - C32694 - C32695) * C24656) *
                       C50835) *
                      C50636 * C50947 +
                  (((C23496 - (C23495 + C23494) + C23497) * C50948 +
                    (C23500 - (C23499 + C23498) + C23501) * C50949 +
                    (C32694 - (C32693 + C32692) + C32695) * C24656) *
                       C50916 +
                   ((C23504 - (C23503 + C23502) + C23505) * C50948 +
                    (C23508 - (C23507 + C23506) + C23509) * C50949 +
                    (C33682 - (C33683 + C33684) + C33685) * C24656) *
                       C50835) *
                      C50636 * C50936 +
                  ((C24550 * C50948 + C24551 * C50949 +
                    (C33684 + C33683 - C33682 - C33685) * C24656) *
                       C50916 +
                   ((C24542 + C24541 - C24540 - C24543) * C50948 +
                    (C24546 + C24545 - C24544 - C24547) * C50949 +
                    (C22518 * C1174 + C22519 * C1169 -
                     (C19772 * C20619 + C50611 * C20621) * C1175 -
                     (C19772 * C20620 + C50611 * C20622) * C50686) *
                        C24656) *
                       C50835) *
                      C50636 * C1746)) /
                (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C506 +
             (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
             C19909 * C502 + C19910 * C508 + C19911 * C503) *
                C50948 +
            (C19908 * C506 + C19909 * C501 - C19910 * C507 - C19911 * C502 +
             C19912 * C508 + C19913 * C503) *
                C50949 +
            (C19910 * C506 + C19911 * C501 - C19912 * C507 - C19913 * C502 +
             C20130 * C508 + C20131 * C503) *
                C24656) *
               C50916 +
           ((C22484 + C22485 - C22486 - C22487 + C22488 + C22489) * C50948 +
            (C22490 + C22491 - C22492 - C22493 + C22494 + C22495) * C50949 +
            (C20330 * C506 + C20331 * C501 - C20332 * C507 - C20333 * C502 +
             C20334 * C508 + C20335 * C503) *
                C24656) *
               C50835) *
              C50892 +
          (((C19914 * C507 -
             ((C19772 * C134 + C50611 * C144) * C501 +
              (C19772 * C123 + C50611 * C130) * C506) +
             C19915 * C502 - C19916 * C508 - C19917 * C503) *
                C50948 +
            (C19916 * C507 - (C19915 * C501 + C19914 * C506) + C19917 * C502 -
             C19918 * C508 - C19919 * C503) *
                C50949 +
            (C19918 * C507 - (C19917 * C501 + C19916 * C506) + C19919 * C502 -
             C20132 * C508 - C20133 * C503) *
                C24656) *
               C50916 +
           ((C20962 * C507 - (C22070 * C501 + C22071 * C506) + C20963 * C502 -
             C20964 * C508 - C20965 * C503) *
                C50948 +
            (C20964 * C507 - (C20963 * C501 + C20962 * C506) + C20965 * C502 -
             C20966 * C508 - C20967 * C503) *
                C50949 +
            (C20966 * C507 - (C20965 * C501 + C20964 * C506) + C20967 * C502 -
             (C19772 * C2996 + C50611 * C3002) * C508 -
             (C19772 * C3004 + C50611 * C3008) * C503) *
                C24656) *
               C50835) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C121 +
             (C19772 * C133 + C50611 * C143) * C50670) *
                C50948 +
            (C19908 * C121 + C19909 * C50670) * C50949 +
            (C19910 * C121 + C19911 * C50670) * C24656) *
               C50916 +
           ((C22076 + C22077) * C50948 + (C22032 + C22033) * C50949 +
            (C20330 * C121 + C20331 * C50670) * C24656) *
               C50835) *
              C112 -
          (((C20965 * C50670 + C20964 * C121) * C24656 +
            (C22046 + C22047) * C50949 + (C22082 + C22083) * C50948) *
               C50835 +
           ((C19917 * C50670 + C19916 * C121) * C24656 +
            (C19915 * C50670 + C19914 * C121) * C50949 +
            ((C19772 * C134 + C50611 * C144) * C50670 +
             (C19772 * C123 + C50611 * C130) * C121) *
                C50948) *
               C50916) *
              C113 +
          ((((C19772 * C124 + C50611 * C131) * C121 +
             (C19772 * C135 + C50611 * C145) * C50670) *
                C50948 +
            (C19920 * C121 + C19921 * C50670) * C50949 +
            (C19922 * C121 + C19923 * C50670) * C24656) *
               C50916 +
           ((C22084 + C22085) * C50948 + (C22056 + C22057) * C50949 +
            ((C19772 * C723 + C50611 * C735) * C121 +
             (C19772 * C739 + C50611 * C747) * C50670) *
                C24656) *
               C50835) *
              C114 -
          ((((C19772 * C738 + C50611 * C746) * C50670 +
             (C19772 * C722 + C50611 * C734) * C121) *
                C24656 +
            ((C19772 * C733 + C50611 * C745) * C50670 +
             (C19772 * C721 + C50611 * C729) * C121) *
                C50949 +
            ((C19772 * C391 + C50611 * C399) * C50670 +
             (C19772 * C381 + C50611 * C387) * C121) *
                C50948) *
               C50835 +
           (((C19772 * C521 + C50611 * C527) * C50670 +
             (C19772 * C512 + C50611 * C517) * C121) *
                C24656 +
            ((C19772 * C265 + C50611 * C273) * C50670 +
             (C19772 * C255 + C50611 * C261) * C121) *
                C50949 +
            ((C19772 * C136 + C50611 * C146) * C50670 +
             (C19772 * C125 + C50611 * C132) * C121) *
                C50948) *
               C50916) *
              C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19772 * C122 + C50611 * C129) * C121 +
              (C19772 * C133 + C50611 * C143) * C50670) *
                 C50948 +
             (C19908 * C121 + C19909 * C50670) * C50949 +
             (C19910 * C121 + C19911 * C50670) * C24656) *
                C50916 +
            ((C22076 + C22077) * C50948 + (C22032 + C22033) * C50949 +
             (C31400 + C31401) * C24656) *
                C50835) *
               C50892 -
           (((C31402 + C31403) * C24656 + (C22046 + C22047) * C50949 +
             (C22082 + C22083) * C50948) *
                C50835 +
            ((C19917 * C50670 + C19916 * C121) * C24656 +
             (C19915 * C50670 + C19914 * C121) * C50949 +
             ((C19772 * C134 + C50611 * C144) * C50670 +
              (C19772 * C123 + C50611 * C130) * C121) *
                 C50948) *
                C50916) *
               C50641) *
              C848 +
          ((((C22083 + C22082) * C50948 + (C22047 + C22046) * C50949 +
             (C31403 + C31402) * C24656) *
                C50916 +
            ((C22081 + C22080) * C50948 + (C22041 + C22040) * C50949 +
             (C31948 + C31949) * C24656) *
                C50835) *
               C50641 -
           (((C31950 + C31951) * C24656 + (C22039 + C22038) * C50949 +
             (C22079 + C22078) * C50948) *
                C50835 +
            ((C31401 + C31400) * C24656 + (C22033 + C22032) * C50949 +
             (C22077 + C22076) * C50948) *
                C50916) *
               C50892) *
              C849 +
          (((C22666 * C50948 + C22667 * C50949 + (C31951 + C31950) * C24656) *
                C50916 +
            ((C22701 + C22700) * C50948 + (C22679 + C22678) * C50949 +
             (C22518 * C121 + C22519 * C50670) * C24656) *
                C50835) *
               C50892 -
           ((((C19772 * C3486 + C50611 * C3494) * C50670 +
              (C19772 * C3482 + C50611 * C3488) * C121) *
                 C24656 +
             (C22699 + C22698) * C50949 + (C22697 + C22696) * C50948) *
                C50835 +
            ((C31949 + C31948) * C24656 + C22668 * C50949 + C22669 * C50948) *
                C50916) *
               C50641) *
              C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C600 +
            (C19772 * C133 + C50611 * C143) * C595 - C19908 * C601 -
            C19909 * C596 + C19910 * C602 + C19911 * C597 - C19912 * C603 -
            C19913 * C598) *
               C50948 +
           (C19908 * C600 + C19909 * C595 - C19910 * C601 - C19911 * C596 +
            C19912 * C602 + C19913 * C597 - C20130 * C603 - C20131 * C598) *
               C50949 +
           (C19910 * C600 + C19911 * C595 - C19912 * C601 - C19913 * C596 +
            C20130 * C602 + C20131 * C597 - C20208 * C603 - C20209 * C598) *
               C24656) *
              C50916 +
          ((C22064 * C600 + C22065 * C595 - C20328 * C601 - C20329 * C596 +
            C20330 * C602 + C20331 * C597 - C20332 * C603 - C20333 * C598) *
               C50948 +
           (C20328 * C600 + C20329 * C595 - C20330 * C601 - C20331 * C596 +
            C20332 * C602 + C20333 * C597 - C20334 * C603 - C20335 * C598) *
               C50949 +
           (C20330 * C600 + C20331 * C595 - C20332 * C601 - C20333 * C596 +
            C20334 * C602 + C20335 * C597 -
            (C19772 * C20307 + C50611 * C20308) * C603 -
            (C19772 * C20309 + C50611 * C20310) * C598) *
               C24656) *
              C50835) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C253 +
             (C19772 * C133 + C50611 * C143) * C50899 - C19908 * C254 -
             C19909 * C50686) *
                C50948 +
            (C19908 * C253 + C19909 * C50899 - C19910 * C254 -
             C19911 * C50686) *
                C50949 +
            (C19910 * C253 + C19911 * C50899 - C19912 * C254 -
             C19913 * C50686) *
                C24656) *
               C50916 +
           ((C22852 + C22853 - C22854 - C22855) * C50948 +
            (C22856 + C22857 - C22858 - C22859) * C50949 +
            (C20330 * C253 + C20331 * C50899 - C20332 * C254 -
             C20333 * C50686) *
                C24656) *
               C50835) *
              C250 +
          (((C19914 * C254 -
             ((C19772 * C134 + C50611 * C144) * C50899 +
              (C19772 * C123 + C50611 * C130) * C253) +
             C19915 * C50686) *
                C50948 +
            (C19916 * C254 - (C19915 * C50899 + C19914 * C253) +
             C19917 * C50686) *
                C50949 +
            (C19918 * C254 - (C19917 * C50899 + C19916 * C253) +
             C19919 * C50686) *
                C24656) *
               C50916 +
           ((C23866 - (C23867 + C23868) + C23869) * C50948 +
            (C23870 - (C23871 + C23872) + C23873) * C50949 +
            (C20966 * C254 - (C20965 * C50899 + C20964 * C253) +
             C20967 * C50686) *
                C24656) *
               C50835) *
              C251 +
          ((((C19772 * C124 + C50611 * C131) * C253 +
             (C19772 * C135 + C50611 * C145) * C50899 - C19920 * C254 -
             C19921 * C50686) *
                C50948 +
            (C19920 * C253 + C19921 * C50899 - C19922 * C254 -
             C19923 * C50686) *
                C50949 +
            (C19922 * C253 + C19923 * C50899 - C19924 * C254 -
             C19925 * C50686) *
                C24656) *
               C50916 +
           ((C22072 * C253 + C22073 * C50899 - C21878 * C254 -
             C21879 * C50686) *
                C50948 +
            (C21878 * C253 + C21879 * C50899 - C31252 * C254 -
             C31253 * C50686) *
                C50949 +
            (C31252 * C253 + C31253 * C50899 -
             (C19772 * C3984 + C50611 * C3985) * C254 -
             (C19772 * C3986 + C50611 * C3987) * C50686) *
                C24656) *
               C50835) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C253 +
             (C19772 * C133 + C50611 * C143) * C50899 - C19908 * C254 -
             C19909 * C50686) *
                C50948 +
            (C19908 * C253 + C19909 * C50899 - C19910 * C254 -
             C19911 * C50686) *
                C50949 +
            (C19910 * C253 + C19911 * C50899 - C19912 * C254 -
             C19913 * C50686) *
                C24656) *
               C50916 +
           ((C22852 + C22853 - C22854 - C22855) * C50948 +
            (C22856 + C22857 - C22858 - C22859) * C50949 +
            (C32098 + C32099 - C32100 - C32101) * C24656) *
               C50835) *
              C50636 * C848 +
          (((C22854 - (C22853 + C22852) + C22855) * C50948 +
            (C22858 - (C22857 + C22856) + C22859) * C50949 +
            (C32100 - (C32099 + C32098) + C32101) * C24656) *
               C50916 +
           ((C22862 - (C22861 + C22860) + C22863) * C50948 +
            (C22866 - (C22865 + C22864) + C22867) * C50949 +
            (C32102 - (C32103 + C32104) + C32105) * C24656) *
               C50835) *
              C50636 * C849 +
          ((C22886 * C50948 + C22887 * C50949 +
            (C32104 + C32103 - C32102 - C32105) * C24656) *
               C50916 +
           ((C22870 + C22869 - C22868 - C22871) * C50948 +
            (C22874 + C22873 - C22872 - C22875) * C50949 +
            (C22518 * C253 + C22519 * C50899 -
             (C19772 * C20619 + C50611 * C20621) * C254 -
             (C19772 * C20620 + C50611 * C20622) * C50686) *
                C24656) *
               C50835) *
              C50636 * C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C506 +
             (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
             C19909 * C502 + C19910 * C508 + C19911 * C503) *
                C50948 +
            (C19908 * C506 + C19909 * C501 - C19910 * C507 - C19911 * C502 +
             C19912 * C508 + C19913 * C503) *
                C50949 +
            (C19910 * C506 + C19911 * C501 - C19912 * C507 - C19913 * C502 +
             C20130 * C508 + C20131 * C503) *
                C24656) *
               C50916 +
           ((C22484 + C22485 - C22486 - C22487 + C22488 + C22489) * C50948 +
            (C22490 + C22491 - C22492 - C22493 + C22494 + C22495) * C50949 +
            (C31796 + C31797 - C31798 - C31799 + C31800 + C31801) * C24656) *
               C50835) *
              C50636 * C50901 +
          (((C22486 - (C22485 + C22484) + C22487 - C22488 - C22489) * C50948 +
            (C22492 - (C22491 + C22490) + C22493 - C22494 - C22495) * C50949 +
            (C31798 - (C31797 + C31796) + C31799 - C31800 - C31801) * C24656) *
               C50916 +
           ((C22498 - (C22497 + C22496) + C22499 - C22500 - C22501) * C50948 +
            (C22504 - (C22503 + C22502) + C22505 - C22506 - C22507) * C50949 +
            (C20552 * C507 - (C20551 * C501 + C20550 * C506) + C20553 * C502 -
             (C19772 * C20531 + C50611 * C20532) * C508 -
             (C19772 * C20533 + C50611 * C20534) * C503) *
                C24656) *
               C50835) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19772 * C122 + C50611 * C129) * C121 +
              (C19772 * C133 + C50611 * C143) * C50670) *
                 C50948 +
             (C19908 * C121 + C19909 * C50670) * C50949 +
             (C19910 * C121 + C19911 * C50670) * C24656) *
                C50916 +
            ((C22076 + C22077) * C50948 + (C22032 + C22033) * C50949 +
             (C31400 + C31401) * C24656) *
                C50835) *
               C250 -
           (((C31402 + C31403) * C24656 + (C22046 + C22047) * C50949 +
             (C22082 + C22083) * C50948) *
                C50835 +
            ((C19917 * C50670 + C19916 * C121) * C24656 +
             (C19915 * C50670 + C19914 * C121) * C50949 +
             ((C19772 * C134 + C50611 * C144) * C50670 +
              (C19772 * C123 + C50611 * C130) * C121) *
                 C50948) *
                C50916) *
               C251 +
           ((((C19772 * C124 + C50611 * C131) * C121 +
              (C19772 * C135 + C50611 * C145) * C50670) *
                 C50948 +
             (C19920 * C121 + C19921 * C50670) * C50949 +
             (C19922 * C121 + C19923 * C50670) * C24656) *
                C50916 +
            ((C22084 + C22085) * C50948 + (C22056 + C22057) * C50949 +
             (C31404 + C31405) * C24656) *
                C50835) *
               C252) *
              C50901 +
          ((((C22083 + C22082) * C50948 + (C22047 + C22046) * C50949 +
             (C31403 + C31402) * C24656) *
                C50916 +
            ((C22081 + C22080) * C50948 + (C22041 + C22040) * C50949 +
             (C22238 * C121 + C22239 * C50670) * C24656) *
                C50835) *
               C251 -
           (((C20551 * C50670 + C20550 * C121) * C24656 +
             (C22039 + C22038) * C50949 + (C22079 + C22078) * C50948) *
                C50835 +
            ((C31401 + C31400) * C24656 + (C22033 + C22032) * C50949 +
             (C22077 + C22076) * C50948) *
                C50916) *
               C250 -
           ((((C19772 * C3201 + C50611 * C3205) * C50670 +
              (C19772 * C3196 + C50611 * C3202) * C121) *
                 C24656 +
             (C22063 + C22062) * C50949 + (C22087 + C22086) * C50948) *
                C50835 +
            ((C31405 + C31404) * C24656 + (C22057 + C22056) * C50949 +
             (C22085 + C22084) * C50948) *
                C50916) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C121 +
             (C19772 * C133 + C50611 * C143) * C50670) *
                C50948 +
            (C19908 * C121 + C19909 * C50670) * C50949 +
            (C19910 * C121 + C19911 * C50670) * C24656) *
               C50916 +
           ((C22076 + C22077) * C50948 + (C22032 + C22033) * C50949 +
            (C31400 + C31401) * C24656) *
               C50835) *
              C50636 * C1051 -
          (((C31950 + C31951) * C24656 + (C22039 + C22038) * C50949 +
            (C22079 + C22078) * C50948) *
               C50835 +
           ((C31401 + C31400) * C24656 + (C22033 + C22032) * C50949 +
            (C22077 + C22076) * C50948) *
               C50916) *
              C50636 * C1052 +
          ((C22666 * C50948 + C22667 * C50949 + (C31951 + C31950) * C24656) *
               C50916 +
           ((C22701 + C22700) * C50948 + (C22679 + C22678) * C50949 +
            (C32204 + C32205) * C24656) *
               C50835) *
              C50636 * C1053 -
          ((((C19772 * C22849 + C50611 * C22850) * C50670 +
             (C19772 * C22847 + C50611 * C22848) * C121) *
                C24656 +
            (C23000 + C22999) * C50949 + (C23007 + C23006) * C50948) *
               C50835 +
           ((C32205 + C32204) * C24656 + C22993 * C50949 + C22994 * C50948) *
               C50916) *
              C50636 * C1054)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C19772 * C122 + C50611 * C129) * C121 +
                      (C19772 * C133 + C50611 * C143) * C50670) *
                         C50948 +
                     (C19908 * C121 + C19909 * C50670) * C50949 +
                     (C19910 * C121 + C19911 * C50670) * C24656) *
                        C50916 +
                    ((C22076 + C22077) * C50948 + (C22032 + C22033) * C50949 +
                     (C31400 + C31401) * C24656) *
                        C50835) *
                       C50945 -
                   (((C31402 + C31403) * C24656 + (C22046 + C22047) * C50949 +
                     (C22082 + C22083) * C50948) *
                        C50835 +
                    ((C19917 * C50670 + C19916 * C121) * C24656 +
                     (C19915 * C50670 + C19914 * C121) * C50949 +
                     ((C19772 * C134 + C50611 * C144) * C50670 +
                      (C19772 * C123 + C50611 * C130) * C121) *
                         C50948) *
                        C50916) *
                       C50930 +
                   ((((C19772 * C124 + C50611 * C131) * C121 +
                      (C19772 * C135 + C50611 * C145) * C50670) *
                         C50948 +
                     (C19920 * C121 + C19921 * C50670) * C50949 +
                     (C19922 * C121 + C19923 * C50670) * C24656) *
                        C50916 +
                    ((C22084 + C22085) * C50948 + (C22056 + C22057) * C50949 +
                     (C31404 + C31405) * C24656) *
                        C50835) *
                       C1173) *
                      C1514 +
                  ((((C22083 + C22082) * C50948 + (C22047 + C22046) * C50949 +
                     (C31403 + C31402) * C24656) *
                        C50916 +
                    ((C22081 + C22080) * C50948 + (C22041 + C22040) * C50949 +
                     (C31948 + C31949) * C24656) *
                        C50835) *
                       C50930 -
                   (((C31950 + C31951) * C24656 + (C22039 + C22038) * C50949 +
                     (C22079 + C22078) * C50948) *
                        C50835 +
                    ((C31401 + C31400) * C24656 + (C22033 + C22032) * C50949 +
                     (C22077 + C22076) * C50948) *
                        C50916) *
                       C50945 -
                   ((((C19772 * C3201 + C50611 * C3205) * C50670 +
                      (C19772 * C3196 + C50611 * C3202) * C121) *
                         C24656 +
                     (C22063 + C22062) * C50949 + (C22087 + C22086) * C50948) *
                        C50835 +
                    ((C31405 + C31404) * C24656 + (C22057 + C22056) * C50949 +
                     (C22085 + C22084) * C50948) *
                        C50916) *
                       C1173) *
                      C50712)) /
                (p * q * std::sqrt(p + q));
    d2ee[100] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19772 * C122 + C50611 * C129) * C253 +
                       (C19772 * C133 + C50611 * C143) * C50899 -
                       C19908 * C254 - C19909 * C50686) *
                          C50948 +
                      (C19908 * C253 + C19909 * C50899 - C19910 * C254 -
                       C19911 * C50686) *
                          C50949 +
                      (C19910 * C253 + C19911 * C50899 - C19912 * C254 -
                       C19913 * C50686) *
                          C24656) *
                         C50916 +
                     ((C22852 + C22853 - C22854 - C22855) * C50948 +
                      (C22856 + C22857 - C22858 - C22859) * C50949 +
                      (C32098 + C32099 - C32100 - C32101) * C24656) *
                         C50835) *
                        C1277 +
                    (((C19914 * C254 -
                       ((C19772 * C134 + C50611 * C144) * C50899 +
                        (C19772 * C123 + C50611 * C130) * C253) +
                       C19915 * C50686) *
                          C50948 +
                      (C19916 * C254 - (C19915 * C50899 + C19914 * C253) +
                       C19917 * C50686) *
                          C50949 +
                      (C19918 * C254 - (C19917 * C50899 + C19916 * C253) +
                       C19919 * C50686) *
                          C24656) *
                         C50916 +
                     ((C23866 - (C23867 + C23868) + C23869) * C50948 +
                      (C23870 - (C23871 + C23872) + C23873) * C50949 +
                      (C33040 - (C33041 + C33042) + C33043) * C24656) *
                         C50835) *
                        C50641) *
                       C1514 +
                   ((((C22854 - (C22853 + C22852) + C22855) * C50948 +
                      (C22858 - (C22857 + C22856) + C22859) * C50949 +
                      (C32100 - (C32099 + C32098) + C32101) * C24656) *
                         C50916 +
                     ((C22862 - (C22861 + C22860) + C22863) * C50948 +
                      (C22866 - (C22865 + C22864) + C22867) * C50949 +
                      (C32102 - (C32103 + C32104) + C32105) * C24656) *
                         C50835) *
                        C1277 +
                    (((C23868 + C23867 - C23866 - C23869) * C50948 +
                      (C23872 + C23871 - C23870 - C23873) * C50949 +
                      (C33042 + C33041 - C33040 - C33043) * C24656) *
                         C50916 +
                     ((C23876 + C23875 - C23874 - C23877) * C50948 +
                      (C23880 + C23879 - C23878 - C23881) * C50949 +
                      (C22238 * C253 + C22239 * C50899 -
                       (C19772 * C3352 + C50611 * C3354) * C254 -
                       (C19772 * C3356 + C50611 * C3358) * C50686) *
                          C24656) *
                         C50835) *
                        C50641) *
                       C50712)) /
                 (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19772 * C122 + C50611 * C129) * C121 +
              (C19772 * C133 + C50611 * C143) * C50670) *
                 C50948 +
             (C19908 * C121 + C19909 * C50670) * C50949 +
             (C19910 * C121 + C19911 * C50670) * C24656) *
                C50916 +
            ((C22076 + C22077) * C50948 + (C22032 + C22033) * C50949 +
             (C31400 + C31401) * C24656) *
                C50835) *
               C1277 -
           (((C31402 + C31403) * C24656 + (C22046 + C22047) * C50949 +
             (C22082 + C22083) * C50948) *
                C50835 +
            ((C19917 * C50670 + C19916 * C121) * C24656 +
             (C19915 * C50670 + C19914 * C121) * C50949 +
             ((C19772 * C134 + C50611 * C144) * C50670 +
              (C19772 * C123 + C50611 * C130) * C121) *
                 C50948) *
                C50916) *
               C50641) *
              C50947 +
          ((((C22083 + C22082) * C50948 + (C22047 + C22046) * C50949 +
             (C31403 + C31402) * C24656) *
                C50916 +
            ((C22081 + C22080) * C50948 + (C22041 + C22040) * C50949 +
             (C31948 + C31949) * C24656) *
                C50835) *
               C50641 -
           (((C31950 + C31951) * C24656 + (C22039 + C22038) * C50949 +
             (C22079 + C22078) * C50948) *
                C50835 +
            ((C31401 + C31400) * C24656 + (C22033 + C22032) * C50949 +
             (C22077 + C22076) * C50948) *
                C50916) *
               C1277) *
              C50936 +
          (((C22666 * C50948 + C22667 * C50949 + (C31951 + C31950) * C24656) *
                C50916 +
            ((C22701 + C22700) * C50948 + (C22679 + C22678) * C50949 +
             (C32204 + C32205) * C24656) *
                C50835) *
               C1277 -
           ((((C19772 * C3486 + C50611 * C3494) * C50670 +
              (C19772 * C3482 + C50611 * C3488) * C121) *
                 C24656 +
             (C22699 + C22698) * C50949 + (C22697 + C22696) * C50948) *
                C50835 +
            ((C31949 + C31948) * C24656 + C22668 * C50949 + C22669 * C50948) *
                C50916) *
               C50641) *
              C1746)) /
        (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C121 +
             (C19772 * C133 + C50611 * C143) * C50670) *
                C50948 +
            (C19908 * C121 + C19909 * C50670) * C50949 +
            (C19910 * C121 + C19911 * C50670) * C24656) *
               C50916 +
           ((C22076 + C22077) * C50948 + (C22032 + C22033) * C50949 +
            (C20330 * C121 + C20331 * C50670) * C24656) *
               C50835) *
              C112 -
          (((C20965 * C50670 + C20964 * C121) * C24656 +
            (C22046 + C22047) * C50949 + (C22082 + C22083) * C50948) *
               C50835 +
           ((C19917 * C50670 + C19916 * C121) * C24656 +
            (C19915 * C50670 + C19914 * C121) * C50949 +
            ((C19772 * C134 + C50611 * C144) * C50670 +
             (C19772 * C123 + C50611 * C130) * C121) *
                C50948) *
               C50916) *
              C113 +
          ((((C19772 * C124 + C50611 * C131) * C121 +
             (C19772 * C135 + C50611 * C145) * C50670) *
                C50948 +
            (C19920 * C121 + C19921 * C50670) * C50949 +
            (C19922 * C121 + C19923 * C50670) * C24656) *
               C50916 +
           ((C22084 + C22085) * C50948 + (C22056 + C22057) * C50949 +
            ((C19772 * C723 + C50611 * C735) * C121 +
             (C19772 * C739 + C50611 * C747) * C50670) *
                C24656) *
               C50835) *
              C114 -
          ((((C19772 * C738 + C50611 * C746) * C50670 +
             (C19772 * C722 + C50611 * C734) * C121) *
                C24656 +
            ((C19772 * C733 + C50611 * C745) * C50670 +
             (C19772 * C721 + C50611 * C729) * C121) *
                C50949 +
            ((C19772 * C391 + C50611 * C399) * C50670 +
             (C19772 * C381 + C50611 * C387) * C121) *
                C50948) *
               C50835 +
           (((C19772 * C521 + C50611 * C527) * C50670 +
             (C19772 * C512 + C50611 * C517) * C121) *
                C24656 +
            ((C19772 * C265 + C50611 * C273) * C50670 +
             (C19772 * C255 + C50611 * C261) * C121) *
                C50949 +
            ((C19772 * C136 + C50611 * C146) * C50670 +
             (C19772 * C125 + C50611 * C132) * C121) *
                C50948) *
               C50916) *
              C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C506 +
             (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
             C19909 * C502 + C19910 * C508 + C19911 * C503) *
                C50948 +
            (C19908 * C506 + C19909 * C501 - C19910 * C507 - C19911 * C502 +
             C19912 * C508 + C19913 * C503) *
                C50949 +
            (C19910 * C506 + C19911 * C501 - C19912 * C507 - C19913 * C502 +
             C20130 * C508 + C20131 * C503) *
                C24656) *
               C50916 +
           ((C22484 + C22485 - C22486 - C22487 + C22488 + C22489) * C50948 +
            (C22490 + C22491 - C22492 - C22493 + C22494 + C22495) * C50949 +
            (C20330 * C506 + C20331 * C501 - C20332 * C507 - C20333 * C502 +
             C20334 * C508 + C20335 * C503) *
                C24656) *
               C50835) *
              C50892 +
          (((C19914 * C507 -
             ((C19772 * C134 + C50611 * C144) * C501 +
              (C19772 * C123 + C50611 * C130) * C506) +
             C19915 * C502 - C19916 * C508 - C19917 * C503) *
                C50948 +
            (C19916 * C507 - (C19915 * C501 + C19914 * C506) + C19917 * C502 -
             C19918 * C508 - C19919 * C503) *
                C50949 +
            (C19918 * C507 - (C19917 * C501 + C19916 * C506) + C19919 * C502 -
             C20132 * C508 - C20133 * C503) *
                C24656) *
               C50916 +
           ((C20962 * C507 - (C22070 * C501 + C22071 * C506) + C20963 * C502 -
             C20964 * C508 - C20965 * C503) *
                C50948 +
            (C20964 * C507 - (C20963 * C501 + C20962 * C506) + C20965 * C502 -
             C20966 * C508 - C20967 * C503) *
                C50949 +
            (C20966 * C507 - (C20965 * C501 + C20964 * C506) + C20967 * C502 -
             (C19772 * C2996 + C50611 * C3002) * C508 -
             (C19772 * C3004 + C50611 * C3008) * C503) *
                C24656) *
               C50835) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C253 +
             (C19772 * C133 + C50611 * C143) * C50899 - C19908 * C254 -
             C19909 * C50686) *
                C50948 +
            (C19908 * C253 + C19909 * C50899 - C19910 * C254 -
             C19911 * C50686) *
                C50949 +
            (C19910 * C253 + C19911 * C50899 - C19912 * C254 -
             C19913 * C50686) *
                C24656) *
               C50916 +
           ((C22852 + C22853 - C22854 - C22855) * C50948 +
            (C22856 + C22857 - C22858 - C22859) * C50949 +
            (C20330 * C253 + C20331 * C50899 - C20332 * C254 -
             C20333 * C50686) *
                C24656) *
               C50835) *
              C250 +
          (((C19914 * C254 -
             ((C19772 * C134 + C50611 * C144) * C50899 +
              (C19772 * C123 + C50611 * C130) * C253) +
             C19915 * C50686) *
                C50948 +
            (C19916 * C254 - (C19915 * C50899 + C19914 * C253) +
             C19917 * C50686) *
                C50949 +
            (C19918 * C254 - (C19917 * C50899 + C19916 * C253) +
             C19919 * C50686) *
                C24656) *
               C50916 +
           ((C23866 - (C23867 + C23868) + C23869) * C50948 +
            (C23870 - (C23871 + C23872) + C23873) * C50949 +
            (C20966 * C254 - (C20965 * C50899 + C20964 * C253) +
             C20967 * C50686) *
                C24656) *
               C50835) *
              C251 +
          ((((C19772 * C124 + C50611 * C131) * C253 +
             (C19772 * C135 + C50611 * C145) * C50899 - C19920 * C254 -
             C19921 * C50686) *
                C50948 +
            (C19920 * C253 + C19921 * C50899 - C19922 * C254 -
             C19923 * C50686) *
                C50949 +
            (C19922 * C253 + C19923 * C50899 - C19924 * C254 -
             C19925 * C50686) *
                C24656) *
               C50916 +
           ((C22072 * C253 + C22073 * C50899 - C21878 * C254 -
             C21879 * C50686) *
                C50948 +
            (C21878 * C253 + C21879 * C50899 - C31252 * C254 -
             C31253 * C50686) *
                C50949 +
            (C31252 * C253 + C31253 * C50899 -
             (C19772 * C3984 + C50611 * C3985) * C254 -
             (C19772 * C3986 + C50611 * C3987) * C50686) *
                C24656) *
               C50835) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C600 +
            (C19772 * C133 + C50611 * C143) * C595 - C19908 * C601 -
            C19909 * C596 + C19910 * C602 + C19911 * C597 - C19912 * C603 -
            C19913 * C598) *
               C50948 +
           (C19908 * C600 + C19909 * C595 - C19910 * C601 - C19911 * C596 +
            C19912 * C602 + C19913 * C597 - C20130 * C603 - C20131 * C598) *
               C50949 +
           (C19910 * C600 + C19911 * C595 - C19912 * C601 - C19913 * C596 +
            C20130 * C602 + C20131 * C597 - C20208 * C603 - C20209 * C598) *
               C24656) *
              C50916 +
          ((C22064 * C600 + C22065 * C595 - C20328 * C601 - C20329 * C596 +
            C20330 * C602 + C20331 * C597 - C20332 * C603 - C20333 * C598) *
               C50948 +
           (C20328 * C600 + C20329 * C595 - C20330 * C601 - C20331 * C596 +
            C20332 * C602 + C20333 * C597 - C20334 * C603 - C20335 * C598) *
               C50949 +
           (C20330 * C600 + C20331 * C595 - C20332 * C601 - C20333 * C596 +
            C20334 * C602 + C20335 * C597 -
            (C19772 * C20307 + C50611 * C20308) * C603 -
            (C19772 * C20309 + C50611 * C20310) * C598) *
               C24656) *
              C50835) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19772 * C122 + C50611 * C129) * C121 +
              (C19772 * C133 + C50611 * C143) * C50670) *
                 C50948 +
             (C19908 * C121 + C19909 * C50670) * C50949 +
             (C19910 * C121 + C19911 * C50670) * C24656) *
                C50916 +
            ((C22076 + C22077) * C50948 + (C22032 + C22033) * C50949 +
             (C31400 + C31401) * C24656) *
                C50835) *
               C250 -
           (((C31402 + C31403) * C24656 + (C22046 + C22047) * C50949 +
             (C22082 + C22083) * C50948) *
                C50835 +
            ((C19917 * C50670 + C19916 * C121) * C24656 +
             (C19915 * C50670 + C19914 * C121) * C50949 +
             ((C19772 * C134 + C50611 * C144) * C50670 +
              (C19772 * C123 + C50611 * C130) * C121) *
                 C50948) *
                C50916) *
               C251 +
           ((((C19772 * C124 + C50611 * C131) * C121 +
              (C19772 * C135 + C50611 * C145) * C50670) *
                 C50948 +
             (C19920 * C121 + C19921 * C50670) * C50949 +
             (C19922 * C121 + C19923 * C50670) * C24656) *
                C50916 +
            ((C22084 + C22085) * C50948 + (C22056 + C22057) * C50949 +
             (C31404 + C31405) * C24656) *
                C50835) *
               C252) *
              C50901 +
          ((((C22083 + C22082) * C50948 + (C22047 + C22046) * C50949 +
             (C31403 + C31402) * C24656) *
                C50916 +
            ((C22081 + C22080) * C50948 + (C22041 + C22040) * C50949 +
             (C22238 * C121 + C22239 * C50670) * C24656) *
                C50835) *
               C251 -
           (((C20551 * C50670 + C20550 * C121) * C24656 +
             (C22039 + C22038) * C50949 + (C22079 + C22078) * C50948) *
                C50835 +
            ((C31401 + C31400) * C24656 + (C22033 + C22032) * C50949 +
             (C22077 + C22076) * C50948) *
                C50916) *
               C250 -
           ((((C19772 * C3201 + C50611 * C3205) * C50670 +
              (C19772 * C3196 + C50611 * C3202) * C121) *
                 C24656 +
             (C22063 + C22062) * C50949 + (C22087 + C22086) * C50948) *
                C50835 +
            ((C31405 + C31404) * C24656 + (C22057 + C22056) * C50949 +
             (C22085 + C22084) * C50948) *
                C50916) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C506 +
             (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
             C19909 * C502 + C19910 * C508 + C19911 * C503) *
                C50948 +
            (C19908 * C506 + C19909 * C501 - C19910 * C507 - C19911 * C502 +
             C19912 * C508 + C19913 * C503) *
                C50949 +
            (C19910 * C506 + C19911 * C501 - C19912 * C507 - C19913 * C502 +
             C20130 * C508 + C20131 * C503) *
                C24656) *
               C50916 +
           ((C22484 + C22485 - C22486 - C22487 + C22488 + C22489) * C50948 +
            (C22490 + C22491 - C22492 - C22493 + C22494 + C22495) * C50949 +
            (C31796 + C31797 - C31798 - C31799 + C31800 + C31801) * C24656) *
               C50835) *
              C50636 * C50901 +
          (((C22486 - (C22485 + C22484) + C22487 - C22488 - C22489) * C50948 +
            (C22492 - (C22491 + C22490) + C22493 - C22494 - C22495) * C50949 +
            (C31798 - (C31797 + C31796) + C31799 - C31800 - C31801) * C24656) *
               C50916 +
           ((C22498 - (C22497 + C22496) + C22499 - C22500 - C22501) * C50948 +
            (C22504 - (C22503 + C22502) + C22505 - C22506 - C22507) * C50949 +
            (C20552 * C507 - (C20551 * C501 + C20550 * C506) + C20553 * C502 -
             (C19772 * C20531 + C50611 * C20532) * C508 -
             (C19772 * C20533 + C50611 * C20534) * C503) *
                C24656) *
               C50835) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[105] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C19772 * C122 + C50611 * C129) * C1174 +
                     (C19772 * C133 + C50611 * C143) * C1169 - C19908 * C1175 -
                     C19909 * C50686) *
                        C19768 +
                    (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                     C19911 * C50686) *
                        C19769 +
                    (C19910 * C1174 + C19911 * C1169 - C19912 * C1175 -
                     C19913 * C50686) *
                        C19770 +
                    (C19912 * C1174 + C19913 * C1169 - C20130 * C1175 -
                     C20131 * C50686) *
                        C19771) *
                       C50771 * C50945 +
                   ((C19914 * C1175 -
                     ((C19772 * C134 + C50611 * C144) * C1169 +
                      (C19772 * C123 + C50611 * C130) * C1174) +
                     C19915 * C50686) *
                        C19768 +
                    (C19916 * C1175 - (C19915 * C1169 + C19914 * C1174) +
                     C19917 * C50686) *
                        C19769 +
                    (C19918 * C1175 - (C19917 * C1169 + C19916 * C1174) +
                     C19919 * C50686) *
                        C19770 +
                    (C20132 * C1175 - (C19919 * C1169 + C19918 * C1174) +
                     C20133 * C50686) *
                        C19771) *
                       C50771 * C50930 +
                   (((C19772 * C124 + C50611 * C131) * C1174 +
                     (C19772 * C135 + C50611 * C145) * C1169 - C19920 * C1175 -
                     C19921 * C50686) *
                        C19768 +
                    (C19920 * C1174 + C19921 * C1169 - C19922 * C1175 -
                     C19923 * C50686) *
                        C19769 +
                    (C19922 * C1174 + C19923 * C1169 - C19924 * C1175 -
                     C19925 * C50686) *
                        C19770 +
                    (C19924 * C1174 + C19925 * C1169 -
                     (C19772 * C2690 + C50611 * C2695) * C1175 -
                     (C19772 * C2696 + C50611 * C2699) * C50686) *
                        C19771) *
                       C50771 * C1173) *
                  C50700) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                      C16984 * C130 + C16990 * C124 + C16985 * C131) *
                         C1174 +
                     (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                      C16984 * C144 + C16990 * C135 + C16985 * C145) *
                         C1169 -
                     (C17174 + C17175 + C17176) * C1175 -
                     (C17177 + C17178 + C17179) * C50686) *
                        C16986 +
                    ((C17176 + C17175 + C17174) * C1174 +
                     (C17179 + C17178 + C17177) * C1169 -
                     (C17510 + C17509 + C17508) * C1175 -
                     (C17513 + C17512 + C17511) * C50686) *
                        C50809) *
                       C50771 * C50945 +
                   (((C17180 + C17181 + C17182) * C1175 -
                     ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                       C16984 * C145 + C16988 * C134 + C16983 * C144) *
                          C1169 +
                      (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                       C16984 * C131 + C16988 * C123 + C16983 * C130) *
                          C1174) +
                     (C17183 + C17184 + C17185) * C50686) *
                        C16986 +
                    ((C17516 + C17515 + C17514) * C1175 -
                     ((C17185 + C17184 + C17183) * C1169 +
                      (C17182 + C17181 + C17180) * C1174) +
                     (C17519 + C17518 + C17517) * C50686) *
                        C50809) *
                       C50771 * C50930 +
                   (((C16988 * C124 + C16983 * C131 + C16989 * C125 +
                      C16984 * C132 + C16990 * C126 + C16985 * C138) *
                         C1174 +
                     (C16988 * C135 + C16983 * C145 + C16989 * C136 +
                      C16984 * C146 + C16990 * C137 + C16985 * C147) *
                         C1169 -
                     (C17186 + C17187 + C17188) * C1175 -
                     (C17189 + C17190 + C17191) * C50686) *
                        C16986 +
                    ((C17188 + C17187 + C17186) * C1174 +
                     (C17191 + C17190 + C17189) * C1169 -
                     (C16990 * C513 + C16985 * C522 + C16989 * C512 +
                      C16984 * C517 + C16988 * C511 + C16983 * C516) *
                         C1175 -
                     (C16990 * C523 + C16985 * C528 + C16989 * C521 +
                      C16984 * C527 + C16988 * C520 + C16983 * C526) *
                         C50686) *
                        C50809) *
                       C50771 * C1173) *
                  C50700) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C19772 * C122 + C50611 * C129) * C1174 +
                      (C19772 * C133 + C50611 * C143) * C1169 - C19908 * C1175 -
                      C19909 * C50686) *
                         C16986 +
                     (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                      C19911 * C50686) *
                         C50809) *
                        C5082 +
                    ((C22064 * C1174 + C22065 * C1169 - C20328 * C1175 -
                      C20329 * C50686) *
                         C16986 +
                     (C20328 * C1174 + C20329 * C1169 - C20330 * C1175 -
                      C20331 * C50686) *
                         C50809) *
                        C5083 +
                    ((C22066 * C1174 + C22067 * C1169 - C20548 * C1175 -
                      C20549 * C50686) *
                         C16986 +
                     (C20548 * C1174 + C20549 * C1169 - C20550 * C1175 -
                      C20551 * C50686) *
                         C50809) *
                        C5084) *
                       C50945 +
                   (((C19914 * C1175 -
                      ((C19772 * C134 + C50611 * C144) * C1169 +
                       (C19772 * C123 + C50611 * C130) * C1174) +
                      C19915 * C50686) *
                         C16986 +
                     (C19916 * C1175 - (C19915 * C1169 + C19914 * C1174) +
                      C19917 * C50686) *
                         C50809) *
                        C5082 +
                    ((C20962 * C1175 - (C22070 * C1169 + C22071 * C1174) +
                      C20963 * C50686) *
                         C16986 +
                     (C20964 * C1175 - (C20963 * C1169 + C20962 * C1174) +
                      C20965 * C50686) *
                         C50809) *
                        C5083 +
                    ((C21876 * C1175 - (C22068 * C1169 + C22069 * C1174) +
                      C21877 * C50686) *
                         C16986 +
                     (C22238 * C1175 - (C21877 * C1169 + C21876 * C1174) +
                      C22239 * C50686) *
                         C50809) *
                        C5084) *
                       C50930 +
                   ((((C19772 * C124 + C50611 * C131) * C1174 +
                      (C19772 * C135 + C50611 * C145) * C1169 - C19920 * C1175 -
                      C19921 * C50686) *
                         C16986 +
                     (C19920 * C1174 + C19921 * C1169 - C19922 * C1175 -
                      C19923 * C50686) *
                         C50809) *
                        C5082 +
                    ((C22072 * C1174 + C22073 * C1169 - C21878 * C1175 -
                      C21879 * C50686) *
                         C16986 +
                     (C21878 * C1174 + C21879 * C1169 -
                      (C19772 * C723 + C50611 * C735) * C1175 -
                      (C19772 * C739 + C50611 * C747) * C50686) *
                         C50809) *
                        C5083 +
                    ((C22074 * C1174 + C22075 * C1169 - C21880 * C1175 -
                      C21881 * C50686) *
                         C16986 +
                     (C21880 * C1174 + C21881 * C1169 -
                      (C19772 * C3196 + C50611 * C3202) * C1175 -
                      (C19772 * C3201 + C50611 * C3205) * C50686) *
                         C50809) *
                        C5084) *
                       C1173) *
                  C50700) /
                     (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C1279 +
            (C19772 * C133 + C50611 * C143) * C50946 - C19908 * C1280 -
            C19909 * C50933 + C19910 * C1281 + C19911 * C1276) *
               C19768 +
           (C19908 * C1279 + C19909 * C50946 - C19910 * C1280 -
            C19911 * C50933 + C19912 * C1281 + C19913 * C1276) *
               C19769 +
           (C19910 * C1279 + C19911 * C50946 - C19912 * C1280 -
            C19913 * C50933 + C20130 * C1281 + C20131 * C1276) *
               C19770 +
           (C19912 * C1279 + C19913 * C50946 - C20130 * C1280 -
            C20131 * C50933 + C20208 * C1281 + C20209 * C1276) *
               C19771) *
              C50771 * C1277 +
          ((C19914 * C1280 -
            ((C19772 * C134 + C50611 * C144) * C50946 +
             (C19772 * C123 + C50611 * C130) * C1279) +
            C19915 * C50933 - C19916 * C1281 - C19917 * C1276) *
               C19768 +
           (C19916 * C1280 - (C19915 * C50946 + C19914 * C1279) +
            C19917 * C50933 - C19918 * C1281 - C19919 * C1276) *
               C19769 +
           (C19918 * C1280 - (C19917 * C50946 + C19916 * C1279) +
            C19919 * C50933 - C20132 * C1281 - C20133 * C1276) *
               C19770 +
           (C20132 * C1280 - (C19919 * C50946 + C19918 * C1279) +
            C20133 * C50933 - (C19772 * C2826 + C50611 * C2828) * C1281 -
            (C19772 * C2830 + C50611 * C2832) * C1276) *
               C19771) *
              C50771 * C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C1279 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C50946 -
            (C17174 + C17175 + C17176) * C1280 -
            (C17177 + C17178 + C17179) * C50933 +
            (C17508 + C17509 + C17510) * C1281 +
            (C17511 + C17512 + C17513) * C1276) *
               C16986 +
           ((C17176 + C17175 + C17174) * C1279 +
            (C17179 + C17178 + C17177) * C50946 -
            (C17510 + C17509 + C17508) * C1280 -
            (C17513 + C17512 + C17511) * C50933 +
            (C17632 + C17631 + C17630) * C1281 +
            (C17635 + C17634 + C17633) * C1276) *
               C50809) *
              C50771 * C1277 +
          (((C17180 + C17181 + C17182) * C1280 -
            ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
              C16988 * C134 + C16983 * C144) *
                 C50946 +
             (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
              C16988 * C123 + C16983 * C130) *
                 C1279) +
            (C17183 + C17184 + C17185) * C50933 -
            (C17514 + C17515 + C17516) * C1281 -
            (C17517 + C17518 + C17519) * C1276) *
               C16986 +
           ((C17516 + C17515 + C17514) * C1280 -
            ((C17185 + C17184 + C17183) * C50946 +
             (C17182 + C17181 + C17180) * C1279) +
            (C17519 + C17518 + C17517) * C50933 -
            (C16990 * C604 + C16985 * C608 + C16989 * C605 + C16984 * C609 +
             C16988 * C606 + C16983 * C610) *
                C1281 -
            (C16990 * C612 + C16985 * C616 + C16989 * C613 + C16984 * C617 +
             C16988 * C614 + C16983 * C618) *
                C1276) *
               C50809) *
              C50771 * C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C1279 +
             (C19772 * C133 + C50611 * C143) * C50946 - C19908 * C1280 -
             C19909 * C50933 + C19910 * C1281 + C19911 * C1276) *
                C16986 +
            (C19908 * C1279 + C19909 * C50946 - C19910 * C1280 -
             C19911 * C50933 + C19912 * C1281 + C19913 * C1276) *
                C50809) *
               C5082 +
           ((C22064 * C1279 + C22065 * C50946 - C20328 * C1280 -
             C20329 * C50933 + C20330 * C1281 + C20331 * C1276) *
                C16986 +
            (C20328 * C1279 + C20329 * C50946 - C20330 * C1280 -
             C20331 * C50933 + C20332 * C1281 + C20333 * C1276) *
                C50809) *
               C5083 +
           ((C22066 * C1279 + C22067 * C50946 - C20548 * C1280 -
             C20549 * C50933 + C20550 * C1281 + C20551 * C1276) *
                C16986 +
            (C20548 * C1279 + C20549 * C50946 - C20550 * C1280 -
             C20551 * C50933 + C20552 * C1281 + C20553 * C1276) *
                C50809) *
               C5084) *
              C1277 +
          (((C19914 * C1280 -
             ((C19772 * C134 + C50611 * C144) * C50946 +
              (C19772 * C123 + C50611 * C130) * C1279) +
             C19915 * C50933 - C19916 * C1281 - C19917 * C1276) *
                C16986 +
            (C19916 * C1280 - (C19915 * C50946 + C19914 * C1279) +
             C19917 * C50933 - C19918 * C1281 - C19919 * C1276) *
                C50809) *
               C5082 +
           ((C20962 * C1280 - (C22070 * C50946 + C22071 * C1279) +
             C20963 * C50933 - C20964 * C1281 - C20965 * C1276) *
                C16986 +
            (C20964 * C1280 - (C20963 * C50946 + C20962 * C1279) +
             C20965 * C50933 - C20966 * C1281 - C20967 * C1276) *
                C50809) *
               C5083 +
           ((C21876 * C1280 - (C22068 * C50946 + C22069 * C1279) +
             C21877 * C50933 - C22238 * C1281 - C22239 * C1276) *
                C16986 +
            (C22238 * C1280 - (C21877 * C50946 + C21876 * C1279) +
             C22239 * C50933 - (C19772 * C3352 + C50611 * C3354) * C1281 -
             (C19772 * C3356 + C50611 * C3358) * C1276) *
                C50809) *
               C5084) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[107] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C19772 * C122 + C50611 * C129) * C1174 +
                      (C19772 * C133 + C50611 * C143) * C1169 - C19908 * C1175 -
                      C19909 * C50686) *
                         C19768 +
                     (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                      C19911 * C50686) *
                         C19769 +
                     (C19910 * C1174 + C19911 * C1169 - C19912 * C1175 -
                      C19913 * C50686) *
                         C19770 +
                     (C19912 * C1174 + C19913 * C1169 - C20130 * C1175 -
                      C20131 * C50686) *
                         C19771) *
                        C50771 * C1277 +
                    ((C19914 * C1175 -
                      ((C19772 * C134 + C50611 * C144) * C1169 +
                       (C19772 * C123 + C50611 * C130) * C1174) +
                      C19915 * C50686) *
                         C19768 +
                     (C19916 * C1175 - (C19915 * C1169 + C19914 * C1174) +
                      C19917 * C50686) *
                         C19769 +
                     (C19918 * C1175 - (C19917 * C1169 + C19916 * C1174) +
                      C19919 * C50686) *
                         C19770 +
                     (C20132 * C1175 - (C19919 * C1169 + C19918 * C1174) +
                      C20133 * C50686) *
                         C19771) *
                        C50771 * C50641) *
                       C50901 +
                   (((C20328 * C1175 -
                      ((C19772 * C393 + C50611 * C401) * C1169 +
                       (C19772 * C383 + C50611 * C394) * C1174) +
                      C20329 * C50686) *
                         C19768 +
                     (C20330 * C1175 - (C20329 * C1169 + C20328 * C1174) +
                      C20331 * C50686) *
                         C19769 +
                     (C20332 * C1175 - (C20331 * C1169 + C20330 * C1174) +
                      C20333 * C50686) *
                         C19770 +
                     (C20334 * C1175 - (C20333 * C1169 + C20332 * C1174) +
                      C20335 * C50686) *
                         C19771) *
                        C50771 * C1277 +
                    (((C19772 * C379 + C50611 * C385) * C1174 +
                      (C19772 * C389 + C50611 * C397) * C1169 - C20962 * C1175 -
                      C20963 * C50686) *
                         C19768 +
                     (C20962 * C1174 + C20963 * C1169 - C20964 * C1175 -
                      C20965 * C50686) *
                         C19769 +
                     (C20964 * C1174 + C20965 * C1169 - C20966 * C1175 -
                      C20967 * C50686) *
                         C19770 +
                     (C20966 * C1174 + C20967 * C1169 -
                      (C19772 * C2996 + C50611 * C3002) * C1175 -
                      (C19772 * C3004 + C50611 * C3008) * C50686) *
                         C19771) *
                        C50771 * C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                       C16984 * C130 + C16990 * C124 + C16985 * C131) *
                          C1174 +
                      (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                       C16984 * C144 + C16990 * C135 + C16985 * C145) *
                          C1169 -
                      (C17174 + C17175 + C17176) * C1175 -
                      (C17177 + C17178 + C17179) * C50686) *
                         C16986 +
                     ((C17176 + C17175 + C17174) * C1174 +
                      (C17179 + C17178 + C17177) * C1169 -
                      (C17510 + C17509 + C17508) * C1175 -
                      (C17513 + C17512 + C17511) * C50686) *
                         C50809) *
                        C50771 * C1277 +
                    (((C17180 + C17181 + C17182) * C1175 -
                      ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                        C16984 * C145 + C16988 * C134 + C16983 * C144) *
                           C1169 +
                       (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                        C16984 * C131 + C16988 * C123 + C16983 * C130) *
                           C1174) +
                      (C17183 + C17184 + C17185) * C50686) *
                         C16986 +
                     ((C17516 + C17515 + C17514) * C1175 -
                      ((C17185 + C17184 + C17183) * C1169 +
                       (C17182 + C17181 + C17180) * C1174) +
                      (C17519 + C17518 + C17517) * C50686) *
                         C50809) *
                        C50771 * C50641) *
                       C50901 +
                   ((((C17806 + C17807 + C17808) * C1175 -
                      ((C16990 * C390 + C16985 * C398 + C16989 * C389 +
                        C16984 * C397 + C16988 * C393 + C16983 * C401) *
                           C1169 +
                       (C16990 * C380 + C16985 * C386 + C16989 * C379 +
                        C16984 * C385 + C16988 * C383 + C16983 * C394) *
                           C1174) +
                      (C17809 + C17810 + C17811) * C50686) *
                         C16986 +
                     ((C17814 + C17813 + C17812) * C1175 -
                      ((C17811 + C17810 + C17809) * C1169 +
                       (C17808 + C17807 + C17806) * C1174) +
                      (C17817 + C17816 + C17815) * C50686) *
                         C50809) *
                        C50771 * C1277 +
                    (((C16988 * C379 + C16983 * C385 + C16989 * C380 +
                       C16984 * C386 + C16990 * C381 + C16985 * C387) *
                          C1174 +
                      (C16988 * C389 + C16983 * C397 + C16989 * C390 +
                       C16984 * C398 + C16990 * C391 + C16985 * C399) *
                          C1169 -
                      (C18724 + C18725 + C18726) * C1175 -
                      (C18727 + C18728 + C18729) * C50686) *
                         C16986 +
                     ((C18726 + C18725 + C18724) * C1174 +
                      (C18729 + C18728 + C18727) * C1169 -
                      (C16990 * C722 + C16985 * C734 + C16989 * C723 +
                       C16984 * C735 + C16988 * C724 + C16983 * C736) *
                          C1175 -
                      (C16990 * C738 + C16985 * C746 + C16989 * C739 +
                       C16984 * C747 + C16988 * C740 + C16983 * C748) *
                          C50686) *
                         C50809) *
                        C50771 * C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19772 * C122 + C50611 * C129) * C1174 +
                       (C19772 * C133 + C50611 * C143) * C1169 -
                       C19908 * C1175 - C19909 * C50686) *
                          C16986 +
                      (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                       C19911 * C50686) *
                          C50809) *
                         C5082 +
                     ((C23494 + C23495 - C23496 - C23497) * C16986 +
                      (C23498 + C23499 - C23500 - C23501) * C50809) *
                         C5083 +
                     ((C23502 + C23503 - C23504 - C23505) * C16986 +
                      (C23506 + C23507 - C23508 - C23509) * C50809) *
                         C5084) *
                        C1277 +
                    (((C19914 * C1175 -
                       ((C19772 * C134 + C50611 * C144) * C1169 +
                        (C19772 * C123 + C50611 * C130) * C1174) +
                       C19915 * C50686) *
                          C16986 +
                      (C19916 * C1175 - (C19915 * C1169 + C19914 * C1174) +
                       C19917 * C50686) *
                          C50809) *
                         C5082 +
                     ((C23510 - (C23511 + C23512) + C23513) * C16986 +
                      (C23514 - (C23515 + C23516) + C23517) * C50809) *
                         C5083 +
                     ((C23518 - (C23519 + C23520) + C23521) * C16986 +
                      (C23522 - (C23523 + C23524) + C23525) * C50809) *
                         C5084) *
                        C50641) *
                       C50901 +
                   ((((C23496 - (C23495 + C23494) + C23497) * C16986 +
                      (C23500 - (C23499 + C23498) + C23501) * C50809) *
                         C5082 +
                     ((C23504 - (C23503 + C23502) + C23505) * C16986 +
                      (C23508 - (C23507 + C23506) + C23509) * C50809) *
                         C5083 +
                     ((C22516 * C1175 - (C22692 * C1169 + C22693 * C1174) +
                       C22517 * C50686) *
                          C16986 +
                      (C22518 * C1175 - (C22517 * C1169 + C22516 * C1174) +
                       C22519 * C50686) *
                          C50809) *
                         C5084) *
                        C1277 +
                    (((C23512 + C23511 - C23510 - C23513) * C16986 +
                      (C23516 + C23515 - C23514 - C23517) * C50809) *
                         C5082 +
                     ((C23520 + C23519 - C23518 - C23521) * C16986 +
                      (C23524 + C23523 - C23522 - C23525) * C50809) *
                         C5083 +
                     ((C22688 * C1174 + C22689 * C1169 - C22690 * C1175 -
                       C22691 * C50686) *
                          C16986 +
                      (C22690 * C1174 + C22691 * C1169 -
                       (C19772 * C3482 + C50611 * C3488) * C1175 -
                       (C19772 * C3486 + C50611 * C3494) * C50686) *
                          C50809) *
                         C5084) *
                        C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q));
    d2ee[108] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C19772 * C122 + C50611 * C129) * C1174 +
                      (C19772 * C133 + C50611 * C143) * C1169 - C19908 * C1175 -
                      C19909 * C50686) *
                         C19768 +
                     (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                      C19911 * C50686) *
                         C19769 +
                     (C19910 * C1174 + C19911 * C1169 - C19912 * C1175 -
                      C19913 * C50686) *
                         C19770 +
                     (C19912 * C1174 + C19913 * C1169 - C20130 * C1175 -
                      C20131 * C50686) *
                         C19771) *
                        C50771 * C50892 +
                    ((C19914 * C1175 -
                      ((C19772 * C134 + C50611 * C144) * C1169 +
                       (C19772 * C123 + C50611 * C130) * C1174) +
                      C19915 * C50686) *
                         C19768 +
                     (C19916 * C1175 - (C19915 * C1169 + C19914 * C1174) +
                      C19917 * C50686) *
                         C19769 +
                     (C19918 * C1175 - (C19917 * C1169 + C19916 * C1174) +
                      C19919 * C50686) *
                         C19770 +
                     (C20132 * C1175 - (C19919 * C1169 + C19918 * C1174) +
                      C20133 * C50686) *
                         C19771) *
                        C50771 * C50641) *
                       C1514 +
                   (((C20328 * C1175 -
                      ((C19772 * C393 + C50611 * C401) * C1169 +
                       (C19772 * C383 + C50611 * C394) * C1174) +
                      C20329 * C50686) *
                         C19768 +
                     (C20330 * C1175 - (C20329 * C1169 + C20328 * C1174) +
                      C20331 * C50686) *
                         C19769 +
                     (C20332 * C1175 - (C20331 * C1169 + C20330 * C1174) +
                      C20333 * C50686) *
                         C19770 +
                     (C20334 * C1175 - (C20333 * C1169 + C20332 * C1174) +
                      C20335 * C50686) *
                         C19771) *
                        C50771 * C50892 +
                    (((C19772 * C379 + C50611 * C385) * C1174 +
                      (C19772 * C389 + C50611 * C397) * C1169 - C20962 * C1175 -
                      C20963 * C50686) *
                         C19768 +
                     (C20962 * C1174 + C20963 * C1169 - C20964 * C1175 -
                      C20965 * C50686) *
                         C19769 +
                     (C20964 * C1174 + C20965 * C1169 - C20966 * C1175 -
                      C20967 * C50686) *
                         C19770 +
                     (C20966 * C1174 + C20967 * C1169 -
                      (C19772 * C2996 + C50611 * C3002) * C1175 -
                      (C19772 * C3004 + C50611 * C3008) * C50686) *
                         C19771) *
                        C50771 * C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                       C16984 * C130 + C16990 * C124 + C16985 * C131) *
                          C1174 +
                      (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                       C16984 * C144 + C16990 * C135 + C16985 * C145) *
                          C1169 -
                      (C17174 + C17175 + C17176) * C1175 -
                      (C17177 + C17178 + C17179) * C50686) *
                         C16986 +
                     ((C17176 + C17175 + C17174) * C1174 +
                      (C17179 + C17178 + C17177) * C1169 -
                      (C17510 + C17509 + C17508) * C1175 -
                      (C17513 + C17512 + C17511) * C50686) *
                         C50809) *
                        C50771 * C50892 +
                    (((C17180 + C17181 + C17182) * C1175 -
                      ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                        C16984 * C145 + C16988 * C134 + C16983 * C144) *
                           C1169 +
                       (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                        C16984 * C131 + C16988 * C123 + C16983 * C130) *
                           C1174) +
                      (C17183 + C17184 + C17185) * C50686) *
                         C16986 +
                     ((C17516 + C17515 + C17514) * C1175 -
                      ((C17185 + C17184 + C17183) * C1169 +
                       (C17182 + C17181 + C17180) * C1174) +
                      (C17519 + C17518 + C17517) * C50686) *
                         C50809) *
                        C50771 * C50641) *
                       C1514 +
                   ((((C17806 + C17807 + C17808) * C1175 -
                      ((C16990 * C390 + C16985 * C398 + C16989 * C389 +
                        C16984 * C397 + C16988 * C393 + C16983 * C401) *
                           C1169 +
                       (C16990 * C380 + C16985 * C386 + C16989 * C379 +
                        C16984 * C385 + C16988 * C383 + C16983 * C394) *
                           C1174) +
                      (C17809 + C17810 + C17811) * C50686) *
                         C16986 +
                     ((C17814 + C17813 + C17812) * C1175 -
                      ((C17811 + C17810 + C17809) * C1169 +
                       (C17808 + C17807 + C17806) * C1174) +
                      (C17817 + C17816 + C17815) * C50686) *
                         C50809) *
                        C50771 * C50892 +
                    (((C16988 * C379 + C16983 * C385 + C16989 * C380 +
                       C16984 * C386 + C16990 * C381 + C16985 * C387) *
                          C1174 +
                      (C16988 * C389 + C16983 * C397 + C16989 * C390 +
                       C16984 * C398 + C16990 * C391 + C16985 * C399) *
                          C1169 -
                      (C18724 + C18725 + C18726) * C1175 -
                      (C18727 + C18728 + C18729) * C50686) *
                         C16986 +
                     ((C18726 + C18725 + C18724) * C1174 +
                      (C18729 + C18728 + C18727) * C1169 -
                      (C16990 * C722 + C16985 * C734 + C16989 * C723 +
                       C16984 * C735 + C16988 * C724 + C16983 * C736) *
                          C1175 -
                      (C16990 * C738 + C16985 * C746 + C16989 * C739 +
                       C16984 * C747 + C16988 * C740 + C16983 * C748) *
                          C50686) *
                         C50809) *
                        C50771 * C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19772 * C122 + C50611 * C129) * C1174 +
                       (C19772 * C133 + C50611 * C143) * C1169 -
                       C19908 * C1175 - C19909 * C50686) *
                          C16986 +
                      (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                       C19911 * C50686) *
                          C50809) *
                         C5082 +
                     ((C23494 + C23495 - C23496 - C23497) * C16986 +
                      (C23498 + C23499 - C23500 - C23501) * C50809) *
                         C5083 +
                     ((C23502 + C23503 - C23504 - C23505) * C16986 +
                      (C23506 + C23507 - C23508 - C23509) * C50809) *
                         C5084) *
                        C50892 +
                    (((C19914 * C1175 -
                       ((C19772 * C134 + C50611 * C144) * C1169 +
                        (C19772 * C123 + C50611 * C130) * C1174) +
                       C19915 * C50686) *
                          C16986 +
                      (C19916 * C1175 - (C19915 * C1169 + C19914 * C1174) +
                       C19917 * C50686) *
                          C50809) *
                         C5082 +
                     ((C23510 - (C23511 + C23512) + C23513) * C16986 +
                      (C23514 - (C23515 + C23516) + C23517) * C50809) *
                         C5083 +
                     ((C23518 - (C23519 + C23520) + C23521) * C16986 +
                      (C23522 - (C23523 + C23524) + C23525) * C50809) *
                         C5084) *
                        C50641) *
                       C1514 +
                   ((((C23496 - (C23495 + C23494) + C23497) * C16986 +
                      (C23500 - (C23499 + C23498) + C23501) * C50809) *
                         C5082 +
                     ((C23504 - (C23503 + C23502) + C23505) * C16986 +
                      (C23508 - (C23507 + C23506) + C23509) * C50809) *
                         C5083 +
                     ((C22516 * C1175 - (C22692 * C1169 + C22693 * C1174) +
                       C22517 * C50686) *
                          C16986 +
                      (C22518 * C1175 - (C22517 * C1169 + C22516 * C1174) +
                       C22519 * C50686) *
                          C50809) *
                         C5084) *
                        C50892 +
                    (((C23512 + C23511 - C23510 - C23513) * C16986 +
                      (C23516 + C23515 - C23514 - C23517) * C50809) *
                         C5082 +
                     ((C23520 + C23519 - C23518 - C23521) * C16986 +
                      (C23524 + C23523 - C23522 - C23525) * C50809) *
                         C5083 +
                     ((C22688 * C1174 + C22689 * C1169 - C22690 * C1175 -
                       C22691 * C50686) *
                          C16986 +
                      (C22690 * C1174 + C22691 * C1169 -
                       (C19772 * C3482 + C50611 * C3488) * C1175 -
                       (C19772 * C3486 + C50611 * C3494) * C50686) *
                          C50809) *
                         C5084) *
                        C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C1279 +
            (C19772 * C133 + C50611 * C143) * C50946 - C19908 * C1280 -
            C19909 * C50933 + C19910 * C1281 + C19911 * C1276) *
               C19768 +
           (C19908 * C1279 + C19909 * C50946 - C19910 * C1280 -
            C19911 * C50933 + C19912 * C1281 + C19913 * C1276) *
               C19769 +
           (C19910 * C1279 + C19911 * C50946 - C19912 * C1280 -
            C19913 * C50933 + C20130 * C1281 + C20131 * C1276) *
               C19770 +
           (C19912 * C1279 + C19913 * C50946 - C20130 * C1280 -
            C20131 * C50933 + C20208 * C1281 + C20209 * C1276) *
               C19771) *
              C50771 * C50636 * C1514 +
          ((C20328 * C1280 -
            ((C19772 * C393 + C50611 * C401) * C50946 +
             (C19772 * C383 + C50611 * C394) * C1279) +
            C20329 * C50933 - C20330 * C1281 - C20331 * C1276) *
               C19768 +
           (C20330 * C1280 - (C20329 * C50946 + C20328 * C1279) +
            C20331 * C50933 - C20332 * C1281 - C20333 * C1276) *
               C19769 +
           (C20332 * C1280 - (C20331 * C50946 + C20330 * C1279) +
            C20333 * C50933 - C20334 * C1281 - C20335 * C1276) *
               C19770 +
           (C20334 * C1280 - (C20333 * C50946 + C20332 * C1279) +
            C20335 * C50933 - (C19772 * C20307 + C50611 * C20308) * C1281 -
            (C19772 * C20309 + C50611 * C20310) * C1276) *
               C19771) *
              C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C1279 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C50946 -
            (C17174 + C17175 + C17176) * C1280 -
            (C17177 + C17178 + C17179) * C50933 +
            (C17508 + C17509 + C17510) * C1281 +
            (C17511 + C17512 + C17513) * C1276) *
               C16986 +
           ((C17176 + C17175 + C17174) * C1279 +
            (C17179 + C17178 + C17177) * C50946 -
            (C17510 + C17509 + C17508) * C1280 -
            (C17513 + C17512 + C17511) * C50933 +
            (C17632 + C17631 + C17630) * C1281 +
            (C17635 + C17634 + C17633) * C1276) *
               C50809) *
              C50771 * C50636 * C1514 +
          (((C17806 + C17807 + C17808) * C1280 -
            ((C16990 * C390 + C16985 * C398 + C16989 * C389 + C16984 * C397 +
              C16988 * C393 + C16983 * C401) *
                 C50946 +
             (C16990 * C380 + C16985 * C386 + C16989 * C379 + C16984 * C385 +
              C16988 * C383 + C16983 * C394) *
                 C1279) +
            (C17809 + C17810 + C17811) * C50933 -
            (C17812 + C17813 + C17814) * C1281 -
            (C17815 + C17816 + C17817) * C1276) *
               C16986 +
           ((C17814 + C17813 + C17812) * C1280 -
            ((C17811 + C17810 + C17809) * C50946 +
             (C17808 + C17807 + C17806) * C1279) +
            (C17817 + C17816 + C17815) * C50933 -
            (C16990 * C3984 + C16985 * C3985 + C16989 * C2994 + C16984 * C2998 +
             C16988 * C2995 + C16983 * C2999) *
                C1281 -
            (C16990 * C3986 + C16985 * C3987 + C16989 * C3000 + C16984 * C3006 +
             C16988 * C3001 + C16983 * C3007) *
                C1276) *
               C50809) *
              C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C1279 +
             (C19772 * C133 + C50611 * C143) * C50946 - C19908 * C1280 -
             C19909 * C50933 + C19910 * C1281 + C19911 * C1276) *
                C16986 +
            (C19908 * C1279 + C19909 * C50946 - C19910 * C1280 -
             C19911 * C50933 + C19912 * C1281 + C19913 * C1276) *
                C50809) *
               C5082 +
           ((C24368 + C24369 - C24370 - C24371 + C24372 + C24373) * C16986 +
            (C24374 + C24375 - C24376 - C24377 + C24378 + C24379) * C50809) *
               C5083 +
           ((C24380 + C24381 - C24382 - C24383 + C24384 + C24385) * C16986 +
            (C24386 + C24387 - C24388 - C24389 + C24390 + C24391) * C50809) *
               C5084) *
              C50636 * C1514 +
          (((C24370 - (C24369 + C24368) + C24371 - C24372 - C24373) * C16986 +
            (C24376 - (C24375 + C24374) + C24377 - C24378 - C24379) * C50809) *
               C5082 +
           ((C24382 - (C24381 + C24380) + C24383 - C24384 - C24385) * C16986 +
            (C24388 - (C24387 + C24386) + C24389 - C24390 - C24391) * C50809) *
               C5083 +
           ((C22516 * C1280 - (C22692 * C50946 + C22693 * C1279) +
             C22517 * C50933 - C22518 * C1281 - C22519 * C1276) *
                C16986 +
            (C22518 * C1280 - (C22517 * C50946 + C22516 * C1279) +
             C22519 * C50933 - (C19772 * C20619 + C50611 * C20621) * C1281 -
             (C19772 * C20620 + C50611 * C20622) * C1276) *
                C50809) *
               C5084) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C19772 * C122 + C50611 * C129) * C1174 +
                     (C19772 * C133 + C50611 * C143) * C1169 - C19908 * C1175 -
                     C19909 * C50686) *
                        C19768 +
                    (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                     C19911 * C50686) *
                        C19769 +
                    (C19910 * C1174 + C19911 * C1169 - C19912 * C1175 -
                     C19913 * C50686) *
                        C19770 +
                    (C19912 * C1174 + C19913 * C1169 - C20130 * C1175 -
                     C20131 * C50686) *
                        C19771) *
                       C50771 * C50636 * C50947 +
                   ((C20328 * C1175 -
                     ((C19772 * C393 + C50611 * C401) * C1169 +
                      (C19772 * C383 + C50611 * C394) * C1174) +
                     C20329 * C50686) *
                        C19768 +
                    (C20330 * C1175 - (C20329 * C1169 + C20328 * C1174) +
                     C20331 * C50686) *
                        C19769 +
                    (C20332 * C1175 - (C20331 * C1169 + C20330 * C1174) +
                     C20333 * C50686) *
                        C19770 +
                    (C20334 * C1175 - (C20333 * C1169 + C20332 * C1174) +
                     C20335 * C50686) *
                        C19771) *
                       C50771 * C50636 * C50936 +
                   (((C19772 * C851 + C50611 * C856) * C1174 +
                     (C19772 * C860 + C50611 * C866) * C1169 - C20548 * C1175 -
                     C20549 * C50686) *
                        C19768 +
                    (C20548 * C1174 + C20549 * C1169 - C20550 * C1175 -
                     C20551 * C50686) *
                        C19769 +
                    (C20550 * C1174 + C20551 * C1169 - C20552 * C1175 -
                     C20553 * C50686) *
                        C19770 +
                    (C20552 * C1174 + C20553 * C1169 -
                     (C19772 * C20531 + C50611 * C20532) * C1175 -
                     (C19772 * C20533 + C50611 * C20534) * C50686) *
                        C19771) *
                       C50771 * C50636 * C1746)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                      C16984 * C130 + C16990 * C124 + C16985 * C131) *
                         C1174 +
                     (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                      C16984 * C144 + C16990 * C135 + C16985 * C145) *
                         C1169 -
                     (C17174 + C17175 + C17176) * C1175 -
                     (C17177 + C17178 + C17179) * C50686) *
                        C16986 +
                    ((C17176 + C17175 + C17174) * C1174 +
                     (C17179 + C17178 + C17177) * C1169 -
                     (C17510 + C17509 + C17508) * C1175 -
                     (C17513 + C17512 + C17511) * C50686) *
                        C50809) *
                       C50771 * C50636 * C50947 +
                   (((C17806 + C17807 + C17808) * C1175 -
                     ((C16990 * C390 + C16985 * C398 + C16989 * C389 +
                       C16984 * C397 + C16988 * C393 + C16983 * C401) *
                          C1169 +
                      (C16990 * C380 + C16985 * C386 + C16989 * C379 +
                       C16984 * C385 + C16988 * C383 + C16983 * C394) *
                          C1174) +
                     (C17809 + C17810 + C17811) * C50686) *
                        C16986 +
                    ((C17814 + C17813 + C17812) * C1175 -
                     ((C17811 + C17810 + C17809) * C1169 +
                      (C17808 + C17807 + C17806) * C1174) +
                     (C17817 + C17816 + C17815) * C50686) *
                        C50809) *
                       C50771 * C50636 * C50936 +
                   (((C16988 * C851 + C16983 * C856 + C16989 * C852 +
                      C16984 * C857 + C16990 * C853 + C16985 * C858) *
                         C1174 +
                     (C16988 * C860 + C16983 * C866 + C16989 * C861 +
                      C16984 * C867 + C16990 * C862 + C16985 * C868) *
                         C1169 -
                     (C18122 + C18123 + C18124) * C1175 -
                     (C18125 + C18126 + C18127) * C50686) *
                        C16986 +
                    ((C18124 + C18123 + C18122) * C1174 +
                     (C18127 + C18126 + C18125) * C1169 -
                     (C16990 * C3196 + C16985 * C3202 + C16989 * C3195 +
                      C16984 * C3198 + C16988 * C3194 + C16983 * C3197) *
                         C1175 -
                     (C16990 * C3201 + C16985 * C3205 + C16989 * C3200 +
                      C16984 * C3204 + C16988 * C3199 + C16983 * C3203) *
                         C50686) *
                        C50809) *
                       C50771 * C50636 * C1746)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C19772 * C122 + C50611 * C129) * C1174 +
                      (C19772 * C133 + C50611 * C143) * C1169 - C19908 * C1175 -
                      C19909 * C50686) *
                         C16986 +
                     (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                      C19911 * C50686) *
                         C50809) *
                        C5082 +
                    ((C23494 + C23495 - C23496 - C23497) * C16986 +
                     (C23498 + C23499 - C23500 - C23501) * C50809) *
                        C5083 +
                    C24554 * C5084) *
                       C50636 * C50947 +
                   (((C23496 - (C23495 + C23494) + C23497) * C16986 +
                     (C23500 - (C23499 + C23498) + C23501) * C50809) *
                        C5082 +
                    ((C23504 - (C23503 + C23502) + C23505) * C16986 +
                     (C23508 - (C23507 + C23506) + C23509) * C50809) *
                        C5083 +
                    ((C24540 - (C24541 + C24542) + C24543) * C16986 +
                     (C24544 - (C24545 + C24546) + C24547) * C50809) *
                        C5084) *
                       C50636 * C50936 +
                   (C24554 * C5082 +
                    ((C24542 + C24541 - C24540 - C24543) * C16986 +
                     (C24546 + C24545 - C24544 - C24547) * C50809) *
                        C5083 +
                    ((C23003 * C1174 + C23004 * C1169 - C22882 * C1175 -
                      C22883 * C50686) *
                         C16986 +
                     (C22882 * C1174 + C22883 * C1169 -
                      (C19772 * C22847 + C50611 * C22848) * C1175 -
                      (C19772 * C22849 + C50611 * C22850) * C50686) *
                         C50809) *
                        C5084) *
                       C50636 * C1746)) /
                     (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
                 C16990 * C124 + C16985 * C131) *
                    C121 +
                (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
                 C16990 * C135 + C16985 * C145) *
                    C50670) *
                   C16986 +
               ((C16988 * C258 + C16983 * C264 + C16989 * C257 + C16984 * C263 +
                 C16990 * C256 + C16985 * C262) *
                    C121 +
                (C16988 * C268 + C16983 * C276 + C16989 * C267 + C16984 * C275 +
                 C16990 * C266 + C16985 * C274) *
                    C50670) *
                   C50809) *
                  C50771 * C112 -
              (((C16990 * C265 + C16985 * C273 + C16989 * C266 + C16984 * C274 +
                 C16988 * C267 + C16983 * C275) *
                    C50670 +
                (C16990 * C255 + C16985 * C261 + C16989 * C256 + C16984 * C262 +
                 C16988 * C257 + C16983 * C263) *
                    C121) *
                   C50809 +
               ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
                 C16988 * C134 + C16983 * C144) *
                    C50670 +
                (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
                 C16988 * C123 + C16983 * C130) *
                    C121) *
                   C16986) *
                  C50771 * C113 +
              (((C16988 * C124 + C16983 * C131 + C16989 * C125 + C16984 * C132 +
                 C16990 * C126 + C16985 * C138) *
                    C121 +
                (C16988 * C135 + C16983 * C145 + C16989 * C136 + C16984 * C146 +
                 C16990 * C137 + C16985 * C147) *
                    C50670) *
                   C16986 +
               ((C16988 * C256 + C16983 * C262 + C16989 * C255 + C16984 * C261 +
                 C16990 * C259 + C16985 * C269) *
                    C121 +
                (C16988 * C266 + C16983 * C274 + C16989 * C265 + C16984 * C273 +
                 C16990 * C270 + C16985 * C277) *
                    C50670) *
                   C50809) *
                  C50771 * C114 -
              (((C16990 * C272 + C16985 * C278 + C16989 * C270 + C16984 * C277 +
                 C16988 * C265 + C16983 * C273) *
                    C50670 +
                (C16990 * C260 + C16985 * C271 + C16989 * C259 + C16984 * C269 +
                 C16988 * C255 + C16983 * C261) *
                    C121) *
                   C50809 +
               ((C16990 * C140 + C16985 * C148 + C16989 * C137 + C16984 * C147 +
                 C16988 * C136 + C16983 * C146) *
                    C50670 +
                (C16990 * C127 + C16985 * C139 + C16989 * C126 + C16984 * C138 +
                 C16988 * C125 + C16983 * C132) *
                    C121) *
                   C16986) *
                  C50771 * C115) *
             C50700 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
                 C16990 * C124 + C16985 * C131) *
                    C506 +
                (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
                 C16990 * C135 + C16985 * C145) *
                    C501 -
                (C17174 + C17175 + C17176) * C507 -
                (C17177 + C17178 + C17179) * C502 +
                (C17508 + C17509 + C17510) * C508 +
                (C17511 + C17512 + C17513) * C503) *
                   C16986 +
               ((C17176 + C17175 + C17174) * C506 +
                (C17179 + C17178 + C17177) * C501 -
                (C17510 + C17509 + C17508) * C507 -
                (C17513 + C17512 + C17511) * C502 +
                (C16988 * C607 + C16983 * C611 + C16989 * C606 + C16984 * C610 +
                 C16990 * C605 + C16985 * C609) *
                    C508 +
                (C16988 * C615 + C16983 * C619 + C16989 * C614 + C16984 * C618 +
                 C16990 * C613 + C16985 * C617) *
                    C503) *
                   C50809) *
                  C50771 * C50892 +
              (((C17180 + C17181 + C17182) * C507 -
                ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                  C16984 * C145 + C16988 * C134 + C16983 * C144) *
                     C501 +
                 (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                  C16984 * C131 + C16988 * C123 + C16983 * C130) *
                     C506) +
                (C17183 + C17184 + C17185) * C502 -
                (C17514 + C17515 + C17516) * C508 -
                (C17517 + C17518 + C17519) * C503) *
                   C16986 +
               ((C17516 + C17515 + C17514) * C507 -
                ((C17185 + C17184 + C17183) * C501 +
                 (C17182 + C17181 + C17180) * C506) +
                (C17519 + C17518 + C17517) * C502 -
                (C16990 * C604 + C16985 * C608 + C16989 * C605 + C16984 * C609 +
                 C16988 * C606 + C16983 * C610) *
                    C508 -
                (C16990 * C612 + C16985 * C616 + C16989 * C613 + C16984 * C617 +
                 C16988 * C614 + C16983 * C618) *
                    C503) *
                   C50809) *
                  C50771 * C50641) *
             C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
              C16990 * C124 + C16985 * C131) *
                 C121 +
             (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
              C16990 * C135 + C16985 * C145) *
                 C50670) *
                C16986 +
            ((C17176 + C17175 + C17174) * C121 +
             (C17179 + C17178 + C17177) * C50670) *
                C50809) *
               C50771 * C50892 -
           (((C17185 + C17184 + C17183) * C50670 +
             (C17182 + C17181 + C17180) * C121) *
                C50809 +
            ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
              C16988 * C134 + C16983 * C144) *
                 C50670 +
             (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
              C16988 * C123 + C16983 * C130) *
                 C121) *
                C16986) *
               C50771 * C50641) *
              C848 +
          ((((C16988 * C379 + C16983 * C385 + C16989 * C380 + C16984 * C386 +
              C16990 * C381 + C16985 * C387) *
                 C121 +
             (C16988 * C389 + C16983 * C397 + C16989 * C390 + C16984 * C398 +
              C16990 * C391 + C16985 * C399) *
                 C50670) *
                C16986 +
            ((C16988 * C719 + C16983 * C727 + C16989 * C720 + C16984 * C728 +
              C16990 * C721 + C16985 * C729) *
                 C121 +
             (C16988 * C731 + C16983 * C743 + C16989 * C732 + C16984 * C744 +
              C16990 * C733 + C16985 * C745) *
                 C50670) *
                C50809) *
               C50771 * C50641 -
           (((C17811 + C17810 + C17809) * C50670 +
             (C17808 + C17807 + C17806) * C121) *
                C50809 +
            ((C16990 * C390 + C16985 * C398 + C16989 * C389 + C16984 * C397 +
              C16988 * C393 + C16983 * C401) *
                 C50670 +
             (C16990 * C380 + C16985 * C386 + C16989 * C379 + C16984 * C385 +
              C16988 * C383 + C16983 * C394) *
                 C121) *
                C16986) *
               C50771 * C50892) *
              C849 +
          ((((C16988 * C851 + C16983 * C856 + C16989 * C852 + C16984 * C857 +
              C16990 * C853 + C16985 * C858) *
                 C121 +
             (C16988 * C860 + C16983 * C866 + C16989 * C861 + C16984 * C867 +
              C16990 * C862 + C16985 * C868) *
                 C50670) *
                C16986 +
            ((C16988 * C972 + C16983 * C976 + C16989 * C971 + C16984 * C975 +
              C16990 * C970 + C16985 * C974) *
                 C121 +
             (C16988 * C980 + C16983 * C984 + C16989 * C979 + C16984 * C983 +
              C16990 * C978 + C16985 * C982) *
                 C50670) *
                C50809) *
               C50771 * C50892 -
           (((C16990 * C977 + C16985 * C981 + C16989 * C978 + C16984 * C982 +
              C16988 * C979 + C16983 * C983) *
                 C50670 +
             (C16990 * C969 + C16985 * C973 + C16989 * C970 + C16984 * C974 +
              C16988 * C971 + C16983 * C975) *
                 C121) *
                C50809 +
            ((C16990 * C863 + C16985 * C869 + C16989 * C862 + C16984 * C868 +
              C16988 * C861 + C16983 * C867) *
                 C50670 +
             (C16990 * C854 + C16985 * C859 + C16989 * C853 + C16984 * C858 +
              C16988 * C852 + C16983 * C857) *
                 C121) *
                C16986) *
               C50771 * C50641) *
              C850)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C121 +
            (C19772 * C133 + C50611 * C143) * C50670) *
               C19768 +
           ((C19772 * C258 + C50611 * C264) * C121 +
            (C19772 * C268 + C50611 * C276) * C50670) *
               C19769 +
           ((C19772 * C509 + C50611 * C514) * C121 +
            (C19772 * C518 + C50611 * C524) * C50670) *
               C19770 +
           ((C19772 * C607 + C50611 * C611) * C121 +
            (C19772 * C615 + C50611 * C619) * C50670) *
               C19771) *
              C50771 * C112 -
          (((C19772 * C614 + C50611 * C618) * C50670 +
            (C19772 * C606 + C50611 * C610) * C121) *
               C19771 +
           ((C19772 * C519 + C50611 * C525) * C50670 +
            (C19772 * C510 + C50611 * C515) * C121) *
               C19770 +
           ((C19772 * C267 + C50611 * C275) * C50670 +
            (C19772 * C257 + C50611 * C263) * C121) *
               C19769 +
           ((C19772 * C134 + C50611 * C144) * C50670 +
            (C19772 * C123 + C50611 * C130) * C121) *
               C19768) *
              C50771 * C113 +
          (((C19772 * C124 + C50611 * C131) * C121 +
            (C19772 * C135 + C50611 * C145) * C50670) *
               C19768 +
           ((C19772 * C256 + C50611 * C262) * C121 +
            (C19772 * C266 + C50611 * C274) * C50670) *
               C19769 +
           ((C19772 * C511 + C50611 * C516) * C121 +
            (C19772 * C520 + C50611 * C526) * C50670) *
               C19770 +
           ((C19772 * C605 + C50611 * C609) * C121 +
            (C19772 * C613 + C50611 * C617) * C50670) *
               C19771) *
              C50771 * C114 -
          (((C19772 * C612 + C50611 * C616) * C50670 +
            (C19772 * C604 + C50611 * C608) * C121) *
               C19771 +
           ((C19772 * C521 + C50611 * C527) * C50670 +
            (C19772 * C512 + C50611 * C517) * C121) *
               C19770 +
           ((C19772 * C265 + C50611 * C273) * C50670 +
            (C19772 * C255 + C50611 * C261) * C121) *
               C19769 +
           ((C19772 * C136 + C50611 * C146) * C50670 +
            (C19772 * C125 + C50611 * C132) * C121) *
               C19768) *
              C50771 * C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C506 +
            (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
            C19909 * C502 + C19910 * C508 + C19911 * C503) *
               C19768 +
           (C19908 * C506 + C19909 * C501 - C19910 * C507 - C19911 * C502 +
            C19912 * C508 + C19913 * C503) *
               C19769 +
           (C19910 * C506 + C19911 * C501 - C19912 * C507 - C19913 * C502 +
            C20130 * C508 + C20131 * C503) *
               C19770 +
           (C19912 * C506 + C19913 * C501 - C20130 * C507 - C20131 * C502 +
            (C19772 * C2827 + C50611 * C2829) * C508 +
            (C19772 * C2831 + C50611 * C2833) * C503) *
               C19771) *
              C50771 * C50892 +
          ((C19914 * C507 -
            ((C19772 * C134 + C50611 * C144) * C501 +
             (C19772 * C123 + C50611 * C130) * C506) +
            C19915 * C502 - C19916 * C508 - C19917 * C503) *
               C19768 +
           (C19916 * C507 - (C19915 * C501 + C19914 * C506) + C19917 * C502 -
            C19918 * C508 - C19919 * C503) *
               C19769 +
           (C19918 * C507 - (C19917 * C501 + C19916 * C506) + C19919 * C502 -
            C20132 * C508 - C20133 * C503) *
               C19770 +
           (C20132 * C507 - (C19919 * C501 + C19918 * C506) + C20133 * C502 -
            (C19772 * C2826 + C50611 * C2828) * C508 -
            (C19772 * C2830 + C50611 * C2832) * C503) *
               C19771) *
              C50771 * C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C19772 * C122 + C50611 * C129) * C121 +
                                 (C19772 * C133 + C50611 * C143) * C50670) *
                                    C19768 +
                                (C19908 * C121 + C19909 * C50670) * C19769 +
                                (C19910 * C121 + C19911 * C50670) * C19770 +
                                (C19912 * C121 + C19913 * C50670) * C19771) *
                                   C50771 * C50892 -
                               ((C19919 * C50670 + C19918 * C121) * C19771 +
                                (C19917 * C50670 + C19916 * C121) * C19770 +
                                (C19915 * C50670 + C19914 * C121) * C19769 +
                                ((C19772 * C134 + C50611 * C144) * C50670 +
                                 (C19772 * C123 + C50611 * C130) * C121) *
                                    C19768) *
                                   C50771 * C50641) *
                                  C848 +
                              ((((C19772 * C379 + C50611 * C385) * C121 +
                                 (C19772 * C389 + C50611 * C397) * C50670) *
                                    C19768 +
                                ((C19772 * C719 + C50611 * C727) * C121 +
                                 (C19772 * C731 + C50611 * C743) * C50670) *
                                    C19769 +
                                ((C19772 * C724 + C50611 * C736) * C121 +
                                 (C19772 * C740 + C50611 * C748) * C50670) *
                                    C19770 +
                                ((C19772 * C2994 + C50611 * C2998) * C121 +
                                 (C19772 * C3000 + C50611 * C3006) * C50670) *
                                    C19771) *
                                   C50771 * C50641 -
                               ((C20333 * C50670 + C20332 * C121) * C19771 +
                                (C20331 * C50670 + C20330 * C121) * C19770 +
                                (C20329 * C50670 + C20328 * C121) * C19769 +
                                ((C19772 * C393 + C50611 * C401) * C50670 +
                                 (C19772 * C383 + C50611 * C394) * C121) *
                                    C19768) *
                                   C50771 * C50892) *
                                  C849 +
                              ((((C19772 * C851 + C50611 * C856) * C121 +
                                 (C19772 * C860 + C50611 * C866) * C50670) *
                                    C19768 +
                                ((C19772 * C972 + C50611 * C976) * C121 +
                                 (C19772 * C980 + C50611 * C984) * C50670) *
                                    C19769 +
                                ((C19772 * C3194 + C50611 * C3197) * C121 +
                                 (C19772 * C3199 + C50611 * C3203) * C50670) *
                                    C19770 +
                                ((C19772 * C3353 + C50611 * C3355) * C121 +
                                 (C19772 * C3357 + C50611 * C3359) * C50670) *
                                    C19771) *
                                   C50771 * C50892 -
                               (((C19772 * C3356 + C50611 * C3358) * C50670 +
                                 (C19772 * C3352 + C50611 * C3354) * C121) *
                                    C19771 +
                                ((C19772 * C3200 + C50611 * C3204) * C50670 +
                                 (C19772 * C3195 + C50611 * C3198) * C121) *
                                    C19770 +
                                ((C19772 * C979 + C50611 * C983) * C50670 +
                                 (C19772 * C971 + C50611 * C975) * C121) *
                                    C19769 +
                                ((C19772 * C861 + C50611 * C867) * C50670 +
                                 (C19772 * C852 + C50611 * C857) * C121) *
                                    C19768) *
                                   C50771 * C50641) *
                                  C850)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C121 +
             (C19772 * C133 + C50611 * C143) * C50670) *
                C16986 +
            (C19908 * C121 + C19909 * C50670) * C50809) *
               C5082 +
           (((C19772 * C383 + C50611 * C394) * C121 +
             (C19772 * C393 + C50611 * C401) * C50670) *
                C16986 +
            (C20328 * C121 + C20329 * C50670) * C50809) *
               C5083 +
           (((C19772 * C851 + C50611 * C856) * C121 +
             (C19772 * C860 + C50611 * C866) * C50670) *
                C16986 +
            (C20548 * C121 + C20549 * C50670) * C50809) *
               C5084) *
              C112 -
          ((((C19772 * C979 + C50611 * C983) * C50670 +
             (C19772 * C971 + C50611 * C975) * C121) *
                C50809 +
            ((C19772 * C861 + C50611 * C867) * C50670 +
             (C19772 * C852 + C50611 * C857) * C121) *
                C16986) *
               C5084 +
           ((C20963 * C50670 + C20962 * C121) * C50809 +
            ((C19772 * C389 + C50611 * C397) * C50670 +
             (C19772 * C379 + C50611 * C385) * C121) *
                C16986) *
               C5083 +
           ((C19915 * C50670 + C19914 * C121) * C50809 +
            ((C19772 * C134 + C50611 * C144) * C50670 +
             (C19772 * C123 + C50611 * C130) * C121) *
                C16986) *
               C5082) *
              C113 +
          ((((C19772 * C124 + C50611 * C131) * C121 +
             (C19772 * C135 + C50611 * C145) * C50670) *
                C16986 +
            (C19920 * C121 + C19921 * C50670) * C50809) *
               C5082 +
           (((C19772 * C380 + C50611 * C386) * C121 +
             (C19772 * C390 + C50611 * C398) * C50670) *
                C16986 +
            ((C19772 * C720 + C50611 * C728) * C121 +
             (C19772 * C732 + C50611 * C744) * C50670) *
                C50809) *
               C5083 +
           (((C19772 * C853 + C50611 * C858) * C121 +
             (C19772 * C862 + C50611 * C868) * C50670) *
                C16986 +
            ((C19772 * C970 + C50611 * C974) * C121 +
             (C19772 * C978 + C50611 * C982) * C50670) *
                C50809) *
               C5084) *
              C114 -
          ((((C19772 * C977 + C50611 * C981) * C50670 +
             (C19772 * C969 + C50611 * C973) * C121) *
                C50809 +
            ((C19772 * C863 + C50611 * C869) * C50670 +
             (C19772 * C854 + C50611 * C859) * C121) *
                C16986) *
               C5084 +
           (((C19772 * C733 + C50611 * C745) * C50670 +
             (C19772 * C721 + C50611 * C729) * C121) *
                C50809 +
            ((C19772 * C391 + C50611 * C399) * C50670 +
             (C19772 * C381 + C50611 * C387) * C121) *
                C16986) *
               C5083 +
           (((C19772 * C265 + C50611 * C273) * C50670 +
             (C19772 * C255 + C50611 * C261) * C121) *
                C50809 +
            ((C19772 * C136 + C50611 * C146) * C50670 +
             (C19772 * C125 + C50611 * C132) * C121) *
                C16986) *
               C5082) *
              C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C506 +
             (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
             C19909 * C502 + C19910 * C508 + C19911 * C503) *
                C16986 +
            (C19908 * C506 + C19909 * C501 - C19910 * C507 - C19911 * C502 +
             C19912 * C508 + C19913 * C503) *
                C50809) *
               C5082 +
           ((C22064 * C506 + C22065 * C501 - C20328 * C507 - C20329 * C502 +
             C20330 * C508 + C20331 * C503) *
                C16986 +
            (C20328 * C506 + C20329 * C501 - C20330 * C507 - C20331 * C502 +
             C20332 * C508 + C20333 * C503) *
                C50809) *
               C5083 +
           ((C22066 * C506 + C22067 * C501 - C20548 * C507 - C20549 * C502 +
             C20550 * C508 + C20551 * C503) *
                C16986 +
            (C20548 * C506 + C20549 * C501 - C20550 * C507 - C20551 * C502 +
             C20552 * C508 + C20553 * C503) *
                C50809) *
               C5084) *
              C50892 +
          (((C19914 * C507 -
             ((C19772 * C134 + C50611 * C144) * C501 +
              (C19772 * C123 + C50611 * C130) * C506) +
             C19915 * C502 - C19916 * C508 - C19917 * C503) *
                C16986 +
            (C19916 * C507 - (C19915 * C501 + C19914 * C506) + C19917 * C502 -
             C19918 * C508 - C19919 * C503) *
                C50809) *
               C5082 +
           ((C20962 * C507 - (C22070 * C501 + C22071 * C506) + C20963 * C502 -
             C20964 * C508 - C20965 * C503) *
                C16986 +
            (C20964 * C507 - (C20963 * C501 + C20962 * C506) + C20965 * C502 -
             C20966 * C508 - C20967 * C503) *
                C50809) *
               C5083 +
           ((C21876 * C507 - (C22068 * C501 + C22069 * C506) + C21877 * C502 -
             C22238 * C508 - C22239 * C503) *
                C16986 +
            (C22238 * C507 - (C21877 * C501 + C21876 * C506) + C22239 * C502 -
             (C19772 * C3352 + C50611 * C3354) * C508 -
             (C19772 * C3356 + C50611 * C3358) * C503) *
                C50809) *
               C5084) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((((C19772 * C122 + C50611 * C129) * C121 +
              (C19772 * C133 + C50611 * C143) * C50670) *
                 C16986 +
             (C19908 * C121 + C19909 * C50670) * C50809) *
                C5082 +
            ((C22076 + C22077) * C16986 + (C22032 + C22033) * C50809) * C5083 +
            C22694 * C5084) *
               C50892 -
           (C22695 * C5084 +
            ((C22046 + C22047) * C50809 + (C22082 + C22083) * C16986) * C5083 +
            ((C19915 * C50670 + C19914 * C121) * C50809 +
             ((C19772 * C134 + C50611 * C144) * C50670 +
              (C19772 * C123 + C50611 * C130) * C121) *
                 C16986) *
                C5082) *
               C50641) *
              C848 +
          ((((C22083 + C22082) * C16986 + (C22047 + C22046) * C50809) * C5082 +
            ((C22081 + C22080) * C16986 + (C22041 + C22040) * C50809) * C5083 +
            ((C22696 + C22697) * C16986 + (C22698 + C22699) * C50809) * C5084) *
               C50641 -
           (((C22678 + C22679) * C50809 + (C22700 + C22701) * C16986) * C5084 +
            ((C22039 + C22038) * C50809 + (C22079 + C22078) * C16986) * C5083 +
            ((C22033 + C22032) * C50809 + (C22077 + C22076) * C16986) * C5082) *
               C50892) *
              C849 +
          ((C22694 * C5082 +
            ((C22701 + C22700) * C16986 + (C22679 + C22678) * C50809) * C5083 +
            (((C19772 * C5985 + C50611 * C5988) * C121 +
              (C19772 * C5990 + C50611 * C5994) * C50670) *
                 C16986 +
             ((C19772 * C6180 + C50611 * C6182) * C121 +
              (C19772 * C6184 + C50611 * C6186) * C50670) *
                 C50809) *
                C5084) *
               C50892 -
           ((((C19772 * C6183 + C50611 * C6185) * C50670 +
              (C19772 * C6179 + C50611 * C6181) * C121) *
                 C50809 +
             ((C19772 * C5991 + C50611 * C5995) * C50670 +
              (C19772 * C5986 + C50611 * C5989) * C121) *
                 C16986) *
                C5084 +
            ((C22699 + C22698) * C50809 + (C22697 + C22696) * C16986) * C5083 +
            C22695 * C5082) *
               C50641) *
              C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
                 C16990 * C124 + C16985 * C131) *
                    C253 +
                (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
                 C16990 * C135 + C16985 * C145) *
                    C50899 -
                (C17174 + C17175 + C17176) * C254 -
                (C17177 + C17178 + C17179) * C50686) *
                   C16986 +
               ((C17176 + C17175 + C17174) * C253 +
                (C17179 + C17178 + C17177) * C50899 -
                (C16990 * C511 + C16985 * C516 + C16989 * C510 + C16984 * C515 +
                 C16988 * C509 + C16983 * C514) *
                    C254 -
                (C16990 * C520 + C16985 * C526 + C16989 * C519 + C16984 * C525 +
                 C16988 * C518 + C16983 * C524) *
                    C50686) *
                   C50809) *
                  C50771 * C250 +
              (((C17180 + C17181 + C17182) * C254 -
                ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                  C16984 * C145 + C16988 * C134 + C16983 * C144) *
                     C50899 +
                 (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                  C16984 * C131 + C16988 * C123 + C16983 * C130) *
                     C253) +
                (C17183 + C17184 + C17185) * C50686) *
                   C16986 +
               ((C16988 * C510 + C16983 * C515 + C16989 * C511 + C16984 * C516 +
                 C16990 * C512 + C16985 * C517) *
                    C254 -
                ((C17185 + C17184 + C17183) * C50899 +
                 (C17182 + C17181 + C17180) * C253) +
                (C16988 * C519 + C16983 * C525 + C16989 * C520 + C16984 * C526 +
                 C16990 * C521 + C16985 * C527) *
                    C50686) *
                   C50809) *
                  C50771 * C251 +
              (((C16988 * C124 + C16983 * C131 + C16989 * C125 + C16984 * C132 +
                 C16990 * C126 + C16985 * C138) *
                    C253 +
                (C16988 * C135 + C16983 * C145 + C16989 * C136 + C16984 * C146 +
                 C16990 * C137 + C16985 * C147) *
                    C50899 -
                (C17186 + C17187 + C17188) * C254 -
                (C17189 + C17190 + C17191) * C50686) *
                   C16986 +
               ((C17188 + C17187 + C17186) * C253 +
                (C17191 + C17190 + C17189) * C50899 -
                (C16990 * C513 + C16985 * C522 + C16989 * C512 + C16984 * C517 +
                 C16988 * C511 + C16983 * C516) *
                    C254 -
                (C16990 * C523 + C16985 * C528 + C16989 * C521 + C16984 * C527 +
                 C16988 * C520 + C16983 * C526) *
                    C50686) *
                   C50809) *
                  C50771 * C252) *
             C50700 +
         0.5 * std::pow(Pi, 2.5) *
             (((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
                C16990 * C124 + C16985 * C131) *
                   C600 +
               (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
                C16990 * C135 + C16985 * C145) *
                   C595 -
               (C17174 + C17175 + C17176) * C601 -
               (C17177 + C17178 + C17179) * C596 +
               (C17508 + C17509 + C17510) * C602 +
               (C17511 + C17512 + C17513) * C597 -
               (C17630 + C17631 + C17632) * C603 -
               (C17633 + C17634 + C17635) * C598) *
                  C16986 +
              ((C17176 + C17175 + C17174) * C600 +
               (C17179 + C17178 + C17177) * C595 -
               (C17510 + C17509 + C17508) * C601 -
               (C17513 + C17512 + C17511) * C596 +
               (C17632 + C17631 + C17630) * C602 +
               (C17635 + C17634 + C17633) * C597 -
               (C16990 * C2690 + C16985 * C2695 + C16989 * C2689 +
                C16984 * C2692 + C16988 * C2688 + C16983 * C2691) *
                   C603 -
               (C16990 * C2696 + C16985 * C2699 + C16989 * C2694 +
                C16984 * C2698 + C16988 * C2693 + C16983 * C2697) *
                   C598) *
                  C50809) *
             C50771 * C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C253 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C50899 -
            (C17174 + C17175 + C17176) * C254 -
            (C17177 + C17178 + C17179) * C50686) *
               C16986 +
           ((C17176 + C17175 + C17174) * C253 +
            (C17179 + C17178 + C17177) * C50899 -
            (C17510 + C17509 + C17508) * C254 -
            (C17513 + C17512 + C17511) * C50686) *
               C50809) *
              C50771 * C50636 * C848 +
          (((C17806 + C17807 + C17808) * C254 -
            ((C16990 * C390 + C16985 * C398 + C16989 * C389 + C16984 * C397 +
              C16988 * C393 + C16983 * C401) *
                 C50899 +
             (C16990 * C380 + C16985 * C386 + C16989 * C379 + C16984 * C385 +
              C16988 * C383 + C16983 * C394) *
                 C253) +
            (C17809 + C17810 + C17811) * C50686) *
               C16986 +
           ((C17814 + C17813 + C17812) * C254 -
            ((C17811 + C17810 + C17809) * C50899 +
             (C17808 + C17807 + C17806) * C253) +
            (C17817 + C17816 + C17815) * C50686) *
               C50809) *
              C50771 * C50636 * C849 +
          (((C16988 * C851 + C16983 * C856 + C16989 * C852 + C16984 * C857 +
             C16990 * C853 + C16985 * C858) *
                C253 +
            (C16988 * C860 + C16983 * C866 + C16989 * C861 + C16984 * C867 +
             C16990 * C862 + C16985 * C868) *
                C50899 -
            (C18122 + C18123 + C18124) * C254 -
            (C18125 + C18126 + C18127) * C50686) *
               C16986 +
           ((C18124 + C18123 + C18122) * C253 +
            (C18127 + C18126 + C18125) * C50899 -
            (C16990 * C3196 + C16985 * C3202 + C16989 * C3195 + C16984 * C3198 +
             C16988 * C3194 + C16983 * C3197) *
                C254 -
            (C16990 * C3201 + C16985 * C3205 + C16989 * C3200 + C16984 * C3204 +
             C16988 * C3199 + C16983 * C3203) *
                C50686) *
               C50809) *
              C50771 * C50636 * C850)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C253 +
            (C19772 * C133 + C50611 * C143) * C50899 - C19908 * C254 -
            C19909 * C50686) *
               C19768 +
           (C19908 * C253 + C19909 * C50899 - C19910 * C254 - C19911 * C50686) *
               C19769 +
           (C19910 * C253 + C19911 * C50899 - C19912 * C254 - C19913 * C50686) *
               C19770 +
           (C19912 * C253 + C19913 * C50899 -
            (C19772 * C2688 + C50611 * C2691) * C254 -
            (C19772 * C2693 + C50611 * C2697) * C50686) *
               C19771) *
              C50771 * C250 +
          ((C19914 * C254 -
            ((C19772 * C134 + C50611 * C144) * C50899 +
             (C19772 * C123 + C50611 * C130) * C253) +
            C19915 * C50686) *
               C19768 +
           (C19916 * C254 - (C19915 * C50899 + C19914 * C253) +
            C19917 * C50686) *
               C19769 +
           (C19918 * C254 - (C19917 * C50899 + C19916 * C253) +
            C19919 * C50686) *
               C19770 +
           ((C19772 * C2689 + C50611 * C2692) * C254 -
            (C19919 * C50899 + C19918 * C253) +
            (C19772 * C2694 + C50611 * C2698) * C50686) *
               C19771) *
              C50771 * C251 +
          (((C19772 * C124 + C50611 * C131) * C253 +
            (C19772 * C135 + C50611 * C145) * C50899 - C19920 * C254 -
            C19921 * C50686) *
               C19768 +
           (C19920 * C253 + C19921 * C50899 - C19922 * C254 - C19923 * C50686) *
               C19769 +
           (C19922 * C253 + C19923 * C50899 - C19924 * C254 - C19925 * C50686) *
               C19770 +
           (C19924 * C253 + C19925 * C50899 -
            (C19772 * C2690 + C50611 * C2695) * C254 -
            (C19772 * C2696 + C50611 * C2699) * C50686) *
               C19771) *
              C50771 * C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C19772 * C122 + C50611 * C129) * C600 +
           (C19772 * C133 + C50611 * C143) * C595 - C19908 * C601 -
           C19909 * C596 + C19910 * C602 + C19911 * C597 - C19912 * C603 -
           C19913 * C598) *
              C19768 +
          (C19908 * C600 + C19909 * C595 - C19910 * C601 - C19911 * C596 +
           C19912 * C602 + C19913 * C597 - C20130 * C603 - C20131 * C598) *
              C19769 +
          (C19910 * C600 + C19911 * C595 - C19912 * C601 - C19913 * C596 +
           C20130 * C602 + C20131 * C597 - C20208 * C603 - C20209 * C598) *
              C19770 +
          (C19912 * C600 + C19913 * C595 - C20130 * C601 - C20131 * C596 +
           C20208 * C602 + C20209 * C597 -
           (C19772 * C20199 + C50611 * C20200) * C603 -
           (C19772 * C20201 + C50611 * C20202) * C598) *
              C19771) *
         C50771 * C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C253 +
            (C19772 * C133 + C50611 * C143) * C50899 - C19908 * C254 -
            C19909 * C50686) *
               C19768 +
           (C19908 * C253 + C19909 * C50899 - C19910 * C254 - C19911 * C50686) *
               C19769 +
           (C19910 * C253 + C19911 * C50899 - C19912 * C254 - C19913 * C50686) *
               C19770 +
           (C19912 * C253 + C19913 * C50899 - C20130 * C254 - C20131 * C50686) *
               C19771) *
              C50771 * C50636 * C848 +
          ((C20328 * C254 -
            ((C19772 * C393 + C50611 * C401) * C50899 +
             (C19772 * C383 + C50611 * C394) * C253) +
            C20329 * C50686) *
               C19768 +
           (C20330 * C254 - (C20329 * C50899 + C20328 * C253) +
            C20331 * C50686) *
               C19769 +
           (C20332 * C254 - (C20331 * C50899 + C20330 * C253) +
            C20333 * C50686) *
               C19770 +
           (C20334 * C254 - (C20333 * C50899 + C20332 * C253) +
            C20335 * C50686) *
               C19771) *
              C50771 * C50636 * C849 +
          (((C19772 * C851 + C50611 * C856) * C253 +
            (C19772 * C860 + C50611 * C866) * C50899 - C20548 * C254 -
            C20549 * C50686) *
               C19768 +
           (C20548 * C253 + C20549 * C50899 - C20550 * C254 - C20551 * C50686) *
               C19769 +
           (C20550 * C253 + C20551 * C50899 - C20552 * C254 - C20553 * C50686) *
               C19770 +
           (C20552 * C253 + C20553 * C50899 -
            (C19772 * C20531 + C50611 * C20532) * C254 -
            (C19772 * C20533 + C50611 * C20534) * C50686) *
               C19771) *
              C50771 * C50636 * C850)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C253 +
             (C19772 * C133 + C50611 * C143) * C50899 - C19908 * C254 -
             C19909 * C50686) *
                C16986 +
            (C19908 * C253 + C19909 * C50899 - C19910 * C254 -
             C19911 * C50686) *
                C50809) *
               C5082 +
           (((C19772 * C383 + C50611 * C394) * C253 +
             (C19772 * C393 + C50611 * C401) * C50899 - C20328 * C254 -
             C20329 * C50686) *
                C16986 +
            (C20328 * C253 + C20329 * C50899 - C20330 * C254 -
             C20331 * C50686) *
                C50809) *
               C5083 +
           (((C19772 * C851 + C50611 * C856) * C253 +
             (C19772 * C860 + C50611 * C866) * C50899 - C20548 * C254 -
             C20549 * C50686) *
                C16986 +
            (C20548 * C253 + C20549 * C50899 - C20550 * C254 -
             C20551 * C50686) *
                C50809) *
               C5084) *
              C250 +
          (((C19914 * C254 -
             ((C19772 * C134 + C50611 * C144) * C50899 +
              (C19772 * C123 + C50611 * C130) * C253) +
             C19915 * C50686) *
                C16986 +
            (C19916 * C254 - (C19915 * C50899 + C19914 * C253) +
             C19917 * C50686) *
                C50809) *
               C5082 +
           ((C20962 * C254 -
             ((C19772 * C389 + C50611 * C397) * C50899 +
              (C19772 * C379 + C50611 * C385) * C253) +
             C20963 * C50686) *
                C16986 +
            (C20964 * C254 - (C20963 * C50899 + C20962 * C253) +
             C20965 * C50686) *
                C50809) *
               C5083 +
           ((C21876 * C254 -
             ((C19772 * C861 + C50611 * C867) * C50899 +
              (C19772 * C852 + C50611 * C857) * C253) +
             C21877 * C50686) *
                C16986 +
            ((C19772 * C3195 + C50611 * C3198) * C254 -
             (C21877 * C50899 + C21876 * C253) +
             (C19772 * C3200 + C50611 * C3204) * C50686) *
                C50809) *
               C5084) *
              C251 +
          ((((C19772 * C124 + C50611 * C131) * C253 +
             (C19772 * C135 + C50611 * C145) * C50899 - C19920 * C254 -
             C19921 * C50686) *
                C16986 +
            (C19920 * C253 + C19921 * C50899 - C19922 * C254 -
             C19923 * C50686) *
                C50809) *
               C5082 +
           (((C19772 * C380 + C50611 * C386) * C253 +
             (C19772 * C390 + C50611 * C398) * C50899 - C21878 * C254 -
             C21879 * C50686) *
                C16986 +
            (C21878 * C253 + C21879 * C50899 -
             (C19772 * C723 + C50611 * C735) * C254 -
             (C19772 * C739 + C50611 * C747) * C50686) *
                C50809) *
               C5083 +
           (((C19772 * C853 + C50611 * C858) * C253 +
             (C19772 * C862 + C50611 * C868) * C50899 - C21880 * C254 -
             C21881 * C50686) *
                C16986 +
            (C21880 * C253 + C21881 * C50899 -
             (C19772 * C3196 + C50611 * C3202) * C254 -
             (C19772 * C3201 + C50611 * C3205) * C50686) *
                C50809) *
               C5084) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C600 +
            (C19772 * C133 + C50611 * C143) * C595 - C19908 * C601 -
            C19909 * C596 + C19910 * C602 + C19911 * C597 - C19912 * C603 -
            C19913 * C598) *
               C16986 +
           (C19908 * C600 + C19909 * C595 - C19910 * C601 - C19911 * C596 +
            C19912 * C602 + C19913 * C597 - C20130 * C603 - C20131 * C598) *
               C50809) *
              C5082 +
          ((C22064 * C600 + C22065 * C595 - C20328 * C601 - C20329 * C596 +
            C20330 * C602 + C20331 * C597 - C20332 * C603 - C20333 * C598) *
               C16986 +
           (C20328 * C600 + C20329 * C595 - C20330 * C601 - C20331 * C596 +
            C20332 * C602 + C20333 * C597 - C20334 * C603 - C20335 * C598) *
               C50809) *
              C5083 +
          ((C22066 * C600 + C22067 * C595 - C20548 * C601 - C20549 * C596 +
            C20550 * C602 + C20551 * C597 - C20552 * C603 - C20553 * C598) *
               C16986 +
           (C20548 * C600 + C20549 * C595 - C20550 * C601 - C20551 * C596 +
            C20552 * C602 + C20553 * C597 -
            (C19772 * C20531 + C50611 * C20532) * C603 -
            (C19772 * C20533 + C50611 * C20534) * C598) *
               C50809) *
              C5084) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C253 +
             (C19772 * C133 + C50611 * C143) * C50899 - C19908 * C254 -
             C19909 * C50686) *
                C16986 +
            (C19908 * C253 + C19909 * C50899 - C19910 * C254 -
             C19911 * C50686) *
                C50809) *
               C5082 +
           ((C22852 + C22853 - C22854 - C22855) * C16986 +
            (C22856 + C22857 - C22858 - C22859) * C50809) *
               C5083 +
           C22890 * C5084) *
              C50636 * C848 +
          (((C22854 - (C22853 + C22852) + C22855) * C16986 +
            (C22858 - (C22857 + C22856) + C22859) * C50809) *
               C5082 +
           ((C22862 - (C22861 + C22860) + C22863) * C16986 +
            (C22866 - (C22865 + C22864) + C22867) * C50809) *
               C5083 +
           ((C22868 - (C22869 + C22870) + C22871) * C16986 +
            (C22872 - (C22873 + C22874) + C22875) * C50809) *
               C5084) *
              C50636 * C849 +
          (C22890 * C5082 +
           ((C22870 + C22869 - C22868 - C22871) * C16986 +
            (C22874 + C22873 - C22872 - C22875) * C50809) *
               C5083 +
           (((C19772 * C5985 + C50611 * C5988) * C253 +
             (C19772 * C5990 + C50611 * C5994) * C50899 - C22882 * C254 -
             C22883 * C50686) *
                C16986 +
            (C22882 * C253 + C22883 * C50899 -
             (C19772 * C22847 + C50611 * C22848) * C254 -
             (C19772 * C22849 + C50611 * C22850) * C50686) *
                C50809) *
               C5084) *
              C50636 * C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                  C16984 * C130 + C16990 * C124 + C16985 * C131) *
                     C121 +
                 (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                  C16984 * C144 + C16990 * C135 + C16985 * C145) *
                     C50670) *
                    C16986 +
                ((C17176 + C17175 + C17174) * C121 +
                 (C17179 + C17178 + C17177) * C50670) *
                    C50809) *
                   C50771 * C250 -
               (((C17185 + C17184 + C17183) * C50670 +
                 (C17182 + C17181 + C17180) * C121) *
                    C50809 +
                ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                  C16984 * C145 + C16988 * C134 + C16983 * C144) *
                     C50670 +
                 (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                  C16984 * C131 + C16988 * C123 + C16983 * C130) *
                     C121) *
                    C16986) *
                   C50771 * C251 +
               (((C16988 * C124 + C16983 * C131 + C16989 * C125 +
                  C16984 * C132 + C16990 * C126 + C16985 * C138) *
                     C121 +
                 (C16988 * C135 + C16983 * C145 + C16989 * C136 +
                  C16984 * C146 + C16990 * C137 + C16985 * C147) *
                     C50670) *
                    C16986 +
                ((C17188 + C17187 + C17186) * C121 +
                 (C17191 + C17190 + C17189) * C50670) *
                    C50809) *
                   C50771 * C252) *
                  C50901 +
              ((((C16988 * C379 + C16983 * C385 + C16989 * C380 +
                  C16984 * C386 + C16990 * C381 + C16985 * C387) *
                     C121 +
                 (C16988 * C389 + C16983 * C397 + C16989 * C390 +
                  C16984 * C398 + C16990 * C391 + C16985 * C399) *
                     C50670) *
                    C16986 +
                ((C16988 * C719 + C16983 * C727 + C16989 * C720 +
                  C16984 * C728 + C16990 * C721 + C16985 * C729) *
                     C121 +
                 (C16988 * C731 + C16983 * C743 + C16989 * C732 +
                  C16984 * C744 + C16990 * C733 + C16985 * C745) *
                     C50670) *
                    C50809) *
                   C50771 * C251 -
               (((C16990 * C732 + C16985 * C744 + C16989 * C731 +
                  C16984 * C743 + C16988 * C730 + C16983 * C742) *
                     C50670 +
                 (C16990 * C720 + C16985 * C728 + C16989 * C719 +
                  C16984 * C727 + C16988 * C718 + C16983 * C726) *
                     C121) *
                    C50809 +
                ((C16990 * C390 + C16985 * C398 + C16989 * C389 +
                  C16984 * C397 + C16988 * C393 + C16983 * C401) *
                     C50670 +
                 (C16990 * C380 + C16985 * C386 + C16989 * C379 +
                  C16984 * C385 + C16988 * C383 + C16983 * C394) *
                     C121) *
                    C16986) *
                   C50771 * C250 -
               (((C16990 * C1414 + C16985 * C1415 + C16989 * C733 +
                  C16984 * C745 + C16988 * C732 + C16983 * C744) *
                     C50670 +
                 (C16990 * C1412 + C16985 * C1413 + C16989 * C721 +
                  C16984 * C729 + C16988 * C720 + C16983 * C728) *
                     C121) *
                    C50809 +
                ((C16990 * C392 + C16985 * C400 + C16989 * C391 +
                  C16984 * C399 + C16988 * C390 + C16983 * C398) *
                     C50670 +
                 (C16990 * C382 + C16985 * C388 + C16989 * C381 +
                  C16984 * C387 + C16988 * C380 + C16983 * C386) *
                     C121) *
                    C16986) *
                   C50771 * C252) *
                  C50712) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
                 C16990 * C124 + C16985 * C131) *
                    C506 +
                (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
                 C16990 * C135 + C16985 * C145) *
                    C501 -
                (C17174 + C17175 + C17176) * C507 -
                (C17177 + C17178 + C17179) * C502 +
                (C17508 + C17509 + C17510) * C508 +
                (C17511 + C17512 + C17513) * C503) *
                   C16986 +
               ((C17176 + C17175 + C17174) * C506 +
                (C17179 + C17178 + C17177) * C501 -
                (C17510 + C17509 + C17508) * C507 -
                (C17513 + C17512 + C17511) * C502 +
                (C17632 + C17631 + C17630) * C508 +
                (C17635 + C17634 + C17633) * C503) *
                   C50809) *
                  C50771 * C50636 * C50901 +
              (((C17806 + C17807 + C17808) * C507 -
                ((C16990 * C390 + C16985 * C398 + C16989 * C389 +
                  C16984 * C397 + C16988 * C393 + C16983 * C401) *
                     C501 +
                 (C16990 * C380 + C16985 * C386 + C16989 * C379 +
                  C16984 * C385 + C16988 * C383 + C16983 * C394) *
                     C506) +
                (C17809 + C17810 + C17811) * C502 -
                (C17812 + C17813 + C17814) * C508 -
                (C17815 + C17816 + C17817) * C503) *
                   C16986 +
               ((C17814 + C17813 + C17812) * C507 -
                ((C17811 + C17810 + C17809) * C501 +
                 (C17808 + C17807 + C17806) * C506) +
                (C17817 + C17816 + C17815) * C502 -
                (C16990 * C3984 + C16985 * C3985 + C16989 * C2994 +
                 C16984 * C2998 + C16988 * C2995 + C16983 * C2999) *
                    C508 -
                (C16990 * C3986 + C16985 * C3987 + C16989 * C3000 +
                 C16984 * C3006 + C16988 * C3001 + C16983 * C3007) *
                    C503) *
                   C50809) *
                  C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C121 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C50670) *
               C16986 +
           ((C17176 + C17175 + C17174) * C121 +
            (C17179 + C17178 + C17177) * C50670) *
               C50809) *
              C50771 * C50636 * C1051 -
          (((C17811 + C17810 + C17809) * C50670 +
            (C17808 + C17807 + C17806) * C121) *
               C50809 +
           ((C16990 * C390 + C16985 * C398 + C16989 * C389 + C16984 * C397 +
             C16988 * C393 + C16983 * C401) *
                C50670 +
            (C16990 * C380 + C16985 * C386 + C16989 * C379 + C16984 * C385 +
             C16988 * C383 + C16983 * C394) *
                C121) *
               C16986) *
              C50771 * C50636 * C1052 +
          (((C16988 * C851 + C16983 * C856 + C16989 * C852 + C16984 * C857 +
             C16990 * C853 + C16985 * C858) *
                C121 +
            (C16988 * C860 + C16983 * C866 + C16989 * C861 + C16984 * C867 +
             C16990 * C862 + C16985 * C868) *
                C50670) *
               C16986 +
           ((C18124 + C18123 + C18122) * C121 +
            (C18127 + C18126 + C18125) * C50670) *
               C50809) *
              C50771 * C50636 * C1053 -
          (((C16990 * C6821 + C16985 * C6822 + C16989 * C3490 + C16984 * C3496 +
             C16988 * C3491 + C16983 * C3497) *
                C50670 +
            (C16990 * C6819 + C16985 * C6820 + C16989 * C3484 + C16984 * C3492 +
             C16988 * C3485 + C16983 * C3493) *
                C121) *
               C50809 +
           ((C16990 * C1060 + C16985 * C1068 + C16989 * C1061 + C16984 * C1069 +
             C16988 * C1062 + C16983 * C1070) *
                C50670 +
            (C16990 * C1056 + C16985 * C1064 + C16989 * C1057 + C16984 * C1065 +
             C16988 * C1058 + C16983 * C1066) *
                C121) *
               C16986) *
              C50771 * C50636 * C1054)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C121 +
             (C19772 * C133 + C50611 * C143) * C50670) *
                C19768 +
            (C19908 * C121 + C19909 * C50670) * C19769 +
            (C19910 * C121 + C19911 * C50670) * C19770 +
            (C19912 * C121 + C19913 * C50670) * C19771) *
               C50771 * C250 -
           ((C19919 * C50670 + C19918 * C121) * C19771 +
            (C19917 * C50670 + C19916 * C121) * C19770 +
            (C19915 * C50670 + C19914 * C121) * C19769 +
            ((C19772 * C134 + C50611 * C144) * C50670 +
             (C19772 * C123 + C50611 * C130) * C121) *
                C19768) *
               C50771 * C251 +
           (((C19772 * C124 + C50611 * C131) * C121 +
             (C19772 * C135 + C50611 * C145) * C50670) *
                C19768 +
            (C19920 * C121 + C19921 * C50670) * C19769 +
            (C19922 * C121 + C19923 * C50670) * C19770 +
            (C19924 * C121 + C19925 * C50670) * C19771) *
               C50771 * C252) *
              C50901 +
          ((((C19772 * C379 + C50611 * C385) * C121 +
             (C19772 * C389 + C50611 * C397) * C50670) *
                C19768 +
            ((C19772 * C719 + C50611 * C727) * C121 +
             (C19772 * C731 + C50611 * C743) * C50670) *
                C19769 +
            ((C19772 * C724 + C50611 * C736) * C121 +
             (C19772 * C740 + C50611 * C748) * C50670) *
                C19770 +
            ((C19772 * C2994 + C50611 * C2998) * C121 +
             (C19772 * C3000 + C50611 * C3006) * C50670) *
                C19771) *
               C50771 * C251 -
           (((C19772 * C3001 + C50611 * C3007) * C50670 +
             (C19772 * C2995 + C50611 * C2999) * C121) *
                C19771 +
            ((C19772 * C741 + C50611 * C749) * C50670 +
             (C19772 * C725 + C50611 * C737) * C121) *
                C19770 +
            ((C19772 * C730 + C50611 * C742) * C50670 +
             (C19772 * C718 + C50611 * C726) * C121) *
                C19769 +
            ((C19772 * C393 + C50611 * C401) * C50670 +
             (C19772 * C383 + C50611 * C394) * C121) *
                C19768) *
               C50771 * C250 -
           (((C19772 * C3986 + C50611 * C3987) * C50670 +
             (C19772 * C3984 + C50611 * C3985) * C121) *
                C19771 +
            ((C19772 * C739 + C50611 * C747) * C50670 +
             (C19772 * C723 + C50611 * C735) * C121) *
                C19770 +
            ((C19772 * C732 + C50611 * C744) * C50670 +
             (C19772 * C720 + C50611 * C728) * C121) *
                C19769 +
            ((C19772 * C390 + C50611 * C398) * C50670 +
             (C19772 * C380 + C50611 * C386) * C121) *
                C19768) *
               C50771 * C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C506 +
            (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
            C19909 * C502 + C19910 * C508 + C19911 * C503) *
               C19768 +
           (C19908 * C506 + C19909 * C501 - C19910 * C507 - C19911 * C502 +
            C19912 * C508 + C19913 * C503) *
               C19769 +
           (C19910 * C506 + C19911 * C501 - C19912 * C507 - C19913 * C502 +
            C20130 * C508 + C20131 * C503) *
               C19770 +
           (C19912 * C506 + C19913 * C501 - C20130 * C507 - C20131 * C502 +
            C20208 * C508 + C20209 * C503) *
               C19771) *
              C50771 * C50636 * C50901 +
          ((C20328 * C507 -
            ((C19772 * C393 + C50611 * C401) * C501 +
             (C19772 * C383 + C50611 * C394) * C506) +
            C20329 * C502 - C20330 * C508 - C20331 * C503) *
               C19768 +
           (C20330 * C507 - (C20329 * C501 + C20328 * C506) + C20331 * C502 -
            C20332 * C508 - C20333 * C503) *
               C19769 +
           (C20332 * C507 - (C20331 * C501 + C20330 * C506) + C20333 * C502 -
            C20334 * C508 - C20335 * C503) *
               C19770 +
           (C20334 * C507 - (C20333 * C501 + C20332 * C506) + C20335 * C502 -
            (C19772 * C20307 + C50611 * C20308) * C508 -
            (C19772 * C20309 + C50611 * C20310) * C503) *
               C19771) *
              C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C19772 * C122 + C50611 * C129) * C121 +
                                (C19772 * C133 + C50611 * C143) * C50670) *
                                   C19768 +
                               (C19908 * C121 + C19909 * C50670) * C19769 +
                               (C19910 * C121 + C19911 * C50670) * C19770 +
                               (C19912 * C121 + C19913 * C50670) * C19771) *
                                  C50771 * C50636 * C1051 -
                              ((C20333 * C50670 + C20332 * C121) * C19771 +
                               (C20331 * C50670 + C20330 * C121) * C19770 +
                               (C20329 * C50670 + C20328 * C121) * C19769 +
                               ((C19772 * C393 + C50611 * C401) * C50670 +
                                (C19772 * C383 + C50611 * C394) * C121) *
                                   C19768) *
                                  C50771 * C50636 * C1052 +
                              (((C19772 * C851 + C50611 * C856) * C121 +
                                (C19772 * C860 + C50611 * C866) * C50670) *
                                   C19768 +
                               (C20548 * C121 + C20549 * C50670) * C19769 +
                               (C20550 * C121 + C20551 * C50670) * C19770 +
                               (C20552 * C121 + C20553 * C50670) * C19771) *
                                  C50771 * C50636 * C1053 -
                              (((C19772 * C20620 + C50611 * C20622) * C50670 +
                                (C19772 * C20619 + C50611 * C20621) * C121) *
                                   C19771 +
                               ((C19772 * C3487 + C50611 * C3495) * C50670 +
                                (C19772 * C3483 + C50611 * C3489) * C121) *
                                   C19770 +
                               ((C19772 * C3491 + C50611 * C3497) * C50670 +
                                (C19772 * C3485 + C50611 * C3493) * C121) *
                                   C19769 +
                               ((C19772 * C1062 + C50611 * C1070) * C50670 +
                                (C19772 * C1058 + C50611 * C1066) * C121) *
                                   C19768) *
                                  C50771 * C50636 * C1054)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((((C19772 * C122 + C50611 * C129) * C121 +
              (C19772 * C133 + C50611 * C143) * C50670) *
                 C16986 +
             (C19908 * C121 + C19909 * C50670) * C50809) *
                C5082 +
            ((C22076 + C22077) * C16986 + (C22032 + C22033) * C50809) * C5083 +
            ((C22078 + C22079) * C16986 + (C22038 + C22039) * C50809) * C5084) *
               C250 -
           (((C22040 + C22041) * C50809 + (C22080 + C22081) * C16986) * C5084 +
            ((C22046 + C22047) * C50809 + (C22082 + C22083) * C16986) * C5083 +
            ((C19915 * C50670 + C19914 * C121) * C50809 +
             ((C19772 * C134 + C50611 * C144) * C50670 +
              (C19772 * C123 + C50611 * C130) * C121) *
                 C16986) *
                C5082) *
               C251 +
           ((((C19772 * C124 + C50611 * C131) * C121 +
              (C19772 * C135 + C50611 * C145) * C50670) *
                 C16986 +
             (C19920 * C121 + C19921 * C50670) * C50809) *
                C5082 +
            ((C22084 + C22085) * C16986 + (C22056 + C22057) * C50809) * C5083 +
            ((C22086 + C22087) * C16986 + (C22062 + C22063) * C50809) * C5084) *
               C252) *
              C50901 +
          ((((C22083 + C22082) * C16986 + (C22047 + C22046) * C50809) * C5082 +
            ((C22081 + C22080) * C16986 + (C22041 + C22040) * C50809) * C5083 +
            (((C19772 * C1057 + C50611 * C1065) * C121 +
              (C19772 * C1061 + C50611 * C1069) * C50670) *
                 C16986 +
             ((C19772 * C3484 + C50611 * C3492) * C121 +
              (C19772 * C3490 + C50611 * C3496) * C50670) *
                 C50809) *
                C5084) *
               C251 -
           ((((C19772 * C3491 + C50611 * C3497) * C50670 +
              (C19772 * C3485 + C50611 * C3493) * C121) *
                 C50809 +
             ((C19772 * C1062 + C50611 * C1070) * C50670 +
              (C19772 * C1058 + C50611 * C1066) * C121) *
                 C16986) *
                C5084 +
            ((C22039 + C22038) * C50809 + (C22079 + C22078) * C16986) * C5083 +
            ((C22033 + C22032) * C50809 + (C22077 + C22076) * C16986) * C5082) *
               C250 -
           ((((C19772 * C6821 + C50611 * C6822) * C50670 +
              (C19772 * C6819 + C50611 * C6820) * C121) *
                 C50809 +
             ((C19772 * C1060 + C50611 * C1068) * C50670 +
              (C19772 * C1056 + C50611 * C1064) * C121) *
                 C16986) *
                C5084 +
            ((C22063 + C22062) * C50809 + (C22087 + C22086) * C16986) * C5083 +
            ((C22057 + C22056) * C50809 + (C22085 + C22084) * C16986) * C5082) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C506 +
             (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
             C19909 * C502 + C19910 * C508 + C19911 * C503) *
                C16986 +
            (C19908 * C506 + C19909 * C501 - C19910 * C507 - C19911 * C502 +
             C19912 * C508 + C19913 * C503) *
                C50809) *
               C5082 +
           ((C22484 + C22485 - C22486 - C22487 + C22488 + C22489) * C16986 +
            (C22490 + C22491 - C22492 - C22493 + C22494 + C22495) * C50809) *
               C5083 +
           ((C22496 + C22497 - C22498 - C22499 + C22500 + C22501) * C16986 +
            (C22502 + C22503 - C22504 - C22505 + C22506 + C22507) * C50809) *
               C5084) *
              C50636 * C50901 +
          (((C22486 - (C22485 + C22484) + C22487 - C22488 - C22489) * C16986 +
            (C22492 - (C22491 + C22490) + C22493 - C22494 - C22495) * C50809) *
               C5082 +
           ((C22498 - (C22497 + C22496) + C22499 - C22500 - C22501) * C16986 +
            (C22504 - (C22503 + C22502) + C22505 - C22506 - C22507) * C50809) *
               C5083 +
           ((C22516 * C507 -
             ((C19772 * C1062 + C50611 * C1070) * C501 +
              (C19772 * C1058 + C50611 * C1066) * C506) +
             C22517 * C502 - C22518 * C508 - C22519 * C503) *
                C16986 +
            (C22518 * C507 - (C22517 * C501 + C22516 * C506) + C22519 * C502 -
             (C19772 * C20619 + C50611 * C20621) * C508 -
             (C19772 * C20620 + C50611 * C20622) * C503) *
                C50809) *
               C5084) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C121 +
             (C19772 * C133 + C50611 * C143) * C50670) *
                C16986 +
            (C19908 * C121 + C19909 * C50670) * C50809) *
               C5082 +
           ((C22076 + C22077) * C16986 + (C22032 + C22033) * C50809) * C5083 +
           C22694 * C5084) *
              C50636 * C1051 -
          (C23005 * C5084 +
           ((C22039 + C22038) * C50809 + (C22079 + C22078) * C16986) * C5083 +
           ((C22033 + C22032) * C50809 + (C22077 + C22076) * C16986) * C5082) *
              C50636 * C1052 +
          (C22694 * C5082 +
           ((C22701 + C22700) * C16986 + (C22679 + C22678) * C50809) * C5083 +
           ((C23006 + C23007) * C16986 + (C22999 + C23000) * C50809) * C5084) *
              C50636 * C1053 -
          ((((C19772 * C22989 + C50611 * C22991) * C50670 +
             (C19772 * C22988 + C50611 * C22990) * C121) *
                C50809 +
            ((C19772 * C6310 + C50611 * C6314) * C50670 +
             (C19772 * C6308 + C50611 * C6312) * C121) *
                C16986) *
               C5084 +
           ((C23000 + C22999) * C50809 + (C23007 + C23006) * C16986) * C5083 +
           C23005 * C5082) *
              C50636 * C1054)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C121 +
             (C19772 * C133 + C50611 * C143) * C50670) *
                C19768 +
            (C19908 * C121 + C19909 * C50670) * C19769 +
            (C19910 * C121 + C19911 * C50670) * C19770 +
            (C19912 * C121 + C19913 * C50670) * C19771) *
               C50771 * C50945 -
           ((C19919 * C50670 + C19918 * C121) * C19771 +
            (C19917 * C50670 + C19916 * C121) * C19770 +
            (C19915 * C50670 + C19914 * C121) * C19769 +
            ((C19772 * C134 + C50611 * C144) * C50670 +
             (C19772 * C123 + C50611 * C130) * C121) *
                C19768) *
               C50771 * C50930 +
           (((C19772 * C124 + C50611 * C131) * C121 +
             (C19772 * C135 + C50611 * C145) * C50670) *
                C19768 +
            (C19920 * C121 + C19921 * C50670) * C19769 +
            (C19922 * C121 + C19923 * C50670) * C19770 +
            (C19924 * C121 + C19925 * C50670) * C19771) *
               C50771 * C1173) *
              C1514 +
          ((((C19772 * C379 + C50611 * C385) * C121 +
             (C19772 * C389 + C50611 * C397) * C50670) *
                C19768 +
            (C20962 * C121 + C20963 * C50670) * C19769 +
            (C20964 * C121 + C20965 * C50670) * C19770 +
            (C20966 * C121 + C20967 * C50670) * C19771) *
               C50771 * C50930 -
           ((C20333 * C50670 + C20332 * C121) * C19771 +
            (C20331 * C50670 + C20330 * C121) * C19770 +
            (C20329 * C50670 + C20328 * C121) * C19769 +
            ((C19772 * C393 + C50611 * C401) * C50670 +
             (C19772 * C383 + C50611 * C394) * C121) *
                C19768) *
               C50771 * C50945 -
           (((C19772 * C3986 + C50611 * C3987) * C50670 +
             (C19772 * C3984 + C50611 * C3985) * C121) *
                C19771 +
            ((C19772 * C739 + C50611 * C747) * C50670 +
             (C19772 * C723 + C50611 * C735) * C121) *
                C19770 +
            ((C19772 * C732 + C50611 * C744) * C50670 +
             (C19772 * C720 + C50611 * C728) * C121) *
                C19769 +
            ((C19772 * C390 + C50611 * C398) * C50670 +
             (C19772 * C380 + C50611 * C386) * C121) *
                C19768) *
               C50771 * C1173) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
              C16990 * C124 + C16985 * C131) *
                 C121 +
             (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
              C16990 * C135 + C16985 * C145) *
                 C50670) *
                C16986 +
            ((C17176 + C17175 + C17174) * C121 +
             (C17179 + C17178 + C17177) * C50670) *
                C50809) *
               C50771 * C50945 -
           (((C17185 + C17184 + C17183) * C50670 +
             (C17182 + C17181 + C17180) * C121) *
                C50809 +
            ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
              C16988 * C134 + C16983 * C144) *
                 C50670 +
             (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
              C16988 * C123 + C16983 * C130) *
                 C121) *
                C16986) *
               C50771 * C50930 +
           (((C16988 * C124 + C16983 * C131 + C16989 * C125 + C16984 * C132 +
              C16990 * C126 + C16985 * C138) *
                 C121 +
             (C16988 * C135 + C16983 * C145 + C16989 * C136 + C16984 * C146 +
              C16990 * C137 + C16985 * C147) *
                 C50670) *
                C16986 +
            ((C17188 + C17187 + C17186) * C121 +
             (C17191 + C17190 + C17189) * C50670) *
                C50809) *
               C50771 * C1173) *
              C1514 +
          ((((C16988 * C379 + C16983 * C385 + C16989 * C380 + C16984 * C386 +
              C16990 * C381 + C16985 * C387) *
                 C121 +
             (C16988 * C389 + C16983 * C397 + C16989 * C390 + C16984 * C398 +
              C16990 * C391 + C16985 * C399) *
                 C50670) *
                C16986 +
            ((C18726 + C18725 + C18724) * C121 +
             (C18729 + C18728 + C18727) * C50670) *
                C50809) *
               C50771 * C50930 -
           (((C17811 + C17810 + C17809) * C50670 +
             (C17808 + C17807 + C17806) * C121) *
                C50809 +
            ((C16990 * C390 + C16985 * C398 + C16989 * C389 + C16984 * C397 +
              C16988 * C393 + C16983 * C401) *
                 C50670 +
             (C16990 * C380 + C16985 * C386 + C16989 * C379 + C16984 * C385 +
              C16988 * C383 + C16983 * C394) *
                 C121) *
                C16986) *
               C50771 * C50945 -
           (((C16990 * C1414 + C16985 * C1415 + C16989 * C733 + C16984 * C745 +
              C16988 * C732 + C16983 * C744) *
                 C50670 +
             (C16990 * C1412 + C16985 * C1413 + C16989 * C721 + C16984 * C729 +
              C16988 * C720 + C16983 * C728) *
                 C121) *
                C50809 +
            ((C16990 * C392 + C16985 * C400 + C16989 * C391 + C16984 * C399 +
              C16988 * C390 + C16983 * C398) *
                 C50670 +
             (C16990 * C382 + C16985 * C388 + C16989 * C381 + C16984 * C387 +
              C16988 * C380 + C16983 * C386) *
                 C121) *
                C16986) *
               C50771 * C1173) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19772 * C122 + C50611 * C129) * C121 +
              (C19772 * C133 + C50611 * C143) * C50670) *
                 C16986 +
             (C19908 * C121 + C19909 * C50670) * C50809) *
                C5082 +
            ((C22076 + C22077) * C16986 + (C22032 + C22033) * C50809) * C5083 +
            C22694 * C5084) *
               C50945 -
           (C22695 * C5084 +
            ((C22046 + C22047) * C50809 + (C22082 + C22083) * C16986) * C5083 +
            ((C19915 * C50670 + C19914 * C121) * C50809 +
             ((C19772 * C134 + C50611 * C144) * C50670 +
              (C19772 * C123 + C50611 * C130) * C121) *
                 C16986) *
                C5082) *
               C50930 +
           ((((C19772 * C124 + C50611 * C131) * C121 +
              (C19772 * C135 + C50611 * C145) * C50670) *
                 C16986 +
             (C19920 * C121 + C19921 * C50670) * C50809) *
                C5082 +
            ((C22084 + C22085) * C16986 + (C22056 + C22057) * C50809) * C5083 +
            ((C22086 + C22087) * C16986 + (C22062 + C22063) * C50809) * C5084) *
               C1173) *
              C1514 +
          ((((C22083 + C22082) * C16986 + (C22047 + C22046) * C50809) * C5082 +
            ((C22081 + C22080) * C16986 + (C22041 + C22040) * C50809) * C5083 +
            ((C22696 + C22697) * C16986 + (C22698 + C22699) * C50809) * C5084) *
               C50930 -
           (C23005 * C5084 +
            ((C22039 + C22038) * C50809 + (C22079 + C22078) * C16986) * C5083 +
            ((C22033 + C22032) * C50809 + (C22077 + C22076) * C16986) * C5082) *
               C50945 -
           ((((C19772 * C6821 + C50611 * C6822) * C50670 +
              (C19772 * C6819 + C50611 * C6820) * C121) *
                 C50809 +
             ((C19772 * C1060 + C50611 * C1068) * C50670 +
              (C19772 * C1056 + C50611 * C1064) * C121) *
                 C16986) *
                C5084 +
            ((C22063 + C22062) * C50809 + (C22087 + C22086) * C16986) * C5083 +
            ((C22057 + C22056) * C50809 + (C22085 + C22084) * C16986) * C5082) *
               C1173) *
              C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[115] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C19772 * C122 + C50611 * C129) * C253 +
                      (C19772 * C133 + C50611 * C143) * C50899 - C19908 * C254 -
                      C19909 * C50686) *
                         C19768 +
                     (C19908 * C253 + C19909 * C50899 - C19910 * C254 -
                      C19911 * C50686) *
                         C19769 +
                     (C19910 * C253 + C19911 * C50899 - C19912 * C254 -
                      C19913 * C50686) *
                         C19770 +
                     (C19912 * C253 + C19913 * C50899 - C20130 * C254 -
                      C20131 * C50686) *
                         C19771) *
                        C50771 * C1277 +
                    ((C19914 * C254 -
                      ((C19772 * C134 + C50611 * C144) * C50899 +
                       (C19772 * C123 + C50611 * C130) * C253) +
                      C19915 * C50686) *
                         C19768 +
                     (C19916 * C254 - (C19915 * C50899 + C19914 * C253) +
                      C19917 * C50686) *
                         C19769 +
                     (C19918 * C254 - (C19917 * C50899 + C19916 * C253) +
                      C19919 * C50686) *
                         C19770 +
                     (C20132 * C254 - (C19919 * C50899 + C19918 * C253) +
                      C20133 * C50686) *
                         C19771) *
                        C50771 * C50641) *
                       C1514 +
                   (((C20328 * C254 -
                      ((C19772 * C393 + C50611 * C401) * C50899 +
                       (C19772 * C383 + C50611 * C394) * C253) +
                      C20329 * C50686) *
                         C19768 +
                     (C20330 * C254 - (C20329 * C50899 + C20328 * C253) +
                      C20331 * C50686) *
                         C19769 +
                     (C20332 * C254 - (C20331 * C50899 + C20330 * C253) +
                      C20333 * C50686) *
                         C19770 +
                     (C20334 * C254 - (C20333 * C50899 + C20332 * C253) +
                      C20335 * C50686) *
                         C19771) *
                        C50771 * C1277 +
                    (((C19772 * C379 + C50611 * C385) * C253 +
                      (C19772 * C389 + C50611 * C397) * C50899 - C20962 * C254 -
                      C20963 * C50686) *
                         C19768 +
                     (C20962 * C253 + C20963 * C50899 - C20964 * C254 -
                      C20965 * C50686) *
                         C19769 +
                     (C20964 * C253 + C20965 * C50899 - C20966 * C254 -
                      C20967 * C50686) *
                         C19770 +
                     (C20966 * C253 + C20967 * C50899 -
                      (C19772 * C2996 + C50611 * C3002) * C254 -
                      (C19772 * C3004 + C50611 * C3008) * C50686) *
                         C19771) *
                        C50771 * C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                       C16984 * C130 + C16990 * C124 + C16985 * C131) *
                          C253 +
                      (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                       C16984 * C144 + C16990 * C135 + C16985 * C145) *
                          C50899 -
                      (C17174 + C17175 + C17176) * C254 -
                      (C17177 + C17178 + C17179) * C50686) *
                         C16986 +
                     ((C17176 + C17175 + C17174) * C253 +
                      (C17179 + C17178 + C17177) * C50899 -
                      (C17510 + C17509 + C17508) * C254 -
                      (C17513 + C17512 + C17511) * C50686) *
                         C50809) *
                        C50771 * C1277 +
                    (((C17180 + C17181 + C17182) * C254 -
                      ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                        C16984 * C145 + C16988 * C134 + C16983 * C144) *
                           C50899 +
                       (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                        C16984 * C131 + C16988 * C123 + C16983 * C130) *
                           C253) +
                      (C17183 + C17184 + C17185) * C50686) *
                         C16986 +
                     ((C17516 + C17515 + C17514) * C254 -
                      ((C17185 + C17184 + C17183) * C50899 +
                       (C17182 + C17181 + C17180) * C253) +
                      (C17519 + C17518 + C17517) * C50686) *
                         C50809) *
                        C50771 * C50641) *
                       C1514 +
                   ((((C17806 + C17807 + C17808) * C254 -
                      ((C16990 * C390 + C16985 * C398 + C16989 * C389 +
                        C16984 * C397 + C16988 * C393 + C16983 * C401) *
                           C50899 +
                       (C16990 * C380 + C16985 * C386 + C16989 * C379 +
                        C16984 * C385 + C16988 * C383 + C16983 * C394) *
                           C253) +
                      (C17809 + C17810 + C17811) * C50686) *
                         C16986 +
                     ((C17814 + C17813 + C17812) * C254 -
                      ((C17811 + C17810 + C17809) * C50899 +
                       (C17808 + C17807 + C17806) * C253) +
                      (C17817 + C17816 + C17815) * C50686) *
                         C50809) *
                        C50771 * C1277 +
                    (((C16988 * C379 + C16983 * C385 + C16989 * C380 +
                       C16984 * C386 + C16990 * C381 + C16985 * C387) *
                          C253 +
                      (C16988 * C389 + C16983 * C397 + C16989 * C390 +
                       C16984 * C398 + C16990 * C391 + C16985 * C399) *
                          C50899 -
                      (C18724 + C18725 + C18726) * C254 -
                      (C18727 + C18728 + C18729) * C50686) *
                         C16986 +
                     ((C18726 + C18725 + C18724) * C253 +
                      (C18729 + C18728 + C18727) * C50899 -
                      (C16990 * C722 + C16985 * C734 + C16989 * C723 +
                       C16984 * C735 + C16988 * C724 + C16983 * C736) *
                          C254 -
                      (C16990 * C738 + C16985 * C746 + C16989 * C739 +
                       C16984 * C747 + C16988 * C740 + C16983 * C748) *
                          C50686) *
                         C50809) *
                        C50771 * C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19772 * C122 + C50611 * C129) * C253 +
                       (C19772 * C133 + C50611 * C143) * C50899 -
                       C19908 * C254 - C19909 * C50686) *
                          C16986 +
                      (C19908 * C253 + C19909 * C50899 - C19910 * C254 -
                       C19911 * C50686) *
                          C50809) *
                         C5082 +
                     ((C22852 + C22853 - C22854 - C22855) * C16986 +
                      (C22856 + C22857 - C22858 - C22859) * C50809) *
                         C5083 +
                     C22890 * C5084) *
                        C1277 +
                    (((C19914 * C254 -
                       ((C19772 * C134 + C50611 * C144) * C50899 +
                        (C19772 * C123 + C50611 * C130) * C253) +
                       C19915 * C50686) *
                          C16986 +
                      (C19916 * C254 - (C19915 * C50899 + C19914 * C253) +
                       C19917 * C50686) *
                          C50809) *
                         C5082 +
                     ((C23866 - (C23867 + C23868) + C23869) * C16986 +
                      (C23870 - (C23871 + C23872) + C23873) * C50809) *
                         C5083 +
                     ((C23874 - (C23875 + C23876) + C23877) * C16986 +
                      (C23878 - (C23879 + C23880) + C23881) * C50809) *
                         C5084) *
                        C50641) *
                       C1514 +
                   ((((C22854 - (C22853 + C22852) + C22855) * C16986 +
                      (C22858 - (C22857 + C22856) + C22859) * C50809) *
                         C5082 +
                     ((C22862 - (C22861 + C22860) + C22863) * C16986 +
                      (C22866 - (C22865 + C22864) + C22867) * C50809) *
                         C5083 +
                     ((C22868 - (C22869 + C22870) + C22871) * C16986 +
                      (C22872 - (C22873 + C22874) + C22875) * C50809) *
                         C5084) *
                        C1277 +
                    (((C23868 + C23867 - C23866 - C23869) * C16986 +
                      (C23872 + C23871 - C23870 - C23873) * C50809) *
                         C5082 +
                     ((C23876 + C23875 - C23874 - C23877) * C16986 +
                      (C23880 + C23879 - C23878 - C23881) * C50809) *
                         C5083 +
                     ((C22688 * C253 + C22689 * C50899 - C22690 * C254 -
                       C22691 * C50686) *
                          C16986 +
                      (C22690 * C253 + C22691 * C50899 -
                       (C19772 * C3482 + C50611 * C3488) * C254 -
                       (C19772 * C3486 + C50611 * C3494) * C50686) *
                          C50809) *
                         C5084) *
                        C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C121 +
             (C19772 * C133 + C50611 * C143) * C50670) *
                C19768 +
            (C19908 * C121 + C19909 * C50670) * C19769 +
            (C19910 * C121 + C19911 * C50670) * C19770 +
            (C19912 * C121 + C19913 * C50670) * C19771) *
               C50771 * C1277 -
           ((C19919 * C50670 + C19918 * C121) * C19771 +
            (C19917 * C50670 + C19916 * C121) * C19770 +
            (C19915 * C50670 + C19914 * C121) * C19769 +
            ((C19772 * C134 + C50611 * C144) * C50670 +
             (C19772 * C123 + C50611 * C130) * C121) *
                C19768) *
               C50771 * C50641) *
              C50947 +
          ((((C19772 * C379 + C50611 * C385) * C121 +
             (C19772 * C389 + C50611 * C397) * C50670) *
                C19768 +
            (C20962 * C121 + C20963 * C50670) * C19769 +
            (C20964 * C121 + C20965 * C50670) * C19770 +
            (C20966 * C121 + C20967 * C50670) * C19771) *
               C50771 * C50641 -
           ((C20333 * C50670 + C20332 * C121) * C19771 +
            (C20331 * C50670 + C20330 * C121) * C19770 +
            (C20329 * C50670 + C20328 * C121) * C19769 +
            ((C19772 * C393 + C50611 * C401) * C50670 +
             (C19772 * C383 + C50611 * C394) * C121) *
                C19768) *
               C50771 * C1277) *
              C50936 +
          ((((C19772 * C851 + C50611 * C856) * C121 +
             (C19772 * C860 + C50611 * C866) * C50670) *
                C19768 +
            (C20548 * C121 + C20549 * C50670) * C19769 +
            (C20550 * C121 + C20551 * C50670) * C19770 +
            (C20552 * C121 + C20553 * C50670) * C19771) *
               C50771 * C1277 -
           (((C19772 * C3356 + C50611 * C3358) * C50670 +
             (C19772 * C3352 + C50611 * C3354) * C121) *
                C19771 +
            ((C19772 * C3200 + C50611 * C3204) * C50670 +
             (C19772 * C3195 + C50611 * C3198) * C121) *
                C19770 +
            ((C19772 * C979 + C50611 * C983) * C50670 +
             (C19772 * C971 + C50611 * C975) * C121) *
                C19769 +
            ((C19772 * C861 + C50611 * C867) * C50670 +
             (C19772 * C852 + C50611 * C857) * C121) *
                C19768) *
               C50771 * C50641) *
              C1746)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
              C16990 * C124 + C16985 * C131) *
                 C121 +
             (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
              C16990 * C135 + C16985 * C145) *
                 C50670) *
                C16986 +
            ((C17176 + C17175 + C17174) * C121 +
             (C17179 + C17178 + C17177) * C50670) *
                C50809) *
               C50771 * C1277 -
           (((C17185 + C17184 + C17183) * C50670 +
             (C17182 + C17181 + C17180) * C121) *
                C50809 +
            ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
              C16988 * C134 + C16983 * C144) *
                 C50670 +
             (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
              C16988 * C123 + C16983 * C130) *
                 C121) *
                C16986) *
               C50771 * C50641) *
              C50947 +
          ((((C16988 * C379 + C16983 * C385 + C16989 * C380 + C16984 * C386 +
              C16990 * C381 + C16985 * C387) *
                 C121 +
             (C16988 * C389 + C16983 * C397 + C16989 * C390 + C16984 * C398 +
              C16990 * C391 + C16985 * C399) *
                 C50670) *
                C16986 +
            ((C18726 + C18725 + C18724) * C121 +
             (C18729 + C18728 + C18727) * C50670) *
                C50809) *
               C50771 * C50641 -
           (((C17811 + C17810 + C17809) * C50670 +
             (C17808 + C17807 + C17806) * C121) *
                C50809 +
            ((C16990 * C390 + C16985 * C398 + C16989 * C389 + C16984 * C397 +
              C16988 * C393 + C16983 * C401) *
                 C50670 +
             (C16990 * C380 + C16985 * C386 + C16989 * C379 + C16984 * C385 +
              C16988 * C383 + C16983 * C394) *
                 C121) *
                C16986) *
               C50771 * C1277) *
              C50936 +
          ((((C16988 * C851 + C16983 * C856 + C16989 * C852 + C16984 * C857 +
              C16990 * C853 + C16985 * C858) *
                 C121 +
             (C16988 * C860 + C16983 * C866 + C16989 * C861 + C16984 * C867 +
              C16990 * C862 + C16985 * C868) *
                 C50670) *
                C16986 +
            ((C18124 + C18123 + C18122) * C121 +
             (C18127 + C18126 + C18125) * C50670) *
                C50809) *
               C50771 * C1277 -
           (((C16990 * C977 + C16985 * C981 + C16989 * C978 + C16984 * C982 +
              C16988 * C979 + C16983 * C983) *
                 C50670 +
             (C16990 * C969 + C16985 * C973 + C16989 * C970 + C16984 * C974 +
              C16988 * C971 + C16983 * C975) *
                 C121) *
                C50809 +
            ((C16990 * C863 + C16985 * C869 + C16989 * C862 + C16984 * C868 +
              C16988 * C861 + C16983 * C867) *
                 C50670 +
             (C16990 * C854 + C16985 * C859 + C16989 * C853 + C16984 * C858 +
              C16988 * C852 + C16983 * C857) *
                 C121) *
                C16986) *
               C50771 * C50641) *
              C1746)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19772 * C122 + C50611 * C129) * C121 +
              (C19772 * C133 + C50611 * C143) * C50670) *
                 C16986 +
             (C19908 * C121 + C19909 * C50670) * C50809) *
                C5082 +
            ((C22076 + C22077) * C16986 + (C22032 + C22033) * C50809) * C5083 +
            C22694 * C5084) *
               C1277 -
           (C22695 * C5084 +
            ((C22046 + C22047) * C50809 + (C22082 + C22083) * C16986) * C5083 +
            ((C19915 * C50670 + C19914 * C121) * C50809 +
             ((C19772 * C134 + C50611 * C144) * C50670 +
              (C19772 * C123 + C50611 * C130) * C121) *
                 C16986) *
                C5082) *
               C50641) *
              C50947 +
          ((((C22083 + C22082) * C16986 + (C22047 + C22046) * C50809) * C5082 +
            ((C22081 + C22080) * C16986 + (C22041 + C22040) * C50809) * C5083 +
            ((C22696 + C22697) * C16986 + (C22698 + C22699) * C50809) * C5084) *
               C50641 -
           (C23005 * C5084 +
            ((C22039 + C22038) * C50809 + (C22079 + C22078) * C16986) * C5083 +
            ((C22033 + C22032) * C50809 + (C22077 + C22076) * C16986) * C5082) *
               C1277) *
              C50936 +
          ((C22694 * C5082 +
            ((C22701 + C22700) * C16986 + (C22679 + C22678) * C50809) * C5083 +
            ((C23006 + C23007) * C16986 + (C22999 + C23000) * C50809) * C5084) *
               C1277 -
           ((((C19772 * C6183 + C50611 * C6185) * C50670 +
              (C19772 * C6179 + C50611 * C6181) * C121) *
                 C50809 +
             ((C19772 * C5991 + C50611 * C5995) * C50670 +
              (C19772 * C5986 + C50611 * C5989) * C121) *
                 C16986) *
                C5084 +
            ((C22699 + C22698) * C50809 + (C22697 + C22696) * C16986) * C5083 +
            C22695 * C5082) *
               C50641) *
              C1746)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                      C16984 * C130 + C16990 * C124 + C16985 * C131) *
                         C506 +
                     (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                      C16984 * C144 + C16990 * C135 + C16985 * C145) *
                         C501 -
                     (C17174 + C17175 + C17176) * C507 -
                     (C17177 + C17178 + C17179) * C502 +
                     (C17508 + C17509 + C17510) * C508 +
                     (C17511 + C17512 + C17513) * C503) *
                        C16986 +
                    ((C17176 + C17175 + C17174) * C506 +
                     (C17179 + C17178 + C17177) * C501 -
                     (C17510 + C17509 + C17508) * C507 -
                     (C17513 + C17512 + C17511) * C502 +
                     (C16988 * C607 + C16983 * C611 + C16989 * C606 +
                      C16984 * C610 + C16990 * C605 + C16985 * C609) *
                         C508 +
                     (C16988 * C615 + C16983 * C619 + C16989 * C614 +
                      C16984 * C618 + C16990 * C613 + C16985 * C617) *
                         C503) *
                        C50809) *
                       C50771 * C50892 +
                   (((C17180 + C17181 + C17182) * C507 -
                     ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                       C16984 * C145 + C16988 * C134 + C16983 * C144) *
                          C501 +
                      (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                       C16984 * C131 + C16988 * C123 + C16983 * C130) *
                          C506) +
                     (C17183 + C17184 + C17185) * C502 -
                     (C17514 + C17515 + C17516) * C508 -
                     (C17517 + C17518 + C17519) * C503) *
                        C16986 +
                    ((C17516 + C17515 + C17514) * C507 -
                     ((C17185 + C17184 + C17183) * C501 +
                      (C17182 + C17181 + C17180) * C506) +
                     (C17519 + C17518 + C17517) * C502 -
                     (C16990 * C604 + C16985 * C608 + C16989 * C605 +
                      C16984 * C609 + C16988 * C606 + C16983 * C610) *
                         C508 -
                     (C16990 * C612 + C16985 * C616 + C16989 * C613 +
                      C16984 * C617 + C16988 * C614 + C16983 * C618) *
                         C503) *
                        C50809) *
                       C50771 * C50641) *
                  C50700) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                      C16984 * C130 + C16990 * C124 + C16985 * C131) *
                         C121 +
                     (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                      C16984 * C144 + C16990 * C135 + C16985 * C145) *
                         C50670) *
                        C16986 +
                    ((C16988 * C258 + C16983 * C264 + C16989 * C257 +
                      C16984 * C263 + C16990 * C256 + C16985 * C262) *
                         C121 +
                     (C16988 * C268 + C16983 * C276 + C16989 * C267 +
                      C16984 * C275 + C16990 * C266 + C16985 * C274) *
                         C50670) *
                        C50809) *
                       C50771 * C112 -
                   (((C16990 * C265 + C16985 * C273 + C16989 * C266 +
                      C16984 * C274 + C16988 * C267 + C16983 * C275) *
                         C50670 +
                     (C16990 * C255 + C16985 * C261 + C16989 * C256 +
                      C16984 * C262 + C16988 * C257 + C16983 * C263) *
                         C121) *
                        C50809 +
                    ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                      C16984 * C145 + C16988 * C134 + C16983 * C144) *
                         C50670 +
                     (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                      C16984 * C131 + C16988 * C123 + C16983 * C130) *
                         C121) *
                        C16986) *
                       C50771 * C113 +
                   (((C16988 * C124 + C16983 * C131 + C16989 * C125 +
                      C16984 * C132 + C16990 * C126 + C16985 * C138) *
                         C121 +
                     (C16988 * C135 + C16983 * C145 + C16989 * C136 +
                      C16984 * C146 + C16990 * C137 + C16985 * C147) *
                         C50670) *
                        C16986 +
                    ((C16988 * C256 + C16983 * C262 + C16989 * C255 +
                      C16984 * C261 + C16990 * C259 + C16985 * C269) *
                         C121 +
                     (C16988 * C266 + C16983 * C274 + C16989 * C265 +
                      C16984 * C273 + C16990 * C270 + C16985 * C277) *
                         C50670) *
                        C50809) *
                       C50771 * C114 -
                   (((C16990 * C272 + C16985 * C278 + C16989 * C270 +
                      C16984 * C277 + C16988 * C265 + C16983 * C273) *
                         C50670 +
                     (C16990 * C260 + C16985 * C271 + C16989 * C259 +
                      C16984 * C269 + C16988 * C255 + C16983 * C261) *
                         C121) *
                        C50809 +
                    ((C16990 * C140 + C16985 * C148 + C16989 * C137 +
                      C16984 * C147 + C16988 * C136 + C16983 * C146) *
                         C50670 +
                     (C16990 * C127 + C16985 * C139 + C16989 * C126 +
                      C16984 * C138 + C16988 * C125 + C16983 * C132) *
                         C121) *
                        C16986) *
                       C50771 * C115) *
                  C50700) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C19772 * C122 + C50611 * C129) * C121 +
                     (C19772 * C133 + C50611 * C143) * C50670) *
                        C19768 +
                    ((C19772 * C258 + C50611 * C264) * C121 +
                     (C19772 * C268 + C50611 * C276) * C50670) *
                        C19769 +
                    ((C19772 * C509 + C50611 * C514) * C121 +
                     (C19772 * C518 + C50611 * C524) * C50670) *
                        C19770 +
                    ((C19772 * C607 + C50611 * C611) * C121 +
                     (C19772 * C615 + C50611 * C619) * C50670) *
                        C19771) *
                       C50771 * C112 -
                   (((C19772 * C614 + C50611 * C618) * C50670 +
                     (C19772 * C606 + C50611 * C610) * C121) *
                        C19771 +
                    ((C19772 * C519 + C50611 * C525) * C50670 +
                     (C19772 * C510 + C50611 * C515) * C121) *
                        C19770 +
                    ((C19772 * C267 + C50611 * C275) * C50670 +
                     (C19772 * C257 + C50611 * C263) * C121) *
                        C19769 +
                    ((C19772 * C134 + C50611 * C144) * C50670 +
                     (C19772 * C123 + C50611 * C130) * C121) *
                        C19768) *
                       C50771 * C113 +
                   (((C19772 * C124 + C50611 * C131) * C121 +
                     (C19772 * C135 + C50611 * C145) * C50670) *
                        C19768 +
                    ((C19772 * C256 + C50611 * C262) * C121 +
                     (C19772 * C266 + C50611 * C274) * C50670) *
                        C19769 +
                    ((C19772 * C511 + C50611 * C516) * C121 +
                     (C19772 * C520 + C50611 * C526) * C50670) *
                        C19770 +
                    ((C19772 * C605 + C50611 * C609) * C121 +
                     (C19772 * C613 + C50611 * C617) * C50670) *
                        C19771) *
                       C50771 * C114 -
                   (((C19772 * C612 + C50611 * C616) * C50670 +
                     (C19772 * C604 + C50611 * C608) * C121) *
                        C19771 +
                    ((C19772 * C521 + C50611 * C527) * C50670 +
                     (C19772 * C512 + C50611 * C517) * C121) *
                        C19770 +
                    ((C19772 * C265 + C50611 * C273) * C50670 +
                     (C19772 * C255 + C50611 * C261) * C121) *
                        C19769 +
                    ((C19772 * C136 + C50611 * C146) * C50670 +
                     (C19772 * C125 + C50611 * C132) * C121) *
                        C19768) *
                       C50771 * C115) *
                  C50700) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C19772 * C122 + C50611 * C129) * C506 +
                     (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
                     C19909 * C502 + C19910 * C508 + C19911 * C503) *
                        C19768 +
                    (C19908 * C506 + C19909 * C501 - C19910 * C507 -
                     C19911 * C502 + C19912 * C508 + C19913 * C503) *
                        C19769 +
                    (C19910 * C506 + C19911 * C501 - C19912 * C507 -
                     C19913 * C502 + C20130 * C508 + C20131 * C503) *
                        C19770 +
                    (C19912 * C506 + C19913 * C501 - C20130 * C507 -
                     C20131 * C502 + (C19772 * C2827 + C50611 * C2829) * C508 +
                     (C19772 * C2831 + C50611 * C2833) * C503) *
                        C19771) *
                       C50771 * C50892 +
                   ((C19914 * C507 -
                     ((C19772 * C134 + C50611 * C144) * C501 +
                      (C19772 * C123 + C50611 * C130) * C506) +
                     C19915 * C502 - C19916 * C508 - C19917 * C503) *
                        C19768 +
                    (C19916 * C507 - (C19915 * C501 + C19914 * C506) +
                     C19917 * C502 - C19918 * C508 - C19919 * C503) *
                        C19769 +
                    (C19918 * C507 - (C19917 * C501 + C19916 * C506) +
                     C19919 * C502 - C20132 * C508 - C20133 * C503) *
                        C19770 +
                    (C20132 * C507 - (C19919 * C501 + C19918 * C506) +
                     C20133 * C502 - (C19772 * C2826 + C50611 * C2828) * C508 -
                     (C19772 * C2830 + C50611 * C2832) * C503) *
                        C19771) *
                       C50771 * C50641) *
                  C50700) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C19772 * C122 + C50611 * C129) * C121 +
                      (C19772 * C133 + C50611 * C143) * C50670) *
                         C16986 +
                     (C19908 * C121 + C19909 * C50670) * C50809) *
                        C5082 +
                    (((C19772 * C383 + C50611 * C394) * C121 +
                      (C19772 * C393 + C50611 * C401) * C50670) *
                         C16986 +
                     (C20328 * C121 + C20329 * C50670) * C50809) *
                        C5083 +
                    (((C19772 * C851 + C50611 * C856) * C121 +
                      (C19772 * C860 + C50611 * C866) * C50670) *
                         C16986 +
                     (C20548 * C121 + C20549 * C50670) * C50809) *
                        C5084) *
                       C112 -
                   ((((C19772 * C979 + C50611 * C983) * C50670 +
                      (C19772 * C971 + C50611 * C975) * C121) *
                         C50809 +
                     ((C19772 * C861 + C50611 * C867) * C50670 +
                      (C19772 * C852 + C50611 * C857) * C121) *
                         C16986) *
                        C5084 +
                    ((C20963 * C50670 + C20962 * C121) * C50809 +
                     ((C19772 * C389 + C50611 * C397) * C50670 +
                      (C19772 * C379 + C50611 * C385) * C121) *
                         C16986) *
                        C5083 +
                    ((C19915 * C50670 + C19914 * C121) * C50809 +
                     ((C19772 * C134 + C50611 * C144) * C50670 +
                      (C19772 * C123 + C50611 * C130) * C121) *
                         C16986) *
                        C5082) *
                       C113 +
                   ((((C19772 * C124 + C50611 * C131) * C121 +
                      (C19772 * C135 + C50611 * C145) * C50670) *
                         C16986 +
                     (C19920 * C121 + C19921 * C50670) * C50809) *
                        C5082 +
                    (((C19772 * C380 + C50611 * C386) * C121 +
                      (C19772 * C390 + C50611 * C398) * C50670) *
                         C16986 +
                     ((C19772 * C720 + C50611 * C728) * C121 +
                      (C19772 * C732 + C50611 * C744) * C50670) *
                         C50809) *
                        C5083 +
                    (((C19772 * C853 + C50611 * C858) * C121 +
                      (C19772 * C862 + C50611 * C868) * C50670) *
                         C16986 +
                     ((C19772 * C970 + C50611 * C974) * C121 +
                      (C19772 * C978 + C50611 * C982) * C50670) *
                         C50809) *
                        C5084) *
                       C114 -
                   ((((C19772 * C977 + C50611 * C981) * C50670 +
                      (C19772 * C969 + C50611 * C973) * C121) *
                         C50809 +
                     ((C19772 * C863 + C50611 * C869) * C50670 +
                      (C19772 * C854 + C50611 * C859) * C121) *
                         C16986) *
                        C5084 +
                    (((C19772 * C733 + C50611 * C745) * C50670 +
                      (C19772 * C721 + C50611 * C729) * C121) *
                         C50809 +
                     ((C19772 * C391 + C50611 * C399) * C50670 +
                      (C19772 * C381 + C50611 * C387) * C121) *
                         C16986) *
                        C5083 +
                    (((C19772 * C265 + C50611 * C273) * C50670 +
                      (C19772 * C255 + C50611 * C261) * C121) *
                         C50809 +
                     ((C19772 * C136 + C50611 * C146) * C50670 +
                      (C19772 * C125 + C50611 * C132) * C121) *
                         C16986) *
                        C5082) *
                       C115) *
                  C50700) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C19772 * C122 + C50611 * C129) * C506 +
                      (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
                      C19909 * C502 + C19910 * C508 + C19911 * C503) *
                         C16986 +
                     (C19908 * C506 + C19909 * C501 - C19910 * C507 -
                      C19911 * C502 + C19912 * C508 + C19913 * C503) *
                         C50809) *
                        C5082 +
                    ((C22064 * C506 + C22065 * C501 - C20328 * C507 -
                      C20329 * C502 + C20330 * C508 + C20331 * C503) *
                         C16986 +
                     (C20328 * C506 + C20329 * C501 - C20330 * C507 -
                      C20331 * C502 + C20332 * C508 + C20333 * C503) *
                         C50809) *
                        C5083 +
                    ((C22066 * C506 + C22067 * C501 - C20548 * C507 -
                      C20549 * C502 + C20550 * C508 + C20551 * C503) *
                         C16986 +
                     (C20548 * C506 + C20549 * C501 - C20550 * C507 -
                      C20551 * C502 + C20552 * C508 + C20553 * C503) *
                         C50809) *
                        C5084) *
                       C50892 +
                   (((C19914 * C507 -
                      ((C19772 * C134 + C50611 * C144) * C501 +
                       (C19772 * C123 + C50611 * C130) * C506) +
                      C19915 * C502 - C19916 * C508 - C19917 * C503) *
                         C16986 +
                     (C19916 * C507 - (C19915 * C501 + C19914 * C506) +
                      C19917 * C502 - C19918 * C508 - C19919 * C503) *
                         C50809) *
                        C5082 +
                    ((C20962 * C507 - (C22070 * C501 + C22071 * C506) +
                      C20963 * C502 - C20964 * C508 - C20965 * C503) *
                         C16986 +
                     (C20964 * C507 - (C20963 * C501 + C20962 * C506) +
                      C20965 * C502 - C20966 * C508 - C20967 * C503) *
                         C50809) *
                        C5083 +
                    ((C21876 * C507 - (C22068 * C501 + C22069 * C506) +
                      C21877 * C502 - C22238 * C508 - C22239 * C503) *
                         C16986 +
                     (C22238 * C507 - (C21877 * C501 + C21876 * C506) +
                      C22239 * C502 - (C19772 * C3352 + C50611 * C3354) * C508 -
                      (C19772 * C3356 + C50611 * C3358) * C503) *
                         C50809) *
                        C5084) *
                       C50641) *
                  C50700) /
                     (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
            C16990 * C124 + C16985 * C131) *
               C600 +
           (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
            C16990 * C135 + C16985 * C145) *
               C595 -
           (C17174 + C17175 + C17176) * C601 -
           (C17177 + C17178 + C17179) * C596 +
           (C17508 + C17509 + C17510) * C602 +
           (C17511 + C17512 + C17513) * C597 -
           (C17630 + C17631 + C17632) * C603 -
           (C17633 + C17634 + C17635) * C598) *
              C16986 +
          ((C17176 + C17175 + C17174) * C600 +
           (C17179 + C17178 + C17177) * C595 -
           (C17510 + C17509 + C17508) * C601 -
           (C17513 + C17512 + C17511) * C596 +
           (C17632 + C17631 + C17630) * C602 +
           (C17635 + C17634 + C17633) * C597 -
           (C16990 * C2690 + C16985 * C2695 + C16989 * C2689 + C16984 * C2692 +
            C16988 * C2688 + C16983 * C2691) *
               C603 -
           (C16990 * C2696 + C16985 * C2699 + C16989 * C2694 + C16984 * C2698 +
            C16988 * C2693 + C16983 * C2697) *
               C598) *
              C50809) *
         C50771 * C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C253 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C50899 -
            (C17174 + C17175 + C17176) * C254 -
            (C17177 + C17178 + C17179) * C50686) *
               C16986 +
           ((C17176 + C17175 + C17174) * C253 +
            (C17179 + C17178 + C17177) * C50899 -
            (C16990 * C511 + C16985 * C516 + C16989 * C510 + C16984 * C515 +
             C16988 * C509 + C16983 * C514) *
                C254 -
            (C16990 * C520 + C16985 * C526 + C16989 * C519 + C16984 * C525 +
             C16988 * C518 + C16983 * C524) *
                C50686) *
               C50809) *
              C50771 * C250 +
          (((C17180 + C17181 + C17182) * C254 -
            ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
              C16988 * C134 + C16983 * C144) *
                 C50899 +
             (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
              C16988 * C123 + C16983 * C130) *
                 C253) +
            (C17183 + C17184 + C17185) * C50686) *
               C16986 +
           ((C16988 * C510 + C16983 * C515 + C16989 * C511 + C16984 * C516 +
             C16990 * C512 + C16985 * C517) *
                C254 -
            ((C17185 + C17184 + C17183) * C50899 +
             (C17182 + C17181 + C17180) * C253) +
            (C16988 * C519 + C16983 * C525 + C16989 * C520 + C16984 * C526 +
             C16990 * C521 + C16985 * C527) *
                C50686) *
               C50809) *
              C50771 * C251 +
          (((C16988 * C124 + C16983 * C131 + C16989 * C125 + C16984 * C132 +
             C16990 * C126 + C16985 * C138) *
                C253 +
            (C16988 * C135 + C16983 * C145 + C16989 * C136 + C16984 * C146 +
             C16990 * C137 + C16985 * C147) *
                C50899 -
            (C17186 + C17187 + C17188) * C254 -
            (C17189 + C17190 + C17191) * C50686) *
               C16986 +
           ((C17188 + C17187 + C17186) * C253 +
            (C17191 + C17190 + C17189) * C50899 -
            (C16990 * C513 + C16985 * C522 + C16989 * C512 + C16984 * C517 +
             C16988 * C511 + C16983 * C516) *
                C254 -
            (C16990 * C523 + C16985 * C528 + C16989 * C521 + C16984 * C527 +
             C16988 * C520 + C16983 * C526) *
                C50686) *
               C50809) *
              C50771 * C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C253 +
            (C19772 * C133 + C50611 * C143) * C50899 - C19908 * C254 -
            C19909 * C50686) *
               C19768 +
           (C19908 * C253 + C19909 * C50899 - C19910 * C254 - C19911 * C50686) *
               C19769 +
           (C19910 * C253 + C19911 * C50899 - C19912 * C254 - C19913 * C50686) *
               C19770 +
           (C19912 * C253 + C19913 * C50899 -
            (C19772 * C2688 + C50611 * C2691) * C254 -
            (C19772 * C2693 + C50611 * C2697) * C50686) *
               C19771) *
              C50771 * C250 +
          ((C19914 * C254 -
            ((C19772 * C134 + C50611 * C144) * C50899 +
             (C19772 * C123 + C50611 * C130) * C253) +
            C19915 * C50686) *
               C19768 +
           (C19916 * C254 - (C19915 * C50899 + C19914 * C253) +
            C19917 * C50686) *
               C19769 +
           (C19918 * C254 - (C19917 * C50899 + C19916 * C253) +
            C19919 * C50686) *
               C19770 +
           ((C19772 * C2689 + C50611 * C2692) * C254 -
            (C19919 * C50899 + C19918 * C253) +
            (C19772 * C2694 + C50611 * C2698) * C50686) *
               C19771) *
              C50771 * C251 +
          (((C19772 * C124 + C50611 * C131) * C253 +
            (C19772 * C135 + C50611 * C145) * C50899 - C19920 * C254 -
            C19921 * C50686) *
               C19768 +
           (C19920 * C253 + C19921 * C50899 - C19922 * C254 - C19923 * C50686) *
               C19769 +
           (C19922 * C253 + C19923 * C50899 - C19924 * C254 - C19925 * C50686) *
               C19770 +
           (C19924 * C253 + C19925 * C50899 -
            (C19772 * C2690 + C50611 * C2695) * C254 -
            (C19772 * C2696 + C50611 * C2699) * C50686) *
               C19771) *
              C50771 * C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19772 * C122 + C50611 * C129) * C600 +
           (C19772 * C133 + C50611 * C143) * C595 - C19908 * C601 -
           C19909 * C596 + C19910 * C602 + C19911 * C597 - C19912 * C603 -
           C19913 * C598) *
              C19768 +
          (C19908 * C600 + C19909 * C595 - C19910 * C601 - C19911 * C596 +
           C19912 * C602 + C19913 * C597 - C20130 * C603 - C20131 * C598) *
              C19769 +
          (C19910 * C600 + C19911 * C595 - C19912 * C601 - C19913 * C596 +
           C20130 * C602 + C20131 * C597 - C20208 * C603 - C20209 * C598) *
              C19770 +
          (C19912 * C600 + C19913 * C595 - C20130 * C601 - C20131 * C596 +
           C20208 * C602 + C20209 * C597 -
           (C19772 * C20199 + C50611 * C20200) * C603 -
           (C19772 * C20201 + C50611 * C20202) * C598) *
              C19771) *
         C50771 * C50636 * C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C253 +
             (C19772 * C133 + C50611 * C143) * C50899 - C19908 * C254 -
             C19909 * C50686) *
                C16986 +
            (C19908 * C253 + C19909 * C50899 - C19910 * C254 -
             C19911 * C50686) *
                C50809) *
               C5082 +
           (((C19772 * C383 + C50611 * C394) * C253 +
             (C19772 * C393 + C50611 * C401) * C50899 - C20328 * C254 -
             C20329 * C50686) *
                C16986 +
            (C20328 * C253 + C20329 * C50899 - C20330 * C254 -
             C20331 * C50686) *
                C50809) *
               C5083 +
           (((C19772 * C851 + C50611 * C856) * C253 +
             (C19772 * C860 + C50611 * C866) * C50899 - C20548 * C254 -
             C20549 * C50686) *
                C16986 +
            (C20548 * C253 + C20549 * C50899 - C20550 * C254 -
             C20551 * C50686) *
                C50809) *
               C5084) *
              C250 +
          (((C19914 * C254 -
             ((C19772 * C134 + C50611 * C144) * C50899 +
              (C19772 * C123 + C50611 * C130) * C253) +
             C19915 * C50686) *
                C16986 +
            (C19916 * C254 - (C19915 * C50899 + C19914 * C253) +
             C19917 * C50686) *
                C50809) *
               C5082 +
           ((C20962 * C254 -
             ((C19772 * C389 + C50611 * C397) * C50899 +
              (C19772 * C379 + C50611 * C385) * C253) +
             C20963 * C50686) *
                C16986 +
            (C20964 * C254 - (C20963 * C50899 + C20962 * C253) +
             C20965 * C50686) *
                C50809) *
               C5083 +
           ((C21876 * C254 -
             ((C19772 * C861 + C50611 * C867) * C50899 +
              (C19772 * C852 + C50611 * C857) * C253) +
             C21877 * C50686) *
                C16986 +
            ((C19772 * C3195 + C50611 * C3198) * C254 -
             (C21877 * C50899 + C21876 * C253) +
             (C19772 * C3200 + C50611 * C3204) * C50686) *
                C50809) *
               C5084) *
              C251 +
          ((((C19772 * C124 + C50611 * C131) * C253 +
             (C19772 * C135 + C50611 * C145) * C50899 - C19920 * C254 -
             C19921 * C50686) *
                C16986 +
            (C19920 * C253 + C19921 * C50899 - C19922 * C254 -
             C19923 * C50686) *
                C50809) *
               C5082 +
           (((C19772 * C380 + C50611 * C386) * C253 +
             (C19772 * C390 + C50611 * C398) * C50899 - C21878 * C254 -
             C21879 * C50686) *
                C16986 +
            (C21878 * C253 + C21879 * C50899 -
             (C19772 * C723 + C50611 * C735) * C254 -
             (C19772 * C739 + C50611 * C747) * C50686) *
                C50809) *
               C5083 +
           (((C19772 * C853 + C50611 * C858) * C253 +
             (C19772 * C862 + C50611 * C868) * C50899 - C21880 * C254 -
             C21881 * C50686) *
                C16986 +
            (C21880 * C253 + C21881 * C50899 -
             (C19772 * C3196 + C50611 * C3202) * C254 -
             (C19772 * C3201 + C50611 * C3205) * C50686) *
                C50809) *
               C5084) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C600 +
            (C19772 * C133 + C50611 * C143) * C595 - C19908 * C601 -
            C19909 * C596 + C19910 * C602 + C19911 * C597 - C19912 * C603 -
            C19913 * C598) *
               C16986 +
           (C19908 * C600 + C19909 * C595 - C19910 * C601 - C19911 * C596 +
            C19912 * C602 + C19913 * C597 - C20130 * C603 - C20131 * C598) *
               C50809) *
              C5082 +
          ((C22064 * C600 + C22065 * C595 - C20328 * C601 - C20329 * C596 +
            C20330 * C602 + C20331 * C597 - C20332 * C603 - C20333 * C598) *
               C16986 +
           (C20328 * C600 + C20329 * C595 - C20330 * C601 - C20331 * C596 +
            C20332 * C602 + C20333 * C597 - C20334 * C603 - C20335 * C598) *
               C50809) *
              C5083 +
          ((C22066 * C600 + C22067 * C595 - C20548 * C601 - C20549 * C596 +
            C20550 * C602 + C20551 * C597 - C20552 * C603 - C20553 * C598) *
               C16986 +
           (C20548 * C600 + C20549 * C595 - C20550 * C601 - C20551 * C596 +
            C20552 * C602 + C20553 * C597 -
            (C19772 * C20531 + C50611 * C20532) * C603 -
            (C19772 * C20533 + C50611 * C20534) * C598) *
               C50809) *
              C5084) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C506 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C501 -
            (C17174 + C17175 + C17176) * C507 -
            (C17177 + C17178 + C17179) * C502 +
            (C17508 + C17509 + C17510) * C508 +
            (C17511 + C17512 + C17513) * C503) *
               C16986 +
           ((C17176 + C17175 + C17174) * C506 +
            (C17179 + C17178 + C17177) * C501 -
            (C17510 + C17509 + C17508) * C507 -
            (C17513 + C17512 + C17511) * C502 +
            (C17632 + C17631 + C17630) * C508 +
            (C17635 + C17634 + C17633) * C503) *
               C50809) *
              C50771 * C50636 * C50901 +
          (((C17806 + C17807 + C17808) * C507 -
            ((C16990 * C390 + C16985 * C398 + C16989 * C389 + C16984 * C397 +
              C16988 * C393 + C16983 * C401) *
                 C501 +
             (C16990 * C380 + C16985 * C386 + C16989 * C379 + C16984 * C385 +
              C16988 * C383 + C16983 * C394) *
                 C506) +
            (C17809 + C17810 + C17811) * C502 -
            (C17812 + C17813 + C17814) * C508 -
            (C17815 + C17816 + C17817) * C503) *
               C16986 +
           ((C17814 + C17813 + C17812) * C507 -
            ((C17811 + C17810 + C17809) * C501 +
             (C17808 + C17807 + C17806) * C506) +
            (C17817 + C17816 + C17815) * C502 -
            (C16990 * C3984 + C16985 * C3985 + C16989 * C2994 + C16984 * C2998 +
             C16988 * C2995 + C16983 * C2999) *
                C508 -
            (C16990 * C3986 + C16985 * C3987 + C16989 * C3000 + C16984 * C3006 +
             C16988 * C3001 + C16983 * C3007) *
                C503) *
               C50809) *
              C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
              C16990 * C124 + C16985 * C131) *
                 C121 +
             (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
              C16990 * C135 + C16985 * C145) *
                 C50670) *
                C16986 +
            ((C17176 + C17175 + C17174) * C121 +
             (C17179 + C17178 + C17177) * C50670) *
                C50809) *
               C50771 * C250 -
           (((C17185 + C17184 + C17183) * C50670 +
             (C17182 + C17181 + C17180) * C121) *
                C50809 +
            ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
              C16988 * C134 + C16983 * C144) *
                 C50670 +
             (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
              C16988 * C123 + C16983 * C130) *
                 C121) *
                C16986) *
               C50771 * C251 +
           (((C16988 * C124 + C16983 * C131 + C16989 * C125 + C16984 * C132 +
              C16990 * C126 + C16985 * C138) *
                 C121 +
             (C16988 * C135 + C16983 * C145 + C16989 * C136 + C16984 * C146 +
              C16990 * C137 + C16985 * C147) *
                 C50670) *
                C16986 +
            ((C17188 + C17187 + C17186) * C121 +
             (C17191 + C17190 + C17189) * C50670) *
                C50809) *
               C50771 * C252) *
              C50901 +
          ((((C16988 * C379 + C16983 * C385 + C16989 * C380 + C16984 * C386 +
              C16990 * C381 + C16985 * C387) *
                 C121 +
             (C16988 * C389 + C16983 * C397 + C16989 * C390 + C16984 * C398 +
              C16990 * C391 + C16985 * C399) *
                 C50670) *
                C16986 +
            ((C16988 * C719 + C16983 * C727 + C16989 * C720 + C16984 * C728 +
              C16990 * C721 + C16985 * C729) *
                 C121 +
             (C16988 * C731 + C16983 * C743 + C16989 * C732 + C16984 * C744 +
              C16990 * C733 + C16985 * C745) *
                 C50670) *
                C50809) *
               C50771 * C251 -
           (((C16990 * C732 + C16985 * C744 + C16989 * C731 + C16984 * C743 +
              C16988 * C730 + C16983 * C742) *
                 C50670 +
             (C16990 * C720 + C16985 * C728 + C16989 * C719 + C16984 * C727 +
              C16988 * C718 + C16983 * C726) *
                 C121) *
                C50809 +
            ((C16990 * C390 + C16985 * C398 + C16989 * C389 + C16984 * C397 +
              C16988 * C393 + C16983 * C401) *
                 C50670 +
             (C16990 * C380 + C16985 * C386 + C16989 * C379 + C16984 * C385 +
              C16988 * C383 + C16983 * C394) *
                 C121) *
                C16986) *
               C50771 * C250 -
           (((C16990 * C1414 + C16985 * C1415 + C16989 * C733 + C16984 * C745 +
              C16988 * C732 + C16983 * C744) *
                 C50670 +
             (C16990 * C1412 + C16985 * C1413 + C16989 * C721 + C16984 * C729 +
              C16988 * C720 + C16983 * C728) *
                 C121) *
                C50809 +
            ((C16990 * C392 + C16985 * C400 + C16989 * C391 + C16984 * C399 +
              C16988 * C390 + C16983 * C398) *
                 C50670 +
             (C16990 * C382 + C16985 * C388 + C16989 * C381 + C16984 * C387 +
              C16988 * C380 + C16983 * C386) *
                 C121) *
                C16986) *
               C50771 * C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C121 +
             (C19772 * C133 + C50611 * C143) * C50670) *
                C19768 +
            (C19908 * C121 + C19909 * C50670) * C19769 +
            (C19910 * C121 + C19911 * C50670) * C19770 +
            (C19912 * C121 + C19913 * C50670) * C19771) *
               C50771 * C250 -
           ((C19919 * C50670 + C19918 * C121) * C19771 +
            (C19917 * C50670 + C19916 * C121) * C19770 +
            (C19915 * C50670 + C19914 * C121) * C19769 +
            ((C19772 * C134 + C50611 * C144) * C50670 +
             (C19772 * C123 + C50611 * C130) * C121) *
                C19768) *
               C50771 * C251 +
           (((C19772 * C124 + C50611 * C131) * C121 +
             (C19772 * C135 + C50611 * C145) * C50670) *
                C19768 +
            (C19920 * C121 + C19921 * C50670) * C19769 +
            (C19922 * C121 + C19923 * C50670) * C19770 +
            (C19924 * C121 + C19925 * C50670) * C19771) *
               C50771 * C252) *
              C50901 +
          ((((C19772 * C379 + C50611 * C385) * C121 +
             (C19772 * C389 + C50611 * C397) * C50670) *
                C19768 +
            ((C19772 * C719 + C50611 * C727) * C121 +
             (C19772 * C731 + C50611 * C743) * C50670) *
                C19769 +
            ((C19772 * C724 + C50611 * C736) * C121 +
             (C19772 * C740 + C50611 * C748) * C50670) *
                C19770 +
            ((C19772 * C2994 + C50611 * C2998) * C121 +
             (C19772 * C3000 + C50611 * C3006) * C50670) *
                C19771) *
               C50771 * C251 -
           (((C19772 * C3001 + C50611 * C3007) * C50670 +
             (C19772 * C2995 + C50611 * C2999) * C121) *
                C19771 +
            ((C19772 * C741 + C50611 * C749) * C50670 +
             (C19772 * C725 + C50611 * C737) * C121) *
                C19770 +
            ((C19772 * C730 + C50611 * C742) * C50670 +
             (C19772 * C718 + C50611 * C726) * C121) *
                C19769 +
            ((C19772 * C393 + C50611 * C401) * C50670 +
             (C19772 * C383 + C50611 * C394) * C121) *
                C19768) *
               C50771 * C250 -
           (((C19772 * C3986 + C50611 * C3987) * C50670 +
             (C19772 * C3984 + C50611 * C3985) * C121) *
                C19771 +
            ((C19772 * C739 + C50611 * C747) * C50670 +
             (C19772 * C723 + C50611 * C735) * C121) *
                C19770 +
            ((C19772 * C732 + C50611 * C744) * C50670 +
             (C19772 * C720 + C50611 * C728) * C121) *
                C19769 +
            ((C19772 * C390 + C50611 * C398) * C50670 +
             (C19772 * C380 + C50611 * C386) * C121) *
                C19768) *
               C50771 * C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C506 +
            (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
            C19909 * C502 + C19910 * C508 + C19911 * C503) *
               C19768 +
           (C19908 * C506 + C19909 * C501 - C19910 * C507 - C19911 * C502 +
            C19912 * C508 + C19913 * C503) *
               C19769 +
           (C19910 * C506 + C19911 * C501 - C19912 * C507 - C19913 * C502 +
            C20130 * C508 + C20131 * C503) *
               C19770 +
           (C19912 * C506 + C19913 * C501 - C20130 * C507 - C20131 * C502 +
            C20208 * C508 + C20209 * C503) *
               C19771) *
              C50771 * C50636 * C50901 +
          ((C20328 * C507 -
            ((C19772 * C393 + C50611 * C401) * C501 +
             (C19772 * C383 + C50611 * C394) * C506) +
            C20329 * C502 - C20330 * C508 - C20331 * C503) *
               C19768 +
           (C20330 * C507 - (C20329 * C501 + C20328 * C506) + C20331 * C502 -
            C20332 * C508 - C20333 * C503) *
               C19769 +
           (C20332 * C507 - (C20331 * C501 + C20330 * C506) + C20333 * C502 -
            C20334 * C508 - C20335 * C503) *
               C19770 +
           (C20334 * C507 - (C20333 * C501 + C20332 * C506) + C20335 * C502 -
            (C19772 * C20307 + C50611 * C20308) * C508 -
            (C19772 * C20309 + C50611 * C20310) * C503) *
               C19771) *
              C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19772 * C122 + C50611 * C129) * C121 +
              (C19772 * C133 + C50611 * C143) * C50670) *
                 C16986 +
             (C19908 * C121 + C19909 * C50670) * C50809) *
                C5082 +
            ((C22076 + C22077) * C16986 + (C22032 + C22033) * C50809) * C5083 +
            ((C22078 + C22079) * C16986 + (C22038 + C22039) * C50809) * C5084) *
               C250 -
           (((C22040 + C22041) * C50809 + (C22080 + C22081) * C16986) * C5084 +
            ((C22046 + C22047) * C50809 + (C22082 + C22083) * C16986) * C5083 +
            ((C19915 * C50670 + C19914 * C121) * C50809 +
             ((C19772 * C134 + C50611 * C144) * C50670 +
              (C19772 * C123 + C50611 * C130) * C121) *
                 C16986) *
                C5082) *
               C251 +
           ((((C19772 * C124 + C50611 * C131) * C121 +
              (C19772 * C135 + C50611 * C145) * C50670) *
                 C16986 +
             (C19920 * C121 + C19921 * C50670) * C50809) *
                C5082 +
            ((C22084 + C22085) * C16986 + (C22056 + C22057) * C50809) * C5083 +
            ((C22086 + C22087) * C16986 + (C22062 + C22063) * C50809) * C5084) *
               C252) *
              C50901 +
          ((((C22083 + C22082) * C16986 + (C22047 + C22046) * C50809) * C5082 +
            ((C22081 + C22080) * C16986 + (C22041 + C22040) * C50809) * C5083 +
            (((C19772 * C1057 + C50611 * C1065) * C121 +
              (C19772 * C1061 + C50611 * C1069) * C50670) *
                 C16986 +
             ((C19772 * C3484 + C50611 * C3492) * C121 +
              (C19772 * C3490 + C50611 * C3496) * C50670) *
                 C50809) *
                C5084) *
               C251 -
           ((((C19772 * C3491 + C50611 * C3497) * C50670 +
              (C19772 * C3485 + C50611 * C3493) * C121) *
                 C50809 +
             ((C19772 * C1062 + C50611 * C1070) * C50670 +
              (C19772 * C1058 + C50611 * C1066) * C121) *
                 C16986) *
                C5084 +
            ((C22039 + C22038) * C50809 + (C22079 + C22078) * C16986) * C5083 +
            ((C22033 + C22032) * C50809 + (C22077 + C22076) * C16986) * C5082) *
               C250 -
           ((((C19772 * C6821 + C50611 * C6822) * C50670 +
              (C19772 * C6819 + C50611 * C6820) * C121) *
                 C50809 +
             ((C19772 * C1060 + C50611 * C1068) * C50670 +
              (C19772 * C1056 + C50611 * C1064) * C121) *
                 C16986) *
                C5084 +
            ((C22063 + C22062) * C50809 + (C22087 + C22086) * C16986) * C5083 +
            ((C22057 + C22056) * C50809 + (C22085 + C22084) * C16986) * C5082) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C506 +
             (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
             C19909 * C502 + C19910 * C508 + C19911 * C503) *
                C16986 +
            (C19908 * C506 + C19909 * C501 - C19910 * C507 - C19911 * C502 +
             C19912 * C508 + C19913 * C503) *
                C50809) *
               C5082 +
           ((C22484 + C22485 - C22486 - C22487 + C22488 + C22489) * C16986 +
            (C22490 + C22491 - C22492 - C22493 + C22494 + C22495) * C50809) *
               C5083 +
           ((C22496 + C22497 - C22498 - C22499 + C22500 + C22501) * C16986 +
            (C22502 + C22503 - C22504 - C22505 + C22506 + C22507) * C50809) *
               C5084) *
              C50636 * C50901 +
          (((C22486 - (C22485 + C22484) + C22487 - C22488 - C22489) * C16986 +
            (C22492 - (C22491 + C22490) + C22493 - C22494 - C22495) * C50809) *
               C5082 +
           ((C22498 - (C22497 + C22496) + C22499 - C22500 - C22501) * C16986 +
            (C22504 - (C22503 + C22502) + C22505 - C22506 - C22507) * C50809) *
               C5083 +
           ((C22516 * C507 -
             ((C19772 * C1062 + C50611 * C1070) * C501 +
              (C19772 * C1058 + C50611 * C1066) * C506) +
             C22517 * C502 - C22518 * C508 - C22519 * C503) *
                C16986 +
            (C22518 * C507 - (C22517 * C501 + C22516 * C506) + C22519 * C502 -
             (C19772 * C20619 + C50611 * C20621) * C508 -
             (C19772 * C20620 + C50611 * C20622) * C503) *
                C50809) *
               C5084) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C1174 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C1169 -
             (C24854 + C24855) * C1175 - (C24856 + C24857) * C50686) *
                C16986 +
            ((C24855 + C24854) * C1174 + (C24857 + C24856) * C1169 -
             (C24858 + C24859) * C1175 - (C24860 + C24861) * C50686) *
                C50809) *
               C50916 +
           (((C27944 + C27945) * C1174 + (C27946 + C27947) * C1169 -
             C28474 * C1175 - C28475 * C50686) *
                C16986 +
            (C28478 * C1174 + C28479 * C1169 - C25492 * C1175 -
             C25493 * C50686) *
                C50809) *
               C50835) *
              C50945 +
          ((((C24862 + C24863) * C1175 -
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C1169 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C1174) +
             (C24864 + C24865) * C50686) *
                C16986 +
            ((C24866 + C24867) * C1175 -
             ((C24865 + C24864) * C1169 + (C24863 + C24862) * C1174) +
             (C24868 + C24869) * C50686) *
                C50809) *
               C50916 +
           (((C26411 + C26410) * C1175 -
             ((C27948 + C27949) * C1169 + (C27950 + C27951) * C1174) +
             (C26413 + C26412) * C50686) *
                C16986 +
            ((C26415 + C26414) * C1175 -
             ((C26412 + C26413) * C1169 + (C26410 + C26411) * C1174) +
             (C26417 + C26416) * C50686) *
                C50809) *
               C50835) *
              C50930 +
          ((((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                 C1174 +
             (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                 C1169 -
             (C24870 + C24871) * C1175 - (C24872 + C24873) * C50686) *
                C16986 +
            ((C24871 + C24870) * C1174 + (C24873 + C24872) * C1169 -
             (C24874 + C24875) * C1175 - (C24876 + C24877) * C50686) *
                C50809) *
               C50916 +
           (((C27952 + C27953) * C1174 + (C27954 + C27955) * C1169 -
             (C27722 + C27723) * C1175 - (C27724 + C27725) * C50686) *
                C16986 +
            ((C27723 + C27722) * C1174 + (C27725 + C27724) * C1169 -
             (C49761 * C722 + C50616 * C734 + C49768 * C723 + C50887 * C735) *
                 C1175 -
             (C49761 * C738 + C50616 * C746 + C49768 * C739 + C50887 * C747) *
                 C50686) *
                C50809) *
               C50835) *
              C1173) *
         C50700) /
        (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C1279 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50946 -
             (C24854 + C24855) * C1280 - (C24856 + C24857) * C50933 +
             C25170 * C1281 + C25171 * C1276) *
                C16986 +
            ((C24855 + C24854) * C1279 + (C24857 + C24856) * C50946 -
             (C24858 + C24859) * C1280 - (C24860 + C24861) * C50933 +
             (C25190 + C25191) * C1281 + (C25192 + C25193) * C1276) *
                C50809) *
               C50916 +
           (((C27944 + C27945) * C1279 + (C27946 + C27947) * C50946 -
             C28474 * C1280 - C28475 * C50933 + C28476 * C1281 +
             C28477 * C1276) *
                C16986 +
            (C28478 * C1279 + C28479 * C50946 - C25492 * C1280 -
             C25493 * C50933 + (C25489 + C25488) * C1281 +
             (C25491 + C25490) * C1276) *
                C50809) *
               C50835) *
              C1277 +
          ((((C24862 + C24863) * C1280 -
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C50946 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C1279) +
             (C24864 + C24865) * C50933 - C25180 * C1281 - C25181 * C1276) *
                C16986 +
            ((C24866 + C24867) * C1280 -
             ((C24865 + C24864) * C50946 + (C24863 + C24862) * C1279) +
             (C24868 + C24869) * C50933 - (C25194 + C25195) * C1281 -
             (C25196 + C25197) * C1276) *
                C50809) *
               C50916 +
           (((C26411 + C26410) * C1280 -
             ((C27948 + C27949) * C50946 + (C27950 + C27951) * C1279) +
             (C26413 + C26412) * C50933 - (C26414 + C26415) * C1281 -
             (C26416 + C26417) * C1276) *
                C16986 +
            ((C26415 + C26414) * C1280 -
             ((C26412 + C26413) * C50946 + (C26410 + C26411) * C1279) +
             (C26417 + C26416) * C50933 -
             (C49761 * C3984 + C50616 * C3985 + C49768 * C2994 +
              C50887 * C2998) *
                 C1281 -
             (C49761 * C3986 + C50616 * C3987 + C49768 * C3000 +
              C50887 * C3006) *
                 C1276) *
                C50809) *
               C50835) *
              C50641) *
         C50700) /
        (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                  C1174 +
              (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                  C1169 -
              (C24854 + C24855) * C1175 - (C24856 + C24857) * C50686) *
                 C16986 +
             ((C24855 + C24854) * C1174 + (C24857 + C24856) * C1169 -
              (C24858 + C24859) * C1175 - (C24860 + C24861) * C50686) *
                 C50809) *
                C50916 +
            (((C27944 + C27945) * C1174 + (C27946 + C27947) * C1169 -
              C28474 * C1175 - C28475 * C50686) *
                 C16986 +
             (C28478 * C1174 + C28479 * C1169 - C25492 * C1175 -
              C25493 * C50686) *
                 C50809) *
                C50835) *
               C1277 +
           ((((C24862 + C24863) * C1175 -
              ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                   C1169 +
               (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                   C1174) +
              (C24864 + C24865) * C50686) *
                 C16986 +
             ((C24866 + C24867) * C1175 -
              ((C24865 + C24864) * C1169 + (C24863 + C24862) * C1174) +
              (C24868 + C24869) * C50686) *
                 C50809) *
                C50916 +
            ((C29708 * C1175 -
              ((C27948 + C27949) * C1169 + (C27950 + C27951) * C1174) +
              C29709 * C50686) *
                 C16986 +
             ((C26415 + C26414) * C1175 - (C29710 * C1169 + C29711 * C1174) +
              (C26417 + C26416) * C50686) *
                 C50809) *
                C50835) *
               C50641) *
              C50901 +
          ((((C28478 * C1175 -
              ((C27947 + C27946) * C1169 + (C27945 + C27944) * C1174) +
              C28479 * C50686) *
                 C16986 +
             (C28476 * C1175 - (C28475 * C1169 + C28474 * C1174) +
              C28477 * C50686) *
                 C50809) *
                C50916 +
            ((C28904 * C1175 -
              ((C28706 + C28707) * C1169 + (C28708 + C28709) * C1174) +
              C28905 * C50686) *
                 C16986 +
             ((C25807 + C25806) * C1175 - (C28906 * C1169 + C28907 * C1174) +
              (C25809 + C25808) * C50686) *
                 C50809) *
                C50835) *
               C1277 +
           ((((C27951 + C27950) * C1174 + (C27949 + C27948) * C1169 -
              C29711 * C1175 - C29710 * C50686) *
                 C16986 +
             (C29708 * C1174 + C29709 * C1169 - (C26414 + C26415) * C1175 -
              (C26416 + C26417) * C50686) *
                 C50809) *
                C50916 +
            (((C28698 + C28699) * C1174 + (C28700 + C28701) * C1169 -
              (C28703 + C28702) * C1175 - (C28705 + C28704) * C50686) *
                 C16986 +
             ((C28702 + C28703) * C1174 + (C28704 + C28705) * C1169 -
              (C49761 * C3196 + C50616 * C3202 + C49768 * C3195 +
               C50887 * C3198) *
                  C1175 -
              (C49761 * C3201 + C50616 * C3205 + C49768 * C3200 +
               C50887 * C3204) *
                  C50686) *
                 C50809) *
                C50835) *
               C50641) *
              C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                  C1174 +
              (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                  C1169 -
              (C24854 + C24855) * C1175 - (C24856 + C24857) * C50686) *
                 C16986 +
             ((C24855 + C24854) * C1174 + (C24857 + C24856) * C1169 -
              (C24858 + C24859) * C1175 - (C24860 + C24861) * C50686) *
                 C50809) *
                C50916 +
            (((C27944 + C27945) * C1174 + (C27946 + C27947) * C1169 -
              C28474 * C1175 - C28475 * C50686) *
                 C16986 +
             (C28478 * C1174 + C28479 * C1169 - C25492 * C1175 -
              C25493 * C50686) *
                 C50809) *
                C50835) *
               C50892 +
           ((((C24862 + C24863) * C1175 -
              ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                   C1169 +
               (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                   C1174) +
              (C24864 + C24865) * C50686) *
                 C16986 +
             ((C24866 + C24867) * C1175 -
              ((C24865 + C24864) * C1169 + (C24863 + C24862) * C1174) +
              (C24868 + C24869) * C50686) *
                 C50809) *
                C50916 +
            ((C29708 * C1175 -
              ((C27948 + C27949) * C1169 + (C27950 + C27951) * C1174) +
              C29709 * C50686) *
                 C16986 +
             ((C26415 + C26414) * C1175 - (C29710 * C1169 + C29711 * C1174) +
              (C26417 + C26416) * C50686) *
                 C50809) *
                C50835) *
               C50641) *
              C1514 +
          ((((C28478 * C1175 -
              ((C27947 + C27946) * C1169 + (C27945 + C27944) * C1174) +
              C28479 * C50686) *
                 C16986 +
             (C28476 * C1175 - (C28475 * C1169 + C28474 * C1174) +
              C28477 * C50686) *
                 C50809) *
                C50916 +
            ((C28904 * C1175 -
              ((C28706 + C28707) * C1169 + (C28708 + C28709) * C1174) +
              C28905 * C50686) *
                 C16986 +
             ((C25807 + C25806) * C1175 - (C28906 * C1169 + C28907 * C1174) +
              (C25809 + C25808) * C50686) *
                 C50809) *
                C50835) *
               C50892 +
           ((((C27951 + C27950) * C1174 + (C27949 + C27948) * C1169 -
              C29711 * C1175 - C29710 * C50686) *
                 C16986 +
             (C29708 * C1174 + C29709 * C1169 - (C26414 + C26415) * C1175 -
              (C26416 + C26417) * C50686) *
                 C50809) *
                C50916 +
            (((C28698 + C28699) * C1174 + (C28700 + C28701) * C1169 -
              (C28703 + C28702) * C1175 - (C28705 + C28704) * C50686) *
                 C16986 +
             ((C28702 + C28703) * C1174 + (C28704 + C28705) * C1169 -
              (C49761 * C3196 + C50616 * C3202 + C49768 * C3195 +
               C50887 * C3198) *
                  C1175 -
              (C49761 * C3201 + C50616 * C3205 + C49768 * C3200 +
               C50887 * C3204) *
                  C50686) *
                 C50809) *
                C50835) *
               C50641) *
              C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C1279 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50946 -
             (C24854 + C24855) * C1280 - (C24856 + C24857) * C50933 +
             C25170 * C1281 + C25171 * C1276) *
                C16986 +
            ((C24855 + C24854) * C1279 + (C24857 + C24856) * C50946 -
             (C24858 + C24859) * C1280 - (C24860 + C24861) * C50933 +
             (C25190 + C25191) * C1281 + (C25192 + C25193) * C1276) *
                C50809) *
               C50916 +
           (((C27944 + C27945) * C1279 + (C27946 + C27947) * C50946 -
             C28474 * C1280 - C28475 * C50933 + C28476 * C1281 +
             C28477 * C1276) *
                C16986 +
            (C28478 * C1279 + C28479 * C50946 - C25492 * C1280 -
             C25493 * C50933 + (C25489 + C25488) * C1281 +
             (C25491 + C25490) * C1276) *
                C50809) *
               C50835) *
              C50636 * C1514 +
          (((C28478 * C1280 -
             ((C27947 + C27946) * C50946 + (C27945 + C27944) * C1279) +
             C28479 * C50933 - C25492 * C1281 - C25493 * C1276) *
                C16986 +
            (C28476 * C1280 - (C28475 * C50946 + C28474 * C1279) +
             C28477 * C50933 - (C25488 + C25489) * C1281 -
             (C25490 + C25491) * C1276) *
                C50809) *
               C50916 +
           ((C28904 * C1280 -
             ((C28706 + C28707) * C50946 + (C28708 + C28709) * C1279) +
             C28905 * C50933 - (C25806 + C25807) * C1281 -
             (C25808 + C25809) * C1276) *
                C16986 +
            ((C25807 + C25806) * C1280 - (C28906 * C50946 + C28907 * C1279) +
             (C25809 + C25808) * C50933 -
             (C49761 * C3352 + C50616 * C3354 + C49768 * C3353 +
              C50887 * C3355) *
                 C1281 -
             (C49761 * C3356 + C50616 * C3358 + C49768 * C3357 +
              C50887 * C3359) *
                 C1276) *
                C50809) *
               C50835) *
              C50636 * C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C1174 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C1169 -
             (C24854 + C24855) * C1175 - (C24856 + C24857) * C50686) *
                C16986 +
            ((C24855 + C24854) * C1174 + (C24857 + C24856) * C1169 -
             (C24858 + C24859) * C1175 - (C24860 + C24861) * C50686) *
                C50809) *
               C50916 +
           (((C27944 + C27945) * C1174 + (C27946 + C27947) * C1169 -
             C28474 * C1175 - C28475 * C50686) *
                C16986 +
            (C28478 * C1174 + C28479 * C1169 - C25492 * C1175 -
             C25493 * C50686) *
                C50809) *
               C50835) *
              C50636 * C50947 +
          (((C28478 * C1175 -
             ((C27947 + C27946) * C1169 + (C27945 + C27944) * C1174) +
             C28479 * C50686) *
                C16986 +
            (C28476 * C1175 - (C28475 * C1169 + C28474 * C1174) +
             C28477 * C50686) *
                C50809) *
               C50916 +
           ((C28904 * C1175 -
             ((C28706 + C28707) * C1169 + (C28708 + C28709) * C1174) +
             C28905 * C50686) *
                C16986 +
            ((C25807 + C25806) * C1175 - (C28906 * C1169 + C28907 * C1174) +
             (C25809 + C25808) * C50686) *
                C50809) *
               C50835) *
              C50636 * C50936 +
          ((((C28709 + C28708) * C1174 + (C28707 + C28706) * C1169 -
             C28907 * C1175 - C28906 * C50686) *
                C16986 +
            (C28904 * C1174 + C28905 * C1169 - (C25806 + C25807) * C1175 -
             (C25808 + C25809) * C50686) *
                C50809) *
               C50916 +
           (((C29058 + C29059) * C1174 + (C29060 + C29061) * C1169 -
             (C28916 + C28917) * C1175 - (C28918 + C28919) * C50686) *
                C16986 +
            ((C28917 + C28916) * C1174 + (C28919 + C28918) * C1169 -
             (C49761 * C3482 + C50616 * C3488 + C49768 * C3483 +
              C50887 * C3489) *
                 C1175 -
             (C49761 * C3486 + C50616 * C3494 + C49768 * C3487 +
              C50887 * C3495) *
                 C50686) *
                C50809) *
               C50835) *
              C50636 * C1746)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C506 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C501 -
             (C24854 + C24855) * C507 - (C24856 + C24857) * C502 +
             C25170 * C508 + C25171 * C503) *
                C16986 +
            ((C24855 + C24854) * C506 + (C24857 + C24856) * C501 -
             (C24858 + C24859) * C507 - (C24860 + C24861) * C502 +
             (C25190 + C25191) * C508 + (C25192 + C25193) * C503) *
                C50809) *
               C50916 +
           (((C27944 + C27945) * C506 + (C27946 + C27947) * C501 -
             (C25481 + C25480) * C507 - (C25483 + C25482) * C502 +
             (C25485 + C25484) * C508 + (C25487 + C25486) * C503) *
                C16986 +
            ((C25480 + C25481) * C506 + (C25482 + C25483) * C501 -
             C25492 * C507 - C25493 * C502 + (C25489 + C25488) * C508 +
             (C25491 + C25490) * C503) *
                C50809) *
               C50835) *
              C50892 +
          ((((C24862 + C24863) * C507 -
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C501 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C506) +
             (C24864 + C24865) * C502 - C25180 * C508 - C25181 * C503) *
                C16986 +
            ((C24866 + C24867) * C507 -
             ((C24865 + C24864) * C501 + (C24863 + C24862) * C506) +
             (C24868 + C24869) * C502 - (C25194 + C25195) * C508 -
             (C25196 + C25197) * C503) *
                C50809) *
               C50916 +
           (((C26411 + C26410) * C507 -
             ((C27948 + C27949) * C501 + (C27950 + C27951) * C506) +
             (C26413 + C26412) * C502 - (C26414 + C26415) * C508 -
             (C26416 + C26417) * C503) *
                C16986 +
            ((C26415 + C26414) * C507 -
             ((C26412 + C26413) * C501 + (C26410 + C26411) * C506) +
             (C26417 + C26416) * C502 -
             (C49761 * C3984 + C50616 * C3985 + C49768 * C2994 +
              C50887 * C2998) *
                 C508 -
             (C49761 * C3986 + C50616 * C3987 + C49768 * C3000 +
              C50887 * C3006) *
                 C503) *
                C50809) *
               C50835) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C121 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50670) *
                C16986 +
            ((C24855 + C24854) * C121 + (C24857 + C24856) * C50670) * C50809) *
               C50916 +
           (((C49768 * C383 + C50887 * C394 + C49761 * C379 + C50616 * C385) *
                 C121 +
             (C49768 * C393 + C50887 * C401 + C49761 * C389 + C50616 * C397) *
                 C50670) *
                C16986 +
            ((C25480 + C25481) * C121 + (C25482 + C25483) * C50670) * C50809) *
               C50835) *
              C112 -
          ((((C26412 + C26413) * C50670 + (C26410 + C26411) * C121) * C50809 +
            ((C49761 * C390 + C50616 * C398 + C49768 * C389 + C50887 * C397) *
                 C50670 +
             (C49761 * C380 + C50616 * C386 + C49768 * C379 + C50887 * C385) *
                 C121) *
                C16986) *
               C50835 +
           (((C24865 + C24864) * C50670 + (C24863 + C24862) * C121) * C50809 +
            ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                 C50670 +
             (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                 C121) *
                C16986) *
               C50916) *
              C113 +
          ((((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                 C121 +
             (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                 C50670) *
                C16986 +
            ((C24871 + C24870) * C121 + (C24873 + C24872) * C50670) * C50809) *
               C50916 +
           (((C49768 * C380 + C50887 * C386 + C49761 * C381 + C50616 * C387) *
                 C121 +
             (C49768 * C390 + C50887 * C398 + C49761 * C391 + C50616 * C399) *
                 C50670) *
                C16986 +
            ((C49768 * C720 + C50887 * C728 + C49761 * C721 + C50616 * C729) *
                 C121 +
             (C49768 * C732 + C50887 * C744 + C49761 * C733 + C50616 * C745) *
                 C50670) *
                C50809) *
               C50835) *
              C114 -
          ((((C49761 * C1414 + C50616 * C1415 + C49768 * C733 + C50887 * C745) *
                 C50670 +
             (C49761 * C1412 + C50616 * C1413 + C49768 * C721 + C50887 * C729) *
                 C121) *
                C50809 +
            ((C49761 * C392 + C50616 * C400 + C49768 * C391 + C50887 * C399) *
                 C50670 +
             (C49761 * C382 + C50616 * C388 + C49768 * C381 + C50887 * C387) *
                 C121) *
                C16986) *
               C50835 +
           (((C49761 * C270 + C50616 * C277 + C49768 * C265 + C50887 * C273) *
                 C50670 +
             (C49761 * C259 + C50616 * C269 + C49768 * C255 + C50887 * C261) *
                 C121) *
                C50809 +
            ((C49761 * C137 + C50616 * C147 + C49768 * C136 + C50887 * C146) *
                 C50670 +
             (C49761 * C126 + C50616 * C138 + C49768 * C125 + C50887 * C132) *
                 C121) *
                C16986) *
               C50916) *
              C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                  C121 +
              (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                  C50670) *
                 C16986 +
             ((C24855 + C24854) * C121 + (C24857 + C24856) * C50670) * C50809) *
                C50916 +
            (((C27944 + C27945) * C121 + (C27946 + C27947) * C50670) * C16986 +
             (C28478 * C121 + C28479 * C50670) * C50809) *
                C50835) *
               C50892 -
           ((((C26412 + C26413) * C50670 + (C26410 + C26411) * C121) * C50809 +
             ((C27948 + C27949) * C50670 + (C27950 + C27951) * C121) * C16986) *
                C50835 +
            (((C24865 + C24864) * C50670 + (C24863 + C24862) * C121) * C50809 +
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C50670 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C121) *
                 C16986) *
                C50916) *
               C50641) *
              C848 +
          (((((C27951 + C27950) * C121 + (C27949 + C27948) * C50670) * C16986 +
             ((C26411 + C26410) * C121 + (C26413 + C26412) * C50670) * C50809) *
                C50916 +
            (((C28698 + C28699) * C121 + (C28700 + C28701) * C50670) * C16986 +
             ((C28702 + C28703) * C121 + (C28704 + C28705) * C50670) * C50809) *
                C50835) *
               C50641 -
           ((((C25804 + C25805) * C50670 + (C25802 + C25803) * C121) * C50809 +
             ((C28706 + C28707) * C50670 + (C28708 + C28709) * C121) * C16986) *
                C50835 +
            ((C28475 * C50670 + C28474 * C121) * C50809 +
             ((C27947 + C27946) * C50670 + (C27945 + C27944) * C121) * C16986) *
                C50916) *
               C50892) *
              C849 +
          (((((C28709 + C28708) * C121 + (C28707 + C28706) * C50670) * C16986 +
             ((C25803 + C25802) * C121 + (C25805 + C25804) * C50670) * C50809) *
                C50916 +
            (((C49768 * C1058 + C50887 * C1066 + C49761 * C1057 +
               C50616 * C1065) *
                  C121 +
              (C49768 * C1062 + C50887 * C1070 + C49761 * C1061 +
               C50616 * C1069) *
                  C50670) *
                 C16986 +
             ((C49768 * C3485 + C50887 * C3493 + C49761 * C3484 +
               C50616 * C3492) *
                  C121 +
              (C49768 * C3491 + C50887 * C3497 + C49761 * C3490 +
               C50616 * C3496) *
                  C50670) *
                 C50809) *
                C50835) *
               C50892 -
           ((((C49761 * C6821 + C50616 * C6822 + C49768 * C3490 +
               C50887 * C3496) *
                  C50670 +
              (C49761 * C6819 + C50616 * C6820 + C49768 * C3484 +
               C50887 * C3492) *
                  C121) *
                 C50809 +
             ((C49761 * C1060 + C50616 * C1068 + C49768 * C1061 +
               C50887 * C1069) *
                  C50670 +
              (C49761 * C1056 + C50616 * C1064 + C49768 * C1057 +
               C50887 * C1065) *
                  C121) *
                 C16986) *
                C50835 +
            (((C28705 + C28704) * C50670 + (C28703 + C28702) * C121) * C50809 +
             ((C28701 + C28700) * C50670 + (C28699 + C28698) * C121) * C16986) *
                C50916) *
               C50641) *
              C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C600 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C595 -
            (C24854 + C24855) * C601 - (C24856 + C24857) * C596 +
            C25170 * C602 + C25171 * C597 - C25296 * C603 - C25297 * C598) *
               C16986 +
           ((C24855 + C24854) * C600 + (C24857 + C24856) * C595 -
            (C24858 + C24859) * C601 - (C24860 + C24861) * C596 +
            (C25190 + C25191) * C602 + (C25192 + C25193) * C597 -
            (C25306 + C25307) * C603 - (C25308 + C25309) * C598) *
               C50809) *
              C50916 +
          (((C27944 + C27945) * C600 + (C27946 + C27947) * C595 -
            (C25481 + C25480) * C601 - (C25483 + C25482) * C596 +
            (C25485 + C25484) * C602 + (C25487 + C25486) * C597 -
            (C25488 + C25489) * C603 - (C25490 + C25491) * C598) *
               C16986 +
           ((C25480 + C25481) * C600 + (C25482 + C25483) * C595 -
            C25492 * C601 - C25493 * C596 + (C25489 + C25488) * C602 +
            (C25491 + C25490) * C597 -
            (C49761 * C2996 + C50616 * C3002 + C49768 * C2997 +
             C50887 * C3003) *
                C603 -
            (C49761 * C3004 + C50616 * C3008 + C49768 * C3005 +
             C50887 * C3009) *
                C598) *
               C50809) *
              C50835) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C253 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50899 -
             (C24854 + C24855) * C254 - (C24856 + C24857) * C50686) *
                C16986 +
            ((C24855 + C24854) * C253 + (C24857 + C24856) * C50899 -
             (C24858 + C24859) * C254 - (C24860 + C24861) * C50686) *
                C50809) *
               C50916 +
           (((C49768 * C383 + C50887 * C394 + C49761 * C379 + C50616 * C385) *
                 C253 +
             (C49768 * C393 + C50887 * C401 + C49761 * C389 + C50616 * C397) *
                 C50899 -
             (C25481 + C25480) * C254 - (C25483 + C25482) * C50686) *
                C16986 +
            ((C25480 + C25481) * C253 + (C25482 + C25483) * C50899 -
             C25492 * C254 - C25493 * C50686) *
                C50809) *
               C50835) *
              C250 +
          ((((C24862 + C24863) * C254 -
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C50899 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C253) +
             (C24864 + C24865) * C50686) *
                C16986 +
            ((C24866 + C24867) * C254 -
             ((C24865 + C24864) * C50899 + (C24863 + C24862) * C253) +
             (C24868 + C24869) * C50686) *
                C50809) *
               C50916 +
           (((C26411 + C26410) * C254 -
             ((C49761 * C390 + C50616 * C398 + C49768 * C389 + C50887 * C397) *
                  C50899 +
              (C49761 * C380 + C50616 * C386 + C49768 * C379 + C50887 * C385) *
                  C253) +
             (C26413 + C26412) * C50686) *
                C16986 +
            ((C26415 + C26414) * C254 -
             ((C26412 + C26413) * C50899 + (C26410 + C26411) * C253) +
             (C26417 + C26416) * C50686) *
                C50809) *
               C50835) *
              C251 +
          ((((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                 C253 +
             (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                 C50899 -
             (C24870 + C24871) * C254 - (C24872 + C24873) * C50686) *
                C16986 +
            ((C24871 + C24870) * C253 + (C24873 + C24872) * C50899 -
             (C24874 + C24875) * C254 - (C24876 + C24877) * C50686) *
                C50809) *
               C50916 +
           (((C49768 * C380 + C50887 * C386 + C49761 * C381 + C50616 * C387) *
                 C253 +
             (C49768 * C390 + C50887 * C398 + C49761 * C391 + C50616 * C399) *
                 C50899 -
             (C27722 + C27723) * C254 - (C27724 + C27725) * C50686) *
                C16986 +
            ((C27723 + C27722) * C253 + (C27725 + C27724) * C50899 -
             (C49761 * C722 + C50616 * C734 + C49768 * C723 + C50887 * C735) *
                 C254 -
             (C49761 * C738 + C50616 * C746 + C49768 * C739 + C50887 * C747) *
                 C50686) *
                C50809) *
               C50835) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C253 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50899 -
             (C24854 + C24855) * C254 - (C24856 + C24857) * C50686) *
                C16986 +
            ((C24855 + C24854) * C253 + (C24857 + C24856) * C50899 -
             (C24858 + C24859) * C254 - (C24860 + C24861) * C50686) *
                C50809) *
               C50916 +
           (((C27944 + C27945) * C253 + (C27946 + C27947) * C50899 -
             C28474 * C254 - C28475 * C50686) *
                C16986 +
            (C28478 * C253 + C28479 * C50899 - C25492 * C254 -
             C25493 * C50686) *
                C50809) *
               C50835) *
              C50636 * C848 +
          (((C28478 * C254 -
             ((C27947 + C27946) * C50899 + (C27945 + C27944) * C253) +
             C28479 * C50686) *
                C16986 +
            (C28476 * C254 - (C28475 * C50899 + C28474 * C253) +
             C28477 * C50686) *
                C50809) *
               C50916 +
           ((C28904 * C254 -
             ((C28706 + C28707) * C50899 + (C28708 + C28709) * C253) +
             C28905 * C50686) *
                C16986 +
            ((C25807 + C25806) * C254 - (C28906 * C50899 + C28907 * C253) +
             (C25809 + C25808) * C50686) *
                C50809) *
               C50835) *
              C50636 * C849 +
          ((((C28709 + C28708) * C253 + (C28707 + C28706) * C50899 -
             C28907 * C254 - C28906 * C50686) *
                C16986 +
            (C28904 * C253 + C28905 * C50899 - (C25806 + C25807) * C254 -
             (C25808 + C25809) * C50686) *
                C50809) *
               C50916 +
           (((C49768 * C1058 + C50887 * C1066 + C49761 * C1057 +
              C50616 * C1065) *
                 C253 +
             (C49768 * C1062 + C50887 * C1070 + C49761 * C1061 +
              C50616 * C1069) *
                 C50899 -
             (C28916 + C28917) * C254 - (C28918 + C28919) * C50686) *
                C16986 +
            ((C28917 + C28916) * C253 + (C28919 + C28918) * C50899 -
             (C49761 * C3482 + C50616 * C3488 + C49768 * C3483 +
              C50887 * C3489) *
                 C254 -
             (C49761 * C3486 + C50616 * C3494 + C49768 * C3487 +
              C50887 * C3495) *
                 C50686) *
                C50809) *
               C50835) *
              C50636 * C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C506 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C501 -
             (C24854 + C24855) * C507 - (C24856 + C24857) * C502 +
             C25170 * C508 + C25171 * C503) *
                C16986 +
            ((C24855 + C24854) * C506 + (C24857 + C24856) * C501 -
             (C24858 + C24859) * C507 - (C24860 + C24861) * C502 +
             (C25190 + C25191) * C508 + (C25192 + C25193) * C503) *
                C50809) *
               C50916 +
           (((C27944 + C27945) * C506 + (C27946 + C27947) * C501 -
             C28474 * C507 - C28475 * C502 + C28476 * C508 + C28477 * C503) *
                C16986 +
            (C28478 * C506 + C28479 * C501 - C25492 * C507 - C25493 * C502 +
             (C25489 + C25488) * C508 + (C25491 + C25490) * C503) *
                C50809) *
               C50835) *
              C50636 * C50901 +
          (((C28478 * C507 -
             ((C27947 + C27946) * C501 + (C27945 + C27944) * C506) +
             C28479 * C502 - C25492 * C508 - C25493 * C503) *
                C16986 +
            (C28476 * C507 - (C28475 * C501 + C28474 * C506) + C28477 * C502 -
             (C25488 + C25489) * C508 - (C25490 + C25491) * C503) *
                C50809) *
               C50916 +
           (((C25803 + C25802) * C507 -
             ((C49761 * C861 + C50616 * C867 + C49768 * C860 + C50887 * C866) *
                  C501 +
              (C49761 * C852 + C50616 * C857 + C49768 * C851 + C50887 * C856) *
                  C506) +
             (C25805 + C25804) * C502 - (C25806 + C25807) * C508 -
             (C25808 + C25809) * C503) *
                C16986 +
            ((C25807 + C25806) * C507 -
             ((C25804 + C25805) * C501 + (C25802 + C25803) * C506) +
             (C25809 + C25808) * C502 -
             (C49761 * C3352 + C50616 * C3354 + C49768 * C3353 +
              C50887 * C3355) *
                 C508 -
             (C49761 * C3356 + C50616 * C3358 + C49768 * C3357 +
              C50887 * C3359) *
                 C503) *
                C50809) *
               C50835) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                  C121 +
              (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                  C50670) *
                 C16986 +
             ((C24855 + C24854) * C121 + (C24857 + C24856) * C50670) * C50809) *
                C50916 +
            (((C27944 + C27945) * C121 + (C27946 + C27947) * C50670) * C16986 +
             ((C25480 + C25481) * C121 + (C25482 + C25483) * C50670) * C50809) *
                C50835) *
               C250 -
           ((((C26412 + C26413) * C50670 + (C26410 + C26411) * C121) * C50809 +
             ((C27948 + C27949) * C50670 + (C27950 + C27951) * C121) * C16986) *
                C50835 +
            (((C24865 + C24864) * C50670 + (C24863 + C24862) * C121) * C50809 +
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C50670 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C121) *
                 C16986) *
                C50916) *
               C251 +
           ((((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                  C121 +
              (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                  C50670) *
                 C16986 +
             ((C24871 + C24870) * C121 + (C24873 + C24872) * C50670) * C50809) *
                C50916 +
            (((C27952 + C27953) * C121 + (C27954 + C27955) * C50670) * C16986 +
             ((C27723 + C27722) * C121 + (C27725 + C27724) * C50670) * C50809) *
                C50835) *
               C252) *
              C50901 +
          (((((C27951 + C27950) * C121 + (C27949 + C27948) * C50670) * C16986 +
             ((C26411 + C26410) * C121 + (C26413 + C26412) * C50670) * C50809) *
                C50916 +
            (((C49768 * C852 + C50887 * C857 + C49761 * C853 + C50616 * C858) *
                  C121 +
              (C49768 * C861 + C50887 * C867 + C49761 * C862 + C50616 * C868) *
                  C50670) *
                 C16986 +
             ((C49768 * C971 + C50887 * C975 + C49761 * C970 + C50616 * C974) *
                  C121 +
              (C49768 * C979 + C50887 * C983 + C49761 * C978 + C50616 * C982) *
                  C50670) *
                 C50809) *
                C50835) *
               C251 -
           ((((C25804 + C25805) * C50670 + (C25802 + C25803) * C121) * C50809 +
             ((C49761 * C861 + C50616 * C867 + C49768 * C860 + C50887 * C866) *
                  C50670 +
              (C49761 * C852 + C50616 * C857 + C49768 * C851 + C50887 * C856) *
                  C121) *
                 C16986) *
                C50835 +
            (((C25483 + C25482) * C50670 + (C25481 + C25480) * C121) * C50809 +
             ((C27947 + C27946) * C50670 + (C27945 + C27944) * C121) * C16986) *
                C50916) *
               C250 -
           ((((C49761 * C977 + C50616 * C981 + C49768 * C978 + C50887 * C982) *
                  C50670 +
              (C49761 * C969 + C50616 * C973 + C49768 * C970 + C50887 * C974) *
                  C121) *
                 C50809 +
             ((C49761 * C863 + C50616 * C869 + C49768 * C862 + C50887 * C868) *
                  C50670 +
              (C49761 * C854 + C50616 * C859 + C49768 * C853 + C50887 * C858) *
                  C121) *
                 C16986) *
                C50835 +
            (((C27724 + C27725) * C50670 + (C27722 + C27723) * C121) * C50809 +
             ((C27955 + C27954) * C50670 + (C27953 + C27952) * C121) * C16986) *
                C50916) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C121 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50670) *
                C16986 +
            ((C24855 + C24854) * C121 + (C24857 + C24856) * C50670) * C50809) *
               C50916 +
           (((C27944 + C27945) * C121 + (C27946 + C27947) * C50670) * C16986 +
            (C28478 * C121 + C28479 * C50670) * C50809) *
               C50835) *
              C50636 * C1051 -
          (((C28906 * C50670 + C28907 * C121) * C50809 +
            ((C28706 + C28707) * C50670 + (C28708 + C28709) * C121) * C16986) *
               C50835 +
           ((C28475 * C50670 + C28474 * C121) * C50809 +
            ((C27947 + C27946) * C50670 + (C27945 + C27944) * C121) * C16986) *
               C50916) *
              C50636 * C1052 +
          ((((C28709 + C28708) * C121 + (C28707 + C28706) * C50670) * C16986 +
            (C28904 * C121 + C28905 * C50670) * C50809) *
               C50916 +
           (((C29058 + C29059) * C121 + (C29060 + C29061) * C50670) * C16986 +
            ((C28917 + C28916) * C121 + (C28919 + C28918) * C50670) * C50809) *
               C50835) *
              C50636 * C1053 -
          ((((C49761 * C6183 + C50616 * C6185 + C49768 * C6184 +
              C50887 * C6186) *
                 C50670 +
             (C49761 * C6179 + C50616 * C6181 + C49768 * C6180 +
              C50887 * C6182) *
                 C121) *
                C50809 +
            ((C49761 * C5991 + C50616 * C5995 + C49768 * C5990 +
              C50887 * C5994) *
                 C50670 +
             (C49761 * C5986 + C50616 * C5989 + C49768 * C5985 +
              C50887 * C5988) *
                 C121) *
                C16986) *
               C50835 +
           (((C28918 + C28919) * C50670 + (C28916 + C28917) * C121) * C50809 +
            ((C29061 + C29060) * C50670 + (C29059 + C29058) * C121) * C16986) *
               C50916) *
              C50636 * C1054)) /
            (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                  C121 +
              (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                  C50670) *
                 C16986 +
             ((C24855 + C24854) * C121 + (C24857 + C24856) * C50670) * C50809) *
                C50916 +
            (((C27944 + C27945) * C121 + (C27946 + C27947) * C50670) * C16986 +
             (C28478 * C121 + C28479 * C50670) * C50809) *
                C50835) *
               C50945 -
           (((C29710 * C50670 + C29711 * C121) * C50809 +
             ((C27948 + C27949) * C50670 + (C27950 + C27951) * C121) * C16986) *
                C50835 +
            (((C24865 + C24864) * C50670 + (C24863 + C24862) * C121) * C50809 +
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C50670 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C121) *
                 C16986) *
                C50916) *
               C50930 +
           ((((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                  C121 +
              (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                  C50670) *
                 C16986 +
             ((C24871 + C24870) * C121 + (C24873 + C24872) * C50670) * C50809) *
                C50916 +
            (((C27952 + C27953) * C121 + (C27954 + C27955) * C50670) * C16986 +
             ((C27723 + C27722) * C121 + (C27725 + C27724) * C50670) * C50809) *
                C50835) *
               C1173) *
              C1514 +
          (((((C27951 + C27950) * C121 + (C27949 + C27948) * C50670) * C16986 +
             (C29708 * C121 + C29709 * C50670) * C50809) *
                C50916 +
            (((C28698 + C28699) * C121 + (C28700 + C28701) * C50670) * C16986 +
             ((C28702 + C28703) * C121 + (C28704 + C28705) * C50670) * C50809) *
                C50835) *
               C50930 -
           (((C28906 * C50670 + C28907 * C121) * C50809 +
             ((C28706 + C28707) * C50670 + (C28708 + C28709) * C121) * C16986) *
                C50835 +
            ((C28475 * C50670 + C28474 * C121) * C50809 +
             ((C27947 + C27946) * C50670 + (C27945 + C27944) * C121) * C16986) *
                C50916) *
               C50945 -
           ((((C49761 * C977 + C50616 * C981 + C49768 * C978 + C50887 * C982) *
                  C50670 +
              (C49761 * C969 + C50616 * C973 + C49768 * C970 + C50887 * C974) *
                  C121) *
                 C50809 +
             ((C49761 * C863 + C50616 * C869 + C49768 * C862 + C50887 * C868) *
                  C50670 +
              (C49761 * C854 + C50616 * C859 + C49768 * C853 + C50887 * C858) *
                  C121) *
                 C16986) *
                C50835 +
            (((C27724 + C27725) * C50670 + (C27722 + C27723) * C121) * C50809 +
             ((C27955 + C27954) * C50670 + (C27953 + C27952) * C121) * C16986) *
                C50916) *
               C1173) *
              C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                  C253 +
              (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                  C50899 -
              (C24854 + C24855) * C254 - (C24856 + C24857) * C50686) *
                 C16986 +
             ((C24855 + C24854) * C253 + (C24857 + C24856) * C50899 -
              (C24858 + C24859) * C254 - (C24860 + C24861) * C50686) *
                 C50809) *
                C50916 +
            (((C27944 + C27945) * C253 + (C27946 + C27947) * C50899 -
              C28474 * C254 - C28475 * C50686) *
                 C16986 +
             (C28478 * C253 + C28479 * C50899 - C25492 * C254 -
              C25493 * C50686) *
                 C50809) *
                C50835) *
               C1277 +
           ((((C24862 + C24863) * C254 -
              ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                   C50899 +
               (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                   C253) +
              (C24864 + C24865) * C50686) *
                 C16986 +
             ((C24866 + C24867) * C254 -
              ((C24865 + C24864) * C50899 + (C24863 + C24862) * C253) +
              (C24868 + C24869) * C50686) *
                 C50809) *
                C50916 +
            ((C29708 * C254 -
              ((C27948 + C27949) * C50899 + (C27950 + C27951) * C253) +
              C29709 * C50686) *
                 C16986 +
             ((C26415 + C26414) * C254 - (C29710 * C50899 + C29711 * C253) +
              (C26417 + C26416) * C50686) *
                 C50809) *
                C50835) *
               C50641) *
              C1514 +
          ((((C28478 * C254 -
              ((C27947 + C27946) * C50899 + (C27945 + C27944) * C253) +
              C28479 * C50686) *
                 C16986 +
             (C28476 * C254 - (C28475 * C50899 + C28474 * C253) +
              C28477 * C50686) *
                 C50809) *
                C50916 +
            ((C28904 * C254 -
              ((C28706 + C28707) * C50899 + (C28708 + C28709) * C253) +
              C28905 * C50686) *
                 C16986 +
             ((C25807 + C25806) * C254 - (C28906 * C50899 + C28907 * C253) +
              (C25809 + C25808) * C50686) *
                 C50809) *
                C50835) *
               C1277 +
           ((((C27951 + C27950) * C253 + (C27949 + C27948) * C50899 -
              C29711 * C254 - C29710 * C50686) *
                 C16986 +
             (C29708 * C253 + C29709 * C50899 - (C26414 + C26415) * C254 -
              (C26416 + C26417) * C50686) *
                 C50809) *
                C50916 +
            (((C28698 + C28699) * C253 + (C28700 + C28701) * C50899 -
              (C28703 + C28702) * C254 - (C28705 + C28704) * C50686) *
                 C16986 +
             ((C28702 + C28703) * C253 + (C28704 + C28705) * C50899 -
              (C49761 * C3196 + C50616 * C3202 + C49768 * C3195 +
               C50887 * C3198) *
                  C254 -
              (C49761 * C3201 + C50616 * C3205 + C49768 * C3200 +
               C50887 * C3204) *
                  C50686) *
                 C50809) *
                C50835) *
               C50641) *
              C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                  C121 +
              (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                  C50670) *
                 C16986 +
             ((C24855 + C24854) * C121 + (C24857 + C24856) * C50670) * C50809) *
                C50916 +
            (((C27944 + C27945) * C121 + (C27946 + C27947) * C50670) * C16986 +
             (C28478 * C121 + C28479 * C50670) * C50809) *
                C50835) *
               C1277 -
           (((C29710 * C50670 + C29711 * C121) * C50809 +
             ((C27948 + C27949) * C50670 + (C27950 + C27951) * C121) * C16986) *
                C50835 +
            (((C24865 + C24864) * C50670 + (C24863 + C24862) * C121) * C50809 +
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C50670 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C121) *
                 C16986) *
                C50916) *
               C50641) *
              C50947 +
          (((((C27951 + C27950) * C121 + (C27949 + C27948) * C50670) * C16986 +
             (C29708 * C121 + C29709 * C50670) * C50809) *
                C50916 +
            (((C28698 + C28699) * C121 + (C28700 + C28701) * C50670) * C16986 +
             ((C28702 + C28703) * C121 + (C28704 + C28705) * C50670) * C50809) *
                C50835) *
               C50641 -
           (((C28906 * C50670 + C28907 * C121) * C50809 +
             ((C28706 + C28707) * C50670 + (C28708 + C28709) * C121) * C16986) *
                C50835 +
            ((C28475 * C50670 + C28474 * C121) * C50809 +
             ((C27947 + C27946) * C50670 + (C27945 + C27944) * C121) * C16986) *
                C50916) *
               C1277) *
              C50936 +
          (((((C28709 + C28708) * C121 + (C28707 + C28706) * C50670) * C16986 +
             (C28904 * C121 + C28905 * C50670) * C50809) *
                C50916 +
            (((C29058 + C29059) * C121 + (C29060 + C29061) * C50670) * C16986 +
             ((C28917 + C28916) * C121 + (C28919 + C28918) * C50670) * C50809) *
                C50835) *
               C1277 -
           ((((C49761 * C6821 + C50616 * C6822 + C49768 * C3490 +
               C50887 * C3496) *
                  C50670 +
              (C49761 * C6819 + C50616 * C6820 + C49768 * C3484 +
               C50887 * C3492) *
                  C121) *
                 C50809 +
             ((C49761 * C1060 + C50616 * C1068 + C49768 * C1061 +
               C50887 * C1069) *
                  C50670 +
              (C49761 * C1056 + C50616 * C1064 + C49768 * C1057 +
               C50887 * C1065) *
                  C121) *
                 C16986) *
                C50835 +
            (((C28705 + C28704) * C50670 + (C28703 + C28702) * C121) * C50809 +
             ((C28701 + C28700) * C50670 + (C28699 + C28698) * C121) * C16986) *
                C50916) *
               C50641) *
              C1746)) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C121 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50670) *
                C16986 +
            ((C24855 + C24854) * C121 + (C24857 + C24856) * C50670) * C50809) *
               C50916 +
           (((C49768 * C383 + C50887 * C394 + C49761 * C379 + C50616 * C385) *
                 C121 +
             (C49768 * C393 + C50887 * C401 + C49761 * C389 + C50616 * C397) *
                 C50670) *
                C16986 +
            ((C25480 + C25481) * C121 + (C25482 + C25483) * C50670) * C50809) *
               C50835) *
              C112 -
          ((((C26412 + C26413) * C50670 + (C26410 + C26411) * C121) * C50809 +
            ((C49761 * C390 + C50616 * C398 + C49768 * C389 + C50887 * C397) *
                 C50670 +
             (C49761 * C380 + C50616 * C386 + C49768 * C379 + C50887 * C385) *
                 C121) *
                C16986) *
               C50835 +
           (((C24865 + C24864) * C50670 + (C24863 + C24862) * C121) * C50809 +
            ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                 C50670 +
             (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                 C121) *
                C16986) *
               C50916) *
              C113 +
          ((((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                 C121 +
             (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                 C50670) *
                C16986 +
            ((C24871 + C24870) * C121 + (C24873 + C24872) * C50670) * C50809) *
               C50916 +
           (((C49768 * C380 + C50887 * C386 + C49761 * C381 + C50616 * C387) *
                 C121 +
             (C49768 * C390 + C50887 * C398 + C49761 * C391 + C50616 * C399) *
                 C50670) *
                C16986 +
            ((C49768 * C720 + C50887 * C728 + C49761 * C721 + C50616 * C729) *
                 C121 +
             (C49768 * C732 + C50887 * C744 + C49761 * C733 + C50616 * C745) *
                 C50670) *
                C50809) *
               C50835) *
              C114 -
          ((((C49761 * C1414 + C50616 * C1415 + C49768 * C733 + C50887 * C745) *
                 C50670 +
             (C49761 * C1412 + C50616 * C1413 + C49768 * C721 + C50887 * C729) *
                 C121) *
                C50809 +
            ((C49761 * C392 + C50616 * C400 + C49768 * C391 + C50887 * C399) *
                 C50670 +
             (C49761 * C382 + C50616 * C388 + C49768 * C381 + C50887 * C387) *
                 C121) *
                C16986) *
               C50835 +
           (((C49761 * C270 + C50616 * C277 + C49768 * C265 + C50887 * C273) *
                 C50670 +
             (C49761 * C259 + C50616 * C269 + C49768 * C255 + C50887 * C261) *
                 C121) *
                C50809 +
            ((C49761 * C137 + C50616 * C147 + C49768 * C136 + C50887 * C146) *
                 C50670 +
             (C49761 * C126 + C50616 * C138 + C49768 * C125 + C50887 * C132) *
                 C121) *
                C16986) *
               C50916) *
              C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C506 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C501 -
             (C24854 + C24855) * C507 - (C24856 + C24857) * C502 +
             C25170 * C508 + C25171 * C503) *
                C16986 +
            ((C24855 + C24854) * C506 + (C24857 + C24856) * C501 -
             (C24858 + C24859) * C507 - (C24860 + C24861) * C502 +
             (C25190 + C25191) * C508 + (C25192 + C25193) * C503) *
                C50809) *
               C50916 +
           (((C27944 + C27945) * C506 + (C27946 + C27947) * C501 -
             (C25481 + C25480) * C507 - (C25483 + C25482) * C502 +
             (C25485 + C25484) * C508 + (C25487 + C25486) * C503) *
                C16986 +
            ((C25480 + C25481) * C506 + (C25482 + C25483) * C501 -
             C25492 * C507 - C25493 * C502 + (C25489 + C25488) * C508 +
             (C25491 + C25490) * C503) *
                C50809) *
               C50835) *
              C50892 +
          ((((C24862 + C24863) * C507 -
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C501 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C506) +
             (C24864 + C24865) * C502 - C25180 * C508 - C25181 * C503) *
                C16986 +
            ((C24866 + C24867) * C507 -
             ((C24865 + C24864) * C501 + (C24863 + C24862) * C506) +
             (C24868 + C24869) * C502 - (C25194 + C25195) * C508 -
             (C25196 + C25197) * C503) *
                C50809) *
               C50916 +
           (((C26411 + C26410) * C507 -
             ((C27948 + C27949) * C501 + (C27950 + C27951) * C506) +
             (C26413 + C26412) * C502 - (C26414 + C26415) * C508 -
             (C26416 + C26417) * C503) *
                C16986 +
            ((C26415 + C26414) * C507 -
             ((C26412 + C26413) * C501 + (C26410 + C26411) * C506) +
             (C26417 + C26416) * C502 -
             (C49761 * C3984 + C50616 * C3985 + C49768 * C2994 +
              C50887 * C2998) *
                 C508 -
             (C49761 * C3986 + C50616 * C3987 + C49768 * C3000 +
              C50887 * C3006) *
                 C503) *
                C50809) *
               C50835) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C253 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50899 -
             (C24854 + C24855) * C254 - (C24856 + C24857) * C50686) *
                C16986 +
            ((C24855 + C24854) * C253 + (C24857 + C24856) * C50899 -
             (C24858 + C24859) * C254 - (C24860 + C24861) * C50686) *
                C50809) *
               C50916 +
           (((C49768 * C383 + C50887 * C394 + C49761 * C379 + C50616 * C385) *
                 C253 +
             (C49768 * C393 + C50887 * C401 + C49761 * C389 + C50616 * C397) *
                 C50899 -
             (C25481 + C25480) * C254 - (C25483 + C25482) * C50686) *
                C16986 +
            ((C25480 + C25481) * C253 + (C25482 + C25483) * C50899 -
             C25492 * C254 - C25493 * C50686) *
                C50809) *
               C50835) *
              C250 +
          ((((C24862 + C24863) * C254 -
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C50899 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C253) +
             (C24864 + C24865) * C50686) *
                C16986 +
            ((C24866 + C24867) * C254 -
             ((C24865 + C24864) * C50899 + (C24863 + C24862) * C253) +
             (C24868 + C24869) * C50686) *
                C50809) *
               C50916 +
           (((C26411 + C26410) * C254 -
             ((C49761 * C390 + C50616 * C398 + C49768 * C389 + C50887 * C397) *
                  C50899 +
              (C49761 * C380 + C50616 * C386 + C49768 * C379 + C50887 * C385) *
                  C253) +
             (C26413 + C26412) * C50686) *
                C16986 +
            ((C26415 + C26414) * C254 -
             ((C26412 + C26413) * C50899 + (C26410 + C26411) * C253) +
             (C26417 + C26416) * C50686) *
                C50809) *
               C50835) *
              C251 +
          ((((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                 C253 +
             (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                 C50899 -
             (C24870 + C24871) * C254 - (C24872 + C24873) * C50686) *
                C16986 +
            ((C24871 + C24870) * C253 + (C24873 + C24872) * C50899 -
             (C24874 + C24875) * C254 - (C24876 + C24877) * C50686) *
                C50809) *
               C50916 +
           (((C49768 * C380 + C50887 * C386 + C49761 * C381 + C50616 * C387) *
                 C253 +
             (C49768 * C390 + C50887 * C398 + C49761 * C391 + C50616 * C399) *
                 C50899 -
             (C27722 + C27723) * C254 - (C27724 + C27725) * C50686) *
                C16986 +
            ((C27723 + C27722) * C253 + (C27725 + C27724) * C50899 -
             (C49761 * C722 + C50616 * C734 + C49768 * C723 + C50887 * C735) *
                 C254 -
             (C49761 * C738 + C50616 * C746 + C49768 * C739 + C50887 * C747) *
                 C50686) *
                C50809) *
               C50835) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C600 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C595 -
            (C24854 + C24855) * C601 - (C24856 + C24857) * C596 +
            C25170 * C602 + C25171 * C597 - C25296 * C603 - C25297 * C598) *
               C16986 +
           ((C24855 + C24854) * C600 + (C24857 + C24856) * C595 -
            (C24858 + C24859) * C601 - (C24860 + C24861) * C596 +
            (C25190 + C25191) * C602 + (C25192 + C25193) * C597 -
            (C25306 + C25307) * C603 - (C25308 + C25309) * C598) *
               C50809) *
              C50916 +
          (((C27944 + C27945) * C600 + (C27946 + C27947) * C595 -
            (C25481 + C25480) * C601 - (C25483 + C25482) * C596 +
            (C25485 + C25484) * C602 + (C25487 + C25486) * C597 -
            (C25488 + C25489) * C603 - (C25490 + C25491) * C598) *
               C16986 +
           ((C25480 + C25481) * C600 + (C25482 + C25483) * C595 -
            C25492 * C601 - C25493 * C596 + (C25489 + C25488) * C602 +
            (C25491 + C25490) * C597 -
            (C49761 * C2996 + C50616 * C3002 + C49768 * C2997 +
             C50887 * C3003) *
                C603 -
            (C49761 * C3004 + C50616 * C3008 + C49768 * C3005 +
             C50887 * C3009) *
                C598) *
               C50809) *
              C50835) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                  C121 +
              (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                  C50670) *
                 C16986 +
             ((C24855 + C24854) * C121 + (C24857 + C24856) * C50670) * C50809) *
                C50916 +
            (((C27944 + C27945) * C121 + (C27946 + C27947) * C50670) * C16986 +
             ((C25480 + C25481) * C121 + (C25482 + C25483) * C50670) * C50809) *
                C50835) *
               C250 -
           ((((C26412 + C26413) * C50670 + (C26410 + C26411) * C121) * C50809 +
             ((C27948 + C27949) * C50670 + (C27950 + C27951) * C121) * C16986) *
                C50835 +
            (((C24865 + C24864) * C50670 + (C24863 + C24862) * C121) * C50809 +
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C50670 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C121) *
                 C16986) *
                C50916) *
               C251 +
           ((((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                  C121 +
              (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                  C50670) *
                 C16986 +
             ((C24871 + C24870) * C121 + (C24873 + C24872) * C50670) * C50809) *
                C50916 +
            (((C27952 + C27953) * C121 + (C27954 + C27955) * C50670) * C16986 +
             ((C27723 + C27722) * C121 + (C27725 + C27724) * C50670) * C50809) *
                C50835) *
               C252) *
              C50901 +
          (((((C27951 + C27950) * C121 + (C27949 + C27948) * C50670) * C16986 +
             ((C26411 + C26410) * C121 + (C26413 + C26412) * C50670) * C50809) *
                C50916 +
            (((C49768 * C852 + C50887 * C857 + C49761 * C853 + C50616 * C858) *
                  C121 +
              (C49768 * C861 + C50887 * C867 + C49761 * C862 + C50616 * C868) *
                  C50670) *
                 C16986 +
             ((C49768 * C971 + C50887 * C975 + C49761 * C970 + C50616 * C974) *
                  C121 +
              (C49768 * C979 + C50887 * C983 + C49761 * C978 + C50616 * C982) *
                  C50670) *
                 C50809) *
                C50835) *
               C251 -
           ((((C25804 + C25805) * C50670 + (C25802 + C25803) * C121) * C50809 +
             ((C49761 * C861 + C50616 * C867 + C49768 * C860 + C50887 * C866) *
                  C50670 +
              (C49761 * C852 + C50616 * C857 + C49768 * C851 + C50887 * C856) *
                  C121) *
                 C16986) *
                C50835 +
            (((C25483 + C25482) * C50670 + (C25481 + C25480) * C121) * C50809 +
             ((C27947 + C27946) * C50670 + (C27945 + C27944) * C121) * C16986) *
                C50916) *
               C250 -
           ((((C49761 * C977 + C50616 * C981 + C49768 * C978 + C50887 * C982) *
                  C50670 +
              (C49761 * C969 + C50616 * C973 + C49768 * C970 + C50887 * C974) *
                  C121) *
                 C50809 +
             ((C49761 * C863 + C50616 * C869 + C49768 * C862 + C50887 * C868) *
                  C50670 +
              (C49761 * C854 + C50616 * C859 + C49768 * C853 + C50887 * C858) *
                  C121) *
                 C16986) *
                C50835 +
            (((C27724 + C27725) * C50670 + (C27722 + C27723) * C121) * C50809 +
             ((C27955 + C27954) * C50670 + (C27953 + C27952) * C121) * C16986) *
                C50916) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C506 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C501 -
             (C24854 + C24855) * C507 - (C24856 + C24857) * C502 +
             C25170 * C508 + C25171 * C503) *
                C16986 +
            ((C24855 + C24854) * C506 + (C24857 + C24856) * C501 -
             (C24858 + C24859) * C507 - (C24860 + C24861) * C502 +
             (C25190 + C25191) * C508 + (C25192 + C25193) * C503) *
                C50809) *
               C50916 +
           (((C27944 + C27945) * C506 + (C27946 + C27947) * C501 -
             C28474 * C507 - C28475 * C502 + C28476 * C508 + C28477 * C503) *
                C16986 +
            (C28478 * C506 + C28479 * C501 - C25492 * C507 - C25493 * C502 +
             (C25489 + C25488) * C508 + (C25491 + C25490) * C503) *
                C50809) *
               C50835) *
              C50636 * C50901 +
          (((C28478 * C507 -
             ((C27947 + C27946) * C501 + (C27945 + C27944) * C506) +
             C28479 * C502 - C25492 * C508 - C25493 * C503) *
                C16986 +
            (C28476 * C507 - (C28475 * C501 + C28474 * C506) + C28477 * C502 -
             (C25488 + C25489) * C508 - (C25490 + C25491) * C503) *
                C50809) *
               C50916 +
           (((C25803 + C25802) * C507 -
             ((C49761 * C861 + C50616 * C867 + C49768 * C860 + C50887 * C866) *
                  C501 +
              (C49761 * C852 + C50616 * C857 + C49768 * C851 + C50887 * C856) *
                  C506) +
             (C25805 + C25804) * C502 - (C25806 + C25807) * C508 -
             (C25808 + C25809) * C503) *
                C16986 +
            ((C25807 + C25806) * C507 -
             ((C25804 + C25805) * C501 + (C25802 + C25803) * C506) +
             (C25809 + C25808) * C502 -
             (C49761 * C3352 + C50616 * C3354 + C49768 * C3353 +
              C50887 * C3355) *
                 C508 -
             (C49761 * C3356 + C50616 * C3358 + C49768 * C3357 +
              C50887 * C3359) *
                 C503) *
                C50809) *
               C50835) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[135] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                      C16984 * C130 + C16990 * C124 + C16985 * C131) *
                         C1174 +
                     (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                      C16984 * C144 + C16990 * C135 + C16985 * C145) *
                         C1169 -
                     (C17174 + C17175 + C17176) * C1175 -
                     (C17177 + C17178 + C17179) * C50686) *
                        C16986 +
                    ((C17176 + C17175 + C17174) * C1174 +
                     (C17179 + C17178 + C17177) * C1169 -
                     (C17510 + C17509 + C17508) * C1175 -
                     (C17513 + C17512 + C17511) * C50686) *
                        C50809) *
                       C50771 * C50945 +
                   (((C17180 + C17181 + C17182) * C1175 -
                     ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                       C16984 * C145 + C16988 * C134 + C16983 * C144) *
                          C1169 +
                      (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                       C16984 * C131 + C16988 * C123 + C16983 * C130) *
                          C1174) +
                     (C17183 + C17184 + C17185) * C50686) *
                        C16986 +
                    ((C17516 + C17515 + C17514) * C1175 -
                     ((C17185 + C17184 + C17183) * C1169 +
                      (C17182 + C17181 + C17180) * C1174) +
                     (C17519 + C17518 + C17517) * C50686) *
                        C50809) *
                       C50771 * C50930 +
                   (((C16988 * C124 + C16983 * C131 + C16989 * C125 +
                      C16984 * C132 + C16990 * C126 + C16985 * C138) *
                         C1174 +
                     (C16988 * C135 + C16983 * C145 + C16989 * C136 +
                      C16984 * C146 + C16990 * C137 + C16985 * C147) *
                         C1169 -
                     (C17186 + C17187 + C17188) * C1175 -
                     (C17189 + C17190 + C17191) * C50686) *
                        C16986 +
                    ((C17188 + C17187 + C17186) * C1174 +
                     (C17191 + C17190 + C17189) * C1169 -
                     (C16990 * C513 + C16985 * C522 + C16989 * C512 +
                      C16984 * C517 + C16988 * C511 + C16983 * C516) *
                         C1175 -
                     (C16990 * C523 + C16985 * C528 + C16989 * C521 +
                      C16984 * C527 + C16988 * C520 + C16983 * C526) *
                         C50686) *
                        C50809) *
                       C50771 * C1173) *
                  C50700) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C19772 * C122 + C50611 * C129) * C1174 +
                     (C19772 * C133 + C50611 * C143) * C1169 - C19908 * C1175 -
                     C19909 * C50686) *
                        C19768 +
                    (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                     C19911 * C50686) *
                        C19769 +
                    (C19910 * C1174 + C19911 * C1169 - C19912 * C1175 -
                     C19913 * C50686) *
                        C19770 +
                    (C19912 * C1174 + C19913 * C1169 - C20130 * C1175 -
                     C20131 * C50686) *
                        C19771) *
                       C50771 * C50945 +
                   ((C19914 * C1175 -
                     ((C19772 * C134 + C50611 * C144) * C1169 +
                      (C19772 * C123 + C50611 * C130) * C1174) +
                     C19915 * C50686) *
                        C19768 +
                    (C19916 * C1175 - (C19915 * C1169 + C19914 * C1174) +
                     C19917 * C50686) *
                        C19769 +
                    (C19918 * C1175 - (C19917 * C1169 + C19916 * C1174) +
                     C19919 * C50686) *
                        C19770 +
                    (C20132 * C1175 - (C19919 * C1169 + C19918 * C1174) +
                     C20133 * C50686) *
                        C19771) *
                       C50771 * C50930 +
                   (((C19772 * C124 + C50611 * C131) * C1174 +
                     (C19772 * C135 + C50611 * C145) * C1169 - C19920 * C1175 -
                     C19921 * C50686) *
                        C19768 +
                    (C19920 * C1174 + C19921 * C1169 - C19922 * C1175 -
                     C19923 * C50686) *
                        C19769 +
                    (C19922 * C1174 + C19923 * C1169 - C19924 * C1175 -
                     C19925 * C50686) *
                        C19770 +
                    (C19924 * C1174 + C19925 * C1169 -
                     (C19772 * C2690 + C50611 * C2695) * C1175 -
                     (C19772 * C2696 + C50611 * C2699) * C50686) *
                        C19771) *
                       C50771 * C1173) *
                  C50700) /
                     (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C1279 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C50946 -
            (C17174 + C17175 + C17176) * C1280 -
            (C17177 + C17178 + C17179) * C50933 +
            (C17508 + C17509 + C17510) * C1281 +
            (C17511 + C17512 + C17513) * C1276) *
               C16986 +
           ((C17176 + C17175 + C17174) * C1279 +
            (C17179 + C17178 + C17177) * C50946 -
            (C17510 + C17509 + C17508) * C1280 -
            (C17513 + C17512 + C17511) * C50933 +
            (C17632 + C17631 + C17630) * C1281 +
            (C17635 + C17634 + C17633) * C1276) *
               C50809) *
              C50771 * C1277 +
          (((C17180 + C17181 + C17182) * C1280 -
            ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
              C16988 * C134 + C16983 * C144) *
                 C50946 +
             (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
              C16988 * C123 + C16983 * C130) *
                 C1279) +
            (C17183 + C17184 + C17185) * C50933 -
            (C17514 + C17515 + C17516) * C1281 -
            (C17517 + C17518 + C17519) * C1276) *
               C16986 +
           ((C17516 + C17515 + C17514) * C1280 -
            ((C17185 + C17184 + C17183) * C50946 +
             (C17182 + C17181 + C17180) * C1279) +
            (C17519 + C17518 + C17517) * C50933 -
            (C16990 * C604 + C16985 * C608 + C16989 * C605 + C16984 * C609 +
             C16988 * C606 + C16983 * C610) *
                C1281 -
            (C16990 * C612 + C16985 * C616 + C16989 * C613 + C16984 * C617 +
             C16988 * C614 + C16983 * C618) *
                C1276) *
               C50809) *
              C50771 * C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C1279 +
            (C19772 * C133 + C50611 * C143) * C50946 - C19908 * C1280 -
            C19909 * C50933 + C19910 * C1281 + C19911 * C1276) *
               C19768 +
           (C19908 * C1279 + C19909 * C50946 - C19910 * C1280 -
            C19911 * C50933 + C19912 * C1281 + C19913 * C1276) *
               C19769 +
           (C19910 * C1279 + C19911 * C50946 - C19912 * C1280 -
            C19913 * C50933 + C20130 * C1281 + C20131 * C1276) *
               C19770 +
           (C19912 * C1279 + C19913 * C50946 - C20130 * C1280 -
            C20131 * C50933 + C20208 * C1281 + C20209 * C1276) *
               C19771) *
              C50771 * C1277 +
          ((C19914 * C1280 -
            ((C19772 * C134 + C50611 * C144) * C50946 +
             (C19772 * C123 + C50611 * C130) * C1279) +
            C19915 * C50933 - C19916 * C1281 - C19917 * C1276) *
               C19768 +
           (C19916 * C1280 - (C19915 * C50946 + C19914 * C1279) +
            C19917 * C50933 - C19918 * C1281 - C19919 * C1276) *
               C19769 +
           (C19918 * C1280 - (C19917 * C50946 + C19916 * C1279) +
            C19919 * C50933 - C20132 * C1281 - C20133 * C1276) *
               C19770 +
           (C20132 * C1280 - (C19919 * C50946 + C19918 * C1279) +
            C20133 * C50933 - (C19772 * C2826 + C50611 * C2828) * C1281 -
            (C19772 * C2830 + C50611 * C2832) * C1276) *
               C19771) *
              C50771 * C50641) *
         C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[137] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                       C16984 * C130 + C16990 * C124 + C16985 * C131) *
                          C1174 +
                      (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                       C16984 * C144 + C16990 * C135 + C16985 * C145) *
                          C1169 -
                      (C17174 + C17175 + C17176) * C1175 -
                      (C17177 + C17178 + C17179) * C50686) *
                         C16986 +
                     ((C17176 + C17175 + C17174) * C1174 +
                      (C17179 + C17178 + C17177) * C1169 -
                      (C17510 + C17509 + C17508) * C1175 -
                      (C17513 + C17512 + C17511) * C50686) *
                         C50809) *
                        C50771 * C1277 +
                    (((C17180 + C17181 + C17182) * C1175 -
                      ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                        C16984 * C145 + C16988 * C134 + C16983 * C144) *
                           C1169 +
                       (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                        C16984 * C131 + C16988 * C123 + C16983 * C130) *
                           C1174) +
                      (C17183 + C17184 + C17185) * C50686) *
                         C16986 +
                     ((C17516 + C17515 + C17514) * C1175 -
                      ((C17185 + C17184 + C17183) * C1169 +
                       (C17182 + C17181 + C17180) * C1174) +
                      (C17519 + C17518 + C17517) * C50686) *
                         C50809) *
                        C50771 * C50641) *
                       C50901 +
                   ((((C17806 + C17807 + C17808) * C1175 -
                      ((C16990 * C390 + C16985 * C398 + C16989 * C389 +
                        C16984 * C397 + C16988 * C393 + C16983 * C401) *
                           C1169 +
                       (C16990 * C380 + C16985 * C386 + C16989 * C379 +
                        C16984 * C385 + C16988 * C383 + C16983 * C394) *
                           C1174) +
                      (C17809 + C17810 + C17811) * C50686) *
                         C16986 +
                     ((C17814 + C17813 + C17812) * C1175 -
                      ((C17811 + C17810 + C17809) * C1169 +
                       (C17808 + C17807 + C17806) * C1174) +
                      (C17817 + C17816 + C17815) * C50686) *
                         C50809) *
                        C50771 * C1277 +
                    (((C16988 * C379 + C16983 * C385 + C16989 * C380 +
                       C16984 * C386 + C16990 * C381 + C16985 * C387) *
                          C1174 +
                      (C16988 * C389 + C16983 * C397 + C16989 * C390 +
                       C16984 * C398 + C16990 * C391 + C16985 * C399) *
                          C1169 -
                      (C18724 + C18725 + C18726) * C1175 -
                      (C18727 + C18728 + C18729) * C50686) *
                         C16986 +
                     ((C18726 + C18725 + C18724) * C1174 +
                      (C18729 + C18728 + C18727) * C1169 -
                      (C16990 * C722 + C16985 * C734 + C16989 * C723 +
                       C16984 * C735 + C16988 * C724 + C16983 * C736) *
                          C1175 -
                      (C16990 * C738 + C16985 * C746 + C16989 * C739 +
                       C16984 * C747 + C16988 * C740 + C16983 * C748) *
                          C50686) *
                         C50809) *
                        C50771 * C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C19772 * C122 + C50611 * C129) * C1174 +
                      (C19772 * C133 + C50611 * C143) * C1169 - C19908 * C1175 -
                      C19909 * C50686) *
                         C19768 +
                     (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                      C19911 * C50686) *
                         C19769 +
                     (C19910 * C1174 + C19911 * C1169 - C19912 * C1175 -
                      C19913 * C50686) *
                         C19770 +
                     (C19912 * C1174 + C19913 * C1169 - C20130 * C1175 -
                      C20131 * C50686) *
                         C19771) *
                        C50771 * C1277 +
                    ((C19914 * C1175 -
                      ((C19772 * C134 + C50611 * C144) * C1169 +
                       (C19772 * C123 + C50611 * C130) * C1174) +
                      C19915 * C50686) *
                         C19768 +
                     (C19916 * C1175 - (C19915 * C1169 + C19914 * C1174) +
                      C19917 * C50686) *
                         C19769 +
                     (C19918 * C1175 - (C19917 * C1169 + C19916 * C1174) +
                      C19919 * C50686) *
                         C19770 +
                     (C20132 * C1175 - (C19919 * C1169 + C19918 * C1174) +
                      C20133 * C50686) *
                         C19771) *
                        C50771 * C50641) *
                       C50901 +
                   (((C20328 * C1175 -
                      ((C19772 * C393 + C50611 * C401) * C1169 +
                       (C19772 * C383 + C50611 * C394) * C1174) +
                      C20329 * C50686) *
                         C19768 +
                     (C20330 * C1175 - (C20329 * C1169 + C20328 * C1174) +
                      C20331 * C50686) *
                         C19769 +
                     (C20332 * C1175 - (C20331 * C1169 + C20330 * C1174) +
                      C20333 * C50686) *
                         C19770 +
                     (C20334 * C1175 - (C20333 * C1169 + C20332 * C1174) +
                      C20335 * C50686) *
                         C19771) *
                        C50771 * C1277 +
                    (((C19772 * C379 + C50611 * C385) * C1174 +
                      (C19772 * C389 + C50611 * C397) * C1169 - C20962 * C1175 -
                      C20963 * C50686) *
                         C19768 +
                     (C20962 * C1174 + C20963 * C1169 - C20964 * C1175 -
                      C20965 * C50686) *
                         C19769 +
                     (C20964 * C1174 + C20965 * C1169 - C20966 * C1175 -
                      C20967 * C50686) *
                         C19770 +
                     (C20966 * C1174 + C20967 * C1169 -
                      (C19772 * C2996 + C50611 * C3002) * C1175 -
                      (C19772 * C3004 + C50611 * C3008) * C50686) *
                         C19771) *
                        C50771 * C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q));
    d2ee[138] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                       C16984 * C130 + C16990 * C124 + C16985 * C131) *
                          C1174 +
                      (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                       C16984 * C144 + C16990 * C135 + C16985 * C145) *
                          C1169 -
                      (C17174 + C17175 + C17176) * C1175 -
                      (C17177 + C17178 + C17179) * C50686) *
                         C16986 +
                     ((C17176 + C17175 + C17174) * C1174 +
                      (C17179 + C17178 + C17177) * C1169 -
                      (C17510 + C17509 + C17508) * C1175 -
                      (C17513 + C17512 + C17511) * C50686) *
                         C50809) *
                        C50771 * C50892 +
                    (((C17180 + C17181 + C17182) * C1175 -
                      ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                        C16984 * C145 + C16988 * C134 + C16983 * C144) *
                           C1169 +
                       (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                        C16984 * C131 + C16988 * C123 + C16983 * C130) *
                           C1174) +
                      (C17183 + C17184 + C17185) * C50686) *
                         C16986 +
                     ((C17516 + C17515 + C17514) * C1175 -
                      ((C17185 + C17184 + C17183) * C1169 +
                       (C17182 + C17181 + C17180) * C1174) +
                      (C17519 + C17518 + C17517) * C50686) *
                         C50809) *
                        C50771 * C50641) *
                       C1514 +
                   ((((C17806 + C17807 + C17808) * C1175 -
                      ((C16990 * C390 + C16985 * C398 + C16989 * C389 +
                        C16984 * C397 + C16988 * C393 + C16983 * C401) *
                           C1169 +
                       (C16990 * C380 + C16985 * C386 + C16989 * C379 +
                        C16984 * C385 + C16988 * C383 + C16983 * C394) *
                           C1174) +
                      (C17809 + C17810 + C17811) * C50686) *
                         C16986 +
                     ((C17814 + C17813 + C17812) * C1175 -
                      ((C17811 + C17810 + C17809) * C1169 +
                       (C17808 + C17807 + C17806) * C1174) +
                      (C17817 + C17816 + C17815) * C50686) *
                         C50809) *
                        C50771 * C50892 +
                    (((C16988 * C379 + C16983 * C385 + C16989 * C380 +
                       C16984 * C386 + C16990 * C381 + C16985 * C387) *
                          C1174 +
                      (C16988 * C389 + C16983 * C397 + C16989 * C390 +
                       C16984 * C398 + C16990 * C391 + C16985 * C399) *
                          C1169 -
                      (C18724 + C18725 + C18726) * C1175 -
                      (C18727 + C18728 + C18729) * C50686) *
                         C16986 +
                     ((C18726 + C18725 + C18724) * C1174 +
                      (C18729 + C18728 + C18727) * C1169 -
                      (C16990 * C722 + C16985 * C734 + C16989 * C723 +
                       C16984 * C735 + C16988 * C724 + C16983 * C736) *
                          C1175 -
                      (C16990 * C738 + C16985 * C746 + C16989 * C739 +
                       C16984 * C747 + C16988 * C740 + C16983 * C748) *
                          C50686) *
                         C50809) *
                        C50771 * C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C19772 * C122 + C50611 * C129) * C1174 +
                      (C19772 * C133 + C50611 * C143) * C1169 - C19908 * C1175 -
                      C19909 * C50686) *
                         C19768 +
                     (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                      C19911 * C50686) *
                         C19769 +
                     (C19910 * C1174 + C19911 * C1169 - C19912 * C1175 -
                      C19913 * C50686) *
                         C19770 +
                     (C19912 * C1174 + C19913 * C1169 - C20130 * C1175 -
                      C20131 * C50686) *
                         C19771) *
                        C50771 * C50892 +
                    ((C19914 * C1175 -
                      ((C19772 * C134 + C50611 * C144) * C1169 +
                       (C19772 * C123 + C50611 * C130) * C1174) +
                      C19915 * C50686) *
                         C19768 +
                     (C19916 * C1175 - (C19915 * C1169 + C19914 * C1174) +
                      C19917 * C50686) *
                         C19769 +
                     (C19918 * C1175 - (C19917 * C1169 + C19916 * C1174) +
                      C19919 * C50686) *
                         C19770 +
                     (C20132 * C1175 - (C19919 * C1169 + C19918 * C1174) +
                      C20133 * C50686) *
                         C19771) *
                        C50771 * C50641) *
                       C1514 +
                   (((C20328 * C1175 -
                      ((C19772 * C393 + C50611 * C401) * C1169 +
                       (C19772 * C383 + C50611 * C394) * C1174) +
                      C20329 * C50686) *
                         C19768 +
                     (C20330 * C1175 - (C20329 * C1169 + C20328 * C1174) +
                      C20331 * C50686) *
                         C19769 +
                     (C20332 * C1175 - (C20331 * C1169 + C20330 * C1174) +
                      C20333 * C50686) *
                         C19770 +
                     (C20334 * C1175 - (C20333 * C1169 + C20332 * C1174) +
                      C20335 * C50686) *
                         C19771) *
                        C50771 * C50892 +
                    (((C19772 * C379 + C50611 * C385) * C1174 +
                      (C19772 * C389 + C50611 * C397) * C1169 - C20962 * C1175 -
                      C20963 * C50686) *
                         C19768 +
                     (C20962 * C1174 + C20963 * C1169 - C20964 * C1175 -
                      C20965 * C50686) *
                         C19769 +
                     (C20964 * C1174 + C20965 * C1169 - C20966 * C1175 -
                      C20967 * C50686) *
                         C19770 +
                     (C20966 * C1174 + C20967 * C1169 -
                      (C19772 * C2996 + C50611 * C3002) * C1175 -
                      (C19772 * C3004 + C50611 * C3008) * C50686) *
                         C19771) *
                        C50771 * C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C1279 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C50946 -
            (C17174 + C17175 + C17176) * C1280 -
            (C17177 + C17178 + C17179) * C50933 +
            (C17508 + C17509 + C17510) * C1281 +
            (C17511 + C17512 + C17513) * C1276) *
               C16986 +
           ((C17176 + C17175 + C17174) * C1279 +
            (C17179 + C17178 + C17177) * C50946 -
            (C17510 + C17509 + C17508) * C1280 -
            (C17513 + C17512 + C17511) * C50933 +
            (C17632 + C17631 + C17630) * C1281 +
            (C17635 + C17634 + C17633) * C1276) *
               C50809) *
              C50771 * C50636 * C1514 +
          (((C17806 + C17807 + C17808) * C1280 -
            ((C16990 * C390 + C16985 * C398 + C16989 * C389 + C16984 * C397 +
              C16988 * C393 + C16983 * C401) *
                 C50946 +
             (C16990 * C380 + C16985 * C386 + C16989 * C379 + C16984 * C385 +
              C16988 * C383 + C16983 * C394) *
                 C1279) +
            (C17809 + C17810 + C17811) * C50933 -
            (C17812 + C17813 + C17814) * C1281 -
            (C17815 + C17816 + C17817) * C1276) *
               C16986 +
           ((C17814 + C17813 + C17812) * C1280 -
            ((C17811 + C17810 + C17809) * C50946 +
             (C17808 + C17807 + C17806) * C1279) +
            (C17817 + C17816 + C17815) * C50933 -
            (C16990 * C3984 + C16985 * C3985 + C16989 * C2994 + C16984 * C2998 +
             C16988 * C2995 + C16983 * C2999) *
                C1281 -
            (C16990 * C3986 + C16985 * C3987 + C16989 * C3000 + C16984 * C3006 +
             C16988 * C3001 + C16983 * C3007) *
                C1276) *
               C50809) *
              C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C1279 +
            (C19772 * C133 + C50611 * C143) * C50946 - C19908 * C1280 -
            C19909 * C50933 + C19910 * C1281 + C19911 * C1276) *
               C19768 +
           (C19908 * C1279 + C19909 * C50946 - C19910 * C1280 -
            C19911 * C50933 + C19912 * C1281 + C19913 * C1276) *
               C19769 +
           (C19910 * C1279 + C19911 * C50946 - C19912 * C1280 -
            C19913 * C50933 + C20130 * C1281 + C20131 * C1276) *
               C19770 +
           (C19912 * C1279 + C19913 * C50946 - C20130 * C1280 -
            C20131 * C50933 + C20208 * C1281 + C20209 * C1276) *
               C19771) *
              C50771 * C50636 * C1514 +
          ((C20328 * C1280 -
            ((C19772 * C393 + C50611 * C401) * C50946 +
             (C19772 * C383 + C50611 * C394) * C1279) +
            C20329 * C50933 - C20330 * C1281 - C20331 * C1276) *
               C19768 +
           (C20330 * C1280 - (C20329 * C50946 + C20328 * C1279) +
            C20331 * C50933 - C20332 * C1281 - C20333 * C1276) *
               C19769 +
           (C20332 * C1280 - (C20331 * C50946 + C20330 * C1279) +
            C20333 * C50933 - C20334 * C1281 - C20335 * C1276) *
               C19770 +
           (C20334 * C1280 - (C20333 * C50946 + C20332 * C1279) +
            C20335 * C50933 - (C19772 * C20307 + C50611 * C20308) * C1281 -
            (C19772 * C20309 + C50611 * C20310) * C1276) *
               C19771) *
              C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[140] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                      C16984 * C130 + C16990 * C124 + C16985 * C131) *
                         C1174 +
                     (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                      C16984 * C144 + C16990 * C135 + C16985 * C145) *
                         C1169 -
                     (C17174 + C17175 + C17176) * C1175 -
                     (C17177 + C17178 + C17179) * C50686) *
                        C16986 +
                    ((C17176 + C17175 + C17174) * C1174 +
                     (C17179 + C17178 + C17177) * C1169 -
                     (C17510 + C17509 + C17508) * C1175 -
                     (C17513 + C17512 + C17511) * C50686) *
                        C50809) *
                       C50771 * C50636 * C50947 +
                   (((C17806 + C17807 + C17808) * C1175 -
                     ((C16990 * C390 + C16985 * C398 + C16989 * C389 +
                       C16984 * C397 + C16988 * C393 + C16983 * C401) *
                          C1169 +
                      (C16990 * C380 + C16985 * C386 + C16989 * C379 +
                       C16984 * C385 + C16988 * C383 + C16983 * C394) *
                          C1174) +
                     (C17809 + C17810 + C17811) * C50686) *
                        C16986 +
                    ((C17814 + C17813 + C17812) * C1175 -
                     ((C17811 + C17810 + C17809) * C1169 +
                      (C17808 + C17807 + C17806) * C1174) +
                     (C17817 + C17816 + C17815) * C50686) *
                        C50809) *
                       C50771 * C50636 * C50936 +
                   (((C16988 * C851 + C16983 * C856 + C16989 * C852 +
                      C16984 * C857 + C16990 * C853 + C16985 * C858) *
                         C1174 +
                     (C16988 * C860 + C16983 * C866 + C16989 * C861 +
                      C16984 * C867 + C16990 * C862 + C16985 * C868) *
                         C1169 -
                     (C18122 + C18123 + C18124) * C1175 -
                     (C18125 + C18126 + C18127) * C50686) *
                        C16986 +
                    ((C18124 + C18123 + C18122) * C1174 +
                     (C18127 + C18126 + C18125) * C1169 -
                     (C16990 * C3196 + C16985 * C3202 + C16989 * C3195 +
                      C16984 * C3198 + C16988 * C3194 + C16983 * C3197) *
                         C1175 -
                     (C16990 * C3201 + C16985 * C3205 + C16989 * C3200 +
                      C16984 * C3204 + C16988 * C3199 + C16983 * C3203) *
                         C50686) *
                        C50809) *
                       C50771 * C50636 * C1746)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C19772 * C122 + C50611 * C129) * C1174 +
                     (C19772 * C133 + C50611 * C143) * C1169 - C19908 * C1175 -
                     C19909 * C50686) *
                        C19768 +
                    (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                     C19911 * C50686) *
                        C19769 +
                    (C19910 * C1174 + C19911 * C1169 - C19912 * C1175 -
                     C19913 * C50686) *
                        C19770 +
                    (C19912 * C1174 + C19913 * C1169 - C20130 * C1175 -
                     C20131 * C50686) *
                        C19771) *
                       C50771 * C50636 * C50947 +
                   ((C20328 * C1175 -
                     ((C19772 * C393 + C50611 * C401) * C1169 +
                      (C19772 * C383 + C50611 * C394) * C1174) +
                     C20329 * C50686) *
                        C19768 +
                    (C20330 * C1175 - (C20329 * C1169 + C20328 * C1174) +
                     C20331 * C50686) *
                        C19769 +
                    (C20332 * C1175 - (C20331 * C1169 + C20330 * C1174) +
                     C20333 * C50686) *
                        C19770 +
                    (C20334 * C1175 - (C20333 * C1169 + C20332 * C1174) +
                     C20335 * C50686) *
                        C19771) *
                       C50771 * C50636 * C50936 +
                   (((C19772 * C851 + C50611 * C856) * C1174 +
                     (C19772 * C860 + C50611 * C866) * C1169 - C20548 * C1175 -
                     C20549 * C50686) *
                        C19768 +
                    (C20548 * C1174 + C20549 * C1169 - C20550 * C1175 -
                     C20551 * C50686) *
                        C19769 +
                    (C20550 * C1174 + C20551 * C1169 - C20552 * C1175 -
                     C20553 * C50686) *
                        C19770 +
                    (C20552 * C1174 + C20553 * C1169 -
                     (C19772 * C20531 + C50611 * C20532) * C1175 -
                     (C19772 * C20533 + C50611 * C20534) * C50686) *
                        C19771) *
                       C50771 * C50636 * C1746)) /
                     (p * q * std::sqrt(p + q));
    d2ee[141] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                      C16984 * C130 + C16990 * C124 + C16985 * C131) *
                         C506 +
                     (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                      C16984 * C144 + C16990 * C135 + C16985 * C145) *
                         C501 -
                     (C17174 + C17175 + C17176) * C507 -
                     (C17177 + C17178 + C17179) * C502 +
                     (C17508 + C17509 + C17510) * C508 +
                     (C17511 + C17512 + C17513) * C503) *
                        C16986 +
                    ((C17176 + C17175 + C17174) * C506 +
                     (C17179 + C17178 + C17177) * C501 -
                     (C17510 + C17509 + C17508) * C507 -
                     (C17513 + C17512 + C17511) * C502 +
                     (C16988 * C607 + C16983 * C611 + C16989 * C606 +
                      C16984 * C610 + C16990 * C605 + C16985 * C609) *
                         C508 +
                     (C16988 * C615 + C16983 * C619 + C16989 * C614 +
                      C16984 * C618 + C16990 * C613 + C16985 * C617) *
                         C503) *
                        C50809) *
                       C50771 * C50892 +
                   (((C17180 + C17181 + C17182) * C507 -
                     ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                       C16984 * C145 + C16988 * C134 + C16983 * C144) *
                          C501 +
                      (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                       C16984 * C131 + C16988 * C123 + C16983 * C130) *
                          C506) +
                     (C17183 + C17184 + C17185) * C502 -
                     (C17514 + C17515 + C17516) * C508 -
                     (C17517 + C17518 + C17519) * C503) *
                        C16986 +
                    ((C17516 + C17515 + C17514) * C507 -
                     ((C17185 + C17184 + C17183) * C501 +
                      (C17182 + C17181 + C17180) * C506) +
                     (C17519 + C17518 + C17517) * C502 -
                     (C16990 * C604 + C16985 * C608 + C16989 * C605 +
                      C16984 * C609 + C16988 * C606 + C16983 * C610) *
                         C508 -
                     (C16990 * C612 + C16985 * C616 + C16989 * C613 +
                      C16984 * C617 + C16988 * C614 + C16983 * C618) *
                         C503) *
                        C50809) *
                       C50771 * C50641) *
                  C50700) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                      C16984 * C130 + C16990 * C124 + C16985 * C131) *
                         C121 +
                     (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                      C16984 * C144 + C16990 * C135 + C16985 * C145) *
                         C50670) *
                        C16986 +
                    ((C16988 * C258 + C16983 * C264 + C16989 * C257 +
                      C16984 * C263 + C16990 * C256 + C16985 * C262) *
                         C121 +
                     (C16988 * C268 + C16983 * C276 + C16989 * C267 +
                      C16984 * C275 + C16990 * C266 + C16985 * C274) *
                         C50670) *
                        C50809) *
                       C50771 * C112 -
                   (((C16990 * C265 + C16985 * C273 + C16989 * C266 +
                      C16984 * C274 + C16988 * C267 + C16983 * C275) *
                         C50670 +
                     (C16990 * C255 + C16985 * C261 + C16989 * C256 +
                      C16984 * C262 + C16988 * C257 + C16983 * C263) *
                         C121) *
                        C50809 +
                    ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                      C16984 * C145 + C16988 * C134 + C16983 * C144) *
                         C50670 +
                     (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                      C16984 * C131 + C16988 * C123 + C16983 * C130) *
                         C121) *
                        C16986) *
                       C50771 * C113 +
                   (((C16988 * C124 + C16983 * C131 + C16989 * C125 +
                      C16984 * C132 + C16990 * C126 + C16985 * C138) *
                         C121 +
                     (C16988 * C135 + C16983 * C145 + C16989 * C136 +
                      C16984 * C146 + C16990 * C137 + C16985 * C147) *
                         C50670) *
                        C16986 +
                    ((C16988 * C256 + C16983 * C262 + C16989 * C255 +
                      C16984 * C261 + C16990 * C259 + C16985 * C269) *
                         C121 +
                     (C16988 * C266 + C16983 * C274 + C16989 * C265 +
                      C16984 * C273 + C16990 * C270 + C16985 * C277) *
                         C50670) *
                        C50809) *
                       C50771 * C114 -
                   (((C16990 * C272 + C16985 * C278 + C16989 * C270 +
                      C16984 * C277 + C16988 * C265 + C16983 * C273) *
                         C50670 +
                     (C16990 * C260 + C16985 * C271 + C16989 * C259 +
                      C16984 * C269 + C16988 * C255 + C16983 * C261) *
                         C121) *
                        C50809 +
                    ((C16990 * C140 + C16985 * C148 + C16989 * C137 +
                      C16984 * C147 + C16988 * C136 + C16983 * C146) *
                         C50670 +
                     (C16990 * C127 + C16985 * C139 + C16989 * C126 +
                      C16984 * C138 + C16988 * C125 + C16983 * C132) *
                         C121) *
                        C16986) *
                       C50771 * C115) *
                  C50700) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                       C16984 * C130 + C16990 * C124 + C16985 * C131) *
                          C121 +
                      (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                       C16984 * C144 + C16990 * C135 + C16985 * C145) *
                          C50670) *
                         C16986 +
                     ((C17176 + C17175 + C17174) * C121 +
                      (C17179 + C17178 + C17177) * C50670) *
                         C50809) *
                        C50771 * C50892 -
                    (((C17185 + C17184 + C17183) * C50670 +
                      (C17182 + C17181 + C17180) * C121) *
                         C50809 +
                     ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                       C16984 * C145 + C16988 * C134 + C16983 * C144) *
                          C50670 +
                      (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                       C16984 * C131 + C16988 * C123 + C16983 * C130) *
                          C121) *
                         C16986) *
                        C50771 * C50641) *
                       C848 +
                   ((((C16988 * C379 + C16983 * C385 + C16989 * C380 +
                       C16984 * C386 + C16990 * C381 + C16985 * C387) *
                          C121 +
                      (C16988 * C389 + C16983 * C397 + C16989 * C390 +
                       C16984 * C398 + C16990 * C391 + C16985 * C399) *
                          C50670) *
                         C16986 +
                     ((C16988 * C719 + C16983 * C727 + C16989 * C720 +
                       C16984 * C728 + C16990 * C721 + C16985 * C729) *
                          C121 +
                      (C16988 * C731 + C16983 * C743 + C16989 * C732 +
                       C16984 * C744 + C16990 * C733 + C16985 * C745) *
                          C50670) *
                         C50809) *
                        C50771 * C50641 -
                    (((C17811 + C17810 + C17809) * C50670 +
                      (C17808 + C17807 + C17806) * C121) *
                         C50809 +
                     ((C16990 * C390 + C16985 * C398 + C16989 * C389 +
                       C16984 * C397 + C16988 * C393 + C16983 * C401) *
                          C50670 +
                      (C16990 * C380 + C16985 * C386 + C16989 * C379 +
                       C16984 * C385 + C16988 * C383 + C16983 * C394) *
                          C121) *
                         C16986) *
                        C50771 * C50892) *
                       C849 +
                   ((((C16988 * C851 + C16983 * C856 + C16989 * C852 +
                       C16984 * C857 + C16990 * C853 + C16985 * C858) *
                          C121 +
                      (C16988 * C860 + C16983 * C866 + C16989 * C861 +
                       C16984 * C867 + C16990 * C862 + C16985 * C868) *
                          C50670) *
                         C16986 +
                     ((C16988 * C972 + C16983 * C976 + C16989 * C971 +
                       C16984 * C975 + C16990 * C970 + C16985 * C974) *
                          C121 +
                      (C16988 * C980 + C16983 * C984 + C16989 * C979 +
                       C16984 * C983 + C16990 * C978 + C16985 * C982) *
                          C50670) *
                         C50809) *
                        C50771 * C50892 -
                    (((C16990 * C977 + C16985 * C981 + C16989 * C978 +
                       C16984 * C982 + C16988 * C979 + C16983 * C983) *
                          C50670 +
                      (C16990 * C969 + C16985 * C973 + C16989 * C970 +
                       C16984 * C974 + C16988 * C971 + C16983 * C975) *
                          C121) *
                         C50809 +
                     ((C16990 * C863 + C16985 * C869 + C16989 * C862 +
                       C16984 * C868 + C16988 * C861 + C16983 * C867) *
                          C50670 +
                      (C16990 * C854 + C16985 * C859 + C16989 * C853 +
                       C16984 * C858 + C16988 * C852 + C16983 * C857) *
                          C121) *
                         C16986) *
                        C50771 * C50641) *
                       C850)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C19772 * C122 + C50611 * C129) * C121 +
                     (C19772 * C133 + C50611 * C143) * C50670) *
                        C19768 +
                    ((C19772 * C258 + C50611 * C264) * C121 +
                     (C19772 * C268 + C50611 * C276) * C50670) *
                        C19769 +
                    ((C19772 * C509 + C50611 * C514) * C121 +
                     (C19772 * C518 + C50611 * C524) * C50670) *
                        C19770 +
                    ((C19772 * C607 + C50611 * C611) * C121 +
                     (C19772 * C615 + C50611 * C619) * C50670) *
                        C19771) *
                       C50771 * C112 -
                   (((C19772 * C614 + C50611 * C618) * C50670 +
                     (C19772 * C606 + C50611 * C610) * C121) *
                        C19771 +
                    ((C19772 * C519 + C50611 * C525) * C50670 +
                     (C19772 * C510 + C50611 * C515) * C121) *
                        C19770 +
                    ((C19772 * C267 + C50611 * C275) * C50670 +
                     (C19772 * C257 + C50611 * C263) * C121) *
                        C19769 +
                    ((C19772 * C134 + C50611 * C144) * C50670 +
                     (C19772 * C123 + C50611 * C130) * C121) *
                        C19768) *
                       C50771 * C113 +
                   (((C19772 * C124 + C50611 * C131) * C121 +
                     (C19772 * C135 + C50611 * C145) * C50670) *
                        C19768 +
                    ((C19772 * C256 + C50611 * C262) * C121 +
                     (C19772 * C266 + C50611 * C274) * C50670) *
                        C19769 +
                    ((C19772 * C511 + C50611 * C516) * C121 +
                     (C19772 * C520 + C50611 * C526) * C50670) *
                        C19770 +
                    ((C19772 * C605 + C50611 * C609) * C121 +
                     (C19772 * C613 + C50611 * C617) * C50670) *
                        C19771) *
                       C50771 * C114 -
                   (((C19772 * C612 + C50611 * C616) * C50670 +
                     (C19772 * C604 + C50611 * C608) * C121) *
                        C19771 +
                    ((C19772 * C521 + C50611 * C527) * C50670 +
                     (C19772 * C512 + C50611 * C517) * C121) *
                        C19770 +
                    ((C19772 * C265 + C50611 * C273) * C50670 +
                     (C19772 * C255 + C50611 * C261) * C121) *
                        C19769 +
                    ((C19772 * C136 + C50611 * C146) * C50670 +
                     (C19772 * C125 + C50611 * C132) * C121) *
                        C19768) *
                       C50771 * C115) *
                  C50700) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C19772 * C122 + C50611 * C129) * C506 +
                     (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
                     C19909 * C502 + C19910 * C508 + C19911 * C503) *
                        C19768 +
                    (C19908 * C506 + C19909 * C501 - C19910 * C507 -
                     C19911 * C502 + C19912 * C508 + C19913 * C503) *
                        C19769 +
                    (C19910 * C506 + C19911 * C501 - C19912 * C507 -
                     C19913 * C502 + C20130 * C508 + C20131 * C503) *
                        C19770 +
                    (C19912 * C506 + C19913 * C501 - C20130 * C507 -
                     C20131 * C502 + (C19772 * C2827 + C50611 * C2829) * C508 +
                     (C19772 * C2831 + C50611 * C2833) * C503) *
                        C19771) *
                       C50771 * C50892 +
                   ((C19914 * C507 -
                     ((C19772 * C134 + C50611 * C144) * C501 +
                      (C19772 * C123 + C50611 * C130) * C506) +
                     C19915 * C502 - C19916 * C508 - C19917 * C503) *
                        C19768 +
                    (C19916 * C507 - (C19915 * C501 + C19914 * C506) +
                     C19917 * C502 - C19918 * C508 - C19919 * C503) *
                        C19769 +
                    (C19918 * C507 - (C19917 * C501 + C19916 * C506) +
                     C19919 * C502 - C20132 * C508 - C20133 * C503) *
                        C19770 +
                    (C20132 * C507 - (C19919 * C501 + C19918 * C506) +
                     C20133 * C502 - (C19772 * C2826 + C50611 * C2828) * C508 -
                     (C19772 * C2830 + C50611 * C2832) * C503) *
                        C19771) *
                       C50771 * C50641) *
                  C50700) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C19772 * C122 + C50611 * C129) * C121 +
                      (C19772 * C133 + C50611 * C143) * C50670) *
                         C19768 +
                     (C19908 * C121 + C19909 * C50670) * C19769 +
                     (C19910 * C121 + C19911 * C50670) * C19770 +
                     (C19912 * C121 + C19913 * C50670) * C19771) *
                        C50771 * C50892 -
                    ((C19919 * C50670 + C19918 * C121) * C19771 +
                     (C19917 * C50670 + C19916 * C121) * C19770 +
                     (C19915 * C50670 + C19914 * C121) * C19769 +
                     ((C19772 * C134 + C50611 * C144) * C50670 +
                      (C19772 * C123 + C50611 * C130) * C121) *
                         C19768) *
                        C50771 * C50641) *
                       C848 +
                   ((((C19772 * C379 + C50611 * C385) * C121 +
                      (C19772 * C389 + C50611 * C397) * C50670) *
                         C19768 +
                     ((C19772 * C719 + C50611 * C727) * C121 +
                      (C19772 * C731 + C50611 * C743) * C50670) *
                         C19769 +
                     ((C19772 * C724 + C50611 * C736) * C121 +
                      (C19772 * C740 + C50611 * C748) * C50670) *
                         C19770 +
                     ((C19772 * C2994 + C50611 * C2998) * C121 +
                      (C19772 * C3000 + C50611 * C3006) * C50670) *
                         C19771) *
                        C50771 * C50641 -
                    ((C20333 * C50670 + C20332 * C121) * C19771 +
                     (C20331 * C50670 + C20330 * C121) * C19770 +
                     (C20329 * C50670 + C20328 * C121) * C19769 +
                     ((C19772 * C393 + C50611 * C401) * C50670 +
                      (C19772 * C383 + C50611 * C394) * C121) *
                         C19768) *
                        C50771 * C50892) *
                       C849 +
                   ((((C19772 * C851 + C50611 * C856) * C121 +
                      (C19772 * C860 + C50611 * C866) * C50670) *
                         C19768 +
                     ((C19772 * C972 + C50611 * C976) * C121 +
                      (C19772 * C980 + C50611 * C984) * C50670) *
                         C19769 +
                     ((C19772 * C3194 + C50611 * C3197) * C121 +
                      (C19772 * C3199 + C50611 * C3203) * C50670) *
                         C19770 +
                     ((C19772 * C3353 + C50611 * C3355) * C121 +
                      (C19772 * C3357 + C50611 * C3359) * C50670) *
                         C19771) *
                        C50771 * C50892 -
                    (((C19772 * C3356 + C50611 * C3358) * C50670 +
                      (C19772 * C3352 + C50611 * C3354) * C121) *
                         C19771 +
                     ((C19772 * C3200 + C50611 * C3204) * C50670 +
                      (C19772 * C3195 + C50611 * C3198) * C121) *
                         C19770 +
                     ((C19772 * C979 + C50611 * C983) * C50670 +
                      (C19772 * C971 + C50611 * C975) * C121) *
                         C19769 +
                     ((C19772 * C861 + C50611 * C867) * C50670 +
                      (C19772 * C852 + C50611 * C857) * C121) *
                         C19768) *
                        C50771 * C50641) *
                       C850)) /
                     (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
            C16990 * C124 + C16985 * C131) *
               C600 +
           (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
            C16990 * C135 + C16985 * C145) *
               C595 -
           (C17174 + C17175 + C17176) * C601 -
           (C17177 + C17178 + C17179) * C596 +
           (C17508 + C17509 + C17510) * C602 +
           (C17511 + C17512 + C17513) * C597 -
           (C17630 + C17631 + C17632) * C603 -
           (C17633 + C17634 + C17635) * C598) *
              C16986 +
          ((C17176 + C17175 + C17174) * C600 +
           (C17179 + C17178 + C17177) * C595 -
           (C17510 + C17509 + C17508) * C601 -
           (C17513 + C17512 + C17511) * C596 +
           (C17632 + C17631 + C17630) * C602 +
           (C17635 + C17634 + C17633) * C597 -
           (C16990 * C2690 + C16985 * C2695 + C16989 * C2689 + C16984 * C2692 +
            C16988 * C2688 + C16983 * C2691) *
               C603 -
           (C16990 * C2696 + C16985 * C2699 + C16989 * C2694 + C16984 * C2698 +
            C16988 * C2693 + C16983 * C2697) *
               C598) *
              C50809) *
         C50771 * C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C253 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C50899 -
            (C17174 + C17175 + C17176) * C254 -
            (C17177 + C17178 + C17179) * C50686) *
               C16986 +
           ((C17176 + C17175 + C17174) * C253 +
            (C17179 + C17178 + C17177) * C50899 -
            (C16990 * C511 + C16985 * C516 + C16989 * C510 + C16984 * C515 +
             C16988 * C509 + C16983 * C514) *
                C254 -
            (C16990 * C520 + C16985 * C526 + C16989 * C519 + C16984 * C525 +
             C16988 * C518 + C16983 * C524) *
                C50686) *
               C50809) *
              C50771 * C250 +
          (((C17180 + C17181 + C17182) * C254 -
            ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
              C16988 * C134 + C16983 * C144) *
                 C50899 +
             (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
              C16988 * C123 + C16983 * C130) *
                 C253) +
            (C17183 + C17184 + C17185) * C50686) *
               C16986 +
           ((C16988 * C510 + C16983 * C515 + C16989 * C511 + C16984 * C516 +
             C16990 * C512 + C16985 * C517) *
                C254 -
            ((C17185 + C17184 + C17183) * C50899 +
             (C17182 + C17181 + C17180) * C253) +
            (C16988 * C519 + C16983 * C525 + C16989 * C520 + C16984 * C526 +
             C16990 * C521 + C16985 * C527) *
                C50686) *
               C50809) *
              C50771 * C251 +
          (((C16988 * C124 + C16983 * C131 + C16989 * C125 + C16984 * C132 +
             C16990 * C126 + C16985 * C138) *
                C253 +
            (C16988 * C135 + C16983 * C145 + C16989 * C136 + C16984 * C146 +
             C16990 * C137 + C16985 * C147) *
                C50899 -
            (C17186 + C17187 + C17188) * C254 -
            (C17189 + C17190 + C17191) * C50686) *
               C16986 +
           ((C17188 + C17187 + C17186) * C253 +
            (C17191 + C17190 + C17189) * C50899 -
            (C16990 * C513 + C16985 * C522 + C16989 * C512 + C16984 * C517 +
             C16988 * C511 + C16983 * C516) *
                C254 -
            (C16990 * C523 + C16985 * C528 + C16989 * C521 + C16984 * C527 +
             C16988 * C520 + C16983 * C526) *
                C50686) *
               C50809) *
              C50771 * C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C253 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C50899 -
            (C17174 + C17175 + C17176) * C254 -
            (C17177 + C17178 + C17179) * C50686) *
               C16986 +
           ((C17176 + C17175 + C17174) * C253 +
            (C17179 + C17178 + C17177) * C50899 -
            (C17510 + C17509 + C17508) * C254 -
            (C17513 + C17512 + C17511) * C50686) *
               C50809) *
              C50771 * C50636 * C848 +
          (((C17806 + C17807 + C17808) * C254 -
            ((C16990 * C390 + C16985 * C398 + C16989 * C389 + C16984 * C397 +
              C16988 * C393 + C16983 * C401) *
                 C50899 +
             (C16990 * C380 + C16985 * C386 + C16989 * C379 + C16984 * C385 +
              C16988 * C383 + C16983 * C394) *
                 C253) +
            (C17809 + C17810 + C17811) * C50686) *
               C16986 +
           ((C17814 + C17813 + C17812) * C254 -
            ((C17811 + C17810 + C17809) * C50899 +
             (C17808 + C17807 + C17806) * C253) +
            (C17817 + C17816 + C17815) * C50686) *
               C50809) *
              C50771 * C50636 * C849 +
          (((C16988 * C851 + C16983 * C856 + C16989 * C852 + C16984 * C857 +
             C16990 * C853 + C16985 * C858) *
                C253 +
            (C16988 * C860 + C16983 * C866 + C16989 * C861 + C16984 * C867 +
             C16990 * C862 + C16985 * C868) *
                C50899 -
            (C18122 + C18123 + C18124) * C254 -
            (C18125 + C18126 + C18127) * C50686) *
               C16986 +
           ((C18124 + C18123 + C18122) * C253 +
            (C18127 + C18126 + C18125) * C50899 -
            (C16990 * C3196 + C16985 * C3202 + C16989 * C3195 + C16984 * C3198 +
             C16988 * C3194 + C16983 * C3197) *
                C254 -
            (C16990 * C3201 + C16985 * C3205 + C16989 * C3200 + C16984 * C3204 +
             C16988 * C3199 + C16983 * C3203) *
                C50686) *
               C50809) *
              C50771 * C50636 * C850)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C253 +
            (C19772 * C133 + C50611 * C143) * C50899 - C19908 * C254 -
            C19909 * C50686) *
               C19768 +
           (C19908 * C253 + C19909 * C50899 - C19910 * C254 - C19911 * C50686) *
               C19769 +
           (C19910 * C253 + C19911 * C50899 - C19912 * C254 - C19913 * C50686) *
               C19770 +
           (C19912 * C253 + C19913 * C50899 -
            (C19772 * C2688 + C50611 * C2691) * C254 -
            (C19772 * C2693 + C50611 * C2697) * C50686) *
               C19771) *
              C50771 * C250 +
          ((C19914 * C254 -
            ((C19772 * C134 + C50611 * C144) * C50899 +
             (C19772 * C123 + C50611 * C130) * C253) +
            C19915 * C50686) *
               C19768 +
           (C19916 * C254 - (C19915 * C50899 + C19914 * C253) +
            C19917 * C50686) *
               C19769 +
           (C19918 * C254 - (C19917 * C50899 + C19916 * C253) +
            C19919 * C50686) *
               C19770 +
           ((C19772 * C2689 + C50611 * C2692) * C254 -
            (C19919 * C50899 + C19918 * C253) +
            (C19772 * C2694 + C50611 * C2698) * C50686) *
               C19771) *
              C50771 * C251 +
          (((C19772 * C124 + C50611 * C131) * C253 +
            (C19772 * C135 + C50611 * C145) * C50899 - C19920 * C254 -
            C19921 * C50686) *
               C19768 +
           (C19920 * C253 + C19921 * C50899 - C19922 * C254 - C19923 * C50686) *
               C19769 +
           (C19922 * C253 + C19923 * C50899 - C19924 * C254 - C19925 * C50686) *
               C19770 +
           (C19924 * C253 + C19925 * C50899 -
            (C19772 * C2690 + C50611 * C2695) * C254 -
            (C19772 * C2696 + C50611 * C2699) * C50686) *
               C19771) *
              C50771 * C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19772 * C122 + C50611 * C129) * C600 +
           (C19772 * C133 + C50611 * C143) * C595 - C19908 * C601 -
           C19909 * C596 + C19910 * C602 + C19911 * C597 - C19912 * C603 -
           C19913 * C598) *
              C19768 +
          (C19908 * C600 + C19909 * C595 - C19910 * C601 - C19911 * C596 +
           C19912 * C602 + C19913 * C597 - C20130 * C603 - C20131 * C598) *
              C19769 +
          (C19910 * C600 + C19911 * C595 - C19912 * C601 - C19913 * C596 +
           C20130 * C602 + C20131 * C597 - C20208 * C603 - C20209 * C598) *
              C19770 +
          (C19912 * C600 + C19913 * C595 - C20130 * C601 - C20131 * C596 +
           C20208 * C602 + C20209 * C597 -
           (C19772 * C20199 + C50611 * C20200) * C603 -
           (C19772 * C20201 + C50611 * C20202) * C598) *
              C19771) *
         C50771 * C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C253 +
            (C19772 * C133 + C50611 * C143) * C50899 - C19908 * C254 -
            C19909 * C50686) *
               C19768 +
           (C19908 * C253 + C19909 * C50899 - C19910 * C254 - C19911 * C50686) *
               C19769 +
           (C19910 * C253 + C19911 * C50899 - C19912 * C254 - C19913 * C50686) *
               C19770 +
           (C19912 * C253 + C19913 * C50899 - C20130 * C254 - C20131 * C50686) *
               C19771) *
              C50771 * C50636 * C848 +
          ((C20328 * C254 -
            ((C19772 * C393 + C50611 * C401) * C50899 +
             (C19772 * C383 + C50611 * C394) * C253) +
            C20329 * C50686) *
               C19768 +
           (C20330 * C254 - (C20329 * C50899 + C20328 * C253) +
            C20331 * C50686) *
               C19769 +
           (C20332 * C254 - (C20331 * C50899 + C20330 * C253) +
            C20333 * C50686) *
               C19770 +
           (C20334 * C254 - (C20333 * C50899 + C20332 * C253) +
            C20335 * C50686) *
               C19771) *
              C50771 * C50636 * C849 +
          (((C19772 * C851 + C50611 * C856) * C253 +
            (C19772 * C860 + C50611 * C866) * C50899 - C20548 * C254 -
            C20549 * C50686) *
               C19768 +
           (C20548 * C253 + C20549 * C50899 - C20550 * C254 - C20551 * C50686) *
               C19769 +
           (C20550 * C253 + C20551 * C50899 - C20552 * C254 - C20553 * C50686) *
               C19770 +
           (C20552 * C253 + C20553 * C50899 -
            (C19772 * C20531 + C50611 * C20532) * C254 -
            (C19772 * C20533 + C50611 * C20534) * C50686) *
               C19771) *
              C50771 * C50636 * C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C506 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C501 -
            (C17174 + C17175 + C17176) * C507 -
            (C17177 + C17178 + C17179) * C502 +
            (C17508 + C17509 + C17510) * C508 +
            (C17511 + C17512 + C17513) * C503) *
               C16986 +
           ((C17176 + C17175 + C17174) * C506 +
            (C17179 + C17178 + C17177) * C501 -
            (C17510 + C17509 + C17508) * C507 -
            (C17513 + C17512 + C17511) * C502 +
            (C17632 + C17631 + C17630) * C508 +
            (C17635 + C17634 + C17633) * C503) *
               C50809) *
              C50771 * C50636 * C50901 +
          (((C17806 + C17807 + C17808) * C507 -
            ((C16990 * C390 + C16985 * C398 + C16989 * C389 + C16984 * C397 +
              C16988 * C393 + C16983 * C401) *
                 C501 +
             (C16990 * C380 + C16985 * C386 + C16989 * C379 + C16984 * C385 +
              C16988 * C383 + C16983 * C394) *
                 C506) +
            (C17809 + C17810 + C17811) * C502 -
            (C17812 + C17813 + C17814) * C508 -
            (C17815 + C17816 + C17817) * C503) *
               C16986 +
           ((C17814 + C17813 + C17812) * C507 -
            ((C17811 + C17810 + C17809) * C501 +
             (C17808 + C17807 + C17806) * C506) +
            (C17817 + C17816 + C17815) * C502 -
            (C16990 * C3984 + C16985 * C3985 + C16989 * C2994 + C16984 * C2998 +
             C16988 * C2995 + C16983 * C2999) *
                C508 -
            (C16990 * C3986 + C16985 * C3987 + C16989 * C3000 + C16984 * C3006 +
             C16988 * C3001 + C16983 * C3007) *
                C503) *
               C50809) *
              C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
              C16990 * C124 + C16985 * C131) *
                 C121 +
             (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
              C16990 * C135 + C16985 * C145) *
                 C50670) *
                C16986 +
            ((C17176 + C17175 + C17174) * C121 +
             (C17179 + C17178 + C17177) * C50670) *
                C50809) *
               C50771 * C250 -
           (((C17185 + C17184 + C17183) * C50670 +
             (C17182 + C17181 + C17180) * C121) *
                C50809 +
            ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
              C16988 * C134 + C16983 * C144) *
                 C50670 +
             (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
              C16988 * C123 + C16983 * C130) *
                 C121) *
                C16986) *
               C50771 * C251 +
           (((C16988 * C124 + C16983 * C131 + C16989 * C125 + C16984 * C132 +
              C16990 * C126 + C16985 * C138) *
                 C121 +
             (C16988 * C135 + C16983 * C145 + C16989 * C136 + C16984 * C146 +
              C16990 * C137 + C16985 * C147) *
                 C50670) *
                C16986 +
            ((C17188 + C17187 + C17186) * C121 +
             (C17191 + C17190 + C17189) * C50670) *
                C50809) *
               C50771 * C252) *
              C50901 +
          ((((C16988 * C379 + C16983 * C385 + C16989 * C380 + C16984 * C386 +
              C16990 * C381 + C16985 * C387) *
                 C121 +
             (C16988 * C389 + C16983 * C397 + C16989 * C390 + C16984 * C398 +
              C16990 * C391 + C16985 * C399) *
                 C50670) *
                C16986 +
            ((C16988 * C719 + C16983 * C727 + C16989 * C720 + C16984 * C728 +
              C16990 * C721 + C16985 * C729) *
                 C121 +
             (C16988 * C731 + C16983 * C743 + C16989 * C732 + C16984 * C744 +
              C16990 * C733 + C16985 * C745) *
                 C50670) *
                C50809) *
               C50771 * C251 -
           (((C16990 * C732 + C16985 * C744 + C16989 * C731 + C16984 * C743 +
              C16988 * C730 + C16983 * C742) *
                 C50670 +
             (C16990 * C720 + C16985 * C728 + C16989 * C719 + C16984 * C727 +
              C16988 * C718 + C16983 * C726) *
                 C121) *
                C50809 +
            ((C16990 * C390 + C16985 * C398 + C16989 * C389 + C16984 * C397 +
              C16988 * C393 + C16983 * C401) *
                 C50670 +
             (C16990 * C380 + C16985 * C386 + C16989 * C379 + C16984 * C385 +
              C16988 * C383 + C16983 * C394) *
                 C121) *
                C16986) *
               C50771 * C250 -
           (((C16990 * C1414 + C16985 * C1415 + C16989 * C733 + C16984 * C745 +
              C16988 * C732 + C16983 * C744) *
                 C50670 +
             (C16990 * C1412 + C16985 * C1413 + C16989 * C721 + C16984 * C729 +
              C16988 * C720 + C16983 * C728) *
                 C121) *
                C50809 +
            ((C16990 * C392 + C16985 * C400 + C16989 * C391 + C16984 * C399 +
              C16988 * C390 + C16983 * C398) *
                 C50670 +
             (C16990 * C382 + C16985 * C388 + C16989 * C381 + C16984 * C387 +
              C16988 * C380 + C16983 * C386) *
                 C121) *
                C16986) *
               C50771 * C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C121 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C50670) *
               C16986 +
           ((C17176 + C17175 + C17174) * C121 +
            (C17179 + C17178 + C17177) * C50670) *
               C50809) *
              C50771 * C50636 * C1051 -
          (((C17811 + C17810 + C17809) * C50670 +
            (C17808 + C17807 + C17806) * C121) *
               C50809 +
           ((C16990 * C390 + C16985 * C398 + C16989 * C389 + C16984 * C397 +
             C16988 * C393 + C16983 * C401) *
                C50670 +
            (C16990 * C380 + C16985 * C386 + C16989 * C379 + C16984 * C385 +
             C16988 * C383 + C16983 * C394) *
                C121) *
               C16986) *
              C50771 * C50636 * C1052 +
          (((C16988 * C851 + C16983 * C856 + C16989 * C852 + C16984 * C857 +
             C16990 * C853 + C16985 * C858) *
                C121 +
            (C16988 * C860 + C16983 * C866 + C16989 * C861 + C16984 * C867 +
             C16990 * C862 + C16985 * C868) *
                C50670) *
               C16986 +
           ((C18124 + C18123 + C18122) * C121 +
            (C18127 + C18126 + C18125) * C50670) *
               C50809) *
              C50771 * C50636 * C1053 -
          (((C16990 * C6821 + C16985 * C6822 + C16989 * C3490 + C16984 * C3496 +
             C16988 * C3491 + C16983 * C3497) *
                C50670 +
            (C16990 * C6819 + C16985 * C6820 + C16989 * C3484 + C16984 * C3492 +
             C16988 * C3485 + C16983 * C3493) *
                C121) *
               C50809 +
           ((C16990 * C1060 + C16985 * C1068 + C16989 * C1061 + C16984 * C1069 +
             C16988 * C1062 + C16983 * C1070) *
                C50670 +
            (C16990 * C1056 + C16985 * C1064 + C16989 * C1057 + C16984 * C1065 +
             C16988 * C1058 + C16983 * C1066) *
                C121) *
               C16986) *
              C50771 * C50636 * C1054)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C121 +
             (C19772 * C133 + C50611 * C143) * C50670) *
                C19768 +
            (C19908 * C121 + C19909 * C50670) * C19769 +
            (C19910 * C121 + C19911 * C50670) * C19770 +
            (C19912 * C121 + C19913 * C50670) * C19771) *
               C50771 * C250 -
           ((C19919 * C50670 + C19918 * C121) * C19771 +
            (C19917 * C50670 + C19916 * C121) * C19770 +
            (C19915 * C50670 + C19914 * C121) * C19769 +
            ((C19772 * C134 + C50611 * C144) * C50670 +
             (C19772 * C123 + C50611 * C130) * C121) *
                C19768) *
               C50771 * C251 +
           (((C19772 * C124 + C50611 * C131) * C121 +
             (C19772 * C135 + C50611 * C145) * C50670) *
                C19768 +
            (C19920 * C121 + C19921 * C50670) * C19769 +
            (C19922 * C121 + C19923 * C50670) * C19770 +
            (C19924 * C121 + C19925 * C50670) * C19771) *
               C50771 * C252) *
              C50901 +
          ((((C19772 * C379 + C50611 * C385) * C121 +
             (C19772 * C389 + C50611 * C397) * C50670) *
                C19768 +
            ((C19772 * C719 + C50611 * C727) * C121 +
             (C19772 * C731 + C50611 * C743) * C50670) *
                C19769 +
            ((C19772 * C724 + C50611 * C736) * C121 +
             (C19772 * C740 + C50611 * C748) * C50670) *
                C19770 +
            ((C19772 * C2994 + C50611 * C2998) * C121 +
             (C19772 * C3000 + C50611 * C3006) * C50670) *
                C19771) *
               C50771 * C251 -
           (((C19772 * C3001 + C50611 * C3007) * C50670 +
             (C19772 * C2995 + C50611 * C2999) * C121) *
                C19771 +
            ((C19772 * C741 + C50611 * C749) * C50670 +
             (C19772 * C725 + C50611 * C737) * C121) *
                C19770 +
            ((C19772 * C730 + C50611 * C742) * C50670 +
             (C19772 * C718 + C50611 * C726) * C121) *
                C19769 +
            ((C19772 * C393 + C50611 * C401) * C50670 +
             (C19772 * C383 + C50611 * C394) * C121) *
                C19768) *
               C50771 * C250 -
           (((C19772 * C3986 + C50611 * C3987) * C50670 +
             (C19772 * C3984 + C50611 * C3985) * C121) *
                C19771 +
            ((C19772 * C739 + C50611 * C747) * C50670 +
             (C19772 * C723 + C50611 * C735) * C121) *
                C19770 +
            ((C19772 * C732 + C50611 * C744) * C50670 +
             (C19772 * C720 + C50611 * C728) * C121) *
                C19769 +
            ((C19772 * C390 + C50611 * C398) * C50670 +
             (C19772 * C380 + C50611 * C386) * C121) *
                C19768) *
               C50771 * C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C506 +
            (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
            C19909 * C502 + C19910 * C508 + C19911 * C503) *
               C19768 +
           (C19908 * C506 + C19909 * C501 - C19910 * C507 - C19911 * C502 +
            C19912 * C508 + C19913 * C503) *
               C19769 +
           (C19910 * C506 + C19911 * C501 - C19912 * C507 - C19913 * C502 +
            C20130 * C508 + C20131 * C503) *
               C19770 +
           (C19912 * C506 + C19913 * C501 - C20130 * C507 - C20131 * C502 +
            C20208 * C508 + C20209 * C503) *
               C19771) *
              C50771 * C50636 * C50901 +
          ((C20328 * C507 -
            ((C19772 * C393 + C50611 * C401) * C501 +
             (C19772 * C383 + C50611 * C394) * C506) +
            C20329 * C502 - C20330 * C508 - C20331 * C503) *
               C19768 +
           (C20330 * C507 - (C20329 * C501 + C20328 * C506) + C20331 * C502 -
            C20332 * C508 - C20333 * C503) *
               C19769 +
           (C20332 * C507 - (C20331 * C501 + C20330 * C506) + C20333 * C502 -
            C20334 * C508 - C20335 * C503) *
               C19770 +
           (C20334 * C507 - (C20333 * C501 + C20332 * C506) + C20335 * C502 -
            (C19772 * C20307 + C50611 * C20308) * C508 -
            (C19772 * C20309 + C50611 * C20310) * C503) *
               C19771) *
              C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C121 +
            (C19772 * C133 + C50611 * C143) * C50670) *
               C19768 +
           (C19908 * C121 + C19909 * C50670) * C19769 +
           (C19910 * C121 + C19911 * C50670) * C19770 +
           (C19912 * C121 + C19913 * C50670) * C19771) *
              C50771 * C50636 * C1051 -
          ((C20333 * C50670 + C20332 * C121) * C19771 +
           (C20331 * C50670 + C20330 * C121) * C19770 +
           (C20329 * C50670 + C20328 * C121) * C19769 +
           ((C19772 * C393 + C50611 * C401) * C50670 +
            (C19772 * C383 + C50611 * C394) * C121) *
               C19768) *
              C50771 * C50636 * C1052 +
          (((C19772 * C851 + C50611 * C856) * C121 +
            (C19772 * C860 + C50611 * C866) * C50670) *
               C19768 +
           (C20548 * C121 + C20549 * C50670) * C19769 +
           (C20550 * C121 + C20551 * C50670) * C19770 +
           (C20552 * C121 + C20553 * C50670) * C19771) *
              C50771 * C50636 * C1053 -
          (((C19772 * C20620 + C50611 * C20622) * C50670 +
            (C19772 * C20619 + C50611 * C20621) * C121) *
               C19771 +
           ((C19772 * C3487 + C50611 * C3495) * C50670 +
            (C19772 * C3483 + C50611 * C3489) * C121) *
               C19770 +
           ((C19772 * C3491 + C50611 * C3497) * C50670 +
            (C19772 * C3485 + C50611 * C3493) * C121) *
               C19769 +
           ((C19772 * C1062 + C50611 * C1070) * C50670 +
            (C19772 * C1058 + C50611 * C1066) * C121) *
               C19768) *
              C50771 * C50636 * C1054)) /
            (p * q * std::sqrt(p + q));
    d2ee[144] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                       C16984 * C130 + C16990 * C124 + C16985 * C131) *
                          C121 +
                      (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                       C16984 * C144 + C16990 * C135 + C16985 * C145) *
                          C50670) *
                         C16986 +
                     ((C17176 + C17175 + C17174) * C121 +
                      (C17179 + C17178 + C17177) * C50670) *
                         C50809) *
                        C50771 * C50945 -
                    (((C17185 + C17184 + C17183) * C50670 +
                      (C17182 + C17181 + C17180) * C121) *
                         C50809 +
                     ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                       C16984 * C145 + C16988 * C134 + C16983 * C144) *
                          C50670 +
                      (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                       C16984 * C131 + C16988 * C123 + C16983 * C130) *
                          C121) *
                         C16986) *
                        C50771 * C50930 +
                    (((C16988 * C124 + C16983 * C131 + C16989 * C125 +
                       C16984 * C132 + C16990 * C126 + C16985 * C138) *
                          C121 +
                      (C16988 * C135 + C16983 * C145 + C16989 * C136 +
                       C16984 * C146 + C16990 * C137 + C16985 * C147) *
                          C50670) *
                         C16986 +
                     ((C17188 + C17187 + C17186) * C121 +
                      (C17191 + C17190 + C17189) * C50670) *
                         C50809) *
                        C50771 * C1173) *
                       C1514 +
                   ((((C16988 * C379 + C16983 * C385 + C16989 * C380 +
                       C16984 * C386 + C16990 * C381 + C16985 * C387) *
                          C121 +
                      (C16988 * C389 + C16983 * C397 + C16989 * C390 +
                       C16984 * C398 + C16990 * C391 + C16985 * C399) *
                          C50670) *
                         C16986 +
                     ((C18726 + C18725 + C18724) * C121 +
                      (C18729 + C18728 + C18727) * C50670) *
                         C50809) *
                        C50771 * C50930 -
                    (((C17811 + C17810 + C17809) * C50670 +
                      (C17808 + C17807 + C17806) * C121) *
                         C50809 +
                     ((C16990 * C390 + C16985 * C398 + C16989 * C389 +
                       C16984 * C397 + C16988 * C393 + C16983 * C401) *
                          C50670 +
                      (C16990 * C380 + C16985 * C386 + C16989 * C379 +
                       C16984 * C385 + C16988 * C383 + C16983 * C394) *
                          C121) *
                         C16986) *
                        C50771 * C50945 -
                    (((C16990 * C1414 + C16985 * C1415 + C16989 * C733 +
                       C16984 * C745 + C16988 * C732 + C16983 * C744) *
                          C50670 +
                      (C16990 * C1412 + C16985 * C1413 + C16989 * C721 +
                       C16984 * C729 + C16988 * C720 + C16983 * C728) *
                          C121) *
                         C50809 +
                     ((C16990 * C392 + C16985 * C400 + C16989 * C391 +
                       C16984 * C399 + C16988 * C390 + C16983 * C398) *
                          C50670 +
                      (C16990 * C382 + C16985 * C388 + C16989 * C381 +
                       C16984 * C387 + C16988 * C380 + C16983 * C386) *
                          C121) *
                         C16986) *
                        C50771 * C1173) *
                       C50712)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C19772 * C122 + C50611 * C129) * C121 +
                      (C19772 * C133 + C50611 * C143) * C50670) *
                         C19768 +
                     (C19908 * C121 + C19909 * C50670) * C19769 +
                     (C19910 * C121 + C19911 * C50670) * C19770 +
                     (C19912 * C121 + C19913 * C50670) * C19771) *
                        C50771 * C50945 -
                    ((C19919 * C50670 + C19918 * C121) * C19771 +
                     (C19917 * C50670 + C19916 * C121) * C19770 +
                     (C19915 * C50670 + C19914 * C121) * C19769 +
                     ((C19772 * C134 + C50611 * C144) * C50670 +
                      (C19772 * C123 + C50611 * C130) * C121) *
                         C19768) *
                        C50771 * C50930 +
                    (((C19772 * C124 + C50611 * C131) * C121 +
                      (C19772 * C135 + C50611 * C145) * C50670) *
                         C19768 +
                     (C19920 * C121 + C19921 * C50670) * C19769 +
                     (C19922 * C121 + C19923 * C50670) * C19770 +
                     (C19924 * C121 + C19925 * C50670) * C19771) *
                        C50771 * C1173) *
                       C1514 +
                   ((((C19772 * C379 + C50611 * C385) * C121 +
                      (C19772 * C389 + C50611 * C397) * C50670) *
                         C19768 +
                     (C20962 * C121 + C20963 * C50670) * C19769 +
                     (C20964 * C121 + C20965 * C50670) * C19770 +
                     (C20966 * C121 + C20967 * C50670) * C19771) *
                        C50771 * C50930 -
                    ((C20333 * C50670 + C20332 * C121) * C19771 +
                     (C20331 * C50670 + C20330 * C121) * C19770 +
                     (C20329 * C50670 + C20328 * C121) * C19769 +
                     ((C19772 * C393 + C50611 * C401) * C50670 +
                      (C19772 * C383 + C50611 * C394) * C121) *
                         C19768) *
                        C50771 * C50945 -
                    (((C19772 * C3986 + C50611 * C3987) * C50670 +
                      (C19772 * C3984 + C50611 * C3985) * C121) *
                         C19771 +
                     ((C19772 * C739 + C50611 * C747) * C50670 +
                      (C19772 * C723 + C50611 * C735) * C121) *
                         C19770 +
                     ((C19772 * C732 + C50611 * C744) * C50670 +
                      (C19772 * C720 + C50611 * C728) * C121) *
                         C19769 +
                     ((C19772 * C390 + C50611 * C398) * C50670 +
                      (C19772 * C380 + C50611 * C386) * C121) *
                         C19768) *
                        C50771 * C1173) *
                       C50712)) /
                     (p * q * std::sqrt(p + q));
    d2ee[145] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                       C16984 * C130 + C16990 * C124 + C16985 * C131) *
                          C253 +
                      (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                       C16984 * C144 + C16990 * C135 + C16985 * C145) *
                          C50899 -
                      (C17174 + C17175 + C17176) * C254 -
                      (C17177 + C17178 + C17179) * C50686) *
                         C16986 +
                     ((C17176 + C17175 + C17174) * C253 +
                      (C17179 + C17178 + C17177) * C50899 -
                      (C17510 + C17509 + C17508) * C254 -
                      (C17513 + C17512 + C17511) * C50686) *
                         C50809) *
                        C50771 * C1277 +
                    (((C17180 + C17181 + C17182) * C254 -
                      ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                        C16984 * C145 + C16988 * C134 + C16983 * C144) *
                           C50899 +
                       (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                        C16984 * C131 + C16988 * C123 + C16983 * C130) *
                           C253) +
                      (C17183 + C17184 + C17185) * C50686) *
                         C16986 +
                     ((C17516 + C17515 + C17514) * C254 -
                      ((C17185 + C17184 + C17183) * C50899 +
                       (C17182 + C17181 + C17180) * C253) +
                      (C17519 + C17518 + C17517) * C50686) *
                         C50809) *
                        C50771 * C50641) *
                       C1514 +
                   ((((C17806 + C17807 + C17808) * C254 -
                      ((C16990 * C390 + C16985 * C398 + C16989 * C389 +
                        C16984 * C397 + C16988 * C393 + C16983 * C401) *
                           C50899 +
                       (C16990 * C380 + C16985 * C386 + C16989 * C379 +
                        C16984 * C385 + C16988 * C383 + C16983 * C394) *
                           C253) +
                      (C17809 + C17810 + C17811) * C50686) *
                         C16986 +
                     ((C17814 + C17813 + C17812) * C254 -
                      ((C17811 + C17810 + C17809) * C50899 +
                       (C17808 + C17807 + C17806) * C253) +
                      (C17817 + C17816 + C17815) * C50686) *
                         C50809) *
                        C50771 * C1277 +
                    (((C16988 * C379 + C16983 * C385 + C16989 * C380 +
                       C16984 * C386 + C16990 * C381 + C16985 * C387) *
                          C253 +
                      (C16988 * C389 + C16983 * C397 + C16989 * C390 +
                       C16984 * C398 + C16990 * C391 + C16985 * C399) *
                          C50899 -
                      (C18724 + C18725 + C18726) * C254 -
                      (C18727 + C18728 + C18729) * C50686) *
                         C16986 +
                     ((C18726 + C18725 + C18724) * C253 +
                      (C18729 + C18728 + C18727) * C50899 -
                      (C16990 * C722 + C16985 * C734 + C16989 * C723 +
                       C16984 * C735 + C16988 * C724 + C16983 * C736) *
                          C254 -
                      (C16990 * C738 + C16985 * C746 + C16989 * C739 +
                       C16984 * C747 + C16988 * C740 + C16983 * C748) *
                          C50686) *
                         C50809) *
                        C50771 * C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C19772 * C122 + C50611 * C129) * C253 +
                      (C19772 * C133 + C50611 * C143) * C50899 - C19908 * C254 -
                      C19909 * C50686) *
                         C19768 +
                     (C19908 * C253 + C19909 * C50899 - C19910 * C254 -
                      C19911 * C50686) *
                         C19769 +
                     (C19910 * C253 + C19911 * C50899 - C19912 * C254 -
                      C19913 * C50686) *
                         C19770 +
                     (C19912 * C253 + C19913 * C50899 - C20130 * C254 -
                      C20131 * C50686) *
                         C19771) *
                        C50771 * C1277 +
                    ((C19914 * C254 -
                      ((C19772 * C134 + C50611 * C144) * C50899 +
                       (C19772 * C123 + C50611 * C130) * C253) +
                      C19915 * C50686) *
                         C19768 +
                     (C19916 * C254 - (C19915 * C50899 + C19914 * C253) +
                      C19917 * C50686) *
                         C19769 +
                     (C19918 * C254 - (C19917 * C50899 + C19916 * C253) +
                      C19919 * C50686) *
                         C19770 +
                     (C20132 * C254 - (C19919 * C50899 + C19918 * C253) +
                      C20133 * C50686) *
                         C19771) *
                        C50771 * C50641) *
                       C1514 +
                   (((C20328 * C254 -
                      ((C19772 * C393 + C50611 * C401) * C50899 +
                       (C19772 * C383 + C50611 * C394) * C253) +
                      C20329 * C50686) *
                         C19768 +
                     (C20330 * C254 - (C20329 * C50899 + C20328 * C253) +
                      C20331 * C50686) *
                         C19769 +
                     (C20332 * C254 - (C20331 * C50899 + C20330 * C253) +
                      C20333 * C50686) *
                         C19770 +
                     (C20334 * C254 - (C20333 * C50899 + C20332 * C253) +
                      C20335 * C50686) *
                         C19771) *
                        C50771 * C1277 +
                    (((C19772 * C379 + C50611 * C385) * C253 +
                      (C19772 * C389 + C50611 * C397) * C50899 - C20962 * C254 -
                      C20963 * C50686) *
                         C19768 +
                     (C20962 * C253 + C20963 * C50899 - C20964 * C254 -
                      C20965 * C50686) *
                         C19769 +
                     (C20964 * C253 + C20965 * C50899 - C20966 * C254 -
                      C20967 * C50686) *
                         C19770 +
                     (C20966 * C253 + C20967 * C50899 -
                      (C19772 * C2996 + C50611 * C3002) * C254 -
                      (C19772 * C3004 + C50611 * C3008) * C50686) *
                         C19771) *
                        C50771 * C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q));
    d2ee[146] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                       C16984 * C130 + C16990 * C124 + C16985 * C131) *
                          C121 +
                      (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                       C16984 * C144 + C16990 * C135 + C16985 * C145) *
                          C50670) *
                         C16986 +
                     ((C17176 + C17175 + C17174) * C121 +
                      (C17179 + C17178 + C17177) * C50670) *
                         C50809) *
                        C50771 * C1277 -
                    (((C17185 + C17184 + C17183) * C50670 +
                      (C17182 + C17181 + C17180) * C121) *
                         C50809 +
                     ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                       C16984 * C145 + C16988 * C134 + C16983 * C144) *
                          C50670 +
                      (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                       C16984 * C131 + C16988 * C123 + C16983 * C130) *
                          C121) *
                         C16986) *
                        C50771 * C50641) *
                       C50947 +
                   ((((C16988 * C379 + C16983 * C385 + C16989 * C380 +
                       C16984 * C386 + C16990 * C381 + C16985 * C387) *
                          C121 +
                      (C16988 * C389 + C16983 * C397 + C16989 * C390 +
                       C16984 * C398 + C16990 * C391 + C16985 * C399) *
                          C50670) *
                         C16986 +
                     ((C18726 + C18725 + C18724) * C121 +
                      (C18729 + C18728 + C18727) * C50670) *
                         C50809) *
                        C50771 * C50641 -
                    (((C17811 + C17810 + C17809) * C50670 +
                      (C17808 + C17807 + C17806) * C121) *
                         C50809 +
                     ((C16990 * C390 + C16985 * C398 + C16989 * C389 +
                       C16984 * C397 + C16988 * C393 + C16983 * C401) *
                          C50670 +
                      (C16990 * C380 + C16985 * C386 + C16989 * C379 +
                       C16984 * C385 + C16988 * C383 + C16983 * C394) *
                          C121) *
                         C16986) *
                        C50771 * C1277) *
                       C50936 +
                   ((((C16988 * C851 + C16983 * C856 + C16989 * C852 +
                       C16984 * C857 + C16990 * C853 + C16985 * C858) *
                          C121 +
                      (C16988 * C860 + C16983 * C866 + C16989 * C861 +
                       C16984 * C867 + C16990 * C862 + C16985 * C868) *
                          C50670) *
                         C16986 +
                     ((C18124 + C18123 + C18122) * C121 +
                      (C18127 + C18126 + C18125) * C50670) *
                         C50809) *
                        C50771 * C1277 -
                    (((C16990 * C977 + C16985 * C981 + C16989 * C978 +
                       C16984 * C982 + C16988 * C979 + C16983 * C983) *
                          C50670 +
                      (C16990 * C969 + C16985 * C973 + C16989 * C970 +
                       C16984 * C974 + C16988 * C971 + C16983 * C975) *
                          C121) *
                         C50809 +
                     ((C16990 * C863 + C16985 * C869 + C16989 * C862 +
                       C16984 * C868 + C16988 * C861 + C16983 * C867) *
                          C50670 +
                      (C16990 * C854 + C16985 * C859 + C16989 * C853 +
                       C16984 * C858 + C16988 * C852 + C16983 * C857) *
                          C121) *
                         C16986) *
                        C50771 * C50641) *
                       C1746)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C19772 * C122 + C50611 * C129) * C121 +
                      (C19772 * C133 + C50611 * C143) * C50670) *
                         C19768 +
                     (C19908 * C121 + C19909 * C50670) * C19769 +
                     (C19910 * C121 + C19911 * C50670) * C19770 +
                     (C19912 * C121 + C19913 * C50670) * C19771) *
                        C50771 * C1277 -
                    ((C19919 * C50670 + C19918 * C121) * C19771 +
                     (C19917 * C50670 + C19916 * C121) * C19770 +
                     (C19915 * C50670 + C19914 * C121) * C19769 +
                     ((C19772 * C134 + C50611 * C144) * C50670 +
                      (C19772 * C123 + C50611 * C130) * C121) *
                         C19768) *
                        C50771 * C50641) *
                       C50947 +
                   ((((C19772 * C379 + C50611 * C385) * C121 +
                      (C19772 * C389 + C50611 * C397) * C50670) *
                         C19768 +
                     (C20962 * C121 + C20963 * C50670) * C19769 +
                     (C20964 * C121 + C20965 * C50670) * C19770 +
                     (C20966 * C121 + C20967 * C50670) * C19771) *
                        C50771 * C50641 -
                    ((C20333 * C50670 + C20332 * C121) * C19771 +
                     (C20331 * C50670 + C20330 * C121) * C19770 +
                     (C20329 * C50670 + C20328 * C121) * C19769 +
                     ((C19772 * C393 + C50611 * C401) * C50670 +
                      (C19772 * C383 + C50611 * C394) * C121) *
                         C19768) *
                        C50771 * C1277) *
                       C50936 +
                   ((((C19772 * C851 + C50611 * C856) * C121 +
                      (C19772 * C860 + C50611 * C866) * C50670) *
                         C19768 +
                     (C20548 * C121 + C20549 * C50670) * C19769 +
                     (C20550 * C121 + C20551 * C50670) * C19770 +
                     (C20552 * C121 + C20553 * C50670) * C19771) *
                        C50771 * C1277 -
                    (((C19772 * C3356 + C50611 * C3358) * C50670 +
                      (C19772 * C3352 + C50611 * C3354) * C121) *
                         C19771 +
                     ((C19772 * C3200 + C50611 * C3204) * C50670 +
                      (C19772 * C3195 + C50611 * C3198) * C121) *
                         C19770 +
                     ((C19772 * C979 + C50611 * C983) * C50670 +
                      (C19772 * C971 + C50611 * C975) * C121) *
                         C19769 +
                     ((C19772 * C861 + C50611 * C867) * C50670 +
                      (C19772 * C852 + C50611 * C857) * C121) *
                         C19768) *
                        C50771 * C50641) *
                       C1746)) /
                     (p * q * std::sqrt(p + q));
    d2ee[147] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                      C16984 * C130 + C16990 * C124 + C16985 * C131) *
                         C121 +
                     (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                      C16984 * C144 + C16990 * C135 + C16985 * C145) *
                         C50670) *
                        C16986 +
                    ((C16988 * C258 + C16983 * C264 + C16989 * C257 +
                      C16984 * C263 + C16990 * C256 + C16985 * C262) *
                         C121 +
                     (C16988 * C268 + C16983 * C276 + C16989 * C267 +
                      C16984 * C275 + C16990 * C266 + C16985 * C274) *
                         C50670) *
                        C50809) *
                       C50771 * C112 -
                   (((C16990 * C265 + C16985 * C273 + C16989 * C266 +
                      C16984 * C274 + C16988 * C267 + C16983 * C275) *
                         C50670 +
                     (C16990 * C255 + C16985 * C261 + C16989 * C256 +
                      C16984 * C262 + C16988 * C257 + C16983 * C263) *
                         C121) *
                        C50809 +
                    ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                      C16984 * C145 + C16988 * C134 + C16983 * C144) *
                         C50670 +
                     (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                      C16984 * C131 + C16988 * C123 + C16983 * C130) *
                         C121) *
                        C16986) *
                       C50771 * C113 +
                   (((C16988 * C124 + C16983 * C131 + C16989 * C125 +
                      C16984 * C132 + C16990 * C126 + C16985 * C138) *
                         C121 +
                     (C16988 * C135 + C16983 * C145 + C16989 * C136 +
                      C16984 * C146 + C16990 * C137 + C16985 * C147) *
                         C50670) *
                        C16986 +
                    ((C16988 * C256 + C16983 * C262 + C16989 * C255 +
                      C16984 * C261 + C16990 * C259 + C16985 * C269) *
                         C121 +
                     (C16988 * C266 + C16983 * C274 + C16989 * C265 +
                      C16984 * C273 + C16990 * C270 + C16985 * C277) *
                         C50670) *
                        C50809) *
                       C50771 * C114 -
                   (((C16990 * C272 + C16985 * C278 + C16989 * C270 +
                      C16984 * C277 + C16988 * C265 + C16983 * C273) *
                         C50670 +
                     (C16990 * C260 + C16985 * C271 + C16989 * C259 +
                      C16984 * C269 + C16988 * C255 + C16983 * C261) *
                         C121) *
                        C50809 +
                    ((C16990 * C140 + C16985 * C148 + C16989 * C137 +
                      C16984 * C147 + C16988 * C136 + C16983 * C146) *
                         C50670 +
                     (C16990 * C127 + C16985 * C139 + C16989 * C126 +
                      C16984 * C138 + C16988 * C125 + C16983 * C132) *
                         C121) *
                        C16986) *
                       C50771 * C115) *
                  C50700) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                      C16984 * C130 + C16990 * C124 + C16985 * C131) *
                         C506 +
                     (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                      C16984 * C144 + C16990 * C135 + C16985 * C145) *
                         C501 -
                     (C17174 + C17175 + C17176) * C507 -
                     (C17177 + C17178 + C17179) * C502 +
                     (C17508 + C17509 + C17510) * C508 +
                     (C17511 + C17512 + C17513) * C503) *
                        C16986 +
                    ((C17176 + C17175 + C17174) * C506 +
                     (C17179 + C17178 + C17177) * C501 -
                     (C17510 + C17509 + C17508) * C507 -
                     (C17513 + C17512 + C17511) * C502 +
                     (C16988 * C607 + C16983 * C611 + C16989 * C606 +
                      C16984 * C610 + C16990 * C605 + C16985 * C609) *
                         C508 +
                     (C16988 * C615 + C16983 * C619 + C16989 * C614 +
                      C16984 * C618 + C16990 * C613 + C16985 * C617) *
                         C503) *
                        C50809) *
                       C50771 * C50892 +
                   (((C17180 + C17181 + C17182) * C507 -
                     ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                       C16984 * C145 + C16988 * C134 + C16983 * C144) *
                          C501 +
                      (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                       C16984 * C131 + C16988 * C123 + C16983 * C130) *
                          C506) +
                     (C17183 + C17184 + C17185) * C502 -
                     (C17514 + C17515 + C17516) * C508 -
                     (C17517 + C17518 + C17519) * C503) *
                        C16986 +
                    ((C17516 + C17515 + C17514) * C507 -
                     ((C17185 + C17184 + C17183) * C501 +
                      (C17182 + C17181 + C17180) * C506) +
                     (C17519 + C17518 + C17517) * C502 -
                     (C16990 * C604 + C16985 * C608 + C16989 * C605 +
                      C16984 * C609 + C16988 * C606 + C16983 * C610) *
                         C508 -
                     (C16990 * C612 + C16985 * C616 + C16989 * C613 +
                      C16984 * C617 + C16988 * C614 + C16983 * C618) *
                         C503) *
                        C50809) *
                       C50771 * C50641) *
                  C50700) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C19772 * C122 + C50611 * C129) * C121 +
                     (C19772 * C133 + C50611 * C143) * C50670) *
                        C19768 +
                    ((C19772 * C258 + C50611 * C264) * C121 +
                     (C19772 * C268 + C50611 * C276) * C50670) *
                        C19769 +
                    ((C19772 * C509 + C50611 * C514) * C121 +
                     (C19772 * C518 + C50611 * C524) * C50670) *
                        C19770 +
                    ((C19772 * C607 + C50611 * C611) * C121 +
                     (C19772 * C615 + C50611 * C619) * C50670) *
                        C19771) *
                       C50771 * C112 -
                   (((C19772 * C614 + C50611 * C618) * C50670 +
                     (C19772 * C606 + C50611 * C610) * C121) *
                        C19771 +
                    ((C19772 * C519 + C50611 * C525) * C50670 +
                     (C19772 * C510 + C50611 * C515) * C121) *
                        C19770 +
                    ((C19772 * C267 + C50611 * C275) * C50670 +
                     (C19772 * C257 + C50611 * C263) * C121) *
                        C19769 +
                    ((C19772 * C134 + C50611 * C144) * C50670 +
                     (C19772 * C123 + C50611 * C130) * C121) *
                        C19768) *
                       C50771 * C113 +
                   (((C19772 * C124 + C50611 * C131) * C121 +
                     (C19772 * C135 + C50611 * C145) * C50670) *
                        C19768 +
                    ((C19772 * C256 + C50611 * C262) * C121 +
                     (C19772 * C266 + C50611 * C274) * C50670) *
                        C19769 +
                    ((C19772 * C511 + C50611 * C516) * C121 +
                     (C19772 * C520 + C50611 * C526) * C50670) *
                        C19770 +
                    ((C19772 * C605 + C50611 * C609) * C121 +
                     (C19772 * C613 + C50611 * C617) * C50670) *
                        C19771) *
                       C50771 * C114 -
                   (((C19772 * C612 + C50611 * C616) * C50670 +
                     (C19772 * C604 + C50611 * C608) * C121) *
                        C19771 +
                    ((C19772 * C521 + C50611 * C527) * C50670 +
                     (C19772 * C512 + C50611 * C517) * C121) *
                        C19770 +
                    ((C19772 * C265 + C50611 * C273) * C50670 +
                     (C19772 * C255 + C50611 * C261) * C121) *
                        C19769 +
                    ((C19772 * C136 + C50611 * C146) * C50670 +
                     (C19772 * C125 + C50611 * C132) * C121) *
                        C19768) *
                       C50771 * C115) *
                  C50700) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C19772 * C122 + C50611 * C129) * C506 +
                     (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
                     C19909 * C502 + C19910 * C508 + C19911 * C503) *
                        C19768 +
                    (C19908 * C506 + C19909 * C501 - C19910 * C507 -
                     C19911 * C502 + C19912 * C508 + C19913 * C503) *
                        C19769 +
                    (C19910 * C506 + C19911 * C501 - C19912 * C507 -
                     C19913 * C502 + C20130 * C508 + C20131 * C503) *
                        C19770 +
                    (C19912 * C506 + C19913 * C501 - C20130 * C507 -
                     C20131 * C502 + (C19772 * C2827 + C50611 * C2829) * C508 +
                     (C19772 * C2831 + C50611 * C2833) * C503) *
                        C19771) *
                       C50771 * C50892 +
                   ((C19914 * C507 -
                     ((C19772 * C134 + C50611 * C144) * C501 +
                      (C19772 * C123 + C50611 * C130) * C506) +
                     C19915 * C502 - C19916 * C508 - C19917 * C503) *
                        C19768 +
                    (C19916 * C507 - (C19915 * C501 + C19914 * C506) +
                     C19917 * C502 - C19918 * C508 - C19919 * C503) *
                        C19769 +
                    (C19918 * C507 - (C19917 * C501 + C19916 * C506) +
                     C19919 * C502 - C20132 * C508 - C20133 * C503) *
                        C19770 +
                    (C20132 * C507 - (C19919 * C501 + C19918 * C506) +
                     C20133 * C502 - (C19772 * C2826 + C50611 * C2828) * C508 -
                     (C19772 * C2830 + C50611 * C2832) * C503) *
                        C19771) *
                       C50771 * C50641) *
                  C50700) /
                     (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C253 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C50899 -
            (C17174 + C17175 + C17176) * C254 -
            (C17177 + C17178 + C17179) * C50686) *
               C16986 +
           ((C17176 + C17175 + C17174) * C253 +
            (C17179 + C17178 + C17177) * C50899 -
            (C16990 * C511 + C16985 * C516 + C16989 * C510 + C16984 * C515 +
             C16988 * C509 + C16983 * C514) *
                C254 -
            (C16990 * C520 + C16985 * C526 + C16989 * C519 + C16984 * C525 +
             C16988 * C518 + C16983 * C524) *
                C50686) *
               C50809) *
              C50771 * C250 +
          (((C17180 + C17181 + C17182) * C254 -
            ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
              C16988 * C134 + C16983 * C144) *
                 C50899 +
             (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
              C16988 * C123 + C16983 * C130) *
                 C253) +
            (C17183 + C17184 + C17185) * C50686) *
               C16986 +
           ((C16988 * C510 + C16983 * C515 + C16989 * C511 + C16984 * C516 +
             C16990 * C512 + C16985 * C517) *
                C254 -
            ((C17185 + C17184 + C17183) * C50899 +
             (C17182 + C17181 + C17180) * C253) +
            (C16988 * C519 + C16983 * C525 + C16989 * C520 + C16984 * C526 +
             C16990 * C521 + C16985 * C527) *
                C50686) *
               C50809) *
              C50771 * C251 +
          (((C16988 * C124 + C16983 * C131 + C16989 * C125 + C16984 * C132 +
             C16990 * C126 + C16985 * C138) *
                C253 +
            (C16988 * C135 + C16983 * C145 + C16989 * C136 + C16984 * C146 +
             C16990 * C137 + C16985 * C147) *
                C50899 -
            (C17186 + C17187 + C17188) * C254 -
            (C17189 + C17190 + C17191) * C50686) *
               C16986 +
           ((C17188 + C17187 + C17186) * C253 +
            (C17191 + C17190 + C17189) * C50899 -
            (C16990 * C513 + C16985 * C522 + C16989 * C512 + C16984 * C517 +
             C16988 * C511 + C16983 * C516) *
                C254 -
            (C16990 * C523 + C16985 * C528 + C16989 * C521 + C16984 * C527 +
             C16988 * C520 + C16983 * C526) *
                C50686) *
               C50809) *
              C50771 * C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
            C16990 * C124 + C16985 * C131) *
               C600 +
           (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
            C16990 * C135 + C16985 * C145) *
               C595 -
           (C17174 + C17175 + C17176) * C601 -
           (C17177 + C17178 + C17179) * C596 +
           (C17508 + C17509 + C17510) * C602 +
           (C17511 + C17512 + C17513) * C597 -
           (C17630 + C17631 + C17632) * C603 -
           (C17633 + C17634 + C17635) * C598) *
              C16986 +
          ((C17176 + C17175 + C17174) * C600 +
           (C17179 + C17178 + C17177) * C595 -
           (C17510 + C17509 + C17508) * C601 -
           (C17513 + C17512 + C17511) * C596 +
           (C17632 + C17631 + C17630) * C602 +
           (C17635 + C17634 + C17633) * C597 -
           (C16990 * C2690 + C16985 * C2695 + C16989 * C2689 + C16984 * C2692 +
            C16988 * C2688 + C16983 * C2691) *
               C603 -
           (C16990 * C2696 + C16985 * C2699 + C16989 * C2694 + C16984 * C2698 +
            C16988 * C2693 + C16983 * C2697) *
               C598) *
              C50809) *
         C50771 * C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C253 +
            (C19772 * C133 + C50611 * C143) * C50899 - C19908 * C254 -
            C19909 * C50686) *
               C19768 +
           (C19908 * C253 + C19909 * C50899 - C19910 * C254 - C19911 * C50686) *
               C19769 +
           (C19910 * C253 + C19911 * C50899 - C19912 * C254 - C19913 * C50686) *
               C19770 +
           (C19912 * C253 + C19913 * C50899 -
            (C19772 * C2688 + C50611 * C2691) * C254 -
            (C19772 * C2693 + C50611 * C2697) * C50686) *
               C19771) *
              C50771 * C250 +
          ((C19914 * C254 -
            ((C19772 * C134 + C50611 * C144) * C50899 +
             (C19772 * C123 + C50611 * C130) * C253) +
            C19915 * C50686) *
               C19768 +
           (C19916 * C254 - (C19915 * C50899 + C19914 * C253) +
            C19917 * C50686) *
               C19769 +
           (C19918 * C254 - (C19917 * C50899 + C19916 * C253) +
            C19919 * C50686) *
               C19770 +
           ((C19772 * C2689 + C50611 * C2692) * C254 -
            (C19919 * C50899 + C19918 * C253) +
            (C19772 * C2694 + C50611 * C2698) * C50686) *
               C19771) *
              C50771 * C251 +
          (((C19772 * C124 + C50611 * C131) * C253 +
            (C19772 * C135 + C50611 * C145) * C50899 - C19920 * C254 -
            C19921 * C50686) *
               C19768 +
           (C19920 * C253 + C19921 * C50899 - C19922 * C254 - C19923 * C50686) *
               C19769 +
           (C19922 * C253 + C19923 * C50899 - C19924 * C254 - C19925 * C50686) *
               C19770 +
           (C19924 * C253 + C19925 * C50899 -
            (C19772 * C2690 + C50611 * C2695) * C254 -
            (C19772 * C2696 + C50611 * C2699) * C50686) *
               C19771) *
              C50771 * C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C19772 * C122 + C50611 * C129) * C600 +
           (C19772 * C133 + C50611 * C143) * C595 - C19908 * C601 -
           C19909 * C596 + C19910 * C602 + C19911 * C597 - C19912 * C603 -
           C19913 * C598) *
              C19768 +
          (C19908 * C600 + C19909 * C595 - C19910 * C601 - C19911 * C596 +
           C19912 * C602 + C19913 * C597 - C20130 * C603 - C20131 * C598) *
              C19769 +
          (C19910 * C600 + C19911 * C595 - C19912 * C601 - C19913 * C596 +
           C20130 * C602 + C20131 * C597 - C20208 * C603 - C20209 * C598) *
              C19770 +
          (C19912 * C600 + C19913 * C595 - C20130 * C601 - C20131 * C596 +
           C20208 * C602 + C20209 * C597 -
           (C19772 * C20199 + C50611 * C20200) * C603 -
           (C19772 * C20201 + C50611 * C20202) * C598) *
              C19771) *
         C50771 * C50636 * C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
              C16990 * C124 + C16985 * C131) *
                 C121 +
             (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
              C16990 * C135 + C16985 * C145) *
                 C50670) *
                C16986 +
            ((C17176 + C17175 + C17174) * C121 +
             (C17179 + C17178 + C17177) * C50670) *
                C50809) *
               C50771 * C250 -
           (((C17185 + C17184 + C17183) * C50670 +
             (C17182 + C17181 + C17180) * C121) *
                C50809 +
            ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
              C16988 * C134 + C16983 * C144) *
                 C50670 +
             (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
              C16988 * C123 + C16983 * C130) *
                 C121) *
                C16986) *
               C50771 * C251 +
           (((C16988 * C124 + C16983 * C131 + C16989 * C125 + C16984 * C132 +
              C16990 * C126 + C16985 * C138) *
                 C121 +
             (C16988 * C135 + C16983 * C145 + C16989 * C136 + C16984 * C146 +
              C16990 * C137 + C16985 * C147) *
                 C50670) *
                C16986 +
            ((C17188 + C17187 + C17186) * C121 +
             (C17191 + C17190 + C17189) * C50670) *
                C50809) *
               C50771 * C252) *
              C50901 +
          ((((C16988 * C379 + C16983 * C385 + C16989 * C380 + C16984 * C386 +
              C16990 * C381 + C16985 * C387) *
                 C121 +
             (C16988 * C389 + C16983 * C397 + C16989 * C390 + C16984 * C398 +
              C16990 * C391 + C16985 * C399) *
                 C50670) *
                C16986 +
            ((C16988 * C719 + C16983 * C727 + C16989 * C720 + C16984 * C728 +
              C16990 * C721 + C16985 * C729) *
                 C121 +
             (C16988 * C731 + C16983 * C743 + C16989 * C732 + C16984 * C744 +
              C16990 * C733 + C16985 * C745) *
                 C50670) *
                C50809) *
               C50771 * C251 -
           (((C16990 * C732 + C16985 * C744 + C16989 * C731 + C16984 * C743 +
              C16988 * C730 + C16983 * C742) *
                 C50670 +
             (C16990 * C720 + C16985 * C728 + C16989 * C719 + C16984 * C727 +
              C16988 * C718 + C16983 * C726) *
                 C121) *
                C50809 +
            ((C16990 * C390 + C16985 * C398 + C16989 * C389 + C16984 * C397 +
              C16988 * C393 + C16983 * C401) *
                 C50670 +
             (C16990 * C380 + C16985 * C386 + C16989 * C379 + C16984 * C385 +
              C16988 * C383 + C16983 * C394) *
                 C121) *
                C16986) *
               C50771 * C250 -
           (((C16990 * C1414 + C16985 * C1415 + C16989 * C733 + C16984 * C745 +
              C16988 * C732 + C16983 * C744) *
                 C50670 +
             (C16990 * C1412 + C16985 * C1413 + C16989 * C721 + C16984 * C729 +
              C16988 * C720 + C16983 * C728) *
                 C121) *
                C50809 +
            ((C16990 * C392 + C16985 * C400 + C16989 * C391 + C16984 * C399 +
              C16988 * C390 + C16983 * C398) *
                 C50670 +
             (C16990 * C382 + C16985 * C388 + C16989 * C381 + C16984 * C387 +
              C16988 * C380 + C16983 * C386) *
                 C121) *
                C16986) *
               C50771 * C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C506 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C501 -
            (C17174 + C17175 + C17176) * C507 -
            (C17177 + C17178 + C17179) * C502 +
            (C17508 + C17509 + C17510) * C508 +
            (C17511 + C17512 + C17513) * C503) *
               C16986 +
           ((C17176 + C17175 + C17174) * C506 +
            (C17179 + C17178 + C17177) * C501 -
            (C17510 + C17509 + C17508) * C507 -
            (C17513 + C17512 + C17511) * C502 +
            (C17632 + C17631 + C17630) * C508 +
            (C17635 + C17634 + C17633) * C503) *
               C50809) *
              C50771 * C50636 * C50901 +
          (((C17806 + C17807 + C17808) * C507 -
            ((C16990 * C390 + C16985 * C398 + C16989 * C389 + C16984 * C397 +
              C16988 * C393 + C16983 * C401) *
                 C501 +
             (C16990 * C380 + C16985 * C386 + C16989 * C379 + C16984 * C385 +
              C16988 * C383 + C16983 * C394) *
                 C506) +
            (C17809 + C17810 + C17811) * C502 -
            (C17812 + C17813 + C17814) * C508 -
            (C17815 + C17816 + C17817) * C503) *
               C16986 +
           ((C17814 + C17813 + C17812) * C507 -
            ((C17811 + C17810 + C17809) * C501 +
             (C17808 + C17807 + C17806) * C506) +
            (C17817 + C17816 + C17815) * C502 -
            (C16990 * C3984 + C16985 * C3985 + C16989 * C2994 + C16984 * C2998 +
             C16988 * C2995 + C16983 * C2999) *
                C508 -
            (C16990 * C3986 + C16985 * C3987 + C16989 * C3000 + C16984 * C3006 +
             C16988 * C3001 + C16983 * C3007) *
                C503) *
               C50809) *
              C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C121 +
             (C19772 * C133 + C50611 * C143) * C50670) *
                C19768 +
            (C19908 * C121 + C19909 * C50670) * C19769 +
            (C19910 * C121 + C19911 * C50670) * C19770 +
            (C19912 * C121 + C19913 * C50670) * C19771) *
               C50771 * C250 -
           ((C19919 * C50670 + C19918 * C121) * C19771 +
            (C19917 * C50670 + C19916 * C121) * C19770 +
            (C19915 * C50670 + C19914 * C121) * C19769 +
            ((C19772 * C134 + C50611 * C144) * C50670 +
             (C19772 * C123 + C50611 * C130) * C121) *
                C19768) *
               C50771 * C251 +
           (((C19772 * C124 + C50611 * C131) * C121 +
             (C19772 * C135 + C50611 * C145) * C50670) *
                C19768 +
            (C19920 * C121 + C19921 * C50670) * C19769 +
            (C19922 * C121 + C19923 * C50670) * C19770 +
            (C19924 * C121 + C19925 * C50670) * C19771) *
               C50771 * C252) *
              C50901 +
          ((((C19772 * C379 + C50611 * C385) * C121 +
             (C19772 * C389 + C50611 * C397) * C50670) *
                C19768 +
            ((C19772 * C719 + C50611 * C727) * C121 +
             (C19772 * C731 + C50611 * C743) * C50670) *
                C19769 +
            ((C19772 * C724 + C50611 * C736) * C121 +
             (C19772 * C740 + C50611 * C748) * C50670) *
                C19770 +
            ((C19772 * C2994 + C50611 * C2998) * C121 +
             (C19772 * C3000 + C50611 * C3006) * C50670) *
                C19771) *
               C50771 * C251 -
           (((C19772 * C3001 + C50611 * C3007) * C50670 +
             (C19772 * C2995 + C50611 * C2999) * C121) *
                C19771 +
            ((C19772 * C741 + C50611 * C749) * C50670 +
             (C19772 * C725 + C50611 * C737) * C121) *
                C19770 +
            ((C19772 * C730 + C50611 * C742) * C50670 +
             (C19772 * C718 + C50611 * C726) * C121) *
                C19769 +
            ((C19772 * C393 + C50611 * C401) * C50670 +
             (C19772 * C383 + C50611 * C394) * C121) *
                C19768) *
               C50771 * C250 -
           (((C19772 * C3986 + C50611 * C3987) * C50670 +
             (C19772 * C3984 + C50611 * C3985) * C121) *
                C19771 +
            ((C19772 * C739 + C50611 * C747) * C50670 +
             (C19772 * C723 + C50611 * C735) * C121) *
                C19770 +
            ((C19772 * C732 + C50611 * C744) * C50670 +
             (C19772 * C720 + C50611 * C728) * C121) *
                C19769 +
            ((C19772 * C390 + C50611 * C398) * C50670 +
             (C19772 * C380 + C50611 * C386) * C121) *
                C19768) *
               C50771 * C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C506 +
            (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
            C19909 * C502 + C19910 * C508 + C19911 * C503) *
               C19768 +
           (C19908 * C506 + C19909 * C501 - C19910 * C507 - C19911 * C502 +
            C19912 * C508 + C19913 * C503) *
               C19769 +
           (C19910 * C506 + C19911 * C501 - C19912 * C507 - C19913 * C502 +
            C20130 * C508 + C20131 * C503) *
               C19770 +
           (C19912 * C506 + C19913 * C501 - C20130 * C507 - C20131 * C502 +
            C20208 * C508 + C20209 * C503) *
               C19771) *
              C50771 * C50636 * C50901 +
          ((C20328 * C507 -
            ((C19772 * C393 + C50611 * C401) * C501 +
             (C19772 * C383 + C50611 * C394) * C506) +
            C20329 * C502 - C20330 * C508 - C20331 * C503) *
               C19768 +
           (C20330 * C507 - (C20329 * C501 + C20328 * C506) + C20331 * C502 -
            C20332 * C508 - C20333 * C503) *
               C19769 +
           (C20332 * C507 - (C20331 * C501 + C20330 * C506) + C20333 * C502 -
            C20334 * C508 - C20335 * C503) *
               C19770 +
           (C20334 * C507 - (C20333 * C501 + C20332 * C506) + C20335 * C502 -
            (C19772 * C20307 + C50611 * C20308) * C508 -
            (C19772 * C20309 + C50611 * C20310) * C503) *
               C19771) *
              C50771 * C50636 * C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C1174 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C1169 -
             (C24854 + C24855) * C1175 - (C24856 + C24857) * C50686) *
                C50915 +
            ((C24855 + C24854) * C1174 + (C24857 + C24856) * C1169 -
             (C24858 + C24859) * C1175 - (C24860 + C24861) * C50686) *
                C50809) *
               C33783 +
           (((C27944 + C27945) * C1174 + (C27946 + C27947) * C1169 -
             C28474 * C1175 - C28475 * C50686) *
                C50915 +
            (C28478 * C1174 + C28479 * C1169 - C25492 * C1175 -
             C25493 * C50686) *
                C50809) *
               C50835) *
              C50945 +
          ((((C24862 + C24863) * C1175 -
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C1169 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C1174) +
             (C24864 + C24865) * C50686) *
                C50915 +
            ((C24866 + C24867) * C1175 -
             ((C24865 + C24864) * C1169 + (C24863 + C24862) * C1174) +
             (C24868 + C24869) * C50686) *
                C50809) *
               C33783 +
           ((C29708 * C1175 -
             ((C27948 + C27949) * C1169 + (C27950 + C27951) * C1174) +
             C29709 * C50686) *
                C50915 +
            ((C26415 + C26414) * C1175 - (C29710 * C1169 + C29711 * C1174) +
             (C26417 + C26416) * C50686) *
                C50809) *
               C50835) *
              C50930 +
          ((((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                 C1174 +
             (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                 C1169 -
             (C24870 + C24871) * C1175 - (C24872 + C24873) * C50686) *
                C50915 +
            ((C24871 + C24870) * C1174 + (C24873 + C24872) * C1169 -
             (C24874 + C24875) * C1175 - (C24876 + C24877) * C50686) *
                C50809) *
               C33783 +
           (((C27952 + C27953) * C1174 + (C27954 + C27955) * C1169 -
             (C27722 + C27723) * C1175 - (C27724 + C27725) * C50686) *
                C50915 +
            ((C27723 + C27722) * C1174 + (C27725 + C27724) * C1169 -
             (C49761 * C722 + C50616 * C734 + C49768 * C723 + C50887 * C735) *
                 C1175 -
             (C49761 * C738 + C50616 * C746 + C49768 * C739 + C50887 * C747) *
                 C50686) *
                C50809) *
               C50835) *
              C1173) *
         C50700) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C1279 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50946 -
             (C24854 + C24855) * C1280 - (C24856 + C24857) * C50933 +
             C25170 * C1281 + C25171 * C1276) *
                C50915 +
            ((C24855 + C24854) * C1279 + (C24857 + C24856) * C50946 -
             (C24858 + C24859) * C1280 - (C24860 + C24861) * C50933 +
             (C25190 + C25191) * C1281 + (C25192 + C25193) * C1276) *
                C50809) *
               C33783 +
           (((C27944 + C27945) * C1279 + (C27946 + C27947) * C50946 -
             C28474 * C1280 - C28475 * C50933 + C28476 * C1281 +
             C28477 * C1276) *
                C50915 +
            (C28478 * C1279 + C28479 * C50946 - C25492 * C1280 -
             C25493 * C50933 + (C25489 + C25488) * C1281 +
             (C25491 + C25490) * C1276) *
                C50809) *
               C50835) *
              C1277 +
          ((((C24862 + C24863) * C1280 -
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C50946 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C1279) +
             (C24864 + C24865) * C50933 - C25180 * C1281 - C25181 * C1276) *
                C50915 +
            ((C24866 + C24867) * C1280 -
             ((C24865 + C24864) * C50946 + (C24863 + C24862) * C1279) +
             (C24868 + C24869) * C50933 - (C25194 + C25195) * C1281 -
             (C25196 + C25197) * C1276) *
                C50809) *
               C33783 +
           ((C29708 * C1280 -
             ((C27948 + C27949) * C50946 + (C27950 + C27951) * C1279) +
             C29709 * C50933 - (C26414 + C26415) * C1281 -
             (C26416 + C26417) * C1276) *
                C50915 +
            ((C26415 + C26414) * C1280 - (C29710 * C50946 + C29711 * C1279) +
             (C26417 + C26416) * C50933 -
             (C49761 * C3984 + C50616 * C3985 + C49768 * C2994 +
              C50887 * C2998) *
                 C1281 -
             (C49761 * C3986 + C50616 * C3987 + C49768 * C3000 +
              C50887 * C3006) *
                 C1276) *
                C50809) *
               C50835) *
              C50641) *
         C50700) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                  C1174 +
              (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                  C1169 -
              (C24854 + C24855) * C1175 - (C24856 + C24857) * C50686) *
                 C50915 +
             ((C24855 + C24854) * C1174 + (C24857 + C24856) * C1169 -
              (C24858 + C24859) * C1175 - (C24860 + C24861) * C50686) *
                 C50809) *
                C33783 +
            (((C27944 + C27945) * C1174 + (C27946 + C27947) * C1169 -
              C28474 * C1175 - C28475 * C50686) *
                 C50915 +
             (C28478 * C1174 + C28479 * C1169 - C25492 * C1175 -
              C25493 * C50686) *
                 C50809) *
                C50835) *
               C1277 +
           ((((C24862 + C24863) * C1175 -
              ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                   C1169 +
               (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                   C1174) +
              (C24864 + C24865) * C50686) *
                 C50915 +
             ((C24866 + C24867) * C1175 -
              ((C24865 + C24864) * C1169 + (C24863 + C24862) * C1174) +
              (C24868 + C24869) * C50686) *
                 C50809) *
                C33783 +
            ((C29708 * C1175 -
              ((C27948 + C27949) * C1169 + (C27950 + C27951) * C1174) +
              C29709 * C50686) *
                 C50915 +
             ((C26415 + C26414) * C1175 - (C29710 * C1169 + C29711 * C1174) +
              (C26417 + C26416) * C50686) *
                 C50809) *
                C50835) *
               C50641) *
              C50901 +
          ((((C28478 * C1175 -
              ((C27947 + C27946) * C1169 + (C27945 + C27944) * C1174) +
              C28479 * C50686) *
                 C50915 +
             (C28476 * C1175 - (C28475 * C1169 + C28474 * C1174) +
              C28477 * C50686) *
                 C50809) *
                C33783 +
            ((C28904 * C1175 -
              ((C28706 + C28707) * C1169 + (C28708 + C28709) * C1174) +
              C28905 * C50686) *
                 C50915 +
             ((C25807 + C25806) * C1175 - (C28906 * C1169 + C28907 * C1174) +
              (C25809 + C25808) * C50686) *
                 C50809) *
                C50835) *
               C1277 +
           ((((C27951 + C27950) * C1174 + (C27949 + C27948) * C1169 -
              C29711 * C1175 - C29710 * C50686) *
                 C50915 +
             (C29708 * C1174 + C29709 * C1169 - (C26414 + C26415) * C1175 -
              (C26416 + C26417) * C50686) *
                 C50809) *
                C33783 +
            (((C28698 + C28699) * C1174 + (C28700 + C28701) * C1169 -
              (C28703 + C28702) * C1175 - (C28705 + C28704) * C50686) *
                 C50915 +
             ((C28702 + C28703) * C1174 + (C28704 + C28705) * C1169 -
              (C49761 * C3196 + C50616 * C3202 + C49768 * C3195 +
               C50887 * C3198) *
                  C1175 -
              (C49761 * C3201 + C50616 * C3205 + C49768 * C3200 +
               C50887 * C3204) *
                  C50686) *
                 C50809) *
                C50835) *
               C50641) *
              C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                  C1174 +
              (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                  C1169 -
              (C24854 + C24855) * C1175 - (C24856 + C24857) * C50686) *
                 C50915 +
             ((C24855 + C24854) * C1174 + (C24857 + C24856) * C1169 -
              (C24858 + C24859) * C1175 - (C24860 + C24861) * C50686) *
                 C50809) *
                C33783 +
            (((C27944 + C27945) * C1174 + (C27946 + C27947) * C1169 -
              C28474 * C1175 - C28475 * C50686) *
                 C50915 +
             (C28478 * C1174 + C28479 * C1169 - C25492 * C1175 -
              C25493 * C50686) *
                 C50809) *
                C50835) *
               C50892 +
           ((((C24862 + C24863) * C1175 -
              ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                   C1169 +
               (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                   C1174) +
              (C24864 + C24865) * C50686) *
                 C50915 +
             ((C24866 + C24867) * C1175 -
              ((C24865 + C24864) * C1169 + (C24863 + C24862) * C1174) +
              (C24868 + C24869) * C50686) *
                 C50809) *
                C33783 +
            ((C29708 * C1175 -
              ((C27948 + C27949) * C1169 + (C27950 + C27951) * C1174) +
              C29709 * C50686) *
                 C50915 +
             ((C26415 + C26414) * C1175 - (C29710 * C1169 + C29711 * C1174) +
              (C26417 + C26416) * C50686) *
                 C50809) *
                C50835) *
               C50641) *
              C1514 +
          ((((C28478 * C1175 -
              ((C27947 + C27946) * C1169 + (C27945 + C27944) * C1174) +
              C28479 * C50686) *
                 C50915 +
             (C28476 * C1175 - (C28475 * C1169 + C28474 * C1174) +
              C28477 * C50686) *
                 C50809) *
                C33783 +
            ((C28904 * C1175 -
              ((C28706 + C28707) * C1169 + (C28708 + C28709) * C1174) +
              C28905 * C50686) *
                 C50915 +
             ((C25807 + C25806) * C1175 - (C28906 * C1169 + C28907 * C1174) +
              (C25809 + C25808) * C50686) *
                 C50809) *
                C50835) *
               C50892 +
           ((((C27951 + C27950) * C1174 + (C27949 + C27948) * C1169 -
              C29711 * C1175 - C29710 * C50686) *
                 C50915 +
             (C29708 * C1174 + C29709 * C1169 - (C26414 + C26415) * C1175 -
              (C26416 + C26417) * C50686) *
                 C50809) *
                C33783 +
            (((C28698 + C28699) * C1174 + (C28700 + C28701) * C1169 -
              (C28703 + C28702) * C1175 - (C28705 + C28704) * C50686) *
                 C50915 +
             ((C28702 + C28703) * C1174 + (C28704 + C28705) * C1169 -
              (C49761 * C3196 + C50616 * C3202 + C49768 * C3195 +
               C50887 * C3198) *
                  C1175 -
              (C49761 * C3201 + C50616 * C3205 + C49768 * C3200 +
               C50887 * C3204) *
                  C50686) *
                 C50809) *
                C50835) *
               C50641) *
              C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C1279 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50946 -
             (C24854 + C24855) * C1280 - (C24856 + C24857) * C50933 +
             C25170 * C1281 + C25171 * C1276) *
                C50915 +
            ((C24855 + C24854) * C1279 + (C24857 + C24856) * C50946 -
             (C24858 + C24859) * C1280 - (C24860 + C24861) * C50933 +
             (C25190 + C25191) * C1281 + (C25192 + C25193) * C1276) *
                C50809) *
               C33783 +
           (((C27944 + C27945) * C1279 + (C27946 + C27947) * C50946 -
             C28474 * C1280 - C28475 * C50933 + C28476 * C1281 +
             C28477 * C1276) *
                C50915 +
            (C28478 * C1279 + C28479 * C50946 - C25492 * C1280 -
             C25493 * C50933 + (C25489 + C25488) * C1281 +
             (C25491 + C25490) * C1276) *
                C50809) *
               C50835) *
              C50636 * C1514 +
          (((C28478 * C1280 -
             ((C27947 + C27946) * C50946 + (C27945 + C27944) * C1279) +
             C28479 * C50933 - C25492 * C1281 - C25493 * C1276) *
                C50915 +
            (C28476 * C1280 - (C28475 * C50946 + C28474 * C1279) +
             C28477 * C50933 - (C25488 + C25489) * C1281 -
             (C25490 + C25491) * C1276) *
                C50809) *
               C33783 +
           ((C28904 * C1280 -
             ((C28706 + C28707) * C50946 + (C28708 + C28709) * C1279) +
             C28905 * C50933 - (C25806 + C25807) * C1281 -
             (C25808 + C25809) * C1276) *
                C50915 +
            ((C25807 + C25806) * C1280 - (C28906 * C50946 + C28907 * C1279) +
             (C25809 + C25808) * C50933 -
             (C49761 * C3352 + C50616 * C3354 + C49768 * C3353 +
              C50887 * C3355) *
                 C1281 -
             (C49761 * C3356 + C50616 * C3358 + C49768 * C3357 +
              C50887 * C3359) *
                 C1276) *
                C50809) *
               C50835) *
              C50636 * C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C1174 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C1169 -
             (C24854 + C24855) * C1175 - (C24856 + C24857) * C50686) *
                C50915 +
            ((C24855 + C24854) * C1174 + (C24857 + C24856) * C1169 -
             (C24858 + C24859) * C1175 - (C24860 + C24861) * C50686) *
                C50809) *
               C33783 +
           (((C27944 + C27945) * C1174 + (C27946 + C27947) * C1169 -
             C28474 * C1175 - C28475 * C50686) *
                C50915 +
            (C28478 * C1174 + C28479 * C1169 - C25492 * C1175 -
             C25493 * C50686) *
                C50809) *
               C50835) *
              C50636 * C50947 +
          (((C28478 * C1175 -
             ((C27947 + C27946) * C1169 + (C27945 + C27944) * C1174) +
             C28479 * C50686) *
                C50915 +
            (C28476 * C1175 - (C28475 * C1169 + C28474 * C1174) +
             C28477 * C50686) *
                C50809) *
               C33783 +
           ((C28904 * C1175 -
             ((C28706 + C28707) * C1169 + (C28708 + C28709) * C1174) +
             C28905 * C50686) *
                C50915 +
            ((C25807 + C25806) * C1175 - (C28906 * C1169 + C28907 * C1174) +
             (C25809 + C25808) * C50686) *
                C50809) *
               C50835) *
              C50636 * C50936 +
          ((((C28709 + C28708) * C1174 + (C28707 + C28706) * C1169 -
             C28907 * C1175 - C28906 * C50686) *
                C50915 +
            (C28904 * C1174 + C28905 * C1169 - (C25806 + C25807) * C1175 -
             (C25808 + C25809) * C50686) *
                C50809) *
               C33783 +
           (((C29058 + C29059) * C1174 + (C29060 + C29061) * C1169 -
             (C28916 + C28917) * C1175 - (C28918 + C28919) * C50686) *
                C50915 +
            ((C28917 + C28916) * C1174 + (C28919 + C28918) * C1169 -
             (C49761 * C3482 + C50616 * C3488 + C49768 * C3483 +
              C50887 * C3489) *
                 C1175 -
             (C49761 * C3486 + C50616 * C3494 + C49768 * C3487 +
              C50887 * C3495) *
                 C50686) *
                C50809) *
               C50835) *
              C50636 * C1746)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C506 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C501 -
             (C24854 + C24855) * C507 - (C24856 + C24857) * C502 +
             C25170 * C508 + C25171 * C503) *
                C50915 +
            ((C24855 + C24854) * C506 + (C24857 + C24856) * C501 -
             (C24858 + C24859) * C507 - (C24860 + C24861) * C502 +
             (C25190 + C25191) * C508 + (C25192 + C25193) * C503) *
                C50809) *
               C33783 +
           (((C27944 + C27945) * C506 + (C27946 + C27947) * C501 -
             C28474 * C507 - C28475 * C502 + C28476 * C508 + C28477 * C503) *
                C50915 +
            (C28478 * C506 + C28479 * C501 - C25492 * C507 - C25493 * C502 +
             (C25489 + C25488) * C508 + (C25491 + C25490) * C503) *
                C50809) *
               C50835) *
              C50892 +
          ((((C24862 + C24863) * C507 -
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C501 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C506) +
             (C24864 + C24865) * C502 - C25180 * C508 - C25181 * C503) *
                C50915 +
            ((C24866 + C24867) * C507 -
             ((C24865 + C24864) * C501 + (C24863 + C24862) * C506) +
             (C24868 + C24869) * C502 - (C25194 + C25195) * C508 -
             (C25196 + C25197) * C503) *
                C50809) *
               C33783 +
           ((C29708 * C507 -
             ((C27948 + C27949) * C501 + (C27950 + C27951) * C506) +
             C29709 * C502 - (C26414 + C26415) * C508 -
             (C26416 + C26417) * C503) *
                C50915 +
            ((C26415 + C26414) * C507 - (C29710 * C501 + C29711 * C506) +
             (C26417 + C26416) * C502 -
             (C49761 * C3984 + C50616 * C3985 + C49768 * C2994 +
              C50887 * C2998) *
                 C508 -
             (C49761 * C3986 + C50616 * C3987 + C49768 * C3000 +
              C50887 * C3006) *
                 C503) *
                C50809) *
               C50835) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C121 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50670) *
                C50915 +
            ((C24855 + C24854) * C121 + (C24857 + C24856) * C50670) * C50809) *
               C33783 +
           (((C27944 + C27945) * C121 + (C27946 + C27947) * C50670) * C50915 +
            (C28478 * C121 + C28479 * C50670) * C50809) *
               C50835) *
              C112 -
          (((C29710 * C50670 + C29711 * C121) * C50809 +
            ((C27948 + C27949) * C50670 + (C27950 + C27951) * C121) * C50915) *
               C50835 +
           (((C24865 + C24864) * C50670 + (C24863 + C24862) * C121) * C50809 +
            ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                 C50670 +
             (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                 C121) *
                C50915) *
               C33783) *
              C113 +
          ((((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                 C121 +
             (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                 C50670) *
                C50915 +
            ((C24871 + C24870) * C121 + (C24873 + C24872) * C50670) * C50809) *
               C33783 +
           (((C27952 + C27953) * C121 + (C27954 + C27955) * C50670) * C50915 +
            ((C27723 + C27722) * C121 + (C27725 + C27724) * C50670) * C50809) *
               C50835) *
              C114 -
          ((((C49761 * C1414 + C50616 * C1415 + C49768 * C733 + C50887 * C745) *
                 C50670 +
             (C49761 * C1412 + C50616 * C1413 + C49768 * C721 + C50887 * C729) *
                 C121) *
                C50809 +
            ((C49761 * C392 + C50616 * C400 + C49768 * C391 + C50887 * C399) *
                 C50670 +
             (C49761 * C382 + C50616 * C388 + C49768 * C381 + C50887 * C387) *
                 C121) *
                C50915) *
               C50835 +
           (((C49761 * C270 + C50616 * C277 + C49768 * C265 + C50887 * C273) *
                 C50670 +
             (C49761 * C259 + C50616 * C269 + C49768 * C255 + C50887 * C261) *
                 C121) *
                C50809 +
            ((C49761 * C137 + C50616 * C147 + C49768 * C136 + C50887 * C146) *
                 C50670 +
             (C49761 * C126 + C50616 * C138 + C49768 * C125 + C50887 * C132) *
                 C121) *
                C50915) *
               C33783) *
              C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                  C121 +
              (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                  C50670) *
                 C50915 +
             ((C24855 + C24854) * C121 + (C24857 + C24856) * C50670) * C50809) *
                C33783 +
            (((C27944 + C27945) * C121 + (C27946 + C27947) * C50670) * C50915 +
             (C28478 * C121 + C28479 * C50670) * C50809) *
                C50835) *
               C50892 -
           (((C29710 * C50670 + C29711 * C121) * C50809 +
             ((C27948 + C27949) * C50670 + (C27950 + C27951) * C121) * C50915) *
                C50835 +
            (((C24865 + C24864) * C50670 + (C24863 + C24862) * C121) * C50809 +
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C50670 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C121) *
                 C50915) *
                C33783) *
               C50641) *
              C848 +
          (((((C27951 + C27950) * C121 + (C27949 + C27948) * C50670) * C50915 +
             (C29708 * C121 + C29709 * C50670) * C50809) *
                C33783 +
            (((C28698 + C28699) * C121 + (C28700 + C28701) * C50670) * C50915 +
             ((C28702 + C28703) * C121 + (C28704 + C28705) * C50670) * C50809) *
                C50835) *
               C50641 -
           (((C28906 * C50670 + C28907 * C121) * C50809 +
             ((C28706 + C28707) * C50670 + (C28708 + C28709) * C121) * C50915) *
                C50835 +
            ((C28475 * C50670 + C28474 * C121) * C50809 +
             ((C27947 + C27946) * C50670 + (C27945 + C27944) * C121) * C50915) *
                C33783) *
               C50892) *
              C849 +
          (((((C28709 + C28708) * C121 + (C28707 + C28706) * C50670) * C50915 +
             (C28904 * C121 + C28905 * C50670) * C50809) *
                C33783 +
            (((C29058 + C29059) * C121 + (C29060 + C29061) * C50670) * C50915 +
             ((C28917 + C28916) * C121 + (C28919 + C28918) * C50670) * C50809) *
                C50835) *
               C50892 -
           ((((C49761 * C6821 + C50616 * C6822 + C49768 * C3490 +
               C50887 * C3496) *
                  C50670 +
              (C49761 * C6819 + C50616 * C6820 + C49768 * C3484 +
               C50887 * C3492) *
                  C121) *
                 C50809 +
             ((C49761 * C1060 + C50616 * C1068 + C49768 * C1061 +
               C50887 * C1069) *
                  C50670 +
              (C49761 * C1056 + C50616 * C1064 + C49768 * C1057 +
               C50887 * C1065) *
                  C121) *
                 C50915) *
                C50835 +
            (((C28705 + C28704) * C50670 + (C28703 + C28702) * C121) * C50809 +
             ((C28701 + C28700) * C50670 + (C28699 + C28698) * C121) * C50915) *
                C33783) *
               C50641) *
              C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C600 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C595 -
            (C24854 + C24855) * C601 - (C24856 + C24857) * C596 +
            C25170 * C602 + C25171 * C597 - C25296 * C603 - C25297 * C598) *
               C50915 +
           ((C24855 + C24854) * C600 + (C24857 + C24856) * C595 -
            (C24858 + C24859) * C601 - (C24860 + C24861) * C596 +
            (C25190 + C25191) * C602 + (C25192 + C25193) * C597 -
            (C25306 + C25307) * C603 - (C25308 + C25309) * C598) *
               C50809) *
              C33783 +
          (((C27944 + C27945) * C600 + (C27946 + C27947) * C595 -
            C28474 * C601 - C28475 * C596 + C28476 * C602 + C28477 * C597 -
            (C25488 + C25489) * C603 - (C25490 + C25491) * C598) *
               C50915 +
           (C28478 * C600 + C28479 * C595 - C25492 * C601 - C25493 * C596 +
            (C25489 + C25488) * C602 + (C25491 + C25490) * C597 -
            (C49761 * C2996 + C50616 * C3002 + C49768 * C2997 +
             C50887 * C3003) *
                C603 -
            (C49761 * C3004 + C50616 * C3008 + C49768 * C3005 +
             C50887 * C3009) *
                C598) *
               C50809) *
              C50835) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C253 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50899 -
             (C24854 + C24855) * C254 - (C24856 + C24857) * C50686) *
                C50915 +
            ((C24855 + C24854) * C253 + (C24857 + C24856) * C50899 -
             (C24858 + C24859) * C254 - (C24860 + C24861) * C50686) *
                C50809) *
               C33783 +
           (((C27944 + C27945) * C253 + (C27946 + C27947) * C50899 -
             C28474 * C254 - C28475 * C50686) *
                C50915 +
            (C28478 * C253 + C28479 * C50899 - C25492 * C254 -
             C25493 * C50686) *
                C50809) *
               C50835) *
              C250 +
          ((((C24862 + C24863) * C254 -
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C50899 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C253) +
             (C24864 + C24865) * C50686) *
                C50915 +
            ((C24866 + C24867) * C254 -
             ((C24865 + C24864) * C50899 + (C24863 + C24862) * C253) +
             (C24868 + C24869) * C50686) *
                C50809) *
               C33783 +
           ((C29708 * C254 -
             ((C27948 + C27949) * C50899 + (C27950 + C27951) * C253) +
             C29709 * C50686) *
                C50915 +
            ((C26415 + C26414) * C254 - (C29710 * C50899 + C29711 * C253) +
             (C26417 + C26416) * C50686) *
                C50809) *
               C50835) *
              C251 +
          ((((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                 C253 +
             (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                 C50899 -
             (C24870 + C24871) * C254 - (C24872 + C24873) * C50686) *
                C50915 +
            ((C24871 + C24870) * C253 + (C24873 + C24872) * C50899 -
             (C24874 + C24875) * C254 - (C24876 + C24877) * C50686) *
                C50809) *
               C33783 +
           (((C27952 + C27953) * C253 + (C27954 + C27955) * C50899 -
             (C27722 + C27723) * C254 - (C27724 + C27725) * C50686) *
                C50915 +
            ((C27723 + C27722) * C253 + (C27725 + C27724) * C50899 -
             (C49761 * C722 + C50616 * C734 + C49768 * C723 + C50887 * C735) *
                 C254 -
             (C49761 * C738 + C50616 * C746 + C49768 * C739 + C50887 * C747) *
                 C50686) *
                C50809) *
               C50835) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C253 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50899 -
             (C24854 + C24855) * C254 - (C24856 + C24857) * C50686) *
                C50915 +
            ((C24855 + C24854) * C253 + (C24857 + C24856) * C50899 -
             (C24858 + C24859) * C254 - (C24860 + C24861) * C50686) *
                C50809) *
               C33783 +
           (((C27944 + C27945) * C253 + (C27946 + C27947) * C50899 -
             C28474 * C254 - C28475 * C50686) *
                C50915 +
            (C28478 * C253 + C28479 * C50899 - C25492 * C254 -
             C25493 * C50686) *
                C50809) *
               C50835) *
              C50636 * C848 +
          (((C28478 * C254 -
             ((C27947 + C27946) * C50899 + (C27945 + C27944) * C253) +
             C28479 * C50686) *
                C50915 +
            (C28476 * C254 - (C28475 * C50899 + C28474 * C253) +
             C28477 * C50686) *
                C50809) *
               C33783 +
           ((C28904 * C254 -
             ((C28706 + C28707) * C50899 + (C28708 + C28709) * C253) +
             C28905 * C50686) *
                C50915 +
            ((C25807 + C25806) * C254 - (C28906 * C50899 + C28907 * C253) +
             (C25809 + C25808) * C50686) *
                C50809) *
               C50835) *
              C50636 * C849 +
          ((((C28709 + C28708) * C253 + (C28707 + C28706) * C50899 -
             C28907 * C254 - C28906 * C50686) *
                C50915 +
            (C28904 * C253 + C28905 * C50899 - (C25806 + C25807) * C254 -
             (C25808 + C25809) * C50686) *
                C50809) *
               C33783 +
           (((C29058 + C29059) * C253 + (C29060 + C29061) * C50899 -
             (C28916 + C28917) * C254 - (C28918 + C28919) * C50686) *
                C50915 +
            ((C28917 + C28916) * C253 + (C28919 + C28918) * C50899 -
             (C49761 * C3482 + C50616 * C3488 + C49768 * C3483 +
              C50887 * C3489) *
                 C254 -
             (C49761 * C3486 + C50616 * C3494 + C49768 * C3487 +
              C50887 * C3495) *
                 C50686) *
                C50809) *
               C50835) *
              C50636 * C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C506 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C501 -
             (C24854 + C24855) * C507 - (C24856 + C24857) * C502 +
             C25170 * C508 + C25171 * C503) *
                C50915 +
            ((C24855 + C24854) * C506 + (C24857 + C24856) * C501 -
             (C24858 + C24859) * C507 - (C24860 + C24861) * C502 +
             (C25190 + C25191) * C508 + (C25192 + C25193) * C503) *
                C50809) *
               C33783 +
           (((C27944 + C27945) * C506 + (C27946 + C27947) * C501 -
             C28474 * C507 - C28475 * C502 + C28476 * C508 + C28477 * C503) *
                C50915 +
            (C28478 * C506 + C28479 * C501 - C25492 * C507 - C25493 * C502 +
             (C25489 + C25488) * C508 + (C25491 + C25490) * C503) *
                C50809) *
               C50835) *
              C50636 * C50901 +
          (((C28478 * C507 -
             ((C27947 + C27946) * C501 + (C27945 + C27944) * C506) +
             C28479 * C502 - C25492 * C508 - C25493 * C503) *
                C50915 +
            (C28476 * C507 - (C28475 * C501 + C28474 * C506) + C28477 * C502 -
             (C25488 + C25489) * C508 - (C25490 + C25491) * C503) *
                C50809) *
               C33783 +
           ((C28904 * C507 -
             ((C28706 + C28707) * C501 + (C28708 + C28709) * C506) +
             C28905 * C502 - (C25806 + C25807) * C508 -
             (C25808 + C25809) * C503) *
                C50915 +
            ((C25807 + C25806) * C507 - (C28906 * C501 + C28907 * C506) +
             (C25809 + C25808) * C502 -
             (C49761 * C3352 + C50616 * C3354 + C49768 * C3353 +
              C50887 * C3355) *
                 C508 -
             (C49761 * C3356 + C50616 * C3358 + C49768 * C3357 +
              C50887 * C3359) *
                 C503) *
                C50809) *
               C50835) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                  C121 +
              (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                  C50670) *
                 C50915 +
             ((C24855 + C24854) * C121 + (C24857 + C24856) * C50670) * C50809) *
                C33783 +
            (((C27944 + C27945) * C121 + (C27946 + C27947) * C50670) * C50915 +
             (C28478 * C121 + C28479 * C50670) * C50809) *
                C50835) *
               C250 -
           (((C29710 * C50670 + C29711 * C121) * C50809 +
             ((C27948 + C27949) * C50670 + (C27950 + C27951) * C121) * C50915) *
                C50835 +
            (((C24865 + C24864) * C50670 + (C24863 + C24862) * C121) * C50809 +
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C50670 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C121) *
                 C50915) *
                C33783) *
               C251 +
           ((((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                  C121 +
              (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                  C50670) *
                 C50915 +
             ((C24871 + C24870) * C121 + (C24873 + C24872) * C50670) * C50809) *
                C33783 +
            (((C27952 + C27953) * C121 + (C27954 + C27955) * C50670) * C50915 +
             ((C27723 + C27722) * C121 + (C27725 + C27724) * C50670) * C50809) *
                C50835) *
               C252) *
              C50901 +
          (((((C27951 + C27950) * C121 + (C27949 + C27948) * C50670) * C50915 +
             (C29708 * C121 + C29709 * C50670) * C50809) *
                C33783 +
            (((C28698 + C28699) * C121 + (C28700 + C28701) * C50670) * C50915 +
             ((C28702 + C28703) * C121 + (C28704 + C28705) * C50670) * C50809) *
                C50835) *
               C251 -
           (((C28906 * C50670 + C28907 * C121) * C50809 +
             ((C28706 + C28707) * C50670 + (C28708 + C28709) * C121) * C50915) *
                C50835 +
            ((C28475 * C50670 + C28474 * C121) * C50809 +
             ((C27947 + C27946) * C50670 + (C27945 + C27944) * C121) * C50915) *
                C33783) *
               C250 -
           ((((C49761 * C977 + C50616 * C981 + C49768 * C978 + C50887 * C982) *
                  C50670 +
              (C49761 * C969 + C50616 * C973 + C49768 * C970 + C50887 * C974) *
                  C121) *
                 C50809 +
             ((C49761 * C863 + C50616 * C869 + C49768 * C862 + C50887 * C868) *
                  C50670 +
              (C49761 * C854 + C50616 * C859 + C49768 * C853 + C50887 * C858) *
                  C121) *
                 C50915) *
                C50835 +
            (((C27724 + C27725) * C50670 + (C27722 + C27723) * C121) * C50809 +
             ((C27955 + C27954) * C50670 + (C27953 + C27952) * C121) * C50915) *
                C33783) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C121 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50670) *
                C50915 +
            ((C24855 + C24854) * C121 + (C24857 + C24856) * C50670) * C50809) *
               C33783 +
           (((C27944 + C27945) * C121 + (C27946 + C27947) * C50670) * C50915 +
            (C28478 * C121 + C28479 * C50670) * C50809) *
               C50835) *
              C50636 * C1051 -
          (((C28906 * C50670 + C28907 * C121) * C50809 +
            ((C28706 + C28707) * C50670 + (C28708 + C28709) * C121) * C50915) *
               C50835 +
           ((C28475 * C50670 + C28474 * C121) * C50809 +
            ((C27947 + C27946) * C50670 + (C27945 + C27944) * C121) * C50915) *
               C33783) *
              C50636 * C1052 +
          ((((C28709 + C28708) * C121 + (C28707 + C28706) * C50670) * C50915 +
            (C28904 * C121 + C28905 * C50670) * C50809) *
               C33783 +
           (((C29058 + C29059) * C121 + (C29060 + C29061) * C50670) * C50915 +
            ((C28917 + C28916) * C121 + (C28919 + C28918) * C50670) * C50809) *
               C50835) *
              C50636 * C1053 -
          ((((C49761 * C6183 + C50616 * C6185 + C49768 * C6184 +
              C50887 * C6186) *
                 C50670 +
             (C49761 * C6179 + C50616 * C6181 + C49768 * C6180 +
              C50887 * C6182) *
                 C121) *
                C50809 +
            ((C49761 * C5991 + C50616 * C5995 + C49768 * C5990 +
              C50887 * C5994) *
                 C50670 +
             (C49761 * C5986 + C50616 * C5989 + C49768 * C5985 +
              C50887 * C5988) *
                 C121) *
                C50915) *
               C50835 +
           (((C28918 + C28919) * C50670 + (C28916 + C28917) * C121) * C50809 +
            ((C29061 + C29060) * C50670 + (C29059 + C29058) * C121) * C50915) *
               C33783) *
              C50636 * C1054)) /
            (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                  C121 +
              (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                  C50670) *
                 C50915 +
             ((C24855 + C24854) * C121 + (C24857 + C24856) * C50670) * C50809) *
                C33783 +
            (((C27944 + C27945) * C121 + (C27946 + C27947) * C50670) * C50915 +
             (C28478 * C121 + C28479 * C50670) * C50809) *
                C50835) *
               C50945 -
           (((C29710 * C50670 + C29711 * C121) * C50809 +
             ((C27948 + C27949) * C50670 + (C27950 + C27951) * C121) * C50915) *
                C50835 +
            (((C24865 + C24864) * C50670 + (C24863 + C24862) * C121) * C50809 +
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C50670 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C121) *
                 C50915) *
                C33783) *
               C50930 +
           ((((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                  C121 +
              (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                  C50670) *
                 C50915 +
             ((C24871 + C24870) * C121 + (C24873 + C24872) * C50670) * C50809) *
                C33783 +
            (((C27952 + C27953) * C121 + (C27954 + C27955) * C50670) * C50915 +
             ((C27723 + C27722) * C121 + (C27725 + C27724) * C50670) * C50809) *
                C50835) *
               C1173) *
              C1514 +
          (((((C27951 + C27950) * C121 + (C27949 + C27948) * C50670) * C50915 +
             (C29708 * C121 + C29709 * C50670) * C50809) *
                C33783 +
            (((C28698 + C28699) * C121 + (C28700 + C28701) * C50670) * C50915 +
             ((C28702 + C28703) * C121 + (C28704 + C28705) * C50670) * C50809) *
                C50835) *
               C50930 -
           (((C28906 * C50670 + C28907 * C121) * C50809 +
             ((C28706 + C28707) * C50670 + (C28708 + C28709) * C121) * C50915) *
                C50835 +
            ((C28475 * C50670 + C28474 * C121) * C50809 +
             ((C27947 + C27946) * C50670 + (C27945 + C27944) * C121) * C50915) *
                C33783) *
               C50945 -
           ((((C49761 * C977 + C50616 * C981 + C49768 * C978 + C50887 * C982) *
                  C50670 +
              (C49761 * C969 + C50616 * C973 + C49768 * C970 + C50887 * C974) *
                  C121) *
                 C50809 +
             ((C49761 * C863 + C50616 * C869 + C49768 * C862 + C50887 * C868) *
                  C50670 +
              (C49761 * C854 + C50616 * C859 + C49768 * C853 + C50887 * C858) *
                  C121) *
                 C50915) *
                C50835 +
            (((C27724 + C27725) * C50670 + (C27722 + C27723) * C121) * C50809 +
             ((C27955 + C27954) * C50670 + (C27953 + C27952) * C121) * C50915) *
                C33783) *
               C1173) *
              C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                  C253 +
              (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                  C50899 -
              (C24854 + C24855) * C254 - (C24856 + C24857) * C50686) *
                 C50915 +
             ((C24855 + C24854) * C253 + (C24857 + C24856) * C50899 -
              (C24858 + C24859) * C254 - (C24860 + C24861) * C50686) *
                 C50809) *
                C33783 +
            (((C27944 + C27945) * C253 + (C27946 + C27947) * C50899 -
              C28474 * C254 - C28475 * C50686) *
                 C50915 +
             (C28478 * C253 + C28479 * C50899 - C25492 * C254 -
              C25493 * C50686) *
                 C50809) *
                C50835) *
               C1277 +
           ((((C24862 + C24863) * C254 -
              ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                   C50899 +
               (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                   C253) +
              (C24864 + C24865) * C50686) *
                 C50915 +
             ((C24866 + C24867) * C254 -
              ((C24865 + C24864) * C50899 + (C24863 + C24862) * C253) +
              (C24868 + C24869) * C50686) *
                 C50809) *
                C33783 +
            ((C29708 * C254 -
              ((C27948 + C27949) * C50899 + (C27950 + C27951) * C253) +
              C29709 * C50686) *
                 C50915 +
             ((C26415 + C26414) * C254 - (C29710 * C50899 + C29711 * C253) +
              (C26417 + C26416) * C50686) *
                 C50809) *
                C50835) *
               C50641) *
              C1514 +
          ((((C28478 * C254 -
              ((C27947 + C27946) * C50899 + (C27945 + C27944) * C253) +
              C28479 * C50686) *
                 C50915 +
             (C28476 * C254 - (C28475 * C50899 + C28474 * C253) +
              C28477 * C50686) *
                 C50809) *
                C33783 +
            ((C28904 * C254 -
              ((C28706 + C28707) * C50899 + (C28708 + C28709) * C253) +
              C28905 * C50686) *
                 C50915 +
             ((C25807 + C25806) * C254 - (C28906 * C50899 + C28907 * C253) +
              (C25809 + C25808) * C50686) *
                 C50809) *
                C50835) *
               C1277 +
           ((((C27951 + C27950) * C253 + (C27949 + C27948) * C50899 -
              C29711 * C254 - C29710 * C50686) *
                 C50915 +
             (C29708 * C253 + C29709 * C50899 - (C26414 + C26415) * C254 -
              (C26416 + C26417) * C50686) *
                 C50809) *
                C33783 +
            (((C28698 + C28699) * C253 + (C28700 + C28701) * C50899 -
              (C28703 + C28702) * C254 - (C28705 + C28704) * C50686) *
                 C50915 +
             ((C28702 + C28703) * C253 + (C28704 + C28705) * C50899 -
              (C49761 * C3196 + C50616 * C3202 + C49768 * C3195 +
               C50887 * C3198) *
                  C254 -
              (C49761 * C3201 + C50616 * C3205 + C49768 * C3200 +
               C50887 * C3204) *
                  C50686) *
                 C50809) *
                C50835) *
               C50641) *
              C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                  C121 +
              (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                  C50670) *
                 C50915 +
             ((C24855 + C24854) * C121 + (C24857 + C24856) * C50670) * C50809) *
                C33783 +
            (((C27944 + C27945) * C121 + (C27946 + C27947) * C50670) * C50915 +
             (C28478 * C121 + C28479 * C50670) * C50809) *
                C50835) *
               C1277 -
           (((C29710 * C50670 + C29711 * C121) * C50809 +
             ((C27948 + C27949) * C50670 + (C27950 + C27951) * C121) * C50915) *
                C50835 +
            (((C24865 + C24864) * C50670 + (C24863 + C24862) * C121) * C50809 +
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C50670 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C121) *
                 C50915) *
                C33783) *
               C50641) *
              C50947 +
          (((((C27951 + C27950) * C121 + (C27949 + C27948) * C50670) * C50915 +
             (C29708 * C121 + C29709 * C50670) * C50809) *
                C33783 +
            (((C28698 + C28699) * C121 + (C28700 + C28701) * C50670) * C50915 +
             ((C28702 + C28703) * C121 + (C28704 + C28705) * C50670) * C50809) *
                C50835) *
               C50641 -
           (((C28906 * C50670 + C28907 * C121) * C50809 +
             ((C28706 + C28707) * C50670 + (C28708 + C28709) * C121) * C50915) *
                C50835 +
            ((C28475 * C50670 + C28474 * C121) * C50809 +
             ((C27947 + C27946) * C50670 + (C27945 + C27944) * C121) * C50915) *
                C33783) *
               C1277) *
              C50936 +
          (((((C28709 + C28708) * C121 + (C28707 + C28706) * C50670) * C50915 +
             (C28904 * C121 + C28905 * C50670) * C50809) *
                C33783 +
            (((C29058 + C29059) * C121 + (C29060 + C29061) * C50670) * C50915 +
             ((C28917 + C28916) * C121 + (C28919 + C28918) * C50670) * C50809) *
                C50835) *
               C1277 -
           ((((C49761 * C6821 + C50616 * C6822 + C49768 * C3490 +
               C50887 * C3496) *
                  C50670 +
              (C49761 * C6819 + C50616 * C6820 + C49768 * C3484 +
               C50887 * C3492) *
                  C121) *
                 C50809 +
             ((C49761 * C1060 + C50616 * C1068 + C49768 * C1061 +
               C50887 * C1069) *
                  C50670 +
              (C49761 * C1056 + C50616 * C1064 + C49768 * C1057 +
               C50887 * C1065) *
                  C121) *
                 C50915) *
                C50835 +
            (((C28705 + C28704) * C50670 + (C28703 + C28702) * C121) * C50809 +
             ((C28701 + C28700) * C50670 + (C28699 + C28698) * C121) * C50915) *
                C33783) *
               C50641) *
              C1746)) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C121 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50670) *
                C50915 +
            ((C24855 + C24854) * C121 + (C24857 + C24856) * C50670) * C50809) *
               C33783 +
           (((C27944 + C27945) * C121 + (C27946 + C27947) * C50670) * C50915 +
            (C28478 * C121 + C28479 * C50670) * C50809) *
               C50835) *
              C112 -
          (((C29710 * C50670 + C29711 * C121) * C50809 +
            ((C27948 + C27949) * C50670 + (C27950 + C27951) * C121) * C50915) *
               C50835 +
           (((C24865 + C24864) * C50670 + (C24863 + C24862) * C121) * C50809 +
            ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                 C50670 +
             (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                 C121) *
                C50915) *
               C33783) *
              C113 +
          ((((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                 C121 +
             (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                 C50670) *
                C50915 +
            ((C24871 + C24870) * C121 + (C24873 + C24872) * C50670) * C50809) *
               C33783 +
           (((C27952 + C27953) * C121 + (C27954 + C27955) * C50670) * C50915 +
            ((C27723 + C27722) * C121 + (C27725 + C27724) * C50670) * C50809) *
               C50835) *
              C114 -
          ((((C49761 * C1414 + C50616 * C1415 + C49768 * C733 + C50887 * C745) *
                 C50670 +
             (C49761 * C1412 + C50616 * C1413 + C49768 * C721 + C50887 * C729) *
                 C121) *
                C50809 +
            ((C49761 * C392 + C50616 * C400 + C49768 * C391 + C50887 * C399) *
                 C50670 +
             (C49761 * C382 + C50616 * C388 + C49768 * C381 + C50887 * C387) *
                 C121) *
                C50915) *
               C50835 +
           (((C49761 * C270 + C50616 * C277 + C49768 * C265 + C50887 * C273) *
                 C50670 +
             (C49761 * C259 + C50616 * C269 + C49768 * C255 + C50887 * C261) *
                 C121) *
                C50809 +
            ((C49761 * C137 + C50616 * C147 + C49768 * C136 + C50887 * C146) *
                 C50670 +
             (C49761 * C126 + C50616 * C138 + C49768 * C125 + C50887 * C132) *
                 C121) *
                C50915) *
               C33783) *
              C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C506 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C501 -
             (C24854 + C24855) * C507 - (C24856 + C24857) * C502 +
             C25170 * C508 + C25171 * C503) *
                C50915 +
            ((C24855 + C24854) * C506 + (C24857 + C24856) * C501 -
             (C24858 + C24859) * C507 - (C24860 + C24861) * C502 +
             (C25190 + C25191) * C508 + (C25192 + C25193) * C503) *
                C50809) *
               C33783 +
           (((C27944 + C27945) * C506 + (C27946 + C27947) * C501 -
             C28474 * C507 - C28475 * C502 + C28476 * C508 + C28477 * C503) *
                C50915 +
            (C28478 * C506 + C28479 * C501 - C25492 * C507 - C25493 * C502 +
             (C25489 + C25488) * C508 + (C25491 + C25490) * C503) *
                C50809) *
               C50835) *
              C50892 +
          ((((C24862 + C24863) * C507 -
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C501 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C506) +
             (C24864 + C24865) * C502 - C25180 * C508 - C25181 * C503) *
                C50915 +
            ((C24866 + C24867) * C507 -
             ((C24865 + C24864) * C501 + (C24863 + C24862) * C506) +
             (C24868 + C24869) * C502 - (C25194 + C25195) * C508 -
             (C25196 + C25197) * C503) *
                C50809) *
               C33783 +
           ((C29708 * C507 -
             ((C27948 + C27949) * C501 + (C27950 + C27951) * C506) +
             C29709 * C502 - (C26414 + C26415) * C508 -
             (C26416 + C26417) * C503) *
                C50915 +
            ((C26415 + C26414) * C507 - (C29710 * C501 + C29711 * C506) +
             (C26417 + C26416) * C502 -
             (C49761 * C3984 + C50616 * C3985 + C49768 * C2994 +
              C50887 * C2998) *
                 C508 -
             (C49761 * C3986 + C50616 * C3987 + C49768 * C3000 +
              C50887 * C3006) *
                 C503) *
                C50809) *
               C50835) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C253 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50899 -
             (C24854 + C24855) * C254 - (C24856 + C24857) * C50686) *
                C50915 +
            ((C24855 + C24854) * C253 + (C24857 + C24856) * C50899 -
             (C24858 + C24859) * C254 - (C24860 + C24861) * C50686) *
                C50809) *
               C33783 +
           (((C27944 + C27945) * C253 + (C27946 + C27947) * C50899 -
             C28474 * C254 - C28475 * C50686) *
                C50915 +
            (C28478 * C253 + C28479 * C50899 - C25492 * C254 -
             C25493 * C50686) *
                C50809) *
               C50835) *
              C250 +
          ((((C24862 + C24863) * C254 -
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C50899 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C253) +
             (C24864 + C24865) * C50686) *
                C50915 +
            ((C24866 + C24867) * C254 -
             ((C24865 + C24864) * C50899 + (C24863 + C24862) * C253) +
             (C24868 + C24869) * C50686) *
                C50809) *
               C33783 +
           ((C29708 * C254 -
             ((C27948 + C27949) * C50899 + (C27950 + C27951) * C253) +
             C29709 * C50686) *
                C50915 +
            ((C26415 + C26414) * C254 - (C29710 * C50899 + C29711 * C253) +
             (C26417 + C26416) * C50686) *
                C50809) *
               C50835) *
              C251 +
          ((((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                 C253 +
             (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                 C50899 -
             (C24870 + C24871) * C254 - (C24872 + C24873) * C50686) *
                C50915 +
            ((C24871 + C24870) * C253 + (C24873 + C24872) * C50899 -
             (C24874 + C24875) * C254 - (C24876 + C24877) * C50686) *
                C50809) *
               C33783 +
           (((C27952 + C27953) * C253 + (C27954 + C27955) * C50899 -
             (C27722 + C27723) * C254 - (C27724 + C27725) * C50686) *
                C50915 +
            ((C27723 + C27722) * C253 + (C27725 + C27724) * C50899 -
             (C49761 * C722 + C50616 * C734 + C49768 * C723 + C50887 * C735) *
                 C254 -
             (C49761 * C738 + C50616 * C746 + C49768 * C739 + C50887 * C747) *
                 C50686) *
                C50809) *
               C50835) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C600 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C595 -
            (C24854 + C24855) * C601 - (C24856 + C24857) * C596 +
            C25170 * C602 + C25171 * C597 - C25296 * C603 - C25297 * C598) *
               C50915 +
           ((C24855 + C24854) * C600 + (C24857 + C24856) * C595 -
            (C24858 + C24859) * C601 - (C24860 + C24861) * C596 +
            (C25190 + C25191) * C602 + (C25192 + C25193) * C597 -
            (C25306 + C25307) * C603 - (C25308 + C25309) * C598) *
               C50809) *
              C33783 +
          (((C27944 + C27945) * C600 + (C27946 + C27947) * C595 -
            C28474 * C601 - C28475 * C596 + C28476 * C602 + C28477 * C597 -
            (C25488 + C25489) * C603 - (C25490 + C25491) * C598) *
               C50915 +
           (C28478 * C600 + C28479 * C595 - C25492 * C601 - C25493 * C596 +
            (C25489 + C25488) * C602 + (C25491 + C25490) * C597 -
            (C49761 * C2996 + C50616 * C3002 + C49768 * C2997 +
             C50887 * C3003) *
                C603 -
            (C49761 * C3004 + C50616 * C3008 + C49768 * C3005 +
             C50887 * C3009) *
                C598) *
               C50809) *
              C50835) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                  C121 +
              (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                  C50670) *
                 C50915 +
             ((C24855 + C24854) * C121 + (C24857 + C24856) * C50670) * C50809) *
                C33783 +
            (((C27944 + C27945) * C121 + (C27946 + C27947) * C50670) * C50915 +
             (C28478 * C121 + C28479 * C50670) * C50809) *
                C50835) *
               C250 -
           (((C29710 * C50670 + C29711 * C121) * C50809 +
             ((C27948 + C27949) * C50670 + (C27950 + C27951) * C121) * C50915) *
                C50835 +
            (((C24865 + C24864) * C50670 + (C24863 + C24862) * C121) * C50809 +
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C50670 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C121) *
                 C50915) *
                C33783) *
               C251 +
           ((((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                  C121 +
              (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                  C50670) *
                 C50915 +
             ((C24871 + C24870) * C121 + (C24873 + C24872) * C50670) * C50809) *
                C33783 +
            (((C27952 + C27953) * C121 + (C27954 + C27955) * C50670) * C50915 +
             ((C27723 + C27722) * C121 + (C27725 + C27724) * C50670) * C50809) *
                C50835) *
               C252) *
              C50901 +
          (((((C27951 + C27950) * C121 + (C27949 + C27948) * C50670) * C50915 +
             (C29708 * C121 + C29709 * C50670) * C50809) *
                C33783 +
            (((C28698 + C28699) * C121 + (C28700 + C28701) * C50670) * C50915 +
             ((C28702 + C28703) * C121 + (C28704 + C28705) * C50670) * C50809) *
                C50835) *
               C251 -
           (((C28906 * C50670 + C28907 * C121) * C50809 +
             ((C28706 + C28707) * C50670 + (C28708 + C28709) * C121) * C50915) *
                C50835 +
            ((C28475 * C50670 + C28474 * C121) * C50809 +
             ((C27947 + C27946) * C50670 + (C27945 + C27944) * C121) * C50915) *
                C33783) *
               C250 -
           ((((C49761 * C977 + C50616 * C981 + C49768 * C978 + C50887 * C982) *
                  C50670 +
              (C49761 * C969 + C50616 * C973 + C49768 * C970 + C50887 * C974) *
                  C121) *
                 C50809 +
             ((C49761 * C863 + C50616 * C869 + C49768 * C862 + C50887 * C868) *
                  C50670 +
              (C49761 * C854 + C50616 * C859 + C49768 * C853 + C50887 * C858) *
                  C121) *
                 C50915) *
                C50835 +
            (((C27724 + C27725) * C50670 + (C27722 + C27723) * C121) * C50809 +
             ((C27955 + C27954) * C50670 + (C27953 + C27952) * C121) * C50915) *
                C33783) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C506 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C501 -
             (C24854 + C24855) * C507 - (C24856 + C24857) * C502 +
             C25170 * C508 + C25171 * C503) *
                C50915 +
            ((C24855 + C24854) * C506 + (C24857 + C24856) * C501 -
             (C24858 + C24859) * C507 - (C24860 + C24861) * C502 +
             (C25190 + C25191) * C508 + (C25192 + C25193) * C503) *
                C50809) *
               C33783 +
           (((C27944 + C27945) * C506 + (C27946 + C27947) * C501 -
             C28474 * C507 - C28475 * C502 + C28476 * C508 + C28477 * C503) *
                C50915 +
            (C28478 * C506 + C28479 * C501 - C25492 * C507 - C25493 * C502 +
             (C25489 + C25488) * C508 + (C25491 + C25490) * C503) *
                C50809) *
               C50835) *
              C50636 * C50901 +
          (((C28478 * C507 -
             ((C27947 + C27946) * C501 + (C27945 + C27944) * C506) +
             C28479 * C502 - C25492 * C508 - C25493 * C503) *
                C50915 +
            (C28476 * C507 - (C28475 * C501 + C28474 * C506) + C28477 * C502 -
             (C25488 + C25489) * C508 - (C25490 + C25491) * C503) *
                C50809) *
               C33783 +
           ((C28904 * C507 -
             ((C28706 + C28707) * C501 + (C28708 + C28709) * C506) +
             C28905 * C502 - (C25806 + C25807) * C508 -
             (C25808 + C25809) * C503) *
                C50915 +
            ((C25807 + C25806) * C507 - (C28906 * C501 + C28907 * C506) +
             (C25809 + C25808) * C502 -
             (C49761 * C3352 + C50616 * C3354 + C49768 * C3353 +
              C50887 * C3355) *
                 C508 -
             (C49761 * C3356 + C50616 * C3358 + C49768 * C3357 +
              C50887 * C3359) *
                 C503) *
                C50809) *
               C50835) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[165] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C19772 * C122 + C50611 * C129) * C1174 +
                      (C19772 * C133 + C50611 * C143) * C1169 - C19908 * C1175 -
                      C19909 * C50686) *
                         C50915 +
                     (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                      C19911 * C50686) *
                         C50809) *
                        C50950 +
                    ((C23494 + C23495 - C23496 - C23497) * C50915 +
                     (C23498 + C23499 - C23500 - C23501) * C50809) *
                        C50951 +
                    (C24550 * C50915 + C24551 * C50809) * C44486) *
                       C50945 +
                   (((C19914 * C1175 -
                      ((C19772 * C134 + C50611 * C144) * C1169 +
                       (C19772 * C123 + C50611 * C130) * C1174) +
                      C19915 * C50686) *
                         C50915 +
                     (C19916 * C1175 - (C19915 * C1169 + C19914 * C1174) +
                      C19917 * C50686) *
                         C50809) *
                        C50950 +
                    ((C23510 - (C23511 + C23512) + C23513) * C50915 +
                     (C23514 - (C23515 + C23516) + C23517) * C50809) *
                        C50951 +
                    ((C23518 - (C23519 + C23520) + C23521) * C50915 +
                     (C23522 - (C23523 + C23524) + C23525) * C50809) *
                        C44486) *
                       C50930 +
                   ((((C19772 * C124 + C50611 * C131) * C1174 +
                      (C19772 * C135 + C50611 * C145) * C1169 - C19920 * C1175 -
                      C19921 * C50686) *
                         C50915 +
                     (C19920 * C1174 + C19921 * C1169 - C19922 * C1175 -
                      C19923 * C50686) *
                         C50809) *
                        C50950 +
                    ((C22072 * C1174 + C22073 * C1169 - C21878 * C1175 -
                      C21879 * C50686) *
                         C50915 +
                     (C21878 * C1174 + C21879 * C1169 - C31252 * C1175 -
                      C31253 * C50686) *
                         C50809) *
                        C50951 +
                    ((C22074 * C1174 + C22075 * C1169 - C21880 * C1175 -
                      C21881 * C50686) *
                         C50915 +
                     (C21880 * C1174 + C21881 * C1169 -
                      (C19772 * C3196 + C50611 * C3202) * C1175 -
                      (C19772 * C3201 + C50611 * C3205) * C50686) *
                         C50809) *
                        C44486) *
                       C1173) *
                  C50700) /
                 (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C1279 +
             (C19772 * C133 + C50611 * C143) * C50946 - C19908 * C1280 -
             C19909 * C50933 + C19910 * C1281 + C19911 * C1276) *
                C50915 +
            (C19908 * C1279 + C19909 * C50946 - C19910 * C1280 -
             C19911 * C50933 + C19912 * C1281 + C19913 * C1276) *
                C50809) *
               C50950 +
           ((C24368 + C24369 - C24370 - C24371 + C24372 + C24373) * C50915 +
            (C24374 + C24375 - C24376 - C24377 + C24378 + C24379) * C50809) *
               C50951 +
           ((C24380 + C24381 - C24382 - C24383 + C24384 + C24385) * C50915 +
            (C24386 + C24387 - C24388 - C24389 + C24390 + C24391) * C50809) *
               C44486) *
              C1277 +
          (((C19914 * C1280 -
             ((C19772 * C134 + C50611 * C144) * C50946 +
              (C19772 * C123 + C50611 * C130) * C1279) +
             C19915 * C50933 - C19916 * C1281 - C19917 * C1276) *
                C50915 +
            (C19916 * C1280 - (C19915 * C50946 + C19914 * C1279) +
             C19917 * C50933 - C19918 * C1281 - C19919 * C1276) *
                C50809) *
               C50950 +
           ((C20962 * C1280 - (C22070 * C50946 + C22071 * C1279) +
             C20963 * C50933 - C20964 * C1281 - C20965 * C1276) *
                C50915 +
            (C20964 * C1280 - (C20963 * C50946 + C20962 * C1279) +
             C20965 * C50933 - C20966 * C1281 - C20967 * C1276) *
                C50809) *
               C50951 +
           ((C21876 * C1280 - (C22068 * C50946 + C22069 * C1279) +
             C21877 * C50933 - C22238 * C1281 - C22239 * C1276) *
                C50915 +
            (C22238 * C1280 - (C21877 * C50946 + C21876 * C1279) +
             C22239 * C50933 - (C19772 * C3352 + C50611 * C3354) * C1281 -
             (C19772 * C3356 + C50611 * C3358) * C1276) *
                C50809) *
               C44486) *
              C50641) *
         C50700) /
        (p * q * std::sqrt(p + q));
    d2ee[167] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19772 * C122 + C50611 * C129) * C1174 +
                       (C19772 * C133 + C50611 * C143) * C1169 -
                       C19908 * C1175 - C19909 * C50686) *
                          C50915 +
                      (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                       C19911 * C50686) *
                          C50809) *
                         C50950 +
                     ((C23494 + C23495 - C23496 - C23497) * C50915 +
                      (C23498 + C23499 - C23500 - C23501) * C50809) *
                         C50951 +
                     (C24550 * C50915 + C24551 * C50809) * C44486) *
                        C1277 +
                    (((C19914 * C1175 -
                       ((C19772 * C134 + C50611 * C144) * C1169 +
                        (C19772 * C123 + C50611 * C130) * C1174) +
                       C19915 * C50686) *
                          C50915 +
                      (C19916 * C1175 - (C19915 * C1169 + C19914 * C1174) +
                       C19917 * C50686) *
                          C50809) *
                         C50950 +
                     ((C23510 - (C23511 + C23512) + C23513) * C50915 +
                      (C23514 - (C23515 + C23516) + C23517) * C50809) *
                         C50951 +
                     ((C23518 - (C23519 + C23520) + C23521) * C50915 +
                      (C23522 - (C23523 + C23524) + C23525) * C50809) *
                         C44486) *
                        C50641) *
                       C50901 +
                   ((((C23496 - (C23495 + C23494) + C23497) * C50915 +
                      (C23500 - (C23499 + C23498) + C23501) * C50809) *
                         C50950 +
                     ((C23504 - (C23503 + C23502) + C23505) * C50915 +
                      (C23508 - (C23507 + C23506) + C23509) * C50809) *
                         C50951 +
                     ((C24540 - (C24541 + C24542) + C24543) * C50915 +
                      (C24544 - (C24545 + C24546) + C24547) * C50809) *
                         C44486) *
                        C1277 +
                    (((C23512 + C23511 - C23510 - C23513) * C50915 +
                      (C23516 + C23515 - C23514 - C23517) * C50809) *
                         C50950 +
                     ((C23520 + C23519 - C23518 - C23521) * C50915 +
                      (C23524 + C23523 - C23522 - C23525) * C50809) *
                         C50951 +
                     ((C40222 + C40221 - C40220 - C40223) * C50915 +
                      (C22690 * C1174 + C22691 * C1169 -
                       (C19772 * C3482 + C50611 * C3488) * C1175 -
                       (C19772 * C3486 + C50611 * C3494) * C50686) *
                          C50809) *
                         C44486) *
                        C50641) *
                       C50712)) /
                 (p * q * std::sqrt(p + q));
    d2ee[168] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19772 * C122 + C50611 * C129) * C1174 +
                       (C19772 * C133 + C50611 * C143) * C1169 -
                       C19908 * C1175 - C19909 * C50686) *
                          C50915 +
                      (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                       C19911 * C50686) *
                          C50809) *
                         C50950 +
                     ((C23494 + C23495 - C23496 - C23497) * C50915 +
                      (C23498 + C23499 - C23500 - C23501) * C50809) *
                         C50951 +
                     (C24550 * C50915 + C24551 * C50809) * C44486) *
                        C50892 +
                    (((C19914 * C1175 -
                       ((C19772 * C134 + C50611 * C144) * C1169 +
                        (C19772 * C123 + C50611 * C130) * C1174) +
                       C19915 * C50686) *
                          C50915 +
                      (C19916 * C1175 - (C19915 * C1169 + C19914 * C1174) +
                       C19917 * C50686) *
                          C50809) *
                         C50950 +
                     ((C23510 - (C23511 + C23512) + C23513) * C50915 +
                      (C23514 - (C23515 + C23516) + C23517) * C50809) *
                         C50951 +
                     ((C23518 - (C23519 + C23520) + C23521) * C50915 +
                      (C23522 - (C23523 + C23524) + C23525) * C50809) *
                         C44486) *
                        C50641) *
                       C1514 +
                   ((((C23496 - (C23495 + C23494) + C23497) * C50915 +
                      (C23500 - (C23499 + C23498) + C23501) * C50809) *
                         C50950 +
                     ((C23504 - (C23503 + C23502) + C23505) * C50915 +
                      (C23508 - (C23507 + C23506) + C23509) * C50809) *
                         C50951 +
                     ((C24540 - (C24541 + C24542) + C24543) * C50915 +
                      (C24544 - (C24545 + C24546) + C24547) * C50809) *
                         C44486) *
                        C50892 +
                    (((C23512 + C23511 - C23510 - C23513) * C50915 +
                      (C23516 + C23515 - C23514 - C23517) * C50809) *
                         C50950 +
                     ((C23520 + C23519 - C23518 - C23521) * C50915 +
                      (C23524 + C23523 - C23522 - C23525) * C50809) *
                         C50951 +
                     ((C40222 + C40221 - C40220 - C40223) * C50915 +
                      (C22690 * C1174 + C22691 * C1169 -
                       (C19772 * C3482 + C50611 * C3488) * C1175 -
                       (C19772 * C3486 + C50611 * C3494) * C50686) *
                          C50809) *
                         C44486) *
                        C50641) *
                       C50712)) /
                 (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C1279 +
             (C19772 * C133 + C50611 * C143) * C50946 - C19908 * C1280 -
             C19909 * C50933 + C19910 * C1281 + C19911 * C1276) *
                C50915 +
            (C19908 * C1279 + C19909 * C50946 - C19910 * C1280 -
             C19911 * C50933 + C19912 * C1281 + C19913 * C1276) *
                C50809) *
               C50950 +
           ((C24368 + C24369 - C24370 - C24371 + C24372 + C24373) * C50915 +
            (C24374 + C24375 - C24376 - C24377 + C24378 + C24379) * C50809) *
               C50951 +
           ((C24380 + C24381 - C24382 - C24383 + C24384 + C24385) * C50915 +
            (C24386 + C24387 - C24388 - C24389 + C24390 + C24391) * C50809) *
               C44486) *
              C50636 * C1514 +
          (((C24370 - (C24369 + C24368) + C24371 - C24372 - C24373) * C50915 +
            (C24376 - (C24375 + C24374) + C24377 - C24378 - C24379) * C50809) *
               C50950 +
           ((C24382 - (C24381 + C24380) + C24383 - C24384 - C24385) * C50915 +
            (C24388 - (C24387 + C24386) + C24389 - C24390 - C24391) * C50809) *
               C50951 +
           ((C40784 - (C40783 + C40782) + C40785 - C40786 - C40787) * C50915 +
            (C22518 * C1280 - (C22517 * C50946 + C22516 * C1279) +
             C22519 * C50933 - (C19772 * C20619 + C50611 * C20621) * C1281 -
             (C19772 * C20620 + C50611 * C20622) * C1276) *
                C50809) *
               C44486) *
              C50636 * C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C1174 +
             (C19772 * C133 + C50611 * C143) * C1169 - C19908 * C1175 -
             C19909 * C50686) *
                C50915 +
            (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
             C19911 * C50686) *
                C50809) *
               C50950 +
           ((C23494 + C23495 - C23496 - C23497) * C50915 +
            (C23498 + C23499 - C23500 - C23501) * C50809) *
               C50951 +
           C49730 * C44486) *
              C50636 * C50947 +
          (((C23496 - (C23495 + C23494) + C23497) * C50915 +
            (C23500 - (C23499 + C23498) + C23501) * C50809) *
               C50950 +
           ((C23504 - (C23503 + C23502) + C23505) * C50915 +
            (C23508 - (C23507 + C23506) + C23509) * C50809) *
               C50951 +
           ((C24540 - (C24541 + C24542) + C24543) * C50915 +
            (C24544 - (C24545 + C24546) + C24547) * C50809) *
               C44486) *
              C50636 * C50936 +
          (C49730 * C50950 +
           (C40893 * C50915 + (C24546 + C24545 - C24544 - C24547) * C50809) *
               C50951 +
           ((C40890 + C40889 - C40888 - C40891) * C50915 +
            (C22882 * C1174 + C22883 * C1169 -
             (C19772 * C22847 + C50611 * C22848) * C1175 -
             (C19772 * C22849 + C50611 * C22850) * C50686) *
                C50809) *
               C44486) *
              C50636 * C1746)) /
        (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C506 +
             (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
             C19909 * C502 + C19910 * C508 + C19911 * C503) *
                C50915 +
            (C19908 * C506 + C19909 * C501 - C19910 * C507 - C19911 * C502 +
             C19912 * C508 + C19913 * C503) *
                C50809) *
               C50950 +
           ((C22484 + C22485 - C22486 - C22487 + C22488 + C22489) * C50915 +
            (C22490 + C22491 - C22492 - C22493 + C22494 + C22495) * C50809) *
               C50951 +
           ((C22496 + C22497 - C22498 - C22499 + C22500 + C22501) * C50915 +
            (C22502 + C22503 - C22504 - C22505 + C22506 + C22507) * C50809) *
               C44486) *
              C50892 +
          (((C19914 * C507 -
             ((C19772 * C134 + C50611 * C144) * C501 +
              (C19772 * C123 + C50611 * C130) * C506) +
             C19915 * C502 - C19916 * C508 - C19917 * C503) *
                C50915 +
            (C19916 * C507 - (C19915 * C501 + C19914 * C506) + C19917 * C502 -
             C19918 * C508 - C19919 * C503) *
                C50809) *
               C50950 +
           ((C20962 * C507 - (C22070 * C501 + C22071 * C506) + C20963 * C502 -
             C20964 * C508 - C20965 * C503) *
                C50915 +
            (C20964 * C507 - (C20963 * C501 + C20962 * C506) + C20965 * C502 -
             C20966 * C508 - C20967 * C503) *
                C50809) *
               C50951 +
           ((C21876 * C507 - (C22068 * C501 + C22069 * C506) + C21877 * C502 -
             C22238 * C508 - C22239 * C503) *
                C50915 +
            (C22238 * C507 - (C21877 * C501 + C21876 * C506) + C22239 * C502 -
             (C19772 * C3352 + C50611 * C3354) * C508 -
             (C19772 * C3356 + C50611 * C3358) * C503) *
                C50809) *
               C44486) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C121 +
             (C19772 * C133 + C50611 * C143) * C50670) *
                C50915 +
            (C19908 * C121 + C19909 * C50670) * C50809) *
               C50950 +
           ((C22076 + C22077) * C50915 + (C22032 + C22033) * C50809) * C50951 +
           (C22666 * C50915 + C22667 * C50809) * C44486) *
              C112 -
          ((C22668 * C50809 + C22669 * C50915) * C44486 +
           ((C22046 + C22047) * C50809 + (C22082 + C22083) * C50915) * C50951 +
           ((C19915 * C50670 + C19914 * C121) * C50809 +
            ((C19772 * C134 + C50611 * C144) * C50670 +
             (C19772 * C123 + C50611 * C130) * C121) *
                C50915) *
               C50950) *
              C113 +
          ((((C19772 * C124 + C50611 * C131) * C121 +
             (C19772 * C135 + C50611 * C145) * C50670) *
                C50915 +
            (C19920 * C121 + C19921 * C50670) * C50809) *
               C50950 +
           ((C22084 + C22085) * C50915 + (C22056 + C22057) * C50809) * C50951 +
           ((C22086 + C22087) * C50915 + (C22062 + C22063) * C50809) * C44486) *
              C114 -
          ((((C19772 * C977 + C50611 * C981) * C50670 +
             (C19772 * C969 + C50611 * C973) * C121) *
                C50809 +
            ((C19772 * C863 + C50611 * C869) * C50670 +
             (C19772 * C854 + C50611 * C859) * C121) *
                C50915) *
               C44486 +
           (((C19772 * C733 + C50611 * C745) * C50670 +
             (C19772 * C721 + C50611 * C729) * C121) *
                C50809 +
            ((C19772 * C391 + C50611 * C399) * C50670 +
             (C19772 * C381 + C50611 * C387) * C121) *
                C50915) *
               C50951 +
           (((C19772 * C265 + C50611 * C273) * C50670 +
             (C19772 * C255 + C50611 * C261) * C121) *
                C50809 +
            ((C19772 * C136 + C50611 * C146) * C50670 +
             (C19772 * C125 + C50611 * C132) * C121) *
                C50915) *
               C50950) *
              C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19772 * C122 + C50611 * C129) * C121 +
              (C19772 * C133 + C50611 * C143) * C50670) *
                 C50915 +
             (C19908 * C121 + C19909 * C50670) * C50809) *
                C50950 +
            ((C22076 + C22077) * C50915 + (C22032 + C22033) * C50809) * C50951 +
            C48018 * C44486) *
               C50892 -
           (C48019 * C44486 +
            ((C22046 + C22047) * C50809 + (C22082 + C22083) * C50915) * C50951 +
            ((C19915 * C50670 + C19914 * C121) * C50809 +
             ((C19772 * C134 + C50611 * C144) * C50670 +
              (C19772 * C123 + C50611 * C130) * C121) *
                 C50915) *
                C50950) *
               C50641) *
              C848 +
          ((((C22083 + C22082) * C50915 + (C22047 + C22046) * C50809) * C50950 +
            ((C22081 + C22080) * C50915 + (C22041 + C22040) * C50809) * C50951 +
            ((C22696 + C22697) * C50915 + (C22698 + C22699) * C50809) *
                C44486) *
               C50641 -
           ((C22993 * C50809 + C22994 * C50915) * C44486 +
            ((C22039 + C22038) * C50809 + (C22079 + C22078) * C50915) * C50951 +
            ((C22033 + C22032) * C50809 + (C22077 + C22076) * C50915) *
                C50950) *
               C50892) *
              C849 +
          ((C48018 * C50950 +
            (C39693 * C50915 + (C22679 + C22678) * C50809) * C50951 +
            ((C23006 + C23007) * C50915 + (C22999 + C23000) * C50809) *
                C44486) *
               C50892 -
           ((((C19772 * C6183 + C50611 * C6185) * C50670 +
              (C19772 * C6179 + C50611 * C6181) * C121) *
                 C50809 +
             (C39705 + C39704) * C50915) *
                C44486 +
            ((C22699 + C22698) * C50809 + C39694 * C50915) * C50951 +
            C48019 * C50950) *
               C50641) *
              C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C600 +
            (C19772 * C133 + C50611 * C143) * C595 - C19908 * C601 -
            C19909 * C596 + C19910 * C602 + C19911 * C597 - C19912 * C603 -
            C19913 * C598) *
               C50915 +
           (C19908 * C600 + C19909 * C595 - C19910 * C601 - C19911 * C596 +
            C19912 * C602 + C19913 * C597 - C20130 * C603 - C20131 * C598) *
               C50809) *
              C50950 +
          ((C22064 * C600 + C22065 * C595 - C20328 * C601 - C20329 * C596 +
            C20330 * C602 + C20331 * C597 - C20332 * C603 - C20333 * C598) *
               C50915 +
           (C20328 * C600 + C20329 * C595 - C20330 * C601 - C20331 * C596 +
            C20332 * C602 + C20333 * C597 - C20334 * C603 - C20335 * C598) *
               C50809) *
              C50951 +
          ((C22066 * C600 + C22067 * C595 - C20548 * C601 - C20549 * C596 +
            C20550 * C602 + C20551 * C597 - C20552 * C603 - C20553 * C598) *
               C50915 +
           (C20548 * C600 + C20549 * C595 - C20550 * C601 - C20551 * C596 +
            C20552 * C602 + C20553 * C597 -
            (C19772 * C20531 + C50611 * C20532) * C603 -
            (C19772 * C20533 + C50611 * C20534) * C598) *
               C50809) *
              C44486) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C253 +
             (C19772 * C133 + C50611 * C143) * C50899 - C19908 * C254 -
             C19909 * C50686) *
                C50915 +
            (C19908 * C253 + C19909 * C50899 - C19910 * C254 -
             C19911 * C50686) *
                C50809) *
               C50950 +
           ((C22852 + C22853 - C22854 - C22855) * C50915 +
            (C22856 + C22857 - C22858 - C22859) * C50809) *
               C50951 +
           (C22886 * C50915 + C22887 * C50809) * C44486) *
              C250 +
          (((C19914 * C254 -
             ((C19772 * C134 + C50611 * C144) * C50899 +
              (C19772 * C123 + C50611 * C130) * C253) +
             C19915 * C50686) *
                C50915 +
            (C19916 * C254 - (C19915 * C50899 + C19914 * C253) +
             C19917 * C50686) *
                C50809) *
               C50950 +
           ((C23866 - (C23867 + C23868) + C23869) * C50915 +
            (C23870 - (C23871 + C23872) + C23873) * C50809) *
               C50951 +
           ((C23874 - (C23875 + C23876) + C23877) * C50915 +
            (C23878 - (C23879 + C23880) + C23881) * C50809) *
               C44486) *
              C251 +
          ((((C19772 * C124 + C50611 * C131) * C253 +
             (C19772 * C135 + C50611 * C145) * C50899 - C19920 * C254 -
             C19921 * C50686) *
                C50915 +
            (C19920 * C253 + C19921 * C50899 - C19922 * C254 -
             C19923 * C50686) *
                C50809) *
               C50950 +
           ((C22072 * C253 + C22073 * C50899 - C21878 * C254 -
             C21879 * C50686) *
                C50915 +
            (C21878 * C253 + C21879 * C50899 - C31252 * C254 -
             C31253 * C50686) *
                C50809) *
               C50951 +
           ((C22074 * C253 + C22075 * C50899 - C21880 * C254 -
             C21881 * C50686) *
                C50915 +
            (C21880 * C253 + C21881 * C50899 -
             (C19772 * C3196 + C50611 * C3202) * C254 -
             (C19772 * C3201 + C50611 * C3205) * C50686) *
                C50809) *
               C44486) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C253 +
             (C19772 * C133 + C50611 * C143) * C50899 - C19908 * C254 -
             C19909 * C50686) *
                C50915 +
            (C19908 * C253 + C19909 * C50899 - C19910 * C254 -
             C19911 * C50686) *
                C50809) *
               C50950 +
           ((C22852 + C22853 - C22854 - C22855) * C50915 +
            (C22856 + C22857 - C22858 - C22859) * C50809) *
               C50951 +
           C48168 * C44486) *
              C50636 * C848 +
          (((C22854 - (C22853 + C22852) + C22855) * C50915 +
            (C22858 - (C22857 + C22856) + C22859) * C50809) *
               C50950 +
           ((C22862 - (C22861 + C22860) + C22863) * C50915 +
            (C22866 - (C22865 + C22864) + C22867) * C50809) *
               C50951 +
           ((C22868 - (C22869 + C22870) + C22871) * C50915 +
            (C22872 - (C22873 + C22874) + C22875) * C50809) *
               C44486) *
              C50636 * C849 +
          (C48168 * C50950 +
           (C39811 * C50915 + (C22874 + C22873 - C22872 - C22875) * C50809) *
               C50951 +
           ((C39808 + C39807 - C39806 - C39809) * C50915 +
            (C22882 * C253 + C22883 * C50899 -
             (C19772 * C22847 + C50611 * C22848) * C254 -
             (C19772 * C22849 + C50611 * C22850) * C50686) *
                C50809) *
               C44486) *
              C50636 * C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C506 +
             (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
             C19909 * C502 + C19910 * C508 + C19911 * C503) *
                C50915 +
            (C19908 * C506 + C19909 * C501 - C19910 * C507 - C19911 * C502 +
             C19912 * C508 + C19913 * C503) *
                C50809) *
               C50950 +
           ((C22484 + C22485 - C22486 - C22487 + C22488 + C22489) * C50915 +
            (C22490 + C22491 - C22492 - C22493 + C22494 + C22495) * C50809) *
               C50951 +
           ((C22496 + C22497 - C22498 - C22499 + C22500 + C22501) * C50915 +
            (C22502 + C22503 - C22504 - C22505 + C22506 + C22507) * C50809) *
               C44486) *
              C50636 * C50901 +
          (((C22486 - (C22485 + C22484) + C22487 - C22488 - C22489) * C50915 +
            (C22492 - (C22491 + C22490) + C22493 - C22494 - C22495) * C50809) *
               C50950 +
           ((C22498 - (C22497 + C22496) + C22499 - C22500 - C22501) * C50915 +
            (C22504 - (C22503 + C22502) + C22505 - C22506 - C22507) * C50809) *
               C50951 +
           ((C39590 - (C39589 + C39588) + C39591 - C39592 - C39593) * C50915 +
            (C22518 * C507 - (C22517 * C501 + C22516 * C506) + C22519 * C502 -
             (C19772 * C20619 + C50611 * C20621) * C508 -
             (C19772 * C20620 + C50611 * C20622) * C503) *
                C50809) *
               C44486) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19772 * C122 + C50611 * C129) * C121 +
              (C19772 * C133 + C50611 * C143) * C50670) *
                 C50915 +
             (C19908 * C121 + C19909 * C50670) * C50809) *
                C50950 +
            ((C22076 + C22077) * C50915 + (C22032 + C22033) * C50809) * C50951 +
            (C22666 * C50915 + C22667 * C50809) * C44486) *
               C250 -
           ((C22668 * C50809 + C22669 * C50915) * C44486 +
            ((C22046 + C22047) * C50809 + (C22082 + C22083) * C50915) * C50951 +
            ((C19915 * C50670 + C19914 * C121) * C50809 +
             ((C19772 * C134 + C50611 * C144) * C50670 +
              (C19772 * C123 + C50611 * C130) * C121) *
                 C50915) *
                C50950) *
               C251 +
           ((((C19772 * C124 + C50611 * C131) * C121 +
              (C19772 * C135 + C50611 * C145) * C50670) *
                 C50915 +
             (C19920 * C121 + C19921 * C50670) * C50809) *
                C50950 +
            ((C22084 + C22085) * C50915 + (C22056 + C22057) * C50809) * C50951 +
            ((C22086 + C22087) * C50915 + (C22062 + C22063) * C50809) *
                C44486) *
               C252) *
              C50901 +
          ((((C22083 + C22082) * C50915 + (C22047 + C22046) * C50809) * C50950 +
            ((C22081 + C22080) * C50915 + (C22041 + C22040) * C50809) * C50951 +
            ((C22696 + C22697) * C50915 + (C22698 + C22699) * C50809) *
                C44486) *
               C251 -
           ((C22993 * C50809 + C22994 * C50915) * C44486 +
            ((C22039 + C22038) * C50809 + (C22079 + C22078) * C50915) * C50951 +
            ((C22033 + C22032) * C50809 + (C22077 + C22076) * C50915) *
                C50950) *
               C250 -
           ((((C19772 * C6821 + C50611 * C6822) * C50670 +
              (C19772 * C6819 + C50611 * C6820) * C121) *
                 C50809 +
             (C39325 + C39324) * C50915) *
                C44486 +
            ((C22063 + C22062) * C50809 + (C22087 + C22086) * C50915) * C50951 +
            ((C22057 + C22056) * C50809 + (C22085 + C22084) * C50915) *
                C50950) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C121 +
             (C19772 * C133 + C50611 * C143) * C50670) *
                C50915 +
            (C19908 * C121 + C19909 * C50670) * C50809) *
               C50950 +
           ((C22076 + C22077) * C50915 + (C22032 + C22033) * C50809) * C50951 +
           C48018 * C44486) *
              C50636 * C1051 -
          (C48269 * C44486 +
           ((C22039 + C22038) * C50809 + (C22079 + C22078) * C50915) * C50951 +
           ((C22033 + C22032) * C50809 + (C22077 + C22076) * C50915) * C50950) *
              C50636 * C1052 +
          (C48018 * C50950 +
           (C39693 * C50915 + (C22679 + C22678) * C50809) * C50951 +
           ((C23006 + C23007) * C50915 + (C22999 + C23000) * C50809) * C44486) *
              C50636 * C1053 -
          ((((C19772 * C22989 + C50611 * C22991) * C50670 +
             (C19772 * C22988 + C50611 * C22990) * C121) *
                C50809 +
            (C39893 + C39892) * C50915) *
               C44486 +
           ((C23000 + C22999) * C50809 + C39883 * C50915) * C50951 +
           C48269 * C50950) *
              C50636 * C1054)) /
            (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19772 * C122 + C50611 * C129) * C121 +
              (C19772 * C133 + C50611 * C143) * C50670) *
                 C50915 +
             (C19908 * C121 + C19909 * C50670) * C50809) *
                C50950 +
            ((C22076 + C22077) * C50915 + (C22032 + C22033) * C50809) * C50951 +
            C48018 * C44486) *
               C50945 -
           (C48019 * C44486 +
            ((C22046 + C22047) * C50809 + (C22082 + C22083) * C50915) * C50951 +
            ((C19915 * C50670 + C19914 * C121) * C50809 +
             ((C19772 * C134 + C50611 * C144) * C50670 +
              (C19772 * C123 + C50611 * C130) * C121) *
                 C50915) *
                C50950) *
               C50930 +
           ((((C19772 * C124 + C50611 * C131) * C121 +
              (C19772 * C135 + C50611 * C145) * C50670) *
                 C50915 +
             (C19920 * C121 + C19921 * C50670) * C50809) *
                C50950 +
            ((C22084 + C22085) * C50915 + (C22056 + C22057) * C50809) * C50951 +
            ((C22086 + C22087) * C50915 + (C22062 + C22063) * C50809) *
                C44486) *
               C1173) *
              C1514 +
          ((((C22083 + C22082) * C50915 + (C22047 + C22046) * C50809) * C50950 +
            ((C22081 + C22080) * C50915 + (C22041 + C22040) * C50809) * C50951 +
            ((C22696 + C22697) * C50915 + (C22698 + C22699) * C50809) *
                C44486) *
               C50930 -
           (C48269 * C44486 +
            ((C22039 + C22038) * C50809 + (C22079 + C22078) * C50915) * C50951 +
            ((C22033 + C22032) * C50809 + (C22077 + C22076) * C50915) *
                C50950) *
               C50945 -
           ((((C19772 * C6821 + C50611 * C6822) * C50670 +
              (C19772 * C6819 + C50611 * C6820) * C121) *
                 C50809 +
             (C39325 + C39324) * C50915) *
                C44486 +
            ((C22063 + C22062) * C50809 + (C22087 + C22086) * C50915) * C50951 +
            ((C22057 + C22056) * C50809 + (C22085 + C22084) * C50915) *
                C50950) *
               C1173) *
              C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[175] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19772 * C122 + C50611 * C129) * C253 +
                       (C19772 * C133 + C50611 * C143) * C50899 -
                       C19908 * C254 - C19909 * C50686) *
                          C50915 +
                      (C19908 * C253 + C19909 * C50899 - C19910 * C254 -
                       C19911 * C50686) *
                          C50809) *
                         C50950 +
                     ((C22852 + C22853 - C22854 - C22855) * C50915 +
                      (C22856 + C22857 - C22858 - C22859) * C50809) *
                         C50951 +
                     C48168 * C44486) *
                        C1277 +
                    (((C19914 * C254 -
                       ((C19772 * C134 + C50611 * C144) * C50899 +
                        (C19772 * C123 + C50611 * C130) * C253) +
                       C19915 * C50686) *
                          C50915 +
                      (C19916 * C254 - (C19915 * C50899 + C19914 * C253) +
                       C19917 * C50686) *
                          C50809) *
                         C50950 +
                     ((C23866 - (C23867 + C23868) + C23869) * C50915 +
                      (C23870 - (C23871 + C23872) + C23873) * C50809) *
                         C50951 +
                     ((C23874 - (C23875 + C23876) + C23877) * C50915 +
                      (C23878 - (C23879 + C23880) + C23881) * C50809) *
                         C44486) *
                        C50641) *
                       C1514 +
                   ((((C22854 - (C22853 + C22852) + C22855) * C50915 +
                      (C22858 - (C22857 + C22856) + C22859) * C50809) *
                         C50950 +
                     ((C22862 - (C22861 + C22860) + C22863) * C50915 +
                      (C22866 - (C22865 + C22864) + C22867) * C50809) *
                         C50951 +
                     ((C22868 - (C22869 + C22870) + C22871) * C50915 +
                      (C22872 - (C22873 + C22874) + C22875) * C50809) *
                         C44486) *
                        C1277 +
                    (((C23868 + C23867 - C23866 - C23869) * C50915 +
                      (C23872 + C23871 - C23870 - C23873) * C50809) *
                         C50950 +
                     ((C23876 + C23875 - C23874 - C23877) * C50915 +
                      (C23880 + C23879 - C23878 - C23881) * C50809) *
                         C50951 +
                     ((C40454 + C40453 - C40452 - C40455) * C50915 +
                      (C22690 * C253 + C22691 * C50899 -
                       (C19772 * C3482 + C50611 * C3488) * C254 -
                       (C19772 * C3486 + C50611 * C3494) * C50686) *
                          C50809) *
                         C44486) *
                        C50641) *
                       C50712)) /
                 (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19772 * C122 + C50611 * C129) * C121 +
              (C19772 * C133 + C50611 * C143) * C50670) *
                 C50915 +
             (C19908 * C121 + C19909 * C50670) * C50809) *
                C50950 +
            ((C22076 + C22077) * C50915 + (C22032 + C22033) * C50809) * C50951 +
            C48018 * C44486) *
               C1277 -
           (C48019 * C44486 +
            ((C22046 + C22047) * C50809 + (C22082 + C22083) * C50915) * C50951 +
            ((C19915 * C50670 + C19914 * C121) * C50809 +
             ((C19772 * C134 + C50611 * C144) * C50670 +
              (C19772 * C123 + C50611 * C130) * C121) *
                 C50915) *
                C50950) *
               C50641) *
              C50947 +
          ((((C22083 + C22082) * C50915 + (C22047 + C22046) * C50809) * C50950 +
            ((C22081 + C22080) * C50915 + (C22041 + C22040) * C50809) * C50951 +
            ((C22696 + C22697) * C50915 + (C22698 + C22699) * C50809) *
                C44486) *
               C50641 -
           (C48269 * C44486 +
            ((C22039 + C22038) * C50809 + (C22079 + C22078) * C50915) * C50951 +
            ((C22033 + C22032) * C50809 + (C22077 + C22076) * C50915) *
                C50950) *
               C1277) *
              C50936 +
          ((C48018 * C50950 +
            (C39693 * C50915 + (C22679 + C22678) * C50809) * C50951 +
            ((C23006 + C23007) * C50915 + (C22999 + C23000) * C50809) *
                C44486) *
               C1277 -
           ((((C19772 * C6183 + C50611 * C6185) * C50670 +
              (C19772 * C6179 + C50611 * C6181) * C121) *
                 C50809 +
             (C39705 + C39704) * C50915) *
                C44486 +
            ((C22699 + C22698) * C50809 + C39694 * C50915) * C50951 +
            C48019 * C50950) *
               C50641) *
              C1746)) /
        (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C121 +
             (C19772 * C133 + C50611 * C143) * C50670) *
                C50915 +
            (C19908 * C121 + C19909 * C50670) * C50809) *
               C50950 +
           ((C22076 + C22077) * C50915 + (C22032 + C22033) * C50809) * C50951 +
           (C22666 * C50915 + C22667 * C50809) * C44486) *
              C112 -
          ((C22668 * C50809 + C22669 * C50915) * C44486 +
           ((C22046 + C22047) * C50809 + (C22082 + C22083) * C50915) * C50951 +
           ((C19915 * C50670 + C19914 * C121) * C50809 +
            ((C19772 * C134 + C50611 * C144) * C50670 +
             (C19772 * C123 + C50611 * C130) * C121) *
                C50915) *
               C50950) *
              C113 +
          ((((C19772 * C124 + C50611 * C131) * C121 +
             (C19772 * C135 + C50611 * C145) * C50670) *
                C50915 +
            (C19920 * C121 + C19921 * C50670) * C50809) *
               C50950 +
           ((C22084 + C22085) * C50915 + (C22056 + C22057) * C50809) * C50951 +
           ((C22086 + C22087) * C50915 + (C22062 + C22063) * C50809) * C44486) *
              C114 -
          ((((C19772 * C977 + C50611 * C981) * C50670 +
             (C19772 * C969 + C50611 * C973) * C121) *
                C50809 +
            ((C19772 * C863 + C50611 * C869) * C50670 +
             (C19772 * C854 + C50611 * C859) * C121) *
                C50915) *
               C44486 +
           (((C19772 * C733 + C50611 * C745) * C50670 +
             (C19772 * C721 + C50611 * C729) * C121) *
                C50809 +
            ((C19772 * C391 + C50611 * C399) * C50670 +
             (C19772 * C381 + C50611 * C387) * C121) *
                C50915) *
               C50951 +
           (((C19772 * C265 + C50611 * C273) * C50670 +
             (C19772 * C255 + C50611 * C261) * C121) *
                C50809 +
            ((C19772 * C136 + C50611 * C146) * C50670 +
             (C19772 * C125 + C50611 * C132) * C121) *
                C50915) *
               C50950) *
              C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C506 +
             (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
             C19909 * C502 + C19910 * C508 + C19911 * C503) *
                C50915 +
            (C19908 * C506 + C19909 * C501 - C19910 * C507 - C19911 * C502 +
             C19912 * C508 + C19913 * C503) *
                C50809) *
               C50950 +
           ((C22484 + C22485 - C22486 - C22487 + C22488 + C22489) * C50915 +
            (C22490 + C22491 - C22492 - C22493 + C22494 + C22495) * C50809) *
               C50951 +
           ((C22496 + C22497 - C22498 - C22499 + C22500 + C22501) * C50915 +
            (C22502 + C22503 - C22504 - C22505 + C22506 + C22507) * C50809) *
               C44486) *
              C50892 +
          (((C19914 * C507 -
             ((C19772 * C134 + C50611 * C144) * C501 +
              (C19772 * C123 + C50611 * C130) * C506) +
             C19915 * C502 - C19916 * C508 - C19917 * C503) *
                C50915 +
            (C19916 * C507 - (C19915 * C501 + C19914 * C506) + C19917 * C502 -
             C19918 * C508 - C19919 * C503) *
                C50809) *
               C50950 +
           ((C20962 * C507 - (C22070 * C501 + C22071 * C506) + C20963 * C502 -
             C20964 * C508 - C20965 * C503) *
                C50915 +
            (C20964 * C507 - (C20963 * C501 + C20962 * C506) + C20965 * C502 -
             C20966 * C508 - C20967 * C503) *
                C50809) *
               C50951 +
           ((C21876 * C507 - (C22068 * C501 + C22069 * C506) + C21877 * C502 -
             C22238 * C508 - C22239 * C503) *
                C50915 +
            (C22238 * C507 - (C21877 * C501 + C21876 * C506) + C22239 * C502 -
             (C19772 * C3352 + C50611 * C3354) * C508 -
             (C19772 * C3356 + C50611 * C3358) * C503) *
                C50809) *
               C44486) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C253 +
             (C19772 * C133 + C50611 * C143) * C50899 - C19908 * C254 -
             C19909 * C50686) *
                C50915 +
            (C19908 * C253 + C19909 * C50899 - C19910 * C254 -
             C19911 * C50686) *
                C50809) *
               C50950 +
           ((C22852 + C22853 - C22854 - C22855) * C50915 +
            (C22856 + C22857 - C22858 - C22859) * C50809) *
               C50951 +
           (C22886 * C50915 + C22887 * C50809) * C44486) *
              C250 +
          (((C19914 * C254 -
             ((C19772 * C134 + C50611 * C144) * C50899 +
              (C19772 * C123 + C50611 * C130) * C253) +
             C19915 * C50686) *
                C50915 +
            (C19916 * C254 - (C19915 * C50899 + C19914 * C253) +
             C19917 * C50686) *
                C50809) *
               C50950 +
           ((C23866 - (C23867 + C23868) + C23869) * C50915 +
            (C23870 - (C23871 + C23872) + C23873) * C50809) *
               C50951 +
           ((C23874 - (C23875 + C23876) + C23877) * C50915 +
            (C23878 - (C23879 + C23880) + C23881) * C50809) *
               C44486) *
              C251 +
          ((((C19772 * C124 + C50611 * C131) * C253 +
             (C19772 * C135 + C50611 * C145) * C50899 - C19920 * C254 -
             C19921 * C50686) *
                C50915 +
            (C19920 * C253 + C19921 * C50899 - C19922 * C254 -
             C19923 * C50686) *
                C50809) *
               C50950 +
           ((C22072 * C253 + C22073 * C50899 - C21878 * C254 -
             C21879 * C50686) *
                C50915 +
            (C21878 * C253 + C21879 * C50899 - C31252 * C254 -
             C31253 * C50686) *
                C50809) *
               C50951 +
           ((C22074 * C253 + C22075 * C50899 - C21880 * C254 -
             C21881 * C50686) *
                C50915 +
            (C21880 * C253 + C21881 * C50899 -
             (C19772 * C3196 + C50611 * C3202) * C254 -
             (C19772 * C3201 + C50611 * C3205) * C50686) *
                C50809) *
               C44486) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C600 +
            (C19772 * C133 + C50611 * C143) * C595 - C19908 * C601 -
            C19909 * C596 + C19910 * C602 + C19911 * C597 - C19912 * C603 -
            C19913 * C598) *
               C50915 +
           (C19908 * C600 + C19909 * C595 - C19910 * C601 - C19911 * C596 +
            C19912 * C602 + C19913 * C597 - C20130 * C603 - C20131 * C598) *
               C50809) *
              C50950 +
          ((C22064 * C600 + C22065 * C595 - C20328 * C601 - C20329 * C596 +
            C20330 * C602 + C20331 * C597 - C20332 * C603 - C20333 * C598) *
               C50915 +
           (C20328 * C600 + C20329 * C595 - C20330 * C601 - C20331 * C596 +
            C20332 * C602 + C20333 * C597 - C20334 * C603 - C20335 * C598) *
               C50809) *
              C50951 +
          ((C22066 * C600 + C22067 * C595 - C20548 * C601 - C20549 * C596 +
            C20550 * C602 + C20551 * C597 - C20552 * C603 - C20553 * C598) *
               C50915 +
           (C20548 * C600 + C20549 * C595 - C20550 * C601 - C20551 * C596 +
            C20552 * C602 + C20553 * C597 -
            (C19772 * C20531 + C50611 * C20532) * C603 -
            (C19772 * C20533 + C50611 * C20534) * C598) *
               C50809) *
              C44486) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19772 * C122 + C50611 * C129) * C121 +
              (C19772 * C133 + C50611 * C143) * C50670) *
                 C50915 +
             (C19908 * C121 + C19909 * C50670) * C50809) *
                C50950 +
            ((C22076 + C22077) * C50915 + (C22032 + C22033) * C50809) * C50951 +
            (C22666 * C50915 + C22667 * C50809) * C44486) *
               C250 -
           ((C22668 * C50809 + C22669 * C50915) * C44486 +
            ((C22046 + C22047) * C50809 + (C22082 + C22083) * C50915) * C50951 +
            ((C19915 * C50670 + C19914 * C121) * C50809 +
             ((C19772 * C134 + C50611 * C144) * C50670 +
              (C19772 * C123 + C50611 * C130) * C121) *
                 C50915) *
                C50950) *
               C251 +
           ((((C19772 * C124 + C50611 * C131) * C121 +
              (C19772 * C135 + C50611 * C145) * C50670) *
                 C50915 +
             (C19920 * C121 + C19921 * C50670) * C50809) *
                C50950 +
            ((C22084 + C22085) * C50915 + (C22056 + C22057) * C50809) * C50951 +
            ((C22086 + C22087) * C50915 + (C22062 + C22063) * C50809) *
                C44486) *
               C252) *
              C50901 +
          ((((C22083 + C22082) * C50915 + (C22047 + C22046) * C50809) * C50950 +
            ((C22081 + C22080) * C50915 + (C22041 + C22040) * C50809) * C50951 +
            ((C22696 + C22697) * C50915 + (C22698 + C22699) * C50809) *
                C44486) *
               C251 -
           ((C22993 * C50809 + C22994 * C50915) * C44486 +
            ((C22039 + C22038) * C50809 + (C22079 + C22078) * C50915) * C50951 +
            ((C22033 + C22032) * C50809 + (C22077 + C22076) * C50915) *
                C50950) *
               C250 -
           ((((C19772 * C6821 + C50611 * C6822) * C50670 +
              (C19772 * C6819 + C50611 * C6820) * C121) *
                 C50809 +
             (C39325 + C39324) * C50915) *
                C44486 +
            ((C22063 + C22062) * C50809 + (C22087 + C22086) * C50915) * C50951 +
            ((C22057 + C22056) * C50809 + (C22085 + C22084) * C50915) *
                C50950) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C506 +
             (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
             C19909 * C502 + C19910 * C508 + C19911 * C503) *
                C50915 +
            (C19908 * C506 + C19909 * C501 - C19910 * C507 - C19911 * C502 +
             C19912 * C508 + C19913 * C503) *
                C50809) *
               C50950 +
           ((C22484 + C22485 - C22486 - C22487 + C22488 + C22489) * C50915 +
            (C22490 + C22491 - C22492 - C22493 + C22494 + C22495) * C50809) *
               C50951 +
           ((C22496 + C22497 - C22498 - C22499 + C22500 + C22501) * C50915 +
            (C22502 + C22503 - C22504 - C22505 + C22506 + C22507) * C50809) *
               C44486) *
              C50636 * C50901 +
          (((C22486 - (C22485 + C22484) + C22487 - C22488 - C22489) * C50915 +
            (C22492 - (C22491 + C22490) + C22493 - C22494 - C22495) * C50809) *
               C50950 +
           ((C22498 - (C22497 + C22496) + C22499 - C22500 - C22501) * C50915 +
            (C22504 - (C22503 + C22502) + C22505 - C22506 - C22507) * C50809) *
               C50951 +
           ((C39590 - (C39589 + C39588) + C39591 - C39592 - C39593) * C50915 +
            (C22518 * C507 - (C22517 * C501 + C22516 * C506) + C22519 * C502 -
             (C19772 * C20619 + C50611 * C20621) * C508 -
             (C19772 * C20620 + C50611 * C20622) * C503) *
                C50809) *
               C44486) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[180] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C19772 * C122 + C50611 * C129) * C1174 +
                      (C19772 * C133 + C50611 * C143) * C1169 - C19908 * C1175 -
                      C19909 * C50686) *
                         C2173 +
                     (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                      C19911 * C50686) *
                         C2174 +
                     (C19910 * C1174 + C19911 * C1169 - C19912 * C1175 -
                      C19913 * C50686) *
                         C2175) *
                        C33783 +
                    ((C23494 + C23495 - C23496 - C23497) * C2173 +
                     (C23498 + C23499 - C23500 - C23501) * C2174 +
                     (C32692 + C32693 - C32694 - C32695) * C2175) *
                        C50835) *
                       C50945 +
                   (((C19914 * C1175 -
                      ((C19772 * C134 + C50611 * C144) * C1169 +
                       (C19772 * C123 + C50611 * C130) * C1174) +
                      C19915 * C50686) *
                         C2173 +
                     (C19916 * C1175 - (C19915 * C1169 + C19914 * C1174) +
                      C19917 * C50686) *
                         C2174 +
                     (C19918 * C1175 - (C19917 * C1169 + C19916 * C1174) +
                      C19919 * C50686) *
                         C2175) *
                        C33783 +
                    ((C23510 - (C23511 + C23512) + C23513) * C2173 +
                     (C23514 - (C23515 + C23516) + C23517) * C2174 +
                     (C32696 - (C32697 + C32698) + C32699) * C2175) *
                        C50835) *
                       C50930 +
                   ((((C19772 * C124 + C50611 * C131) * C1174 +
                      (C19772 * C135 + C50611 * C145) * C1169 - C19920 * C1175 -
                      C19921 * C50686) *
                         C2173 +
                     (C19920 * C1174 + C19921 * C1169 - C19922 * C1175 -
                      C19923 * C50686) *
                         C2174 +
                     (C19922 * C1174 + C19923 * C1169 - C19924 * C1175 -
                      C19925 * C50686) *
                         C2175) *
                        C33783 +
                    ((C22072 * C1174 + C22073 * C1169 - C21878 * C1175 -
                      C21879 * C50686) *
                         C2173 +
                     (C21878 * C1174 + C21879 * C1169 - C31252 * C1175 -
                      C31253 * C50686) *
                         C2174 +
                     (C31252 * C1174 + C31253 * C1169 -
                      (C19772 * C3984 + C50611 * C3985) * C1175 -
                      (C19772 * C3986 + C50611 * C3987) * C50686) *
                         C2175) *
                        C50835) *
                       C1173) *
                  C50700) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                      C16984 * C130 + C16990 * C124 + C16985 * C131) *
                         C1174 +
                     (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                      C16984 * C144 + C16990 * C135 + C16985 * C145) *
                         C1169 -
                     (C17174 + C17175 + C17176) * C1175 -
                     (C17177 + C17178 + C17179) * C50686) *
                        C50759 * C33783 +
                    ((C34114 + C34115 + C34116) * C1174 +
                     (C34117 + C34118 + C34119) * C1169 -
                     (C17808 + C17807 + C17806) * C1175 -
                     (C17811 + C17810 + C17809) * C50686) *
                        C50759 * C50835) *
                       C50945 +
                   (((C17180 + C17181 + C17182) * C1175 -
                     ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                       C16984 * C145 + C16988 * C134 + C16983 * C144) *
                          C1169 +
                      (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                       C16984 * C131 + C16988 * C123 + C16983 * C130) *
                          C1174) +
                     (C17183 + C17184 + C17185) * C50686) *
                        C50759 * C33783 +
                    ((C18726 + C18725 + C18724) * C1175 -
                     ((C34120 + C34121 + C34122) * C1169 +
                      (C34123 + C34124 + C34125) * C1174) +
                     (C18729 + C18728 + C18727) * C50686) *
                        C50759 * C50835) *
                       C50930 +
                   (((C16988 * C124 + C16983 * C131 + C16989 * C125 +
                      C16984 * C132 + C16990 * C126 + C16985 * C138) *
                         C1174 +
                     (C16988 * C135 + C16983 * C145 + C16989 * C136 +
                      C16984 * C146 + C16990 * C137 + C16985 * C147) *
                         C1169 -
                     (C17186 + C17187 + C17188) * C1175 -
                     (C17189 + C17190 + C17191) * C50686) *
                        C50759 * C33783 +
                    ((C34126 + C34127 + C34128) * C1174 +
                     (C34129 + C34130 + C34131) * C1169 -
                     (C16990 * C1412 + C16985 * C1413 + C16989 * C721 +
                      C16984 * C729 + C16988 * C720 + C16983 * C728) *
                         C1175 -
                     (C16990 * C1414 + C16985 * C1415 + C16989 * C733 +
                      C16984 * C745 + C16988 * C732 + C16983 * C744) *
                         C50686) *
                        C50759 * C50835) *
                       C1173) *
                  C50700) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C19772 * C122 + C50611 * C129) * C1174 +
                     (C19772 * C133 + C50611 * C143) * C1169 - C19908 * C1175 -
                     C19909 * C50686) *
                        C50759 * C39117 +
                    (C23494 + C23495 - C23496 - C23497) * C50759 * C39118 +
                    C24550 * C50759 * C39119 +
                    (C24542 + C24541 - C24540 - C24543) * C50759 * C39120) *
                       C50945 +
                   ((C19914 * C1175 -
                     ((C19772 * C134 + C50611 * C144) * C1169 +
                      (C19772 * C123 + C50611 * C130) * C1174) +
                     C19915 * C50686) *
                        C50759 * C39117 +
                    (C23510 - (C23511 + C23512) + C23513) * C50759 * C39118 +
                    (C23518 - (C23519 + C23520) + C23521) * C50759 * C39119 +
                    (C22690 * C1175 - (C22689 * C1169 + C22688 * C1174) +
                     C22691 * C50686) *
                        C50759 * C39120) *
                       C50930 +
                   (((C19772 * C124 + C50611 * C131) * C1174 +
                     (C19772 * C135 + C50611 * C145) * C1169 - C19920 * C1175 -
                     C19921 * C50686) *
                        C50759 * C39117 +
                    (C22072 * C1174 + C22073 * C1169 - C21878 * C1175 -
                     C21879 * C50686) *
                        C50759 * C39118 +
                    (C22074 * C1174 + C22075 * C1169 - C21880 * C1175 -
                     C21881 * C50686) *
                        C50759 * C39119 +
                    (C39322 * C1174 + C39323 * C1169 -
                     (C19772 * C6819 + C50611 * C6820) * C1175 -
                     (C19772 * C6821 + C50611 * C6822) * C50686) *
                        C50759 * C39120) *
                       C1173) *
                  C50700) /
                     (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C1279 +
             (C19772 * C133 + C50611 * C143) * C50946 - C19908 * C1280 -
             C19909 * C50933 + C19910 * C1281 + C19911 * C1276) *
                C2173 +
            (C19908 * C1279 + C19909 * C50946 - C19910 * C1280 -
             C19911 * C50933 + C19912 * C1281 + C19913 * C1276) *
                C2174 +
            (C19910 * C1279 + C19911 * C50946 - C19912 * C1280 -
             C19913 * C50933 + C20130 * C1281 + C20131 * C1276) *
                C2175) *
               C33783 +
           ((C24368 + C24369 - C24370 - C24371 + C24372 + C24373) * C2173 +
            (C24374 + C24375 - C24376 - C24377 + C24378 + C24379) * C2174 +
            (C33530 + C33531 - C33532 - C33533 + C33534 + C33535) * C2175) *
               C50835) *
              C1277 +
          (((C19914 * C1280 -
             ((C19772 * C134 + C50611 * C144) * C50946 +
              (C19772 * C123 + C50611 * C130) * C1279) +
             C19915 * C50933 - C19916 * C1281 - C19917 * C1276) *
                C2173 +
            (C19916 * C1280 - (C19915 * C50946 + C19914 * C1279) +
             C19917 * C50933 - C19918 * C1281 - C19919 * C1276) *
                C2174 +
            (C19918 * C1280 - (C19917 * C50946 + C19916 * C1279) +
             C19919 * C50933 - C20132 * C1281 - C20133 * C1276) *
                C2175) *
               C33783 +
           ((C20962 * C1280 - (C22070 * C50946 + C22071 * C1279) +
             C20963 * C50933 - C20964 * C1281 - C20965 * C1276) *
                C2173 +
            (C20964 * C1280 - (C20963 * C50946 + C20962 * C1279) +
             C20965 * C50933 - C20966 * C1281 - C20967 * C1276) *
                C2174 +
            (C20966 * C1280 - (C20965 * C50946 + C20964 * C1279) +
             C20967 * C50933 - (C19772 * C2996 + C50611 * C3002) * C1281 -
             (C19772 * C3004 + C50611 * C3008) * C1276) *
                C2175) *
               C50835) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C1279 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C50946 -
            (C17174 + C17175 + C17176) * C1280 -
            (C17177 + C17178 + C17179) * C50933 +
            (C17508 + C17509 + C17510) * C1281 +
            (C17511 + C17512 + C17513) * C1276) *
               C50759 * C33783 +
           ((C34114 + C34115 + C34116) * C1279 +
            (C34117 + C34118 + C34119) * C50946 -
            (C17808 + C17807 + C17806) * C1280 -
            (C17811 + C17810 + C17809) * C50933 +
            (C17814 + C17813 + C17812) * C1281 +
            (C17817 + C17816 + C17815) * C1276) *
               C50759 * C50835) *
              C1277 +
          (((C17180 + C17181 + C17182) * C1280 -
            ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
              C16988 * C134 + C16983 * C144) *
                 C50946 +
             (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
              C16988 * C123 + C16983 * C130) *
                 C1279) +
            (C17183 + C17184 + C17185) * C50933 -
            (C17514 + C17515 + C17516) * C1281 -
            (C17517 + C17518 + C17519) * C1276) *
               C50759 * C33783 +
           ((C18726 + C18725 + C18724) * C1280 -
            ((C34120 + C34121 + C34122) * C50946 +
             (C34123 + C34124 + C34125) * C1279) +
            (C18729 + C18728 + C18727) * C50933 -
            (C16990 * C722 + C16985 * C734 + C16989 * C723 + C16984 * C735 +
             C16988 * C724 + C16983 * C736) *
                C1281 -
            (C16990 * C738 + C16985 * C746 + C16989 * C739 + C16984 * C747 +
             C16988 * C740 + C16983 * C748) *
                C1276) *
               C50759 * C50835) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C1279 +
            (C19772 * C133 + C50611 * C143) * C50946 - C19908 * C1280 -
            C19909 * C50933 + C19910 * C1281 + C19911 * C1276) *
               C50759 * C39117 +
           (C24368 + C24369 - C24370 - C24371 + C24372 + C24373) * C50759 *
               C39118 +
           (C24380 + C24381 - C24382 - C24383 + C24384 + C24385) * C50759 *
               C39119 +
           (C22693 * C1279 + C22692 * C50946 - C22516 * C1280 -
            C22517 * C50933 + C22518 * C1281 + C22519 * C1276) *
               C50759 * C39120) *
              C1277 +
          ((C19914 * C1280 -
            ((C19772 * C134 + C50611 * C144) * C50946 +
             (C19772 * C123 + C50611 * C130) * C1279) +
            C19915 * C50933 - C19916 * C1281 - C19917 * C1276) *
               C50759 * C39117 +
           (C20962 * C1280 - (C22070 * C50946 + C22071 * C1279) +
            C20963 * C50933 - C20964 * C1281 - C20965 * C1276) *
               C50759 * C39118 +
           (C21876 * C1280 - (C22068 * C50946 + C22069 * C1279) +
            C21877 * C50933 - C22238 * C1281 - C22239 * C1276) *
               C50759 * C39119 +
           (C22690 * C1280 - (C22689 * C50946 + C22688 * C1279) +
            C22691 * C50933 - (C19772 * C3482 + C50611 * C3488) * C1281 -
            (C19772 * C3486 + C50611 * C3494) * C1276) *
               C50759 * C39120) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[182] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19772 * C122 + C50611 * C129) * C1174 +
                       (C19772 * C133 + C50611 * C143) * C1169 -
                       C19908 * C1175 - C19909 * C50686) *
                          C2173 +
                      (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                       C19911 * C50686) *
                          C2174 +
                      (C19910 * C1174 + C19911 * C1169 - C19912 * C1175 -
                       C19913 * C50686) *
                          C2175) *
                         C33783 +
                     ((C23494 + C23495 - C23496 - C23497) * C2173 +
                      (C23498 + C23499 - C23500 - C23501) * C2174 +
                      (C32692 + C32693 - C32694 - C32695) * C2175) *
                         C50835) *
                        C1277 +
                    (((C19914 * C1175 -
                       ((C19772 * C134 + C50611 * C144) * C1169 +
                        (C19772 * C123 + C50611 * C130) * C1174) +
                       C19915 * C50686) *
                          C2173 +
                      (C19916 * C1175 - (C19915 * C1169 + C19914 * C1174) +
                       C19917 * C50686) *
                          C2174 +
                      (C19918 * C1175 - (C19917 * C1169 + C19916 * C1174) +
                       C19919 * C50686) *
                          C2175) *
                         C33783 +
                     ((C23510 - (C23511 + C23512) + C23513) * C2173 +
                      (C23514 - (C23515 + C23516) + C23517) * C2174 +
                      (C32696 - (C32697 + C32698) + C32699) * C2175) *
                         C50835) *
                        C50641) *
                       C50901 +
                   ((((C23496 - (C23495 + C23494) + C23497) * C2173 +
                      (C23500 - (C23499 + C23498) + C23501) * C2174 +
                      (C32694 - (C32693 + C32692) + C32695) * C2175) *
                         C33783 +
                     ((C23504 - (C23503 + C23502) + C23505) * C2173 +
                      (C23508 - (C23507 + C23506) + C23509) * C2174 +
                      (C33682 - (C33683 + C33684) + C33685) * C2175) *
                         C50835) *
                        C1277 +
                    (((C23512 + C23511 - C23510 - C23513) * C2173 +
                      (C23516 + C23515 - C23514 - C23517) * C2174 +
                      (C32698 + C32697 - C32696 - C32699) * C2175) *
                         C33783 +
                     ((C23520 + C23519 - C23518 - C23521) * C2173 +
                      (C23524 + C23523 - C23522 - C23525) * C2174 +
                      (C22238 * C1174 + C22239 * C1169 -
                       (C19772 * C3352 + C50611 * C3354) * C1175 -
                       (C19772 * C3356 + C50611 * C3358) * C50686) *
                          C2175) *
                         C50835) *
                        C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                       C16984 * C130 + C16990 * C124 + C16985 * C131) *
                          C1174 +
                      (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                       C16984 * C144 + C16990 * C135 + C16985 * C145) *
                          C1169 -
                      (C17174 + C17175 + C17176) * C1175 -
                      (C17177 + C17178 + C17179) * C50686) *
                         C50759 * C33783 +
                     ((C34114 + C34115 + C34116) * C1174 +
                      (C34117 + C34118 + C34119) * C1169 -
                      (C17808 + C17807 + C17806) * C1175 -
                      (C17811 + C17810 + C17809) * C50686) *
                         C50759 * C50835) *
                        C1277 +
                    (((C17180 + C17181 + C17182) * C1175 -
                      ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                        C16984 * C145 + C16988 * C134 + C16983 * C144) *
                           C1169 +
                       (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                        C16984 * C131 + C16988 * C123 + C16983 * C130) *
                           C1174) +
                      (C17183 + C17184 + C17185) * C50686) *
                         C50759 * C33783 +
                     ((C18726 + C18725 + C18724) * C1175 -
                      ((C34120 + C34121 + C34122) * C1169 +
                       (C34123 + C34124 + C34125) * C1174) +
                      (C18729 + C18728 + C18727) * C50686) *
                         C50759 * C50835) *
                        C50641) *
                       C50901 +
                   ((((C17806 + C17807 + C17808) * C1175 -
                      ((C34119 + C34118 + C34117) * C1169 +
                       (C34116 + C34115 + C34114) * C1174) +
                      (C17809 + C17810 + C17811) * C50686) *
                         C50759 * C33783 +
                     ((C18124 + C18123 + C18122) * C1175 -
                      ((C34698 + C34699 + C34700) * C1169 +
                       (C34701 + C34702 + C34703) * C1174) +
                      (C18127 + C18126 + C18125) * C50686) *
                         C50759 * C50835) *
                        C1277 +
                    (((C34125 + C34124 + C34123) * C1174 +
                      (C34122 + C34121 + C34120) * C1169 -
                      (C18724 + C18725 + C18726) * C1175 -
                      (C18727 + C18728 + C18729) * C50686) *
                         C50759 * C33783 +
                     ((C34692 + C34693 + C34694) * C1174 +
                      (C34695 + C34696 + C34697) * C1169 -
                      (C16990 * C969 + C16985 * C973 + C16989 * C970 +
                       C16984 * C974 + C16988 * C971 + C16983 * C975) *
                          C1175 -
                      (C16990 * C977 + C16985 * C981 + C16989 * C978 +
                       C16984 * C982 + C16988 * C979 + C16983 * C983) *
                          C50686) *
                         C50759 * C50835) *
                        C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C19772 * C122 + C50611 * C129) * C1174 +
                      (C19772 * C133 + C50611 * C143) * C1169 - C19908 * C1175 -
                      C19909 * C50686) *
                         C50759 * C39117 +
                     (C23494 + C23495 - C23496 - C23497) * C50759 * C39118 +
                     C24550 * C50759 * C39119 +
                     (C24542 + C24541 - C24540 - C24543) * C50759 * C39120) *
                        C1277 +
                    ((C19914 * C1175 -
                      ((C19772 * C134 + C50611 * C144) * C1169 +
                       (C19772 * C123 + C50611 * C130) * C1174) +
                      C19915 * C50686) *
                         C50759 * C39117 +
                     (C23510 - (C23511 + C23512) + C23513) * C50759 * C39118 +
                     (C23518 - (C23519 + C23520) + C23521) * C50759 * C39119 +
                     (C40220 - (C40221 + C40222) + C40223) * C50759 * C39120) *
                        C50641) *
                       C50901 +
                   (((C23496 - (C23495 + C23494) + C23497) * C50759 * C39117 +
                     (C23504 - (C23503 + C23502) + C23505) * C50759 * C39118 +
                     (C24540 - (C24541 + C24542) + C24543) * C50759 * C39119 +
                     (C22882 * C1175 - (C23004 * C1169 + C23003 * C1174) +
                      C22883 * C50686) *
                         C50759 * C39120) *
                        C1277 +
                    ((C23512 + C23511 - C23510 - C23513) * C50759 * C39117 +
                     (C23520 + C23519 - C23518 - C23521) * C50759 * C39118 +
                     (C40222 + C40221 - C40220 - C40223) * C50759 * C39119 +
                     (C39702 * C1174 + C39703 * C1169 -
                      (C19772 * C6179 + C50611 * C6181) * C1175 -
                      (C19772 * C6183 + C50611 * C6185) * C50686) *
                         C50759 * C39120) *
                        C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q));
    d2ee[183] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19772 * C122 + C50611 * C129) * C1174 +
                       (C19772 * C133 + C50611 * C143) * C1169 -
                       C19908 * C1175 - C19909 * C50686) *
                          C2173 +
                      (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                       C19911 * C50686) *
                          C2174 +
                      (C19910 * C1174 + C19911 * C1169 - C19912 * C1175 -
                       C19913 * C50686) *
                          C2175) *
                         C33783 +
                     ((C23494 + C23495 - C23496 - C23497) * C2173 +
                      (C23498 + C23499 - C23500 - C23501) * C2174 +
                      (C32692 + C32693 - C32694 - C32695) * C2175) *
                         C50835) *
                        C50892 +
                    (((C19914 * C1175 -
                       ((C19772 * C134 + C50611 * C144) * C1169 +
                        (C19772 * C123 + C50611 * C130) * C1174) +
                       C19915 * C50686) *
                          C2173 +
                      (C19916 * C1175 - (C19915 * C1169 + C19914 * C1174) +
                       C19917 * C50686) *
                          C2174 +
                      (C19918 * C1175 - (C19917 * C1169 + C19916 * C1174) +
                       C19919 * C50686) *
                          C2175) *
                         C33783 +
                     ((C23510 - (C23511 + C23512) + C23513) * C2173 +
                      (C23514 - (C23515 + C23516) + C23517) * C2174 +
                      (C32696 - (C32697 + C32698) + C32699) * C2175) *
                         C50835) *
                        C50641) *
                       C1514 +
                   ((((C23496 - (C23495 + C23494) + C23497) * C2173 +
                      (C23500 - (C23499 + C23498) + C23501) * C2174 +
                      (C32694 - (C32693 + C32692) + C32695) * C2175) *
                         C33783 +
                     ((C23504 - (C23503 + C23502) + C23505) * C2173 +
                      (C23508 - (C23507 + C23506) + C23509) * C2174 +
                      (C33682 - (C33683 + C33684) + C33685) * C2175) *
                         C50835) *
                        C50892 +
                    (((C23512 + C23511 - C23510 - C23513) * C2173 +
                      (C23516 + C23515 - C23514 - C23517) * C2174 +
                      (C32698 + C32697 - C32696 - C32699) * C2175) *
                         C33783 +
                     ((C23520 + C23519 - C23518 - C23521) * C2173 +
                      (C23524 + C23523 - C23522 - C23525) * C2174 +
                      (C22238 * C1174 + C22239 * C1169 -
                       (C19772 * C3352 + C50611 * C3354) * C1175 -
                       (C19772 * C3356 + C50611 * C3358) * C50686) *
                          C2175) *
                         C50835) *
                        C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                       C16984 * C130 + C16990 * C124 + C16985 * C131) *
                          C1174 +
                      (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                       C16984 * C144 + C16990 * C135 + C16985 * C145) *
                          C1169 -
                      (C17174 + C17175 + C17176) * C1175 -
                      (C17177 + C17178 + C17179) * C50686) *
                         C50759 * C33783 +
                     ((C34114 + C34115 + C34116) * C1174 +
                      (C34117 + C34118 + C34119) * C1169 -
                      (C17808 + C17807 + C17806) * C1175 -
                      (C17811 + C17810 + C17809) * C50686) *
                         C50759 * C50835) *
                        C50892 +
                    (((C17180 + C17181 + C17182) * C1175 -
                      ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                        C16984 * C145 + C16988 * C134 + C16983 * C144) *
                           C1169 +
                       (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                        C16984 * C131 + C16988 * C123 + C16983 * C130) *
                           C1174) +
                      (C17183 + C17184 + C17185) * C50686) *
                         C50759 * C33783 +
                     ((C18726 + C18725 + C18724) * C1175 -
                      ((C34120 + C34121 + C34122) * C1169 +
                       (C34123 + C34124 + C34125) * C1174) +
                      (C18729 + C18728 + C18727) * C50686) *
                         C50759 * C50835) *
                        C50641) *
                       C1514 +
                   ((((C17806 + C17807 + C17808) * C1175 -
                      ((C34119 + C34118 + C34117) * C1169 +
                       (C34116 + C34115 + C34114) * C1174) +
                      (C17809 + C17810 + C17811) * C50686) *
                         C50759 * C33783 +
                     ((C18124 + C18123 + C18122) * C1175 -
                      ((C34698 + C34699 + C34700) * C1169 +
                       (C34701 + C34702 + C34703) * C1174) +
                      (C18127 + C18126 + C18125) * C50686) *
                         C50759 * C50835) *
                        C50892 +
                    (((C34125 + C34124 + C34123) * C1174 +
                      (C34122 + C34121 + C34120) * C1169 -
                      (C18724 + C18725 + C18726) * C1175 -
                      (C18727 + C18728 + C18729) * C50686) *
                         C50759 * C33783 +
                     ((C34692 + C34693 + C34694) * C1174 +
                      (C34695 + C34696 + C34697) * C1169 -
                      (C16990 * C969 + C16985 * C973 + C16989 * C970 +
                       C16984 * C974 + C16988 * C971 + C16983 * C975) *
                          C1175 -
                      (C16990 * C977 + C16985 * C981 + C16989 * C978 +
                       C16984 * C982 + C16988 * C979 + C16983 * C983) *
                          C50686) *
                         C50759 * C50835) *
                        C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C19772 * C122 + C50611 * C129) * C1174 +
                      (C19772 * C133 + C50611 * C143) * C1169 - C19908 * C1175 -
                      C19909 * C50686) *
                         C50759 * C39117 +
                     (C23494 + C23495 - C23496 - C23497) * C50759 * C39118 +
                     C24550 * C50759 * C39119 +
                     (C24542 + C24541 - C24540 - C24543) * C50759 * C39120) *
                        C50892 +
                    ((C19914 * C1175 -
                      ((C19772 * C134 + C50611 * C144) * C1169 +
                       (C19772 * C123 + C50611 * C130) * C1174) +
                      C19915 * C50686) *
                         C50759 * C39117 +
                     (C23510 - (C23511 + C23512) + C23513) * C50759 * C39118 +
                     (C23518 - (C23519 + C23520) + C23521) * C50759 * C39119 +
                     (C40220 - (C40221 + C40222) + C40223) * C50759 * C39120) *
                        C50641) *
                       C1514 +
                   (((C23496 - (C23495 + C23494) + C23497) * C50759 * C39117 +
                     (C23504 - (C23503 + C23502) + C23505) * C50759 * C39118 +
                     (C24540 - (C24541 + C24542) + C24543) * C50759 * C39119 +
                     (C22882 * C1175 - (C23004 * C1169 + C23003 * C1174) +
                      C22883 * C50686) *
                         C50759 * C39120) *
                        C50892 +
                    ((C23512 + C23511 - C23510 - C23513) * C50759 * C39117 +
                     (C23520 + C23519 - C23518 - C23521) * C50759 * C39118 +
                     (C40222 + C40221 - C40220 - C40223) * C50759 * C39119 +
                     (C39702 * C1174 + C39703 * C1169 -
                      (C19772 * C6179 + C50611 * C6181) * C1175 -
                      (C19772 * C6183 + C50611 * C6185) * C50686) *
                         C50759 * C39120) *
                        C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C1279 +
             (C19772 * C133 + C50611 * C143) * C50946 - C19908 * C1280 -
             C19909 * C50933 + C19910 * C1281 + C19911 * C1276) *
                C2173 +
            (C19908 * C1279 + C19909 * C50946 - C19910 * C1280 -
             C19911 * C50933 + C19912 * C1281 + C19913 * C1276) *
                C2174 +
            (C19910 * C1279 + C19911 * C50946 - C19912 * C1280 -
             C19913 * C50933 + C20130 * C1281 + C20131 * C1276) *
                C2175) *
               C33783 +
           ((C24368 + C24369 - C24370 - C24371 + C24372 + C24373) * C2173 +
            (C24374 + C24375 - C24376 - C24377 + C24378 + C24379) * C2174 +
            (C33530 + C33531 - C33532 - C33533 + C33534 + C33535) * C2175) *
               C50835) *
              C50636 * C1514 +
          (((C24370 - (C24369 + C24368) + C24371 - C24372 - C24373) * C2173 +
            (C24376 - (C24375 + C24374) + C24377 - C24378 - C24379) * C2174 +
            (C33532 - (C33531 + C33530) + C33533 - C33534 - C33535) * C2175) *
               C33783 +
           ((C24382 - (C24381 + C24380) + C24383 - C24384 - C24385) * C2173 +
            (C24388 - (C24387 + C24386) + C24389 - C24390 - C24391) * C2174 +
            (C20552 * C1280 - (C20551 * C50946 + C20550 * C1279) +
             C20553 * C50933 - (C19772 * C20531 + C50611 * C20532) * C1281 -
             (C19772 * C20533 + C50611 * C20534) * C1276) *
                C2175) *
               C50835) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C1279 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C50946 -
            (C17174 + C17175 + C17176) * C1280 -
            (C17177 + C17178 + C17179) * C50933 +
            (C17508 + C17509 + C17510) * C1281 +
            (C17511 + C17512 + C17513) * C1276) *
               C50759 * C33783 +
           ((C34114 + C34115 + C34116) * C1279 +
            (C34117 + C34118 + C34119) * C50946 -
            (C17808 + C17807 + C17806) * C1280 -
            (C17811 + C17810 + C17809) * C50933 +
            (C17814 + C17813 + C17812) * C1281 +
            (C17817 + C17816 + C17815) * C1276) *
               C50759 * C50835) *
              C50636 * C1514 +
          (((C17806 + C17807 + C17808) * C1280 -
            ((C34119 + C34118 + C34117) * C50946 +
             (C34116 + C34115 + C34114) * C1279) +
            (C17809 + C17810 + C17811) * C50933 -
            (C17812 + C17813 + C17814) * C1281 -
            (C17815 + C17816 + C17817) * C1276) *
               C50759 * C33783 +
           ((C18124 + C18123 + C18122) * C1280 -
            ((C34698 + C34699 + C34700) * C50946 +
             (C34701 + C34702 + C34703) * C1279) +
            (C18127 + C18126 + C18125) * C50933 -
            (C16990 * C3196 + C16985 * C3202 + C16989 * C3195 + C16984 * C3198 +
             C16988 * C3194 + C16983 * C3197) *
                C1281 -
            (C16990 * C3201 + C16985 * C3205 + C16989 * C3200 + C16984 * C3204 +
             C16988 * C3199 + C16983 * C3203) *
                C1276) *
               C50759 * C50835) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C1279 +
            (C19772 * C133 + C50611 * C143) * C50946 - C19908 * C1280 -
            C19909 * C50933 + C19910 * C1281 + C19911 * C1276) *
               C50759 * C39117 +
           (C24368 + C24369 - C24370 - C24371 + C24372 + C24373) * C50759 *
               C39118 +
           (C24380 + C24381 - C24382 - C24383 + C24384 + C24385) * C50759 *
               C39119 +
           (C40782 + C40783 - C40784 - C40785 + C40786 + C40787) * C50759 *
               C39120) *
              C50636 * C1514 +
          ((C24370 - (C24369 + C24368) + C24371 - C24372 - C24373) * C50759 *
               C39117 +
           (C24382 - (C24381 + C24380) + C24383 - C24384 - C24385) * C50759 *
               C39118 +
           (C40784 - (C40783 + C40782) + C40785 - C40786 - C40787) * C50759 *
               C39119 +
           (C22882 * C1280 - (C23004 * C50946 + C23003 * C1279) +
            C22883 * C50933 - (C19772 * C22847 + C50611 * C22848) * C1281 -
            (C19772 * C22849 + C50611 * C22850) * C1276) *
               C50759 * C39120) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C19772 * C122 + C50611 * C129) * C1174 +
                      (C19772 * C133 + C50611 * C143) * C1169 - C19908 * C1175 -
                      C19909 * C50686) *
                         C2173 +
                     (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                      C19911 * C50686) *
                         C2174 +
                     (C19910 * C1174 + C19911 * C1169 - C19912 * C1175 -
                      C19913 * C50686) *
                         C2175) *
                        C33783 +
                    ((C23494 + C23495 - C23496 - C23497) * C2173 +
                     (C23498 + C23499 - C23500 - C23501) * C2174 +
                     (C32692 + C32693 - C32694 - C32695) * C2175) *
                        C50835) *
                       C50636 * C50947 +
                   (((C23496 - (C23495 + C23494) + C23497) * C2173 +
                     (C23500 - (C23499 + C23498) + C23501) * C2174 +
                     (C32694 - (C32693 + C32692) + C32695) * C2175) *
                        C33783 +
                    ((C23504 - (C23503 + C23502) + C23505) * C2173 +
                     (C23508 - (C23507 + C23506) + C23509) * C2174 +
                     (C33682 - (C33683 + C33684) + C33685) * C2175) *
                        C50835) *
                       C50636 * C50936 +
                   ((C24550 * C2173 + C24551 * C2174 +
                     (C33684 + C33683 - C33682 - C33685) * C2175) *
                        C33783 +
                    ((C24542 + C24541 - C24540 - C24543) * C2173 +
                     (C24546 + C24545 - C24544 - C24547) * C2174 +
                     (C22518 * C1174 + C22519 * C1169 -
                      (C19772 * C20619 + C50611 * C20621) * C1175 -
                      (C19772 * C20620 + C50611 * C20622) * C50686) *
                         C2175) *
                        C50835) *
                       C50636 * C1746)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                      C16984 * C130 + C16990 * C124 + C16985 * C131) *
                         C1174 +
                     (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                      C16984 * C144 + C16990 * C135 + C16985 * C145) *
                         C1169 -
                     (C17174 + C17175 + C17176) * C1175 -
                     (C17177 + C17178 + C17179) * C50686) *
                        C50759 * C33783 +
                    ((C34114 + C34115 + C34116) * C1174 +
                     (C34117 + C34118 + C34119) * C1169 -
                     (C17808 + C17807 + C17806) * C1175 -
                     (C17811 + C17810 + C17809) * C50686) *
                        C50759 * C50835) *
                       C50636 * C50947 +
                   (((C17806 + C17807 + C17808) * C1175 -
                     ((C34119 + C34118 + C34117) * C1169 +
                      (C34116 + C34115 + C34114) * C1174) +
                     (C17809 + C17810 + C17811) * C50686) *
                        C50759 * C33783 +
                    ((C18124 + C18123 + C18122) * C1175 -
                     ((C34698 + C34699 + C34700) * C1169 +
                      (C34701 + C34702 + C34703) * C1174) +
                     (C18127 + C18126 + C18125) * C50686) *
                        C50759 * C50835) *
                       C50636 * C50936 +
                   (((C34703 + C34702 + C34701) * C1174 +
                     (C34700 + C34699 + C34698) * C1169 -
                     (C18122 + C18123 + C18124) * C1175 -
                     (C18125 + C18126 + C18127) * C50686) *
                        C50759 * C33783 +
                    ((C34960 + C34961 + C34962) * C1174 +
                     (C34963 + C34964 + C34965) * C1169 -
                     (C16990 * C6819 + C16985 * C6820 + C16989 * C3484 +
                      C16984 * C3492 + C16988 * C3485 + C16983 * C3493) *
                         C1175 -
                     (C16990 * C6821 + C16985 * C6822 + C16989 * C3490 +
                      C16984 * C3496 + C16988 * C3491 + C16983 * C3497) *
                         C50686) *
                        C50759 * C50835) *
                       C50636 * C1746)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C19772 * C122 + C50611 * C129) * C1174 +
                     (C19772 * C133 + C50611 * C143) * C1169 - C19908 * C1175 -
                     C19909 * C50686) *
                        C50759 * C39117 +
                    (C23494 + C23495 - C23496 - C23497) * C50759 * C39118 +
                    C40886 * C39119 + C40894 * C39120) *
                       C50636 * C50947 +
                   ((C23496 - (C23495 + C23494) + C23497) * C50759 * C39117 +
                    (C23504 - (C23503 + C23502) + C23505) * C50759 * C39118 +
                    (C24540 - (C24541 + C24542) + C24543) * C50759 * C39119 +
                    (C40888 - (C40889 + C40890) + C40891) * C50759 * C39120) *
                       C50636 * C50936 +
                   (C40886 * C39117 + C40894 * C39118 +
                    (C40890 + C40889 - C40888 - C40891) * C50759 * C39119 +
                    (C39890 * C1174 + C39891 * C1169 -
                     (C19772 * C22988 + C50611 * C22990) * C1175 -
                     (C19772 * C22989 + C50611 * C22991) * C50686) *
                        C50759 * C39120) *
                       C50636 * C1746)) /
                     (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
                 C16990 * C124 + C16985 * C131) *
                    C121 +
                (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
                 C16990 * C135 + C16985 * C145) *
                    C50670) *
                   C50759 * C33783 +
               ((C16988 * C383 + C16983 * C394 + C16989 * C379 + C16984 * C385 +
                 C16990 * C380 + C16985 * C386) *
                    C121 +
                (C16988 * C393 + C16983 * C401 + C16989 * C389 + C16984 * C397 +
                 C16990 * C390 + C16985 * C398) *
                    C50670) *
                   C50759 * C50835) *
                  C112 -
              (((C16990 * C391 + C16985 * C399 + C16989 * C390 + C16984 * C398 +
                 C16988 * C389 + C16983 * C397) *
                    C50670 +
                (C16990 * C381 + C16985 * C387 + C16989 * C380 + C16984 * C386 +
                 C16988 * C379 + C16983 * C385) *
                    C121) *
                   C50759 * C50835 +
               ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
                 C16988 * C134 + C16983 * C144) *
                    C50670 +
                (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
                 C16988 * C123 + C16983 * C130) *
                    C121) *
                   C50759 * C33783) *
                  C113 +
              (((C16988 * C124 + C16983 * C131 + C16989 * C125 + C16984 * C132 +
                 C16990 * C126 + C16985 * C138) *
                    C121 +
                (C16988 * C135 + C16983 * C145 + C16989 * C136 + C16984 * C146 +
                 C16990 * C137 + C16985 * C147) *
                    C50670) *
                   C50759 * C33783 +
               ((C16988 * C380 + C16983 * C386 + C16989 * C381 + C16984 * C387 +
                 C16990 * C382 + C16985 * C388) *
                    C121 +
                (C16988 * C390 + C16983 * C398 + C16989 * C391 + C16984 * C399 +
                 C16990 * C392 + C16985 * C400) *
                    C50670) *
                   C50759 * C50835) *
                  C114 -
              (((C16990 * C395 + C16985 * C402 + C16989 * C392 + C16984 * C400 +
                 C16988 * C391 + C16983 * C399) *
                    C50670 +
                (C16990 * C384 + C16985 * C396 + C16989 * C382 + C16984 * C388 +
                 C16988 * C381 + C16983 * C387) *
                    C121) *
                   C50759 * C50835 +
               ((C16990 * C140 + C16985 * C148 + C16989 * C137 + C16984 * C147 +
                 C16988 * C136 + C16983 * C146) *
                    C50670 +
                (C16990 * C127 + C16985 * C139 + C16989 * C126 + C16984 * C138 +
                 C16988 * C125 + C16983 * C132) *
                    C121) *
                   C50759 * C33783) *
                  C115) *
             C50700 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
                 C16990 * C124 + C16985 * C131) *
                    C506 +
                (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
                 C16990 * C135 + C16985 * C145) *
                    C501 -
                (C17174 + C17175 + C17176) * C507 -
                (C17177 + C17178 + C17179) * C502 +
                (C17508 + C17509 + C17510) * C508 +
                (C17511 + C17512 + C17513) * C503) *
                   C50759 * C33783 +
               ((C34114 + C34115 + C34116) * C506 +
                (C34117 + C34118 + C34119) * C501 -
                (C17808 + C17807 + C17806) * C507 -
                (C17811 + C17810 + C17809) * C502 +
                (C17814 + C17813 + C17812) * C508 +
                (C17817 + C17816 + C17815) * C503) *
                   C50759 * C50835) *
                  C50892 +
              (((C17180 + C17181 + C17182) * C507 -
                ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                  C16984 * C145 + C16988 * C134 + C16983 * C144) *
                     C501 +
                 (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                  C16984 * C131 + C16988 * C123 + C16983 * C130) *
                     C506) +
                (C17183 + C17184 + C17185) * C502 -
                (C17514 + C17515 + C17516) * C508 -
                (C17517 + C17518 + C17519) * C503) *
                   C50759 * C33783 +
               ((C18726 + C18725 + C18724) * C507 -
                ((C34120 + C34121 + C34122) * C501 +
                 (C34123 + C34124 + C34125) * C506) +
                (C18729 + C18728 + C18727) * C502 -
                (C16990 * C722 + C16985 * C734 + C16989 * C723 + C16984 * C735 +
                 C16988 * C724 + C16983 * C736) *
                    C508 -
                (C16990 * C738 + C16985 * C746 + C16989 * C739 + C16984 * C747 +
                 C16988 * C740 + C16983 * C748) *
                    C503) *
                   C50759 * C50835) *
                  C50641) *
             C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
              C16990 * C124 + C16985 * C131) *
                 C121 +
             (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
              C16990 * C135 + C16985 * C145) *
                 C50670) *
                C50759 * C33783 +
            ((C34114 + C34115 + C34116) * C121 +
             (C34117 + C34118 + C34119) * C50670) *
                C50759 * C50835) *
               C50892 -
           (((C34120 + C34121 + C34122) * C50670 +
             (C34123 + C34124 + C34125) * C121) *
                C50759 * C50835 +
            ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
              C16988 * C134 + C16983 * C144) *
                 C50670 +
             (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
              C16988 * C123 + C16983 * C130) *
                 C121) *
                C50759 * C33783) *
               C50641) *
              C848 +
          ((((C34125 + C34124 + C34123) * C121 +
             (C34122 + C34121 + C34120) * C50670) *
                C50759 * C33783 +
            ((C34692 + C34693 + C34694) * C121 +
             (C34695 + C34696 + C34697) * C50670) *
                C50759 * C50835) *
               C50641 -
           (((C34698 + C34699 + C34700) * C50670 +
             (C34701 + C34702 + C34703) * C121) *
                C50759 * C50835 +
            ((C34119 + C34118 + C34117) * C50670 +
             (C34116 + C34115 + C34114) * C121) *
                C50759 * C33783) *
               C50892) *
              C849 +
          ((((C34703 + C34702 + C34701) * C121 +
             (C34700 + C34699 + C34698) * C50670) *
                C50759 * C33783 +
            ((C16988 * C1058 + C16983 * C1066 + C16989 * C1057 +
              C16984 * C1065 + C16990 * C1056 + C16985 * C1064) *
                 C121 +
             (C16988 * C1062 + C16983 * C1070 + C16989 * C1061 +
              C16984 * C1069 + C16990 * C1060 + C16985 * C1068) *
                 C50670) *
                C50759 * C50835) *
               C50892 -
           (((C16990 * C1059 + C16985 * C1067 + C16989 * C1060 +
              C16984 * C1068 + C16988 * C1061 + C16983 * C1069) *
                 C50670 +
             (C16990 * C1055 + C16985 * C1063 + C16989 * C1056 +
              C16984 * C1064 + C16988 * C1057 + C16983 * C1065) *
                 C121) *
                C50759 * C50835 +
            ((C34697 + C34696 + C34695) * C50670 +
             (C34694 + C34693 + C34692) * C121) *
                C50759 * C33783) *
               C50641) *
              C850)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C121 +
             (C19772 * C133 + C50611 * C143) * C50670) *
                C2173 +
            (C19908 * C121 + C19909 * C50670) * C2174 +
            (C19910 * C121 + C19911 * C50670) * C2175) *
               C33783 +
           ((C22076 + C22077) * C2173 + (C22032 + C22033) * C2174 +
            (C31400 + C31401) * C2175) *
               C50835) *
              C112 -
          (((C31402 + C31403) * C2175 + (C22046 + C22047) * C2174 +
            (C22082 + C22083) * C2173) *
               C50835 +
           ((C19917 * C50670 + C19916 * C121) * C2175 +
            (C19915 * C50670 + C19914 * C121) * C2174 +
            ((C19772 * C134 + C50611 * C144) * C50670 +
             (C19772 * C123 + C50611 * C130) * C121) *
                C2173) *
               C33783) *
              C113 +
          ((((C19772 * C124 + C50611 * C131) * C121 +
             (C19772 * C135 + C50611 * C145) * C50670) *
                C2173 +
            (C19920 * C121 + C19921 * C50670) * C2174 +
            (C19922 * C121 + C19923 * C50670) * C2175) *
               C33783 +
           ((C22084 + C22085) * C2173 + (C22056 + C22057) * C2174 +
            (C31404 + C31405) * C2175) *
               C50835) *
              C114 -
          ((((C19772 * C738 + C50611 * C746) * C50670 +
             (C19772 * C722 + C50611 * C734) * C121) *
                C2175 +
            ((C19772 * C733 + C50611 * C745) * C50670 +
             (C19772 * C721 + C50611 * C729) * C121) *
                C2174 +
            ((C19772 * C391 + C50611 * C399) * C50670 +
             (C19772 * C381 + C50611 * C387) * C121) *
                C2173) *
               C50835 +
           (((C19772 * C521 + C50611 * C527) * C50670 +
             (C19772 * C512 + C50611 * C517) * C121) *
                C2175 +
            ((C19772 * C265 + C50611 * C273) * C50670 +
             (C19772 * C255 + C50611 * C261) * C121) *
                C2174 +
            ((C19772 * C136 + C50611 * C146) * C50670 +
             (C19772 * C125 + C50611 * C132) * C121) *
                C2173) *
               C33783) *
              C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C506 +
             (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
             C19909 * C502 + C19910 * C508 + C19911 * C503) *
                C2173 +
            (C19908 * C506 + C19909 * C501 - C19910 * C507 - C19911 * C502 +
             C19912 * C508 + C19913 * C503) *
                C2174 +
            (C19910 * C506 + C19911 * C501 - C19912 * C507 - C19913 * C502 +
             C20130 * C508 + C20131 * C503) *
                C2175) *
               C33783 +
           ((C22484 + C22485 - C22486 - C22487 + C22488 + C22489) * C2173 +
            (C22490 + C22491 - C22492 - C22493 + C22494 + C22495) * C2174 +
            (C31796 + C31797 - C31798 - C31799 + C31800 + C31801) * C2175) *
               C50835) *
              C50892 +
          (((C19914 * C507 -
             ((C19772 * C134 + C50611 * C144) * C501 +
              (C19772 * C123 + C50611 * C130) * C506) +
             C19915 * C502 - C19916 * C508 - C19917 * C503) *
                C2173 +
            (C19916 * C507 - (C19915 * C501 + C19914 * C506) + C19917 * C502 -
             C19918 * C508 - C19919 * C503) *
                C2174 +
            (C19918 * C507 - (C19917 * C501 + C19916 * C506) + C19919 * C502 -
             C20132 * C508 - C20133 * C503) *
                C2175) *
               C33783 +
           ((C20962 * C507 - (C22070 * C501 + C22071 * C506) + C20963 * C502 -
             C20964 * C508 - C20965 * C503) *
                C2173 +
            (C20964 * C507 - (C20963 * C501 + C20962 * C506) + C20965 * C502 -
             C20966 * C508 - C20967 * C503) *
                C2174 +
            (C20966 * C507 - (C20965 * C501 + C20964 * C506) + C20967 * C502 -
             (C19772 * C2996 + C50611 * C3002) * C508 -
             (C19772 * C3004 + C50611 * C3008) * C503) *
                C2175) *
               C50835) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((((C19772 * C122 + C50611 * C129) * C121 +
              (C19772 * C133 + C50611 * C143) * C50670) *
                 C2173 +
             (C19908 * C121 + C19909 * C50670) * C2174 +
             (C19910 * C121 + C19911 * C50670) * C2175) *
                C33783 +
            ((C22076 + C22077) * C2173 + (C22032 + C22033) * C2174 +
             (C31400 + C31401) * C2175) *
                C50835) *
               C50892 -
           (((C31402 + C31403) * C2175 + (C22046 + C22047) * C2174 +
             (C22082 + C22083) * C2173) *
                C50835 +
            ((C19917 * C50670 + C19916 * C121) * C2175 +
             (C19915 * C50670 + C19914 * C121) * C2174 +
             ((C19772 * C134 + C50611 * C144) * C50670 +
              (C19772 * C123 + C50611 * C130) * C121) *
                 C2173) *
                C33783) *
               C50641) *
              C848 +
          ((((C22083 + C22082) * C2173 + (C22047 + C22046) * C2174 +
             (C31403 + C31402) * C2175) *
                C33783 +
            ((C22081 + C22080) * C2173 + (C22041 + C22040) * C2174 +
             (C31948 + C31949) * C2175) *
                C50835) *
               C50641 -
           (((C31950 + C31951) * C2175 + (C22039 + C22038) * C2174 +
             (C22079 + C22078) * C2173) *
                C50835 +
            ((C31401 + C31400) * C2175 + (C22033 + C22032) * C2174 +
             (C22077 + C22076) * C2173) *
                C33783) *
               C50892) *
              C849 +
          (((C22666 * C2173 + C22667 * C2174 + (C31951 + C31950) * C2175) *
                C33783 +
            ((C22701 + C22700) * C2173 + (C22679 + C22678) * C2174 +
             (C32204 + C32205) * C2175) *
                C50835) *
               C50892 -
           ((((C19772 * C3486 + C50611 * C3494) * C50670 +
              (C19772 * C3482 + C50611 * C3488) * C121) *
                 C2175 +
             (C22699 + C22698) * C2174 + (C22697 + C22696) * C2173) *
                C50835 +
            ((C31949 + C31948) * C2175 + C22668 * C2174 + C22669 * C2173) *
                C33783) *
               C50641) *
              C850)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C121 +
            (C19772 * C133 + C50611 * C143) * C50670) *
               C50759 * C39117 +
           (C22076 + C22077) * C50759 * C39118 + C22666 * C50759 * C39119 +
           (C22701 + C22700) * C50759 * C39120) *
              C112 -
          ((C22697 + C22696) * C50759 * C39120 + C22669 * C50759 * C39119 +
           (C22082 + C22083) * C50759 * C39118 +
           ((C19772 * C134 + C50611 * C144) * C50670 +
            (C19772 * C123 + C50611 * C130) * C121) *
               C50759 * C39117) *
              C113 +
          (((C19772 * C124 + C50611 * C131) * C121 +
            (C19772 * C135 + C50611 * C145) * C50670) *
               C50759 * C39117 +
           (C22084 + C22085) * C50759 * C39118 +
           (C22086 + C22087) * C50759 * C39119 +
           ((C19772 * C1056 + C50611 * C1064) * C121 +
            (C19772 * C1060 + C50611 * C1068) * C50670) *
               C50759 * C39120) *
              C114 -
          (((C19772 * C1059 + C50611 * C1067) * C50670 +
            (C19772 * C1055 + C50611 * C1063) * C121) *
               C50759 * C39120 +
           ((C19772 * C863 + C50611 * C869) * C50670 +
            (C19772 * C854 + C50611 * C859) * C121) *
               C50759 * C39119 +
           ((C19772 * C391 + C50611 * C399) * C50670 +
            (C19772 * C381 + C50611 * C387) * C121) *
               C50759 * C39118 +
           ((C19772 * C136 + C50611 * C146) * C50670 +
            (C19772 * C125 + C50611 * C132) * C121) *
               C50759 * C39117) *
              C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C506 +
            (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
            C19909 * C502 + C19910 * C508 + C19911 * C503) *
               C50759 * C39117 +
           (C22484 + C22485 - C22486 - C22487 + C22488 + C22489) * C50759 *
               C39118 +
           (C22496 + C22497 - C22498 - C22499 + C22500 + C22501) * C50759 *
               C39119 +
           (C22693 * C506 + C22692 * C501 - C22516 * C507 - C22517 * C502 +
            C22518 * C508 + C22519 * C503) *
               C50759 * C39120) *
              C50892 +
          ((C19914 * C507 -
            ((C19772 * C134 + C50611 * C144) * C501 +
             (C19772 * C123 + C50611 * C130) * C506) +
            C19915 * C502 - C19916 * C508 - C19917 * C503) *
               C50759 * C39117 +
           (C20962 * C507 - (C22070 * C501 + C22071 * C506) + C20963 * C502 -
            C20964 * C508 - C20965 * C503) *
               C50759 * C39118 +
           (C21876 * C507 - (C22068 * C501 + C22069 * C506) + C21877 * C502 -
            C22238 * C508 - C22239 * C503) *
               C50759 * C39119 +
           (C22690 * C507 - (C22689 * C501 + C22688 * C506) + C22691 * C502 -
            (C19772 * C3482 + C50611 * C3488) * C508 -
            (C19772 * C3486 + C50611 * C3494) * C503) *
               C50759 * C39120) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C121 +
             (C19772 * C133 + C50611 * C143) * C50670) *
                C50759 * C39117 +
            (C22076 + C22077) * C50759 * C39118 + C39692 * C39119 +
            C39700 * C39120) *
               C50892 -
           (C39701 * C39120 + C39695 * C39119 +
            (C22082 + C22083) * C50759 * C39118 +
            ((C19772 * C134 + C50611 * C144) * C50670 +
             (C19772 * C123 + C50611 * C130) * C121) *
                C50759 * C39117) *
               C50641) *
              C848 +
          (((C22083 + C22082) * C50759 * C39117 +
            (C22081 + C22080) * C50759 * C39118 +
            (C22696 + C22697) * C50759 * C39119 +
            (C39704 + C39705) * C50759 * C39120) *
               C50641 -
           ((C23007 + C23006) * C50759 * C39120 + C22994 * C50759 * C39119 +
            (C22079 + C22078) * C50759 * C39118 +
            (C22077 + C22076) * C50759 * C39117) *
               C50892) *
              C849 +
          ((C39692 * C39117 + C39700 * C39118 +
            (C23006 + C23007) * C50759 * C39119 +
            ((C19772 * C6308 + C50611 * C6312) * C121 +
             (C19772 * C6310 + C50611 * C6314) * C50670) *
                C50759 * C39120) *
               C50892 -
           (((C19772 * C6309 + C50611 * C6313) * C50670 +
             (C19772 * C6307 + C50611 * C6311) * C121) *
                C50759 * C39120 +
            (C39705 + C39704) * C50759 * C39119 + C39701 * C39118 +
            C39695 * C39117) *
               C50641) *
              C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
                 C16990 * C124 + C16985 * C131) *
                    C253 +
                (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
                 C16990 * C135 + C16985 * C145) *
                    C50899 -
                (C17174 + C17175 + C17176) * C254 -
                (C17177 + C17178 + C17179) * C50686) *
                   C50759 * C33783 +
               ((C16988 * C383 + C16983 * C394 + C16989 * C379 + C16984 * C385 +
                 C16990 * C380 + C16985 * C386) *
                    C253 +
                (C16988 * C393 + C16983 * C401 + C16989 * C389 + C16984 * C397 +
                 C16990 * C390 + C16985 * C398) *
                    C50899 -
                (C17808 + C17807 + C17806) * C254 -
                (C17811 + C17810 + C17809) * C50686) *
                   C50759 * C50835) *
                  C250 +
              (((C17180 + C17181 + C17182) * C254 -
                ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                  C16984 * C145 + C16988 * C134 + C16983 * C144) *
                     C50899 +
                 (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                  C16984 * C131 + C16988 * C123 + C16983 * C130) *
                     C253) +
                (C17183 + C17184 + C17185) * C50686) *
                   C50759 * C33783 +
               ((C18726 + C18725 + C18724) * C254 -
                ((C16990 * C391 + C16985 * C399 + C16989 * C390 +
                  C16984 * C398 + C16988 * C389 + C16983 * C397) *
                     C50899 +
                 (C16990 * C381 + C16985 * C387 + C16989 * C380 +
                  C16984 * C386 + C16988 * C379 + C16983 * C385) *
                     C253) +
                (C18729 + C18728 + C18727) * C50686) *
                   C50759 * C50835) *
                  C251 +
              (((C16988 * C124 + C16983 * C131 + C16989 * C125 + C16984 * C132 +
                 C16990 * C126 + C16985 * C138) *
                    C253 +
                (C16988 * C135 + C16983 * C145 + C16989 * C136 + C16984 * C146 +
                 C16990 * C137 + C16985 * C147) *
                    C50899 -
                (C17186 + C17187 + C17188) * C254 -
                (C17189 + C17190 + C17191) * C50686) *
                   C50759 * C33783 +
               ((C16988 * C380 + C16983 * C386 + C16989 * C381 + C16984 * C387 +
                 C16990 * C382 + C16985 * C388) *
                    C253 +
                (C16988 * C390 + C16983 * C398 + C16989 * C391 + C16984 * C399 +
                 C16990 * C392 + C16985 * C400) *
                    C50899 -
                (C16990 * C1412 + C16985 * C1413 + C16989 * C721 +
                 C16984 * C729 + C16988 * C720 + C16983 * C728) *
                    C254 -
                (C16990 * C1414 + C16985 * C1415 + C16989 * C733 +
                 C16984 * C745 + C16988 * C732 + C16983 * C744) *
                    C50686) *
                   C50759 * C50835) *
                  C252) *
             C50700 +
         0.5 * std::pow(Pi, 2.5) *
             (((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
                C16990 * C124 + C16985 * C131) *
                   C600 +
               (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
                C16990 * C135 + C16985 * C145) *
                   C595 -
               (C17174 + C17175 + C17176) * C601 -
               (C17177 + C17178 + C17179) * C596 +
               (C17508 + C17509 + C17510) * C602 +
               (C17511 + C17512 + C17513) * C597 -
               (C17630 + C17631 + C17632) * C603 -
               (C17633 + C17634 + C17635) * C598) *
                  C50759 * C33783 +
              ((C34114 + C34115 + C34116) * C600 +
               (C34117 + C34118 + C34119) * C595 -
               (C17808 + C17807 + C17806) * C601 -
               (C17811 + C17810 + C17809) * C596 +
               (C17814 + C17813 + C17812) * C602 +
               (C17817 + C17816 + C17815) * C597 -
               (C16990 * C3984 + C16985 * C3985 + C16989 * C2994 +
                C16984 * C2998 + C16988 * C2995 + C16983 * C2999) *
                   C603 -
               (C16990 * C3986 + C16985 * C3987 + C16989 * C3000 +
                C16984 * C3006 + C16988 * C3001 + C16983 * C3007) *
                   C598) *
                  C50759 * C50835) *
             C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C253 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C50899 -
            (C17174 + C17175 + C17176) * C254 -
            (C17177 + C17178 + C17179) * C50686) *
               C50759 * C33783 +
           ((C34114 + C34115 + C34116) * C253 +
            (C34117 + C34118 + C34119) * C50899 -
            (C17808 + C17807 + C17806) * C254 -
            (C17811 + C17810 + C17809) * C50686) *
               C50759 * C50835) *
              C50636 * C848 +
          (((C17806 + C17807 + C17808) * C254 -
            ((C34119 + C34118 + C34117) * C50899 +
             (C34116 + C34115 + C34114) * C253) +
            (C17809 + C17810 + C17811) * C50686) *
               C50759 * C33783 +
           ((C18124 + C18123 + C18122) * C254 -
            ((C34698 + C34699 + C34700) * C50899 +
             (C34701 + C34702 + C34703) * C253) +
            (C18127 + C18126 + C18125) * C50686) *
               C50759 * C50835) *
              C50636 * C849 +
          (((C34703 + C34702 + C34701) * C253 +
            (C34700 + C34699 + C34698) * C50899 -
            (C18122 + C18123 + C18124) * C254 -
            (C18125 + C18126 + C18127) * C50686) *
               C50759 * C33783 +
           ((C16988 * C1058 + C16983 * C1066 + C16989 * C1057 + C16984 * C1065 +
             C16990 * C1056 + C16985 * C1064) *
                C253 +
            (C16988 * C1062 + C16983 * C1070 + C16989 * C1061 + C16984 * C1069 +
             C16990 * C1060 + C16985 * C1068) *
                C50899 -
            (C16990 * C6819 + C16985 * C6820 + C16989 * C3484 + C16984 * C3492 +
             C16988 * C3485 + C16983 * C3493) *
                C254 -
            (C16990 * C6821 + C16985 * C6822 + C16989 * C3490 + C16984 * C3496 +
             C16988 * C3491 + C16983 * C3497) *
                C50686) *
               C50759 * C50835) *
              C50636 * C850)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C253 +
             (C19772 * C133 + C50611 * C143) * C50899 - C19908 * C254 -
             C19909 * C50686) *
                C2173 +
            (C19908 * C253 + C19909 * C50899 - C19910 * C254 -
             C19911 * C50686) *
                C2174 +
            (C19910 * C253 + C19911 * C50899 - C19912 * C254 -
             C19913 * C50686) *
                C2175) *
               C33783 +
           ((C22852 + C22853 - C22854 - C22855) * C2173 +
            (C22856 + C22857 - C22858 - C22859) * C2174 +
            (C32098 + C32099 - C32100 - C32101) * C2175) *
               C50835) *
              C250 +
          (((C19914 * C254 -
             ((C19772 * C134 + C50611 * C144) * C50899 +
              (C19772 * C123 + C50611 * C130) * C253) +
             C19915 * C50686) *
                C2173 +
            (C19916 * C254 - (C19915 * C50899 + C19914 * C253) +
             C19917 * C50686) *
                C2174 +
            (C19918 * C254 - (C19917 * C50899 + C19916 * C253) +
             C19919 * C50686) *
                C2175) *
               C33783 +
           ((C23866 - (C23867 + C23868) + C23869) * C2173 +
            (C23870 - (C23871 + C23872) + C23873) * C2174 +
            (C33040 - (C33041 + C33042) + C33043) * C2175) *
               C50835) *
              C251 +
          ((((C19772 * C124 + C50611 * C131) * C253 +
             (C19772 * C135 + C50611 * C145) * C50899 - C19920 * C254 -
             C19921 * C50686) *
                C2173 +
            (C19920 * C253 + C19921 * C50899 - C19922 * C254 -
             C19923 * C50686) *
                C2174 +
            (C19922 * C253 + C19923 * C50899 - C19924 * C254 -
             C19925 * C50686) *
                C2175) *
               C33783 +
           ((C22072 * C253 + C22073 * C50899 - C21878 * C254 -
             C21879 * C50686) *
                C2173 +
            (C21878 * C253 + C21879 * C50899 - C31252 * C254 -
             C31253 * C50686) *
                C2174 +
            (C31252 * C253 + C31253 * C50899 -
             (C19772 * C3984 + C50611 * C3985) * C254 -
             (C19772 * C3986 + C50611 * C3987) * C50686) *
                C2175) *
               C50835) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C600 +
            (C19772 * C133 + C50611 * C143) * C595 - C19908 * C601 -
            C19909 * C596 + C19910 * C602 + C19911 * C597 - C19912 * C603 -
            C19913 * C598) *
               C2173 +
           (C19908 * C600 + C19909 * C595 - C19910 * C601 - C19911 * C596 +
            C19912 * C602 + C19913 * C597 - C20130 * C603 - C20131 * C598) *
               C2174 +
           (C19910 * C600 + C19911 * C595 - C19912 * C601 - C19913 * C596 +
            C20130 * C602 + C20131 * C597 - C20208 * C603 - C20209 * C598) *
               C2175) *
              C33783 +
          ((C22064 * C600 + C22065 * C595 - C20328 * C601 - C20329 * C596 +
            C20330 * C602 + C20331 * C597 - C20332 * C603 - C20333 * C598) *
               C2173 +
           (C20328 * C600 + C20329 * C595 - C20330 * C601 - C20331 * C596 +
            C20332 * C602 + C20333 * C597 - C20334 * C603 - C20335 * C598) *
               C2174 +
           (C20330 * C600 + C20331 * C595 - C20332 * C601 - C20333 * C596 +
            C20334 * C602 + C20335 * C597 -
            (C19772 * C20307 + C50611 * C20308) * C603 -
            (C19772 * C20309 + C50611 * C20310) * C598) *
               C2175) *
              C50835) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C19772 * C122 + C50611 * C129) * C253 +
                                 (C19772 * C133 + C50611 * C143) * C50899 -
                                 C19908 * C254 - C19909 * C50686) *
                                    C2173 +
                                (C19908 * C253 + C19909 * C50899 -
                                 C19910 * C254 - C19911 * C50686) *
                                    C2174 +
                                (C19910 * C253 + C19911 * C50899 -
                                 C19912 * C254 - C19913 * C50686) *
                                    C2175) *
                                   C33783 +
                               ((C22852 + C22853 - C22854 - C22855) * C2173 +
                                (C22856 + C22857 - C22858 - C22859) * C2174 +
                                (C32098 + C32099 - C32100 - C32101) * C2175) *
                                   C50835) *
                                  C50636 * C848 +
                              (((C22854 - (C22853 + C22852) + C22855) * C2173 +
                                (C22858 - (C22857 + C22856) + C22859) * C2174 +
                                (C32100 - (C32099 + C32098) + C32101) * C2175) *
                                   C33783 +
                               ((C22862 - (C22861 + C22860) + C22863) * C2173 +
                                (C22866 - (C22865 + C22864) + C22867) * C2174 +
                                (C32102 - (C32103 + C32104) + C32105) * C2175) *
                                   C50835) *
                                  C50636 * C849 +
                              ((C22886 * C2173 + C22887 * C2174 +
                                (C32104 + C32103 - C32102 - C32105) * C2175) *
                                   C33783 +
                               ((C22870 + C22869 - C22868 - C22871) * C2173 +
                                (C22874 + C22873 - C22872 - C22875) * C2174 +
                                (C22518 * C253 + C22519 * C50899 -
                                 (C19772 * C20619 + C50611 * C20621) * C254 -
                                 (C19772 * C20620 + C50611 * C20622) * C50686) *
                                    C2175) *
                                   C50835) *
                                  C50636 * C850)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C253 +
            (C19772 * C133 + C50611 * C143) * C50899 - C19908 * C254 -
            C19909 * C50686) *
               C50759 * C39117 +
           (C22852 + C22853 - C22854 - C22855) * C50759 * C39118 +
           C22886 * C50759 * C39119 +
           (C22870 + C22869 - C22868 - C22871) * C50759 * C39120) *
              C250 +
          ((C19914 * C254 -
            ((C19772 * C134 + C50611 * C144) * C50899 +
             (C19772 * C123 + C50611 * C130) * C253) +
            C19915 * C50686) *
               C50759 * C39117 +
           (C23866 - (C23867 + C23868) + C23869) * C50759 * C39118 +
           (C23874 - (C23875 + C23876) + C23877) * C50759 * C39119 +
           (C22690 * C254 - (C22689 * C50899 + C22688 * C253) +
            C22691 * C50686) *
               C50759 * C39120) *
              C251 +
          (((C19772 * C124 + C50611 * C131) * C253 +
            (C19772 * C135 + C50611 * C145) * C50899 - C19920 * C254 -
            C19921 * C50686) *
               C50759 * C39117 +
           (C22072 * C253 + C22073 * C50899 - C21878 * C254 - C21879 * C50686) *
               C50759 * C39118 +
           (C22074 * C253 + C22075 * C50899 - C21880 * C254 - C21881 * C50686) *
               C50759 * C39119 +
           ((C19772 * C1056 + C50611 * C1064) * C253 +
            (C19772 * C1060 + C50611 * C1068) * C50899 -
            (C19772 * C6819 + C50611 * C6820) * C254 -
            (C19772 * C6821 + C50611 * C6822) * C50686) *
               C50759 * C39120) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C19772 * C122 + C50611 * C129) * C600 +
           (C19772 * C133 + C50611 * C143) * C595 - C19908 * C601 -
           C19909 * C596 + C19910 * C602 + C19911 * C597 - C19912 * C603 -
           C19913 * C598) *
              C50759 * C39117 +
          (C22064 * C600 + C22065 * C595 - C20328 * C601 - C20329 * C596 +
           C20330 * C602 + C20331 * C597 - C20332 * C603 - C20333 * C598) *
              C50759 * C39118 +
          (C22066 * C600 + C22067 * C595 - C20548 * C601 - C20549 * C596 +
           C20550 * C602 + C20551 * C597 - C20552 * C603 - C20553 * C598) *
              C50759 * C39119 +
          (C22693 * C600 + C22692 * C595 - C22516 * C601 - C22517 * C596 +
           C22518 * C602 + C22519 * C597 -
           (C19772 * C20619 + C50611 * C20621) * C603 -
           (C19772 * C20620 + C50611 * C20622) * C598) *
              C50759 * C39120) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C253 +
            (C19772 * C133 + C50611 * C143) * C50899 - C19908 * C254 -
            C19909 * C50686) *
               C50759 * C39117 +
           (C22852 + C22853 - C22854 - C22855) * C50759 * C39118 +
           C39804 * C39119 + C39812 * C39120) *
              C50636 * C848 +
          ((C22854 - (C22853 + C22852) + C22855) * C50759 * C39117 +
           (C22862 - (C22861 + C22860) + C22863) * C50759 * C39118 +
           (C22868 - (C22869 + C22870) + C22871) * C50759 * C39119 +
           (C39806 - (C39807 + C39808) + C39809) * C50759 * C39120) *
              C50636 * C849 +
          (C39804 * C39117 + C39812 * C39118 +
           (C39808 + C39807 - C39806 - C39809) * C50759 * C39119 +
           ((C19772 * C6308 + C50611 * C6312) * C253 +
            (C19772 * C6310 + C50611 * C6314) * C50899 -
            (C19772 * C22988 + C50611 * C22990) * C254 -
            (C19772 * C22989 + C50611 * C22991) * C50686) *
               C50759 * C39120) *
              C50636 * C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                  C16984 * C130 + C16990 * C124 + C16985 * C131) *
                     C121 +
                 (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                  C16984 * C144 + C16990 * C135 + C16985 * C145) *
                     C50670) *
                    C50759 * C33783 +
                ((C34114 + C34115 + C34116) * C121 +
                 (C34117 + C34118 + C34119) * C50670) *
                    C50759 * C50835) *
                   C250 -
               (((C34120 + C34121 + C34122) * C50670 +
                 (C34123 + C34124 + C34125) * C121) *
                    C50759 * C50835 +
                ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                  C16984 * C145 + C16988 * C134 + C16983 * C144) *
                     C50670 +
                 (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                  C16984 * C131 + C16988 * C123 + C16983 * C130) *
                     C121) *
                    C50759 * C33783) *
                   C251 +
               (((C16988 * C124 + C16983 * C131 + C16989 * C125 +
                  C16984 * C132 + C16990 * C126 + C16985 * C138) *
                     C121 +
                 (C16988 * C135 + C16983 * C145 + C16989 * C136 +
                  C16984 * C146 + C16990 * C137 + C16985 * C147) *
                     C50670) *
                    C50759 * C33783 +
                ((C34126 + C34127 + C34128) * C121 +
                 (C34129 + C34130 + C34131) * C50670) *
                    C50759 * C50835) *
                   C252) *
                  C50901 +
              ((((C34125 + C34124 + C34123) * C121 +
                 (C34122 + C34121 + C34120) * C50670) *
                    C50759 * C33783 +
                ((C16988 * C852 + C16983 * C857 + C16989 * C853 +
                  C16984 * C858 + C16990 * C854 + C16985 * C859) *
                     C121 +
                 (C16988 * C861 + C16983 * C867 + C16989 * C862 +
                  C16984 * C868 + C16990 * C863 + C16985 * C869) *
                     C50670) *
                    C50759 * C50835) *
                   C251 -
               (((C16990 * C862 + C16985 * C868 + C16989 * C861 +
                  C16984 * C867 + C16988 * C860 + C16983 * C866) *
                     C50670 +
                 (C16990 * C853 + C16985 * C858 + C16989 * C852 +
                  C16984 * C857 + C16988 * C851 + C16983 * C856) *
                     C121) *
                    C50759 * C50835 +
                ((C34119 + C34118 + C34117) * C50670 +
                 (C34116 + C34115 + C34114) * C121) *
                    C50759 * C33783) *
                   C250 -
               (((C16990 * C864 + C16985 * C870 + C16989 * C863 +
                  C16984 * C869 + C16988 * C862 + C16983 * C868) *
                     C50670 +
                 (C16990 * C855 + C16985 * C865 + C16989 * C854 +
                  C16984 * C859 + C16988 * C853 + C16983 * C858) *
                     C121) *
                    C50759 * C50835 +
                ((C34131 + C34130 + C34129) * C50670 +
                 (C34128 + C34127 + C34126) * C121) *
                    C50759 * C33783) *
                   C252) *
                  C50712) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
                 C16990 * C124 + C16985 * C131) *
                    C506 +
                (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
                 C16990 * C135 + C16985 * C145) *
                    C501 -
                (C17174 + C17175 + C17176) * C507 -
                (C17177 + C17178 + C17179) * C502 +
                (C17508 + C17509 + C17510) * C508 +
                (C17511 + C17512 + C17513) * C503) *
                   C50759 * C33783 +
               ((C34114 + C34115 + C34116) * C506 +
                (C34117 + C34118 + C34119) * C501 -
                (C17808 + C17807 + C17806) * C507 -
                (C17811 + C17810 + C17809) * C502 +
                (C17814 + C17813 + C17812) * C508 +
                (C17817 + C17816 + C17815) * C503) *
                   C50759 * C50835) *
                  C50636 * C50901 +
              (((C17806 + C17807 + C17808) * C507 -
                ((C34119 + C34118 + C34117) * C501 +
                 (C34116 + C34115 + C34114) * C506) +
                (C17809 + C17810 + C17811) * C502 -
                (C17812 + C17813 + C17814) * C508 -
                (C17815 + C17816 + C17817) * C503) *
                   C50759 * C33783 +
               ((C18124 + C18123 + C18122) * C507 -
                ((C16990 * C862 + C16985 * C868 + C16989 * C861 +
                  C16984 * C867 + C16988 * C860 + C16983 * C866) *
                     C501 +
                 (C16990 * C853 + C16985 * C858 + C16989 * C852 +
                  C16984 * C857 + C16988 * C851 + C16983 * C856) *
                     C506) +
                (C18127 + C18126 + C18125) * C502 -
                (C16990 * C3196 + C16985 * C3202 + C16989 * C3195 +
                 C16984 * C3198 + C16988 * C3194 + C16983 * C3197) *
                    C508 -
                (C16990 * C3201 + C16985 * C3205 + C16989 * C3200 +
                 C16984 * C3204 + C16988 * C3199 + C16983 * C3203) *
                    C503) *
                   C50759 * C50835) *
                  C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C121 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C50670) *
               C50759 * C33783 +
           ((C34114 + C34115 + C34116) * C121 +
            (C34117 + C34118 + C34119) * C50670) *
               C50759 * C50835) *
              C50636 * C1051 -
          (((C34698 + C34699 + C34700) * C50670 +
            (C34701 + C34702 + C34703) * C121) *
               C50759 * C50835 +
           ((C34119 + C34118 + C34117) * C50670 +
            (C34116 + C34115 + C34114) * C121) *
               C50759 * C33783) *
              C50636 * C1052 +
          (((C34703 + C34702 + C34701) * C121 +
            (C34700 + C34699 + C34698) * C50670) *
               C50759 * C33783 +
           ((C34960 + C34961 + C34962) * C121 +
            (C34963 + C34964 + C34965) * C50670) *
               C50759 * C50835) *
              C50636 * C1053 -
          (((C16990 * C5992 + C16985 * C5996 + C16989 * C5991 + C16984 * C5995 +
             C16988 * C5990 + C16983 * C5994) *
                C50670 +
            (C16990 * C5987 + C16985 * C5993 + C16989 * C5986 + C16984 * C5989 +
             C16988 * C5985 + C16983 * C5988) *
                C121) *
               C50759 * C50835 +
           ((C34965 + C34964 + C34963) * C50670 +
            (C34962 + C34961 + C34960) * C121) *
               C50759 * C33783) *
              C50636 * C1054)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((((C19772 * C122 + C50611 * C129) * C121 +
              (C19772 * C133 + C50611 * C143) * C50670) *
                 C2173 +
             (C19908 * C121 + C19909 * C50670) * C2174 +
             (C19910 * C121 + C19911 * C50670) * C2175) *
                C33783 +
            ((C22076 + C22077) * C2173 + (C22032 + C22033) * C2174 +
             (C31400 + C31401) * C2175) *
                C50835) *
               C250 -
           (((C31402 + C31403) * C2175 + (C22046 + C22047) * C2174 +
             (C22082 + C22083) * C2173) *
                C50835 +
            ((C19917 * C50670 + C19916 * C121) * C2175 +
             (C19915 * C50670 + C19914 * C121) * C2174 +
             ((C19772 * C134 + C50611 * C144) * C50670 +
              (C19772 * C123 + C50611 * C130) * C121) *
                 C2173) *
                C33783) *
               C251 +
           ((((C19772 * C124 + C50611 * C131) * C121 +
              (C19772 * C135 + C50611 * C145) * C50670) *
                 C2173 +
             (C19920 * C121 + C19921 * C50670) * C2174 +
             (C19922 * C121 + C19923 * C50670) * C2175) *
                C33783 +
            ((C22084 + C22085) * C2173 + (C22056 + C22057) * C2174 +
             (C31404 + C31405) * C2175) *
                C50835) *
               C252) *
              C50901 +
          ((((C22083 + C22082) * C2173 + (C22047 + C22046) * C2174 +
             (C31403 + C31402) * C2175) *
                C33783 +
            ((C22081 + C22080) * C2173 + (C22041 + C22040) * C2174 +
             (C31948 + C31949) * C2175) *
                C50835) *
               C251 -
           (((C31950 + C31951) * C2175 + (C22039 + C22038) * C2174 +
             (C22079 + C22078) * C2173) *
                C50835 +
            ((C31401 + C31400) * C2175 + (C22033 + C22032) * C2174 +
             (C22077 + C22076) * C2173) *
                C33783) *
               C250 -
           ((((C19772 * C3201 + C50611 * C3205) * C50670 +
              (C19772 * C3196 + C50611 * C3202) * C121) *
                 C2175 +
             (C22063 + C22062) * C2174 + (C22087 + C22086) * C2173) *
                C50835 +
            ((C31405 + C31404) * C2175 + (C22057 + C22056) * C2174 +
             (C22085 + C22084) * C2173) *
                C33783) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C506 +
             (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
             C19909 * C502 + C19910 * C508 + C19911 * C503) *
                C2173 +
            (C19908 * C506 + C19909 * C501 - C19910 * C507 - C19911 * C502 +
             C19912 * C508 + C19913 * C503) *
                C2174 +
            (C19910 * C506 + C19911 * C501 - C19912 * C507 - C19913 * C502 +
             C20130 * C508 + C20131 * C503) *
                C2175) *
               C33783 +
           ((C22484 + C22485 - C22486 - C22487 + C22488 + C22489) * C2173 +
            (C22490 + C22491 - C22492 - C22493 + C22494 + C22495) * C2174 +
            (C31796 + C31797 - C31798 - C31799 + C31800 + C31801) * C2175) *
               C50835) *
              C50636 * C50901 +
          (((C22486 - (C22485 + C22484) + C22487 - C22488 - C22489) * C2173 +
            (C22492 - (C22491 + C22490) + C22493 - C22494 - C22495) * C2174 +
            (C31798 - (C31797 + C31796) + C31799 - C31800 - C31801) * C2175) *
               C33783 +
           ((C22498 - (C22497 + C22496) + C22499 - C22500 - C22501) * C2173 +
            (C22504 - (C22503 + C22502) + C22505 - C22506 - C22507) * C2174 +
            (C20552 * C507 - (C20551 * C501 + C20550 * C506) + C20553 * C502 -
             (C19772 * C20531 + C50611 * C20532) * C508 -
             (C19772 * C20533 + C50611 * C20534) * C503) *
                C2175) *
               C50835) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C121 +
             (C19772 * C133 + C50611 * C143) * C50670) *
                C2173 +
            (C19908 * C121 + C19909 * C50670) * C2174 +
            (C19910 * C121 + C19911 * C50670) * C2175) *
               C33783 +
           ((C22076 + C22077) * C2173 + (C22032 + C22033) * C2174 +
            (C31400 + C31401) * C2175) *
               C50835) *
              C50636 * C1051 -
          (((C31950 + C31951) * C2175 + (C22039 + C22038) * C2174 +
            (C22079 + C22078) * C2173) *
               C50835 +
           ((C31401 + C31400) * C2175 + (C22033 + C22032) * C2174 +
            (C22077 + C22076) * C2173) *
               C33783) *
              C50636 * C1052 +
          ((C22666 * C2173 + C22667 * C2174 + (C31951 + C31950) * C2175) *
               C33783 +
           ((C22701 + C22700) * C2173 + (C22679 + C22678) * C2174 +
            (C32204 + C32205) * C2175) *
               C50835) *
              C50636 * C1053 -
          ((((C19772 * C22849 + C50611 * C22850) * C50670 +
             (C19772 * C22847 + C50611 * C22848) * C121) *
                C2175 +
            (C23000 + C22999) * C2174 + (C23007 + C23006) * C2173) *
               C50835 +
           ((C32205 + C32204) * C2175 + C22993 * C2174 + C22994 * C2173) *
               C33783) *
              C50636 * C1054)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C121 +
             (C19772 * C133 + C50611 * C143) * C50670) *
                C50759 * C39117 +
            (C22076 + C22077) * C50759 * C39118 + C22666 * C50759 * C39119 +
            (C22701 + C22700) * C50759 * C39120) *
               C250 -
           ((C22697 + C22696) * C50759 * C39120 + C22669 * C50759 * C39119 +
            (C22082 + C22083) * C50759 * C39118 +
            ((C19772 * C134 + C50611 * C144) * C50670 +
             (C19772 * C123 + C50611 * C130) * C121) *
                C50759 * C39117) *
               C251 +
           (((C19772 * C124 + C50611 * C131) * C121 +
             (C19772 * C135 + C50611 * C145) * C50670) *
                C50759 * C39117 +
            (C22084 + C22085) * C50759 * C39118 +
            (C22086 + C22087) * C50759 * C39119 +
            (C39324 + C39325) * C50759 * C39120) *
               C252) *
              C50901 +
          (((C22083 + C22082) * C50759 * C39117 +
            (C22081 + C22080) * C50759 * C39118 +
            (C22696 + C22697) * C50759 * C39119 +
            ((C19772 * C5986 + C50611 * C5989) * C121 +
             (C19772 * C5991 + C50611 * C5995) * C50670) *
                C50759 * C39120) *
               C251 -
           ((C23007 + C23006) * C50759 * C39120 + C22994 * C50759 * C39119 +
            (C22079 + C22078) * C50759 * C39118 +
            (C22077 + C22076) * C50759 * C39117) *
               C250 -
           (((C19772 * C5992 + C50611 * C5996) * C50670 +
             (C19772 * C5987 + C50611 * C5993) * C121) *
                C50759 * C39120 +
            (C39325 + C39324) * C50759 * C39119 +
            (C22087 + C22086) * C50759 * C39118 +
            (C22085 + C22084) * C50759 * C39117) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C506 +
            (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
            C19909 * C502 + C19910 * C508 + C19911 * C503) *
               C50759 * C39117 +
           (C22484 + C22485 - C22486 - C22487 + C22488 + C22489) * C50759 *
               C39118 +
           (C22496 + C22497 - C22498 - C22499 + C22500 + C22501) * C50759 *
               C39119 +
           (C39588 + C39589 - C39590 - C39591 + C39592 + C39593) * C50759 *
               C39120) *
              C50636 * C50901 +
          ((C22486 - (C22485 + C22484) + C22487 - C22488 - C22489) * C50759 *
               C39117 +
           (C22498 - (C22497 + C22496) + C22499 - C22500 - C22501) * C50759 *
               C39118 +
           (C39590 - (C39589 + C39588) + C39591 - C39592 - C39593) * C50759 *
               C39119 +
           (C22882 * C507 - (C23004 * C501 + C23003 * C506) + C22883 * C502 -
            (C19772 * C22847 + C50611 * C22848) * C508 -
            (C19772 * C22849 + C50611 * C22850) * C503) *
               C50759 * C39120) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C121 +
            (C19772 * C133 + C50611 * C143) * C50670) *
               C50759 * C39117 +
           (C22076 + C22077) * C50759 * C39118 + C39692 * C39119 +
           C39700 * C39120) *
              C50636 * C1051 -
          (C39889 * C39120 + C39884 * C39119 +
           (C22079 + C22078) * C50759 * C39118 +
           (C22077 + C22076) * C50759 * C39117) *
              C50636 * C1052 +
          (C39692 * C39117 + C39700 * C39118 +
           (C23006 + C23007) * C50759 * C39119 +
           (C39892 + C39893) * C50759 * C39120) *
              C50636 * C1053 -
          (((C19772 * C39879 + C50611 * C39881) * C50670 +
            (C19772 * C39878 + C50611 * C39880) * C121) *
               C50759 * C39120 +
           (C39893 + C39892) * C50759 * C39119 + C39889 * C39118 +
           C39884 * C39117) *
              C50636 * C1054)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19772 * C122 + C50611 * C129) * C121 +
                       (C19772 * C133 + C50611 * C143) * C50670) *
                          C2173 +
                      (C19908 * C121 + C19909 * C50670) * C2174 +
                      (C19910 * C121 + C19911 * C50670) * C2175) *
                         C33783 +
                     ((C22076 + C22077) * C2173 + (C22032 + C22033) * C2174 +
                      (C31400 + C31401) * C2175) *
                         C50835) *
                        C50945 -
                    (((C31402 + C31403) * C2175 + (C22046 + C22047) * C2174 +
                      (C22082 + C22083) * C2173) *
                         C50835 +
                     ((C19917 * C50670 + C19916 * C121) * C2175 +
                      (C19915 * C50670 + C19914 * C121) * C2174 +
                      ((C19772 * C134 + C50611 * C144) * C50670 +
                       (C19772 * C123 + C50611 * C130) * C121) *
                          C2173) *
                         C33783) *
                        C50930 +
                    ((((C19772 * C124 + C50611 * C131) * C121 +
                       (C19772 * C135 + C50611 * C145) * C50670) *
                          C2173 +
                      (C19920 * C121 + C19921 * C50670) * C2174 +
                      (C19922 * C121 + C19923 * C50670) * C2175) *
                         C33783 +
                     ((C22084 + C22085) * C2173 + (C22056 + C22057) * C2174 +
                      (C31404 + C31405) * C2175) *
                         C50835) *
                        C1173) *
                       C1514 +
                   ((((C22083 + C22082) * C2173 + (C22047 + C22046) * C2174 +
                      (C31403 + C31402) * C2175) *
                         C33783 +
                     ((C22081 + C22080) * C2173 + (C22041 + C22040) * C2174 +
                      (C31948 + C31949) * C2175) *
                         C50835) *
                        C50930 -
                    (((C31950 + C31951) * C2175 + (C22039 + C22038) * C2174 +
                      (C22079 + C22078) * C2173) *
                         C50835 +
                     ((C31401 + C31400) * C2175 + (C22033 + C22032) * C2174 +
                      (C22077 + C22076) * C2173) *
                         C33783) *
                        C50945 -
                    ((((C19772 * C3201 + C50611 * C3205) * C50670 +
                       (C19772 * C3196 + C50611 * C3202) * C121) *
                          C2175 +
                      (C22063 + C22062) * C2174 + (C22087 + C22086) * C2173) *
                         C50835 +
                     ((C31405 + C31404) * C2175 + (C22057 + C22056) * C2174 +
                      (C22085 + C22084) * C2173) *
                         C33783) *
                        C1173) *
                       C50712)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                       C16984 * C130 + C16990 * C124 + C16985 * C131) *
                          C121 +
                      (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                       C16984 * C144 + C16990 * C135 + C16985 * C145) *
                          C50670) *
                         C50759 * C33783 +
                     ((C34114 + C34115 + C34116) * C121 +
                      (C34117 + C34118 + C34119) * C50670) *
                         C50759 * C50835) *
                        C50945 -
                    (((C34120 + C34121 + C34122) * C50670 +
                      (C34123 + C34124 + C34125) * C121) *
                         C50759 * C50835 +
                     ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                       C16984 * C145 + C16988 * C134 + C16983 * C144) *
                          C50670 +
                      (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                       C16984 * C131 + C16988 * C123 + C16983 * C130) *
                          C121) *
                         C50759 * C33783) *
                        C50930 +
                    (((C16988 * C124 + C16983 * C131 + C16989 * C125 +
                       C16984 * C132 + C16990 * C126 + C16985 * C138) *
                          C121 +
                      (C16988 * C135 + C16983 * C145 + C16989 * C136 +
                       C16984 * C146 + C16990 * C137 + C16985 * C147) *
                          C50670) *
                         C50759 * C33783 +
                     ((C34126 + C34127 + C34128) * C121 +
                      (C34129 + C34130 + C34131) * C50670) *
                         C50759 * C50835) *
                        C1173) *
                       C1514 +
                   ((((C34125 + C34124 + C34123) * C121 +
                      (C34122 + C34121 + C34120) * C50670) *
                         C50759 * C33783 +
                     ((C34692 + C34693 + C34694) * C121 +
                      (C34695 + C34696 + C34697) * C50670) *
                         C50759 * C50835) *
                        C50930 -
                    (((C34698 + C34699 + C34700) * C50670 +
                      (C34701 + C34702 + C34703) * C121) *
                         C50759 * C50835 +
                     ((C34119 + C34118 + C34117) * C50670 +
                      (C34116 + C34115 + C34114) * C121) *
                         C50759 * C33783) *
                        C50945 -
                    (((C16990 * C864 + C16985 * C870 + C16989 * C863 +
                       C16984 * C869 + C16988 * C862 + C16983 * C868) *
                          C50670 +
                      (C16990 * C855 + C16985 * C865 + C16989 * C854 +
                       C16984 * C859 + C16988 * C853 + C16983 * C858) *
                          C121) *
                         C50759 * C50835 +
                     ((C34131 + C34130 + C34129) * C50670 +
                      (C34128 + C34127 + C34126) * C121) *
                         C50759 * C33783) *
                        C1173) *
                       C50712)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C19772 * C122 + C50611 * C129) * C121 +
                      (C19772 * C133 + C50611 * C143) * C50670) *
                         C50759 * C39117 +
                     (C22076 + C22077) * C50759 * C39118 + C39692 * C39119 +
                     C39700 * C39120) *
                        C50945 -
                    (C39701 * C39120 + C39695 * C39119 +
                     (C22082 + C22083) * C50759 * C39118 +
                     ((C19772 * C134 + C50611 * C144) * C50670 +
                      (C19772 * C123 + C50611 * C130) * C121) *
                         C50759 * C39117) *
                        C50930 +
                    (((C19772 * C124 + C50611 * C131) * C121 +
                      (C19772 * C135 + C50611 * C145) * C50670) *
                         C50759 * C39117 +
                     (C22084 + C22085) * C50759 * C39118 +
                     (C22086 + C22087) * C50759 * C39119 +
                     (C39324 + C39325) * C50759 * C39120) *
                        C1173) *
                       C1514 +
                   (((C22083 + C22082) * C50759 * C39117 +
                     (C22081 + C22080) * C50759 * C39118 +
                     (C22696 + C22697) * C50759 * C39119 +
                     (C39704 + C39705) * C50759 * C39120) *
                        C50930 -
                    (C39889 * C39120 + C39884 * C39119 +
                     (C22079 + C22078) * C50759 * C39118 +
                     (C22077 + C22076) * C50759 * C39117) *
                        C50945 -
                    (((C19772 * C5992 + C50611 * C5996) * C50670 +
                      (C19772 * C5987 + C50611 * C5993) * C121) *
                         C50759 * C39120 +
                     (C39325 + C39324) * C50759 * C39119 +
                     (C22087 + C22086) * C50759 * C39118 +
                     (C22085 + C22084) * C50759 * C39117) *
                        C1173) *
                       C50712)) /
                     (p * q * std::sqrt(p + q));
    d2ee[190] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19772 * C122 + C50611 * C129) * C253 +
                       (C19772 * C133 + C50611 * C143) * C50899 -
                       C19908 * C254 - C19909 * C50686) *
                          C2173 +
                      (C19908 * C253 + C19909 * C50899 - C19910 * C254 -
                       C19911 * C50686) *
                          C2174 +
                      (C19910 * C253 + C19911 * C50899 - C19912 * C254 -
                       C19913 * C50686) *
                          C2175) *
                         C33783 +
                     ((C22852 + C22853 - C22854 - C22855) * C2173 +
                      (C22856 + C22857 - C22858 - C22859) * C2174 +
                      (C32098 + C32099 - C32100 - C32101) * C2175) *
                         C50835) *
                        C1277 +
                    (((C19914 * C254 -
                       ((C19772 * C134 + C50611 * C144) * C50899 +
                        (C19772 * C123 + C50611 * C130) * C253) +
                       C19915 * C50686) *
                          C2173 +
                      (C19916 * C254 - (C19915 * C50899 + C19914 * C253) +
                       C19917 * C50686) *
                          C2174 +
                      (C19918 * C254 - (C19917 * C50899 + C19916 * C253) +
                       C19919 * C50686) *
                          C2175) *
                         C33783 +
                     ((C23866 - (C23867 + C23868) + C23869) * C2173 +
                      (C23870 - (C23871 + C23872) + C23873) * C2174 +
                      (C33040 - (C33041 + C33042) + C33043) * C2175) *
                         C50835) *
                        C50641) *
                       C1514 +
                   ((((C22854 - (C22853 + C22852) + C22855) * C2173 +
                      (C22858 - (C22857 + C22856) + C22859) * C2174 +
                      (C32100 - (C32099 + C32098) + C32101) * C2175) *
                         C33783 +
                     ((C22862 - (C22861 + C22860) + C22863) * C2173 +
                      (C22866 - (C22865 + C22864) + C22867) * C2174 +
                      (C32102 - (C32103 + C32104) + C32105) * C2175) *
                         C50835) *
                        C1277 +
                    (((C23868 + C23867 - C23866 - C23869) * C2173 +
                      (C23872 + C23871 - C23870 - C23873) * C2174 +
                      (C33042 + C33041 - C33040 - C33043) * C2175) *
                         C33783 +
                     ((C23876 + C23875 - C23874 - C23877) * C2173 +
                      (C23880 + C23879 - C23878 - C23881) * C2174 +
                      (C22238 * C253 + C22239 * C50899 -
                       (C19772 * C3352 + C50611 * C3354) * C254 -
                       (C19772 * C3356 + C50611 * C3358) * C50686) *
                          C2175) *
                         C50835) *
                        C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                       C16984 * C130 + C16990 * C124 + C16985 * C131) *
                          C253 +
                      (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                       C16984 * C144 + C16990 * C135 + C16985 * C145) *
                          C50899 -
                      (C17174 + C17175 + C17176) * C254 -
                      (C17177 + C17178 + C17179) * C50686) *
                         C50759 * C33783 +
                     ((C34114 + C34115 + C34116) * C253 +
                      (C34117 + C34118 + C34119) * C50899 -
                      (C17808 + C17807 + C17806) * C254 -
                      (C17811 + C17810 + C17809) * C50686) *
                         C50759 * C50835) *
                        C1277 +
                    (((C17180 + C17181 + C17182) * C254 -
                      ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                        C16984 * C145 + C16988 * C134 + C16983 * C144) *
                           C50899 +
                       (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                        C16984 * C131 + C16988 * C123 + C16983 * C130) *
                           C253) +
                      (C17183 + C17184 + C17185) * C50686) *
                         C50759 * C33783 +
                     ((C18726 + C18725 + C18724) * C254 -
                      ((C34120 + C34121 + C34122) * C50899 +
                       (C34123 + C34124 + C34125) * C253) +
                      (C18729 + C18728 + C18727) * C50686) *
                         C50759 * C50835) *
                        C50641) *
                       C1514 +
                   ((((C17806 + C17807 + C17808) * C254 -
                      ((C34119 + C34118 + C34117) * C50899 +
                       (C34116 + C34115 + C34114) * C253) +
                      (C17809 + C17810 + C17811) * C50686) *
                         C50759 * C33783 +
                     ((C18124 + C18123 + C18122) * C254 -
                      ((C34698 + C34699 + C34700) * C50899 +
                       (C34701 + C34702 + C34703) * C253) +
                      (C18127 + C18126 + C18125) * C50686) *
                         C50759 * C50835) *
                        C1277 +
                    (((C34125 + C34124 + C34123) * C253 +
                      (C34122 + C34121 + C34120) * C50899 -
                      (C18724 + C18725 + C18726) * C254 -
                      (C18727 + C18728 + C18729) * C50686) *
                         C50759 * C33783 +
                     ((C34692 + C34693 + C34694) * C253 +
                      (C34695 + C34696 + C34697) * C50899 -
                      (C16990 * C969 + C16985 * C973 + C16989 * C970 +
                       C16984 * C974 + C16988 * C971 + C16983 * C975) *
                          C254 -
                      (C16990 * C977 + C16985 * C981 + C16989 * C978 +
                       C16984 * C982 + C16988 * C979 + C16983 * C983) *
                          C50686) *
                         C50759 * C50835) *
                        C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C19772 * C122 + C50611 * C129) * C253 +
                      (C19772 * C133 + C50611 * C143) * C50899 - C19908 * C254 -
                      C19909 * C50686) *
                         C50759 * C39117 +
                     (C22852 + C22853 - C22854 - C22855) * C50759 * C39118 +
                     C39804 * C39119 + C39812 * C39120) *
                        C1277 +
                    ((C19914 * C254 -
                      ((C19772 * C134 + C50611 * C144) * C50899 +
                       (C19772 * C123 + C50611 * C130) * C253) +
                      C19915 * C50686) *
                         C50759 * C39117 +
                     (C23866 - (C23867 + C23868) + C23869) * C50759 * C39118 +
                     (C23874 - (C23875 + C23876) + C23877) * C50759 * C39119 +
                     (C40452 - (C40453 + C40454) + C40455) * C50759 * C39120) *
                        C50641) *
                       C1514 +
                   (((C22854 - (C22853 + C22852) + C22855) * C50759 * C39117 +
                     (C22862 - (C22861 + C22860) + C22863) * C50759 * C39118 +
                     (C22868 - (C22869 + C22870) + C22871) * C50759 * C39119 +
                     (C39806 - (C39807 + C39808) + C39809) * C50759 * C39120) *
                        C1277 +
                    ((C23868 + C23867 - C23866 - C23869) * C50759 * C39117 +
                     (C23876 + C23875 - C23874 - C23877) * C50759 * C39118 +
                     (C40454 + C40453 - C40452 - C40455) * C50759 * C39119 +
                     (C39702 * C253 + C39703 * C50899 -
                      (C19772 * C6179 + C50611 * C6181) * C254 -
                      (C19772 * C6183 + C50611 * C6185) * C50686) *
                         C50759 * C39120) *
                        C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19772 * C122 + C50611 * C129) * C121 +
              (C19772 * C133 + C50611 * C143) * C50670) *
                 C2173 +
             (C19908 * C121 + C19909 * C50670) * C2174 +
             (C19910 * C121 + C19911 * C50670) * C2175) *
                C33783 +
            ((C22076 + C22077) * C2173 + (C22032 + C22033) * C2174 +
             (C31400 + C31401) * C2175) *
                C50835) *
               C1277 -
           (((C31402 + C31403) * C2175 + (C22046 + C22047) * C2174 +
             (C22082 + C22083) * C2173) *
                C50835 +
            ((C19917 * C50670 + C19916 * C121) * C2175 +
             (C19915 * C50670 + C19914 * C121) * C2174 +
             ((C19772 * C134 + C50611 * C144) * C50670 +
              (C19772 * C123 + C50611 * C130) * C121) *
                 C2173) *
                C33783) *
               C50641) *
              C50947 +
          ((((C22083 + C22082) * C2173 + (C22047 + C22046) * C2174 +
             (C31403 + C31402) * C2175) *
                C33783 +
            ((C22081 + C22080) * C2173 + (C22041 + C22040) * C2174 +
             (C31948 + C31949) * C2175) *
                C50835) *
               C50641 -
           (((C31950 + C31951) * C2175 + (C22039 + C22038) * C2174 +
             (C22079 + C22078) * C2173) *
                C50835 +
            ((C31401 + C31400) * C2175 + (C22033 + C22032) * C2174 +
             (C22077 + C22076) * C2173) *
                C33783) *
               C1277) *
              C50936 +
          (((C22666 * C2173 + C22667 * C2174 + (C31951 + C31950) * C2175) *
                C33783 +
            ((C22701 + C22700) * C2173 + (C22679 + C22678) * C2174 +
             (C32204 + C32205) * C2175) *
                C50835) *
               C1277 -
           ((((C19772 * C3486 + C50611 * C3494) * C50670 +
              (C19772 * C3482 + C50611 * C3488) * C121) *
                 C2175 +
             (C22699 + C22698) * C2174 + (C22697 + C22696) * C2173) *
                C50835 +
            ((C31949 + C31948) * C2175 + C22668 * C2174 + C22669 * C2173) *
                C33783) *
               C50641) *
              C1746)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
              C16990 * C124 + C16985 * C131) *
                 C121 +
             (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
              C16990 * C135 + C16985 * C145) *
                 C50670) *
                C50759 * C33783 +
            ((C34114 + C34115 + C34116) * C121 +
             (C34117 + C34118 + C34119) * C50670) *
                C50759 * C50835) *
               C1277 -
           (((C34120 + C34121 + C34122) * C50670 +
             (C34123 + C34124 + C34125) * C121) *
                C50759 * C50835 +
            ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
              C16988 * C134 + C16983 * C144) *
                 C50670 +
             (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
              C16988 * C123 + C16983 * C130) *
                 C121) *
                C50759 * C33783) *
               C50641) *
              C50947 +
          ((((C34125 + C34124 + C34123) * C121 +
             (C34122 + C34121 + C34120) * C50670) *
                C50759 * C33783 +
            ((C34692 + C34693 + C34694) * C121 +
             (C34695 + C34696 + C34697) * C50670) *
                C50759 * C50835) *
               C50641 -
           (((C34698 + C34699 + C34700) * C50670 +
             (C34701 + C34702 + C34703) * C121) *
                C50759 * C50835 +
            ((C34119 + C34118 + C34117) * C50670 +
             (C34116 + C34115 + C34114) * C121) *
                C50759 * C33783) *
               C1277) *
              C50936 +
          ((((C34703 + C34702 + C34701) * C121 +
             (C34700 + C34699 + C34698) * C50670) *
                C50759 * C33783 +
            ((C34960 + C34961 + C34962) * C121 +
             (C34963 + C34964 + C34965) * C50670) *
                C50759 * C50835) *
               C1277 -
           (((C16990 * C1059 + C16985 * C1067 + C16989 * C1060 +
              C16984 * C1068 + C16988 * C1061 + C16983 * C1069) *
                 C50670 +
             (C16990 * C1055 + C16985 * C1063 + C16989 * C1056 +
              C16984 * C1064 + C16988 * C1057 + C16983 * C1065) *
                 C121) *
                C50759 * C50835 +
            ((C34697 + C34696 + C34695) * C50670 +
             (C34694 + C34693 + C34692) * C121) *
                C50759 * C33783) *
               C50641) *
              C1746)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C121 +
             (C19772 * C133 + C50611 * C143) * C50670) *
                C50759 * C39117 +
            (C22076 + C22077) * C50759 * C39118 + C39692 * C39119 +
            C39700 * C39120) *
               C1277 -
           (C39701 * C39120 + C39695 * C39119 +
            (C22082 + C22083) * C50759 * C39118 +
            ((C19772 * C134 + C50611 * C144) * C50670 +
             (C19772 * C123 + C50611 * C130) * C121) *
                C50759 * C39117) *
               C50641) *
              C50947 +
          (((C22083 + C22082) * C50759 * C39117 +
            (C22081 + C22080) * C50759 * C39118 +
            (C22696 + C22697) * C50759 * C39119 +
            (C39704 + C39705) * C50759 * C39120) *
               C50641 -
           (C39889 * C39120 + C39884 * C39119 +
            (C22079 + C22078) * C50759 * C39118 +
            (C22077 + C22076) * C50759 * C39117) *
               C1277) *
              C50936 +
          ((C39692 * C39117 + C39700 * C39118 +
            (C23006 + C23007) * C50759 * C39119 +
            (C39892 + C39893) * C50759 * C39120) *
               C1277 -
           (((C19772 * C6309 + C50611 * C6313) * C50670 +
             (C19772 * C6307 + C50611 * C6311) * C121) *
                C50759 * C39120 +
            (C39705 + C39704) * C50759 * C39119 + C39701 * C39118 +
            C39695 * C39117) *
               C50641) *
              C1746)) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C506 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C501 -
            (C17174 + C17175 + C17176) * C507 -
            (C17177 + C17178 + C17179) * C502 +
            (C17508 + C17509 + C17510) * C508 +
            (C17511 + C17512 + C17513) * C503) *
               C50759 * C33783 +
           ((C34114 + C34115 + C34116) * C506 +
            (C34117 + C34118 + C34119) * C501 -
            (C17808 + C17807 + C17806) * C507 -
            (C17811 + C17810 + C17809) * C502 +
            (C17814 + C17813 + C17812) * C508 +
            (C17817 + C17816 + C17815) * C503) *
               C50759 * C50835) *
              C50892 +
          (((C17180 + C17181 + C17182) * C507 -
            ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
              C16988 * C134 + C16983 * C144) *
                 C501 +
             (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
              C16988 * C123 + C16983 * C130) *
                 C506) +
            (C17183 + C17184 + C17185) * C502 -
            (C17514 + C17515 + C17516) * C508 -
            (C17517 + C17518 + C17519) * C503) *
               C50759 * C33783 +
           ((C18726 + C18725 + C18724) * C507 -
            ((C34120 + C34121 + C34122) * C501 +
             (C34123 + C34124 + C34125) * C506) +
            (C18729 + C18728 + C18727) * C502 -
            (C16990 * C722 + C16985 * C734 + C16989 * C723 + C16984 * C735 +
             C16988 * C724 + C16983 * C736) *
                C508 -
            (C16990 * C738 + C16985 * C746 + C16989 * C739 + C16984 * C747 +
             C16988 * C740 + C16983 * C748) *
                C503) *
               C50759 * C50835) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C121 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C50670) *
               C50759 * C33783 +
           ((C16988 * C383 + C16983 * C394 + C16989 * C379 + C16984 * C385 +
             C16990 * C380 + C16985 * C386) *
                C121 +
            (C16988 * C393 + C16983 * C401 + C16989 * C389 + C16984 * C397 +
             C16990 * C390 + C16985 * C398) *
                C50670) *
               C50759 * C50835) *
              C112 -
          (((C16990 * C391 + C16985 * C399 + C16989 * C390 + C16984 * C398 +
             C16988 * C389 + C16983 * C397) *
                C50670 +
            (C16990 * C381 + C16985 * C387 + C16989 * C380 + C16984 * C386 +
             C16988 * C379 + C16983 * C385) *
                C121) *
               C50759 * C50835 +
           ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
             C16988 * C134 + C16983 * C144) *
                C50670 +
            (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
             C16988 * C123 + C16983 * C130) *
                C121) *
               C50759 * C33783) *
              C113 +
          (((C16988 * C124 + C16983 * C131 + C16989 * C125 + C16984 * C132 +
             C16990 * C126 + C16985 * C138) *
                C121 +
            (C16988 * C135 + C16983 * C145 + C16989 * C136 + C16984 * C146 +
             C16990 * C137 + C16985 * C147) *
                C50670) *
               C50759 * C33783 +
           ((C16988 * C380 + C16983 * C386 + C16989 * C381 + C16984 * C387 +
             C16990 * C382 + C16985 * C388) *
                C121 +
            (C16988 * C390 + C16983 * C398 + C16989 * C391 + C16984 * C399 +
             C16990 * C392 + C16985 * C400) *
                C50670) *
               C50759 * C50835) *
              C114 -
          (((C16990 * C395 + C16985 * C402 + C16989 * C392 + C16984 * C400 +
             C16988 * C391 + C16983 * C399) *
                C50670 +
            (C16990 * C384 + C16985 * C396 + C16989 * C382 + C16984 * C388 +
             C16988 * C381 + C16983 * C387) *
                C121) *
               C50759 * C50835 +
           ((C16990 * C140 + C16985 * C148 + C16989 * C137 + C16984 * C147 +
             C16988 * C136 + C16983 * C146) *
                C50670 +
            (C16990 * C127 + C16985 * C139 + C16989 * C126 + C16984 * C138 +
             C16988 * C125 + C16983 * C132) *
                C121) *
               C50759 * C33783) *
              C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C121 +
             (C19772 * C133 + C50611 * C143) * C50670) *
                C2173 +
            (C19908 * C121 + C19909 * C50670) * C2174 +
            (C19910 * C121 + C19911 * C50670) * C2175) *
               C33783 +
           ((C22076 + C22077) * C2173 + (C22032 + C22033) * C2174 +
            (C31400 + C31401) * C2175) *
               C50835) *
              C112 -
          (((C31402 + C31403) * C2175 + (C22046 + C22047) * C2174 +
            (C22082 + C22083) * C2173) *
               C50835 +
           ((C19917 * C50670 + C19916 * C121) * C2175 +
            (C19915 * C50670 + C19914 * C121) * C2174 +
            ((C19772 * C134 + C50611 * C144) * C50670 +
             (C19772 * C123 + C50611 * C130) * C121) *
                C2173) *
               C33783) *
              C113 +
          ((((C19772 * C124 + C50611 * C131) * C121 +
             (C19772 * C135 + C50611 * C145) * C50670) *
                C2173 +
            (C19920 * C121 + C19921 * C50670) * C2174 +
            (C19922 * C121 + C19923 * C50670) * C2175) *
               C33783 +
           ((C22084 + C22085) * C2173 + (C22056 + C22057) * C2174 +
            (C31404 + C31405) * C2175) *
               C50835) *
              C114 -
          ((((C19772 * C738 + C50611 * C746) * C50670 +
             (C19772 * C722 + C50611 * C734) * C121) *
                C2175 +
            ((C19772 * C733 + C50611 * C745) * C50670 +
             (C19772 * C721 + C50611 * C729) * C121) *
                C2174 +
            ((C19772 * C391 + C50611 * C399) * C50670 +
             (C19772 * C381 + C50611 * C387) * C121) *
                C2173) *
               C50835 +
           (((C19772 * C521 + C50611 * C527) * C50670 +
             (C19772 * C512 + C50611 * C517) * C121) *
                C2175 +
            ((C19772 * C265 + C50611 * C273) * C50670 +
             (C19772 * C255 + C50611 * C261) * C121) *
                C2174 +
            ((C19772 * C136 + C50611 * C146) * C50670 +
             (C19772 * C125 + C50611 * C132) * C121) *
                C2173) *
               C33783) *
              C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C506 +
             (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
             C19909 * C502 + C19910 * C508 + C19911 * C503) *
                C2173 +
            (C19908 * C506 + C19909 * C501 - C19910 * C507 - C19911 * C502 +
             C19912 * C508 + C19913 * C503) *
                C2174 +
            (C19910 * C506 + C19911 * C501 - C19912 * C507 - C19913 * C502 +
             C20130 * C508 + C20131 * C503) *
                C2175) *
               C33783 +
           ((C22484 + C22485 - C22486 - C22487 + C22488 + C22489) * C2173 +
            (C22490 + C22491 - C22492 - C22493 + C22494 + C22495) * C2174 +
            (C31796 + C31797 - C31798 - C31799 + C31800 + C31801) * C2175) *
               C50835) *
              C50892 +
          (((C19914 * C507 -
             ((C19772 * C134 + C50611 * C144) * C501 +
              (C19772 * C123 + C50611 * C130) * C506) +
             C19915 * C502 - C19916 * C508 - C19917 * C503) *
                C2173 +
            (C19916 * C507 - (C19915 * C501 + C19914 * C506) + C19917 * C502 -
             C19918 * C508 - C19919 * C503) *
                C2174 +
            (C19918 * C507 - (C19917 * C501 + C19916 * C506) + C19919 * C502 -
             C20132 * C508 - C20133 * C503) *
                C2175) *
               C33783 +
           ((C20962 * C507 - (C22070 * C501 + C22071 * C506) + C20963 * C502 -
             C20964 * C508 - C20965 * C503) *
                C2173 +
            (C20964 * C507 - (C20963 * C501 + C20962 * C506) + C20965 * C502 -
             C20966 * C508 - C20967 * C503) *
                C2174 +
            (C20966 * C507 - (C20965 * C501 + C20964 * C506) + C20967 * C502 -
             (C19772 * C2996 + C50611 * C3002) * C508 -
             (C19772 * C3004 + C50611 * C3008) * C503) *
                C2175) *
               C50835) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C121 +
            (C19772 * C133 + C50611 * C143) * C50670) *
               C50759 * C39117 +
           (C22076 + C22077) * C50759 * C39118 + C22666 * C50759 * C39119 +
           (C22701 + C22700) * C50759 * C39120) *
              C112 -
          ((C22697 + C22696) * C50759 * C39120 + C22669 * C50759 * C39119 +
           (C22082 + C22083) * C50759 * C39118 +
           ((C19772 * C134 + C50611 * C144) * C50670 +
            (C19772 * C123 + C50611 * C130) * C121) *
               C50759 * C39117) *
              C113 +
          (((C19772 * C124 + C50611 * C131) * C121 +
            (C19772 * C135 + C50611 * C145) * C50670) *
               C50759 * C39117 +
           (C22084 + C22085) * C50759 * C39118 +
           (C22086 + C22087) * C50759 * C39119 +
           ((C19772 * C1056 + C50611 * C1064) * C121 +
            (C19772 * C1060 + C50611 * C1068) * C50670) *
               C50759 * C39120) *
              C114 -
          (((C19772 * C1059 + C50611 * C1067) * C50670 +
            (C19772 * C1055 + C50611 * C1063) * C121) *
               C50759 * C39120 +
           ((C19772 * C863 + C50611 * C869) * C50670 +
            (C19772 * C854 + C50611 * C859) * C121) *
               C50759 * C39119 +
           ((C19772 * C391 + C50611 * C399) * C50670 +
            (C19772 * C381 + C50611 * C387) * C121) *
               C50759 * C39118 +
           ((C19772 * C136 + C50611 * C146) * C50670 +
            (C19772 * C125 + C50611 * C132) * C121) *
               C50759 * C39117) *
              C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C506 +
            (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
            C19909 * C502 + C19910 * C508 + C19911 * C503) *
               C50759 * C39117 +
           (C22484 + C22485 - C22486 - C22487 + C22488 + C22489) * C50759 *
               C39118 +
           (C22496 + C22497 - C22498 - C22499 + C22500 + C22501) * C50759 *
               C39119 +
           (C22693 * C506 + C22692 * C501 - C22516 * C507 - C22517 * C502 +
            C22518 * C508 + C22519 * C503) *
               C50759 * C39120) *
              C50892 +
          ((C19914 * C507 -
            ((C19772 * C134 + C50611 * C144) * C501 +
             (C19772 * C123 + C50611 * C130) * C506) +
            C19915 * C502 - C19916 * C508 - C19917 * C503) *
               C50759 * C39117 +
           (C20962 * C507 - (C22070 * C501 + C22071 * C506) + C20963 * C502 -
            C20964 * C508 - C20965 * C503) *
               C50759 * C39118 +
           (C21876 * C507 - (C22068 * C501 + C22069 * C506) + C21877 * C502 -
            C22238 * C508 - C22239 * C503) *
               C50759 * C39119 +
           (C22690 * C507 - (C22689 * C501 + C22688 * C506) + C22691 * C502 -
            (C19772 * C3482 + C50611 * C3488) * C508 -
            (C19772 * C3486 + C50611 * C3494) * C503) *
               C50759 * C39120) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
            C16990 * C124 + C16985 * C131) *
               C600 +
           (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
            C16990 * C135 + C16985 * C145) *
               C595 -
           (C17174 + C17175 + C17176) * C601 -
           (C17177 + C17178 + C17179) * C596 +
           (C17508 + C17509 + C17510) * C602 +
           (C17511 + C17512 + C17513) * C597 -
           (C17630 + C17631 + C17632) * C603 -
           (C17633 + C17634 + C17635) * C598) *
              C50759 * C33783 +
          ((C34114 + C34115 + C34116) * C600 +
           (C34117 + C34118 + C34119) * C595 -
           (C17808 + C17807 + C17806) * C601 -
           (C17811 + C17810 + C17809) * C596 +
           (C17814 + C17813 + C17812) * C602 +
           (C17817 + C17816 + C17815) * C597 -
           (C16990 * C3984 + C16985 * C3985 + C16989 * C2994 + C16984 * C2998 +
            C16988 * C2995 + C16983 * C2999) *
               C603 -
           (C16990 * C3986 + C16985 * C3987 + C16989 * C3000 + C16984 * C3006 +
            C16988 * C3001 + C16983 * C3007) *
               C598) *
              C50759 * C50835) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C253 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C50899 -
            (C17174 + C17175 + C17176) * C254 -
            (C17177 + C17178 + C17179) * C50686) *
               C50759 * C33783 +
           ((C16988 * C383 + C16983 * C394 + C16989 * C379 + C16984 * C385 +
             C16990 * C380 + C16985 * C386) *
                C253 +
            (C16988 * C393 + C16983 * C401 + C16989 * C389 + C16984 * C397 +
             C16990 * C390 + C16985 * C398) *
                C50899 -
            (C17808 + C17807 + C17806) * C254 -
            (C17811 + C17810 + C17809) * C50686) *
               C50759 * C50835) *
              C250 +
          (((C17180 + C17181 + C17182) * C254 -
            ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
              C16988 * C134 + C16983 * C144) *
                 C50899 +
             (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
              C16988 * C123 + C16983 * C130) *
                 C253) +
            (C17183 + C17184 + C17185) * C50686) *
               C50759 * C33783 +
           ((C18726 + C18725 + C18724) * C254 -
            ((C16990 * C391 + C16985 * C399 + C16989 * C390 + C16984 * C398 +
              C16988 * C389 + C16983 * C397) *
                 C50899 +
             (C16990 * C381 + C16985 * C387 + C16989 * C380 + C16984 * C386 +
              C16988 * C379 + C16983 * C385) *
                 C253) +
            (C18729 + C18728 + C18727) * C50686) *
               C50759 * C50835) *
              C251 +
          (((C16988 * C124 + C16983 * C131 + C16989 * C125 + C16984 * C132 +
             C16990 * C126 + C16985 * C138) *
                C253 +
            (C16988 * C135 + C16983 * C145 + C16989 * C136 + C16984 * C146 +
             C16990 * C137 + C16985 * C147) *
                C50899 -
            (C17186 + C17187 + C17188) * C254 -
            (C17189 + C17190 + C17191) * C50686) *
               C50759 * C33783 +
           ((C16988 * C380 + C16983 * C386 + C16989 * C381 + C16984 * C387 +
             C16990 * C382 + C16985 * C388) *
                C253 +
            (C16988 * C390 + C16983 * C398 + C16989 * C391 + C16984 * C399 +
             C16990 * C392 + C16985 * C400) *
                C50899 -
            (C16990 * C1412 + C16985 * C1413 + C16989 * C721 + C16984 * C729 +
             C16988 * C720 + C16983 * C728) *
                C254 -
            (C16990 * C1414 + C16985 * C1415 + C16989 * C733 + C16984 * C745 +
             C16988 * C732 + C16983 * C744) *
                C50686) *
               C50759 * C50835) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C253 +
             (C19772 * C133 + C50611 * C143) * C50899 - C19908 * C254 -
             C19909 * C50686) *
                C2173 +
            (C19908 * C253 + C19909 * C50899 - C19910 * C254 -
             C19911 * C50686) *
                C2174 +
            (C19910 * C253 + C19911 * C50899 - C19912 * C254 -
             C19913 * C50686) *
                C2175) *
               C33783 +
           ((C22852 + C22853 - C22854 - C22855) * C2173 +
            (C22856 + C22857 - C22858 - C22859) * C2174 +
            (C32098 + C32099 - C32100 - C32101) * C2175) *
               C50835) *
              C250 +
          (((C19914 * C254 -
             ((C19772 * C134 + C50611 * C144) * C50899 +
              (C19772 * C123 + C50611 * C130) * C253) +
             C19915 * C50686) *
                C2173 +
            (C19916 * C254 - (C19915 * C50899 + C19914 * C253) +
             C19917 * C50686) *
                C2174 +
            (C19918 * C254 - (C19917 * C50899 + C19916 * C253) +
             C19919 * C50686) *
                C2175) *
               C33783 +
           ((C23866 - (C23867 + C23868) + C23869) * C2173 +
            (C23870 - (C23871 + C23872) + C23873) * C2174 +
            (C33040 - (C33041 + C33042) + C33043) * C2175) *
               C50835) *
              C251 +
          ((((C19772 * C124 + C50611 * C131) * C253 +
             (C19772 * C135 + C50611 * C145) * C50899 - C19920 * C254 -
             C19921 * C50686) *
                C2173 +
            (C19920 * C253 + C19921 * C50899 - C19922 * C254 -
             C19923 * C50686) *
                C2174 +
            (C19922 * C253 + C19923 * C50899 - C19924 * C254 -
             C19925 * C50686) *
                C2175) *
               C33783 +
           ((C22072 * C253 + C22073 * C50899 - C21878 * C254 -
             C21879 * C50686) *
                C2173 +
            (C21878 * C253 + C21879 * C50899 - C31252 * C254 -
             C31253 * C50686) *
                C2174 +
            (C31252 * C253 + C31253 * C50899 -
             (C19772 * C3984 + C50611 * C3985) * C254 -
             (C19772 * C3986 + C50611 * C3987) * C50686) *
                C2175) *
               C50835) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C600 +
            (C19772 * C133 + C50611 * C143) * C595 - C19908 * C601 -
            C19909 * C596 + C19910 * C602 + C19911 * C597 - C19912 * C603 -
            C19913 * C598) *
               C2173 +
           (C19908 * C600 + C19909 * C595 - C19910 * C601 - C19911 * C596 +
            C19912 * C602 + C19913 * C597 - C20130 * C603 - C20131 * C598) *
               C2174 +
           (C19910 * C600 + C19911 * C595 - C19912 * C601 - C19913 * C596 +
            C20130 * C602 + C20131 * C597 - C20208 * C603 - C20209 * C598) *
               C2175) *
              C33783 +
          ((C22064 * C600 + C22065 * C595 - C20328 * C601 - C20329 * C596 +
            C20330 * C602 + C20331 * C597 - C20332 * C603 - C20333 * C598) *
               C2173 +
           (C20328 * C600 + C20329 * C595 - C20330 * C601 - C20331 * C596 +
            C20332 * C602 + C20333 * C597 - C20334 * C603 - C20335 * C598) *
               C2174 +
           (C20330 * C600 + C20331 * C595 - C20332 * C601 - C20333 * C596 +
            C20334 * C602 + C20335 * C597 -
            (C19772 * C20307 + C50611 * C20308) * C603 -
            (C19772 * C20309 + C50611 * C20310) * C598) *
               C2175) *
              C50835) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C253 +
            (C19772 * C133 + C50611 * C143) * C50899 - C19908 * C254 -
            C19909 * C50686) *
               C50759 * C39117 +
           (C22852 + C22853 - C22854 - C22855) * C50759 * C39118 +
           C22886 * C50759 * C39119 +
           (C22870 + C22869 - C22868 - C22871) * C50759 * C39120) *
              C250 +
          ((C19914 * C254 -
            ((C19772 * C134 + C50611 * C144) * C50899 +
             (C19772 * C123 + C50611 * C130) * C253) +
            C19915 * C50686) *
               C50759 * C39117 +
           (C23866 - (C23867 + C23868) + C23869) * C50759 * C39118 +
           (C23874 - (C23875 + C23876) + C23877) * C50759 * C39119 +
           (C22690 * C254 - (C22689 * C50899 + C22688 * C253) +
            C22691 * C50686) *
               C50759 * C39120) *
              C251 +
          (((C19772 * C124 + C50611 * C131) * C253 +
            (C19772 * C135 + C50611 * C145) * C50899 - C19920 * C254 -
            C19921 * C50686) *
               C50759 * C39117 +
           (C22072 * C253 + C22073 * C50899 - C21878 * C254 - C21879 * C50686) *
               C50759 * C39118 +
           (C22074 * C253 + C22075 * C50899 - C21880 * C254 - C21881 * C50686) *
               C50759 * C39119 +
           ((C19772 * C1056 + C50611 * C1064) * C253 +
            (C19772 * C1060 + C50611 * C1068) * C50899 -
            (C19772 * C6819 + C50611 * C6820) * C254 -
            (C19772 * C6821 + C50611 * C6822) * C50686) *
               C50759 * C39120) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19772 * C122 + C50611 * C129) * C600 +
           (C19772 * C133 + C50611 * C143) * C595 - C19908 * C601 -
           C19909 * C596 + C19910 * C602 + C19911 * C597 - C19912 * C603 -
           C19913 * C598) *
              C50759 * C39117 +
          (C22064 * C600 + C22065 * C595 - C20328 * C601 - C20329 * C596 +
           C20330 * C602 + C20331 * C597 - C20332 * C603 - C20333 * C598) *
              C50759 * C39118 +
          (C22066 * C600 + C22067 * C595 - C20548 * C601 - C20549 * C596 +
           C20550 * C602 + C20551 * C597 - C20552 * C603 - C20553 * C598) *
              C50759 * C39119 +
          (C22693 * C600 + C22692 * C595 - C22516 * C601 - C22517 * C596 +
           C22518 * C602 + C22519 * C597 -
           (C19772 * C20619 + C50611 * C20621) * C603 -
           (C19772 * C20620 + C50611 * C20622) * C598) *
              C50759 * C39120) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C506 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C501 -
            (C17174 + C17175 + C17176) * C507 -
            (C17177 + C17178 + C17179) * C502 +
            (C17508 + C17509 + C17510) * C508 +
            (C17511 + C17512 + C17513) * C503) *
               C50759 * C33783 +
           ((C34114 + C34115 + C34116) * C506 +
            (C34117 + C34118 + C34119) * C501 -
            (C17808 + C17807 + C17806) * C507 -
            (C17811 + C17810 + C17809) * C502 +
            (C17814 + C17813 + C17812) * C508 +
            (C17817 + C17816 + C17815) * C503) *
               C50759 * C50835) *
              C50636 * C50901 +
          (((C17806 + C17807 + C17808) * C507 -
            ((C34119 + C34118 + C34117) * C501 +
             (C34116 + C34115 + C34114) * C506) +
            (C17809 + C17810 + C17811) * C502 -
            (C17812 + C17813 + C17814) * C508 -
            (C17815 + C17816 + C17817) * C503) *
               C50759 * C33783 +
           ((C18124 + C18123 + C18122) * C507 -
            ((C16990 * C862 + C16985 * C868 + C16989 * C861 + C16984 * C867 +
              C16988 * C860 + C16983 * C866) *
                 C501 +
             (C16990 * C853 + C16985 * C858 + C16989 * C852 + C16984 * C857 +
              C16988 * C851 + C16983 * C856) *
                 C506) +
            (C18127 + C18126 + C18125) * C502 -
            (C16990 * C3196 + C16985 * C3202 + C16989 * C3195 + C16984 * C3198 +
             C16988 * C3194 + C16983 * C3197) *
                C508 -
            (C16990 * C3201 + C16985 * C3205 + C16989 * C3200 + C16984 * C3204 +
             C16988 * C3199 + C16983 * C3203) *
                C503) *
               C50759 * C50835) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
              C16990 * C124 + C16985 * C131) *
                 C121 +
             (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
              C16990 * C135 + C16985 * C145) *
                 C50670) *
                C50759 * C33783 +
            ((C34114 + C34115 + C34116) * C121 +
             (C34117 + C34118 + C34119) * C50670) *
                C50759 * C50835) *
               C250 -
           (((C34120 + C34121 + C34122) * C50670 +
             (C34123 + C34124 + C34125) * C121) *
                C50759 * C50835 +
            ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
              C16988 * C134 + C16983 * C144) *
                 C50670 +
             (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
              C16988 * C123 + C16983 * C130) *
                 C121) *
                C50759 * C33783) *
               C251 +
           (((C16988 * C124 + C16983 * C131 + C16989 * C125 + C16984 * C132 +
              C16990 * C126 + C16985 * C138) *
                 C121 +
             (C16988 * C135 + C16983 * C145 + C16989 * C136 + C16984 * C146 +
              C16990 * C137 + C16985 * C147) *
                 C50670) *
                C50759 * C33783 +
            ((C34126 + C34127 + C34128) * C121 +
             (C34129 + C34130 + C34131) * C50670) *
                C50759 * C50835) *
               C252) *
              C50901 +
          ((((C34125 + C34124 + C34123) * C121 +
             (C34122 + C34121 + C34120) * C50670) *
                C50759 * C33783 +
            ((C16988 * C852 + C16983 * C857 + C16989 * C853 + C16984 * C858 +
              C16990 * C854 + C16985 * C859) *
                 C121 +
             (C16988 * C861 + C16983 * C867 + C16989 * C862 + C16984 * C868 +
              C16990 * C863 + C16985 * C869) *
                 C50670) *
                C50759 * C50835) *
               C251 -
           (((C16990 * C862 + C16985 * C868 + C16989 * C861 + C16984 * C867 +
              C16988 * C860 + C16983 * C866) *
                 C50670 +
             (C16990 * C853 + C16985 * C858 + C16989 * C852 + C16984 * C857 +
              C16988 * C851 + C16983 * C856) *
                 C121) *
                C50759 * C50835 +
            ((C34119 + C34118 + C34117) * C50670 +
             (C34116 + C34115 + C34114) * C121) *
                C50759 * C33783) *
               C250 -
           (((C16990 * C864 + C16985 * C870 + C16989 * C863 + C16984 * C869 +
              C16988 * C862 + C16983 * C868) *
                 C50670 +
             (C16990 * C855 + C16985 * C865 + C16989 * C854 + C16984 * C859 +
              C16988 * C853 + C16983 * C858) *
                 C121) *
                C50759 * C50835 +
            ((C34131 + C34130 + C34129) * C50670 +
             (C34128 + C34127 + C34126) * C121) *
                C50759 * C33783) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C19772 * C122 + C50611 * C129) * C121 +
              (C19772 * C133 + C50611 * C143) * C50670) *
                 C2173 +
             (C19908 * C121 + C19909 * C50670) * C2174 +
             (C19910 * C121 + C19911 * C50670) * C2175) *
                C33783 +
            ((C22076 + C22077) * C2173 + (C22032 + C22033) * C2174 +
             (C31400 + C31401) * C2175) *
                C50835) *
               C250 -
           (((C31402 + C31403) * C2175 + (C22046 + C22047) * C2174 +
             (C22082 + C22083) * C2173) *
                C50835 +
            ((C19917 * C50670 + C19916 * C121) * C2175 +
             (C19915 * C50670 + C19914 * C121) * C2174 +
             ((C19772 * C134 + C50611 * C144) * C50670 +
              (C19772 * C123 + C50611 * C130) * C121) *
                 C2173) *
                C33783) *
               C251 +
           ((((C19772 * C124 + C50611 * C131) * C121 +
              (C19772 * C135 + C50611 * C145) * C50670) *
                 C2173 +
             (C19920 * C121 + C19921 * C50670) * C2174 +
             (C19922 * C121 + C19923 * C50670) * C2175) *
                C33783 +
            ((C22084 + C22085) * C2173 + (C22056 + C22057) * C2174 +
             (C31404 + C31405) * C2175) *
                C50835) *
               C252) *
              C50901 +
          ((((C22083 + C22082) * C2173 + (C22047 + C22046) * C2174 +
             (C31403 + C31402) * C2175) *
                C33783 +
            ((C22081 + C22080) * C2173 + (C22041 + C22040) * C2174 +
             (C31948 + C31949) * C2175) *
                C50835) *
               C251 -
           (((C31950 + C31951) * C2175 + (C22039 + C22038) * C2174 +
             (C22079 + C22078) * C2173) *
                C50835 +
            ((C31401 + C31400) * C2175 + (C22033 + C22032) * C2174 +
             (C22077 + C22076) * C2173) *
                C33783) *
               C250 -
           ((((C19772 * C3201 + C50611 * C3205) * C50670 +
              (C19772 * C3196 + C50611 * C3202) * C121) *
                 C2175 +
             (C22063 + C22062) * C2174 + (C22087 + C22086) * C2173) *
                C50835 +
            ((C31405 + C31404) * C2175 + (C22057 + C22056) * C2174 +
             (C22085 + C22084) * C2173) *
                C33783) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C506 +
             (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
             C19909 * C502 + C19910 * C508 + C19911 * C503) *
                C2173 +
            (C19908 * C506 + C19909 * C501 - C19910 * C507 - C19911 * C502 +
             C19912 * C508 + C19913 * C503) *
                C2174 +
            (C19910 * C506 + C19911 * C501 - C19912 * C507 - C19913 * C502 +
             C20130 * C508 + C20131 * C503) *
                C2175) *
               C33783 +
           ((C22484 + C22485 - C22486 - C22487 + C22488 + C22489) * C2173 +
            (C22490 + C22491 - C22492 - C22493 + C22494 + C22495) * C2174 +
            (C31796 + C31797 - C31798 - C31799 + C31800 + C31801) * C2175) *
               C50835) *
              C50636 * C50901 +
          (((C22486 - (C22485 + C22484) + C22487 - C22488 - C22489) * C2173 +
            (C22492 - (C22491 + C22490) + C22493 - C22494 - C22495) * C2174 +
            (C31798 - (C31797 + C31796) + C31799 - C31800 - C31801) * C2175) *
               C33783 +
           ((C22498 - (C22497 + C22496) + C22499 - C22500 - C22501) * C2173 +
            (C22504 - (C22503 + C22502) + C22505 - C22506 - C22507) * C2174 +
            (C20552 * C507 - (C20551 * C501 + C20550 * C506) + C20553 * C502 -
             (C19772 * C20531 + C50611 * C20532) * C508 -
             (C19772 * C20533 + C50611 * C20534) * C503) *
                C2175) *
               C50835) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C121 +
             (C19772 * C133 + C50611 * C143) * C50670) *
                C50759 * C39117 +
            (C22076 + C22077) * C50759 * C39118 + C22666 * C50759 * C39119 +
            (C22701 + C22700) * C50759 * C39120) *
               C250 -
           ((C22697 + C22696) * C50759 * C39120 + C22669 * C50759 * C39119 +
            (C22082 + C22083) * C50759 * C39118 +
            ((C19772 * C134 + C50611 * C144) * C50670 +
             (C19772 * C123 + C50611 * C130) * C121) *
                C50759 * C39117) *
               C251 +
           (((C19772 * C124 + C50611 * C131) * C121 +
             (C19772 * C135 + C50611 * C145) * C50670) *
                C50759 * C39117 +
            (C22084 + C22085) * C50759 * C39118 +
            (C22086 + C22087) * C50759 * C39119 +
            (C39324 + C39325) * C50759 * C39120) *
               C252) *
              C50901 +
          (((C22083 + C22082) * C50759 * C39117 +
            (C22081 + C22080) * C50759 * C39118 +
            (C22696 + C22697) * C50759 * C39119 +
            ((C19772 * C5986 + C50611 * C5989) * C121 +
             (C19772 * C5991 + C50611 * C5995) * C50670) *
                C50759 * C39120) *
               C251 -
           ((C23007 + C23006) * C50759 * C39120 + C22994 * C50759 * C39119 +
            (C22079 + C22078) * C50759 * C39118 +
            (C22077 + C22076) * C50759 * C39117) *
               C250 -
           (((C19772 * C5992 + C50611 * C5996) * C50670 +
             (C19772 * C5987 + C50611 * C5993) * C121) *
                C50759 * C39120 +
            (C39325 + C39324) * C50759 * C39119 +
            (C22087 + C22086) * C50759 * C39118 +
            (C22085 + C22084) * C50759 * C39117) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C506 +
            (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
            C19909 * C502 + C19910 * C508 + C19911 * C503) *
               C50759 * C39117 +
           (C22484 + C22485 - C22486 - C22487 + C22488 + C22489) * C50759 *
               C39118 +
           (C22496 + C22497 - C22498 - C22499 + C22500 + C22501) * C50759 *
               C39119 +
           (C39588 + C39589 - C39590 - C39591 + C39592 + C39593) * C50759 *
               C39120) *
              C50636 * C50901 +
          ((C22486 - (C22485 + C22484) + C22487 - C22488 - C22489) * C50759 *
               C39117 +
           (C22498 - (C22497 + C22496) + C22499 - C22500 - C22501) * C50759 *
               C39118 +
           (C39590 - (C39589 + C39588) + C39591 - C39592 - C39593) * C50759 *
               C39119 +
           (C22882 * C507 - (C23004 * C501 + C23003 * C506) + C22883 * C502 -
            (C19772 * C22847 + C50611 * C22848) * C508 -
            (C19772 * C22849 + C50611 * C22850) * C503) *
               C50759 * C39120) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C1174 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C1169 -
            (C24854 + C24855) * C1175 - (C24856 + C24857) * C50686) *
               C50759 * C50950 +
           ((C27944 + C27945) * C1174 + (C27946 + C27947) * C1169 -
            C28474 * C1175 - C28475 * C50686) *
               C50759 * C50951 +
           (C45328 * C1174 + C45329 * C1169 - C28907 * C1175 -
            C28906 * C50686) *
               C50759 * C44486) *
              C50945 +
          (((C24862 + C24863) * C1175 -
            ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                 C1169 +
             (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                 C1174) +
            (C24864 + C24865) * C50686) *
               C50759 * C50950 +
           (C29708 * C1175 -
            ((C27948 + C27949) * C1169 + (C27950 + C27951) * C1174) +
            C29709 * C50686) *
               C50759 * C50951 +
           ((C28702 + C28703) * C1175 - (C45330 * C1169 + C45331 * C1174) +
            (C28704 + C28705) * C50686) *
               C50759 * C44486) *
              C50930 +
          (((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                C1174 +
            (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                C1169 -
            (C24870 + C24871) * C1175 - (C24872 + C24873) * C50686) *
               C50759 * C50950 +
           ((C27952 + C27953) * C1174 + (C27954 + C27955) * C1169 -
            (C27722 + C27723) * C1175 - (C27724 + C27725) * C50686) *
               C50759 * C50951 +
           ((C44788 + C44789) * C1174 + (C44790 + C44791) * C1169 -
            (C49761 * C969 + C50616 * C973 + C49768 * C970 + C50887 * C974) *
                C1175 -
            (C49761 * C977 + C50616 * C981 + C49768 * C978 + C50887 * C982) *
                C50686) *
               C50759 * C44486) *
              C1173) *
         C50700) /
        (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C1279 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C50946 -
            (C24854 + C24855) * C1280 - (C24856 + C24857) * C50933 +
            C25170 * C1281 + C25171 * C1276) *
               C50759 * C50950 +
           ((C27944 + C27945) * C1279 + (C27946 + C27947) * C50946 -
            C28474 * C1280 - C28475 * C50933 + C28476 * C1281 +
            C28477 * C1276) *
               C50759 * C50951 +
           (C45328 * C1279 + C45329 * C50946 - C28907 * C1280 -
            C28906 * C50933 + (C25807 + C25806) * C1281 +
            (C25809 + C25808) * C1276) *
               C50759 * C44486) *
              C1277 +
          (((C24862 + C24863) * C1280 -
            ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                 C50946 +
             (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                 C1279) +
            (C24864 + C24865) * C50933 - C25180 * C1281 - C25181 * C1276) *
               C50759 * C50950 +
           (C29708 * C1280 -
            ((C27948 + C27949) * C50946 + (C27950 + C27951) * C1279) +
            C29709 * C50933 - (C26414 + C26415) * C1281 -
            (C26416 + C26417) * C1276) *
               C50759 * C50951 +
           ((C28702 + C28703) * C1280 - (C45330 * C50946 + C45331 * C1279) +
            (C28704 + C28705) * C50933 -
            (C49761 * C3196 + C50616 * C3202 + C49768 * C3195 +
             C50887 * C3198) *
                C1281 -
            (C49761 * C3201 + C50616 * C3205 + C49768 * C3200 +
             C50887 * C3204) *
                C1276) *
               C50759 * C44486) *
              C50641) *
         C50700) /
        (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C1174 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C1169 -
             (C24854 + C24855) * C1175 - (C24856 + C24857) * C50686) *
                C50759 * C50950 +
            ((C27944 + C27945) * C1174 + (C27946 + C27947) * C1169 -
             C28474 * C1175 - C28475 * C50686) *
                C50759 * C50951 +
            (C45328 * C1174 + C45329 * C1169 - C28907 * C1175 -
             C28906 * C50686) *
                C50759 * C44486) *
               C1277 +
           (((C24862 + C24863) * C1175 -
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C1169 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C1174) +
             (C24864 + C24865) * C50686) *
                C50759 * C50950 +
            (C29708 * C1175 -
             ((C27948 + C27949) * C1169 + (C27950 + C27951) * C1174) +
             C29709 * C50686) *
                C50759 * C50951 +
            ((C28702 + C28703) * C1175 - (C45330 * C1169 + C45331 * C1174) +
             (C28704 + C28705) * C50686) *
                C50759 * C44486) *
               C50641) *
              C50901 +
          (((C28478 * C1175 -
             ((C27947 + C27946) * C1169 + (C27945 + C27944) * C1174) +
             C28479 * C50686) *
                C50759 * C50950 +
            (C28904 * C1175 -
             ((C28706 + C28707) * C1169 + (C28708 + C28709) * C1174) +
             C28905 * C50686) *
                C50759 * C50951 +
            ((C28917 + C28916) * C1175 - (C45604 * C1169 + C45605 * C1174) +
             (C28919 + C28918) * C50686) *
                C50759 * C44486) *
               C1277 +
           (((C27951 + C27950) * C1174 + (C27949 + C27948) * C1169 -
             C29711 * C1175 - C29710 * C50686) *
                C50759 * C50950 +
            ((C28698 + C28699) * C1174 + (C28700 + C28701) * C1169 -
             (C28703 + C28702) * C1175 - (C28705 + C28704) * C50686) *
                C50759 * C50951 +
            ((C45344 + C45345) * C1174 + (C45346 + C45347) * C1169 -
             (C49761 * C6819 + C50616 * C6820 + C49768 * C3484 +
              C50887 * C3492) *
                 C1175 -
             (C49761 * C6821 + C50616 * C6822 + C49768 * C3490 +
              C50887 * C3496) *
                 C50686) *
                C50759 * C44486) *
               C50641) *
              C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C1174 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C1169 -
             (C24854 + C24855) * C1175 - (C24856 + C24857) * C50686) *
                C50759 * C50950 +
            ((C27944 + C27945) * C1174 + (C27946 + C27947) * C1169 -
             C28474 * C1175 - C28475 * C50686) *
                C50759 * C50951 +
            (C45328 * C1174 + C45329 * C1169 - C28907 * C1175 -
             C28906 * C50686) *
                C50759 * C44486) *
               C50892 +
           (((C24862 + C24863) * C1175 -
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C1169 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C1174) +
             (C24864 + C24865) * C50686) *
                C50759 * C50950 +
            (C29708 * C1175 -
             ((C27948 + C27949) * C1169 + (C27950 + C27951) * C1174) +
             C29709 * C50686) *
                C50759 * C50951 +
            ((C28702 + C28703) * C1175 - (C45330 * C1169 + C45331 * C1174) +
             (C28704 + C28705) * C50686) *
                C50759 * C44486) *
               C50641) *
              C1514 +
          (((C28478 * C1175 -
             ((C27947 + C27946) * C1169 + (C27945 + C27944) * C1174) +
             C28479 * C50686) *
                C50759 * C50950 +
            (C28904 * C1175 -
             ((C28706 + C28707) * C1169 + (C28708 + C28709) * C1174) +
             C28905 * C50686) *
                C50759 * C50951 +
            ((C28917 + C28916) * C1175 - (C45604 * C1169 + C45605 * C1174) +
             (C28919 + C28918) * C50686) *
                C50759 * C44486) *
               C50892 +
           (((C27951 + C27950) * C1174 + (C27949 + C27948) * C1169 -
             C29711 * C1175 - C29710 * C50686) *
                C50759 * C50950 +
            ((C28698 + C28699) * C1174 + (C28700 + C28701) * C1169 -
             (C28703 + C28702) * C1175 - (C28705 + C28704) * C50686) *
                C50759 * C50951 +
            ((C45344 + C45345) * C1174 + (C45346 + C45347) * C1169 -
             (C49761 * C6819 + C50616 * C6820 + C49768 * C3484 +
              C50887 * C3492) *
                 C1175 -
             (C49761 * C6821 + C50616 * C6822 + C49768 * C3490 +
              C50887 * C3496) *
                 C50686) *
                C50759 * C44486) *
               C50641) *
              C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C1279 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C50946 -
            (C24854 + C24855) * C1280 - (C24856 + C24857) * C50933 +
            C25170 * C1281 + C25171 * C1276) *
               C50759 * C50950 +
           ((C27944 + C27945) * C1279 + (C27946 + C27947) * C50946 -
            C28474 * C1280 - C28475 * C50933 + C28476 * C1281 +
            C28477 * C1276) *
               C50759 * C50951 +
           (C45328 * C1279 + C45329 * C50946 - C28907 * C1280 -
            C28906 * C50933 + (C25807 + C25806) * C1281 +
            (C25809 + C25808) * C1276) *
               C50759 * C44486) *
              C50636 * C1514 +
          ((C28478 * C1280 -
            ((C27947 + C27946) * C50946 + (C27945 + C27944) * C1279) +
            C28479 * C50933 - C25492 * C1281 - C25493 * C1276) *
               C50759 * C50950 +
           (C28904 * C1280 -
            ((C28706 + C28707) * C50946 + (C28708 + C28709) * C1279) +
            C28905 * C50933 - (C25806 + C25807) * C1281 -
            (C25808 + C25809) * C1276) *
               C50759 * C50951 +
           ((C28917 + C28916) * C1280 - (C45604 * C50946 + C45605 * C1279) +
            (C28919 + C28918) * C50933 -
            (C49761 * C3482 + C50616 * C3488 + C49768 * C3483 +
             C50887 * C3489) *
                C1281 -
            (C49761 * C3486 + C50616 * C3494 + C49768 * C3487 +
             C50887 * C3495) *
                C1276) *
               C50759 * C44486) *
              C50636 * C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C1174 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C1169 -
            (C24854 + C24855) * C1175 - (C24856 + C24857) * C50686) *
               C50759 * C50950 +
           ((C27944 + C27945) * C1174 + (C27946 + C27947) * C1169 -
            C28474 * C1175 - C28475 * C50686) *
               C50759 * C50951 +
           C47087 * C44486) *
              C50636 * C50947 +
          ((C28478 * C1175 -
            ((C27947 + C27946) * C1169 + (C27945 + C27944) * C1174) +
            C28479 * C50686) *
               C50759 * C50950 +
           (C28904 * C1175 -
            ((C28706 + C28707) * C1169 + (C28708 + C28709) * C1174) +
            C28905 * C50686) *
               C50759 * C50951 +
           ((C28917 + C28916) * C1175 - (C45604 * C1169 + C45605 * C1174) +
            (C28919 + C28918) * C50686) *
               C50759 * C44486) *
              C50636 * C50936 +
          (C47087 * C50950 +
           ((C29058 + C29059) * C1174 + (C29060 + C29061) * C1169 -
            (C28916 + C28917) * C1175 - (C28918 + C28919) * C50686) *
               C50759 * C50951 +
           ((C45616 + C45617) * C1174 + (C45618 + C45619) * C1169 -
            (C49761 * C6179 + C50616 * C6181 + C49768 * C6180 +
             C50887 * C6182) *
                C1175 -
            (C49761 * C6183 + C50616 * C6185 + C49768 * C6184 +
             C50887 * C6186) *
                C50686) *
               C50759 * C44486) *
              C50636 * C1746)) /
        (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C506 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C501 -
            (C24854 + C24855) * C507 - (C24856 + C24857) * C502 +
            C25170 * C508 + C25171 * C503) *
               C50759 * C50950 +
           ((C27944 + C27945) * C506 + (C27946 + C27947) * C501 -
            C28474 * C507 - C28475 * C502 + C28476 * C508 + C28477 * C503) *
               C50759 * C50951 +
           ((C28709 + C28708) * C506 + (C28707 + C28706) * C501 -
            C28907 * C507 - C28906 * C502 + (C25807 + C25806) * C508 +
            (C25809 + C25808) * C503) *
               C50759 * C44486) *
              C50892 +
          (((C24862 + C24863) * C507 -
            ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                 C501 +
             (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                 C506) +
            (C24864 + C24865) * C502 - C25180 * C508 - C25181 * C503) *
               C50759 * C50950 +
           (C29708 * C507 -
            ((C27948 + C27949) * C501 + (C27950 + C27951) * C506) +
            C29709 * C502 - (C26414 + C26415) * C508 -
            (C26416 + C26417) * C503) *
               C50759 * C50951 +
           ((C28702 + C28703) * C507 -
            ((C28701 + C28700) * C501 + (C28699 + C28698) * C506) +
            (C28704 + C28705) * C502 -
            (C49761 * C3196 + C50616 * C3202 + C49768 * C3195 +
             C50887 * C3198) *
                C508 -
            (C49761 * C3201 + C50616 * C3205 + C49768 * C3200 +
             C50887 * C3204) *
                C503) *
               C50759 * C44486) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C121 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C50670) *
               C50759 * C50950 +
           ((C27944 + C27945) * C121 + (C27946 + C27947) * C50670) * C50759 *
               C50951 +
           ((C28709 + C28708) * C121 + (C28707 + C28706) * C50670) * C50759 *
               C44486) *
              C112 -
          (((C28701 + C28700) * C50670 + (C28699 + C28698) * C121) * C50759 *
               C44486 +
           ((C27948 + C27949) * C50670 + (C27950 + C27951) * C121) * C50759 *
               C50951 +
           ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                C50670 +
            (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                C121) *
               C50759 * C50950) *
              C113 +
          (((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                C121 +
            (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                C50670) *
               C50759 * C50950 +
           ((C27952 + C27953) * C121 + (C27954 + C27955) * C50670) * C50759 *
               C50951 +
           ((C49768 * C853 + C50887 * C858 + C49761 * C854 + C50616 * C859) *
                C121 +
            (C49768 * C862 + C50887 * C868 + C49761 * C863 + C50616 * C869) *
                C50670) *
               C50759 * C44486) *
              C114 -
          (((C49761 * C864 + C50616 * C870 + C49768 * C863 + C50887 * C869) *
                C50670 +
            (C49761 * C855 + C50616 * C865 + C49768 * C854 + C50887 * C859) *
                C121) *
               C50759 * C44486 +
           ((C49761 * C392 + C50616 * C400 + C49768 * C391 + C50887 * C399) *
                C50670 +
            (C49761 * C382 + C50616 * C388 + C49768 * C381 + C50887 * C387) *
                C121) *
               C50759 * C50951 +
           ((C49761 * C137 + C50616 * C147 + C49768 * C136 + C50887 * C146) *
                C50670 +
            (C49761 * C126 + C50616 * C138 + C49768 * C125 + C50887 * C132) *
                C121) *
               C50759 * C50950) *
              C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C121 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50670) *
                C50759 * C50950 +
            ((C27944 + C27945) * C121 + (C27946 + C27947) * C50670) * C50759 *
                C50951 +
            C45350 * C44486) *
               C50892 -
           (C45351 * C44486 +
            ((C27948 + C27949) * C50670 + (C27950 + C27951) * C121) * C50759 *
                C50951 +
            ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                 C50670 +
             (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                 C121) *
                C50759 * C50950) *
               C50641) *
              C848 +
          ((((C27951 + C27950) * C121 + (C27949 + C27948) * C50670) * C50759 *
                C50950 +
            ((C28698 + C28699) * C121 + (C28700 + C28701) * C50670) * C50759 *
                C50951 +
            ((C45344 + C45345) * C121 + (C45346 + C45347) * C50670) * C50759 *
                C44486) *
               C50641 -
           (((C29061 + C29060) * C50670 + (C29059 + C29058) * C121) * C50759 *
                C44486 +
            ((C28706 + C28707) * C50670 + (C28708 + C28709) * C121) * C50759 *
                C50951 +
            ((C27947 + C27946) * C50670 + (C27945 + C27944) * C121) * C50759 *
                C50950) *
               C50892) *
              C849 +
          ((C45350 * C50950 +
            ((C29058 + C29059) * C121 + (C29060 + C29061) * C50670) * C50759 *
                C50951 +
            ((C49768 * C5985 + C50887 * C5988 + C49761 * C5986 +
              C50616 * C5989) *
                 C121 +
             (C49768 * C5990 + C50887 * C5994 + C49761 * C5991 +
              C50616 * C5995) *
                 C50670) *
                C50759 * C44486) *
               C50892 -
           (((C49761 * C5992 + C50616 * C5996 + C49768 * C5991 +
              C50887 * C5995) *
                 C50670 +
             (C49761 * C5987 + C50616 * C5993 + C49768 * C5986 +
              C50887 * C5989) *
                 C121) *
                C50759 * C44486 +
            ((C45347 + C45346) * C50670 + (C45345 + C45344) * C121) * C50759 *
                C50951 +
            C45351 * C50950) *
               C50641) *
              C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
               C600 +
           (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
               C595 -
           (C24854 + C24855) * C601 - (C24856 + C24857) * C596 + C25170 * C602 +
           C25171 * C597 - C25296 * C603 - C25297 * C598) *
              C50759 * C50950 +
          ((C27944 + C27945) * C600 + (C27946 + C27947) * C595 - C28474 * C601 -
           C28475 * C596 + C28476 * C602 + C28477 * C597 -
           (C25488 + C25489) * C603 - (C25490 + C25491) * C598) *
              C50759 * C50951 +
          ((C28709 + C28708) * C600 + (C28707 + C28706) * C595 - C28907 * C601 -
           C28906 * C596 + (C25807 + C25806) * C602 + (C25809 + C25808) * C597 -
           (C49761 * C3352 + C50616 * C3354 + C49768 * C3353 + C50887 * C3355) *
               C603 -
           (C49761 * C3356 + C50616 * C3358 + C49768 * C3357 + C50887 * C3359) *
               C598) *
              C50759 * C44486) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C253 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C50899 -
            (C24854 + C24855) * C254 - (C24856 + C24857) * C50686) *
               C50759 * C50950 +
           ((C27944 + C27945) * C253 + (C27946 + C27947) * C50899 -
            C28474 * C254 - C28475 * C50686) *
               C50759 * C50951 +
           ((C28709 + C28708) * C253 + (C28707 + C28706) * C50899 -
            C28907 * C254 - C28906 * C50686) *
               C50759 * C44486) *
              C250 +
          (((C24862 + C24863) * C254 -
            ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                 C50899 +
             (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                 C253) +
            (C24864 + C24865) * C50686) *
               C50759 * C50950 +
           (C29708 * C254 -
            ((C27948 + C27949) * C50899 + (C27950 + C27951) * C253) +
            C29709 * C50686) *
               C50759 * C50951 +
           ((C28702 + C28703) * C254 -
            ((C28701 + C28700) * C50899 + (C28699 + C28698) * C253) +
            (C28704 + C28705) * C50686) *
               C50759 * C44486) *
              C251 +
          (((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                C253 +
            (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                C50899 -
            (C24870 + C24871) * C254 - (C24872 + C24873) * C50686) *
               C50759 * C50950 +
           ((C27952 + C27953) * C253 + (C27954 + C27955) * C50899 -
            (C27722 + C27723) * C254 - (C27724 + C27725) * C50686) *
               C50759 * C50951 +
           ((C49768 * C853 + C50887 * C858 + C49761 * C854 + C50616 * C859) *
                C253 +
            (C49768 * C862 + C50887 * C868 + C49761 * C863 + C50616 * C869) *
                C50899 -
            (C49761 * C969 + C50616 * C973 + C49768 * C970 + C50887 * C974) *
                C254 -
            (C49761 * C977 + C50616 * C981 + C49768 * C978 + C50887 * C982) *
                C50686) *
               C50759 * C44486) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C253 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C50899 -
            (C24854 + C24855) * C254 - (C24856 + C24857) * C50686) *
               C50759 * C50950 +
           ((C27944 + C27945) * C253 + (C27946 + C27947) * C50899 -
            C28474 * C254 - C28475 * C50686) *
               C50759 * C50951 +
           C45505 * C44486) *
              C50636 * C848 +
          ((C28478 * C254 -
            ((C27947 + C27946) * C50899 + (C27945 + C27944) * C253) +
            C28479 * C50686) *
               C50759 * C50950 +
           (C28904 * C254 -
            ((C28706 + C28707) * C50899 + (C28708 + C28709) * C253) +
            C28905 * C50686) *
               C50759 * C50951 +
           ((C28917 + C28916) * C254 -
            ((C29061 + C29060) * C50899 + (C29059 + C29058) * C253) +
            (C28919 + C28918) * C50686) *
               C50759 * C44486) *
              C50636 * C849 +
          (C45505 * C50950 +
           ((C29058 + C29059) * C253 + (C29060 + C29061) * C50899 -
            (C28916 + C28917) * C254 - (C28918 + C28919) * C50686) *
               C50759 * C50951 +
           ((C49768 * C5985 + C50887 * C5988 + C49761 * C5986 +
             C50616 * C5989) *
                C253 +
            (C49768 * C5990 + C50887 * C5994 + C49761 * C5991 +
             C50616 * C5995) *
                C50899 -
            (C49761 * C6179 + C50616 * C6181 + C49768 * C6180 +
             C50887 * C6182) *
                C254 -
            (C49761 * C6183 + C50616 * C6185 + C49768 * C6184 +
             C50887 * C6186) *
                C50686) *
               C50759 * C44486) *
              C50636 * C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C506 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C501 -
            (C24854 + C24855) * C507 - (C24856 + C24857) * C502 +
            C25170 * C508 + C25171 * C503) *
               C50759 * C50950 +
           ((C27944 + C27945) * C506 + (C27946 + C27947) * C501 -
            C28474 * C507 - C28475 * C502 + C28476 * C508 + C28477 * C503) *
               C50759 * C50951 +
           ((C28709 + C28708) * C506 + (C28707 + C28706) * C501 -
            C28907 * C507 - C28906 * C502 + (C25807 + C25806) * C508 +
            (C25809 + C25808) * C503) *
               C50759 * C44486) *
              C50636 * C50901 +
          ((C28478 * C507 -
            ((C27947 + C27946) * C501 + (C27945 + C27944) * C506) +
            C28479 * C502 - C25492 * C508 - C25493 * C503) *
               C50759 * C50950 +
           (C28904 * C507 -
            ((C28706 + C28707) * C501 + (C28708 + C28709) * C506) +
            C28905 * C502 - (C25806 + C25807) * C508 -
            (C25808 + C25809) * C503) *
               C50759 * C50951 +
           ((C28917 + C28916) * C507 -
            ((C29061 + C29060) * C501 + (C29059 + C29058) * C506) +
            (C28919 + C28918) * C502 -
            (C49761 * C3482 + C50616 * C3488 + C49768 * C3483 +
             C50887 * C3489) *
                C508 -
            (C49761 * C3486 + C50616 * C3494 + C49768 * C3487 +
             C50887 * C3495) *
                C503) *
               C50759 * C44486) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C121 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50670) *
                C50759 * C50950 +
            ((C27944 + C27945) * C121 + (C27946 + C27947) * C50670) * C50759 *
                C50951 +
            ((C28709 + C28708) * C121 + (C28707 + C28706) * C50670) * C50759 *
                C44486) *
               C250 -
           (((C28701 + C28700) * C50670 + (C28699 + C28698) * C121) * C50759 *
                C44486 +
            ((C27948 + C27949) * C50670 + (C27950 + C27951) * C121) * C50759 *
                C50951 +
            ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                 C50670 +
             (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                 C121) *
                C50759 * C50950) *
               C251 +
           (((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                 C121 +
             (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                 C50670) *
                C50759 * C50950 +
            ((C27952 + C27953) * C121 + (C27954 + C27955) * C50670) * C50759 *
                C50951 +
            ((C44788 + C44789) * C121 + (C44790 + C44791) * C50670) * C50759 *
                C44486) *
               C252) *
              C50901 +
          ((((C27951 + C27950) * C121 + (C27949 + C27948) * C50670) * C50759 *
                C50950 +
            ((C28698 + C28699) * C121 + (C28700 + C28701) * C50670) * C50759 *
                C50951 +
            ((C49768 * C1057 + C50887 * C1065 + C49761 * C1056 +
              C50616 * C1064) *
                 C121 +
             (C49768 * C1061 + C50887 * C1069 + C49761 * C1060 +
              C50616 * C1068) *
                 C50670) *
                C50759 * C44486) *
               C251 -
           (((C29061 + C29060) * C50670 + (C29059 + C29058) * C121) * C50759 *
                C44486 +
            ((C28706 + C28707) * C50670 + (C28708 + C28709) * C121) * C50759 *
                C50951 +
            ((C27947 + C27946) * C50670 + (C27945 + C27944) * C121) * C50759 *
                C50950) *
               C250 -
           (((C49761 * C1059 + C50616 * C1067 + C49768 * C1060 +
              C50887 * C1068) *
                 C50670 +
             (C49761 * C1055 + C50616 * C1063 + C49768 * C1056 +
              C50887 * C1064) *
                 C121) *
                C50759 * C44486 +
            ((C44791 + C44790) * C50670 + (C44789 + C44788) * C121) * C50759 *
                C50951 +
            ((C27955 + C27954) * C50670 + (C27953 + C27952) * C121) * C50759 *
                C50950) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C121 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C50670) *
               C50759 * C50950 +
           ((C27944 + C27945) * C121 + (C27946 + C27947) * C50670) * C50759 *
               C50951 +
           C45350 * C44486) *
              C50636 * C1051 -
          (C45621 * C44486 +
           ((C28706 + C28707) * C50670 + (C28708 + C28709) * C121) * C50759 *
               C50951 +
           ((C27947 + C27946) * C50670 + (C27945 + C27944) * C121) * C50759 *
               C50950) *
              C50636 * C1052 +
          (C45350 * C50950 +
           ((C29058 + C29059) * C121 + (C29060 + C29061) * C50670) * C50759 *
               C50951 +
           ((C45616 + C45617) * C121 + (C45618 + C45619) * C50670) * C50759 *
               C44486) *
              C50636 * C1053 -
          (((C49761 * C6309 + C50616 * C6313 + C49768 * C6310 +
             C50887 * C6314) *
                C50670 +
            (C49761 * C6307 + C50616 * C6311 + C49768 * C6308 +
             C50887 * C6312) *
                C121) *
               C50759 * C44486 +
           ((C45619 + C45618) * C50670 + (C45617 + C45616) * C121) * C50759 *
               C50951 +
           C45621 * C50950) *
              C50636 * C1054)) /
            (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C121 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50670) *
                C50759 * C50950 +
            ((C27944 + C27945) * C121 + (C27946 + C27947) * C50670) * C50759 *
                C50951 +
            C45350 * C44486) *
               C50945 -
           (C45351 * C44486 +
            ((C27948 + C27949) * C50670 + (C27950 + C27951) * C121) * C50759 *
                C50951 +
            ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                 C50670 +
             (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                 C121) *
                C50759 * C50950) *
               C50930 +
           (((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                 C121 +
             (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                 C50670) *
                C50759 * C50950 +
            ((C27952 + C27953) * C121 + (C27954 + C27955) * C50670) * C50759 *
                C50951 +
            ((C44788 + C44789) * C121 + (C44790 + C44791) * C50670) * C50759 *
                C44486) *
               C1173) *
              C1514 +
          ((((C27951 + C27950) * C121 + (C27949 + C27948) * C50670) * C50759 *
                C50950 +
            ((C28698 + C28699) * C121 + (C28700 + C28701) * C50670) * C50759 *
                C50951 +
            ((C45344 + C45345) * C121 + (C45346 + C45347) * C50670) * C50759 *
                C44486) *
               C50930 -
           (C45621 * C44486 +
            ((C28706 + C28707) * C50670 + (C28708 + C28709) * C121) * C50759 *
                C50951 +
            ((C27947 + C27946) * C50670 + (C27945 + C27944) * C121) * C50759 *
                C50950) *
               C50945 -
           (((C49761 * C1059 + C50616 * C1067 + C49768 * C1060 +
              C50887 * C1068) *
                 C50670 +
             (C49761 * C1055 + C50616 * C1063 + C49768 * C1056 +
              C50887 * C1064) *
                 C121) *
                C50759 * C44486 +
            ((C44791 + C44790) * C50670 + (C44789 + C44788) * C121) * C50759 *
                C50951 +
            ((C27955 + C27954) * C50670 + (C27953 + C27952) * C121) * C50759 *
                C50950) *
               C1173) *
              C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C253 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50899 -
             (C24854 + C24855) * C254 - (C24856 + C24857) * C50686) *
                C50759 * C50950 +
            ((C27944 + C27945) * C253 + (C27946 + C27947) * C50899 -
             C28474 * C254 - C28475 * C50686) *
                C50759 * C50951 +
            C45505 * C44486) *
               C1277 +
           (((C24862 + C24863) * C254 -
             ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                  C50899 +
              (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                  C253) +
             (C24864 + C24865) * C50686) *
                C50759 * C50950 +
            (C29708 * C254 -
             ((C27948 + C27949) * C50899 + (C27950 + C27951) * C253) +
             C29709 * C50686) *
                C50759 * C50951 +
            ((C28702 + C28703) * C254 - (C45330 * C50899 + C45331 * C253) +
             (C28704 + C28705) * C50686) *
                C50759 * C44486) *
               C50641) *
              C1514 +
          (((C28478 * C254 -
             ((C27947 + C27946) * C50899 + (C27945 + C27944) * C253) +
             C28479 * C50686) *
                C50759 * C50950 +
            (C28904 * C254 -
             ((C28706 + C28707) * C50899 + (C28708 + C28709) * C253) +
             C28905 * C50686) *
                C50759 * C50951 +
            ((C28917 + C28916) * C254 - (C45604 * C50899 + C45605 * C253) +
             (C28919 + C28918) * C50686) *
                C50759 * C44486) *
               C1277 +
           (((C27951 + C27950) * C253 + (C27949 + C27948) * C50899 -
             C29711 * C254 - C29710 * C50686) *
                C50759 * C50950 +
            ((C28698 + C28699) * C253 + (C28700 + C28701) * C50899 -
             (C28703 + C28702) * C254 - (C28705 + C28704) * C50686) *
                C50759 * C50951 +
            ((C45344 + C45345) * C253 + (C45346 + C45347) * C50899 -
             (C49761 * C6819 + C50616 * C6820 + C49768 * C3484 +
              C50887 * C3492) *
                 C254 -
             (C49761 * C6821 + C50616 * C6822 + C49768 * C3490 +
              C50887 * C3496) *
                 C50686) *
                C50759 * C44486) *
               C50641) *
              C50712)) /
        (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C121 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50670) *
                C50759 * C50950 +
            ((C27944 + C27945) * C121 + (C27946 + C27947) * C50670) * C50759 *
                C50951 +
            C45350 * C44486) *
               C1277 -
           (C45351 * C44486 +
            ((C27948 + C27949) * C50670 + (C27950 + C27951) * C121) * C50759 *
                C50951 +
            ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                 C50670 +
             (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                 C121) *
                C50759 * C50950) *
               C50641) *
              C50947 +
          ((((C27951 + C27950) * C121 + (C27949 + C27948) * C50670) * C50759 *
                C50950 +
            ((C28698 + C28699) * C121 + (C28700 + C28701) * C50670) * C50759 *
                C50951 +
            ((C45344 + C45345) * C121 + (C45346 + C45347) * C50670) * C50759 *
                C44486) *
               C50641 -
           (C45621 * C44486 +
            ((C28706 + C28707) * C50670 + (C28708 + C28709) * C121) * C50759 *
                C50951 +
            ((C27947 + C27946) * C50670 + (C27945 + C27944) * C121) * C50759 *
                C50950) *
               C1277) *
              C50936 +
          ((C45350 * C50950 +
            ((C29058 + C29059) * C121 + (C29060 + C29061) * C50670) * C50759 *
                C50951 +
            ((C45616 + C45617) * C121 + (C45618 + C45619) * C50670) * C50759 *
                C44486) *
               C1277 -
           (((C49761 * C5992 + C50616 * C5996 + C49768 * C5991 +
              C50887 * C5995) *
                 C50670 +
             (C49761 * C5987 + C50616 * C5993 + C49768 * C5986 +
              C50887 * C5989) *
                 C121) *
                C50759 * C44486 +
            ((C45347 + C45346) * C50670 + (C45345 + C45344) * C121) * C50759 *
                C50951 +
            C45351 * C50950) *
               C50641) *
              C1746)) /
        (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C121 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C50670) *
               C50759 * C50950 +
           ((C27944 + C27945) * C121 + (C27946 + C27947) * C50670) * C50759 *
               C50951 +
           ((C28709 + C28708) * C121 + (C28707 + C28706) * C50670) * C50759 *
               C44486) *
              C112 -
          (((C28701 + C28700) * C50670 + (C28699 + C28698) * C121) * C50759 *
               C44486 +
           ((C27948 + C27949) * C50670 + (C27950 + C27951) * C121) * C50759 *
               C50951 +
           ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                C50670 +
            (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                C121) *
               C50759 * C50950) *
              C113 +
          (((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                C121 +
            (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                C50670) *
               C50759 * C50950 +
           ((C27952 + C27953) * C121 + (C27954 + C27955) * C50670) * C50759 *
               C50951 +
           ((C49768 * C853 + C50887 * C858 + C49761 * C854 + C50616 * C859) *
                C121 +
            (C49768 * C862 + C50887 * C868 + C49761 * C863 + C50616 * C869) *
                C50670) *
               C50759 * C44486) *
              C114 -
          (((C49761 * C864 + C50616 * C870 + C49768 * C863 + C50887 * C869) *
                C50670 +
            (C49761 * C855 + C50616 * C865 + C49768 * C854 + C50887 * C859) *
                C121) *
               C50759 * C44486 +
           ((C49761 * C392 + C50616 * C400 + C49768 * C391 + C50887 * C399) *
                C50670 +
            (C49761 * C382 + C50616 * C388 + C49768 * C381 + C50887 * C387) *
                C121) *
               C50759 * C50951 +
           ((C49761 * C137 + C50616 * C147 + C49768 * C136 + C50887 * C146) *
                C50670 +
            (C49761 * C126 + C50616 * C138 + C49768 * C125 + C50887 * C132) *
                C121) *
               C50759 * C50950) *
              C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C506 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C501 -
            (C24854 + C24855) * C507 - (C24856 + C24857) * C502 +
            C25170 * C508 + C25171 * C503) *
               C50759 * C50950 +
           ((C27944 + C27945) * C506 + (C27946 + C27947) * C501 -
            C28474 * C507 - C28475 * C502 + C28476 * C508 + C28477 * C503) *
               C50759 * C50951 +
           ((C28709 + C28708) * C506 + (C28707 + C28706) * C501 -
            C28907 * C507 - C28906 * C502 + (C25807 + C25806) * C508 +
            (C25809 + C25808) * C503) *
               C50759 * C44486) *
              C50892 +
          (((C24862 + C24863) * C507 -
            ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                 C501 +
             (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                 C506) +
            (C24864 + C24865) * C502 - C25180 * C508 - C25181 * C503) *
               C50759 * C50950 +
           (C29708 * C507 -
            ((C27948 + C27949) * C501 + (C27950 + C27951) * C506) +
            C29709 * C502 - (C26414 + C26415) * C508 -
            (C26416 + C26417) * C503) *
               C50759 * C50951 +
           ((C28702 + C28703) * C507 -
            ((C28701 + C28700) * C501 + (C28699 + C28698) * C506) +
            (C28704 + C28705) * C502 -
            (C49761 * C3196 + C50616 * C3202 + C49768 * C3195 +
             C50887 * C3198) *
                C508 -
            (C49761 * C3201 + C50616 * C3205 + C49768 * C3200 +
             C50887 * C3204) *
                C503) *
               C50759 * C44486) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C253 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C50899 -
            (C24854 + C24855) * C254 - (C24856 + C24857) * C50686) *
               C50759 * C50950 +
           ((C27944 + C27945) * C253 + (C27946 + C27947) * C50899 -
            C28474 * C254 - C28475 * C50686) *
               C50759 * C50951 +
           ((C28709 + C28708) * C253 + (C28707 + C28706) * C50899 -
            C28907 * C254 - C28906 * C50686) *
               C50759 * C44486) *
              C250 +
          (((C24862 + C24863) * C254 -
            ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                 C50899 +
             (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                 C253) +
            (C24864 + C24865) * C50686) *
               C50759 * C50950 +
           (C29708 * C254 -
            ((C27948 + C27949) * C50899 + (C27950 + C27951) * C253) +
            C29709 * C50686) *
               C50759 * C50951 +
           ((C28702 + C28703) * C254 -
            ((C28701 + C28700) * C50899 + (C28699 + C28698) * C253) +
            (C28704 + C28705) * C50686) *
               C50759 * C44486) *
              C251 +
          (((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                C253 +
            (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                C50899 -
            (C24870 + C24871) * C254 - (C24872 + C24873) * C50686) *
               C50759 * C50950 +
           ((C27952 + C27953) * C253 + (C27954 + C27955) * C50899 -
            (C27722 + C27723) * C254 - (C27724 + C27725) * C50686) *
               C50759 * C50951 +
           ((C49768 * C853 + C50887 * C858 + C49761 * C854 + C50616 * C859) *
                C253 +
            (C49768 * C862 + C50887 * C868 + C49761 * C863 + C50616 * C869) *
                C50899 -
            (C49761 * C969 + C50616 * C973 + C49768 * C970 + C50887 * C974) *
                C254 -
            (C49761 * C977 + C50616 * C981 + C49768 * C978 + C50887 * C982) *
                C50686) *
               C50759 * C44486) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
               C600 +
           (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
               C595 -
           (C24854 + C24855) * C601 - (C24856 + C24857) * C596 + C25170 * C602 +
           C25171 * C597 - C25296 * C603 - C25297 * C598) *
              C50759 * C50950 +
          ((C27944 + C27945) * C600 + (C27946 + C27947) * C595 - C28474 * C601 -
           C28475 * C596 + C28476 * C602 + C28477 * C597 -
           (C25488 + C25489) * C603 - (C25490 + C25491) * C598) *
              C50759 * C50951 +
          ((C28709 + C28708) * C600 + (C28707 + C28706) * C595 - C28907 * C601 -
           C28906 * C596 + (C25807 + C25806) * C602 + (C25809 + C25808) * C597 -
           (C49761 * C3352 + C50616 * C3354 + C49768 * C3353 + C50887 * C3355) *
               C603 -
           (C49761 * C3356 + C50616 * C3358 + C49768 * C3357 + C50887 * C3359) *
               C598) *
              C50759 * C44486) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                 C121 +
             (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                 C50670) *
                C50759 * C50950 +
            ((C27944 + C27945) * C121 + (C27946 + C27947) * C50670) * C50759 *
                C50951 +
            ((C28709 + C28708) * C121 + (C28707 + C28706) * C50670) * C50759 *
                C44486) *
               C250 -
           (((C28701 + C28700) * C50670 + (C28699 + C28698) * C121) * C50759 *
                C44486 +
            ((C27948 + C27949) * C50670 + (C27950 + C27951) * C121) * C50759 *
                C50951 +
            ((C49761 * C135 + C50616 * C145 + C49768 * C134 + C50887 * C144) *
                 C50670 +
             (C49761 * C124 + C50616 * C131 + C49768 * C123 + C50887 * C130) *
                 C121) *
                C50759 * C50950) *
               C251 +
           (((C49768 * C124 + C50887 * C131 + C49761 * C125 + C50616 * C132) *
                 C121 +
             (C49768 * C135 + C50887 * C145 + C49761 * C136 + C50616 * C146) *
                 C50670) *
                C50759 * C50950 +
            ((C27952 + C27953) * C121 + (C27954 + C27955) * C50670) * C50759 *
                C50951 +
            ((C44788 + C44789) * C121 + (C44790 + C44791) * C50670) * C50759 *
                C44486) *
               C252) *
              C50901 +
          ((((C27951 + C27950) * C121 + (C27949 + C27948) * C50670) * C50759 *
                C50950 +
            ((C28698 + C28699) * C121 + (C28700 + C28701) * C50670) * C50759 *
                C50951 +
            ((C49768 * C1057 + C50887 * C1065 + C49761 * C1056 +
              C50616 * C1064) *
                 C121 +
             (C49768 * C1061 + C50887 * C1069 + C49761 * C1060 +
              C50616 * C1068) *
                 C50670) *
                C50759 * C44486) *
               C251 -
           (((C29061 + C29060) * C50670 + (C29059 + C29058) * C121) * C50759 *
                C44486 +
            ((C28706 + C28707) * C50670 + (C28708 + C28709) * C121) * C50759 *
                C50951 +
            ((C27947 + C27946) * C50670 + (C27945 + C27944) * C121) * C50759 *
                C50950) *
               C250 -
           (((C49761 * C1059 + C50616 * C1067 + C49768 * C1060 +
              C50887 * C1068) *
                 C50670 +
             (C49761 * C1055 + C50616 * C1063 + C49768 * C1056 +
              C50887 * C1064) *
                 C121) *
                C50759 * C44486 +
            ((C44791 + C44790) * C50670 + (C44789 + C44788) * C121) * C50759 *
                C50951 +
            ((C27955 + C27954) * C50670 + (C27953 + C27952) * C121) * C50759 *
                C50950) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49768 * C122 + C50887 * C129 + C49761 * C123 + C50616 * C130) *
                C506 +
            (C49768 * C133 + C50887 * C143 + C49761 * C134 + C50616 * C144) *
                C501 -
            (C24854 + C24855) * C507 - (C24856 + C24857) * C502 +
            C25170 * C508 + C25171 * C503) *
               C50759 * C50950 +
           ((C27944 + C27945) * C506 + (C27946 + C27947) * C501 -
            C28474 * C507 - C28475 * C502 + C28476 * C508 + C28477 * C503) *
               C50759 * C50951 +
           ((C28709 + C28708) * C506 + (C28707 + C28706) * C501 -
            C28907 * C507 - C28906 * C502 + (C25807 + C25806) * C508 +
            (C25809 + C25808) * C503) *
               C50759 * C44486) *
              C50636 * C50901 +
          ((C28478 * C507 -
            ((C27947 + C27946) * C501 + (C27945 + C27944) * C506) +
            C28479 * C502 - C25492 * C508 - C25493 * C503) *
               C50759 * C50950 +
           (C28904 * C507 -
            ((C28706 + C28707) * C501 + (C28708 + C28709) * C506) +
            C28905 * C502 - (C25806 + C25807) * C508 -
            (C25808 + C25809) * C503) *
               C50759 * C50951 +
           ((C28917 + C28916) * C507 -
            ((C29061 + C29060) * C501 + (C29059 + C29058) * C506) +
            (C28919 + C28918) * C502 -
            (C49761 * C3482 + C50616 * C3488 + C49768 * C3483 +
             C50887 * C3489) *
                C508 -
            (C49761 * C3486 + C50616 * C3494 + C49768 * C3487 +
             C50887 * C3495) *
                C503) *
               C50759 * C44486) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[210] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                      C16984 * C130 + C16990 * C124 + C16985 * C131) *
                         C1174 +
                     (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                      C16984 * C144 + C16990 * C135 + C16985 * C145) *
                         C1169 -
                     (C17174 + C17175 + C17176) * C1175 -
                     (C17177 + C17178 + C17179) * C50686) *
                        C50759 * C33783 +
                    ((C34114 + C34115 + C34116) * C1174 +
                     (C34117 + C34118 + C34119) * C1169 -
                     (C17808 + C17807 + C17806) * C1175 -
                     (C17811 + C17810 + C17809) * C50686) *
                        C50759 * C50835) *
                       C50945 +
                   (((C17180 + C17181 + C17182) * C1175 -
                     ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                       C16984 * C145 + C16988 * C134 + C16983 * C144) *
                          C1169 +
                      (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                       C16984 * C131 + C16988 * C123 + C16983 * C130) *
                          C1174) +
                     (C17183 + C17184 + C17185) * C50686) *
                        C50759 * C33783 +
                    ((C18726 + C18725 + C18724) * C1175 -
                     ((C34120 + C34121 + C34122) * C1169 +
                      (C34123 + C34124 + C34125) * C1174) +
                     (C18729 + C18728 + C18727) * C50686) *
                        C50759 * C50835) *
                       C50930 +
                   (((C16988 * C124 + C16983 * C131 + C16989 * C125 +
                      C16984 * C132 + C16990 * C126 + C16985 * C138) *
                         C1174 +
                     (C16988 * C135 + C16983 * C145 + C16989 * C136 +
                      C16984 * C146 + C16990 * C137 + C16985 * C147) *
                         C1169 -
                     (C17186 + C17187 + C17188) * C1175 -
                     (C17189 + C17190 + C17191) * C50686) *
                        C50759 * C33783 +
                    ((C34126 + C34127 + C34128) * C1174 +
                     (C34129 + C34130 + C34131) * C1169 -
                     (C16990 * C1412 + C16985 * C1413 + C16989 * C721 +
                      C16984 * C729 + C16988 * C720 + C16983 * C728) *
                         C1175 -
                     (C16990 * C1414 + C16985 * C1415 + C16989 * C733 +
                      C16984 * C745 + C16988 * C732 + C16983 * C744) *
                         C50686) *
                        C50759 * C50835) *
                       C1173) *
                  C50700) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C19772 * C122 + C50611 * C129) * C1174 +
                      (C19772 * C133 + C50611 * C143) * C1169 - C19908 * C1175 -
                      C19909 * C50686) *
                         C2173 +
                     (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                      C19911 * C50686) *
                         C2174 +
                     (C19910 * C1174 + C19911 * C1169 - C19912 * C1175 -
                      C19913 * C50686) *
                         C2175) *
                        C33783 +
                    ((C23494 + C23495 - C23496 - C23497) * C2173 +
                     (C23498 + C23499 - C23500 - C23501) * C2174 +
                     (C32692 + C32693 - C32694 - C32695) * C2175) *
                        C50835) *
                       C50945 +
                   (((C19914 * C1175 -
                      ((C19772 * C134 + C50611 * C144) * C1169 +
                       (C19772 * C123 + C50611 * C130) * C1174) +
                      C19915 * C50686) *
                         C2173 +
                     (C19916 * C1175 - (C19915 * C1169 + C19914 * C1174) +
                      C19917 * C50686) *
                         C2174 +
                     (C19918 * C1175 - (C19917 * C1169 + C19916 * C1174) +
                      C19919 * C50686) *
                         C2175) *
                        C33783 +
                    ((C23510 - (C23511 + C23512) + C23513) * C2173 +
                     (C23514 - (C23515 + C23516) + C23517) * C2174 +
                     (C32696 - (C32697 + C32698) + C32699) * C2175) *
                        C50835) *
                       C50930 +
                   ((((C19772 * C124 + C50611 * C131) * C1174 +
                      (C19772 * C135 + C50611 * C145) * C1169 - C19920 * C1175 -
                      C19921 * C50686) *
                         C2173 +
                     (C19920 * C1174 + C19921 * C1169 - C19922 * C1175 -
                      C19923 * C50686) *
                         C2174 +
                     (C19922 * C1174 + C19923 * C1169 - C19924 * C1175 -
                      C19925 * C50686) *
                         C2175) *
                        C33783 +
                    ((C22072 * C1174 + C22073 * C1169 - C21878 * C1175 -
                      C21879 * C50686) *
                         C2173 +
                     (C21878 * C1174 + C21879 * C1169 - C31252 * C1175 -
                      C31253 * C50686) *
                         C2174 +
                     (C31252 * C1174 + C31253 * C1169 -
                      (C19772 * C3984 + C50611 * C3985) * C1175 -
                      (C19772 * C3986 + C50611 * C3987) * C50686) *
                         C2175) *
                        C50835) *
                       C1173) *
                  C50700) /
                     (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C1279 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C50946 -
            (C17174 + C17175 + C17176) * C1280 -
            (C17177 + C17178 + C17179) * C50933 +
            (C17508 + C17509 + C17510) * C1281 +
            (C17511 + C17512 + C17513) * C1276) *
               C50759 * C33783 +
           ((C34114 + C34115 + C34116) * C1279 +
            (C34117 + C34118 + C34119) * C50946 -
            (C17808 + C17807 + C17806) * C1280 -
            (C17811 + C17810 + C17809) * C50933 +
            (C17814 + C17813 + C17812) * C1281 +
            (C17817 + C17816 + C17815) * C1276) *
               C50759 * C50835) *
              C1277 +
          (((C17180 + C17181 + C17182) * C1280 -
            ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
              C16988 * C134 + C16983 * C144) *
                 C50946 +
             (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
              C16988 * C123 + C16983 * C130) *
                 C1279) +
            (C17183 + C17184 + C17185) * C50933 -
            (C17514 + C17515 + C17516) * C1281 -
            (C17517 + C17518 + C17519) * C1276) *
               C50759 * C33783 +
           ((C18726 + C18725 + C18724) * C1280 -
            ((C34120 + C34121 + C34122) * C50946 +
             (C34123 + C34124 + C34125) * C1279) +
            (C18729 + C18728 + C18727) * C50933 -
            (C16990 * C722 + C16985 * C734 + C16989 * C723 + C16984 * C735 +
             C16988 * C724 + C16983 * C736) *
                C1281 -
            (C16990 * C738 + C16985 * C746 + C16989 * C739 + C16984 * C747 +
             C16988 * C740 + C16983 * C748) *
                C1276) *
               C50759 * C50835) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C1279 +
             (C19772 * C133 + C50611 * C143) * C50946 - C19908 * C1280 -
             C19909 * C50933 + C19910 * C1281 + C19911 * C1276) *
                C2173 +
            (C19908 * C1279 + C19909 * C50946 - C19910 * C1280 -
             C19911 * C50933 + C19912 * C1281 + C19913 * C1276) *
                C2174 +
            (C19910 * C1279 + C19911 * C50946 - C19912 * C1280 -
             C19913 * C50933 + C20130 * C1281 + C20131 * C1276) *
                C2175) *
               C33783 +
           ((C24368 + C24369 - C24370 - C24371 + C24372 + C24373) * C2173 +
            (C24374 + C24375 - C24376 - C24377 + C24378 + C24379) * C2174 +
            (C33530 + C33531 - C33532 - C33533 + C33534 + C33535) * C2175) *
               C50835) *
              C1277 +
          (((C19914 * C1280 -
             ((C19772 * C134 + C50611 * C144) * C50946 +
              (C19772 * C123 + C50611 * C130) * C1279) +
             C19915 * C50933 - C19916 * C1281 - C19917 * C1276) *
                C2173 +
            (C19916 * C1280 - (C19915 * C50946 + C19914 * C1279) +
             C19917 * C50933 - C19918 * C1281 - C19919 * C1276) *
                C2174 +
            (C19918 * C1280 - (C19917 * C50946 + C19916 * C1279) +
             C19919 * C50933 - C20132 * C1281 - C20133 * C1276) *
                C2175) *
               C33783 +
           ((C20962 * C1280 - (C22070 * C50946 + C22071 * C1279) +
             C20963 * C50933 - C20964 * C1281 - C20965 * C1276) *
                C2173 +
            (C20964 * C1280 - (C20963 * C50946 + C20962 * C1279) +
             C20965 * C50933 - C20966 * C1281 - C20967 * C1276) *
                C2174 +
            (C20966 * C1280 - (C20965 * C50946 + C20964 * C1279) +
             C20967 * C50933 - (C19772 * C2996 + C50611 * C3002) * C1281 -
             (C19772 * C3004 + C50611 * C3008) * C1276) *
                C2175) *
               C50835) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[212] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                       C16984 * C130 + C16990 * C124 + C16985 * C131) *
                          C1174 +
                      (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                       C16984 * C144 + C16990 * C135 + C16985 * C145) *
                          C1169 -
                      (C17174 + C17175 + C17176) * C1175 -
                      (C17177 + C17178 + C17179) * C50686) *
                         C50759 * C33783 +
                     ((C34114 + C34115 + C34116) * C1174 +
                      (C34117 + C34118 + C34119) * C1169 -
                      (C17808 + C17807 + C17806) * C1175 -
                      (C17811 + C17810 + C17809) * C50686) *
                         C50759 * C50835) *
                        C1277 +
                    (((C17180 + C17181 + C17182) * C1175 -
                      ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                        C16984 * C145 + C16988 * C134 + C16983 * C144) *
                           C1169 +
                       (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                        C16984 * C131 + C16988 * C123 + C16983 * C130) *
                           C1174) +
                      (C17183 + C17184 + C17185) * C50686) *
                         C50759 * C33783 +
                     ((C18726 + C18725 + C18724) * C1175 -
                      ((C34120 + C34121 + C34122) * C1169 +
                       (C34123 + C34124 + C34125) * C1174) +
                      (C18729 + C18728 + C18727) * C50686) *
                         C50759 * C50835) *
                        C50641) *
                       C50901 +
                   ((((C17806 + C17807 + C17808) * C1175 -
                      ((C34119 + C34118 + C34117) * C1169 +
                       (C34116 + C34115 + C34114) * C1174) +
                      (C17809 + C17810 + C17811) * C50686) *
                         C50759 * C33783 +
                     ((C18124 + C18123 + C18122) * C1175 -
                      ((C34698 + C34699 + C34700) * C1169 +
                       (C34701 + C34702 + C34703) * C1174) +
                      (C18127 + C18126 + C18125) * C50686) *
                         C50759 * C50835) *
                        C1277 +
                    (((C34125 + C34124 + C34123) * C1174 +
                      (C34122 + C34121 + C34120) * C1169 -
                      (C18724 + C18725 + C18726) * C1175 -
                      (C18727 + C18728 + C18729) * C50686) *
                         C50759 * C33783 +
                     ((C34692 + C34693 + C34694) * C1174 +
                      (C34695 + C34696 + C34697) * C1169 -
                      (C16990 * C969 + C16985 * C973 + C16989 * C970 +
                       C16984 * C974 + C16988 * C971 + C16983 * C975) *
                          C1175 -
                      (C16990 * C977 + C16985 * C981 + C16989 * C978 +
                       C16984 * C982 + C16988 * C979 + C16983 * C983) *
                          C50686) *
                         C50759 * C50835) *
                        C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19772 * C122 + C50611 * C129) * C1174 +
                       (C19772 * C133 + C50611 * C143) * C1169 -
                       C19908 * C1175 - C19909 * C50686) *
                          C2173 +
                      (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                       C19911 * C50686) *
                          C2174 +
                      (C19910 * C1174 + C19911 * C1169 - C19912 * C1175 -
                       C19913 * C50686) *
                          C2175) *
                         C33783 +
                     ((C23494 + C23495 - C23496 - C23497) * C2173 +
                      (C23498 + C23499 - C23500 - C23501) * C2174 +
                      (C32692 + C32693 - C32694 - C32695) * C2175) *
                         C50835) *
                        C1277 +
                    (((C19914 * C1175 -
                       ((C19772 * C134 + C50611 * C144) * C1169 +
                        (C19772 * C123 + C50611 * C130) * C1174) +
                       C19915 * C50686) *
                          C2173 +
                      (C19916 * C1175 - (C19915 * C1169 + C19914 * C1174) +
                       C19917 * C50686) *
                          C2174 +
                      (C19918 * C1175 - (C19917 * C1169 + C19916 * C1174) +
                       C19919 * C50686) *
                          C2175) *
                         C33783 +
                     ((C23510 - (C23511 + C23512) + C23513) * C2173 +
                      (C23514 - (C23515 + C23516) + C23517) * C2174 +
                      (C32696 - (C32697 + C32698) + C32699) * C2175) *
                         C50835) *
                        C50641) *
                       C50901 +
                   ((((C23496 - (C23495 + C23494) + C23497) * C2173 +
                      (C23500 - (C23499 + C23498) + C23501) * C2174 +
                      (C32694 - (C32693 + C32692) + C32695) * C2175) *
                         C33783 +
                     ((C23504 - (C23503 + C23502) + C23505) * C2173 +
                      (C23508 - (C23507 + C23506) + C23509) * C2174 +
                      (C33682 - (C33683 + C33684) + C33685) * C2175) *
                         C50835) *
                        C1277 +
                    (((C23512 + C23511 - C23510 - C23513) * C2173 +
                      (C23516 + C23515 - C23514 - C23517) * C2174 +
                      (C32698 + C32697 - C32696 - C32699) * C2175) *
                         C33783 +
                     ((C23520 + C23519 - C23518 - C23521) * C2173 +
                      (C23524 + C23523 - C23522 - C23525) * C2174 +
                      (C22238 * C1174 + C22239 * C1169 -
                       (C19772 * C3352 + C50611 * C3354) * C1175 -
                       (C19772 * C3356 + C50611 * C3358) * C50686) *
                          C2175) *
                         C50835) *
                        C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q));
    d2ee[213] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                       C16984 * C130 + C16990 * C124 + C16985 * C131) *
                          C1174 +
                      (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                       C16984 * C144 + C16990 * C135 + C16985 * C145) *
                          C1169 -
                      (C17174 + C17175 + C17176) * C1175 -
                      (C17177 + C17178 + C17179) * C50686) *
                         C50759 * C33783 +
                     ((C34114 + C34115 + C34116) * C1174 +
                      (C34117 + C34118 + C34119) * C1169 -
                      (C17808 + C17807 + C17806) * C1175 -
                      (C17811 + C17810 + C17809) * C50686) *
                         C50759 * C50835) *
                        C50892 +
                    (((C17180 + C17181 + C17182) * C1175 -
                      ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                        C16984 * C145 + C16988 * C134 + C16983 * C144) *
                           C1169 +
                       (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                        C16984 * C131 + C16988 * C123 + C16983 * C130) *
                           C1174) +
                      (C17183 + C17184 + C17185) * C50686) *
                         C50759 * C33783 +
                     ((C18726 + C18725 + C18724) * C1175 -
                      ((C34120 + C34121 + C34122) * C1169 +
                       (C34123 + C34124 + C34125) * C1174) +
                      (C18729 + C18728 + C18727) * C50686) *
                         C50759 * C50835) *
                        C50641) *
                       C1514 +
                   ((((C17806 + C17807 + C17808) * C1175 -
                      ((C34119 + C34118 + C34117) * C1169 +
                       (C34116 + C34115 + C34114) * C1174) +
                      (C17809 + C17810 + C17811) * C50686) *
                         C50759 * C33783 +
                     ((C18124 + C18123 + C18122) * C1175 -
                      ((C34698 + C34699 + C34700) * C1169 +
                       (C34701 + C34702 + C34703) * C1174) +
                      (C18127 + C18126 + C18125) * C50686) *
                         C50759 * C50835) *
                        C50892 +
                    (((C34125 + C34124 + C34123) * C1174 +
                      (C34122 + C34121 + C34120) * C1169 -
                      (C18724 + C18725 + C18726) * C1175 -
                      (C18727 + C18728 + C18729) * C50686) *
                         C50759 * C33783 +
                     ((C34692 + C34693 + C34694) * C1174 +
                      (C34695 + C34696 + C34697) * C1169 -
                      (C16990 * C969 + C16985 * C973 + C16989 * C970 +
                       C16984 * C974 + C16988 * C971 + C16983 * C975) *
                          C1175 -
                      (C16990 * C977 + C16985 * C981 + C16989 * C978 +
                       C16984 * C982 + C16988 * C979 + C16983 * C983) *
                          C50686) *
                         C50759 * C50835) *
                        C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19772 * C122 + C50611 * C129) * C1174 +
                       (C19772 * C133 + C50611 * C143) * C1169 -
                       C19908 * C1175 - C19909 * C50686) *
                          C2173 +
                      (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                       C19911 * C50686) *
                          C2174 +
                      (C19910 * C1174 + C19911 * C1169 - C19912 * C1175 -
                       C19913 * C50686) *
                          C2175) *
                         C33783 +
                     ((C23494 + C23495 - C23496 - C23497) * C2173 +
                      (C23498 + C23499 - C23500 - C23501) * C2174 +
                      (C32692 + C32693 - C32694 - C32695) * C2175) *
                         C50835) *
                        C50892 +
                    (((C19914 * C1175 -
                       ((C19772 * C134 + C50611 * C144) * C1169 +
                        (C19772 * C123 + C50611 * C130) * C1174) +
                       C19915 * C50686) *
                          C2173 +
                      (C19916 * C1175 - (C19915 * C1169 + C19914 * C1174) +
                       C19917 * C50686) *
                          C2174 +
                      (C19918 * C1175 - (C19917 * C1169 + C19916 * C1174) +
                       C19919 * C50686) *
                          C2175) *
                         C33783 +
                     ((C23510 - (C23511 + C23512) + C23513) * C2173 +
                      (C23514 - (C23515 + C23516) + C23517) * C2174 +
                      (C32696 - (C32697 + C32698) + C32699) * C2175) *
                         C50835) *
                        C50641) *
                       C1514 +
                   ((((C23496 - (C23495 + C23494) + C23497) * C2173 +
                      (C23500 - (C23499 + C23498) + C23501) * C2174 +
                      (C32694 - (C32693 + C32692) + C32695) * C2175) *
                         C33783 +
                     ((C23504 - (C23503 + C23502) + C23505) * C2173 +
                      (C23508 - (C23507 + C23506) + C23509) * C2174 +
                      (C33682 - (C33683 + C33684) + C33685) * C2175) *
                         C50835) *
                        C50892 +
                    (((C23512 + C23511 - C23510 - C23513) * C2173 +
                      (C23516 + C23515 - C23514 - C23517) * C2174 +
                      (C32698 + C32697 - C32696 - C32699) * C2175) *
                         C33783 +
                     ((C23520 + C23519 - C23518 - C23521) * C2173 +
                      (C23524 + C23523 - C23522 - C23525) * C2174 +
                      (C22238 * C1174 + C22239 * C1169 -
                       (C19772 * C3352 + C50611 * C3354) * C1175 -
                       (C19772 * C3356 + C50611 * C3358) * C50686) *
                          C2175) *
                         C50835) *
                        C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C1279 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C50946 -
            (C17174 + C17175 + C17176) * C1280 -
            (C17177 + C17178 + C17179) * C50933 +
            (C17508 + C17509 + C17510) * C1281 +
            (C17511 + C17512 + C17513) * C1276) *
               C50759 * C33783 +
           ((C34114 + C34115 + C34116) * C1279 +
            (C34117 + C34118 + C34119) * C50946 -
            (C17808 + C17807 + C17806) * C1280 -
            (C17811 + C17810 + C17809) * C50933 +
            (C17814 + C17813 + C17812) * C1281 +
            (C17817 + C17816 + C17815) * C1276) *
               C50759 * C50835) *
              C50636 * C1514 +
          (((C17806 + C17807 + C17808) * C1280 -
            ((C34119 + C34118 + C34117) * C50946 +
             (C34116 + C34115 + C34114) * C1279) +
            (C17809 + C17810 + C17811) * C50933 -
            (C17812 + C17813 + C17814) * C1281 -
            (C17815 + C17816 + C17817) * C1276) *
               C50759 * C33783 +
           ((C18124 + C18123 + C18122) * C1280 -
            ((C34698 + C34699 + C34700) * C50946 +
             (C34701 + C34702 + C34703) * C1279) +
            (C18127 + C18126 + C18125) * C50933 -
            (C16990 * C3196 + C16985 * C3202 + C16989 * C3195 + C16984 * C3198 +
             C16988 * C3194 + C16983 * C3197) *
                C1281 -
            (C16990 * C3201 + C16985 * C3205 + C16989 * C3200 + C16984 * C3204 +
             C16988 * C3199 + C16983 * C3203) *
                C1276) *
               C50759 * C50835) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C1279 +
             (C19772 * C133 + C50611 * C143) * C50946 - C19908 * C1280 -
             C19909 * C50933 + C19910 * C1281 + C19911 * C1276) *
                C2173 +
            (C19908 * C1279 + C19909 * C50946 - C19910 * C1280 -
             C19911 * C50933 + C19912 * C1281 + C19913 * C1276) *
                C2174 +
            (C19910 * C1279 + C19911 * C50946 - C19912 * C1280 -
             C19913 * C50933 + C20130 * C1281 + C20131 * C1276) *
                C2175) *
               C33783 +
           ((C24368 + C24369 - C24370 - C24371 + C24372 + C24373) * C2173 +
            (C24374 + C24375 - C24376 - C24377 + C24378 + C24379) * C2174 +
            (C33530 + C33531 - C33532 - C33533 + C33534 + C33535) * C2175) *
               C50835) *
              C50636 * C1514 +
          (((C24370 - (C24369 + C24368) + C24371 - C24372 - C24373) * C2173 +
            (C24376 - (C24375 + C24374) + C24377 - C24378 - C24379) * C2174 +
            (C33532 - (C33531 + C33530) + C33533 - C33534 - C33535) * C2175) *
               C33783 +
           ((C24382 - (C24381 + C24380) + C24383 - C24384 - C24385) * C2173 +
            (C24388 - (C24387 + C24386) + C24389 - C24390 - C24391) * C2174 +
            (C20552 * C1280 - (C20551 * C50946 + C20550 * C1279) +
             C20553 * C50933 - (C19772 * C20531 + C50611 * C20532) * C1281 -
             (C19772 * C20533 + C50611 * C20534) * C1276) *
                C2175) *
               C50835) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                      C16984 * C130 + C16990 * C124 + C16985 * C131) *
                         C1174 +
                     (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                      C16984 * C144 + C16990 * C135 + C16985 * C145) *
                         C1169 -
                     (C17174 + C17175 + C17176) * C1175 -
                     (C17177 + C17178 + C17179) * C50686) *
                        C50759 * C33783 +
                    ((C34114 + C34115 + C34116) * C1174 +
                     (C34117 + C34118 + C34119) * C1169 -
                     (C17808 + C17807 + C17806) * C1175 -
                     (C17811 + C17810 + C17809) * C50686) *
                        C50759 * C50835) *
                       C50636 * C50947 +
                   (((C17806 + C17807 + C17808) * C1175 -
                     ((C34119 + C34118 + C34117) * C1169 +
                      (C34116 + C34115 + C34114) * C1174) +
                     (C17809 + C17810 + C17811) * C50686) *
                        C50759 * C33783 +
                    ((C18124 + C18123 + C18122) * C1175 -
                     ((C34698 + C34699 + C34700) * C1169 +
                      (C34701 + C34702 + C34703) * C1174) +
                     (C18127 + C18126 + C18125) * C50686) *
                        C50759 * C50835) *
                       C50636 * C50936 +
                   (((C34703 + C34702 + C34701) * C1174 +
                     (C34700 + C34699 + C34698) * C1169 -
                     (C18122 + C18123 + C18124) * C1175 -
                     (C18125 + C18126 + C18127) * C50686) *
                        C50759 * C33783 +
                    ((C34960 + C34961 + C34962) * C1174 +
                     (C34963 + C34964 + C34965) * C1169 -
                     (C16990 * C6819 + C16985 * C6820 + C16989 * C3484 +
                      C16984 * C3492 + C16988 * C3485 + C16983 * C3493) *
                         C1175 -
                     (C16990 * C6821 + C16985 * C6822 + C16989 * C3490 +
                      C16984 * C3496 + C16988 * C3491 + C16983 * C3497) *
                         C50686) *
                        C50759 * C50835) *
                       C50636 * C1746)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C19772 * C122 + C50611 * C129) * C1174 +
                      (C19772 * C133 + C50611 * C143) * C1169 - C19908 * C1175 -
                      C19909 * C50686) *
                         C2173 +
                     (C19908 * C1174 + C19909 * C1169 - C19910 * C1175 -
                      C19911 * C50686) *
                         C2174 +
                     (C19910 * C1174 + C19911 * C1169 - C19912 * C1175 -
                      C19913 * C50686) *
                         C2175) *
                        C33783 +
                    ((C23494 + C23495 - C23496 - C23497) * C2173 +
                     (C23498 + C23499 - C23500 - C23501) * C2174 +
                     (C32692 + C32693 - C32694 - C32695) * C2175) *
                        C50835) *
                       C50636 * C50947 +
                   (((C23496 - (C23495 + C23494) + C23497) * C2173 +
                     (C23500 - (C23499 + C23498) + C23501) * C2174 +
                     (C32694 - (C32693 + C32692) + C32695) * C2175) *
                        C33783 +
                    ((C23504 - (C23503 + C23502) + C23505) * C2173 +
                     (C23508 - (C23507 + C23506) + C23509) * C2174 +
                     (C33682 - (C33683 + C33684) + C33685) * C2175) *
                        C50835) *
                       C50636 * C50936 +
                   ((C24550 * C2173 + C24551 * C2174 +
                     (C33684 + C33683 - C33682 - C33685) * C2175) *
                        C33783 +
                    ((C24542 + C24541 - C24540 - C24543) * C2173 +
                     (C24546 + C24545 - C24544 - C24547) * C2174 +
                     (C22518 * C1174 + C22519 * C1169 -
                      (C19772 * C20619 + C50611 * C20621) * C1175 -
                      (C19772 * C20620 + C50611 * C20622) * C50686) *
                         C2175) *
                        C50835) *
                       C50636 * C1746)) /
                     (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C506 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C501 -
            (C17174 + C17175 + C17176) * C507 -
            (C17177 + C17178 + C17179) * C502 +
            (C17508 + C17509 + C17510) * C508 +
            (C17511 + C17512 + C17513) * C503) *
               C50759 * C33783 +
           ((C34114 + C34115 + C34116) * C506 +
            (C34117 + C34118 + C34119) * C501 -
            (C17808 + C17807 + C17806) * C507 -
            (C17811 + C17810 + C17809) * C502 +
            (C17814 + C17813 + C17812) * C508 +
            (C17817 + C17816 + C17815) * C503) *
               C50759 * C50835) *
              C50892 +
          (((C17180 + C17181 + C17182) * C507 -
            ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
              C16988 * C134 + C16983 * C144) *
                 C501 +
             (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
              C16988 * C123 + C16983 * C130) *
                 C506) +
            (C17183 + C17184 + C17185) * C502 -
            (C17514 + C17515 + C17516) * C508 -
            (C17517 + C17518 + C17519) * C503) *
               C50759 * C33783 +
           ((C18726 + C18725 + C18724) * C507 -
            ((C34120 + C34121 + C34122) * C501 +
             (C34123 + C34124 + C34125) * C506) +
            (C18729 + C18728 + C18727) * C502 -
            (C16990 * C722 + C16985 * C734 + C16989 * C723 + C16984 * C735 +
             C16988 * C724 + C16983 * C736) *
                C508 -
            (C16990 * C738 + C16985 * C746 + C16989 * C739 + C16984 * C747 +
             C16988 * C740 + C16983 * C748) *
                C503) *
               C50759 * C50835) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C121 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C50670) *
               C50759 * C33783 +
           ((C16988 * C383 + C16983 * C394 + C16989 * C379 + C16984 * C385 +
             C16990 * C380 + C16985 * C386) *
                C121 +
            (C16988 * C393 + C16983 * C401 + C16989 * C389 + C16984 * C397 +
             C16990 * C390 + C16985 * C398) *
                C50670) *
               C50759 * C50835) *
              C112 -
          (((C16990 * C391 + C16985 * C399 + C16989 * C390 + C16984 * C398 +
             C16988 * C389 + C16983 * C397) *
                C50670 +
            (C16990 * C381 + C16985 * C387 + C16989 * C380 + C16984 * C386 +
             C16988 * C379 + C16983 * C385) *
                C121) *
               C50759 * C50835 +
           ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
             C16988 * C134 + C16983 * C144) *
                C50670 +
            (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
             C16988 * C123 + C16983 * C130) *
                C121) *
               C50759 * C33783) *
              C113 +
          (((C16988 * C124 + C16983 * C131 + C16989 * C125 + C16984 * C132 +
             C16990 * C126 + C16985 * C138) *
                C121 +
            (C16988 * C135 + C16983 * C145 + C16989 * C136 + C16984 * C146 +
             C16990 * C137 + C16985 * C147) *
                C50670) *
               C50759 * C33783 +
           ((C16988 * C380 + C16983 * C386 + C16989 * C381 + C16984 * C387 +
             C16990 * C382 + C16985 * C388) *
                C121 +
            (C16988 * C390 + C16983 * C398 + C16989 * C391 + C16984 * C399 +
             C16990 * C392 + C16985 * C400) *
                C50670) *
               C50759 * C50835) *
              C114 -
          (((C16990 * C395 + C16985 * C402 + C16989 * C392 + C16984 * C400 +
             C16988 * C391 + C16983 * C399) *
                C50670 +
            (C16990 * C384 + C16985 * C396 + C16989 * C382 + C16984 * C388 +
             C16988 * C381 + C16983 * C387) *
                C121) *
               C50759 * C50835 +
           ((C16990 * C140 + C16985 * C148 + C16989 * C137 + C16984 * C147 +
             C16988 * C136 + C16983 * C146) *
                C50670 +
            (C16990 * C127 + C16985 * C139 + C16989 * C126 + C16984 * C138 +
             C16988 * C125 + C16983 * C132) *
                C121) *
               C50759 * C33783) *
              C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
              C16990 * C124 + C16985 * C131) *
                 C121 +
             (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
              C16990 * C135 + C16985 * C145) *
                 C50670) *
                C50759 * C33783 +
            ((C34114 + C34115 + C34116) * C121 +
             (C34117 + C34118 + C34119) * C50670) *
                C50759 * C50835) *
               C50892 -
           (((C34120 + C34121 + C34122) * C50670 +
             (C34123 + C34124 + C34125) * C121) *
                C50759 * C50835 +
            ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
              C16988 * C134 + C16983 * C144) *
                 C50670 +
             (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
              C16988 * C123 + C16983 * C130) *
                 C121) *
                C50759 * C33783) *
               C50641) *
              C848 +
          ((((C34125 + C34124 + C34123) * C121 +
             (C34122 + C34121 + C34120) * C50670) *
                C50759 * C33783 +
            ((C34692 + C34693 + C34694) * C121 +
             (C34695 + C34696 + C34697) * C50670) *
                C50759 * C50835) *
               C50641 -
           (((C34698 + C34699 + C34700) * C50670 +
             (C34701 + C34702 + C34703) * C121) *
                C50759 * C50835 +
            ((C34119 + C34118 + C34117) * C50670 +
             (C34116 + C34115 + C34114) * C121) *
                C50759 * C33783) *
               C50892) *
              C849 +
          ((((C34703 + C34702 + C34701) * C121 +
             (C34700 + C34699 + C34698) * C50670) *
                C50759 * C33783 +
            ((C16988 * C1058 + C16983 * C1066 + C16989 * C1057 +
              C16984 * C1065 + C16990 * C1056 + C16985 * C1064) *
                 C121 +
             (C16988 * C1062 + C16983 * C1070 + C16989 * C1061 +
              C16984 * C1069 + C16990 * C1060 + C16985 * C1068) *
                 C50670) *
                C50759 * C50835) *
               C50892 -
           (((C16990 * C1059 + C16985 * C1067 + C16989 * C1060 +
              C16984 * C1068 + C16988 * C1061 + C16983 * C1069) *
                 C50670 +
             (C16990 * C1055 + C16985 * C1063 + C16989 * C1056 +
              C16984 * C1064 + C16988 * C1057 + C16983 * C1065) *
                 C121) *
                C50759 * C50835 +
            ((C34697 + C34696 + C34695) * C50670 +
             (C34694 + C34693 + C34692) * C121) *
                C50759 * C33783) *
               C50641) *
              C850)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C121 +
             (C19772 * C133 + C50611 * C143) * C50670) *
                C2173 +
            (C19908 * C121 + C19909 * C50670) * C2174 +
            (C19910 * C121 + C19911 * C50670) * C2175) *
               C33783 +
           ((C22076 + C22077) * C2173 + (C22032 + C22033) * C2174 +
            (C31400 + C31401) * C2175) *
               C50835) *
              C112 -
          (((C31402 + C31403) * C2175 + (C22046 + C22047) * C2174 +
            (C22082 + C22083) * C2173) *
               C50835 +
           ((C19917 * C50670 + C19916 * C121) * C2175 +
            (C19915 * C50670 + C19914 * C121) * C2174 +
            ((C19772 * C134 + C50611 * C144) * C50670 +
             (C19772 * C123 + C50611 * C130) * C121) *
                C2173) *
               C33783) *
              C113 +
          ((((C19772 * C124 + C50611 * C131) * C121 +
             (C19772 * C135 + C50611 * C145) * C50670) *
                C2173 +
            (C19920 * C121 + C19921 * C50670) * C2174 +
            (C19922 * C121 + C19923 * C50670) * C2175) *
               C33783 +
           ((C22084 + C22085) * C2173 + (C22056 + C22057) * C2174 +
            (C31404 + C31405) * C2175) *
               C50835) *
              C114 -
          ((((C19772 * C738 + C50611 * C746) * C50670 +
             (C19772 * C722 + C50611 * C734) * C121) *
                C2175 +
            ((C19772 * C733 + C50611 * C745) * C50670 +
             (C19772 * C721 + C50611 * C729) * C121) *
                C2174 +
            ((C19772 * C391 + C50611 * C399) * C50670 +
             (C19772 * C381 + C50611 * C387) * C121) *
                C2173) *
               C50835 +
           (((C19772 * C521 + C50611 * C527) * C50670 +
             (C19772 * C512 + C50611 * C517) * C121) *
                C2175 +
            ((C19772 * C265 + C50611 * C273) * C50670 +
             (C19772 * C255 + C50611 * C261) * C121) *
                C2174 +
            ((C19772 * C136 + C50611 * C146) * C50670 +
             (C19772 * C125 + C50611 * C132) * C121) *
                C2173) *
               C33783) *
              C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C506 +
             (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
             C19909 * C502 + C19910 * C508 + C19911 * C503) *
                C2173 +
            (C19908 * C506 + C19909 * C501 - C19910 * C507 - C19911 * C502 +
             C19912 * C508 + C19913 * C503) *
                C2174 +
            (C19910 * C506 + C19911 * C501 - C19912 * C507 - C19913 * C502 +
             C20130 * C508 + C20131 * C503) *
                C2175) *
               C33783 +
           ((C22484 + C22485 - C22486 - C22487 + C22488 + C22489) * C2173 +
            (C22490 + C22491 - C22492 - C22493 + C22494 + C22495) * C2174 +
            (C31796 + C31797 - C31798 - C31799 + C31800 + C31801) * C2175) *
               C50835) *
              C50892 +
          (((C19914 * C507 -
             ((C19772 * C134 + C50611 * C144) * C501 +
              (C19772 * C123 + C50611 * C130) * C506) +
             C19915 * C502 - C19916 * C508 - C19917 * C503) *
                C2173 +
            (C19916 * C507 - (C19915 * C501 + C19914 * C506) + C19917 * C502 -
             C19918 * C508 - C19919 * C503) *
                C2174 +
            (C19918 * C507 - (C19917 * C501 + C19916 * C506) + C19919 * C502 -
             C20132 * C508 - C20133 * C503) *
                C2175) *
               C33783 +
           ((C20962 * C507 - (C22070 * C501 + C22071 * C506) + C20963 * C502 -
             C20964 * C508 - C20965 * C503) *
                C2173 +
            (C20964 * C507 - (C20963 * C501 + C20962 * C506) + C20965 * C502 -
             C20966 * C508 - C20967 * C503) *
                C2174 +
            (C20966 * C507 - (C20965 * C501 + C20964 * C506) + C20967 * C502 -
             (C19772 * C2996 + C50611 * C3002) * C508 -
             (C19772 * C3004 + C50611 * C3008) * C503) *
                C2175) *
               C50835) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19772 * C122 + C50611 * C129) * C121 +
              (C19772 * C133 + C50611 * C143) * C50670) *
                 C2173 +
             (C19908 * C121 + C19909 * C50670) * C2174 +
             (C19910 * C121 + C19911 * C50670) * C2175) *
                C33783 +
            ((C22076 + C22077) * C2173 + (C22032 + C22033) * C2174 +
             (C31400 + C31401) * C2175) *
                C50835) *
               C50892 -
           (((C31402 + C31403) * C2175 + (C22046 + C22047) * C2174 +
             (C22082 + C22083) * C2173) *
                C50835 +
            ((C19917 * C50670 + C19916 * C121) * C2175 +
             (C19915 * C50670 + C19914 * C121) * C2174 +
             ((C19772 * C134 + C50611 * C144) * C50670 +
              (C19772 * C123 + C50611 * C130) * C121) *
                 C2173) *
                C33783) *
               C50641) *
              C848 +
          ((((C22083 + C22082) * C2173 + (C22047 + C22046) * C2174 +
             (C31403 + C31402) * C2175) *
                C33783 +
            ((C22081 + C22080) * C2173 + (C22041 + C22040) * C2174 +
             (C31948 + C31949) * C2175) *
                C50835) *
               C50641 -
           (((C31950 + C31951) * C2175 + (C22039 + C22038) * C2174 +
             (C22079 + C22078) * C2173) *
                C50835 +
            ((C31401 + C31400) * C2175 + (C22033 + C22032) * C2174 +
             (C22077 + C22076) * C2173) *
                C33783) *
               C50892) *
              C849 +
          (((C22666 * C2173 + C22667 * C2174 + (C31951 + C31950) * C2175) *
                C33783 +
            ((C22701 + C22700) * C2173 + (C22679 + C22678) * C2174 +
             (C32204 + C32205) * C2175) *
                C50835) *
               C50892 -
           ((((C19772 * C3486 + C50611 * C3494) * C50670 +
              (C19772 * C3482 + C50611 * C3488) * C121) *
                 C2175 +
             (C22699 + C22698) * C2174 + (C22697 + C22696) * C2173) *
                C50835 +
            ((C31949 + C31948) * C2175 + C22668 * C2174 + C22669 * C2173) *
                C33783) *
               C50641) *
              C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
            C16990 * C124 + C16985 * C131) *
               C600 +
           (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
            C16990 * C135 + C16985 * C145) *
               C595 -
           (C17174 + C17175 + C17176) * C601 -
           (C17177 + C17178 + C17179) * C596 +
           (C17508 + C17509 + C17510) * C602 +
           (C17511 + C17512 + C17513) * C597 -
           (C17630 + C17631 + C17632) * C603 -
           (C17633 + C17634 + C17635) * C598) *
              C50759 * C33783 +
          ((C34114 + C34115 + C34116) * C600 +
           (C34117 + C34118 + C34119) * C595 -
           (C17808 + C17807 + C17806) * C601 -
           (C17811 + C17810 + C17809) * C596 +
           (C17814 + C17813 + C17812) * C602 +
           (C17817 + C17816 + C17815) * C597 -
           (C16990 * C3984 + C16985 * C3985 + C16989 * C2994 + C16984 * C2998 +
            C16988 * C2995 + C16983 * C2999) *
               C603 -
           (C16990 * C3986 + C16985 * C3987 + C16989 * C3000 + C16984 * C3006 +
            C16988 * C3001 + C16983 * C3007) *
               C598) *
              C50759 * C50835) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C253 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C50899 -
            (C17174 + C17175 + C17176) * C254 -
            (C17177 + C17178 + C17179) * C50686) *
               C50759 * C33783 +
           ((C16988 * C383 + C16983 * C394 + C16989 * C379 + C16984 * C385 +
             C16990 * C380 + C16985 * C386) *
                C253 +
            (C16988 * C393 + C16983 * C401 + C16989 * C389 + C16984 * C397 +
             C16990 * C390 + C16985 * C398) *
                C50899 -
            (C17808 + C17807 + C17806) * C254 -
            (C17811 + C17810 + C17809) * C50686) *
               C50759 * C50835) *
              C250 +
          (((C17180 + C17181 + C17182) * C254 -
            ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
              C16988 * C134 + C16983 * C144) *
                 C50899 +
             (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
              C16988 * C123 + C16983 * C130) *
                 C253) +
            (C17183 + C17184 + C17185) * C50686) *
               C50759 * C33783 +
           ((C18726 + C18725 + C18724) * C254 -
            ((C16990 * C391 + C16985 * C399 + C16989 * C390 + C16984 * C398 +
              C16988 * C389 + C16983 * C397) *
                 C50899 +
             (C16990 * C381 + C16985 * C387 + C16989 * C380 + C16984 * C386 +
              C16988 * C379 + C16983 * C385) *
                 C253) +
            (C18729 + C18728 + C18727) * C50686) *
               C50759 * C50835) *
              C251 +
          (((C16988 * C124 + C16983 * C131 + C16989 * C125 + C16984 * C132 +
             C16990 * C126 + C16985 * C138) *
                C253 +
            (C16988 * C135 + C16983 * C145 + C16989 * C136 + C16984 * C146 +
             C16990 * C137 + C16985 * C147) *
                C50899 -
            (C17186 + C17187 + C17188) * C254 -
            (C17189 + C17190 + C17191) * C50686) *
               C50759 * C33783 +
           ((C16988 * C380 + C16983 * C386 + C16989 * C381 + C16984 * C387 +
             C16990 * C382 + C16985 * C388) *
                C253 +
            (C16988 * C390 + C16983 * C398 + C16989 * C391 + C16984 * C399 +
             C16990 * C392 + C16985 * C400) *
                C50899 -
            (C16990 * C1412 + C16985 * C1413 + C16989 * C721 + C16984 * C729 +
             C16988 * C720 + C16983 * C728) *
                C254 -
            (C16990 * C1414 + C16985 * C1415 + C16989 * C733 + C16984 * C745 +
             C16988 * C732 + C16983 * C744) *
                C50686) *
               C50759 * C50835) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C253 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C50899 -
            (C17174 + C17175 + C17176) * C254 -
            (C17177 + C17178 + C17179) * C50686) *
               C50759 * C33783 +
           ((C34114 + C34115 + C34116) * C253 +
            (C34117 + C34118 + C34119) * C50899 -
            (C17808 + C17807 + C17806) * C254 -
            (C17811 + C17810 + C17809) * C50686) *
               C50759 * C50835) *
              C50636 * C848 +
          (((C17806 + C17807 + C17808) * C254 -
            ((C34119 + C34118 + C34117) * C50899 +
             (C34116 + C34115 + C34114) * C253) +
            (C17809 + C17810 + C17811) * C50686) *
               C50759 * C33783 +
           ((C18124 + C18123 + C18122) * C254 -
            ((C34698 + C34699 + C34700) * C50899 +
             (C34701 + C34702 + C34703) * C253) +
            (C18127 + C18126 + C18125) * C50686) *
               C50759 * C50835) *
              C50636 * C849 +
          (((C34703 + C34702 + C34701) * C253 +
            (C34700 + C34699 + C34698) * C50899 -
            (C18122 + C18123 + C18124) * C254 -
            (C18125 + C18126 + C18127) * C50686) *
               C50759 * C33783 +
           ((C16988 * C1058 + C16983 * C1066 + C16989 * C1057 + C16984 * C1065 +
             C16990 * C1056 + C16985 * C1064) *
                C253 +
            (C16988 * C1062 + C16983 * C1070 + C16989 * C1061 + C16984 * C1069 +
             C16990 * C1060 + C16985 * C1068) *
                C50899 -
            (C16990 * C6819 + C16985 * C6820 + C16989 * C3484 + C16984 * C3492 +
             C16988 * C3485 + C16983 * C3493) *
                C254 -
            (C16990 * C6821 + C16985 * C6822 + C16989 * C3490 + C16984 * C3496 +
             C16988 * C3491 + C16983 * C3497) *
                C50686) *
               C50759 * C50835) *
              C50636 * C850)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C253 +
             (C19772 * C133 + C50611 * C143) * C50899 - C19908 * C254 -
             C19909 * C50686) *
                C2173 +
            (C19908 * C253 + C19909 * C50899 - C19910 * C254 -
             C19911 * C50686) *
                C2174 +
            (C19910 * C253 + C19911 * C50899 - C19912 * C254 -
             C19913 * C50686) *
                C2175) *
               C33783 +
           ((C22852 + C22853 - C22854 - C22855) * C2173 +
            (C22856 + C22857 - C22858 - C22859) * C2174 +
            (C32098 + C32099 - C32100 - C32101) * C2175) *
               C50835) *
              C250 +
          (((C19914 * C254 -
             ((C19772 * C134 + C50611 * C144) * C50899 +
              (C19772 * C123 + C50611 * C130) * C253) +
             C19915 * C50686) *
                C2173 +
            (C19916 * C254 - (C19915 * C50899 + C19914 * C253) +
             C19917 * C50686) *
                C2174 +
            (C19918 * C254 - (C19917 * C50899 + C19916 * C253) +
             C19919 * C50686) *
                C2175) *
               C33783 +
           ((C23866 - (C23867 + C23868) + C23869) * C2173 +
            (C23870 - (C23871 + C23872) + C23873) * C2174 +
            (C33040 - (C33041 + C33042) + C33043) * C2175) *
               C50835) *
              C251 +
          ((((C19772 * C124 + C50611 * C131) * C253 +
             (C19772 * C135 + C50611 * C145) * C50899 - C19920 * C254 -
             C19921 * C50686) *
                C2173 +
            (C19920 * C253 + C19921 * C50899 - C19922 * C254 -
             C19923 * C50686) *
                C2174 +
            (C19922 * C253 + C19923 * C50899 - C19924 * C254 -
             C19925 * C50686) *
                C2175) *
               C33783 +
           ((C22072 * C253 + C22073 * C50899 - C21878 * C254 -
             C21879 * C50686) *
                C2173 +
            (C21878 * C253 + C21879 * C50899 - C31252 * C254 -
             C31253 * C50686) *
                C2174 +
            (C31252 * C253 + C31253 * C50899 -
             (C19772 * C3984 + C50611 * C3985) * C254 -
             (C19772 * C3986 + C50611 * C3987) * C50686) *
                C2175) *
               C50835) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C600 +
            (C19772 * C133 + C50611 * C143) * C595 - C19908 * C601 -
            C19909 * C596 + C19910 * C602 + C19911 * C597 - C19912 * C603 -
            C19913 * C598) *
               C2173 +
           (C19908 * C600 + C19909 * C595 - C19910 * C601 - C19911 * C596 +
            C19912 * C602 + C19913 * C597 - C20130 * C603 - C20131 * C598) *
               C2174 +
           (C19910 * C600 + C19911 * C595 - C19912 * C601 - C19913 * C596 +
            C20130 * C602 + C20131 * C597 - C20208 * C603 - C20209 * C598) *
               C2175) *
              C33783 +
          ((C22064 * C600 + C22065 * C595 - C20328 * C601 - C20329 * C596 +
            C20330 * C602 + C20331 * C597 - C20332 * C603 - C20333 * C598) *
               C2173 +
           (C20328 * C600 + C20329 * C595 - C20330 * C601 - C20331 * C596 +
            C20332 * C602 + C20333 * C597 - C20334 * C603 - C20335 * C598) *
               C2174 +
           (C20330 * C600 + C20331 * C595 - C20332 * C601 - C20333 * C596 +
            C20334 * C602 + C20335 * C597 -
            (C19772 * C20307 + C50611 * C20308) * C603 -
            (C19772 * C20309 + C50611 * C20310) * C598) *
               C2175) *
              C50835) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C253 +
             (C19772 * C133 + C50611 * C143) * C50899 - C19908 * C254 -
             C19909 * C50686) *
                C2173 +
            (C19908 * C253 + C19909 * C50899 - C19910 * C254 -
             C19911 * C50686) *
                C2174 +
            (C19910 * C253 + C19911 * C50899 - C19912 * C254 -
             C19913 * C50686) *
                C2175) *
               C33783 +
           ((C22852 + C22853 - C22854 - C22855) * C2173 +
            (C22856 + C22857 - C22858 - C22859) * C2174 +
            (C32098 + C32099 - C32100 - C32101) * C2175) *
               C50835) *
              C50636 * C848 +
          (((C22854 - (C22853 + C22852) + C22855) * C2173 +
            (C22858 - (C22857 + C22856) + C22859) * C2174 +
            (C32100 - (C32099 + C32098) + C32101) * C2175) *
               C33783 +
           ((C22862 - (C22861 + C22860) + C22863) * C2173 +
            (C22866 - (C22865 + C22864) + C22867) * C2174 +
            (C32102 - (C32103 + C32104) + C32105) * C2175) *
               C50835) *
              C50636 * C849 +
          ((C22886 * C2173 + C22887 * C2174 +
            (C32104 + C32103 - C32102 - C32105) * C2175) *
               C33783 +
           ((C22870 + C22869 - C22868 - C22871) * C2173 +
            (C22874 + C22873 - C22872 - C22875) * C2174 +
            (C22518 * C253 + C22519 * C50899 -
             (C19772 * C20619 + C50611 * C20621) * C254 -
             (C19772 * C20620 + C50611 * C20622) * C50686) *
                C2175) *
               C50835) *
              C50636 * C850)) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C506 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C501 -
            (C17174 + C17175 + C17176) * C507 -
            (C17177 + C17178 + C17179) * C502 +
            (C17508 + C17509 + C17510) * C508 +
            (C17511 + C17512 + C17513) * C503) *
               C50759 * C33783 +
           ((C34114 + C34115 + C34116) * C506 +
            (C34117 + C34118 + C34119) * C501 -
            (C17808 + C17807 + C17806) * C507 -
            (C17811 + C17810 + C17809) * C502 +
            (C17814 + C17813 + C17812) * C508 +
            (C17817 + C17816 + C17815) * C503) *
               C50759 * C50835) *
              C50636 * C50901 +
          (((C17806 + C17807 + C17808) * C507 -
            ((C34119 + C34118 + C34117) * C501 +
             (C34116 + C34115 + C34114) * C506) +
            (C17809 + C17810 + C17811) * C502 -
            (C17812 + C17813 + C17814) * C508 -
            (C17815 + C17816 + C17817) * C503) *
               C50759 * C33783 +
           ((C18124 + C18123 + C18122) * C507 -
            ((C16990 * C862 + C16985 * C868 + C16989 * C861 + C16984 * C867 +
              C16988 * C860 + C16983 * C866) *
                 C501 +
             (C16990 * C853 + C16985 * C858 + C16989 * C852 + C16984 * C857 +
              C16988 * C851 + C16983 * C856) *
                 C506) +
            (C18127 + C18126 + C18125) * C502 -
            (C16990 * C3196 + C16985 * C3202 + C16989 * C3195 + C16984 * C3198 +
             C16988 * C3194 + C16983 * C3197) *
                C508 -
            (C16990 * C3201 + C16985 * C3205 + C16989 * C3200 + C16984 * C3204 +
             C16988 * C3199 + C16983 * C3203) *
                C503) *
               C50759 * C50835) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
              C16990 * C124 + C16985 * C131) *
                 C121 +
             (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
              C16990 * C135 + C16985 * C145) *
                 C50670) *
                C50759 * C33783 +
            ((C34114 + C34115 + C34116) * C121 +
             (C34117 + C34118 + C34119) * C50670) *
                C50759 * C50835) *
               C250 -
           (((C34120 + C34121 + C34122) * C50670 +
             (C34123 + C34124 + C34125) * C121) *
                C50759 * C50835 +
            ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
              C16988 * C134 + C16983 * C144) *
                 C50670 +
             (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
              C16988 * C123 + C16983 * C130) *
                 C121) *
                C50759 * C33783) *
               C251 +
           (((C16988 * C124 + C16983 * C131 + C16989 * C125 + C16984 * C132 +
              C16990 * C126 + C16985 * C138) *
                 C121 +
             (C16988 * C135 + C16983 * C145 + C16989 * C136 + C16984 * C146 +
              C16990 * C137 + C16985 * C147) *
                 C50670) *
                C50759 * C33783 +
            ((C34126 + C34127 + C34128) * C121 +
             (C34129 + C34130 + C34131) * C50670) *
                C50759 * C50835) *
               C252) *
              C50901 +
          ((((C34125 + C34124 + C34123) * C121 +
             (C34122 + C34121 + C34120) * C50670) *
                C50759 * C33783 +
            ((C16988 * C852 + C16983 * C857 + C16989 * C853 + C16984 * C858 +
              C16990 * C854 + C16985 * C859) *
                 C121 +
             (C16988 * C861 + C16983 * C867 + C16989 * C862 + C16984 * C868 +
              C16990 * C863 + C16985 * C869) *
                 C50670) *
                C50759 * C50835) *
               C251 -
           (((C16990 * C862 + C16985 * C868 + C16989 * C861 + C16984 * C867 +
              C16988 * C860 + C16983 * C866) *
                 C50670 +
             (C16990 * C853 + C16985 * C858 + C16989 * C852 + C16984 * C857 +
              C16988 * C851 + C16983 * C856) *
                 C121) *
                C50759 * C50835 +
            ((C34119 + C34118 + C34117) * C50670 +
             (C34116 + C34115 + C34114) * C121) *
                C50759 * C33783) *
               C250 -
           (((C16990 * C864 + C16985 * C870 + C16989 * C863 + C16984 * C869 +
              C16988 * C862 + C16983 * C868) *
                 C50670 +
             (C16990 * C855 + C16985 * C865 + C16989 * C854 + C16984 * C859 +
              C16988 * C853 + C16983 * C858) *
                 C121) *
                C50759 * C50835 +
            ((C34131 + C34130 + C34129) * C50670 +
             (C34128 + C34127 + C34126) * C121) *
                C50759 * C33783) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C121 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C50670) *
               C50759 * C33783 +
           ((C34114 + C34115 + C34116) * C121 +
            (C34117 + C34118 + C34119) * C50670) *
               C50759 * C50835) *
              C50636 * C1051 -
          (((C34698 + C34699 + C34700) * C50670 +
            (C34701 + C34702 + C34703) * C121) *
               C50759 * C50835 +
           ((C34119 + C34118 + C34117) * C50670 +
            (C34116 + C34115 + C34114) * C121) *
               C50759 * C33783) *
              C50636 * C1052 +
          (((C34703 + C34702 + C34701) * C121 +
            (C34700 + C34699 + C34698) * C50670) *
               C50759 * C33783 +
           ((C34960 + C34961 + C34962) * C121 +
            (C34963 + C34964 + C34965) * C50670) *
               C50759 * C50835) *
              C50636 * C1053 -
          (((C16990 * C5992 + C16985 * C5996 + C16989 * C5991 + C16984 * C5995 +
             C16988 * C5990 + C16983 * C5994) *
                C50670 +
            (C16990 * C5987 + C16985 * C5993 + C16989 * C5986 + C16984 * C5989 +
             C16988 * C5985 + C16983 * C5988) *
                C121) *
               C50759 * C50835 +
           ((C34965 + C34964 + C34963) * C50670 +
            (C34962 + C34961 + C34960) * C121) *
               C50759 * C33783) *
              C50636 * C1054)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C19772 * C122 + C50611 * C129) * C121 +
              (C19772 * C133 + C50611 * C143) * C50670) *
                 C2173 +
             (C19908 * C121 + C19909 * C50670) * C2174 +
             (C19910 * C121 + C19911 * C50670) * C2175) *
                C33783 +
            ((C22076 + C22077) * C2173 + (C22032 + C22033) * C2174 +
             (C31400 + C31401) * C2175) *
                C50835) *
               C250 -
           (((C31402 + C31403) * C2175 + (C22046 + C22047) * C2174 +
             (C22082 + C22083) * C2173) *
                C50835 +
            ((C19917 * C50670 + C19916 * C121) * C2175 +
             (C19915 * C50670 + C19914 * C121) * C2174 +
             ((C19772 * C134 + C50611 * C144) * C50670 +
              (C19772 * C123 + C50611 * C130) * C121) *
                 C2173) *
                C33783) *
               C251 +
           ((((C19772 * C124 + C50611 * C131) * C121 +
              (C19772 * C135 + C50611 * C145) * C50670) *
                 C2173 +
             (C19920 * C121 + C19921 * C50670) * C2174 +
             (C19922 * C121 + C19923 * C50670) * C2175) *
                C33783 +
            ((C22084 + C22085) * C2173 + (C22056 + C22057) * C2174 +
             (C31404 + C31405) * C2175) *
                C50835) *
               C252) *
              C50901 +
          ((((C22083 + C22082) * C2173 + (C22047 + C22046) * C2174 +
             (C31403 + C31402) * C2175) *
                C33783 +
            ((C22081 + C22080) * C2173 + (C22041 + C22040) * C2174 +
             (C31948 + C31949) * C2175) *
                C50835) *
               C251 -
           (((C31950 + C31951) * C2175 + (C22039 + C22038) * C2174 +
             (C22079 + C22078) * C2173) *
                C50835 +
            ((C31401 + C31400) * C2175 + (C22033 + C22032) * C2174 +
             (C22077 + C22076) * C2173) *
                C33783) *
               C250 -
           ((((C19772 * C3201 + C50611 * C3205) * C50670 +
              (C19772 * C3196 + C50611 * C3202) * C121) *
                 C2175 +
             (C22063 + C22062) * C2174 + (C22087 + C22086) * C2173) *
                C50835 +
            ((C31405 + C31404) * C2175 + (C22057 + C22056) * C2174 +
             (C22085 + C22084) * C2173) *
                C33783) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C506 +
             (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
             C19909 * C502 + C19910 * C508 + C19911 * C503) *
                C2173 +
            (C19908 * C506 + C19909 * C501 - C19910 * C507 - C19911 * C502 +
             C19912 * C508 + C19913 * C503) *
                C2174 +
            (C19910 * C506 + C19911 * C501 - C19912 * C507 - C19913 * C502 +
             C20130 * C508 + C20131 * C503) *
                C2175) *
               C33783 +
           ((C22484 + C22485 - C22486 - C22487 + C22488 + C22489) * C2173 +
            (C22490 + C22491 - C22492 - C22493 + C22494 + C22495) * C2174 +
            (C31796 + C31797 - C31798 - C31799 + C31800 + C31801) * C2175) *
               C50835) *
              C50636 * C50901 +
          (((C22486 - (C22485 + C22484) + C22487 - C22488 - C22489) * C2173 +
            (C22492 - (C22491 + C22490) + C22493 - C22494 - C22495) * C2174 +
            (C31798 - (C31797 + C31796) + C31799 - C31800 - C31801) * C2175) *
               C33783 +
           ((C22498 - (C22497 + C22496) + C22499 - C22500 - C22501) * C2173 +
            (C22504 - (C22503 + C22502) + C22505 - C22506 - C22507) * C2174 +
            (C20552 * C507 - (C20551 * C501 + C20550 * C506) + C20553 * C502 -
             (C19772 * C20531 + C50611 * C20532) * C508 -
             (C19772 * C20533 + C50611 * C20534) * C503) *
                C2175) *
               C50835) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C121 +
             (C19772 * C133 + C50611 * C143) * C50670) *
                C2173 +
            (C19908 * C121 + C19909 * C50670) * C2174 +
            (C19910 * C121 + C19911 * C50670) * C2175) *
               C33783 +
           ((C22076 + C22077) * C2173 + (C22032 + C22033) * C2174 +
            (C31400 + C31401) * C2175) *
               C50835) *
              C50636 * C1051 -
          (((C31950 + C31951) * C2175 + (C22039 + C22038) * C2174 +
            (C22079 + C22078) * C2173) *
               C50835 +
           ((C31401 + C31400) * C2175 + (C22033 + C22032) * C2174 +
            (C22077 + C22076) * C2173) *
               C33783) *
              C50636 * C1052 +
          ((C22666 * C2173 + C22667 * C2174 + (C31951 + C31950) * C2175) *
               C33783 +
           ((C22701 + C22700) * C2173 + (C22679 + C22678) * C2174 +
            (C32204 + C32205) * C2175) *
               C50835) *
              C50636 * C1053 -
          ((((C19772 * C22849 + C50611 * C22850) * C50670 +
             (C19772 * C22847 + C50611 * C22848) * C121) *
                C2175 +
            (C23000 + C22999) * C2174 + (C23007 + C23006) * C2173) *
               C50835 +
           ((C32205 + C32204) * C2175 + C22993 * C2174 + C22994 * C2173) *
               C33783) *
              C50636 * C1054)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                       C16984 * C130 + C16990 * C124 + C16985 * C131) *
                          C121 +
                      (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                       C16984 * C144 + C16990 * C135 + C16985 * C145) *
                          C50670) *
                         C50759 * C33783 +
                     ((C34114 + C34115 + C34116) * C121 +
                      (C34117 + C34118 + C34119) * C50670) *
                         C50759 * C50835) *
                        C50945 -
                    (((C34120 + C34121 + C34122) * C50670 +
                      (C34123 + C34124 + C34125) * C121) *
                         C50759 * C50835 +
                     ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                       C16984 * C145 + C16988 * C134 + C16983 * C144) *
                          C50670 +
                      (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                       C16984 * C131 + C16988 * C123 + C16983 * C130) *
                          C121) *
                         C50759 * C33783) *
                        C50930 +
                    (((C16988 * C124 + C16983 * C131 + C16989 * C125 +
                       C16984 * C132 + C16990 * C126 + C16985 * C138) *
                          C121 +
                      (C16988 * C135 + C16983 * C145 + C16989 * C136 +
                       C16984 * C146 + C16990 * C137 + C16985 * C147) *
                          C50670) *
                         C50759 * C33783 +
                     ((C34126 + C34127 + C34128) * C121 +
                      (C34129 + C34130 + C34131) * C50670) *
                         C50759 * C50835) *
                        C1173) *
                       C1514 +
                   ((((C34125 + C34124 + C34123) * C121 +
                      (C34122 + C34121 + C34120) * C50670) *
                         C50759 * C33783 +
                     ((C34692 + C34693 + C34694) * C121 +
                      (C34695 + C34696 + C34697) * C50670) *
                         C50759 * C50835) *
                        C50930 -
                    (((C34698 + C34699 + C34700) * C50670 +
                      (C34701 + C34702 + C34703) * C121) *
                         C50759 * C50835 +
                     ((C34119 + C34118 + C34117) * C50670 +
                      (C34116 + C34115 + C34114) * C121) *
                         C50759 * C33783) *
                        C50945 -
                    (((C16990 * C864 + C16985 * C870 + C16989 * C863 +
                       C16984 * C869 + C16988 * C862 + C16983 * C868) *
                          C50670 +
                      (C16990 * C855 + C16985 * C865 + C16989 * C854 +
                       C16984 * C859 + C16988 * C853 + C16983 * C858) *
                          C121) *
                         C50759 * C50835 +
                     ((C34131 + C34130 + C34129) * C50670 +
                      (C34128 + C34127 + C34126) * C121) *
                         C50759 * C33783) *
                        C1173) *
                       C50712)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19772 * C122 + C50611 * C129) * C121 +
                       (C19772 * C133 + C50611 * C143) * C50670) *
                          C2173 +
                      (C19908 * C121 + C19909 * C50670) * C2174 +
                      (C19910 * C121 + C19911 * C50670) * C2175) *
                         C33783 +
                     ((C22076 + C22077) * C2173 + (C22032 + C22033) * C2174 +
                      (C31400 + C31401) * C2175) *
                         C50835) *
                        C50945 -
                    (((C31402 + C31403) * C2175 + (C22046 + C22047) * C2174 +
                      (C22082 + C22083) * C2173) *
                         C50835 +
                     ((C19917 * C50670 + C19916 * C121) * C2175 +
                      (C19915 * C50670 + C19914 * C121) * C2174 +
                      ((C19772 * C134 + C50611 * C144) * C50670 +
                       (C19772 * C123 + C50611 * C130) * C121) *
                          C2173) *
                         C33783) *
                        C50930 +
                    ((((C19772 * C124 + C50611 * C131) * C121 +
                       (C19772 * C135 + C50611 * C145) * C50670) *
                          C2173 +
                      (C19920 * C121 + C19921 * C50670) * C2174 +
                      (C19922 * C121 + C19923 * C50670) * C2175) *
                         C33783 +
                     ((C22084 + C22085) * C2173 + (C22056 + C22057) * C2174 +
                      (C31404 + C31405) * C2175) *
                         C50835) *
                        C1173) *
                       C1514 +
                   ((((C22083 + C22082) * C2173 + (C22047 + C22046) * C2174 +
                      (C31403 + C31402) * C2175) *
                         C33783 +
                     ((C22081 + C22080) * C2173 + (C22041 + C22040) * C2174 +
                      (C31948 + C31949) * C2175) *
                         C50835) *
                        C50930 -
                    (((C31950 + C31951) * C2175 + (C22039 + C22038) * C2174 +
                      (C22079 + C22078) * C2173) *
                         C50835 +
                     ((C31401 + C31400) * C2175 + (C22033 + C22032) * C2174 +
                      (C22077 + C22076) * C2173) *
                         C33783) *
                        C50945 -
                    ((((C19772 * C3201 + C50611 * C3205) * C50670 +
                       (C19772 * C3196 + C50611 * C3202) * C121) *
                          C2175 +
                      (C22063 + C22062) * C2174 + (C22087 + C22086) * C2173) *
                         C50835 +
                     ((C31405 + C31404) * C2175 + (C22057 + C22056) * C2174 +
                      (C22085 + C22084) * C2173) *
                         C33783) *
                        C1173) *
                       C50712)) /
                     (p * q * std::sqrt(p + q));
    d2ee[220] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C16988 * C122 + C16983 * C129 + C16989 * C123 +
                       C16984 * C130 + C16990 * C124 + C16985 * C131) *
                          C253 +
                      (C16988 * C133 + C16983 * C143 + C16989 * C134 +
                       C16984 * C144 + C16990 * C135 + C16985 * C145) *
                          C50899 -
                      (C17174 + C17175 + C17176) * C254 -
                      (C17177 + C17178 + C17179) * C50686) *
                         C50759 * C33783 +
                     ((C34114 + C34115 + C34116) * C253 +
                      (C34117 + C34118 + C34119) * C50899 -
                      (C17808 + C17807 + C17806) * C254 -
                      (C17811 + C17810 + C17809) * C50686) *
                         C50759 * C50835) *
                        C1277 +
                    (((C17180 + C17181 + C17182) * C254 -
                      ((C16990 * C136 + C16985 * C146 + C16989 * C135 +
                        C16984 * C145 + C16988 * C134 + C16983 * C144) *
                           C50899 +
                       (C16990 * C125 + C16985 * C132 + C16989 * C124 +
                        C16984 * C131 + C16988 * C123 + C16983 * C130) *
                           C253) +
                      (C17183 + C17184 + C17185) * C50686) *
                         C50759 * C33783 +
                     ((C18726 + C18725 + C18724) * C254 -
                      ((C34120 + C34121 + C34122) * C50899 +
                       (C34123 + C34124 + C34125) * C253) +
                      (C18729 + C18728 + C18727) * C50686) *
                         C50759 * C50835) *
                        C50641) *
                       C1514 +
                   ((((C17806 + C17807 + C17808) * C254 -
                      ((C34119 + C34118 + C34117) * C50899 +
                       (C34116 + C34115 + C34114) * C253) +
                      (C17809 + C17810 + C17811) * C50686) *
                         C50759 * C33783 +
                     ((C18124 + C18123 + C18122) * C254 -
                      ((C34698 + C34699 + C34700) * C50899 +
                       (C34701 + C34702 + C34703) * C253) +
                      (C18127 + C18126 + C18125) * C50686) *
                         C50759 * C50835) *
                        C1277 +
                    (((C34125 + C34124 + C34123) * C253 +
                      (C34122 + C34121 + C34120) * C50899 -
                      (C18724 + C18725 + C18726) * C254 -
                      (C18727 + C18728 + C18729) * C50686) *
                         C50759 * C33783 +
                     ((C34692 + C34693 + C34694) * C253 +
                      (C34695 + C34696 + C34697) * C50899 -
                      (C16990 * C969 + C16985 * C973 + C16989 * C970 +
                       C16984 * C974 + C16988 * C971 + C16983 * C975) *
                          C254 -
                      (C16990 * C977 + C16985 * C981 + C16989 * C978 +
                       C16984 * C982 + C16988 * C979 + C16983 * C983) *
                          C50686) *
                         C50759 * C50835) *
                        C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19772 * C122 + C50611 * C129) * C253 +
                       (C19772 * C133 + C50611 * C143) * C50899 -
                       C19908 * C254 - C19909 * C50686) *
                          C2173 +
                      (C19908 * C253 + C19909 * C50899 - C19910 * C254 -
                       C19911 * C50686) *
                          C2174 +
                      (C19910 * C253 + C19911 * C50899 - C19912 * C254 -
                       C19913 * C50686) *
                          C2175) *
                         C33783 +
                     ((C22852 + C22853 - C22854 - C22855) * C2173 +
                      (C22856 + C22857 - C22858 - C22859) * C2174 +
                      (C32098 + C32099 - C32100 - C32101) * C2175) *
                         C50835) *
                        C1277 +
                    (((C19914 * C254 -
                       ((C19772 * C134 + C50611 * C144) * C50899 +
                        (C19772 * C123 + C50611 * C130) * C253) +
                       C19915 * C50686) *
                          C2173 +
                      (C19916 * C254 - (C19915 * C50899 + C19914 * C253) +
                       C19917 * C50686) *
                          C2174 +
                      (C19918 * C254 - (C19917 * C50899 + C19916 * C253) +
                       C19919 * C50686) *
                          C2175) *
                         C33783 +
                     ((C23866 - (C23867 + C23868) + C23869) * C2173 +
                      (C23870 - (C23871 + C23872) + C23873) * C2174 +
                      (C33040 - (C33041 + C33042) + C33043) * C2175) *
                         C50835) *
                        C50641) *
                       C1514 +
                   ((((C22854 - (C22853 + C22852) + C22855) * C2173 +
                      (C22858 - (C22857 + C22856) + C22859) * C2174 +
                      (C32100 - (C32099 + C32098) + C32101) * C2175) *
                         C33783 +
                     ((C22862 - (C22861 + C22860) + C22863) * C2173 +
                      (C22866 - (C22865 + C22864) + C22867) * C2174 +
                      (C32102 - (C32103 + C32104) + C32105) * C2175) *
                         C50835) *
                        C1277 +
                    (((C23868 + C23867 - C23866 - C23869) * C2173 +
                      (C23872 + C23871 - C23870 - C23873) * C2174 +
                      (C33042 + C33041 - C33040 - C33043) * C2175) *
                         C33783 +
                     ((C23876 + C23875 - C23874 - C23877) * C2173 +
                      (C23880 + C23879 - C23878 - C23881) * C2174 +
                      (C22238 * C253 + C22239 * C50899 -
                       (C19772 * C3352 + C50611 * C3354) * C254 -
                       (C19772 * C3356 + C50611 * C3358) * C50686) *
                          C2175) *
                         C50835) *
                        C50641) *
                       C50712)) /
                     (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
              C16990 * C124 + C16985 * C131) *
                 C121 +
             (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
              C16990 * C135 + C16985 * C145) *
                 C50670) *
                C50759 * C33783 +
            ((C34114 + C34115 + C34116) * C121 +
             (C34117 + C34118 + C34119) * C50670) *
                C50759 * C50835) *
               C1277 -
           (((C34120 + C34121 + C34122) * C50670 +
             (C34123 + C34124 + C34125) * C121) *
                C50759 * C50835 +
            ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
              C16988 * C134 + C16983 * C144) *
                 C50670 +
             (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
              C16988 * C123 + C16983 * C130) *
                 C121) *
                C50759 * C33783) *
               C50641) *
              C50947 +
          ((((C34125 + C34124 + C34123) * C121 +
             (C34122 + C34121 + C34120) * C50670) *
                C50759 * C33783 +
            ((C34692 + C34693 + C34694) * C121 +
             (C34695 + C34696 + C34697) * C50670) *
                C50759 * C50835) *
               C50641 -
           (((C34698 + C34699 + C34700) * C50670 +
             (C34701 + C34702 + C34703) * C121) *
                C50759 * C50835 +
            ((C34119 + C34118 + C34117) * C50670 +
             (C34116 + C34115 + C34114) * C121) *
                C50759 * C33783) *
               C1277) *
              C50936 +
          ((((C34703 + C34702 + C34701) * C121 +
             (C34700 + C34699 + C34698) * C50670) *
                C50759 * C33783 +
            ((C34960 + C34961 + C34962) * C121 +
             (C34963 + C34964 + C34965) * C50670) *
                C50759 * C50835) *
               C1277 -
           (((C16990 * C1059 + C16985 * C1067 + C16989 * C1060 +
              C16984 * C1068 + C16988 * C1061 + C16983 * C1069) *
                 C50670 +
             (C16990 * C1055 + C16985 * C1063 + C16989 * C1056 +
              C16984 * C1064 + C16988 * C1057 + C16983 * C1065) *
                 C121) *
                C50759 * C50835 +
            ((C34697 + C34696 + C34695) * C50670 +
             (C34694 + C34693 + C34692) * C121) *
                C50759 * C33783) *
               C50641) *
              C1746)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19772 * C122 + C50611 * C129) * C121 +
              (C19772 * C133 + C50611 * C143) * C50670) *
                 C2173 +
             (C19908 * C121 + C19909 * C50670) * C2174 +
             (C19910 * C121 + C19911 * C50670) * C2175) *
                C33783 +
            ((C22076 + C22077) * C2173 + (C22032 + C22033) * C2174 +
             (C31400 + C31401) * C2175) *
                C50835) *
               C1277 -
           (((C31402 + C31403) * C2175 + (C22046 + C22047) * C2174 +
             (C22082 + C22083) * C2173) *
                C50835 +
            ((C19917 * C50670 + C19916 * C121) * C2175 +
             (C19915 * C50670 + C19914 * C121) * C2174 +
             ((C19772 * C134 + C50611 * C144) * C50670 +
              (C19772 * C123 + C50611 * C130) * C121) *
                 C2173) *
                C33783) *
               C50641) *
              C50947 +
          ((((C22083 + C22082) * C2173 + (C22047 + C22046) * C2174 +
             (C31403 + C31402) * C2175) *
                C33783 +
            ((C22081 + C22080) * C2173 + (C22041 + C22040) * C2174 +
             (C31948 + C31949) * C2175) *
                C50835) *
               C50641 -
           (((C31950 + C31951) * C2175 + (C22039 + C22038) * C2174 +
             (C22079 + C22078) * C2173) *
                C50835 +
            ((C31401 + C31400) * C2175 + (C22033 + C22032) * C2174 +
             (C22077 + C22076) * C2173) *
                C33783) *
               C1277) *
              C50936 +
          (((C22666 * C2173 + C22667 * C2174 + (C31951 + C31950) * C2175) *
                C33783 +
            ((C22701 + C22700) * C2173 + (C22679 + C22678) * C2174 +
             (C32204 + C32205) * C2175) *
                C50835) *
               C1277 -
           ((((C19772 * C3486 + C50611 * C3494) * C50670 +
              (C19772 * C3482 + C50611 * C3488) * C121) *
                 C2175 +
             (C22699 + C22698) * C2174 + (C22697 + C22696) * C2173) *
                C50835 +
            ((C31949 + C31948) * C2175 + C22668 * C2174 + C22669 * C2173) *
                C33783) *
               C50641) *
              C1746)) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C121 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C50670) *
               C50759 * C33783 +
           ((C16988 * C383 + C16983 * C394 + C16989 * C379 + C16984 * C385 +
             C16990 * C380 + C16985 * C386) *
                C121 +
            (C16988 * C393 + C16983 * C401 + C16989 * C389 + C16984 * C397 +
             C16990 * C390 + C16985 * C398) *
                C50670) *
               C50759 * C50835) *
              C112 -
          (((C16990 * C391 + C16985 * C399 + C16989 * C390 + C16984 * C398 +
             C16988 * C389 + C16983 * C397) *
                C50670 +
            (C16990 * C381 + C16985 * C387 + C16989 * C380 + C16984 * C386 +
             C16988 * C379 + C16983 * C385) *
                C121) *
               C50759 * C50835 +
           ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
             C16988 * C134 + C16983 * C144) *
                C50670 +
            (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
             C16988 * C123 + C16983 * C130) *
                C121) *
               C50759 * C33783) *
              C113 +
          (((C16988 * C124 + C16983 * C131 + C16989 * C125 + C16984 * C132 +
             C16990 * C126 + C16985 * C138) *
                C121 +
            (C16988 * C135 + C16983 * C145 + C16989 * C136 + C16984 * C146 +
             C16990 * C137 + C16985 * C147) *
                C50670) *
               C50759 * C33783 +
           ((C16988 * C380 + C16983 * C386 + C16989 * C381 + C16984 * C387 +
             C16990 * C382 + C16985 * C388) *
                C121 +
            (C16988 * C390 + C16983 * C398 + C16989 * C391 + C16984 * C399 +
             C16990 * C392 + C16985 * C400) *
                C50670) *
               C50759 * C50835) *
              C114 -
          (((C16990 * C395 + C16985 * C402 + C16989 * C392 + C16984 * C400 +
             C16988 * C391 + C16983 * C399) *
                C50670 +
            (C16990 * C384 + C16985 * C396 + C16989 * C382 + C16984 * C388 +
             C16988 * C381 + C16983 * C387) *
                C121) *
               C50759 * C50835 +
           ((C16990 * C140 + C16985 * C148 + C16989 * C137 + C16984 * C147 +
             C16988 * C136 + C16983 * C146) *
                C50670 +
            (C16990 * C127 + C16985 * C139 + C16989 * C126 + C16984 * C138 +
             C16988 * C125 + C16983 * C132) *
                C121) *
               C50759 * C33783) *
              C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C506 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C501 -
            (C17174 + C17175 + C17176) * C507 -
            (C17177 + C17178 + C17179) * C502 +
            (C17508 + C17509 + C17510) * C508 +
            (C17511 + C17512 + C17513) * C503) *
               C50759 * C33783 +
           ((C34114 + C34115 + C34116) * C506 +
            (C34117 + C34118 + C34119) * C501 -
            (C17808 + C17807 + C17806) * C507 -
            (C17811 + C17810 + C17809) * C502 +
            (C17814 + C17813 + C17812) * C508 +
            (C17817 + C17816 + C17815) * C503) *
               C50759 * C50835) *
              C50892 +
          (((C17180 + C17181 + C17182) * C507 -
            ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
              C16988 * C134 + C16983 * C144) *
                 C501 +
             (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
              C16988 * C123 + C16983 * C130) *
                 C506) +
            (C17183 + C17184 + C17185) * C502 -
            (C17514 + C17515 + C17516) * C508 -
            (C17517 + C17518 + C17519) * C503) *
               C50759 * C33783 +
           ((C18726 + C18725 + C18724) * C507 -
            ((C34120 + C34121 + C34122) * C501 +
             (C34123 + C34124 + C34125) * C506) +
            (C18729 + C18728 + C18727) * C502 -
            (C16990 * C722 + C16985 * C734 + C16989 * C723 + C16984 * C735 +
             C16988 * C724 + C16983 * C736) *
                C508 -
            (C16990 * C738 + C16985 * C746 + C16989 * C739 + C16984 * C747 +
             C16988 * C740 + C16983 * C748) *
                C503) *
               C50759 * C50835) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C121 +
             (C19772 * C133 + C50611 * C143) * C50670) *
                C2173 +
            (C19908 * C121 + C19909 * C50670) * C2174 +
            (C19910 * C121 + C19911 * C50670) * C2175) *
               C33783 +
           ((C22076 + C22077) * C2173 + (C22032 + C22033) * C2174 +
            (C31400 + C31401) * C2175) *
               C50835) *
              C112 -
          (((C31402 + C31403) * C2175 + (C22046 + C22047) * C2174 +
            (C22082 + C22083) * C2173) *
               C50835 +
           ((C19917 * C50670 + C19916 * C121) * C2175 +
            (C19915 * C50670 + C19914 * C121) * C2174 +
            ((C19772 * C134 + C50611 * C144) * C50670 +
             (C19772 * C123 + C50611 * C130) * C121) *
                C2173) *
               C33783) *
              C113 +
          ((((C19772 * C124 + C50611 * C131) * C121 +
             (C19772 * C135 + C50611 * C145) * C50670) *
                C2173 +
            (C19920 * C121 + C19921 * C50670) * C2174 +
            (C19922 * C121 + C19923 * C50670) * C2175) *
               C33783 +
           ((C22084 + C22085) * C2173 + (C22056 + C22057) * C2174 +
            (C31404 + C31405) * C2175) *
               C50835) *
              C114 -
          ((((C19772 * C738 + C50611 * C746) * C50670 +
             (C19772 * C722 + C50611 * C734) * C121) *
                C2175 +
            ((C19772 * C733 + C50611 * C745) * C50670 +
             (C19772 * C721 + C50611 * C729) * C121) *
                C2174 +
            ((C19772 * C391 + C50611 * C399) * C50670 +
             (C19772 * C381 + C50611 * C387) * C121) *
                C2173) *
               C50835 +
           (((C19772 * C521 + C50611 * C527) * C50670 +
             (C19772 * C512 + C50611 * C517) * C121) *
                C2175 +
            ((C19772 * C265 + C50611 * C273) * C50670 +
             (C19772 * C255 + C50611 * C261) * C121) *
                C2174 +
            ((C19772 * C136 + C50611 * C146) * C50670 +
             (C19772 * C125 + C50611 * C132) * C121) *
                C2173) *
               C33783) *
              C115) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C506 +
             (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
             C19909 * C502 + C19910 * C508 + C19911 * C503) *
                C2173 +
            (C19908 * C506 + C19909 * C501 - C19910 * C507 - C19911 * C502 +
             C19912 * C508 + C19913 * C503) *
                C2174 +
            (C19910 * C506 + C19911 * C501 - C19912 * C507 - C19913 * C502 +
             C20130 * C508 + C20131 * C503) *
                C2175) *
               C33783 +
           ((C22484 + C22485 - C22486 - C22487 + C22488 + C22489) * C2173 +
            (C22490 + C22491 - C22492 - C22493 + C22494 + C22495) * C2174 +
            (C31796 + C31797 - C31798 - C31799 + C31800 + C31801) * C2175) *
               C50835) *
              C50892 +
          (((C19914 * C507 -
             ((C19772 * C134 + C50611 * C144) * C501 +
              (C19772 * C123 + C50611 * C130) * C506) +
             C19915 * C502 - C19916 * C508 - C19917 * C503) *
                C2173 +
            (C19916 * C507 - (C19915 * C501 + C19914 * C506) + C19917 * C502 -
             C19918 * C508 - C19919 * C503) *
                C2174 +
            (C19918 * C507 - (C19917 * C501 + C19916 * C506) + C19919 * C502 -
             C20132 * C508 - C20133 * C503) *
                C2175) *
               C33783 +
           ((C20962 * C507 - (C22070 * C501 + C22071 * C506) + C20963 * C502 -
             C20964 * C508 - C20965 * C503) *
                C2173 +
            (C20964 * C507 - (C20963 * C501 + C20962 * C506) + C20965 * C502 -
             C20966 * C508 - C20967 * C503) *
                C2174 +
            (C20966 * C507 - (C20965 * C501 + C20964 * C506) + C20967 * C502 -
             (C19772 * C2996 + C50611 * C3002) * C508 -
             (C19772 * C3004 + C50611 * C3008) * C503) *
                C2175) *
               C50835) *
              C50641) *
         C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C253 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C50899 -
            (C17174 + C17175 + C17176) * C254 -
            (C17177 + C17178 + C17179) * C50686) *
               C50759 * C33783 +
           ((C16988 * C383 + C16983 * C394 + C16989 * C379 + C16984 * C385 +
             C16990 * C380 + C16985 * C386) *
                C253 +
            (C16988 * C393 + C16983 * C401 + C16989 * C389 + C16984 * C397 +
             C16990 * C390 + C16985 * C398) *
                C50899 -
            (C17808 + C17807 + C17806) * C254 -
            (C17811 + C17810 + C17809) * C50686) *
               C50759 * C50835) *
              C250 +
          (((C17180 + C17181 + C17182) * C254 -
            ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
              C16988 * C134 + C16983 * C144) *
                 C50899 +
             (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
              C16988 * C123 + C16983 * C130) *
                 C253) +
            (C17183 + C17184 + C17185) * C50686) *
               C50759 * C33783 +
           ((C18726 + C18725 + C18724) * C254 -
            ((C16990 * C391 + C16985 * C399 + C16989 * C390 + C16984 * C398 +
              C16988 * C389 + C16983 * C397) *
                 C50899 +
             (C16990 * C381 + C16985 * C387 + C16989 * C380 + C16984 * C386 +
              C16988 * C379 + C16983 * C385) *
                 C253) +
            (C18729 + C18728 + C18727) * C50686) *
               C50759 * C50835) *
              C251 +
          (((C16988 * C124 + C16983 * C131 + C16989 * C125 + C16984 * C132 +
             C16990 * C126 + C16985 * C138) *
                C253 +
            (C16988 * C135 + C16983 * C145 + C16989 * C136 + C16984 * C146 +
             C16990 * C137 + C16985 * C147) *
                C50899 -
            (C17186 + C17187 + C17188) * C254 -
            (C17189 + C17190 + C17191) * C50686) *
               C50759 * C33783 +
           ((C16988 * C380 + C16983 * C386 + C16989 * C381 + C16984 * C387 +
             C16990 * C382 + C16985 * C388) *
                C253 +
            (C16988 * C390 + C16983 * C398 + C16989 * C391 + C16984 * C399 +
             C16990 * C392 + C16985 * C400) *
                C50899 -
            (C16990 * C1412 + C16985 * C1413 + C16989 * C721 + C16984 * C729 +
             C16988 * C720 + C16983 * C728) *
                C254 -
            (C16990 * C1414 + C16985 * C1415 + C16989 * C733 + C16984 * C745 +
             C16988 * C732 + C16983 * C744) *
                C50686) *
               C50759 * C50835) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
            C16990 * C124 + C16985 * C131) *
               C600 +
           (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
            C16990 * C135 + C16985 * C145) *
               C595 -
           (C17174 + C17175 + C17176) * C601 -
           (C17177 + C17178 + C17179) * C596 +
           (C17508 + C17509 + C17510) * C602 +
           (C17511 + C17512 + C17513) * C597 -
           (C17630 + C17631 + C17632) * C603 -
           (C17633 + C17634 + C17635) * C598) *
              C50759 * C33783 +
          ((C34114 + C34115 + C34116) * C600 +
           (C34117 + C34118 + C34119) * C595 -
           (C17808 + C17807 + C17806) * C601 -
           (C17811 + C17810 + C17809) * C596 +
           (C17814 + C17813 + C17812) * C602 +
           (C17817 + C17816 + C17815) * C597 -
           (C16990 * C3984 + C16985 * C3985 + C16989 * C2994 + C16984 * C2998 +
            C16988 * C2995 + C16983 * C2999) *
               C603 -
           (C16990 * C3986 + C16985 * C3987 + C16989 * C3000 + C16984 * C3006 +
            C16988 * C3001 + C16983 * C3007) *
               C598) *
              C50759 * C50835) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C253 +
             (C19772 * C133 + C50611 * C143) * C50899 - C19908 * C254 -
             C19909 * C50686) *
                C2173 +
            (C19908 * C253 + C19909 * C50899 - C19910 * C254 -
             C19911 * C50686) *
                C2174 +
            (C19910 * C253 + C19911 * C50899 - C19912 * C254 -
             C19913 * C50686) *
                C2175) *
               C33783 +
           ((C22852 + C22853 - C22854 - C22855) * C2173 +
            (C22856 + C22857 - C22858 - C22859) * C2174 +
            (C32098 + C32099 - C32100 - C32101) * C2175) *
               C50835) *
              C250 +
          (((C19914 * C254 -
             ((C19772 * C134 + C50611 * C144) * C50899 +
              (C19772 * C123 + C50611 * C130) * C253) +
             C19915 * C50686) *
                C2173 +
            (C19916 * C254 - (C19915 * C50899 + C19914 * C253) +
             C19917 * C50686) *
                C2174 +
            (C19918 * C254 - (C19917 * C50899 + C19916 * C253) +
             C19919 * C50686) *
                C2175) *
               C33783 +
           ((C23866 - (C23867 + C23868) + C23869) * C2173 +
            (C23870 - (C23871 + C23872) + C23873) * C2174 +
            (C33040 - (C33041 + C33042) + C33043) * C2175) *
               C50835) *
              C251 +
          ((((C19772 * C124 + C50611 * C131) * C253 +
             (C19772 * C135 + C50611 * C145) * C50899 - C19920 * C254 -
             C19921 * C50686) *
                C2173 +
            (C19920 * C253 + C19921 * C50899 - C19922 * C254 -
             C19923 * C50686) *
                C2174 +
            (C19922 * C253 + C19923 * C50899 - C19924 * C254 -
             C19925 * C50686) *
                C2175) *
               C33783 +
           ((C22072 * C253 + C22073 * C50899 - C21878 * C254 -
             C21879 * C50686) *
                C2173 +
            (C21878 * C253 + C21879 * C50899 - C31252 * C254 -
             C31253 * C50686) *
                C2174 +
            (C31252 * C253 + C31253 * C50899 -
             (C19772 * C3984 + C50611 * C3985) * C254 -
             (C19772 * C3986 + C50611 * C3987) * C50686) *
                C2175) *
               C50835) *
              C252) *
         C50700) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19772 * C122 + C50611 * C129) * C600 +
            (C19772 * C133 + C50611 * C143) * C595 - C19908 * C601 -
            C19909 * C596 + C19910 * C602 + C19911 * C597 - C19912 * C603 -
            C19913 * C598) *
               C2173 +
           (C19908 * C600 + C19909 * C595 - C19910 * C601 - C19911 * C596 +
            C19912 * C602 + C19913 * C597 - C20130 * C603 - C20131 * C598) *
               C2174 +
           (C19910 * C600 + C19911 * C595 - C19912 * C601 - C19913 * C596 +
            C20130 * C602 + C20131 * C597 - C20208 * C603 - C20209 * C598) *
               C2175) *
              C33783 +
          ((C22064 * C600 + C22065 * C595 - C20328 * C601 - C20329 * C596 +
            C20330 * C602 + C20331 * C597 - C20332 * C603 - C20333 * C598) *
               C2173 +
           (C20328 * C600 + C20329 * C595 - C20330 * C601 - C20331 * C596 +
            C20332 * C602 + C20333 * C597 - C20334 * C603 - C20335 * C598) *
               C2174 +
           (C20330 * C600 + C20331 * C595 - C20332 * C601 - C20333 * C596 +
            C20334 * C602 + C20335 * C597 -
            (C19772 * C20307 + C50611 * C20308) * C603 -
            (C19772 * C20309 + C50611 * C20310) * C598) *
               C2175) *
              C50835) *
         C50636 * C50700) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
              C16990 * C124 + C16985 * C131) *
                 C121 +
             (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
              C16990 * C135 + C16985 * C145) *
                 C50670) *
                C50759 * C33783 +
            ((C34114 + C34115 + C34116) * C121 +
             (C34117 + C34118 + C34119) * C50670) *
                C50759 * C50835) *
               C250 -
           (((C34120 + C34121 + C34122) * C50670 +
             (C34123 + C34124 + C34125) * C121) *
                C50759 * C50835 +
            ((C16990 * C136 + C16985 * C146 + C16989 * C135 + C16984 * C145 +
              C16988 * C134 + C16983 * C144) *
                 C50670 +
             (C16990 * C125 + C16985 * C132 + C16989 * C124 + C16984 * C131 +
              C16988 * C123 + C16983 * C130) *
                 C121) *
                C50759 * C33783) *
               C251 +
           (((C16988 * C124 + C16983 * C131 + C16989 * C125 + C16984 * C132 +
              C16990 * C126 + C16985 * C138) *
                 C121 +
             (C16988 * C135 + C16983 * C145 + C16989 * C136 + C16984 * C146 +
              C16990 * C137 + C16985 * C147) *
                 C50670) *
                C50759 * C33783 +
            ((C34126 + C34127 + C34128) * C121 +
             (C34129 + C34130 + C34131) * C50670) *
                C50759 * C50835) *
               C252) *
              C50901 +
          ((((C34125 + C34124 + C34123) * C121 +
             (C34122 + C34121 + C34120) * C50670) *
                C50759 * C33783 +
            ((C16988 * C852 + C16983 * C857 + C16989 * C853 + C16984 * C858 +
              C16990 * C854 + C16985 * C859) *
                 C121 +
             (C16988 * C861 + C16983 * C867 + C16989 * C862 + C16984 * C868 +
              C16990 * C863 + C16985 * C869) *
                 C50670) *
                C50759 * C50835) *
               C251 -
           (((C16990 * C862 + C16985 * C868 + C16989 * C861 + C16984 * C867 +
              C16988 * C860 + C16983 * C866) *
                 C50670 +
             (C16990 * C853 + C16985 * C858 + C16989 * C852 + C16984 * C857 +
              C16988 * C851 + C16983 * C856) *
                 C121) *
                C50759 * C50835 +
            ((C34119 + C34118 + C34117) * C50670 +
             (C34116 + C34115 + C34114) * C121) *
                C50759 * C33783) *
               C250 -
           (((C16990 * C864 + C16985 * C870 + C16989 * C863 + C16984 * C869 +
              C16988 * C862 + C16983 * C868) *
                 C50670 +
             (C16990 * C855 + C16985 * C865 + C16989 * C854 + C16984 * C859 +
              C16988 * C853 + C16983 * C858) *
                 C121) *
                C50759 * C50835 +
            ((C34131 + C34130 + C34129) * C50670 +
             (C34128 + C34127 + C34126) * C121) *
                C50759 * C33783) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16988 * C122 + C16983 * C129 + C16989 * C123 + C16984 * C130 +
             C16990 * C124 + C16985 * C131) *
                C506 +
            (C16988 * C133 + C16983 * C143 + C16989 * C134 + C16984 * C144 +
             C16990 * C135 + C16985 * C145) *
                C501 -
            (C17174 + C17175 + C17176) * C507 -
            (C17177 + C17178 + C17179) * C502 +
            (C17508 + C17509 + C17510) * C508 +
            (C17511 + C17512 + C17513) * C503) *
               C50759 * C33783 +
           ((C34114 + C34115 + C34116) * C506 +
            (C34117 + C34118 + C34119) * C501 -
            (C17808 + C17807 + C17806) * C507 -
            (C17811 + C17810 + C17809) * C502 +
            (C17814 + C17813 + C17812) * C508 +
            (C17817 + C17816 + C17815) * C503) *
               C50759 * C50835) *
              C50636 * C50901 +
          (((C17806 + C17807 + C17808) * C507 -
            ((C34119 + C34118 + C34117) * C501 +
             (C34116 + C34115 + C34114) * C506) +
            (C17809 + C17810 + C17811) * C502 -
            (C17812 + C17813 + C17814) * C508 -
            (C17815 + C17816 + C17817) * C503) *
               C50759 * C33783 +
           ((C18124 + C18123 + C18122) * C507 -
            ((C16990 * C862 + C16985 * C868 + C16989 * C861 + C16984 * C867 +
              C16988 * C860 + C16983 * C866) *
                 C501 +
             (C16990 * C853 + C16985 * C858 + C16989 * C852 + C16984 * C857 +
              C16988 * C851 + C16983 * C856) *
                 C506) +
            (C18127 + C18126 + C18125) * C502 -
            (C16990 * C3196 + C16985 * C3202 + C16989 * C3195 + C16984 * C3198 +
             C16988 * C3194 + C16983 * C3197) *
                C508 -
            (C16990 * C3201 + C16985 * C3205 + C16989 * C3200 + C16984 * C3204 +
             C16988 * C3199 + C16983 * C3203) *
                C503) *
               C50759 * C50835) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C19772 * C122 + C50611 * C129) * C121 +
              (C19772 * C133 + C50611 * C143) * C50670) *
                 C2173 +
             (C19908 * C121 + C19909 * C50670) * C2174 +
             (C19910 * C121 + C19911 * C50670) * C2175) *
                C33783 +
            ((C22076 + C22077) * C2173 + (C22032 + C22033) * C2174 +
             (C31400 + C31401) * C2175) *
                C50835) *
               C250 -
           (((C31402 + C31403) * C2175 + (C22046 + C22047) * C2174 +
             (C22082 + C22083) * C2173) *
                C50835 +
            ((C19917 * C50670 + C19916 * C121) * C2175 +
             (C19915 * C50670 + C19914 * C121) * C2174 +
             ((C19772 * C134 + C50611 * C144) * C50670 +
              (C19772 * C123 + C50611 * C130) * C121) *
                 C2173) *
                C33783) *
               C251 +
           ((((C19772 * C124 + C50611 * C131) * C121 +
              (C19772 * C135 + C50611 * C145) * C50670) *
                 C2173 +
             (C19920 * C121 + C19921 * C50670) * C2174 +
             (C19922 * C121 + C19923 * C50670) * C2175) *
                C33783 +
            ((C22084 + C22085) * C2173 + (C22056 + C22057) * C2174 +
             (C31404 + C31405) * C2175) *
                C50835) *
               C252) *
              C50901 +
          ((((C22083 + C22082) * C2173 + (C22047 + C22046) * C2174 +
             (C31403 + C31402) * C2175) *
                C33783 +
            ((C22081 + C22080) * C2173 + (C22041 + C22040) * C2174 +
             (C31948 + C31949) * C2175) *
                C50835) *
               C251 -
           (((C31950 + C31951) * C2175 + (C22039 + C22038) * C2174 +
             (C22079 + C22078) * C2173) *
                C50835 +
            ((C31401 + C31400) * C2175 + (C22033 + C22032) * C2174 +
             (C22077 + C22076) * C2173) *
                C33783) *
               C250 -
           ((((C19772 * C3201 + C50611 * C3205) * C50670 +
              (C19772 * C3196 + C50611 * C3202) * C121) *
                 C2175 +
             (C22063 + C22062) * C2174 + (C22087 + C22086) * C2173) *
                C50835 +
            ((C31405 + C31404) * C2175 + (C22057 + C22056) * C2174 +
             (C22085 + C22084) * C2173) *
                C33783) *
               C252) *
              C50712)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19772 * C122 + C50611 * C129) * C506 +
             (C19772 * C133 + C50611 * C143) * C501 - C19908 * C507 -
             C19909 * C502 + C19910 * C508 + C19911 * C503) *
                C2173 +
            (C19908 * C506 + C19909 * C501 - C19910 * C507 - C19911 * C502 +
             C19912 * C508 + C19913 * C503) *
                C2174 +
            (C19910 * C506 + C19911 * C501 - C19912 * C507 - C19913 * C502 +
             C20130 * C508 + C20131 * C503) *
                C2175) *
               C33783 +
           ((C22484 + C22485 - C22486 - C22487 + C22488 + C22489) * C2173 +
            (C22490 + C22491 - C22492 - C22493 + C22494 + C22495) * C2174 +
            (C31796 + C31797 - C31798 - C31799 + C31800 + C31801) * C2175) *
               C50835) *
              C50636 * C50901 +
          (((C22486 - (C22485 + C22484) + C22487 - C22488 - C22489) * C2173 +
            (C22492 - (C22491 + C22490) + C22493 - C22494 - C22495) * C2174 +
            (C31798 - (C31797 + C31796) + C31799 - C31800 - C31801) * C2175) *
               C33783 +
           ((C22498 - (C22497 + C22496) + C22499 - C22500 - C22501) * C2173 +
            (C22504 - (C22503 + C22502) + C22505 - C22506 - C22507) * C2174 +
            (C20552 * C507 - (C20551 * C501 + C20550 * C506) + C20553 * C502 -
             (C19772 * C20531 + C50611 * C20532) * C508 -
             (C19772 * C20533 + C50611 * C20534) * C503) *
                C2175) *
               C50835) *
              C50636 * C50712)) /
            (p * q * std::sqrt(p + q));
}
