/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pddp_AC_xz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1221_13_13(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49695 = 0 * ae;
    const double C49694 = ae * be;
    const double C49693 = 0 * be;
    const double C49692 = ae + be;
    const double C49691 = 0 * be;
    const double C49690 = xA - xB;
    const double C49733 = ce + de;
    const double C49732 = zC - zD;
    const double C49743 = ce * de;
    const double C49742 = 0 * de;
    const double C49761 = 0 * ce;
    const double C49757 = 0 * de;
    const double C49823 = zP - zQ;
    const double C49822 = p + q;
    const double C49821 = p * q;
    const double C49820 = xP - xQ;
    const double C49828 = bs[3];
    const double C49839 = bs[4];
    const double C49847 = bs[5];
    const double C49866 = bs[6];
    const double C49898 = bs[7];
    const double C49980 = yP - yQ;
    const double C50269 = bs[2];
    const double C122 = bs[0];
    const double C50707 = xC - xD;
    const double C50727 = yC - yD;
    const double C50830 = yA - yB;
    const double C50842 = zA - zB;
    const double C49700 = C49695 / C49692;
    const double C49697 = 2 * C49692;
    const double C49696 = std::pow(C49692, 2);
    const double C49699 = C49694 * C49690;
    const double C49698 = C49690 * C49693;
    const double C50683 = C49690 * be;
    const double C50682 = C49690 * ae;
    const double C50681 = std::pow(C49690, 2);
    const double C49741 = 2 * C49733;
    const double C49758 = std::pow(C49733, 2);
    const double C49831 = C49733 * C49692;
    const double C143 = (-(std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                           (xP - xQ) * (zP - zQ) * ae * ce) /
                         C49733) /
                        C49692;
    const double C50772 = std::pow(C49732, 2);
    const double C50784 = C49732 * de;
    const double C50783 = C49732 * ce;
    const double C49744 = C49743 * C49732;
    const double C49759 = C49732 * C49742;
    const double C49765 = C49761 / C49733;
    const double C49829 = C49823 * ce;
    const double C50095 = std::pow(C49823, 2);
    const double C49824 = 2 * C49821;
    const double C49830 = C49820 * C49823;
    const double C49849 = std::pow(C49820, 2);
    const double C49939 = C49820 * ae;
    const double C49989 = std::pow(C49980, 2);
    const double C50710 = C50707 * de;
    const double C50709 = C50707 * ce;
    const double C50708 = std::pow(C50707, 2);
    const double C50742 = std::pow(C50727, 2);
    const double C50758 = C50727 * de;
    const double C50757 = C50727 * ce;
    const double C50831 = std::pow(C50830, 2);
    const double C50881 = C50830 * be;
    const double C50880 = C50830 * ae;
    const double C50843 = std::pow(C50842, 2);
    const double C50907 = C50842 * be;
    const double C50906 = C50842 * ae;
    const double C50691 = std::pow(C49697, -1);
    const double C50989 = std::pow(C49697, -2);
    const double C49701 = 2 * C49696;
    const double C50967 = 4 * C49696;
    const double C49702 = C49698 / C49692;
    const double C50684 = C50681 * C49694;
    const double C50718 = std::pow(C49741, -1);
    const double C50976 = std::pow(C49741, -2);
    const double C49762 = 2 * C49758;
    const double C50974 = 4 * C49758;
    const double C50773 = C50772 * C49743;
    const double C49763 = C49759 / C49733;
    const double C49833 = C49828 * C49829;
    const double C49841 = C49839 * C49829;
    const double C49852 = C49847 * C49829;
    const double C49872 = C49866 * C49829;
    const double C49907 = C49898 * C49829;
    const double C49825 = C49824 / C49822;
    const double C133 = (bs[1] * C49829 * C49824) / (C49822 * C49733);
    const double C123 = -(C49820 * bs[1] * C49824) / C49822;
    const double C256 = -(C49980 * bs[1] * C49824) / C49822;
    const double C382 = -(C49823 * bs[1] * C49824) / C49822;
    const double C49834 = C49830 * ae;
    const double C49942 = C49839 * C49939;
    const double C49948 = C49847 * C49939;
    const double C49958 = C49866 * C49939;
    const double C49994 = C49828 * C49939;
    const double C50014 = C49898 * C49939;
    const double C129 = (-(bs[1] * C49939 * C49824) / C49822) / C49692;
    const double C50711 = C50708 * C49743;
    const double C50743 = C50742 * C49743;
    const double C50832 = C50831 * C49694;
    const double C50844 = C50843 * C49694;
    const double C49707 = C49693 / C49701;
    const double C49705 = C49691 / C49701;
    const double C49704 = 0 - C49702;
    const double C50685 = C50684 / C49692;
    const double C49770 = C49742 / C49762;
    const double C49768 = C49757 / C49762;
    const double C50774 = C50773 / C49733;
    const double C49767 = 0 - C49763;
    const double C49827 = -C49825;
    const double C49838 = std::pow(C49825, 4);
    const double C49865 = std::pow(C49825, 6);
    const double C144 =
        (-(C49820 * std::pow(-C49825, 3) * bs[3] * C49820 * C49823 * ae * ce) /
         C49733) /
            C49692 -
        (ae * std::pow(C49825, 2) * bs[2] * C49823 * ce) / (C49733 * C49692);
    const double C50268 = std::pow(C49825, 2);
    const double C130 =
        (C49820 * std::pow(C49825, 2) * bs[2] * C49939) / C49692 -
        (ae * bs[1] * C49824) / (C49822 * C49692);
    const double C49836 = C49834 * ce;
    const double C50712 = C50711 / C49733;
    const double C50744 = C50743 / C49733;
    const double C50833 = C50832 / C49692;
    const double C50845 = C50844 / C49692;
    const double C49709 = C49704 * ae;
    const double C50686 = -C50685;
    const double C50775 = -C50774;
    const double C49772 = C49767 * ce;
    const double C49832 = std::pow(C49827, 3);
    const double C49846 = std::pow(C49827, 5);
    const double C49897 = std::pow(C49827, 7);
    const double C49843 = C49838 * C49841;
    const double C49941 = C49839 * C49838;
    const double C49943 = C49838 * C49942;
    const double C49876 = C49865 * C49872;
    const double C49961 = C49866 * C49865;
    const double C49962 = C49865 * C49958;
    const double C50270 = C50269 * C50268;
    const double C134 = -(C49820 * C50268 * C50269 * C49829) / C49733;
    const double C262 = -(C49980 * C50268 * C50269 * C49829) / C49733;
    const double C266 = (C49980 * C50268 * C50269 * C49939) / C49692;
    const double C388 = (C49823 * C50268 * C50269 * C49939) / C49692;
    const double C392 = (ce * bs[1] * C49824) / (C49822 * C49733) -
                        (C49823 * C50268 * C50269 * C49829) / C49733;
    const double C49840 = C49839 * C49836;
    const double C49850 = C49847 * C49836;
    const double C49869 = C49866 * C49836;
    const double C49903 = C49898 * C49836;
    const double C50713 = -C50712;
    const double C50745 = -C50744;
    const double C50834 = -C50833;
    const double C50846 = -C50845;
    const double C49712 = C49709 / C49692;
    const double C50687 = std::exp(C50686);
    const double C50776 = std::exp(C50775);
    const double C49774 = C49772 / C49733;
    const double C49835 = C49832 * C49833;
    const double C49940 = C49828 * C49832;
    const double C49995 = C49832 * C49994;
    const double C274 =
        (-((yP - yQ) * C49832 * C49828 * C49836) / C49733) / C49692;
    const double C400 =
        (-(C49823 * C49832 * C49828 * C49836) / C49733) / C49692 -
        (std::pow(C49825, 2) * bs[2] * C49939 * ce) / C49831;
    const double C49854 = C49846 * C49852;
    const double C49951 = C49847 * C49846;
    const double C49952 = C49846 * C49948;
    const double C49912 = C49897 * C49907;
    const double C50019 = C49897 * C50014;
    const double C49848 = ae * C49843;
    const double C49845 = C49820 * C49843;
    const double C50436 = C49980 * C49843;
    const double C50446 = C49823 * C49843;
    const double C49950 = C49820 * C49941;
    const double C49949 = C49941 * ae;
    const double C50279 = C49941 * C49849;
    const double C50406 = C49941 * C49989;
    const double C50425 = C49980 * C49941;
    const double C50449 = C49941 * C50095;
    const double C50506 = C49823 * C49941;
    const double C50505 = C49941 * ce;
    const double C49997 = C49820 * C49943;
    const double C50039 = C49980 * C49943;
    const double C50094 = C49943 * ce;
    const double C50092 = C49823 * C49943;
    const double C49879 = C49876 * C49849;
    const double C49899 = ae * C49876;
    const double C49895 = C49820 * C49876;
    const double C50523 = C49876 * C49989;
    const double C50554 = C49980 * C49876;
    const double C50572 = C49823 * C49876;
    const double C49964 = C49961 * C49849;
    const double C50016 = C49820 * C49961;
    const double C50015 = C49961 * ae;
    const double C50536 = C49961 * C49989;
    const double C50557 = C49980 * C49961;
    const double C50576 = C49961 * C50095;
    const double C49966 = C49820 * C49962;
    const double C50079 = C49962 * C49989;
    const double C50133 = C49980 * C49962;
    const double C50162 = C49962 * C50095;
    const double C50240 = C49962 * ce;
    const double C50238 = C49823 * C49962;
    const double C124 = C50270 * C49849 - (bs[1] * C49824) / C49822;
    const double C255 = C49980 * C49820 * C50270;
    const double C381 = C49823 * C49820 * C50270;
    const double C506 = C50270 * C49989 - (bs[1] * C49824) / C49822;
    const double C711 = C49823 * C49980 * C50270;
    const double C847 = C50270 * C50095 - (bs[1] * C49824) / C49822;
    const double C49842 = C49838 * C49840;
    const double C49853 = C49846 * C49850;
    const double C49874 = C49865 * C49869;
    const double C49910 = C49897 * C49903;
    const double C50714 = std::exp(C50713);
    const double C50746 = std::exp(C50745);
    const double C50835 = std::exp(C50834);
    const double C50847 = std::exp(C50846);
    const double C49714 = C49712 - C49705;
    const double C19868 = C50687 * C266;
    const double C22170 = C50687 * C388;
    const double C49703 = C49699 * C50687;
    const double C50688 = C50687 * C50682;
    const double C50692 = C50691 * C50687;
    const double C50964 = C50687 * C50683;
    const double C50961 = C50687 / C49697;
    const double C16980 = C50989 * C50687;
    const double C49745 = C49744 * C50776;
    const double C121 = -(2 * ce * de * (zC - zD) * C50776) / (ce + de);
    const double C377 =
        ((C50776 - (C49732 * 2 * ce * de * C49732 * C50776) / C49733) * ce) /
            C49733 -
        (0 * de) / (2 * std::pow(C49733, 2));
    const double C378 =
        (0 * ce) / C49733 - (ce * de * C49732 * C50776) / std::pow(C49733, 2);
    const double C50785 = C50776 * C50783;
    const double C50788 = C50718 * C50776;
    const double C50984 = C50776 * C50784;
    const double C50983 = C50776 / C49741;
    const double C843 = C50976 * C50776;
    const double C49776 = C49774 - C49768;
    const double C145 =
        (-(ae * C49820 * C49835) / C49733) / C49692 -
        (C49832 * C49828 * C49836) / C49831 +
        C49820 * ((-(C49820 * std::pow(C49825, 4) * bs[4] * C49836) / C49733) /
                      C49692 -
                  (ae * C49835) / C49831);
    const double C135 = -(C49835 * C49849 + C50268 * C50269 * C49829) / C49733;
    const double C136 = (-2 * C49820 * C49835) / C49733 -
                        (C49820 * (C49843 * C49849 + C49835)) / C49733;
    const double C260 = -(C49980 * (C49843 * C49849 + C49835)) / C49733;
    const double C261 = -(C49980 * C49820 * C49835) / C49733;
    const double C391 =
        -(C49823 * C49820 * C49835 + C49820 * C50270 * ce) / C49733;
    const double C515 = -(C49835 * C49989 + C50268 * C50269 * C49829) / C49733;
    const double C604 = (-2 * C49980 * C49835) / C49733 -
                        (C49980 * (C49843 * C49989 + C49835)) / C49733;
    const double C723 =
        -(C49823 * C49980 * C49835 + C49980 * C50270 * ce) / C49733;
    const double C856 = -(C49823 * (C49823 * C49835 + C50270 * ce) +
                          C50268 * C50269 * C49829 + C49823 * C50270 * ce) /
                        C49733;
    const double C49998 = C49940 * ae;
    const double C50278 = C49820 * C49940;
    const double C50370 = C49980 * C49940;
    const double C50448 = C49823 * C49940;
    const double C50447 = C49940 * ce;
    const double C390 = -(C49823 * (C49843 * C49849 + C49835) +
                          (C50270 + C49940 * C49849) * ce) /
                        C49733;
    const double C734 = -(C49823 * (C49843 * C49989 + C49835) +
                          (C50270 + C49940 * C49989) * ce) /
                        C49733;
    const double C1066 = (-2 * (C49823 * C49835 + C50270 * ce)) / C49733 -
                         (C49823 * (C49823 * (C49823 * C49843 + C49940 * ce) +
                                    C49835 + C49823 * C49940 * ce)) /
                             C49733 -
                         ((C50270 + C49940 * C50095) * ce) / C49733;
    const double C125 =
        2 * C49820 * C50270 + C49820 * (C50270 + C49940 * C49849);
    const double C254 = C49980 * (C50270 + C49940 * C49849);
    const double C380 = C49823 * (C50270 + C49940 * C49849);
    const double C600 =
        2 * C49980 * C50270 + C49980 * (C50270 + C49940 * C49989);
    const double C718 = C49823 * (C50270 + C49940 * C49989);
    const double C1058 =
        2 * C49823 * C50270 + C49823 * (C50270 + C49940 * C50095);
    const double C131 =
        (C50268 * C50269 * C49939 + C49820 * (C49820 * C49995 + C50270 * ae) +
         C49820 * C50270 * ae) /
        C49692;
    const double C265 = (C49980 * (C49820 * C49995 + C50270 * ae)) / C49692;
    const double C387 = (C49823 * (C49820 * C49995 + C50270 * ae)) / C49692;
    const double C511 = (C50268 * C50269 * C49939 + C49995 * C49989) / C49692;
    const double C608 =
        (2 * C49980 * C49995 + C49980 * (C49995 + C49943 * C49989)) / C49692;
    const double C719 = (C49823 * C49980 * C49995) / C49692;
    const double C730 = (C49823 * (C49995 + C49943 * C49989)) / C49692;
    const double C852 = (C50268 * C50269 * C49939 + C49995 * C50095) / C49692;
    const double C1062 =
        (2 * C49823 * C49995 + C49823 * (C49995 + C49943 * C50095)) / C49692;
    const double C19870 = C50687 * C274;
    const double C22172 = C50687 * C400;
    const double C49856 = C49854 * C49849;
    const double C49867 = ae * C49854;
    const double C49863 = C49820 * C49854;
    const double C50391 = C49854 * C49989;
    const double C50479 = C49980 * C49854;
    const double C50504 = C49823 * C49854;
    const double C2693 =
        (-3 * (C49843 * C49989 + C49835)) / C49733 +
        C49980 * ((-2 * C49980 * C49843) / C49733 -
                  (C49980 * (C49854 * C49989 + C49843)) / C49733);
    const double C49953 = C49951 * C49849;
    const double C49960 = C49820 * C49951;
    const double C49959 = C49951 * ae;
    const double C50426 = C49951 * C49989;
    const double C50482 = C49980 * C49951;
    const double C50507 = C49951 * C50095;
    const double C50574 = C49823 * C49951;
    const double C50573 = C49951 * ce;
    const double C49954 = C49820 * C49952;
    const double C50062 = C49952 * C49989;
    const double C50078 = C49980 * C49952;
    const double C50098 = C49952 * C50095;
    const double C50161 = C49952 * ce;
    const double C50159 = C49823 * C49952;
    const double C49915 = C49912 * C49849;
    const double C50021 = C49820 * C50019;
    const double C50196 = C50019 * C49989;
    const double C50216 = C49980 * C50019;
    const double C50242 = C50019 * C50095;
    const double C49851 = C49848 / C49831;
    const double C516 = -(C49845 * C49989 + C49820 * C49835) / C49733;
    const double C50002 = C49950 * ae;
    const double C50282 = 2 * C49950;
    const double C50368 = C49980 * C49950;
    const double C50455 = C49823 * C49950;
    const double C50454 = C49950 * ce;
    const double C50280 = C49940 + C50279;
    const double C50407 = C49940 + C50406;
    const double C50427 = 2 * C50425;
    const double C50481 = C49823 * C50425;
    const double C50480 = C50425 * ce;
    const double C50451 = C49940 + C50449;
    const double C50511 = 2 * C50506;
    const double C50509 = C50506 * ce;
    const double C972 = (C49980 * C49995 + C50039 * C50095) / C49692;
    const double C50097 = C50094 / C49831;
    const double C49882 = C49879 + C49854;
    const double C49904 = C49899 / C49831;
    const double C49906 = -2 * C49895;
    const double C49902 = ae * C49895;
    const double C50388 = C49895 * C49989;
    const double C50470 = C49980 * C49895;
    const double C50490 = C49823 * C49895;
    const double C50525 = C50523 + C49854;
    const double C50558 = C49823 * C50554;
    const double C49967 = C49951 + C49964;
    const double C50020 = C50016 * ae;
    const double C50419 = C50016 * C49989;
    const double C50473 = C49980 * C50016;
    const double C50493 = C50016 * C50095;
    const double C50537 = C49951 + C50536;
    const double C50560 = C50557 * C50095;
    const double C50582 = C49951 + C50576;
    const double C50081 = C49952 + C50079;
    const double C50136 = C50133 * C50095;
    const double C50195 = 2 * C50133;
    const double C50215 = C50133 * ce;
    const double C50212 = C49823 * C50133;
    const double C50167 = C49952 + C50162;
    const double C50246 = C50240 / C49831;
    const double C50247 = 2 * C50238;
    const double C50244 = C50238 * ce;
    const double C146 =
        2 * ((-(C49820 * C49842) / C49733) / C49692 - (ae * C49835) / C49831) -
        (ae * (C49843 * std::pow(C49820, 2) + C49835)) / C49831 +
        C49820 *
            ((-(ae * C49820 * C49843) / C49733) / C49692 - C49842 / C49831 +
             C49820 *
                 ((-(C49820 * std::pow(C49827, 5) * bs[5] * C49836) / C49733) /
                      C49692 -
                  (ae * C49843) / C49831));
    const double C273 = (yP - yQ) * ((-(C49820 * C49842) / C49733) / C49692 -
                                     (ae * C49835) / C49831);
    const double C399 = C49823 * ((-(C49820 * C49842) / C49733) / C49692 -
                                  (ae * C49835) / C49831) -
                        ((C49820 * C49832 * C49828 * C49939 +
                          bs[2] * std::pow(C49825, 2) * ae) *
                         ce) /
                            C49831;
    const double C521 = (-(C49842 * std::pow(yP - yQ, 2)) / C49733) / C49692 -
                        (C49832 * C49828 * C49836) / C49831;
    const double C735 = (-(C49823 * C49980 * C49842) / C49733) / C49692 -
                        (C49980 * C49832 * C49828 * C49939 * ce) / C49831;
    const double C862 = (-(C49823 * C49995 * ce) / C49733) / C49692 -
                        (C49832 * C49828 * C49836) / C49831 +
                        C49823 * ((-(C49823 * C49842) / C49733) / C49692 -
                                  (C49995 * ce) / C49831);
    const double C49855 = C49820 * C49853;
    const double C49864 = C49853 / C49831;
    const double C50087 = C49980 * C49853;
    const double C50093 = C49823 * C49853;
    const double C612 =
        (-2 * C49980 * C49842) / C49831 +
        C49980 * ((-(C49853 * std::pow(C49980, 2)) / C49733) / C49692 -
                  C49842 / C49831);
    const double C742 =
        C49823 * ((-(C49853 * C49989) / C49733) / C49692 - C49842 / C49831) -
        ((C49832 * C49828 * C49939 + C49943 * C49989) * ce) / C49831;
    const double C980 =
        (-(C49823 * C50039 * ce) / C49733) / C49692 -
        (C49980 * C49842) / C49831 +
        C49823 * ((-(C49823 * C49980 * C49853) / C49733) / C49692 -
                  (C50039 * ce) / C49831);
    const double C1070 =
        2 * ((-(C49823 * C49842) / C49733) / C49692 - (C49995 * ce) / C49831) -
        ((C49995 + C49943 * std::pow(C49823, 2)) * ce) / C49831 +
        C49823 *
            ((-(C49823 * C49943 * ce) / C49733) / C49692 - C49842 / C49831 +
             C49823 * ((-(C49823 * C49853) / C49733) / C49692 -
                       (C49943 * ce) / C49831));
    const double C49878 = C49820 * C49874;
    const double C49896 = C49874 / C49831;
    const double C50052 = C49874 * C49989;
    const double C50131 = C49980 * C49874;
    const double C50160 = C49823 * C49874;
    const double C49914 = C49820 * C49910;
    const double C50184 = C49910 * C49989;
    const double C50214 = C49980 * C49910;
    const double C50239 = C49823 * C49910;
    const double C50715 = C50714 * C50709;
    const double C50719 = C50718 * C50714;
    const double C50970 = C50714 / C49741;
    const double C50969 = C50714 * C50710;
    const double C252 = C50976 * C50714;
    const double C50759 = C50746 * C50757;
    const double C50762 = C50718 * C50746;
    const double C50979 = C50746 * C50758;
    const double C50978 = C50746 / C49741;
    const double C503 = C50976 * C50746;
    const double C50882 = C50835 * C50880;
    const double C50885 = C50691 * C50835;
    const double C50993 = C50835 * C50881;
    const double C50988 = C50835 / C49697;
    const double C2175 = C50989 * C50835;
    const double C50908 = C50847 * C50906;
    const double C50911 = C50691 * C50847;
    const double C50997 = C50847 * C50907;
    const double C50990 = C50847 / C49697;
    const double C5107 = C50989 * C50847;
    const double C49708 = C49703 / C49696;
    const double C49706 = 2 * C49703;
    const double C50965 = C50688 / C49701;
    const double C50963 = C50688 / C49692;
    const double C50962 = C50688 * C50683;
    const double C16979 = (2 * C50691 * C50688) / C49692;
    const double C50966 = C50692 * C50683;
    const double C108 = C50692 / C50967;
    const double C7910 = C50692 / C49697;
    const double C51002 = C50964 / C49692;
    const double C16978 = (C50687 * std::pow(C50682, 2)) / C49696 + C50961;
    const double C49746 = 2 * C49745;
    const double C49766 = C49745 / C49758;
    const double C50986 = C50785 / C49762;
    const double C50985 = C50785 * C50784;
    const double C50977 = C50785 / C49733;
    const double C50791 = C50788 * C50784;
    const double C1050 = C50788 / C50974;
    const double C1743 = C50788 / C49741;
    const double C51010 = C50984 / C49733;
    const double C842 = (-2 * C50718 * C50984) / C49733;
    const double C841 = (C50776 * std::pow(C50784, 2)) / C49758 + C50983;
    const double C49999 = C49997 + C49998;
    const double C724 =
        -(C49823 * C49980 * C49845 + C49980 * C50278 * ce) / C49733;
    const double C857 = -(C49823 * (C49823 * C49845 + C50278 * ce) +
                          C49820 * C49835 + C49823 * C50278 * ce) /
                        C49733;
    const double C507 = C49820 * C50270 + C50278 * C49989;
    const double C599 =
        2 * C49980 * C50278 + C49980 * (C50278 + C49950 * C49989);
    const double C712 = C49823 * C49980 * C50278;
    const double C717 = C49823 * (C50278 + C49950 * C49989);
    const double C848 = C49820 * C50270 + C50278 * C50095;
    const double C1057 =
        2 * C49823 * C50278 + C49823 * (C50278 + C49950 * C50095);
    const double C976 = -(C49823 * (C49823 * C49980 * C49843 + C50370 * ce) +
                          C49980 * C49835 + C49823 * C50370 * ce) /
                        C49733;
    const double C3505 =
        (-2 * (C49823 * C50436 + C50370 * ce)) / C49733 -
        (C49823 * (C49823 * (C49823 * C49980 * C49854 + C50425 * ce) + C50436 +
                   C49823 * C50425 * ce)) /
            C49733 -
        ((C50370 + C50425 * C50095) * ce) / C49733;
    const double C968 = C49980 * C50270 + C50370 * C50095;
    const double C3499 =
        2 * C49823 * C50370 + C49823 * (C50370 + C50425 * C50095);
    const double C50450 = C50446 + C50447;
    const double C2328 = C50692 * C265;
    const double C19880 = C50687 * C265;
    const double C24837 = C50692 * C265;
    const double C5402 = C50692 * C387;
    const double C22178 = C50687 * C387;
    const double C27972 = C50692 * C387;
    const double C19872 = C50687 * C511;
    const double C19876 = C50687 * C608;
    const double C20340 = C50687 * C719;
    const double C20346 = C50687 * C730;
    const double C22174 = C50687 * C852;
    const double C22788 = C50687 * C1062;
    const double C49858 = C49856 + C49843;
    const double C49870 = C49867 / C49831;
    const double C49871 = -2 * C49863;
    const double C49868 = ae * C49863;
    const double C50434 = C49980 * C49863;
    const double C50453 = C49823 * C49863;
    const double C603 = (-2 * C49980 * C49845) / C49733 -
                        (C49980 * (C49863 * C49989 + C49845)) / C49733;
    const double C733 = -(C49823 * (C49863 * C49989 + C49845) +
                          (C50278 + C49950 * C49989) * ce) /
                        C49733;
    const double C1065 = (-2 * (C49823 * C49845 + C50278 * ce)) / C49733 -
                         (C49823 * (C49823 * (C49823 * C49863 + C49950 * ce) +
                                    C49845 + C49823 * C49950 * ce)) /
                             C49733 -
                         ((C50278 + C49950 * C50095) * ce) / C49733;
    const double C2694 =
        (-3 * (C49863 * C49989 + C49845)) / C49733 +
        C49980 * ((-2 * C49980 * C49863) / C49733 -
                  (C49980 * (C49895 * C49989 + C49863)) / C49733);
    const double C50392 = C50391 + C49843;
    const double C50483 = C49823 * C50479;
    const double C50522 = -2 * C50479;
    const double C50508 = C50504 + C50505;
    const double C49955 = C49941 + C49953;
    const double C49965 = 2 * C49960;
    const double C49963 = C49960 * ae;
    const double C50409 = C49960 * C49989;
    const double C50418 = C49980 * C49960;
    const double C50456 = C49960 * C50095;
    const double C50492 = C49823 * C49960;
    const double C50491 = C49960 * ce;
    const double C49968 = C49966 + C49959;
    const double C50428 = C49941 + C50426;
    const double C50484 = C50482 * C50095;
    const double C50535 = 2 * C50482;
    const double C50556 = C49823 * C50482;
    const double C50555 = C50482 * ce;
    const double C50510 = C49941 + C50507;
    const double C50583 = 2 * C50574;
    const double C50580 = C50574 * ce;
    const double C50579 = C50572 + C50573;
    const double C49956 = C49954 + C49949;
    const double C50063 = C49943 + C50062;
    const double C50080 = 2 * C50078;
    const double C50132 = C50078 * ce;
    const double C50130 = C49823 * C50078;
    const double C3503 =
        (2 * C49823 * C50039 + C49823 * (C50039 + C50078 * C50095)) / C49692;
    const double C50100 = C49943 + C50098;
    const double C50165 = C50161 / C49831;
    const double C50166 = 2 * C50159;
    const double C50163 = C50159 * ce;
    const double C49918 = C49915 + C49876;
    const double C50022 = C50021 + C50015;
    const double C50197 = C49962 + C50196;
    const double C50221 = C50216 * C50095;
    const double C50248 = C49962 + C50242;
    const double C975 = -(C49823 * (C49823 * C49980 * C49863 + C50368 * ce) +
                          C49980 * C49845 + C49823 * C50368 * ce) /
                        C49733;
    const double C967 = C49980 * C50278 + C50368 * C50095;
    const double C126 = 3 * (C50270 + C49940 * C49849) +
                        C49820 * (2 * C50278 + C49820 * C50280);
    const double C253 = C49980 * (2 * C50278 + C49820 * C50280);
    const double C379 = C49823 * (2 * C50278 + C49820 * C50280);
    const double C508 = C50270 + C49940 * C49849 + C50280 * C49989;
    const double C713 = C49823 * C49980 * C50280;
    const double C849 = C50270 + C49940 * C49849 + C50280 * C50095;
    const double C2688 = 3 * (C50270 + C49940 * C49989) +
                         C49980 * (2 * C50370 + C49980 * C50407);
    const double C3003 = C49823 * (2 * C50370 + C49980 * C50407);
    const double C3210 = C50270 + C49940 * C49989 + C50407 * C50095;
    const double C6008 = 3 * (C50270 + C49940 * C50095) +
                         C49823 * (2 * C50448 + C49823 * C50451);
    const double C20588 = C50687 * C972;
    const double C49885 = C49820 * C49882;
    const double C49900 = -3 * C49882;
    const double C49894 = ae * C49882;
    const double C50461 = C49823 * C49882;
    const double C50519 = C49980 * C49882;
    const double C49911 = C49906 / C49733;
    const double C49909 = C49902 / C49733;
    const double C50389 = C50388 + C49863;
    const double C50474 = C49823 * C50470;
    const double C50526 = C49980 * C50525;
    const double C50546 = C49823 * C50525;
    const double C49969 = C49820 * C49967;
    const double C50017 = C49967 * ae;
    const double C50413 = C49967 * C49989;
    const double C50464 = C49967 * C50095;
    const double C50520 = C49980 * C49967;
    const double C50421 = C49960 + C50419;
    const double C50475 = C50473 * C50095;
    const double C50496 = C49960 + C50493;
    const double C50538 = C49980 * C50537;
    const double C50549 = C50537 * C50095;
    const double C50563 = C50482 + C50560;
    const double C50585 = C49823 * C50582;
    const double C50082 = C49980 * C50081;
    const double C50194 = 3 * C50081;
    const double C50206 = C50081 * ce;
    const double C50204 = C49823 * C50081;
    const double C50138 = C50078 + C50136;
    const double C50219 = C50215 / C49831;
    const double C50220 = 2 * C50212;
    const double C50217 = C50212 * ce;
    const double C50170 = C49823 * C50167;
    const double C50241 = 3 * C50167;
    const double C50237 = C50167 * ce;
    const double C50250 = C50244 / C49733;
    const double C2332 = C50692 * C273;
    const double C19882 = C50687 * C273;
    const double C24841 = C50692 * C273;
    const double C5406 = C50692 * C399;
    const double C22180 = C50687 * C399;
    const double C27976 = C50692 * C399;
    const double C19874 = C50687 * C521;
    const double C20342 = C50687 * C735;
    const double C22176 = C50687 * C862;
    const double C49857 = C49855 / C49733;
    const double C2697 =
        3 * ((-(C49853 * C49989) / C49733) / C49692 - C49842 / C49831) +
        C49980 * ((-2 * C49980 * C49853) / C49831 +
                  C49980 * ((-(C49874 * C49989) / C49733) / C49692 - C49864));
    const double C3511 =
        2 * ((-(C49823 * C50087) / C49733) / C49692 - (C50039 * ce) / C49831) -
        ((C50039 + C50078 * std::pow(C49823, 2)) * ce) / C49831 +
        C49823 *
            ((-(C49823 * C50078 * ce) / C49733) / C49692 - C50087 / C49831 +
             C49823 * ((-(C49823 * C49980 * C49874) / C49733) / C49692 -
                       (C50078 * ce) / C49831));
    const double C50096 = C50093 / C49733;
    const double C19878 = C50687 * C612;
    const double C20348 = C50687 * C742;
    const double C20590 = C50687 * C980;
    const double C22790 = C50687 * C1070;
    const double C49881 = C49878 / C49733;
    const double C50053 = C50052 / C49733;
    const double C50134 = C49823 * C50131;
    const double C50183 = -2 * C50131;
    const double C50213 = C50131 / C49831;
    const double C50164 = C50160 / C49733;
    const double C49917 = C49914 / C49733;
    const double C50186 = C50184 / C49733;
    const double C50218 = C49823 * C50214;
    const double C50245 = C50239 / C49733;
    const double C50972 = C50715 / C49762;
    const double C50971 = C50715 * C50710;
    const double C50968 = C50715 / C49733;
    const double C50722 = C50719 * C50710;
    const double C116 = C50719 / C50974;
    const double C1173 = C50719 / C49741;
    const double C250 = (C50714 * std::pow(C50710, 2)) / C49758 + C50970;
    const double C51004 = C50969 / C49733;
    const double C251 = (-2 * C50718 * C50969) / C49733;
    const double C50981 = C50759 / C49762;
    const double C50980 = C50759 * C50758;
    const double C50975 = C50759 / C49733;
    const double C50765 = C50762 * C50758;
    const double C595 = C50762 / C50974;
    const double C1274 = C50762 / C49741;
    const double C51007 = C50979 / C49733;
    const double C502 = (-2 * C50718 * C50979) / C49733;
    const double C501 = (C50746 * std::pow(C50758, 2)) / C49758 + C50978;
    const double C50995 = C50882 / C49701;
    const double C50994 = C50882 * C50881;
    const double C50991 = C50882 / C49692;
    const double C2174 = (2 * C50691 * C50882) / C49692;
    const double C50996 = C50885 * C50881;
    const double C19766 = C50885 / C50967;
    const double C24684 = C50885 / C49697;
    const double C51013 = C50993 / C49692;
    const double C2173 = (C50835 * std::pow(C50880, 2)) / C49696 + C50988;
    const double C50999 = C50908 / C49701;
    const double C50998 = C50908 * C50907;
    const double C50992 = C50908 / C49692;
    const double C5106 = (2 * C50691 * C50908) / C49692;
    const double C51000 = C50911 * C50907;
    const double C39166 = C50911 / C50967;
    const double C44479 = C50911 / C49697;
    const double C51016 = C50997 / C49692;
    const double C5105 = (C50847 * std::pow(C50906, 2)) / C49696 + C50990;
    const double C49711 = C49700 - C49708;
    const double C49710 = C49690 * C49706;
    const double C2177 = (-C49706 / C49692) / C49697 - (0 * be) / C49692;
    const double C19767 = -C49706 / C49692;
    const double C24855 = C50963 * C273;
    const double C24851 = C50963 * C265;
    const double C24847 = C50963 * C521;
    const double C24843 = C50963 * C511;
    const double C24839 = C50963 * C274;
    const double C24835 = C50963 * C266;
    const double C25207 = C50963 * C608;
    const double C25203 = C50963 * C612;
    const double C25510 = C50963 * C742;
    const double C25506 = C50963 * C730;
    const double C25500 = C50963 * C735;
    const double C25496 = C50963 * C719;
    const double C25835 = C50963 * C980;
    const double C25831 = C50963 * C972;
    const double C27984 = C50963 * C399;
    const double C27980 = C50963 * C387;
    const double C27978 = C50963 * C400;
    const double C27974 = C50963 * C388;
    const double C28730 = C50963 * C862;
    const double C28726 = C50963 * C852;
    const double C29108 = C50963 * C1070;
    const double C29104 = C50963 * C1062;
    const double C51001 = C50962 / C49696;
    const double C17142 = C16979 * C273;
    const double C17136 = C16979 * C265;
    const double C34133 = C16979 * C399;
    const double C34127 = C16979 * C387;
    const double C51003 = C50966 / C49692;
    const double C2171 = -C51002;
    const double C17152 = C16978 * C273;
    const double C17146 = C16978 * C265;
    const double C17140 = C16978 * C274;
    const double C17134 = C16978 * C266;
    const double C17490 = C16978 * C511;
    const double C17484 = C16978 * C521;
    const double C17620 = C16978 * C612;
    const double C17614 = C16978 * C608;
    const double C17796 = C16978 * C742;
    const double C17790 = C16978 * C730;
    const double C17788 = C16978 * C735;
    const double C17782 = C16978 * C719;
    const double C18112 = C16978 * C980;
    const double C18106 = C16978 * C972;
    const double C34143 = C16978 * C399;
    const double C34137 = C16978 * C387;
    const double C34135 = C16978 * C400;
    const double C34129 = C16978 * C388;
    const double C34721 = C16978 * C862;
    const double C34715 = C16978 * C852;
    const double C35005 = C16978 * C1070;
    const double C34999 = C16978 * C1062;
    const double C49760 = C49732 * C49746;
    const double C845 =
        ((-C49742 / C49733) / C49741 -
         ((C50776 - (C49732 * C49746) / C49733) * de) / C49733) /
            C49741 -
        ((C49732 * ((-C49746 / C49733) / C49741 - (0 * de) / C49733) + C50788) *
         de) /
            C49733;
    const double C846 =
        ((-C49746 / C49733) / C49741 - (0 * de) / C49733) / C49741 -
        (0 * de) / C49733;
    const double C1512 = (-C49746 / C49733) / C49741 - (0 * de) / C49733;
    const double C49771 = C49765 - C49766;
    const double C51011 = C50985 / C49758;
    const double C50987 = C50791 / C49733;
    const double C1509 = -C51010;
    const double C132 =
        (2 * (C49820 * C49995 + C50270 * ae) +
         C49820 * (C49995 + C49820 * C49999 + C49820 * C49940 * ae) +
         (C50270 + C49940 * C49849) * ae) /
        C49692;
    const double C264 =
        (C49980 * (C49995 + C49820 * C49999 + C50278 * ae)) / C49692;
    const double C386 =
        (C49823 * (C49995 + C49820 * C49999 + C50278 * ae)) / C49692;
    const double C512 =
        (C49820 * C49995 + C50270 * ae + C49999 * C49989) / C49692;
    const double C720 = (C49823 * C49980 * C49999) / C49692;
    const double C853 =
        (C49820 * C49995 + C50270 * ae + C49999 * C50095) / C49692;
    const double C6013 =
        (-3 * (C49823 * C50450 + C49835 + C50448 * ce)) / C49733 +
        C49823 * ((-2 * C50450) / C49733 -
                  (C49823 * (C49823 * (C49823 * C49854 + C49941 * ce) + C49843 +
                             C49823 * C49941 * ce)) /
                      C49733 -
                  (C50451 * ce) / C49733) -
        ((2 * C50448 + C49823 * C50451) * ce) / C49733;
    const double C137 =
        (-3 * (C49843 * C49849 + C49835)) / C49733 +
        C49820 * ((-2 * C49845) / C49733 - (C49820 * C49858) / C49733);
    const double C259 =
        C49980 * ((-2 * C49845) / C49733 - (C49820 * C49858) / C49733);
    const double C389 =
        C49823 * ((-2 * C49845) / C49733 - (C49820 * C49858) / C49733) -
        ((2 * C50278 + C49820 * C50280) * ce) / C49733;
    const double C517 = -(C49858 * C49989 + C49843 * C49849 + C49835) / C49733;
    const double C602 = (-2 * C49980 * C49858) / C49733 -
                        (C49980 * (C49882 * C49989 + C49858)) / C49733;
    const double C725 =
        -(C49823 * C49980 * C49858 + C49980 * C50280 * ce) / C49733;
    const double C858 = -(C49823 * (C49823 * C49858 + C50280 * ce) +
                          C49843 * C49849 + C49835 + C49823 * C50280 * ce) /
                        C49733;
    const double C49875 = C49871 / C49733;
    const double C49873 = C49868 / C49733;
    const double C50457 = C50453 + C50454;
    const double C2835 =
        4 * ((-2 * C49980 * C49843) / C49733 - (C49980 * C50392) / C49733) +
        C49980 * ((-3 * C50392) / C49733 +
                  C49980 * ((-2 * C49980 * C49854) / C49733 -
                            (C49980 * (C49876 * C49989 + C49854)) / C49733));
    const double C3009 =
        C49823 *
            ((-2 * C49980 * C49843) / C49733 - (C49980 * C50392) / C49733) -
        ((2 * C50370 + C49980 * (C49940 + C49941 * C49989)) * ce) / C49733;
    const double C3014 =
        C49823 * ((-3 * C50392) / C49733 +
                  C49980 * ((-2 * C49980 * C49854) / C49733 -
                            (C49980 * (C49876 * C49989 + C49854)) / C49733)) -
        ((3 * (C49940 + C49941 * C49989) +
          C49980 *
              (2 * C49980 * C49941 + C49980 * (C49941 + C49951 * C49989))) *
         ce) /
            C49733;
    const double C3215 = -(C49823 * (C49823 * C50392 + C50407 * ce) +
                           C49843 * C49989 + C49835 + C49823 * C50407 * ce) /
                         C49733;
    const double C50485 = C50483 + C50480;
    const double C50524 = C50522 / C49733;
    const double C50512 = C49823 * C50508;
    const double C50571 = -2 * C50508;
    const double C50008 = C49955 * ae;
    const double C50283 = C49820 * C49955;
    const double C50288 = 3 * C49955;
    const double C50366 = C49980 * C49955;
    const double C50463 = C49823 * C49955;
    const double C50462 = C49955 * ce;
    const double C732 = -(C49823 * (C49882 * C49989 + C49858) +
                          (C50280 + C49955 * C49989) * ce) /
                        C49733;
    const double C1064 = (-2 * (C49823 * C49858 + C50280 * ce)) / C49733 -
                         (C49823 * (C49823 * (C49823 * C49882 + C49955 * ce) +
                                    C49858 + C49823 * C49955 * ce)) /
                             C49733 -
                         ((C50280 + C49955 * C50095) * ce) / C49733;
    const double C598 =
        2 * C49980 * C50280 + C49980 * (C50280 + C49955 * C49989);
    const double C716 = C49823 * (C50280 + C49955 * C49989);
    const double C1056 =
        2 * C49823 * C50280 + C49823 * (C50280 + C49955 * C50095);
    const double C50410 = C49950 + C50409;
    const double C50420 = 2 * C50418;
    const double C50472 = C49823 * C50418;
    const double C50471 = C50418 * ce;
    const double C3504 =
        (-2 * (C49823 * C50434 + C50368 * ce)) / C49733 -
        (C49823 * (C49823 * (C49823 * C49980 * C49895 + C50418 * ce) + C50434 +
                   C49823 * C50418 * ce)) /
            C49733 -
        ((C50368 + C50418 * C50095) * ce) / C49733;
    const double C3498 =
        2 * C49823 * C50368 + C49823 * (C50368 + C50418 * C50095);
    const double C50458 = C49950 + C50456;
    const double C50497 = 2 * C50492;
    const double C50495 = C50492 * ce;
    const double C50494 = C50490 + C50491;
    const double C49970 = C49820 * C49968;
    const double C50013 = 2 * C49968;
    const double C50065 = C49968 * C49989;
    const double C50071 = C49980 * C49968;
    const double C50107 = C49968 * C50095;
    const double C50145 = C49968 * ce;
    const double C50143 = C49823 * C49968;
    const double C50429 = C49980 * C50428;
    const double C50534 = 3 * C50428;
    const double C50548 = C49823 * C50428;
    const double C50547 = C50428 * ce;
    const double C3509 =
        (-2 * (C49823 * C50392 + C50407 * ce)) / C49733 -
        (C49823 *
         (C49823 * (C49823 * (C49876 * C49989 + C49854) + C50428 * ce) +
          C50392 + C49823 * C50428 * ce)) /
            C49733 -
        ((C50407 + C50428 * C50095) * ce) / C49733;
    const double C3501 =
        2 * C49823 * C50407 + C49823 * (C50407 + C50428 * C50095);
    const double C50486 = C50425 + C50484;
    const double C50561 = 2 * C50556;
    const double C50559 = C50556 * ce;
    const double C50562 = C50558 + C50555;
    const double C50513 = C49823 * C50510;
    const double C50577 = 3 * C50510;
    const double C50575 = C50510 * ce;
    const double C50584 = C49823 * C50579;
    const double C50001 = C49820 * C49956;
    const double C50006 = 2 * C49956;
    const double C50037 = C49980 * C49956;
    const double C50106 = C49956 * ce;
    const double C50104 = C49823 * C49956;
    const double C607 =
        (2 * C49980 * C49999 + C49980 * (C49999 + C49956 * C49989)) / C49692;
    const double C729 = (C49823 * (C49999 + C49956 * C49989)) / C49692;
    const double C1061 =
        (2 * C49823 * C49999 + C49823 * (C49999 + C49956 * C50095)) / C49692;
    const double C2691 = (3 * (C49995 + C49943 * C49989) +
                          C49980 * (2 * C50039 + C49980 * C50063)) /
                         C49692;
    const double C3007 = (C49823 * (2 * C50039 + C49980 * C50063)) / C49692;
    const double C3213 = (C49995 + C49943 * C49989 + C50063 * C50095) / C49692;
    const double C3507 =
        (2 * C49823 * C50063 + C49823 * (C50063 + C50081 * C50095)) / C49692;
    const double C50135 = C50132 / C49831;
    const double C22620 = C50687 * C3503;
    const double C28960 = C50963 * C3503;
    const double C6011 = (3 * (C49995 + C49943 * C50095) +
                          C49823 * (2 * C50092 + C49823 * C50100)) /
                         C49692;
    const double C50168 = C50163 / C49733;
    const double C49921 = C49820 * C49918;
    const double C2695 =
        (-3 * (C49882 * C49989 + C49858)) / C49733 +
        C49980 * ((-2 * C49980 * C49882) / C49733 -
                  (C49980 * (C49918 * C49989 + C49882)) / C49733);
    const double C50023 = C49820 * C50022;
    const double C50072 = C50022 * C49989;
    const double C50123 = C49980 * C50022;
    const double C50146 = C50022 * C50095;
    const double C50198 = C49980 * C50197;
    const double C50207 = C50197 * C50095;
    const double C50224 = C50133 + C50221;
    const double C50252 = C49823 * C50248;
    const double C49887 = C49885 / C49733;
    const double C49905 = C49900 / C49733;
    const double C49901 = C49894 / C49831;
    const double C49913 = -C49909;
    const double C2834 =
        4 * ((-2 * C49980 * C49863) / C49733 - (C49980 * C50389) / C49733) +
        C49980 * ((-3 * C50389) / C49733 +
                  C49980 * ((-2 * C49980 * C49895) / C49733 -
                            (C49980 * (C49820 * C49912 * C49989 + C49895)) /
                                C49733));
    const double C3010 =
        C49823 *
            ((-2 * C49980 * C49863) / C49733 - (C49980 * C50389) / C49733) -
        ((2 * C50368 + C49980 * (C49950 + C49960 * C49989)) * ce) / C49733;
    const double C3013 =
        C49823 * ((-3 * C50389) / C49733 +
                  C49980 * ((-2 * C49980 * C49895) / C49733 -
                            (C49980 * (C49820 * C49912 * C49989 + C49895)) /
                                C49733)) -
        ((3 * (C49950 + C49960 * C49989) +
          C49980 *
              (2 * C49980 * C49960 + C49980 * (C49960 + C50016 * C49989))) *
         ce) /
            C49733;
    const double C50527 = C50526 / C49733;
    const double C49971 = C49965 + C49969;
    const double C50414 = C49955 + C50413;
    const double C50466 = C49955 + C50464;
    const double C50422 = C49980 * C50421;
    const double C50477 = C50418 + C50475;
    const double C50499 = C49823 * C50496;
    const double C50539 = C50535 + C50538;
    const double C50551 = C50428 + C50549;
    const double C50565 = C49823 * C50563;
    const double C50587 = C50583 + C50585;
    const double C50083 = C50080 + C50082;
    const double C50208 = C50206 / C49831;
    const double C6197 = (3 * (C50039 + C50078 * C50095) +
                          C49823 * (2 * C50130 + C49823 * C50138)) /
                         C49692;
    const double C50222 = C50217 / C49733;
    const double C50173 = C50166 + C50170;
    const double C50243 = C50237 / C49831;
    const double C50253 = -C50250;
    const double C49859 = -C49857;
    const double C20138 = C50687 * C2697;
    const double C25337 = C50963 * C2697;
    const double C22622 = C50687 * C3511;
    const double C28964 = C50963 * C3511;
    const double C50099 = -C50096;
    const double C49884 = -C49881;
    const double C50054 = -C50053;
    const double C50137 = C50134 / C49733;
    const double C50185 = C50183 / C49831;
    const double C50169 = -C50164;
    const double C49920 = -C49917;
    const double C50187 = -C50186;
    const double C50223 = C50218 / C49733;
    const double C50251 = -C50245;
    const double C51005 = C50971 / C49758;
    const double C50973 = C50722 / C49733;
    const double C1275 = -C51004;
    const double C51008 = C50980 / C49758;
    const double C50982 = C50765 / C49733;
    const double C1169 = -C51007;
    const double C51014 = C50994 / C49696;
    const double C51015 = C50996 / C49692;
    const double C16981 = -C51013;
    const double C51017 = C50998 / C49696;
    const double C51018 = C51000 / C49692;
    const double C33829 = -C51016;
    const double C24868 = C49711 * C253;
    const double C24860 = C49711 * C508;
    const double C24856 = C49711 * C260;
    const double C24852 = C49711 * C254;
    const double C24848 = C49711 * C516;
    const double C24844 = C49711 * C507;
    const double C24840 = C49711 * C261;
    const double C24836 = C49711 * C255;
    const double C25204 = C49711 * C599;
    const double C25200 = C49711 * C603;
    const double C25338 = C49711 * C2694;
    const double C25507 = C49711 * C733;
    const double C25503 = C49711 * C717;
    const double C25497 = C49711 * C724;
    const double C25493 = C49711 * C712;
    const double C25836 = C49711 * C975;
    const double C25832 = C49711 * C967;
    const double C26440 = C49711 * C713;
    const double C27987 = C49711 * C379;
    const double C27985 = C49711 * C390;
    const double C27981 = C49711 * C380;
    const double C27975 = C49711 * C391;
    const double C27971 = C49711 * C381;
    const double C28733 = C49711 * C849;
    const double C28731 = C49711 * C857;
    const double C28727 = C49711 * C848;
    const double C29105 = C49711 * C1065;
    const double C29101 = C49711 * C1057;
    const double C120 =
        (C49711 / C49697 - (0 * be) / C49692) / C49697 + (0 * ae) / C49692;
    const double C7915 = C49711 / C49697 - (0 * be) / C49692;
    const double C16985 = C49711 / C49697 + (0 * ae) / C49692;
    const double C49713 = C49710 / C49692;
    const double C2359 = C2177 * C253;
    const double C2351 = C2177 * C508;
    const double C2347 = C2177 * C260;
    const double C2343 = C2177 * C254;
    const double C2339 = C2177 * C516;
    const double C2335 = C2177 * C507;
    const double C2331 = C2177 * C261;
    const double C2327 = C2177 * C255;
    const double C2707 = C2177 * C599;
    const double C2703 = C2177 * C603;
    const double C2849 = C2177 * C2694;
    const double C3034 = C2177 * C733;
    const double C3030 = C2177 * C717;
    const double C3024 = C2177 * C724;
    const double C3020 = C2177 * C712;
    const double C3383 = C2177 * C975;
    const double C3379 = C2177 * C967;
    const double C4007 = C2177 * C713;
    const double C5433 = C2177 * C379;
    const double C5427 = C2177 * C849;
    const double C5423 = C2177 * C390;
    const double C5419 = C2177 * C380;
    const double C5413 = C2177 * C857;
    const double C5409 = C2177 * C848;
    const double C5405 = C2177 * C391;
    const double C5401 = C2177 * C381;
    const double C6029 = C2177 * C1065;
    const double C6025 = C2177 * C1057;
    const double C19895 = C19767 * C508;
    const double C19893 = C19767 * C260;
    const double C19891 = C19767 * C254;
    const double C19889 = C19767 * C603;
    const double C19887 = C19767 * C599;
    const double C19885 = C19767 * C516;
    const double C19883 = C19767 * C507;
    const double C19881 = C19767 * C261;
    const double C19879 = C19767 * C255;
    const double C19877 = C19767 * C604;
    const double C19875 = C19767 * C600;
    const double C19873 = C19767 * C515;
    const double C19871 = C19767 * C506;
    const double C19869 = C19767 * C262;
    const double C19867 = C19767 * C256;
    const double C20143 = C19767 * C2694;
    const double C20139 = C19767 * C2688;
    const double C20137 = C19767 * C2693;
    const double C20351 = C19767 * C3003;
    const double C20347 = C19767 * C734;
    const double C20345 = C19767 * C718;
    const double C20341 = C19767 * C723;
    const double C20339 = C19767 * C711;
    const double C20595 = C19767 * C3210;
    const double C20589 = C19767 * C976;
    const double C20587 = C19767 * C968;
    const double C21025 = C19767 * C733;
    const double C21021 = C19767 * C717;
    const double C21019 = C19767 * C724;
    const double C21015 = C19767 * C712;
    const double C22003 = C19767 * C713;
    const double C22001 = C19767 * C975;
    const double C21999 = C19767 * C967;
    const double C22189 = C19767 * C849;
    const double C22187 = C19767 * C390;
    const double C22185 = C19767 * C380;
    const double C22183 = C19767 * C857;
    const double C22181 = C19767 * C848;
    const double C22179 = C19767 * C391;
    const double C22177 = C19767 * C381;
    const double C22175 = C19767 * C856;
    const double C22173 = C19767 * C847;
    const double C22171 = C19767 * C392;
    const double C22169 = C19767 * C382;
    const double C22621 = C19767 * C3505;
    const double C22619 = C19767 * C3499;
    const double C22793 = C19767 * C1065;
    const double C22791 = C19767 * C1057;
    const double C22789 = C19767 * C1066;
    const double C22787 = C19767 * C1058;
    const double C23075 = C19767 * C6008;
    const double C51019 = C50961 - C51001;
    const double C51020 = C50965 - C51003;
    const double C2346 = C2171 * C273;
    const double C2342 = C2171 * C265;
    const double C2338 = C2171 * C521;
    const double C2334 = C2171 * C511;
    const double C2330 = C2171 * C274;
    const double C2326 = C2171 * C266;
    const double C2710 = C2171 * C608;
    const double C2706 = C2171 * C612;
    const double C2848 = C2171 * C2697;
    const double C3037 = C2171 * C742;
    const double C3033 = C2171 * C730;
    const double C3027 = C2171 * C735;
    const double C3023 = C2171 * C719;
    const double C3382 = C2171 * C980;
    const double C3378 = C2171 * C972;
    const double C5422 = C2171 * C399;
    const double C5418 = C2171 * C387;
    const double C5416 = C2171 * C862;
    const double C5412 = C2171 * C852;
    const double C5408 = C2171 * C400;
    const double C5404 = C2171 * C388;
    const double C6028 = C2171 * C1070;
    const double C6024 = C2171 * C1062;
    const double C6212 = C2171 * C3511;
    const double C6208 = C2171 * C3503;
    const double C49764 = C49760 / C49733;
    const double C1054 =
        (C49771 / C49741 - (0 * de) / C49733) / C49741 - (0 * de) / C49733;
    const double C1746 = C49771 / C49741 - (0 * de) / C49733;
    const double C51023 = C50983 - C51011;
    const double C51012 = C50986 - C50987;
    const double C844 =
        ((-(0 * de) / C49733) / C49741 -
         ((0 - (C49732 * C49742) / C49733) * de) / C49733) /
            C49741 -
        ((C49732 * ((-C49742 / C49733) / C49741 -
                    ((C50776 - (C49732 * C49746) / C49733) * de) / C49733) +
          C1509) *
         de) /
            C49733 +
        (-C49746 / C49733) / C49741 - (0 * de) / C49733;
    const double C2358 = C2171 * C264;
    const double C2344 = C50692 * C264;
    const double C8068 = C7910 * C264;
    const double C17158 = C16978 * C264;
    const double C17148 = C16979 * C264;
    const double C17138 = C16980 * C264;
    const double C19892 = C50687 * C264;
    const double C24867 = C50963 * C264;
    const double C24853 = C50692 * C264;
    const double C5436 = C2171 * C386;
    const double C5420 = C50692 * C386;
    const double C11020 = C7910 * C386;
    const double C22186 = C50687 * C386;
    const double C27990 = C50963 * C386;
    const double C27982 = C50692 * C386;
    const double C34153 = C16978 * C386;
    const double C34139 = C16979 * C386;
    const double C34125 = C16980 * C386;
    const double C2350 = C2171 * C512;
    const double C2336 = C50692 * C512;
    const double C17492 = C16978 * C512;
    const double C17488 = C16979 * C512;
    const double C19884 = C50687 * C512;
    const double C24859 = C50963 * C512;
    const double C24845 = C50692 * C512;
    const double C3021 = C50692 * C720;
    const double C4006 = C2171 * C720;
    const double C17780 = C16979 * C720;
    const double C18708 = C16978 * C720;
    const double C21016 = C50687 * C720;
    const double C25494 = C50692 * C720;
    const double C26439 = C50963 * C720;
    const double C5426 = C2171 * C853;
    const double C5410 = C50692 * C853;
    const double C22182 = C50687 * C853;
    const double C28736 = C50963 * C853;
    const double C28728 = C50692 * C853;
    const double C34731 = C16978 * C853;
    const double C34717 = C16979 * C853;
    const double C23077 = C19767 * C6013;
    const double C2363 = C2177 * C259;
    const double C24872 = C49711 * C259;
    const double C5437 = C2177 * C389;
    const double C27991 = C49711 * C389;
    const double C2355 = C2177 * C517;
    const double C19897 = C19767 * C517;
    const double C24864 = C49711 * C517;
    const double C2717 = C2177 * C602;
    const double C19901 = C19767 * C602;
    const double C25214 = C49711 * C602;
    const double C4011 = C2177 * C725;
    const double C22005 = C19767 * C725;
    const double C26444 = C49711 * C725;
    const double C5431 = C2177 * C858;
    const double C22191 = C19767 * C858;
    const double C28737 = C49711 * C858;
    const double C49877 = -C49873;
    const double C20229 = C19767 * C2835;
    const double C20353 = C19767 * C3009;
    const double C20359 = C19767 * C3014;
    const double C20597 = C19767 * C3215;
    const double C50514 = C50512 + C49843;
    const double C50578 = C50571 / C49733;
    const double C50284 = C50282 + C50283;
    const double C974 = -(C49823 * (C49823 * C49980 * C49882 + C50366 * ce) +
                          C49980 * C49858 + C49823 * C50366 * ce) /
                        C49733;
    const double C6824 =
        (-2 * (C49823 * C50519 + C50366 * ce)) / C49733 -
        (C49823 * (C49823 * (C49823 * C49980 * C49918 + C50520 * ce) + C50519 +
                   C49823 * C50520 * ce)) /
            C49733 -
        ((C50366 + C50520 * C50095) * ce) / C49733;
    const double C966 = C49980 * C50280 + C50366 * C50095;
    const double C6822 =
        2 * C49823 * C50366 + C49823 * (C50366 + C50520 * C50095);
    const double C50465 = C50461 + C50462;
    const double C4019 = C2177 * C732;
    const double C26452 = C49711 * C732;
    const double C31301 = C19767 * C732;
    const double C6037 = C2177 * C1064;
    const double C39366 = C19767 * C1064;
    const double C45329 = C49711 * C1064;
    const double C2713 = C2177 * C598;
    const double C19899 = C19767 * C598;
    const double C25210 = C49711 * C598;
    const double C4015 = C2177 * C716;
    const double C26448 = C49711 * C716;
    const double C31299 = C19767 * C716;
    const double C6033 = C2177 * C1056;
    const double C39364 = C19767 * C1056;
    const double C45325 = C49711 * C1056;
    const double C3216 = -(C49823 * (C49823 * C50389 + C50410 * ce) +
                           C49863 * C49989 + C49845 + C49823 * C50410 * ce) /
                         C49733;
    const double C3508 =
        (-2 * (C49823 * C50389 + C50410 * ce)) / C49733 -
        (C49823 * (C49823 * (C49823 * (C49820 * C49912 * C49989 + C49895) +
                             C50421 * ce) +
                   C50389 + C49823 * C50421 * ce)) /
            C49733 -
        ((C50410 + C50421 * C50095) * ce) / C49733;
    const double C2689 = 3 * (C50278 + C49950 * C49989) +
                         C49980 * (2 * C50368 + C49980 * C50410);
    const double C3004 = C49823 * (2 * C50368 + C49980 * C50410);
    const double C3211 = C50278 + C49950 * C49989 + C50410 * C50095;
    const double C3500 =
        2 * C49823 * C50410 + C49823 * (C50410 + C50421 * C50095);
    const double C50476 = C50474 + C50471;
    const double C6209 = C2177 * C3504;
    const double C22797 = C19767 * C3504;
    const double C28965 = C49711 * C3504;
    const double C6205 = C2177 * C3498;
    const double C22795 = C19767 * C3498;
    const double C28961 = C49711 * C3498;
    const double C6014 =
        (-3 * (C49823 * C50457 + C49845 + C50455 * ce)) / C49733 +
        C49823 * ((-2 * C50457) / C49733 -
                  (C49823 * (C49823 * (C49823 * C49895 + C49960 * ce) + C49863 +
                             C49823 * C49960 * ce)) /
                      C49733 -
                  (C50458 * ce) / C49733) -
        ((2 * C50455 + C49823 * C50458) * ce) / C49733;
    const double C6009 = 3 * (C50278 + C49950 * C50095) +
                         C49823 * (2 * C50455 + C49823 * C50458);
    const double C50498 = C49823 * C50494;
    const double C49972 = C49952 + C49970;
    const double C50066 = C49956 + C50065;
    const double C50073 = 2 * C50071;
    const double C50122 = C50071 * ce;
    const double C50120 = C49823 * C50071;
    const double C50109 = C49956 + C50107;
    const double C50148 = C50145 / C49831;
    const double C50149 = 2 * C50143;
    const double C50147 = C50143 * ce;
    const double C50430 = C50427 + C50429;
    const double C50550 = C50546 + C50547;
    const double C22631 = C19767 * C3509;
    const double C22627 = C19767 * C3501;
    const double C6199 =
        (-3 * (C49823 * C50485 + C50436 + C50481 * ce)) / C49733 +
        C49823 * ((-2 * C50485) / C49733 -
                  (C49823 * (C49823 * (C49823 * C49980 * C49876 + C50482 * ce) +
                             C50479 + C49823 * C50482 * ce)) /
                      C49733 -
                  (C50486 * ce) / C49733) -
        ((2 * C50481 + C49823 * C50486) * ce) / C49733;
    const double C6195 = 3 * (C50370 + C50425 * C50095) +
                         C49823 * (2 * C50481 + C49823 * C50486);
    const double C50564 = C49823 * C50562;
    const double C50515 = C50511 + C50513;
    const double C50581 = C50575 / C49733;
    const double C50586 = C50584 + C49854;
    const double C50003 = C49943 + C50001;
    const double C971 = (C49980 * C49999 + C50037 * C50095) / C49692;
    const double C3502 =
        (2 * C49823 * C50037 + C49823 * (C50037 + C50071 * C50095)) / C49692;
    const double C50108 = C50106 / C49831;
    const double C2712 = C2171 * C607;
    const double C2708 = C50692 * C607;
    const double C17616 = C16979 * C607;
    const double C19888 = C50687 * C607;
    const double C25209 = C50963 * C607;
    const double C25205 = C50692 * C607;
    const double C3031 = C50692 * C729;
    const double C4014 = C2171 * C729;
    const double C17792 = C16979 * C729;
    const double C21022 = C50687 * C729;
    const double C25504 = C50692 * C729;
    const double C26447 = C50963 * C729;
    const double C6036 = C2171 * C1061;
    const double C6026 = C50692 * C1061;
    const double C22792 = C50687 * C1061;
    const double C29102 = C50692 * C1061;
    const double C34997 = C16979 * C1061;
    const double C45328 = C50963 * C1061;
    const double C2844 = C2171 * C2691;
    const double C20140 = C50687 * C2691;
    const double C25333 = C50963 * C2691;
    const double C3039 = C2171 * C3007;
    const double C20352 = C50687 * C3007;
    const double C25512 = C50963 * C3007;
    const double C3386 = C2171 * C3213;
    const double C20596 = C50687 * C3213;
    const double C25839 = C50963 * C3213;
    const double C22628 = C50687 * C3507;
    const double C6328 = C2171 * C6011;
    const double C23076 = C50687 * C6011;
    const double C45586 = C50963 * C6011;
    const double C50171 = -C50168;
    const double C49923 = C49921 / C49733;
    const double C50024 = C49962 + C50023;
    const double C50074 = C49968 + C50072;
    const double C50126 = C50123 * C50095;
    const double C50150 = C49968 + C50146;
    const double C50199 = C50195 + C50198;
    const double C50209 = C50081 + C50207;
    const double C50227 = C49823 * C50224;
    const double C50255 = C50247 + C50252;
    const double C49889 = C49875 - C49887;
    const double C49916 = C49913 / C49692;
    const double C3044 = C2177 * C3010;
    const double C21031 = C19767 * C3010;
    const double C25517 = C49711 * C3010;
    const double C50528 = C50524 - C50527;
    const double C50018 = C49971 * ae;
    const double C50289 = C49820 * C49971;
    const double C50364 = C49980 * C49971;
    const double C3218 =
        -(C49823 * (C49823 * (C49918 * C49989 + C49882) + C50414 * ce) +
          C49882 * C49989 + C49858 + C49823 * C50414 * ce) /
        C49733;
    const double C4002 =
        C49823 * ((-2 * C49980 * C49882) / C49733 -
                  (C49980 * (C49918 * C49989 + C49882)) / C49733) -
        ((2 * C50366 + C49980 * C50414) * ce) / C49733;
    const double C2690 = 3 * (C50280 + C49955 * C49989) +
                         C49980 * (2 * C50366 + C49980 * C50414);
    const double C3212 = C50280 + C49955 * C49989 + C50414 * C50095;
    const double C4000 = C49823 * (2 * C50366 + C49980 * C50414);
    const double C6010 = 3 * (C50280 + C49955 * C50095) +
                         C49823 * (2 * C50463 + C49823 * C50466);
    const double C50423 = C50420 + C50422;
    const double C6194 = 3 * (C50368 + C50418 * C50095) +
                         C49823 * (2 * C50472 + C49823 * C50477);
    const double C50501 = C50497 + C50499;
    const double C50540 = C49980 * C50539;
    const double C22950 = 3 * (C50407 + C50428 * C50095) +
                          C49823 * (2 * C50548 + C49823 * C50551);
    const double C50567 = C50561 + C50565;
    const double C50589 = C49823 * C50587;
    const double C2837 = (4 * (2 * C50039 + C49980 * C50063) +
                          C49980 * (3 * C50063 + C49980 * C50083)) /
                         C49692;
    const double C3012 = (C49823 * (3 * C50063 + C49980 * C50083)) / C49692;
    const double C3371 =
        (2 * C50039 + C49980 * C50063 + C50083 * C50095) / C49692;
    const double C22966 = C50687 * C6197;
    const double C50225 = -C50222;
    const double C6317 = (4 * (2 * C50092 + C49823 * C50100) +
                          C49823 * (3 * C50100 + C49823 * C50173)) /
                         C49692;
    const double C50256 = C50253 / C49692;
    const double C49860 = C49859 / C49692;
    const double C50101 = C50099 / C49692;
    const double C49886 = C49884 / C49692;
    const double C50055 = C50054 / C49692;
    const double C50139 = -C50137;
    const double C50172 = C50169 / C49692;
    const double C49922 = C49920 / C49692;
    const double C50188 = C50187 / C49692;
    const double C50226 = -C50223;
    const double C50254 = C50251 / C49692;
    const double C51021 = C50970 - C51005;
    const double C51006 = C50972 - C50973;
    const double C51022 = C50978 - C51008;
    const double C51009 = C50981 - C50982;
    const double C51024 = C50988 - C51014;
    const double C51025 = C50995 - C51015;
    const double C51026 = C50990 - C51017;
    const double C51027 = C50999 - C51018;
    const double C24885 = C24840 + C24841;
    const double C24883 = C24836 + C24837;
    const double C27997 = C27975 + C27976;
    const double C27995 = C27971 + C27972;
    const double C8085 = C7915 * C259;
    const double C8079 = C7915 * C253;
    const double C8073 = C7915 * C260;
    const double C8067 = C7915 * C254;
    const double C8415 = C7915 * C508;
    const double C8409 = C7915 * C517;
    const double C8553 = C7915 * C602;
    const double C8547 = C7915 * C598;
    const double C8729 = C7915 * C732;
    const double C8723 = C7915 * C716;
    const double C8713 = C7915 * C725;
    const double C8707 = C7915 * C713;
    const double C11041 = C7915 * C389;
    const double C11035 = C7915 * C379;
    const double C11025 = C7915 * C390;
    const double C11019 = C7915 * C380;
    const double C11619 = C7915 * C858;
    const double C11613 = C7915 * C849;
    const double C11895 = C7915 * C1064;
    const double C11889 = C7915 * C1056;
    const double C17155 = C16985 * C259;
    const double C17149 = C16985 * C253;
    const double C17143 = C16985 * C260;
    const double C17137 = C16985 * C254;
    const double C17485 = C16985 * C508;
    const double C17479 = C16985 * C517;
    const double C17623 = C16985 * C602;
    const double C17617 = C16985 * C598;
    const double C17799 = C16985 * C732;
    const double C17793 = C16985 * C716;
    const double C17783 = C16985 * C725;
    const double C17777 = C16985 * C713;
    const double C34146 = C16985 * C389;
    const double C34140 = C16985 * C379;
    const double C34130 = C16985 * C390;
    const double C34124 = C16985 * C380;
    const double C34724 = C16985 * C858;
    const double C34718 = C16985 * C849;
    const double C35000 = C16985 * C1064;
    const double C34994 = C16985 * C1056;
    const double C49715 = C50687 - C49713;
    const double C2376 = C2331 + C2332;
    const double C2374 = C2327 + C2328;
    const double C5451 = C5405 + C5406;
    const double C5449 = C5401 + C5402;
    const double C19910 = C19881 + C19882;
    const double C19909 = C19879 + C19880;
    const double C19908 = C19877 + C19878;
    const double C19907 = C19875 + C19876;
    const double C19906 = C19873 + C19874;
    const double C19905 = C19871 + C19872;
    const double C19904 = C19869 + C19870;
    const double C19903 = C19867 + C19868;
    const double C20147 = C20137 + C20138;
    const double C20365 = C20347 + C20348;
    const double C20364 = C20345 + C20346;
    const double C20362 = C20341 + C20342;
    const double C20361 = C20339 + C20340;
    const double C20608 = C20589 + C20590;
    const double C20607 = C20587 + C20588;
    const double C22198 = C22179 + C22180;
    const double C22197 = C22177 + C22178;
    const double C22196 = C22175 + C22176;
    const double C22195 = C22173 + C22174;
    const double C22194 = C22171 + C22172;
    const double C22193 = C22169 + C22170;
    const double C22634 = C22621 + C22622;
    const double C22633 = C22619 + C22620;
    const double C22800 = C22789 + C22790;
    const double C22799 = C22787 + C22788;
    const double C8088 = C51019 * C264;
    const double C8082 = C51019 * C273;
    const double C8076 = C51019 * C265;
    const double C8070 = C51019 * C274;
    const double C8064 = C51019 * C266;
    const double C8422 = C51019 * C512;
    const double C8420 = C51019 * C511;
    const double C8414 = C51019 * C521;
    const double C8550 = C51019 * C612;
    const double C8544 = C51019 * C608;
    const double C8726 = C51019 * C742;
    const double C8720 = C51019 * C730;
    const double C8718 = C51019 * C735;
    const double C8712 = C51019 * C719;
    const double C9042 = C51019 * C980;
    const double C9036 = C51019 * C972;
    const double C9638 = C51019 * C720;
    const double C11048 = C51019 * C386;
    const double C11038 = C51019 * C399;
    const double C11032 = C51019 * C387;
    const double C11030 = C51019 * C400;
    const double C11024 = C51019 * C388;
    const double C11626 = C51019 * C853;
    const double C11616 = C51019 * C862;
    const double C11610 = C51019 * C852;
    const double C11900 = C51019 * C1070;
    const double C11894 = C51019 * C1062;
    const double C105 = (C51019 * C50682) / C49692 + (C50963 - C51002) / C49697;
    const double C8078 = C51020 * C264;
    const double C8072 = C51020 * C273;
    const double C8066 = C51020 * C265;
    const double C8418 = C51020 * C512;
    const double C8546 = C51020 * C607;
    const double C8722 = C51020 * C729;
    const double C8710 = C51020 * C720;
    const double C11034 = C51020 * C386;
    const double C11028 = C51020 * C399;
    const double C11022 = C51020 * C387;
    const double C11612 = C51020 * C853;
    const double C11892 = C51020 * C1061;
    const double C106 =
        (C51020 * C50682) / C49692 + (2 * C50692 + C51019) / C49697;
    const double C107 = (C50682 * C50692) / C49701 + C51020 / C49697;
    const double C49769 = C50776 - C49764;
    const double C1047 =
        (C50977 - C51010) / C49741 - (C51023 * C50784) / C49733;
    const double C1048 =
        (2 * C50788 + C51023) / C49741 - (C51012 * C50784) / C49733;
    const double C1049 = C51012 / C49741 - C50791 / C49762;
    const double C2382 = C2343 + C2344;
    const double C19915 = C19891 + C19892;
    const double C24891 = C24852 + C24853;
    const double C5458 = C5419 + C5420;
    const double C22201 = C22185 + C22186;
    const double C28000 = C27981 + C27982;
    const double C2378 = C2335 + C2336;
    const double C19911 = C19883 + C19884;
    const double C24887 = C24844 + C24845;
    const double C3046 = C3020 + C3021;
    const double C21033 = C21015 + C21016;
    const double C25519 = C25493 + C25494;
    const double C5453 = C5409 + C5410;
    const double C22199 = C22181 + C22182;
    const double C28750 = C28727 + C28728;
    const double C49880 = C49877 / C49692;
    const double C50516 = C50514 + C50509;
    const double C127 = 4 * (2 * C50278 + C49820 * C50280) +
                        C49820 * (3 * C50280 + C49820 * C50284);
    const double C257 = C49980 * (3 * C50280 + C49820 * C50284);
    const double C383 = C49823 * (3 * C50280 + C49820 * C50284);
    const double C509 = 2 * C50278 + C49820 * C50280 + C50284 * C49989;
    const double C597 =
        2 * C49980 * C50284 + C49980 * (C50284 + C49971 * C49989);
    const double C714 = C49823 * C49980 * C50284;
    const double C715 = C49823 * (C50284 + C49971 * C49989);
    const double C850 = 2 * C50278 + C49820 * C50280 + C50284 * C50095;
    const double C1055 =
        2 * C49823 * C50284 + C49823 * (C50284 + C49971 * C50095);
    const double C6831 = C2177 * C974;
    const double C9045 = C7915 * C974;
    const double C18115 = C16985 * C974;
    const double C22009 = C19767 * C974;
    const double C28745 = C49711 * C974;
    const double C6827 = C2177 * C966;
    const double C9039 = C7915 * C966;
    const double C18109 = C16985 * C966;
    const double C22007 = C19767 * C966;
    const double C28741 = C49711 * C966;
    const double C6016 =
        (-3 * (C49823 * C50465 + C49858 + C50463 * ce)) / C49733 +
        C49823 * ((-2 * C50465) / C49733 -
                  (C49823 * (C49823 * (C49823 * C49918 + C49967 * ce) + C49882 +
                             C49823 * C49967 * ce)) /
                      C49733 -
                  (C50466 * ce) / C49733) -
        ((2 * C50463 + C49823 * C50466) * ce) / C49733;
    const double C3391 = C2177 * C3216;
    const double C22359 = C19767 * C3216;
    const double C25844 = C49711 * C3216;
    const double C2845 = C2177 * C2689;
    const double C20141 = C19767 * C2689;
    const double C25334 = C49711 * C2689;
    const double C3040 = C2177 * C3004;
    const double C21027 = C19767 * C3004;
    const double C25513 = C49711 * C3004;
    const double C3387 = C2177 * C3211;
    const double C22357 = C19767 * C3211;
    const double C25840 = C49711 * C3211;
    const double C6198 =
        (-3 * (C49823 * C50476 + C50434 + C50472 * ce)) / C49733 +
        C49823 * ((-2 * C50476) / C49733 -
                  (C49823 *
                   (C49823 * (C49823 * C49980 * C49820 * C49912 + C50473 * ce) +
                    C50470 + C49823 * C50473 * ce)) /
                      C49733 -
                  (C50477 * ce) / C49733) -
        ((2 * C50472 + C49823 * C50477) * ce) / C49733;
    const double C6329 = C2177 * C6014;
    const double C39732 = C19767 * C6014;
    const double C45587 = C49711 * C6014;
    const double C6325 = C2177 * C6009;
    const double C39730 = C19767 * C6009;
    const double C45583 = C49711 * C6009;
    const double C50500 = C50498 + C49863;
    const double C49973 = C49972 + C49963;
    const double C2692 = (3 * (C49999 + C49956 * C49989) +
                          C49980 * (2 * C50037 + C49980 * C50066)) /
                         C49692;
    const double C3008 = (C49823 * (2 * C50037 + C49980 * C50066)) / C49692;
    const double C3214 = (C49999 + C49956 * C49989 + C50066 * C50095) / C49692;
    const double C50125 = C50122 / C49831;
    const double C6012 = (3 * (C49999 + C49956 * C50095) +
                          C49823 * (2 * C50104 + C49823 * C50109)) /
                         C49692;
    const double C50151 = C50147 / C49831;
    const double C3373 =
        (-2 * C49980 * C49843) / C49733 - (C49980 * C50392) / C49733 +
        C49823 * (C49823 * ((-2 * C49980 * C49854) / C49733 -
                            (C49980 * (C49876 * C49989 + C49854)) / C49733) -
                  (C50430 * ce) / C49733) -
        (C49823 * C50430 * ce) / C49733;
    const double C2833 = 4 * (2 * C50370 + C49980 * C50407) +
                         C49980 * (3 * C50407 + C49980 * C50430);
    const double C3006 = C49823 * (3 * C50407 + C49980 * C50430);
    const double C3369 = 2 * C50370 + C49980 * C50407 + C50430 * C50095;
    const double C20684 =
        2 * C49823 * C50430 + C49823 * (C50430 + C50539 * C50095);
    const double C22952 =
        (-3 * (C49823 * C50550 + C50392 + C50548 * ce)) / C49733 +
        C49823 * ((-2 * C50550) / C49733 -
                  (C49823 * (C49823 * (C49823 * (C49912 * C49989 + C49876) +
                                       C50537 * ce) +
                             C50525 + C49823 * C50537 * ce)) /
                      C49733 -
                  (C50551 * ce) / C49733) -
        ((2 * C50548 + C49823 * C50551) * ce) / C49733;
    const double C22967 = C19767 * C6199;
    const double C22965 = C19767 * C6195;
    const double C50566 = C50564 + C50479;
    const double C6315 = 4 * (2 * C50448 + C49823 * C50451) +
                         C49823 * (3 * C50451 + C49823 * C50515);
    const double C50588 = C50586 + C50580;
    const double C50004 = C50003 + C50002;
    const double C3380 = C50692 * C971;
    const double C6830 = C2171 * C971;
    const double C9038 = C51020 * C971;
    const double C18108 = C16979 * C971;
    const double C22000 = C50687 * C971;
    const double C25833 = C50692 * C971;
    const double C28744 = C50963 * C971;
    const double C6206 = C50692 * C3502;
    const double C22796 = C50687 * C3502;
    const double C28962 = C50692 * C3502;
    const double C2725 = C2707 + C2708;
    const double C19913 = C19887 + C19888;
    const double C25222 = C25204 + C25205;
    const double C3051 = C3030 + C3031;
    const double C21035 = C21021 + C21022;
    const double C25524 = C25503 + C25504;
    const double C6042 = C6025 + C6026;
    const double C22801 = C22791 + C22792;
    const double C29109 = C29101 + C29102;
    const double C20148 = C20139 + C20140;
    const double C20367 = C20351 + C20352;
    const double C20609 = C20595 + C20596;
    const double C22635 = C22627 + C22628;
    const double C23079 = C23075 + C23076;
    const double C50174 = C50171 / C49692;
    const double C49925 = C49911 - C49923;
    const double C50025 = C50024 + C50020;
    const double C50075 = C49980 * C50074;
    const double C3506 =
        (2 * C49823 * C50066 + C49823 * (C50066 + C50074 * C50095)) / C49692;
    const double C50128 = C50071 + C50126;
    const double C50153 = C49823 * C50150;
    const double C50200 = C49980 * C50199;
    const double C20685 =
        (2 * C49823 * C50083 + C49823 * (C50083 + C50199 * C50095)) / C49692;
    const double C22951 = (3 * (C50063 + C50081 * C50095) +
                           C49823 * (2 * C50204 + C49823 * C50209)) /
                          C49692;
    const double C50230 = C50220 + C50227;
    const double C50258 = C49823 * C50255;
    const double C140 =
        4 * ((-2 * C49845) / C49733 - (C49820 * C49858) / C49733) +
        C49820 * ((-3 * C49858) / C49733 + C49820 * C49889);
    const double C268 = C49980 * ((-3 * C49858) / C49733 + C49820 * C49889);
    const double C394 = C49823 * ((-3 * C49858) / C49733 + C49820 * C49889) -
                        ((3 * C50280 + C49820 * C50284) * ce) / C49733;
    const double C518 =
        (-2 * C49845) / C49733 - (C49820 * C49858) / C49733 + C49889 * C49989;
    const double C726 =
        C49823 * C49980 * C49889 - (C49980 * C50284 * ce) / C49733;
    const double C859 = (-2 * C49845) / C49733 - (C49820 * C49858) / C49733 +
                        C49823 * (C49823 * C49889 - (C50284 * ce) / C49733) -
                        (C49823 * C50284 * ce) / C49733;
    const double C49919 = C49916 - C49896;
    const double C20221 =
        5 * ((-3 * C50392) / C49733 + C49980 * C50528) +
        C49980 * (4 * C50528 +
                  C49980 * ((-3 * C50525) / C49733 +
                            C49980 * ((-2 * C49980 * C49876) / C49733 -
                                      (C49980 * (C49912 * C49989 + C49876)) /
                                          C49733)));
    const double C20334 =
        C49823 * (4 * C50528 +
                  C49980 * ((-3 * C50525) / C49733 +
                            C49980 * ((-2 * C49980 * C49876) / C49733 -
                                      (C49980 * (C49912 * C49989 + C49876)) /
                                          C49733))) -
        ((4 * C50430 +
          C49980 *
              (3 * C50428 +
               C49980 * (2 * C50482 + C49980 * (C49951 + C49961 * C49989)))) *
         ce) /
            C49733;
    const double C20686 =
        2 * (C49823 * C50528 - (C50430 * ce) / C49733) +
        C49823 * (C50528 +
                  C49823 * (C49823 * ((-2 * C49980 * C49876) / C49733 -
                                      (C49980 * (C49912 * C49989 + C49876)) /
                                          C49733) -
                            (C50539 * ce) / C49733) -
                  (C49823 * C50539 * ce) / C49733) -
        ((C50430 + C50539 * C50095) * ce) / C49733;
    const double C50290 = C50288 + C50289;
    const double C965 = C49980 * C50284 + C50364 * C50095;
    const double C3372 =
        (-2 * C49980 * C49863) / C49733 - (C49980 * C50389) / C49733 +
        C49823 * (C49823 * ((-2 * C49980 * C49895) / C49733 -
                            (C49980 * (C49820 * C49912 * C49989 + C49895)) /
                                C49733) -
                  (C50423 * ce) / C49733) -
        (C49823 * C50423 * ce) / C49733;
    const double C2832 = 4 * (2 * C50368 + C49980 * C50410) +
                         C49980 * (3 * C50410 + C49980 * C50423);
    const double C3005 = C49823 * (3 * C50410 + C49980 * C50423);
    const double C3368 = 2 * C50368 + C49980 * C50410 + C50423 * C50095;
    const double C6314 = 4 * (2 * C50455 + C49823 * C50458) +
                         C49823 * (3 * C50458 + C49823 * C50501);
    const double C50541 = C50534 + C50540;
    const double C23070 = 4 * (2 * C50481 + C49823 * C50486) +
                          C49823 * (3 * C50486 + C49823 * C50567);
    const double C50591 = C50577 + C50589;
    const double C20228 = C50687 * C2837;
    const double C20356 = C50687 * C3012;
    const double C20604 = C50687 * C3371;
    const double C50228 = C50225 / C49692;
    const double C39905 = C50687 * C6317;
    const double C50259 = C50256 - C49896;
    const double C49861 = C49860 - C49851;
    const double C50102 = C50101 - C50097;
    const double C49888 = C49886 - C49870;
    const double C50056 = C50055 - C49864;
    const double C50140 = C50139 / C49692;
    const double C50175 = C50172 - C50165;
    const double C49924 = C49922 - C49904;
    const double C50189 = C50188 - C49896;
    const double C50229 = C50226 / C49692;
    const double C50257 = C50254 - C50246;
    const double C113 = (C50968 - C51004) / C49741 - (C51021 * C50710) / C49733;
    const double C114 =
        (2 * C50719 + C51021) / C49741 - (C51006 * C50710) / C49733;
    const double C115 = C51006 / C49741 - C50722 / C49762;
    const double C592 = (C50975 - C51007) / C49741 - (C51022 * C50758) / C49733;
    const double C593 =
        (2 * C50762 + C51022) / C49741 - (C51009 * C50758) / C49733;
    const double C594 = C51009 / C49741 - C50765 / C49762;
    const double C19763 =
        (C51024 * C50880) / C49692 + (C50991 - C51013) / C49697;
    const double C19764 =
        (C51025 * C50880) / C49692 + (2 * C50885 + C51024) / C49697;
    const double C19765 = (C50880 * C50885) / C49701 + C51025 / C49697;
    const double C39163 =
        (C51026 * C50906) / C49692 + (C50992 - C51016) / C49697;
    const double C39164 =
        (C51027 * C50906) / C49692 + (2 * C50911 + C51026) / C49697;
    const double C39165 = (C50906 * C50911) / C49701 + C51027 / C49697;
    const double C8101 = C8067 + C8068;
    const double C11055 = C11019 + C11020;
    const double C17171 = C17137 + C17138;
    const double C34160 = C34124 + C34125;
    const double C49716 = C49715 * ae;
    const double C2176 = (-C49693 / C49692) / C49697 - (C49715 * be) / C49692;
    const double C19928 = C19910 * C50776;
    const double C21017 = C19910 * C50977;
    const double C21286 = C19910 * C1509;
    const double C19927 = C19909 * C121;
    const double C21018 = C19909 * C377;
    const double C19926 = C19908 * C50776;
    const double C20350 = C19908 * C50977;
    const double C20600 = C19908 * C841;
    const double C21282 = C19908 * C1509;
    const double C21744 = C19908 * C51023;
    const double C19925 = C19907 * C121;
    const double C20349 = C19907 * C377;
    const double C20599 = C19907 * C844;
    const double C19924 = C19906 * C50776;
    const double C20344 = C19906 * C50977;
    const double C20592 = C19906 * C841;
    const double C21278 = C19906 * C1509;
    const double C21738 = C19906 * C51023;
    const double C19923 = C19905 * C121;
    const double C20343 = C19905 * C377;
    const double C20591 = C19905 * C844;
    const double C19922 = C19904 * C50776;
    const double C20338 = C19904 * C50977;
    const double C20584 = C19904 * C841;
    const double C21274 = C19904 * C1509;
    const double C21732 = C19904 * C51023;
    const double C19921 = C19903 * C121;
    const double C20337 = C19903 * C377;
    const double C20583 = C19903 * C844;
    const double C20151 = C20147 * C50776;
    const double C20357 = C20147 * C50977;
    const double C21626 = C20147 * C1509;
    const double C20374 = C20365 * C50788;
    const double C20594 = C20365 * C842;
    const double C21280 = C20365 * C50788;
    const double C21740 = C20365 * C51012;
    const double C22353 = C20365 * C50776;
    const double C22624 = C20365 * C50977;
    const double C24418 = C20365 * C1509;
    const double C32150 = C20365 * C841;
    const double C33727 = C20365 * C51023;
    const double C20373 = C20364 * C378;
    const double C20593 = C20364 * C845;
    const double C21279 = C20364 * C1512;
    const double C22354 = C20364 * C121;
    const double C22625 = C20364 * C377;
    const double C32149 = C20364 * C844;
    const double C20372 = C20362 * C50788;
    const double C20586 = C20362 * C842;
    const double C21276 = C20362 * C50788;
    const double C21734 = C20362 * C51012;
    const double C21994 = C20362 * C50776;
    const double C22614 = C20362 * C50977;
    const double C22956 = C20362 * C841;
    const double C23916 = C20362 * C1509;
    const double C24572 = C20362 * C51023;
    const double C20371 = C20361 * C378;
    const double C20585 = C20361 * C845;
    const double C21275 = C20361 * C1512;
    const double C21993 = C20361 * C121;
    const double C22613 = C20361 * C377;
    const double C22955 = C20361 * C844;
    const double C20614 = C20608 * C843;
    const double C21736 = C20608 * C1743;
    const double C21996 = C20608 * C50776;
    const double C22618 = C20608 * C50977;
    const double C22616 = C20608 * C50788;
    const double C22962 = C20608 * C841;
    const double C22958 = C20608 * C842;
    const double C23920 = C20608 * C1509;
    const double C23918 = C20608 * C50788;
    const double C24578 = C20608 * C51023;
    const double C24574 = C20608 * C51012;
    const double C20613 = C20607 * C846;
    const double C21735 = C20607 * C1746;
    const double C21995 = C20607 * C121;
    const double C22617 = C20607 * C377;
    const double C22615 = C20607 * C378;
    const double C22961 = C20607 * C844;
    const double C22957 = C20607 * C845;
    const double C23917 = C20607 * C1512;
    const double C22638 = C22634 * C50788;
    const double C22964 = C22634 * C842;
    const double C22960 = C22634 * C843;
    const double C23922 = C22634 * C50788;
    const double C24580 = C22634 * C51012;
    const double C24576 = C22634 * C1743;
    const double C22637 = C22633 * C378;
    const double C22963 = C22633 * C845;
    const double C22959 = C22633 * C846;
    const double C23921 = C22633 * C1512;
    const double C24575 = C22633 * C1746;
    const double C49773 = C49769 * ce;
    const double C1511 = (-C49742 / C49733) / C49741 - (C49769 * de) / C49733;
    const double C19933 = C19915 * C121;
    const double C19929 = C19911 * C121;
    const double C21024 = C19911 * C377;
    const double C21039 = C21033 * C378;
    const double C21285 = C21033 * C1512;
    const double C21997 = C21033 * C121;
    const double C23569 = C21033 * C377;
    const double C49883 = C49880 - C49864;
    const double C6319 =
        4 * ((-2 * C50450) / C49733 - (C49823 * C50516) / C49733 -
             (C50451 * ce) / C49733) +
        C49823 *
            ((-3 * C50516) / C49733 +
             C49823 * ((-2 * C50508) / C49733 -
                       (C49823 * (C49823 * (C49823 * C49876 + C49951 * ce) +
                                  C49854 + C49823 * C49951 * ce)) /
                           C49733 -
                       (C50510 * ce) / C49733) -
             (C50515 * ce) / C49733) -
        ((3 * C50451 + C49823 * C50515) * ce) / C49733;
    const double C8091 = C7915 * C257;
    const double C17161 = C16985 * C257;
    const double C11043 = C7915 * C383;
    const double C34148 = C16985 * C383;
    const double C2367 = C2177 * C509;
    const double C8425 = C7915 * C509;
    const double C17495 = C16985 * C509;
    const double C24876 = C49711 * C509;
    const double C9641 = C7915 * C714;
    const double C13691 = C2177 * C714;
    const double C18711 = C16985 * C714;
    const double C27767 = C49711 * C714;
    const double C5441 = C2177 * C850;
    const double C11621 = C7915 * C850;
    const double C34726 = C16985 * C850;
    const double C44773 = C49711 * C850;
    const double C50502 = C50500 + C50495;
    const double C50007 = C49820 * C49973;
    const double C50012 = 3 * C49973;
    const double C50035 = C49980 * C49973;
    const double C50114 = C49973 * ce;
    const double C50112 = C49823 * C49973;
    const double C2846 = C50692 * C2692;
    const double C20142 = C50687 * C2692;
    const double C25335 = C50692 * C2692;
    const double C3041 = C50692 * C3008;
    const double C21028 = C50687 * C3008;
    const double C25514 = C50692 * C3008;
    const double C3388 = C50692 * C3214;
    const double C22358 = C50687 * C3214;
    const double C25841 = C50692 * C3214;
    const double C6326 = C50692 * C6012;
    const double C39731 = C50687 * C6012;
    const double C45584 = C50692 * C6012;
    const double C20605 = C19767 * C3373;
    const double C20227 = C19767 * C2833;
    const double C20355 = C19767 * C3006;
    const double C20603 = C19767 * C3369;
    const double C22969 = C22965 + C22966;
    const double C50568 = C50566 + C50559;
    const double C39904 = C19767 * C6315;
    const double C50590 = C49823 * C50588;
    const double C138 = (3 * (C49995 + C49820 * C49999 + C50278 * ae) +
                         C49820 * (2 * C49999 + C49820 * C50004 + C50280 * ae) +
                         (2 * C50278 + C49820 * C50280) * ae) /
                        C49692;
    const double C263 =
        (C49980 * (2 * C49999 + C49820 * C50004 + C50280 * ae)) / C49692;
    const double C385 =
        (C49823 * (2 * C49999 + C49820 * C50004 + C50280 * ae)) / C49692;
    const double C513 =
        (C49995 + C49820 * C49999 + C50278 * ae + C50004 * C49989) / C49692;
    const double C606 =
        (2 * C49980 * C50004 + C49980 * (C50004 + C49973 * C49989)) / C49692;
    const double C721 = (C49823 * C49980 * C50004) / C49692;
    const double C728 = (C49823 * (C50004 + C49973 * C49989)) / C49692;
    const double C854 =
        (C49995 + C49820 * C49999 + C50278 * ae + C50004 * C50095) / C49692;
    const double C1060 =
        (2 * C49823 * C50004 + C49823 * (C50004 + C49973 * C50095)) / C49692;
    const double C3394 = C3379 + C3380;
    const double C22011 = C21999 + C22000;
    const double C25847 = C25832 + C25833;
    const double C6213 = C6205 + C6206;
    const double C22803 = C22795 + C22796;
    const double C28968 = C28961 + C28962;
    const double C19931 = C19913 * C121;
    const double C21030 = C19913 * C377;
    const double C21041 = C21035 * C378;
    const double C21289 = C21035 * C1512;
    const double C22355 = C21035 * C121;
    const double C32741 = C21035 * C377;
    const double C20152 = C20148 * C121;
    const double C20358 = C20148 * C377;
    const double C20375 = C20367 * C378;
    const double C20601 = C20367 * C845;
    const double C21283 = C20367 * C1512;
    const double C22463 = C20367 * C121;
    const double C31853 = C20367 * C377;
    const double C20615 = C20609 * C846;
    const double C21741 = C20609 * C1746;
    const double C22352 = C20609 * C121;
    const double C22630 = C20609 * C377;
    const double C22623 = C20609 * C378;
    const double C24417 = C20609 * C1512;
    const double C32151 = C20609 * C845;
    const double C22639 = C22635 * C378;
    const double C24421 = C22635 * C1512;
    const double C32153 = C22635 * C846;
    const double C33730 = C22635 * C1746;
    const double C50176 = C50174 - C49864;
    const double C49927 = C49820 * C49925;
    const double C601 =
        2 * C49980 * C49889 + C49980 * (C49889 + C49925 * C49989);
    const double C731 = C49823 * (C49889 + C49925 * C49989) -
                        ((C50284 + C49971 * C49989) * ce) / C49733;
    const double C973 =
        C49980 * C49889 +
        C49823 * (C49823 * C49980 * C49925 - (C50364 * ce) / C49733) -
        (C49823 * C50364 * ce) / C49733;
    const double C1063 =
        2 * (C49823 * C49889 - (C50284 * ce) / C49733) +
        C49823 * (C49889 + C49823 * (C49823 * C49925 - (C49971 * ce) / C49733) -
                  (C49823 * C49971 * ce) / C49733) -
        ((C50284 + C49971 * C50095) * ce) / C49733;
    const double C50026 = C49820 * C50025;
    const double C50068 = C50025 * C49989;
    const double C50115 = C50025 * C50095;
    const double C50181 = C49980 * C50025;
    const double C50076 = C50073 + C50075;
    const double C6196 = (3 * (C50037 + C50071 * C50095) +
                          C49823 * (2 * C50120 + C49823 * C50128)) /
                         C49692;
    const double C50156 = C50149 + C50153;
    const double C50201 = C50194 + C50200;
    const double C23071 = (4 * (2 * C50130 + C49823 * C50138) +
                           C49823 * (3 * C50138 + C49823 * C50230)) /
                          C49692;
    const double C50261 = C50241 + C50258;
    const double C8097 = C7915 * C268;
    const double C17167 = C16985 * C268;
    const double C11049 = C7915 * C394;
    const double C34154 = C16985 * C394;
    const double C2371 = C2177 * C518;
    const double C8431 = C7915 * C518;
    const double C17501 = C16985 * C518;
    const double C24880 = C49711 * C518;
    const double C9647 = C7915 * C726;
    const double C13695 = C2177 * C726;
    const double C18717 = C16985 * C726;
    const double C27771 = C49711 * C726;
    const double C5445 = C2177 * C859;
    const double C11627 = C7915 * C859;
    const double C34732 = C16985 * C859;
    const double C44777 = C49711 * C859;
    const double C128 = 5 * (3 * C50280 + C49820 * C50284) +
                        C49820 * (4 * C50284 + C49820 * C50290);
    const double C258 = C49980 * (4 * C50284 + C49820 * C50290);
    const double C384 = C49823 * (4 * C50284 + C49820 * C50290);
    const double C510 = 3 * C50280 + C49820 * C50284 + C50290 * C49989;
    const double C851 = 3 * C50280 + C49820 * C50284 + C50290 * C50095;
    const double C1407 = C49823 * C49980 * C50290;
    const double C20580 =
        (-3 * C50392) / C49733 + C49980 * C50528 +
        C49823 * (C49823 * ((-3 * C50525) / C49733 +
                            C49980 * ((-2 * C49980 * C49876) / C49733 -
                                      (C49980 * (C49912 * C49989 + C49876)) /
                                          C49733)) -
                  (C50541 * ce) / C49733) -
        (C49823 * C50541 * ce) / C49733;
    const double C20220 = 5 * (3 * C50407 + C49980 * C50430) +
                          C49980 * (4 * C50430 + C49980 * C50541);
    const double C20332 = C49823 * (4 * C50430 + C49980 * C50541);
    const double C20578 = 3 * C50407 + C49980 * C50430 + C50541 * C50095;
    const double C39899 = 5 * (3 * C50451 + C49823 * C50515) +
                          C49823 * (4 * C50515 + C49823 * C50591);
    const double C50231 = C50228 - C50213;
    const double C147 =
        3 * ((-(ae * C49845) / C49733) / C49692 - C49842 / C49831 +
             C49820 * C49861) +
        (((-2 * C49845) / C49733 - (C49820 * C49858) / C49733) * ae) / C49692 +
        C49820 *
            (2 * C49861 - (ae * C49858) / C49831 +
             C49820 *
                 ((-(ae * C49820 * C49854) / C49733) / C49692 -
                  C49853 / C49831 +
                  C49820 * ((-(C49820 * std::pow(C49825, 6) * bs[6] * C49836) /
                             C49733) /
                                C49692 -
                            (ae * C49854) / C49831)));
    const double C272 = (yP - yQ) * ((-(ae * C49845) / C49733) / C49692 -
                                     C49842 / C49831 + C49820 * C49861);
    const double C398 =
        C49823 * ((-(ae * C49845) / C49733) / C49692 - C49842 / C49831 +
                  C49820 * C49861) -
        ((C49832 * C49828 * C49939 + C49820 * (C49820 * C49943 + C49940 * ae) +
          C49820 * C49940 * ae) *
         ce) /
            C49831;
    const double C522 = (-(C49820 * C49842) / C49733) / C49692 -
                        (ae * C49835) / C49831 + C49861 * std::pow(yP - yQ, 2);
    const double C736 =
        C49823 * C49980 * C49861 -
        (C49980 * (C49820 * C49943 + C49940 * ae) * ce) / C49831;
    const double C863 = (-(C49820 * C49842) / C49733) / C49692 -
                        (ae * C49835) / C49831 -
                        (C49823 * C49999 * ce) / C49831 +
                        C49823 * (C49823 * C49861 - (C49999 * ce) / C49831);
    const double C6017 =
        3 * ((-(C50092 * ce) / C49733) / C49692 - C49842 / C49831 +
             C49823 * C50102) -
        ((2 * C50092 + C49823 * C50100) * ce) / C49831 +
        C49823 *
            (2 * C50102 - (C50100 * ce) / C49831 +
             C49823 * ((-(C49823 * C49952 * ce) / C49733) / C49692 - C49864 +
                       C49823 * ((-(C49823 * C49874) / C49733) / C49692 -
                                 (C49952 * ce) / C49831)));
    const double C49890 = C49820 * C49888;
    const double C49893 = 2 * C49888;
    const double C50085 = C49980 * C49888;
    const double C50105 = C49823 * C49888;
    const double C50154 = C49888 - C50151;
    const double C611 =
        2 * C49980 * C49861 + C49980 * (C49861 + C49888 * std::pow(C49980, 2));
    const double C741 =
        C49823 * (C49861 + C49888 * C49989) -
        ((C49820 * C49943 + C49940 * ae + C49956 * C49989) * ce) / C49831;
    const double C979 =
        C49980 * C49861 - (C49823 * C50037 * ce) / C49831 +
        C49823 * (C49823 * C49980 * C49888 - (C50037 * ce) / C49831);
    const double C1069 =
        2 * (C49823 * C49861 - (C49999 * ce) / C49831) -
        ((C49999 + C49956 * std::pow(C49823, 2)) * ce) / C49831 +
        C49823 * (C49861 - (C49823 * C49956 * ce) / C49831 +
                  C49823 * (C49823 * C49888 - (C49956 * ce) / C49831));
    const double C2839 =
        4 * ((-2 * C49980 * C49853) / C49831 + C49980 * C50056) +
        C49980 * (3 * C50056 +
                  C49980 * ((-2 * C49980 * C49874) / C49831 +
                            C49980 * ((-(C49910 * C49989) / C49733) / C49692 -
                                      C49896)));
    const double C3015 =
        C49823 * ((-2 * C49980 * C49853) / C49831 + C49980 * C50056) -
        ((2 * C50039 + C49980 * (C49943 + C49952 * C49989)) * ce) / C49831;
    const double C3018 =
        C49823 * (3 * C50056 +
                  C49980 * ((-2 * C49980 * C49874) / C49831 +
                            C49980 * ((-(C49910 * C49989) / C49733) / C49692 -
                                      C49896))) -
        ((3 * (C49943 + C49952 * C49989) +
          C49980 *
              (2 * C49980 * C49952 + C49980 * (C49952 + C49962 * C49989))) *
         ce) /
            C49831;
    const double C3219 = (-(C49853 * C49989) / C49733) / C49692 -
                         C49842 / C49831 - (C49823 * C50063 * ce) / C49831 +
                         C49823 * (C49823 * C50056 - (C50063 * ce) / C49831);
    const double C3375 =
        (-2 * C49980 * C49853) / C49831 + C49980 * C50056 -
        (C49823 * C50083 * ce) / C49831 +
        C49823 * (C49823 * ((-2 * C49980 * C49874) / C49831 +
                            C49980 * ((-(C49910 * C49989) / C49733) / C49692 -
                                      C49896)) -
                  (C50083 * ce) / C49831);
    const double C3513 =
        2 * (C49823 * C50056 - (C50063 * ce) / C49831) -
        ((C50063 + C50081 * std::pow(C49823, 2)) * ce) / C49831 +
        C49823 * (C50056 - (C49823 * C50081 * ce) / C49831 +
                  C49823 * (C49823 * ((-(C49910 * C49989) / C49733) / C49692 -
                                      C49896) -
                            (C50081 * ce) / C49831));
    const double C50141 = C50140 - C50135;
    const double C50177 = C49823 * C50175;
    const double C50236 = 2 * C50175;
    const double C49926 = C49820 * C49924;
    const double C50049 = C49924 * C49989;
    const double C50121 = C49980 * C49924;
    const double C50144 = C49823 * C49924;
    const double C2698 =
        3 * (C49861 + C49888 * C49989) +
        C49980 * (2 * C49980 * C49888 + C49980 * (C49888 + C49924 * C49989));
    const double C50190 = C49980 * C50189;
    const double C50205 = C49823 * C50189;
    const double C50232 = C50229 - C50219;
    const double C50260 = C49823 * C50257;
    const double C49717 = C49716 / C49692;
    const double C2369 = C2176 * C517;
    const double C2365 = C2176 * C508;
    const double C2361 = C2176 * C260;
    const double C2357 = C2176 * C254;
    const double C2353 = C2176 * C516;
    const double C2349 = C2176 * C507;
    const double C2345 = C2176 * C261;
    const double C2341 = C2176 * C255;
    const double C2337 = C2176 * C515;
    const double C2333 = C2176 * C506;
    const double C2329 = C2176 * C262;
    const double C2325 = C2176 * C256;
    const double C2715 = C2176 * C603;
    const double C2711 = C2176 * C599;
    const double C2709 = C2176 * C600;
    const double C2705 = C2176 * C604;
    const double C2847 = C2176 * C2693;
    const double C2843 = C2176 * C2688;
    const double C3042 = C2176 * C3009;
    const double C3038 = C2176 * C3003;
    const double C3036 = C2176 * C734;
    const double C3032 = C2176 * C718;
    const double C3026 = C2176 * C723;
    const double C3022 = C2176 * C711;
    const double C3389 = C2176 * C3215;
    const double C3385 = C2176 * C3210;
    const double C3381 = C2176 * C976;
    const double C3377 = C2176 * C968;
    const double C4017 = C2176 * C733;
    const double C4013 = C2176 * C717;
    const double C4009 = C2176 * C724;
    const double C4005 = C2176 * C712;
    const double C5447 = C2176 * C858;
    const double C5443 = C2176 * C849;
    const double C5439 = C2176 * C390;
    const double C5435 = C2176 * C380;
    const double C5429 = C2176 * C857;
    const double C5425 = C2176 * C848;
    const double C5421 = C2176 * C391;
    const double C5417 = C2176 * C381;
    const double C5415 = C2176 * C856;
    const double C5411 = C2176 * C847;
    const double C5407 = C2176 * C392;
    const double C5403 = C2176 * C382;
    const double C6039 = C2176 * C1065;
    const double C6035 = C2176 * C1057;
    const double C6027 = C2176 * C1066;
    const double C6023 = C2176 * C1058;
    const double C6211 = C2176 * C3505;
    const double C6207 = C2176 * C3499;
    const double C6331 = C2176 * C6013;
    const double C6327 = C2176 * C6008;
    const double C6833 = C2176 * C975;
    const double C6829 = C2176 * C967;
    const double C13693 = C2176 * C725;
    const double C13689 = C2176 * C713;
    const double C20136 = C19925 + C19926;
    const double C20226 = C19926 + C19925;
    const double C20366 = C20349 + C20350;
    const double C20135 = C19923 + C19924;
    const double C20363 = C20343 + C20344;
    const double C31599 = C22354 + C22353;
    const double C31850 = C22625 + C22624;
    const double C49775 = C49773 / C49733;
    const double C21295 = C19913 * C1511;
    const double C21291 = C19911 * C1511;
    const double C21287 = C19909 * C1511;
    const double C21281 = C19907 * C1511;
    const double C21277 = C19905 * C1511;
    const double C21273 = C19903 * C1511;
    const double C21627 = C20148 * C1511;
    const double C23925 = C21033 * C1511;
    const double C23919 = C20607 * C1511;
    const double C23915 = C20361 * C1511;
    const double C24423 = C20609 * C1511;
    const double C24419 = C20364 * C1511;
    const double C33085 = C21035 * C1511;
    const double C33576 = C20367 * C1511;
    const double C39906 = C19767 * C6319;
    const double C6318 =
        4 * ((-2 * C50457) / C49733 - (C49823 * C50502) / C49733 -
             (C50458 * ce) / C49733) +
        C49823 *
            ((-3 * C50502) / C49733 +
             C49823 *
                 ((-2 * C50494) / C49733 -
                  (C49823 * (C49823 * (C49823 * C49820 * C49912 + C50016 * ce) +
                             C49895 + C49823 * C50016 * ce)) /
                      C49733 -
                  (C50496 * ce) / C49733) -
             (C50501 * ce) / C49733) -
        ((3 * C50458 + C49823 * C50501) * ce) / C49733;
    const double C50009 = C50006 + C50007;
    const double C970 = (C49980 * C50004 + C50035 * C50095) / C49692;
    const double C50116 = C50114 / C49831;
    const double C2854 = C2845 + C2846;
    const double C20149 = C20141 + C20142;
    const double C25343 = C25334 + C25335;
    const double C3056 = C3040 + C3041;
    const double C21037 = C21027 + C21028;
    const double C25529 = C25513 + C25514;
    const double C3398 = C3387 + C3388;
    const double C22361 = C22357 + C22358;
    const double C25851 = C25840 + C25841;
    const double C6333 = C6325 + C6326;
    const double C39734 = C39730 + C39731;
    const double C45591 = C45583 + C45584;
    const double C20231 = C20227 + C20228;
    const double C20369 = C20355 + C20356;
    const double C20611 = C20603 + C20604;
    const double C22971 = C22969 * C846;
    const double C24581 = C22969 * C1746;
    const double C23072 =
        4 * ((-2 * C50485) / C49733 - (C49823 * C50568) / C49733 -
             (C50486 * ce) / C49733) +
        C49823 *
            ((-3 * C50568) / C49733 +
             C49823 *
                 ((-2 * C50562) / C49733 -
                  (C49823 * (C49823 * (C49823 * C49980 * C49912 + C50557 * ce) +
                             C50554 + C49823 * C50557 * ce)) /
                      C49733 -
                  (C50563 * ce) / C49733) -
             (C50567 * ce) / C49733) -
        ((3 * C50486 + C49823 * C50567) * ce) / C49733;
    const double C39908 = C39904 + C39905;
    const double C50592 = C50590 / C49733;
    const double C2360 = C50692 * C263;
    const double C8090 = C51020 * C263;
    const double C8080 = C7910 * C263;
    const double C17160 = C16979 * C263;
    const double C17150 = C16980 * C263;
    const double C24869 = C50692 * C263;
    const double C5434 = C50692 * C385;
    const double C11046 = C51020 * C385;
    const double C11036 = C7910 * C385;
    const double C27988 = C50692 * C385;
    const double C34151 = C16979 * C385;
    const double C34141 = C16980 * C385;
    const double C2366 = C2171 * C513;
    const double C2352 = C50692 * C513;
    const double C8424 = C51020 * C513;
    const double C8416 = C7910 * C513;
    const double C17494 = C16979 * C513;
    const double C17486 = C16980 * C513;
    const double C19896 = C50687 * C513;
    const double C24875 = C50963 * C513;
    const double C24861 = C50692 * C513;
    const double C2714 = C50692 * C606;
    const double C8548 = C7910 * C606;
    const double C17618 = C16980 * C606;
    const double C19900 = C50687 * C606;
    const double C25211 = C50692 * C606;
    const double C4008 = C50692 * C721;
    const double C8708 = C7910 * C721;
    const double C9640 = C51020 * C721;
    const double C13690 = C2171 * C721;
    const double C17778 = C16980 * C721;
    const double C18710 = C16979 * C721;
    const double C22004 = C50687 * C721;
    const double C26441 = C50692 * C721;
    const double C27766 = C50963 * C721;
    const double C4016 = C50692 * C728;
    const double C8724 = C7910 * C728;
    const double C17794 = C16980 * C728;
    const double C26449 = C50692 * C728;
    const double C31300 = C50687 * C728;
    const double C5444 = C2171 * C854;
    const double C5428 = C50692 * C854;
    const double C11624 = C51020 * C854;
    const double C11614 = C7910 * C854;
    const double C22190 = C50687 * C854;
    const double C28734 = C50692 * C854;
    const double C34729 = C16979 * C854;
    const double C34719 = C16980 * C854;
    const double C44776 = C50963 * C854;
    const double C6034 = C50692 * C1060;
    const double C11890 = C7910 * C1060;
    const double C34995 = C16980 * C1060;
    const double C39365 = C50687 * C1060;
    const double C45326 = C50692 * C1060;
    const double C22017 = C22011 * C121;
    const double C23573 = C22011 * C377;
    const double C23567 = C22011 * C378;
    const double C23929 = C22011 * C1511;
    const double C23923 = C22011 * C1512;
    const double C23571 = C22803 * C378;
    const double C23927 = C22803 * C1512;
    const double C20225 = C20151 + C20152;
    const double C49929 = C49905 + C49927;
    const double C50027 = C50013 + C50026;
    const double C50069 = C49973 + C50068;
    const double C50117 = C49973 + C50115;
    const double C6823 =
        (2 * C49823 * C50035 + C49823 * (C50035 + C50181 * C50095)) / C49692;
    const double C2836 = (4 * (2 * C50037 + C49980 * C50066) +
                          C49980 * (3 * C50066 + C49980 * C50076)) /
                         C49692;
    const double C3011 = (C49823 * (3 * C50066 + C49980 * C50076)) / C49692;
    const double C3370 =
        (2 * C50037 + C49980 * C50066 + C50076 * C50095) / C49692;
    const double C6316 = (4 * (2 * C50104 + C49823 * C50109) +
                          C49823 * (3 * C50109 + C49823 * C50156)) /
                         C49692;
    const double C20222 = (5 * (3 * C50063 + C49980 * C50083) +
                           C49980 * (4 * C50083 + C49980 * C50201)) /
                          C49692;
    const double C20333 = (C49823 * (4 * C50083 + C49980 * C50201)) / C49692;
    const double C20579 =
        (3 * C50063 + C49980 * C50083 + C50201 * C50095) / C49692;
    const double C39900 = (5 * (3 * C50100 + C49823 * C50173) +
                           C49823 * (4 * C50173 + C49823 * C50261)) /
                          C49692;
    const double C2362 = C2171 * C272;
    const double C2348 = C50692 * C272;
    const double C8094 = C51019 * C272;
    const double C8084 = C51020 * C272;
    const double C8074 = C7910 * C272;
    const double C17164 = C16978 * C272;
    const double C17154 = C16979 * C272;
    const double C17144 = C16980 * C272;
    const double C19894 = C50687 * C272;
    const double C24871 = C50963 * C272;
    const double C24857 = C50692 * C272;
    const double C5440 = C2171 * C398;
    const double C5424 = C50692 * C398;
    const double C11054 = C51019 * C398;
    const double C11040 = C51020 * C398;
    const double C11026 = C7910 * C398;
    const double C22188 = C50687 * C398;
    const double C27994 = C50963 * C398;
    const double C27986 = C50692 * C398;
    const double C34159 = C16978 * C398;
    const double C34145 = C16979 * C398;
    const double C34131 = C16980 * C398;
    const double C2354 = C2171 * C522;
    const double C2340 = C50692 * C522;
    const double C8428 = C51019 * C522;
    const double C8412 = C51020 * C522;
    const double C17498 = C16978 * C522;
    const double C17482 = C16979 * C522;
    const double C19886 = C50687 * C522;
    const double C24863 = C50963 * C522;
    const double C24849 = C50692 * C522;
    const double C3025 = C50692 * C736;
    const double C4010 = C2171 * C736;
    const double C8716 = C51020 * C736;
    const double C9644 = C51019 * C736;
    const double C17786 = C16979 * C736;
    const double C18714 = C16978 * C736;
    const double C21020 = C50687 * C736;
    const double C25498 = C50692 * C736;
    const double C26443 = C50963 * C736;
    const double C5430 = C2171 * C863;
    const double C5414 = C50692 * C863;
    const double C11632 = C51019 * C863;
    const double C11618 = C51020 * C863;
    const double C22184 = C50687 * C863;
    const double C28740 = C50963 * C863;
    const double C28732 = C50692 * C863;
    const double C34737 = C16978 * C863;
    const double C34723 = C16979 * C863;
    const double C6332 = C2171 * C6017;
    const double C23078 = C50687 * C6017;
    const double C45590 = C50963 * C6017;
    const double C49891 = C49883 + C49890;
    const double C49908 = C49893 - C49901;
    const double C3510 =
        2 * (C49823 * C50085 - (C50037 * ce) / C49831) -
        ((C50037 + C50071 * std::pow(C49823, 2)) * ce) / C49831 +
        C49823 * (C50085 - (C49823 * C50071 * ce) / C49831 +
                  C49823 * (C49823 * C49980 * C49924 - (C50071 * ce) / C49831));
    const double C50110 = C50105 - C50108;
    const double C2716 = C2171 * C611;
    const double C2704 = C50692 * C611;
    const double C8552 = C51020 * C611;
    const double C17622 = C16979 * C611;
    const double C19890 = C50687 * C611;
    const double C25213 = C50963 * C611;
    const double C25201 = C50692 * C611;
    const double C3035 = C50692 * C741;
    const double C4018 = C2171 * C741;
    const double C8728 = C51020 * C741;
    const double C17798 = C16979 * C741;
    const double C21026 = C50687 * C741;
    const double C25508 = C50692 * C741;
    const double C26451 = C50963 * C741;
    const double C3384 = C50692 * C979;
    const double C6834 = C2171 * C979;
    const double C9044 = C51020 * C979;
    const double C18114 = C16979 * C979;
    const double C22002 = C50687 * C979;
    const double C25837 = C50692 * C979;
    const double C28748 = C50963 * C979;
    const double C6040 = C2171 * C1069;
    const double C6030 = C50692 * C1069;
    const double C11898 = C51020 * C1069;
    const double C22794 = C50687 * C1069;
    const double C29106 = C50692 * C1069;
    const double C35003 = C16979 * C1069;
    const double C45332 = C50963 * C1069;
    const double C20230 = C50687 * C2839;
    const double C3043 = C2171 * C3015;
    const double C20354 = C50687 * C3015;
    const double C25516 = C50963 * C3015;
    const double C20360 = C50687 * C3018;
    const double C3390 = C2171 * C3219;
    const double C20598 = C50687 * C3219;
    const double C25843 = C50963 * C3219;
    const double C20606 = C50687 * C3375;
    const double C22632 = C50687 * C3513;
    const double C6201 =
        3 * ((-(C50130 * ce) / C49733) / C49692 - C50087 / C49831 +
             C49823 * C50141) -
        ((2 * C50130 + C49823 * C50138) * ce) / C49831 +
        C49823 * (2 * C50141 - (C50138 * ce) / C49831 +
                  C49823 * ((-(C49823 * C50133 * ce) / C49733) / C49692 -
                            C50131 / C49831 +
                            C49823 * ((-(C49823 * C49980 * C49910) / C49733) /
                                          C49692 -
                                      (C50133 * ce) / C49831)));
    const double C50178 = C50176 + C50177;
    const double C50249 = C50236 - C50243;
    const double C49928 = C49919 + C49926;
    const double C50050 = C49888 + C50049;
    const double C50124 = C49823 * C50121;
    const double C50152 = C50144 - C50148;
    const double C2850 = C50692 * C2698;
    const double C20144 = C50687 * C2698;
    const double C25339 = C50692 * C2698;
    const double C50191 = C50185 + C50190;
    const double C50210 = C50205 - C50208;
    const double C50233 = C49823 * C50232;
    const double C50262 = C50259 + C50260;
    const double C49718 = C49717 - C49707;
    const double C2389 = C2357 + C2358;
    const double C2385 = C2349 + C2350;
    const double C2383 = C2345 + C2346;
    const double C2381 = C2341 + C2342;
    const double C2379 = C2337 + C2338;
    const double C2377 = C2333 + C2334;
    const double C2375 = C2329 + C2330;
    const double C2373 = C2325 + C2326;
    const double C2727 = C2711 + C2712;
    const double C2726 = C2709 + C2710;
    const double C2724 = C2705 + C2706;
    const double C2855 = C2847 + C2848;
    const double C2853 = C2843 + C2844;
    const double C3055 = C3038 + C3039;
    const double C3054 = C3036 + C3037;
    const double C3052 = C3032 + C3033;
    const double C3049 = C3026 + C3027;
    const double C3047 = C3022 + C3023;
    const double C3397 = C3385 + C3386;
    const double C3395 = C3381 + C3382;
    const double C3393 = C3377 + C3378;
    const double C4025 = C4013 + C4014;
    const double C4021 = C4005 + C4006;
    const double C5466 = C5435 + C5436;
    const double C5461 = C5425 + C5426;
    const double C5459 = C5421 + C5422;
    const double C5457 = C5417 + C5418;
    const double C5456 = C5415 + C5416;
    const double C5454 = C5411 + C5412;
    const double C5452 = C5407 + C5408;
    const double C5450 = C5403 + C5404;
    const double C6046 = C6035 + C6036;
    const double C6043 = C6027 + C6028;
    const double C6041 = C6023 + C6024;
    const double C6216 = C6211 + C6212;
    const double C6214 = C6207 + C6208;
    const double C6334 = C6327 + C6328;
    const double C6836 = C6829 + C6830;
    const double C20380 = C20366 - C20375;
    const double C20379 = C20363 - C20373;
    const double C31855 = C31850 - C22623;
    const double C49777 = C49775 - C49770;
    const double C21624 = C21281 + C21282;
    const double C21623 = C21277 + C21278;
    const double C33573 = C24419 + C24418;
    const double C50010 = C50009 + C50008;
    const double C6828 = C50692 * C970;
    const double C9040 = C7910 * C970;
    const double C18110 = C16980 * C970;
    const double C22008 = C50687 * C970;
    const double C28742 = C50692 * C970;
    const double C20153 = C20149 * C121;
    const double C21043 = C21037 * C378;
    const double C21293 = C21037 * C1512;
    const double C31600 = C21037 * C121;
    const double C22363 = C22361 * C121;
    const double C32739 = C22361 * C378;
    const double C33083 = C22361 * C1512;
    const double C20233 = C20231 * C121;
    const double C20377 = C20369 * C378;
    const double C21625 = C20369 * C1512;
    const double C31702 = C20369 * C121;
    const double C20617 = C20611 * C846;
    const double C21747 = C20611 * C1746;
    const double C22465 = C20611 * C121;
    const double C31851 = C20611 * C378;
    const double C33574 = C20611 * C1512;
    const double C50593 = C50578 - C50592;
    const double C2390 = C2359 + C2360;
    const double C8107 = C8079 + C8080;
    const double C17177 = C17149 + C17150;
    const double C24899 = C24868 + C24869;
    const double C5465 = C5433 + C5434;
    const double C11063 = C11035 + C11036;
    const double C28003 = C27987 + C27988;
    const double C34168 = C34140 + C34141;
    const double C2393 = C2365 + C2366;
    const double C2386 = C2351 + C2352;
    const double C8436 = C8415 + C8416;
    const double C17506 = C17485 + C17486;
    const double C19917 = C19895 + C19896;
    const double C24895 = C24860 + C24861;
    const double C2728 = C2713 + C2714;
    const double C8557 = C8547 + C8548;
    const double C17627 = C17617 + C17618;
    const double C19919 = C19899 + C19900;
    const double C25225 = C25210 + C25211;
    const double C4022 = C4007 + C4008;
    const double C8731 = C8707 + C8708;
    const double C13697 = C13689 + C13690;
    const double C17801 = C17777 + C17778;
    const double C22013 = C22003 + C22004;
    const double C26455 = C26440 + C26441;
    const double C4026 = C4015 + C4016;
    const double C8739 = C8723 + C8724;
    const double C17809 = C17793 + C17794;
    const double C26459 = C26448 + C26449;
    const double C31303 = C31299 + C31300;
    const double C5470 = C5443 + C5444;
    const double C5462 = C5427 + C5428;
    const double C11635 = C11613 + C11614;
    const double C22203 = C22189 + C22190;
    const double C28753 = C28733 + C28734;
    const double C34740 = C34718 + C34719;
    const double C6045 = C6033 + C6034;
    const double C11901 = C11889 + C11890;
    const double C35006 = C34994 + C34995;
    const double C39368 = C39364 + C39365;
    const double C45333 = C45325 + C45326;
    const double C141 = 5 * ((-3 * C49858) / C49733 + C49820 * C49889) +
                        C49820 * (4 * C49889 + C49820 * C49929);
    const double C269 = C49980 * (4 * C49889 + C49820 * C49929);
    const double C396 = C49823 * (4 * C49889 + C49820 * C49929) -
                        ((4 * C50284 + C49820 * C50290) * ce) / C49733;
    const double C519 =
        (-3 * C49858) / C49733 + C49820 * C49889 + C49929 * C49989;
    const double C861 = (-3 * C49858) / C49733 + C49820 * C49889 +
                        C49823 * (C49823 * C49929 - (C50290 * ce) / C49733) -
                        (C49823 * C50290 * ce) / C49733;
    const double C1409 =
        C49823 * C49980 * C49929 - (C49980 * C50290 * ce) / C49733;
    const double C50028 = C50027 + C50017;
    const double C2696 = (3 * (C50004 + C49973 * C49989) +
                          C49980 * (2 * C50035 + C49980 * C50069)) /
                         C49692;
    const double C3217 = (C50004 + C49973 * C49989 + C50069 * C50095) / C49692;
    const double C4001 = (C49823 * (2 * C50035 + C49980 * C50069)) / C49692;
    const double C6015 = (3 * (C50004 + C49973 * C50095) +
                          C49823 * (2 * C50112 + C49823 * C50117)) /
                         C49692;
    const double C2391 = C2361 + C2362;
    const double C2384 = C2347 + C2348;
    const double C8104 = C8073 + C8074;
    const double C17174 = C17143 + C17144;
    const double C19916 = C19893 + C19894;
    const double C24893 = C24856 + C24857;
    const double C5468 = C5439 + C5440;
    const double C5460 = C5423 + C5424;
    const double C11058 = C11025 + C11026;
    const double C22202 = C22187 + C22188;
    const double C28002 = C27985 + C27986;
    const double C34163 = C34130 + C34131;
    const double C2387 = C2353 + C2354;
    const double C2380 = C2339 + C2340;
    const double C19912 = C19885 + C19886;
    const double C24889 = C24848 + C24849;
    const double C3048 = C3024 + C3025;
    const double C4023 = C4009 + C4010;
    const double C21034 = C21019 + C21020;
    const double C25521 = C25497 + C25498;
    const double C5463 = C5429 + C5430;
    const double C5455 = C5413 + C5414;
    const double C22200 = C22183 + C22184;
    const double C28752 = C28731 + C28732;
    const double C6336 = C6331 + C6332;
    const double C23080 = C23077 + C23078;
    const double C148 =
        4 * (2 * C49861 - (ae * C49858) / C49831 + C49820 * C49891) +
        (((-3 * C49858) / C49733 + C49820 * C49889) * ae) / C49692 +
        C49820 *
            (3 * C49891 + (C49889 * ae) / C49692 +
             C49820 * (2 * C49888 - (ae * C49882) / C49831 +
                       C49820 * ((-(ae * C49820 * C49876) / C49733) / C49692 -
                                 C49874 / C49831 +
                                 C49820 * ((-(C49820 * std::pow(C49827, 7) *
                                              bs[7] * C49836) /
                                            C49733) /
                                               C49692 -
                                           (ae * C49876) / C49831))));
    const double C271 =
        (yP - yQ) * (2 * C49861 - (ae * C49858) / C49831 + C49820 * C49891);
    const double C397 =
        C49823 * (2 * C49861 - (ae * C49858) / C49831 + C49820 * C49891) -
        ((2 * (C49820 * C49943 + C49940 * ae) +
          C49820 * (C49943 +
                    C49820 * (C49820 * C49846 * C49847 * C49939 + C49941 * ae) +
                    C49820 * C49941 * ae) +
          (C49940 + C49941 * C49849) * ae) *
         ce) /
            C49831;
    const double C523 = (-(ae * C49845) / C49733) / C49692 - C49842 / C49831 +
                        C49820 * C49861 + C49891 * std::pow(yP - yQ, 2);
    const double C737 =
        C49823 * C49980 * C49891 -
        (C49980 * (C49943 + C49820 * C49956 + C49950 * ae) * ce) / C49831;
    const double C864 = (-(ae * C49845) / C49733) / C49692 - C49842 / C49831 +
                        C49820 * C49861 - (C49823 * C50004 * ce) / C49831 +
                        C49823 * (C49823 * C49891 - (C50004 * ce) / C49831);
    const double C6210 = C50692 * C3510;
    const double C22798 = C50687 * C3510;
    const double C28966 = C50692 * C3510;
    const double C6018 =
        3 * (C49861 - (C50104 * ce) / C49831 + C49823 * C50110) -
        ((2 * C50104 + C49823 * C50109) * ce) / C49831 +
        C49823 *
            (2 * C50110 - (C50109 * ce) / C49831 +
             C49823 * (C49888 - (C49823 * C49968 * ce) / C49831 +
                       C49823 * (C49823 * C49924 - (C49968 * ce) / C49831)));
    const double C2729 = C2715 + C2716;
    const double C2723 = C2703 + C2704;
    const double C19914 = C19889 + C19890;
    const double C25220 = C25200 + C25201;
    const double C3053 = C3034 + C3035;
    const double C4027 = C4017 + C4018;
    const double C21036 = C21025 + C21026;
    const double C25526 = C25507 + C25508;
    const double C3396 = C3383 + C3384;
    const double C6838 = C6833 + C6834;
    const double C22012 = C22001 + C22002;
    const double C25849 = C25836 + C25837;
    const double C6048 = C6039 + C6040;
    const double C6044 = C6029 + C6030;
    const double C22802 = C22793 + C22794;
    const double C29111 = C29105 + C29106;
    const double C20232 = C20229 + C20230;
    const double C3057 = C3042 + C3043;
    const double C20368 = C20353 + C20354;
    const double C20370 = C20359 + C20360;
    const double C3399 = C3389 + C3390;
    const double C20610 = C20597 + C20598;
    const double C20612 = C20605 + C20606;
    const double C22636 = C22631 + C22632;
    const double C22968 = C50687 * C6201;
    const double C6321 =
        4 * (2 * C50102 - (C50100 * ce) / C49831 + C49823 * C50178) -
        ((3 * C50100 + C49823 * C50173) * ce) / C49831 +
        C49823 *
            (3 * C50178 - (C50173 * ce) / C49831 +
             C49823 *
                 (2 * C50175 - (C50167 * ce) / C49831 +
                  C49823 *
                      ((-(C49823 * C49962 * ce) / C49733) / C49692 - C49896 +
                       C49823 * ((-(C49823 * C49910) / C49733) / C49692 -
                                 (C49962 * ce) / C49831))));
    const double C49930 = C49820 * C49928;
    const double C50113 = C49823 * C49928;
    const double C50180 = C49980 * C49928;
    const double C610 =
        2 * C49980 * C49891 + C49980 * (C49891 + C49928 * std::pow(C49980, 2));
    const double C740 =
        C49823 * (C49891 + C49928 * C49989) -
        ((C49943 + C49820 * C49956 + C49950 * ae + C49973 * C49989) * ce) /
            C49831;
    const double C978 =
        C49980 * C49891 - (C49823 * C50035 * ce) / C49831 +
        C49823 * (C49823 * C49980 * C49928 - (C50035 * ce) / C49831);
    const double C1068 =
        2 * (C49823 * C49891 - (C50004 * ce) / C49831) -
        ((C50004 + C49973 * std::pow(C49823, 2)) * ce) / C49831 +
        C49823 * (C49891 - (C49823 * C49973 * ce) / C49831 +
                  C49823 * (C49823 * C49928 - (C49973 * ce) / C49831));
    const double C2699 =
        3 * (C49891 + C49928 * C49989) +
        C49980 *
            (2 * C49980 * C49928 +
             C49980 *
                 (C49928 +
                  ((-(ae * C49820 * C49912) / C49733) / C49692 -
                   C49910 / C49831 +
                   C49820 * ((-(C49820 * std::pow(C49825, 8) * bs[8] * C49836) /
                              C49733) /
                                 C49692 -
                             (ae * C49912) / C49831)) *
                      C49989));
    const double C3221 =
        C49891 + C49928 * C49989 - (C49823 * C50069 * ce) / C49831 +
        C49823 *
            (C49823 *
                 (C49928 +
                  ((-(ae * C49820 * C49912) / C49733) / C49692 -
                   C49910 / C49831 +
                   C49820 * ((-(C49820 * std::pow(C49825, 8) * bs[8] * C49836) /
                              C49733) /
                                 C49692 -
                             (ae * C49912) / C49831)) *
                      C49989) -
             (C50069 * ce) / C49831);
    const double C4003 =
        C49823 *
            (2 * C49980 * C49928 +
             C49980 *
                 (C49928 +
                  ((-(ae * C49820 * C49912) / C49733) / C49692 -
                   C49910 / C49831 +
                   C49820 * ((-(C49820 * std::pow(C49825, 8) * bs[8] * C49836) /
                              C49733) /
                                 C49692 -
                             (ae * C49912) / C49831)) *
                      C49989)) -
        ((2 * C50035 + C49980 * C50069) * ce) / C49831;
    const double C2838 =
        4 * (2 * C49980 * C49888 + C49980 * C50050) +
        C49980 *
            (3 * C50050 +
             C49980 * (2 * C49980 * C49924 +
                       C49980 * (C49924 + ((-(C49820 * std::pow(C49825, 8) *
                                              bs[8] * C49836) /
                                            C49733) /
                                               C49692 -
                                           (ae * C49912) / C49831) *
                                              C49989)));
    const double C3016 =
        C49823 * (2 * C49980 * C49888 + C49980 * C50050) -
        ((2 * C50037 + C49980 * (C49956 + C49968 * C49989)) * ce) / C49831;
    const double C3017 =
        C49823 *
            (3 * C50050 +
             C49980 * (2 * C49980 * C49924 +
                       C49980 * (C49924 + ((-(C49820 * std::pow(C49825, 8) *
                                              bs[8] * C49836) /
                                            C49733) /
                                               C49692 -
                                           (ae * C49912) / C49831) *
                                              C49989))) -
        ((3 * (C49956 + C49968 * C49989) +
          C49980 *
              (2 * C49980 * C49968 + C49980 * (C49968 + C50022 * C49989))) *
         ce) /
            C49831;
    const double C3220 = C49861 + C49888 * C49989 -
                         (C49823 * C50066 * ce) / C49831 +
                         C49823 * (C49823 * C50050 - (C50066 * ce) / C49831);
    const double C3374 =
        2 * C49980 * C49888 + C49980 * C50050 -
        (C49823 * C50076 * ce) / C49831 +
        C49823 *
            (C49823 * (2 * C49980 * C49924 +
                       C49980 * (C49924 + ((-(C49820 * std::pow(C49825, 8) *
                                              bs[8] * C49836) /
                                            C49733) /
                                               C49692 -
                                           (ae * C49912) / C49831) *
                                              C49989)) -
             (C50076 * ce) / C49831);
    const double C3512 =
        2 * (C49823 * C50050 - (C50066 * ce) / C49831) -
        ((C50066 + C50074 * std::pow(C49823, 2)) * ce) / C49831 +
        C49823 *
            (C50050 - (C49823 * C50074 * ce) / C49831 +
             C49823 * (C49823 * (C49924 + ((-(C49820 * std::pow(C49825, 8) *
                                              bs[8] * C49836) /
                                            C49733) /
                                               C49692 -
                                           (ae * C49912) / C49831) *
                                              C49989) -
                       (C50074 * ce) / C49831));
    const double C50127 = C50124 - C50125;
    const double C50155 = C49823 * C50152;
    const double C2856 = C2849 + C2850;
    const double C20150 = C20143 + C20144;
    const double C25345 = C25338 + C25339;
    const double C20223 =
        5 * (3 * C50056 + C49980 * C50191) +
        C49980 * (4 * C50191 +
                  C49980 * (3 * C50189 +
                            C49980 * ((-2 * C49980 * C49910) / C49831 +
                                      C49980 * ((-(std::pow(C49825, 8) * bs[8] *
                                                   C49836 * C49989) /
                                                 C49733) /
                                                    C49692 -
                                                C49910 / C49831))));
    const double C20335 =
        C49823 * (4 * C50191 +
                  C49980 * (3 * C50189 +
                            C49980 * ((-2 * C49980 * C49910) / C49831 +
                                      C49980 * ((-(std::pow(C49825, 8) * bs[8] *
                                                   C49836 * C49989) /
                                                 C49733) /
                                                    C49692 -
                                                C49910 / C49831)))) -
        ((4 * C50083 +
          C49980 *
              (3 * C50081 +
               C49980 * (2 * C50133 + C49980 * (C49962 + C50019 * C49989)))) *
         ce) /
            C49831;
    const double C20581 =
        3 * C50056 + C49980 * C50191 - (C49823 * C50201 * ce) / C49831 +
        C49823 * (C49823 * (3 * C50189 +
                            C49980 * ((-2 * C49980 * C49910) / C49831 +
                                      C49980 * ((-(std::pow(C49825, 8) * bs[8] *
                                                   C49836 * C49989) /
                                                 C49733) /
                                                    C49692 -
                                                C49910 / C49831))) -
                  (C50201 * ce) / C49831);
    const double C20687 =
        2 * (C49823 * C50191 - (C50083 * ce) / C49831) -
        ((C50083 + C50199 * C50095) * ce) / C49831 +
        C49823 * (C50191 - (C49823 * C50199 * ce) / C49831 +
                  C49823 * (C49823 * ((-2 * C49980 * C49910) / C49831 +
                                      C49980 * ((-(std::pow(C49825, 8) * bs[8] *
                                                   C49836 * C49989) /
                                                 C49733) /
                                                    C49692 -
                                                C49910 / C49831)) -
                            (C50199 * ce) / C49831));
    const double C22953 =
        3 * (C50056 - (C50204 * ce) / C49831 + C49823 * C50210) -
        ((2 * C50204 + C49823 * C50209) * ce) / C49831 +
        C49823 * (2 * C50210 - (C50209 * ce) / C49831 +
                  C49823 * (C50189 - (C49823 * C50197 * ce) / C49831 +
                            C49823 * (C49823 * ((-(std::pow(C49825, 8) * bs[8] *
                                                   C49836 * C49989) /
                                                 C49733) /
                                                    C49692 -
                                                C49910 / C49831) -
                                      (C50197 * ce) / C49831)));
    const double C50234 = C50231 + C50233;
    const double C50263 = C49823 * C50262;
    const double C24878 = C49718 * C517;
    const double C24874 = C49718 * C508;
    const double C24870 = C49718 * C260;
    const double C24866 = C49718 * C254;
    const double C24862 = C49718 * C516;
    const double C24858 = C49718 * C507;
    const double C24854 = C49718 * C261;
    const double C24850 = C49718 * C255;
    const double C24846 = C49718 * C515;
    const double C24842 = C49718 * C506;
    const double C24838 = C49718 * C262;
    const double C24834 = C49718 * C256;
    const double C25212 = C49718 * C603;
    const double C25208 = C49718 * C599;
    const double C25206 = C49718 * C600;
    const double C25202 = C49718 * C604;
    const double C25336 = C49718 * C2693;
    const double C25332 = C49718 * C2688;
    const double C25515 = C49718 * C3009;
    const double C25511 = C49718 * C3003;
    const double C25509 = C49718 * C734;
    const double C25505 = C49718 * C718;
    const double C25499 = C49718 * C723;
    const double C25495 = C49718 * C711;
    const double C25842 = C49718 * C3215;
    const double C25838 = C49718 * C3210;
    const double C25834 = C49718 * C976;
    const double C25830 = C49718 * C968;
    const double C26450 = C49718 * C733;
    const double C26446 = C49718 * C717;
    const double C26442 = C49718 * C724;
    const double C26438 = C49718 * C712;
    const double C27769 = C49718 * C725;
    const double C27765 = C49718 * C713;
    const double C27993 = C49718 * C390;
    const double C27989 = C49718 * C380;
    const double C27983 = C49718 * C391;
    const double C27979 = C49718 * C381;
    const double C27977 = C49718 * C392;
    const double C27973 = C49718 * C382;
    const double C28747 = C49718 * C975;
    const double C28743 = C49718 * C967;
    const double C28739 = C49718 * C857;
    const double C28735 = C49718 * C848;
    const double C28729 = C49718 * C856;
    const double C28725 = C49718 * C847;
    const double C28963 = C49718 * C3505;
    const double C28959 = C49718 * C3499;
    const double C29107 = C49718 * C1066;
    const double C29103 = C49718 * C1058;
    const double C44779 = C49718 * C858;
    const double C44775 = C49718 * C849;
    const double C45331 = C49718 * C1065;
    const double C45327 = C49718 * C1057;
    const double C45589 = C49718 * C6013;
    const double C45585 = C49718 * C6008;
    const double C117 =
        ((((0 - (C49690 * C49691) / C49692) * ae) / C49692 - (0 * be) / C49701 +
          C49693 / C49692) /
             C49697 -
         ((C49690 * C49714 + 0) * be) / C49692) /
            C49697 +
        ((C49690 * (C49714 / C49697 -
                    ((C49690 * C49718 + C50963) * be) / C49692 + C49711) +
          C51019) *
         ae) /
            C49692 +
        C49718 / C49697 - ((C49690 * C49711 + C50692) * be) / C49692;
    const double C118 =
        (C49714 / C49697 - ((C49690 * C49718 + C50963) * be) / C49692 +
         C49711) /
            C49697 +
        ((C49690 *
              (C49718 / C49697 - ((C49690 * C49711 + C50692) * be) / C49692) +
          C51020) *
         ae) /
            C49692 +
        2 * (C49711 / C49697 - (0 * be) / C49692);
    const double C119 =
        (C49718 / C49697 - ((C49690 * C49711 + C50692) * be) / C49692) /
            C49697 +
        ((C49690 * (C49711 / C49697 - (0 * be) / C49692) + C7910) * ae) /
            C49692;
    const double C7913 =
        C49714 / C49697 - ((C49690 * C49718 + C50963) * be) / C49692 + C49711;
    const double C7914 =
        C49718 / C49697 - ((C49690 * C49711 + C50692) * be) / C49692;
    const double C16983 =
        C49714 / C49697 + ((C49690 * C49718 + C50963) * ae) / C49692 + C49711;
    const double C16984 =
        C49718 / C49697 + ((C49690 * C49711 + C50692) * ae) / C49692;
    const double C2701 = C2377 + C2378;
    const double C2842 = C2725 + C2726;
    const double C3059 = C3051 + C3052;
    const double C14417 = C3052 + C3051;
    const double C14415 = C3047 + C3046;
    const double C14413 = C3046 + C3047;
    const double C6203 = C3394 + C3393;
    const double C14807 = C3393 + C3394;
    const double C6021 = C5454 + C5453;
    const double C6323 = C6042 + C6041;
    const double C20381 = C20379 - C20374;
    const double C1051 =
        ((((0 - (C49732 * C49757) / C49733) * ce) / C49733 - (0 * de) / C49762 +
          C49742 / C49733) /
             C49741 -
         ((C49732 * C49776 + 0) * de) / C49733) /
            C49741 -
        ((C49732 * (C49776 / C49741 -
                    ((C49732 * C49777 + C50977) * de) / C49733 + C49771) +
          C51023) *
         de) /
            C49733 +
        C49777 / C49741 - ((C49732 * C49771 + C50788) * de) / C49733;
    const double C1052 =
        (C49776 / C49741 - ((C49732 * C49777 + C50977) * de) / C49733 +
         C49771) /
            C49741 -
        ((C49732 *
              (C49777 / C49741 - ((C49732 * C49771 + C50788) * de) / C49733) +
          C51012) *
         de) /
            C49733 +
        2 * (C49771 / C49741 - (0 * de) / C49733);
    const double C1053 =
        (C49777 / C49741 - ((C49732 * C49771 + C50788) * de) / C49733) /
            C49741 -
        ((C49732 * (C49771 / C49741 - (0 * de) / C49733) + C1743) * de) /
            C49733;
    const double C1744 =
        C49776 / C49741 - ((C49732 * C49777 + C50977) * de) / C49733 + C49771;
    const double C1745 =
        C49777 / C49741 - ((C49732 * C49771 + C50788) * de) / C49733;
    const double C21630 = C21624 - C21283;
    const double C21629 = C21623 - C21279;
    const double C33578 = C33573 - C24417;
    const double C139 = (4 * (2 * C49999 + C49820 * C50004 + C50280 * ae) +
                         C49820 * (3 * C50004 + C49820 * C50010 + C50284 * ae) +
                         (3 * C50280 + C49820 * C50284) * ae) /
                        C49692;
    const double C267 =
        (C49980 * (3 * C50004 + C49820 * C50010 + C50284 * ae)) / C49692;
    const double C393 =
        (C49823 * (3 * C50004 + C49820 * C50010 + C50284 * ae)) / C49692;
    const double C514 =
        (2 * C49999 + C49820 * C50004 + C50280 * ae + C50010 * C49989) / C49692;
    const double C722 = (C49823 * C49980 * C50010) / C49692;
    const double C855 =
        (2 * C49999 + C49820 * C50004 + C50280 * ae + C50010 * C50095) / C49692;
    const double C6835 = C6827 + C6828;
    const double C9049 = C9039 + C9040;
    const double C18119 = C18109 + C18110;
    const double C22015 = C22007 + C22008;
    const double C28757 = C28741 + C28742;
    const double C50594 = C50593 - C50581;
    const double C2720 = C2386 + C2385;
    const double C19935 = C19917 * C121;
    const double C19937 = C19919 * C121;
    const double C15588 = C4022 + C4021;
    const double C15585 = C4021 + C4022;
    const double C22019 = C22013 * C121;
    const double C31305 = C31303 * C121;
    const double C6031 = C5462 + C5461;
    const double C50029 = C49820 * C50028;
    const double C50033 = C49980 * C50028;
    const double C605 =
        (2 * C49980 * C50010 + C49980 * (C50010 + C50028 * C49989)) / C49692;
    const double C727 = (C49823 * (C50010 + C50028 * C49989)) / C49692;
    const double C1059 =
        (2 * C49823 * C50010 + C49823 * (C50010 + C50028 * C50095)) / C49692;
    const double C19934 = C19916 * C50776;
    const double C2702 = C2379 + C2380;
    const double C19930 = C19912 * C50776;
    const double C21023 = C19912 * C50977;
    const double C21290 = C19912 * C1509;
    const double C14416 = C3049 + C3048;
    const double C14414 = C3048 + C3049;
    const double C21040 = C21034 * C50788;
    const double C21288 = C21034 * C50788;
    const double C21998 = C21034 * C50776;
    const double C23568 = C21034 * C50977;
    const double C23924 = C21034 * C1509;
    const double C6022 = C5456 + C5455;
    const double C2364 = C50692 * C271;
    const double C8096 = C51020 * C271;
    const double C8086 = C7910 * C271;
    const double C17166 = C16979 * C271;
    const double C17156 = C16980 * C271;
    const double C24873 = C50692 * C271;
    const double C5438 = C50692 * C397;
    const double C11052 = C51020 * C397;
    const double C11042 = C7910 * C397;
    const double C27992 = C50692 * C397;
    const double C34157 = C16979 * C397;
    const double C34147 = C16980 * C397;
    const double C2370 = C2171 * C523;
    const double C2356 = C50692 * C523;
    const double C8430 = C51020 * C523;
    const double C8410 = C7910 * C523;
    const double C17500 = C16979 * C523;
    const double C17480 = C16980 * C523;
    const double C19898 = C50687 * C523;
    const double C24879 = C50963 * C523;
    const double C24865 = C50692 * C523;
    const double C4012 = C50692 * C737;
    const double C8714 = C7910 * C737;
    const double C9646 = C51020 * C737;
    const double C13694 = C2171 * C737;
    const double C17784 = C16980 * C737;
    const double C18716 = C16979 * C737;
    const double C22006 = C50687 * C737;
    const double C26445 = C50692 * C737;
    const double C27770 = C50963 * C737;
    const double C5448 = C2171 * C864;
    const double C5432 = C50692 * C864;
    const double C11630 = C51020 * C864;
    const double C11620 = C7910 * C864;
    const double C22192 = C50687 * C864;
    const double C28738 = C50692 * C864;
    const double C34735 = C16979 * C864;
    const double C34725 = C16980 * C864;
    const double C44780 = C50963 * C864;
    const double C6215 = C6209 + C6210;
    const double C22804 = C22797 + C22798;
    const double C28970 = C28965 + C28966;
    const double C6330 = C50692 * C6018;
    const double C39733 = C50687 * C6018;
    const double C45588 = C50692 * C6018;
    const double C2841 = C2723 + C2724;
    const double C19932 = C19914 * C50776;
    const double C21029 = C19914 * C50977;
    const double C21294 = C19914 * C1509;
    const double C3060 = C3053 + C3054;
    const double C14418 = C3054 + C3053;
    const double C21042 = C21036 * C50788;
    const double C21292 = C21036 * C50788;
    const double C22356 = C21036 * C50776;
    const double C32740 = C21036 * C50977;
    const double C33084 = C21036 * C1509;
    const double C6204 = C3396 + C3395;
    const double C14808 = C3395 + C3396;
    const double C22018 = C22012 * C50776;
    const double C23572 = C22012 * C50977;
    const double C23570 = C22012 * C50788;
    const double C23928 = C22012 * C1509;
    const double C23926 = C22012 * C50788;
    const double C6324 = C6044 + C6043;
    const double C20234 = C20232 * C50776;
    const double C20376 = C20368 * C50788;
    const double C20602 = C20368 * C842;
    const double C21284 = C20368 * C50788;
    const double C21746 = C20368 * C51012;
    const double C22464 = C20368 * C50776;
    const double C31852 = C20368 * C50977;
    const double C33575 = C20368 * C1509;
    const double C20378 = C20370 * C50788;
    const double C21628 = C20370 * C50788;
    const double C31703 = C20370 * C50776;
    const double C20616 = C20610 * C843;
    const double C21742 = C20610 * C1743;
    const double C22351 = C20610 * C50776;
    const double C22629 = C20610 * C50977;
    const double C22626 = C20610 * C50788;
    const double C24422 = C20610 * C1509;
    const double C24420 = C20610 * C50788;
    const double C32152 = C20610 * C842;
    const double C33729 = C20610 * C51012;
    const double C20618 = C20612 * C843;
    const double C21748 = C20612 * C1743;
    const double C22466 = C20612 * C50776;
    const double C31854 = C20612 * C50788;
    const double C33577 = C20612 * C50788;
    const double C22640 = C22636 * C50788;
    const double C24424 = C22636 * C50788;
    const double C32154 = C22636 * C843;
    const double C33731 = C22636 * C1743;
    const double C22970 = C22967 + C22968;
    const double C39907 = C50687 * C6321;
    const double C49931 = C49908 + C49930;
    const double C50118 = C50113 - C50116;
    const double C6825 =
        2 * (C49823 * C50180 - (C50035 * ce) / C49831) -
        ((C50035 + C50181 * C50095) * ce) / C49831 +
        C49823 * (C50180 - (C49823 * C50181 * ce) / C49831 +
                  C49823 * (C49823 * C49980 *
                                ((-(ae * C49820 * C49912) / C49733) / C49692 -
                                 C49910 / C49831 +
                                 C49820 * ((-(C49820 * std::pow(C49825, 8) *
                                              bs[8] * C49836) /
                                            C49733) /
                                               C49692 -
                                           (ae * C49912) / C49831)) -
                            (C50181 * ce) / C49831));
    const double C2718 = C50692 * C610;
    const double C8554 = C7910 * C610;
    const double C17624 = C16980 * C610;
    const double C19902 = C50687 * C610;
    const double C25215 = C50692 * C610;
    const double C4020 = C50692 * C740;
    const double C8730 = C7910 * C740;
    const double C17800 = C16980 * C740;
    const double C26453 = C50692 * C740;
    const double C31302 = C50687 * C740;
    const double C6832 = C50692 * C978;
    const double C9046 = C7910 * C978;
    const double C18116 = C16980 * C978;
    const double C22010 = C50687 * C978;
    const double C28746 = C50692 * C978;
    const double C6038 = C50692 * C1068;
    const double C11896 = C7910 * C1068;
    const double C35001 = C16980 * C1068;
    const double C39367 = C50687 * C1068;
    const double C45330 = C50692 * C1068;
    const double C3045 = C50692 * C3016;
    const double C21032 = C50687 * C3016;
    const double C25518 = C50692 * C3016;
    const double C3392 = C50692 * C3220;
    const double C22360 = C50687 * C3220;
    const double C25845 = C50692 * C3220;
    const double C6200 =
        3 * (C50085 - (C50120 * ce) / C49831 + C49823 * C50127) -
        ((2 * C50120 + C49823 * C50128) * ce) / C49831 +
        C49823 * (2 * C50127 - (C50128 * ce) / C49831 +
                  C49823 * (C50121 - (C49823 * C50123 * ce) / C49831 +
                            C49823 * (C49823 * C49980 *
                                          ((-(C49820 * std::pow(C49825, 8) *
                                              bs[8] * C49836) /
                                            C49733) /
                                               C49692 -
                                           (ae * C49912) / C49831) -
                                      (C50123 * ce) / C49831)));
    const double C50157 = C50154 + C50155;
    const double C20154 = C20150 * C50776;
    const double C23073 =
        4 * (2 * C50141 - (C50138 * ce) / C49831 + C49823 * C50234) -
        ((3 * C50138 + C49823 * C50230) * ce) / C49831 +
        C49823 *
            (3 * C50234 - (C50230 * ce) / C49831 +
             C49823 *
                 (2 * C50232 - (C50224 * ce) / C49831 +
                  C49823 * ((-(C49823 * C50216 * ce) / C49733) / C49692 -
                            C50214 / C49831 +
                            C49823 * ((-(C49823 * C49980 * std::pow(C49825, 8) *
                                         bs[8] * C49836) /
                                       C49733) /
                                          C49692 -
                                      (C50216 * ce) / C49831))));
    const double C50264 = C50249 + C50263;
    const double C24902 = C24874 + C24875;
    const double C24900 = C24870 + C24871;
    const double C24898 = C24866 + C24867;
    const double C24896 = C24862 + C24863;
    const double C24894 = C24858 + C24859;
    const double C24892 = C24854 + C24855;
    const double C24890 = C24850 + C24851;
    const double C24888 = C24846 + C24847;
    const double C24886 = C24842 + C24843;
    const double C24884 = C24838 + C24839;
    const double C24882 = C24834 + C24835;
    const double C25226 = C25212 + C25213;
    const double C25224 = C25208 + C25209;
    const double C25223 = C25206 + C25207;
    const double C25221 = C25202 + C25203;
    const double C25344 = C25336 + C25337;
    const double C25342 = C25332 + C25333;
    const double C25530 = C25515 + C25516;
    const double C25528 = C25511 + C25512;
    const double C25527 = C25509 + C25510;
    const double C25525 = C25505 + C25506;
    const double C25522 = C25499 + C25500;
    const double C25520 = C25495 + C25496;
    const double C25852 = C25842 + C25843;
    const double C25850 = C25838 + C25839;
    const double C25848 = C25834 + C25835;
    const double C25846 = C25830 + C25831;
    const double C26460 = C26450 + C26451;
    const double C26458 = C26446 + C26447;
    const double C26456 = C26442 + C26443;
    const double C26454 = C26438 + C26439;
    const double C27773 = C27765 + C27766;
    const double C28006 = C27993 + C27994;
    const double C28004 = C27989 + C27990;
    const double C28001 = C27983 + C27984;
    const double C27999 = C27979 + C27980;
    const double C27998 = C27977 + C27978;
    const double C27996 = C27973 + C27974;
    const double C28760 = C28747 + C28748;
    const double C28758 = C28743 + C28744;
    const double C28756 = C28739 + C28740;
    const double C28754 = C28735 + C28736;
    const double C28751 = C28729 + C28730;
    const double C28749 = C28725 + C28726;
    const double C28969 = C28963 + C28964;
    const double C28967 = C28959 + C28960;
    const double C29112 = C29107 + C29108;
    const double C29110 = C29103 + C29104;
    const double C44782 = C44775 + C44776;
    const double C45336 = C45331 + C45332;
    const double C45334 = C45327 + C45328;
    const double C45594 = C45589 + C45590;
    const double C45592 = C45585 + C45586;
    const double C8093 = C7913 * C260;
    const double C8087 = C7913 * C254;
    const double C8081 = C7913 * C261;
    const double C8075 = C7913 * C255;
    const double C8069 = C7913 * C262;
    const double C8063 = C7913 * C256;
    const double C8427 = C7913 * C516;
    const double C8421 = C7913 * C507;
    const double C8419 = C7913 * C506;
    const double C8413 = C7913 * C515;
    const double C8549 = C7913 * C604;
    const double C8543 = C7913 * C600;
    const double C8725 = C7913 * C734;
    const double C8719 = C7913 * C718;
    const double C8717 = C7913 * C723;
    const double C8711 = C7913 * C711;
    const double C9041 = C7913 * C976;
    const double C9035 = C7913 * C968;
    const double C9643 = C7913 * C724;
    const double C9637 = C7913 * C712;
    const double C11053 = C7913 * C390;
    const double C11047 = C7913 * C380;
    const double C11037 = C7913 * C391;
    const double C11031 = C7913 * C381;
    const double C11029 = C7913 * C392;
    const double C11023 = C7913 * C382;
    const double C11631 = C7913 * C857;
    const double C11625 = C7913 * C848;
    const double C11615 = C7913 * C856;
    const double C11609 = C7913 * C847;
    const double C11899 = C7913 * C1066;
    const double C11893 = C7913 * C1058;
    const double C8095 = C7914 * C259;
    const double C8089 = C7914 * C253;
    const double C8083 = C7914 * C260;
    const double C8077 = C7914 * C254;
    const double C8071 = C7914 * C261;
    const double C8065 = C7914 * C255;
    const double C8429 = C7914 * C517;
    const double C8423 = C7914 * C508;
    const double C8417 = C7914 * C507;
    const double C8411 = C7914 * C516;
    const double C8551 = C7914 * C603;
    const double C8545 = C7914 * C599;
    const double C8727 = C7914 * C733;
    const double C8721 = C7914 * C717;
    const double C8715 = C7914 * C724;
    const double C8709 = C7914 * C712;
    const double C9043 = C7914 * C975;
    const double C9037 = C7914 * C967;
    const double C9645 = C7914 * C725;
    const double C9639 = C7914 * C713;
    const double C11051 = C7914 * C389;
    const double C11045 = C7914 * C379;
    const double C11039 = C7914 * C390;
    const double C11033 = C7914 * C380;
    const double C11027 = C7914 * C391;
    const double C11021 = C7914 * C381;
    const double C11629 = C7914 * C858;
    const double C11623 = C7914 * C849;
    const double C11617 = C7914 * C857;
    const double C11611 = C7914 * C848;
    const double C11897 = C7914 * C1065;
    const double C11891 = C7914 * C1057;
    const double C17163 = C16983 * C260;
    const double C17157 = C16983 * C254;
    const double C17151 = C16983 * C261;
    const double C17145 = C16983 * C255;
    const double C17139 = C16983 * C262;
    const double C17133 = C16983 * C256;
    const double C17497 = C16983 * C516;
    const double C17491 = C16983 * C507;
    const double C17489 = C16983 * C506;
    const double C17483 = C16983 * C515;
    const double C17619 = C16983 * C604;
    const double C17613 = C16983 * C600;
    const double C17795 = C16983 * C734;
    const double C17789 = C16983 * C718;
    const double C17787 = C16983 * C723;
    const double C17781 = C16983 * C711;
    const double C18111 = C16983 * C976;
    const double C18105 = C16983 * C968;
    const double C18713 = C16983 * C724;
    const double C18707 = C16983 * C712;
    const double C34158 = C16983 * C390;
    const double C34152 = C16983 * C380;
    const double C34142 = C16983 * C391;
    const double C34136 = C16983 * C381;
    const double C34134 = C16983 * C392;
    const double C34128 = C16983 * C382;
    const double C34736 = C16983 * C857;
    const double C34730 = C16983 * C848;
    const double C34720 = C16983 * C856;
    const double C34714 = C16983 * C847;
    const double C35004 = C16983 * C1066;
    const double C34998 = C16983 * C1058;
    const double C17165 = C16984 * C259;
    const double C17159 = C16984 * C253;
    const double C17153 = C16984 * C260;
    const double C17147 = C16984 * C254;
    const double C17141 = C16984 * C261;
    const double C17135 = C16984 * C255;
    const double C17499 = C16984 * C517;
    const double C17493 = C16984 * C508;
    const double C17487 = C16984 * C507;
    const double C17481 = C16984 * C516;
    const double C17621 = C16984 * C603;
    const double C17615 = C16984 * C599;
    const double C17797 = C16984 * C733;
    const double C17791 = C16984 * C717;
    const double C17785 = C16984 * C724;
    const double C17779 = C16984 * C712;
    const double C18113 = C16984 * C975;
    const double C18107 = C16984 * C967;
    const double C18715 = C16984 * C725;
    const double C18709 = C16984 * C713;
    const double C34156 = C16984 * C389;
    const double C34150 = C16984 * C379;
    const double C34144 = C16984 * C390;
    const double C34138 = C16984 * C380;
    const double C34132 = C16984 * C391;
    const double C34126 = C16984 * C381;
    const double C34734 = C16984 * C858;
    const double C34728 = C16984 * C849;
    const double C34722 = C16984 * C857;
    const double C34716 = C16984 * C848;
    const double C35002 = C16984 * C1065;
    const double C34996 = C16984 * C1057;
    const double C2721 = C2701 * C121;
    const double C3028 = C2701 * C377;
    const double C4855 = C2701 * C1511;
    const double C2852 = C2842 * C121;
    const double C3061 = C3059 * C378;
    const double C4857 = C3059 * C1512;
    const double C21743 = C19907 * C1744;
    const double C21737 = C19905 * C1744;
    const double C21731 = C19903 * C1744;
    const double C24577 = C20607 * C1744;
    const double C24571 = C20361 * C1744;
    const double C33726 = C20364 * C1744;
    const double C21745 = C20367 * C1745;
    const double C21739 = C20364 * C1745;
    const double C21733 = C20361 * C1745;
    const double C24579 = C22633 * C1745;
    const double C24573 = C20607 * C1745;
    const double C33728 = C20609 * C1745;
    const double C21631 = C21629 - C21280;
    const double C8092 = C7910 * C267;
    const double C17162 = C16980 * C267;
    const double C11044 = C7910 * C393;
    const double C34149 = C16980 * C393;
    const double C2368 = C50692 * C514;
    const double C8426 = C7910 * C514;
    const double C17496 = C16980 * C514;
    const double C24877 = C50692 * C514;
    const double C9642 = C7910 * C722;
    const double C13692 = C50692 * C722;
    const double C18712 = C16980 * C722;
    const double C27768 = C50692 * C722;
    const double C5442 = C50692 * C855;
    const double C11622 = C7910 * C855;
    const double C34727 = C16980 * C855;
    const double C44774 = C50692 * C855;
    const double C22021 = C22015 * C121;
    const double C39901 =
        5 * ((-3 * C50516) / C49733 + C49823 * C50594 -
             (C50515 * ce) / C49733) +
        C49823 *
            (4 * C50594 +
             C49823 * ((-3 * C50588) / C49733 +
                       C49823 * ((-2 * C50579) / C49733 -
                                 (C49823 *
                                  (C49823 * (C49823 * C49912 + C49961 * ce) +
                                   C49876 + C49823 * C49961 * ce)) /
                                     C49733 -
                                 (C50582 * ce) / C49733) -
                       (C50587 * ce) / C49733) -
             (C50591 * ce) / C49733) -
        ((4 * C50515 + C49823 * C50591) * ce) / C49733;
    const double C2732 = C2720 * C121;
    const double C50030 = C50012 + C50029;
    const double C969 = (C49980 * C50010 + C50033 * C50095) / C49692;
    const double C2722 = C2702 * C50776;
    const double C3029 = C2702 * C50977;
    const double C4856 = C2702 * C1509;
    const double C20146 = C19930 + C19929;
    const double C2392 = C2363 + C2364;
    const double C8110 = C8085 + C8086;
    const double C17180 = C17155 + C17156;
    const double C24901 = C24872 + C24873;
    const double C5467 = C5437 + C5438;
    const double C11066 = C11041 + C11042;
    const double C28005 = C27991 + C27992;
    const double C34171 = C34146 + C34147;
    const double C2395 = C2369 + C2370;
    const double C2388 = C2355 + C2356;
    const double C8433 = C8409 + C8410;
    const double C17503 = C17479 + C17480;
    const double C19918 = C19897 + C19898;
    const double C24904 = C24878 + C24879;
    const double C24897 = C24864 + C24865;
    const double C4024 = C4011 + C4012;
    const double C8734 = C8713 + C8714;
    const double C13699 = C13693 + C13694;
    const double C17804 = C17783 + C17784;
    const double C22014 = C22005 + C22006;
    const double C26457 = C26444 + C26445;
    const double C27775 = C27769 + C27770;
    const double C5472 = C5447 + C5448;
    const double C5464 = C5431 + C5432;
    const double C11638 = C11619 + C11620;
    const double C22204 = C22191 + C22192;
    const double C28755 = C28737 + C28738;
    const double C34743 = C34724 + C34725;
    const double C44784 = C44779 + C44780;
    const double C23574 = C22804 * C50788;
    const double C23930 = C22804 * C50788;
    const double C6335 = C6329 + C6330;
    const double C39735 = C39732 + C39733;
    const double C45593 = C45587 + C45588;
    const double C2851 = C2841 * C50776;
    const double C20145 = C19932 + C19931;
    const double C3062 = C3060 * C50788;
    const double C4858 = C3060 * C50788;
    const double C31602 = C22356 + C22355;
    const double C20382 = C20380 - C20376;
    const double C21632 = C21630 - C21284;
    const double C31701 = C22464 + C22463;
    const double C31856 = C31855 - C22626;
    const double C33579 = C33578 - C24420;
    const double C22972 = C22970 * C843;
    const double C24582 = C22970 * C1743;
    const double C39909 = C39906 + C39907;
    const double C149 =
        5 * (3 * C49891 + (C49889 * ae) / C49692 + C49820 * C49931) +
        ((4 * C49889 + C49820 * C49929) * ae) / C49692 +
        C49820 *
            (4 * C49931 + (C49929 * ae) / C49692 +
             C49820 *
                 (3 * C49928 + (C49925 * ae) / C49692 +
                  C49820 *
                      (2 * C49924 - (ae * C49918) / C49831 +
                       C49820 * ((-(ae * C49820 * C49912) / C49733) / C49692 -
                                 C49910 / C49831 +
                                 C49820 * ((-(C49820 * std::pow(C49825, 8) *
                                              bs[8] * C49836) /
                                            C49733) /
                                               C49692 -
                                           (ae * C49912) / C49831)))));
    const double C275 =
        (yP - yQ) * (3 * C49891 + (C49889 * ae) / C49692 + C49820 * C49931);
    const double C276 =
        (yP - yQ) *
        (4 * C49931 + (C49929 * ae) / C49692 +
         C49820 *
             (3 * C49928 + (C49925 * ae) / C49692 +
              C49820 * (2 * C49924 - (ae * C49918) / C49831 +
                        C49820 * ((-(ae * C49820 * C49912) / C49733) / C49692 -
                                  C49910 / C49831 +
                                  C49820 * ((-(C49820 * std::pow(C49825, 8) *
                                               bs[8] * C49836) /
                                             C49733) /
                                                C49692 -
                                            (ae * C49912) / C49831)))));
    const double C401 =
        C49823 * (3 * C49891 + (C49889 * ae) / C49692 + C49820 * C49931) -
        ((3 * (C49943 + C49820 * C49956 + C49950 * ae) +
          C49820 * (2 * C49956 +
                    C49820 * (C49952 +
                              C49820 * (C49820 * C49865 * C49866 * C49939 +
                                        C49951 * ae) +
                              C49820 * C49951 * ae) +
                    C49955 * ae) +
          (2 * C49950 + C49820 * C49955) * ae) *
         ce) /
            C49831;
    const double C402 =
        C49823 *
            (4 * C49931 + (C49929 * ae) / C49692 +
             C49820 *
                 (3 * C49928 + (C49925 * ae) / C49692 +
                  C49820 *
                      (2 * C49924 - (ae * C49918) / C49831 +
                       C49820 * ((-(ae * C49820 * C49912) / C49733) / C49692 -
                                 C49910 / C49831 +
                                 C49820 * ((-(C49820 * std::pow(C49825, 8) *
                                              bs[8] * C49836) /
                                            C49733) /
                                               C49692 -
                                           (ae * C49912) / C49831))))) -
        ((4 * (2 * C49956 + C49820 * C49973 + C49955 * ae) +
          C49820 *
              (3 * C49973 +
               C49820 * (2 * C49968 +
                         C49820 * (C49962 +
                                   C49820 * (C49820 * C49897 * C49898 * C49939 +
                                             C49961 * ae) +
                                   C49820 * C49961 * ae) +
                         C49967 * ae) +
               C49971 * ae) +
          (3 * C49955 + C49820 * C49971) * ae) *
         ce) /
            C49831;
    const double C524 = 2 * C49861 - (ae * C49858) / C49831 + C49820 * C49891 +
                        C49931 * std::pow(yP - yQ, 2);
    const double C525 =
        3 * C49891 + (C49889 * ae) / C49692 + C49820 * C49931 +
        (3 * C49928 + (C49925 * ae) / C49692 +
         C49820 *
             (2 * C49924 - (ae * C49918) / C49831 +
              C49820 *
                  ((-(ae * C49820 * C49912) / C49733) / C49692 -
                   C49910 / C49831 +
                   C49820 * ((-(C49820 * std::pow(C49825, 8) * bs[8] * C49836) /
                              C49733) /
                                 C49692 -
                             (ae * C49912) / C49831)))) *
            std::pow(yP - yQ, 2);
    const double C609 =
        2 * C49980 * C49931 +
        C49980 *
            (C49931 +
             (2 * C49924 - (ae * C49918) / C49831 +
              C49820 *
                  ((-(ae * C49820 * C49912) / C49733) / C49692 -
                   C49910 / C49831 +
                   C49820 * ((-(C49820 * std::pow(C49825, 8) * bs[8] * C49836) /
                              C49733) /
                                 C49692 -
                             (ae * C49912) / C49831))) *
                 std::pow(C49980, 2));
    const double C738 =
        C49823 * C49980 * C49931 -
        (C49980 * (2 * C49956 + C49820 * C49973 + C49955 * ae) * ce) / C49831;
    const double C739 =
        C49823 *
            (C49931 +
             (2 * C49924 - (ae * C49918) / C49831 +
              C49820 *
                  ((-(ae * C49820 * C49912) / C49733) / C49692 -
                   C49910 / C49831 +
                   C49820 * ((-(C49820 * std::pow(C49825, 8) * bs[8] * C49836) /
                              C49733) /
                                 C49692 -
                             (ae * C49912) / C49831))) *
                 C49989) -
        ((2 * C49956 + C49820 * C49973 + C49955 * ae +
          (2 * C49968 +
           C49820 *
               (C49962 +
                C49820 * (C49820 * C49897 * C49898 * C49939 + C49961 * ae) +
                C49820 * C49961 * ae) +
           C49967 * ae) *
              C49989) *
         ce) /
            C49831;
    const double C865 = 2 * C49861 - (ae * C49858) / C49831 + C49820 * C49891 -
                        (C49823 * C50010 * ce) / C49831 +
                        C49823 * (C49823 * C49931 - (C50010 * ce) / C49831);
    const double C977 =
        C49980 * C49931 - (C49823 * C50033 * ce) / C49831 +
        C49823 * (C49823 * C49980 *
                      (2 * C49924 - (ae * C49918) / C49831 +
                       C49820 * ((-(ae * C49820 * C49912) / C49733) / C49692 -
                                 C49910 / C49831 +
                                 C49820 * ((-(C49820 * std::pow(C49825, 8) *
                                              bs[8] * C49836) /
                                            C49733) /
                                               C49692 -
                                           (ae * C49912) / C49831))) -
                  (C50033 * ce) / C49831);
    const double C1067 =
        2 * (C49823 * C49931 - (C50010 * ce) / C49831) -
        ((C50010 + C50028 * std::pow(C49823, 2)) * ce) / C49831 +
        C49823 *
            (C49931 - (C49823 * C50028 * ce) / C49831 +
             C49823 *
                 (C49823 *
                      (2 * C49924 - (ae * C49918) / C49831 +
                       C49820 * ((-(ae * C49820 * C49912) / C49733) / C49692 -
                                 C49910 / C49831 +
                                 C49820 * ((-(C49820 * std::pow(C49825, 8) *
                                              bs[8] * C49836) /
                                            C49733) /
                                               C49692 -
                                           (ae * C49912) / C49831))) -
                  (C50028 * ce) / C49831));
    const double C6019 =
        3 * (C49891 - (C50112 * ce) / C49831 + C49823 * C50118) -
        ((2 * C50112 + C49823 * C50117) * ce) / C49831 +
        C49823 *
            (2 * C50118 - (C50117 * ce) / C49831 +
             C49823 *
                 (C49928 - (C49823 * C50025 * ce) / C49831 +
                  C49823 *
                      (C49823 * ((-(ae * C49820 * C49912) / C49733) / C49692 -
                                 C49910 / C49831 +
                                 C49820 * ((-(C49820 * std::pow(C49825, 8) *
                                              bs[8] * C49836) /
                                            C49733) /
                                               C49692 -
                                           (ae * C49912) / C49831)) -
                       (C50025 * ce) / C49831)));
    const double C2730 = C2717 + C2718;
    const double C8560 = C8553 + C8554;
    const double C17630 = C17623 + C17624;
    const double C19920 = C19901 + C19902;
    const double C25227 = C25214 + C25215;
    const double C4028 = C4019 + C4020;
    const double C8742 = C8729 + C8730;
    const double C17812 = C17799 + C17800;
    const double C26461 = C26452 + C26453;
    const double C31304 = C31301 + C31302;
    const double C6837 = C6831 + C6832;
    const double C9052 = C9045 + C9046;
    const double C18122 = C18115 + C18116;
    const double C22016 = C22009 + C22010;
    const double C28759 = C28745 + C28746;
    const double C6047 = C6037 + C6038;
    const double C11904 = C11895 + C11896;
    const double C35009 = C35000 + C35001;
    const double C39369 = C39366 + C39367;
    const double C45335 = C45329 + C45330;
    const double C3058 = C3044 + C3045;
    const double C21038 = C21031 + C21032;
    const double C25531 = C25517 + C25518;
    const double C3400 = C3391 + C3392;
    const double C22362 = C22359 + C22360;
    const double C25853 = C25844 + C25845;
    const double C6320 =
        4 * (2 * C50110 - (C50109 * ce) / C49831 + C49823 * C50157) -
        ((3 * C50109 + C49823 * C50156) * ce) / C49831 +
        C49823 *
            (3 * C50157 - (C50156 * ce) / C49831 +
             C49823 *
                 (2 * C50152 - (C50150 * ce) / C49831 +
                  C49823 *
                      (C49924 - (C49823 * C50022 * ce) / C49831 +
                       C49823 * (C49823 * ((-(C49820 * std::pow(C49825, 8) *
                                              bs[8] * C49836) /
                                            C49733) /
                                               C49692 -
                                           (ae * C49912) / C49831) -
                                 (C50022 * ce) / C49831))));
    const double C39902 =
        5 * (3 * C50178 - (C50173 * ce) / C49831 + C49823 * C50264) -
        ((4 * C50173 + C49823 * C50261) * ce) / C49831 +
        C49823 *
            (4 * C50264 - (C50261 * ce) / C49831 +
             C49823 *
                 (3 * C50262 - (C50255 * ce) / C49831 +
                  C49823 *
                      (2 * C50257 - (C50248 * ce) / C49831 +
                       C49823 * ((-(C49823 * C50019 * ce) / C49733) / C49692 -
                                 C49910 / C49831 +
                                 C49823 * ((-(C49823 * std::pow(C49825, 8) *
                                              bs[8] * C49836) /
                                            C49733) /
                                               C49692 -
                                           (C50019 * ce) / C49831)))));
    const double C25217 = C24895 + C24894;
    const double C25199 = C24888 + C24889;
    const double C25198 = C24886 + C24887;
    const double C25331 = C25222 + C25223;
    const double C25330 = C25220 + C25221;
    const double C25533 = C25526 + C25527;
    const double C28530 = C25527 + C25526;
    const double C25532 = C25524 + C25525;
    const double C28529 = C25525 + C25524;
    const double C28528 = C25522 + C25521;
    const double C28526 = C25521 + C25522;
    const double C28527 = C25520 + C25519;
    const double C28525 = C25519 + C25520;
    const double C28958 = C25849 + C25848;
    const double C28956 = C25848 + C25849;
    const double C28957 = C25847 + C25846;
    const double C28955 = C25846 + C25847;
    const double C29762 = C26455 + C26454;
    const double C29759 = C26454 + C26455;
    const double C45323 = C28753 + C28754;
    const double C45322 = C28751 + C28752;
    const double C45321 = C28749 + C28750;
    const double C45582 = C29111 + C29112;
    const double C45581 = C29109 + C29110;
    const double C8114 = C8093 + C8094;
    const double C8111 = C8087 + C8088;
    const double C8108 = C8081 + C8082;
    const double C8105 = C8075 + C8076;
    const double C8102 = C8069 + C8070;
    const double C8099 = C8063 + C8064;
    const double C8442 = C8427 + C8428;
    const double C8439 = C8421 + C8422;
    const double C8438 = C8419 + C8420;
    const double C8435 = C8413 + C8414;
    const double C8558 = C8549 + C8550;
    const double C8555 = C8543 + C8544;
    const double C8740 = C8725 + C8726;
    const double C8737 = C8719 + C8720;
    const double C8736 = C8717 + C8718;
    const double C8733 = C8711 + C8712;
    const double C9050 = C9041 + C9042;
    const double C9047 = C9035 + C9036;
    const double C9652 = C9643 + C9644;
    const double C9649 = C9637 + C9638;
    const double C11072 = C11053 + C11054;
    const double C11069 = C11047 + C11048;
    const double C11064 = C11037 + C11038;
    const double C11061 = C11031 + C11032;
    const double C11060 = C11029 + C11030;
    const double C11057 = C11023 + C11024;
    const double C11644 = C11631 + C11632;
    const double C11641 = C11625 + C11626;
    const double C11636 = C11615 + C11616;
    const double C11633 = C11609 + C11610;
    const double C11906 = C11899 + C11900;
    const double C11903 = C11893 + C11894;
    const double C8115 = C8095 + C8096;
    const double C8112 = C8089 + C8090;
    const double C8109 = C8083 + C8084;
    const double C8106 = C8077 + C8078;
    const double C8103 = C8071 + C8072;
    const double C8100 = C8065 + C8066;
    const double C8443 = C8429 + C8430;
    const double C8440 = C8423 + C8424;
    const double C8437 = C8417 + C8418;
    const double C8434 = C8411 + C8412;
    const double C8559 = C8551 + C8552;
    const double C8556 = C8545 + C8546;
    const double C8741 = C8727 + C8728;
    const double C8738 = C8721 + C8722;
    const double C8735 = C8715 + C8716;
    const double C8732 = C8709 + C8710;
    const double C9051 = C9043 + C9044;
    const double C9048 = C9037 + C9038;
    const double C9653 = C9645 + C9646;
    const double C9650 = C9639 + C9640;
    const double C11071 = C11051 + C11052;
    const double C11068 = C11045 + C11046;
    const double C11065 = C11039 + C11040;
    const double C11062 = C11033 + C11034;
    const double C11059 = C11027 + C11028;
    const double C11056 = C11021 + C11022;
    const double C11643 = C11629 + C11630;
    const double C11640 = C11623 + C11624;
    const double C11637 = C11617 + C11618;
    const double C11634 = C11611 + C11612;
    const double C11905 = C11897 + C11898;
    const double C11902 = C11891 + C11892;
    const double C17184 = C17163 + C17164;
    const double C17181 = C17157 + C17158;
    const double C17178 = C17151 + C17152;
    const double C17175 = C17145 + C17146;
    const double C17172 = C17139 + C17140;
    const double C17169 = C17133 + C17134;
    const double C17512 = C17497 + C17498;
    const double C17509 = C17491 + C17492;
    const double C17508 = C17489 + C17490;
    const double C17505 = C17483 + C17484;
    const double C17628 = C17619 + C17620;
    const double C17625 = C17613 + C17614;
    const double C17810 = C17795 + C17796;
    const double C17807 = C17789 + C17790;
    const double C17806 = C17787 + C17788;
    const double C17803 = C17781 + C17782;
    const double C18120 = C18111 + C18112;
    const double C18117 = C18105 + C18106;
    const double C18722 = C18713 + C18714;
    const double C18719 = C18707 + C18708;
    const double C34177 = C34158 + C34159;
    const double C34174 = C34152 + C34153;
    const double C34169 = C34142 + C34143;
    const double C34166 = C34136 + C34137;
    const double C34165 = C34134 + C34135;
    const double C34162 = C34128 + C34129;
    const double C34749 = C34736 + C34737;
    const double C34746 = C34730 + C34731;
    const double C34741 = C34720 + C34721;
    const double C34738 = C34714 + C34715;
    const double C35011 = C35004 + C35005;
    const double C35008 = C34998 + C34999;
    const double C17185 = C17165 + C17166;
    const double C17182 = C17159 + C17160;
    const double C17179 = C17153 + C17154;
    const double C17176 = C17147 + C17148;
    const double C17173 = C17141 + C17142;
    const double C17170 = C17135 + C17136;
    const double C17513 = C17499 + C17500;
    const double C17510 = C17493 + C17494;
    const double C17507 = C17487 + C17488;
    const double C17504 = C17481 + C17482;
    const double C17629 = C17621 + C17622;
    const double C17626 = C17615 + C17616;
    const double C17811 = C17797 + C17798;
    const double C17808 = C17791 + C17792;
    const double C17805 = C17785 + C17786;
    const double C17802 = C17779 + C17780;
    const double C18121 = C18113 + C18114;
    const double C18118 = C18107 + C18108;
    const double C18723 = C18715 + C18716;
    const double C18720 = C18709 + C18710;
    const double C34176 = C34156 + C34157;
    const double C34173 = C34150 + C34151;
    const double C34170 = C34144 + C34145;
    const double C34167 = C34138 + C34139;
    const double C34164 = C34132 + C34133;
    const double C34161 = C34126 + C34127;
    const double C34748 = C34734 + C34735;
    const double C34745 = C34728 + C34729;
    const double C34742 = C34722 + C34723;
    const double C34739 = C34716 + C34717;
    const double C35010 = C35002 + C35003;
    const double C35007 = C34996 + C34997;
    const double C8113 = C8091 + C8092;
    const double C17183 = C17161 + C17162;
    const double C11067 = C11043 + C11044;
    const double C34172 = C34148 + C34149;
    const double C2394 = C2367 + C2368;
    const double C8441 = C8425 + C8426;
    const double C17511 = C17495 + C17496;
    const double C24903 = C24876 + C24877;
    const double C9651 = C9641 + C9642;
    const double C13698 = C13691 + C13692;
    const double C18721 = C18711 + C18712;
    const double C27774 = C27767 + C27768;
    const double C5469 = C5441 + C5442;
    const double C11639 = C11621 + C11622;
    const double C34744 = C34726 + C34727;
    const double C44781 = C44773 + C44774;
    const double C50031 = C50030 + C50018;
    const double C2733 = C2721 + C2722;
    const double C3050 = C3028 + C3029;
    const double C4859 = C4855 + C4856;
    const double C2719 = C2388 + C2387;
    const double C19936 = C19918 * C50776;
    const double C25216 = C24897 + C24896;
    const double C15587 = C4024 + C4023;
    const double C15586 = C4023 + C4024;
    const double C22020 = C22014 * C50776;
    const double C29761 = C26457 + C26456;
    const double C29760 = C26456 + C26457;
    const double C6032 = C5464 + C5463;
    const double C45324 = C28755 + C28756;
    const double C2857 = C2851 + C2852;
    const double C8098 = C7910 * C275;
    const double C17168 = C16980 * C275;
    const double C11050 = C7910 * C401;
    const double C34155 = C16980 * C401;
    const double C2372 = C50692 * C524;
    const double C8432 = C7910 * C524;
    const double C17502 = C16980 * C524;
    const double C24881 = C50692 * C524;
    const double C9648 = C7910 * C738;
    const double C13696 = C50692 * C738;
    const double C18718 = C16980 * C738;
    const double C27772 = C50692 * C738;
    const double C5446 = C50692 * C865;
    const double C11628 = C7910 * C865;
    const double C34733 = C16980 * C865;
    const double C44778 = C50692 * C865;
    const double C19938 = C19920 * C50776;
    const double C31306 = C31304 * C50776;
    const double C22022 = C22016 * C50776;
    const double C21044 = C21038 * C50788;
    const double C21296 = C21038 * C50788;
    const double C31601 = C21038 * C50776;
    const double C22364 = C22362 * C50776;
    const double C32742 = C22362 * C50788;
    const double C33086 = C22362 * C50788;
    const double C25229 = C25217 * C121;
    const double C25219 = C25199 * C50776;
    const double C25502 = C25199 * C50977;
    const double C27289 = C25199 * C1509;
    const double C25218 = C25198 * C121;
    const double C25501 = C25198 * C377;
    const double C27288 = C25198 * C1511;
    const double C25341 = C25331 * C121;
    const double C25340 = C25330 * C50776;
    const double C25535 = C25533 * C50788;
    const double C27291 = C25533 * C50788;
    const double C25534 = C25532 * C378;
    const double C27290 = C25532 * C1512;
    const double C866 =
        3 * C49891 + (C49889 * ae) / C49692 + C49820 * C49931 -
        (C49823 * C50031 * ce) / C49831 +
        C49823 *
            (C49823 *
                 (3 * C49928 + (C49925 * ae) / C49692 +
                  C49820 *
                      (2 * C49924 - (ae * C49918) / C49831 +
                       C49820 * ((-(ae * C49820 * C49912) / C49733) / C49692 -
                                 C49910 / C49831 +
                                 C49820 * ((-(C49820 * std::pow(C49825, 8) *
                                              bs[8] * C49836) /
                                            C49733) /
                                               C49692 -
                                           (ae * C49912) / C49831)))) -
             (C50031 * ce) / C49831);
    const double C1410 =
        C49823 * C49980 *
            (3 * C49928 + (C49925 * ae) / C49692 +
             C49820 * (2 * C49924 - (ae * C49918) / C49831 +
                       C49820 * ((-(ae * C49820 * C49912) / C49733) / C49692 -
                                 C49910 / C49831 +
                                 C49820 * ((-(C49820 * std::pow(C49825, 8) *
                                              bs[8] * C49836) /
                                            C49733) /
                                               C49692 -
                                           (ae * C49912) / C49831)))) -
        (C49980 * C50031 * ce) / C49831;
    const double C142 = (5 * (3 * C50004 + C49820 * C50010 + C50284 * ae) +
                         C49820 * (4 * C50010 + C49820 * C50031 + C50290 * ae) +
                         (4 * C50284 + C49820 * C50290) * ae) /
                        C49692;
    const double C270 =
        (C49980 * (4 * C50010 + C49820 * C50031 + C50290 * ae)) / C49692;
    const double C395 =
        (C49823 * (4 * C50010 + C49820 * C50031 + C50290 * ae)) / C49692;
    const double C520 =
        (3 * C50004 + C49820 * C50010 + C50284 * ae + C50031 * C49989) / C49692;
    const double C860 =
        (3 * C50004 + C49820 * C50010 + C50284 * ae + C50031 * C50095) / C49692;
    const double C1408 = (C49823 * C49980 * C50031) / C49692;
    const double C3063 = C3050 - C3061;
    const double C4860 = C4859 - C4857;
    const double C2731 = C2719 * C50776;
    const double C25228 = C25216 * C50776;
    const double C8116 = C8097 + C8098;
    const double C17186 = C17167 + C17168;
    const double C11070 = C11049 + C11050;
    const double C34175 = C34154 + C34155;
    const double C2396 = C2371 + C2372;
    const double C8444 = C8431 + C8432;
    const double C17514 = C17501 + C17502;
    const double C24905 = C24880 + C24881;
    const double C9654 = C9647 + C9648;
    const double C13700 = C13695 + C13696;
    const double C18724 = C18717 + C18718;
    const double C27776 = C27771 + C27772;
    const double C5471 = C5445 + C5446;
    const double C11642 = C11627 + C11628;
    const double C34747 = C34732 + C34733;
    const double C44783 = C44777 + C44778;
    const double C25230 = C25218 + C25219;
    const double C25523 = C25501 + C25502;
    const double C27292 = C27288 + C27289;
    const double C25346 = C25340 + C25341;
    const double C3064 = C3063 - C3062;
    const double C4861 = C4860 - C4858;
    const double C2734 = C2731 + C2732;
    const double C25231 = C25228 + C25229;
    const double C25536 = C25523 - C25534;
    const double C27293 = C27292 - C27290;
    const double C25537 = C25536 - C25535;
    const double C27294 = C27293 - C27291;
    d2ee[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C7913 * C122 + C51019 * C129 + C7914 * C123 +
                     C51020 * C130 + C7915 * C124 + C7910 * C131) *
                        C121 +
                    (C7913 * C133 + C51019 * C143 + C7914 * C134 +
                     C51020 * C144 + C7915 * C135 + C7910 * C145) *
                        C50776) *
                       C50991 +
                   ((C8099 + C8100 + C8101) * C121 +
                    (C8102 + C8103 + C8104) * C50776) *
                       C50885) *
                      C50847 * C1169 -
                  (((C8433 + C8434 + C8435) * C50776 +
                    (C8436 + C8437 + C8438) * C121) *
                       C50885 +
                   ((C8104 + C8103 + C8102) * C50776 +
                    (C8101 + C8100 + C8099) * C121) *
                       C50991) *
                      C50847 * C50762) *
                     C51021 +
                 ((((C8105 + C8106 + C8107) * C121 +
                    (C8108 + C8109 + C8110) * C50776) *
                       C50991 +
                   ((C8439 + C8440 + C8441) * C121 +
                    (C8442 + C8443 + C8444) * C50776) *
                       C50885) *
                      C50847 * C50762 -
                  (((C8110 + C8109 + C8108) * C50776 +
                    (C8107 + C8106 + C8105) * C121) *
                       C50885 +
                   ((C7915 * C136 + C7910 * C146 + C7914 * C135 +
                     C51020 * C145 + C7913 * C134 + C51019 * C144) *
                        C50776 +
                    (C7915 * C125 + C7910 * C132 + C7914 * C124 +
                     C51020 * C131 + C7913 * C123 + C51019 * C130) *
                        C121) *
                       C50991) *
                      C50847 * C1169) *
                     C51006 +
                 ((((C7913 * C124 + C51019 * C131 + C7914 * C125 +
                     C51020 * C132 + C7915 * C126 + C7910 * C138) *
                        C121 +
                    (C7913 * C135 + C51019 * C145 + C7914 * C136 +
                     C51020 * C146 + C7915 * C137 + C7910 * C147) *
                        C50776) *
                       C50991 +
                   ((C8111 + C8112 + C8113) * C121 +
                    (C8114 + C8115 + C8116) * C50776) *
                       C50885) *
                      C50847 * C1169 -
                  (((C7915 * C519 + C7910 * C525 + C7914 * C518 +
                     C51020 * C524 + C7913 * C517 + C51019 * C523) *
                        C50776 +
                    (C7915 * C510 + C7910 * C520 + C7914 * C509 +
                     C51020 * C514 + C7913 * C508 + C51019 * C513) *
                        C121) *
                       C50885 +
                   ((C8116 + C8115 + C8114) * C50776 +
                    (C8113 + C8112 + C8111) * C121) *
                       C50991) *
                      C50847 * C50762) *
                     C1173)) /
               (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C7913 * C122 + C51019 * C129 + C7914 * C123 +
                     C51020 * C130 + C7915 * C124 + C7910 * C131) *
                        C121 +
                    (C7913 * C133 + C51019 * C143 + C7914 * C134 +
                     C51020 * C144 + C7915 * C135 + C7910 * C145) *
                        C50776) *
                       C50991 +
                   ((C8099 + C8100 + C8101) * C121 +
                    (C8102 + C8103 + C8104) * C50776) *
                       C50885) *
                      C50847 * C51022 -
                  (((C8433 + C8434 + C8435) * C50776 +
                    (C8436 + C8437 + C8438) * C121) *
                       C50885 +
                   ((C8104 + C8103 + C8102) * C50776 +
                    (C8101 + C8100 + C8099) * C121) *
                       C50991) *
                      C50847 * C51009 +
                  (((C8438 + C8437 + C8436) * C121 +
                    (C8435 + C8434 + C8433) * C50776) *
                       C50991 +
                   ((C8555 + C8556 + C8557) * C121 +
                    (C8558 + C8559 + C8560) * C50776) *
                       C50885) *
                      C50847 * C1274) *
                     C1275 +
                 ((((C8105 + C8106 + C8107) * C121 +
                    (C8108 + C8109 + C8110) * C50776) *
                       C50991 +
                   ((C8439 + C8440 + C8441) * C121 +
                    (C8442 + C8443 + C8444) * C50776) *
                       C50885) *
                      C50847 * C51009 -
                  (((C8110 + C8109 + C8108) * C50776 +
                    (C8107 + C8106 + C8105) * C121) *
                       C50885 +
                   ((C7915 * C136 + C7910 * C146 + C7914 * C135 +
                     C51020 * C145 + C7913 * C134 + C51019 * C144) *
                        C50776 +
                    (C7915 * C125 + C7910 * C132 + C7914 * C124 +
                     C51020 * C131 + C7913 * C123 + C51019 * C130) *
                        C121) *
                       C50991) *
                      C50847 * C51022 -
                  (((C7915 * C601 + C7910 * C609 + C7914 * C602 +
                     C51020 * C610 + C7913 * C603 + C51019 * C611) *
                        C50776 +
                    (C7915 * C597 + C7910 * C605 + C7914 * C598 +
                     C51020 * C606 + C7913 * C599 + C51019 * C607) *
                        C121) *
                       C50885 +
                   ((C8444 + C8443 + C8442) * C50776 +
                    (C8441 + C8440 + C8439) * C121) *
                       C50991) *
                      C50847 * C1274) *
                     C50719)) /
               (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
              C7915 * C124 + C7910 * C131) *
                 C377 +
             (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
              C7915 * C135 + C7910 * C145) *
                 C50977 -
             (C7915 * C380 + C7910 * C386 + C7914 * C381 + C51020 * C387 +
              C7913 * C382 + C51019 * C388) *
                 C378 -
             (C7915 * C390 + C7910 * C398 + C7914 * C391 + C51020 * C399 +
              C7913 * C392 + C51019 * C400) *
                 C50788) *
                C50991 +
            ((C8099 + C8100 + C8101) * C377 + (C8102 + C8103 + C8104) * C50977 -
             (C8731 + C8732 + C8733) * C378 -
             (C8734 + C8735 + C8736) * C50788) *
                C50885) *
               C50847 * C1169 +
           (((C8733 + C8732 + C8731) * C378 -
             ((C8104 + C8103 + C8102) * C50977 +
              (C8101 + C8100 + C8099) * C377) +
             (C8736 + C8735 + C8734) * C50788) *
                C50991 +
            ((C8737 + C8738 + C8739) * C378 -
             ((C8433 + C8434 + C8435) * C50977 +
              (C8436 + C8437 + C8438) * C377) +
             (C8740 + C8741 + C8742) * C50788) *
                C50885) *
               C50847 * C50762) *
              C1275 +
          ((((C7913 * C381 + C51019 * C387 + C7914 * C380 + C51020 * C386 +
              C7915 * C379 + C7910 * C385) *
                 C378 -
             ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51020 * C145 +
               C7913 * C134 + C51019 * C144) *
                  C50977 +
              (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51020 * C131 +
               C7913 * C123 + C51019 * C130) *
                  C377) +
             (C7913 * C391 + C51019 * C399 + C7914 * C390 + C51020 * C398 +
              C7915 * C389 + C7910 * C397) *
                 C50788) *
                C50991 +
            ((C9649 + C9650 + C9651) * C378 -
             ((C8110 + C8109 + C8108) * C50977 +
              (C8107 + C8106 + C8105) * C377) +
             (C9652 + C9653 + C9654) * C50788) *
                C50885) *
               C50847 * C1169 +
           (((C8105 + C8106 + C8107) * C377 + (C8108 + C8109 + C8110) * C50977 -
             (C9651 + C9650 + C9649) * C378 -
             (C9654 + C9653 + C9652) * C50788) *
                C50991 +
            ((C8439 + C8440 + C8441) * C377 + (C8442 + C8443 + C8444) * C50977 -
             (C7915 * C715 + C7910 * C727 + C7914 * C716 + C51020 * C728 +
              C7913 * C717 + C51019 * C729) *
                 C378 -
             (C7915 * C731 + C7910 * C739 + C7914 * C732 + C51020 * C740 +
              C7913 * C733 + C51019 * C741) *
                 C50788) *
                C50885) *
               C50847 * C50762) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
              C7915 * C124 + C7910 * C131) *
                 C1511 +
             (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
              C7915 * C135 + C7910 * C145) *
                 C1509 -
             (C7915 * C380 + C7910 * C386 + C7914 * C381 + C51020 * C387 +
              C7913 * C382 + C51019 * C388) *
                 C1512 -
             (C7915 * C390 + C7910 * C398 + C7914 * C391 + C51020 * C399 +
              C7913 * C392 + C51019 * C400) *
                 C50788) *
                C50991 +
            ((C8099 + C8100 + C8101) * C1511 + (C8102 + C8103 + C8104) * C1509 -
             (C8731 + C8732 + C8733) * C1512 -
             (C8734 + C8735 + C8736) * C50788) *
                C50885) *
               C50847 * C1169 +
           (((C8733 + C8732 + C8731) * C1512 -
             ((C8104 + C8103 + C8102) * C1509 +
              (C8101 + C8100 + C8099) * C1511) +
             (C8736 + C8735 + C8734) * C50788) *
                C50991 +
            ((C8737 + C8738 + C8739) * C1512 -
             ((C8433 + C8434 + C8435) * C1509 +
              (C8436 + C8437 + C8438) * C1511) +
             (C8740 + C8741 + C8742) * C50788) *
                C50885) *
               C50847 * C50762) *
              C50968 +
          ((((C7913 * C381 + C51019 * C387 + C7914 * C380 + C51020 * C386 +
              C7915 * C379 + C7910 * C385) *
                 C1512 -
             ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51020 * C145 +
               C7913 * C134 + C51019 * C144) *
                  C1509 +
              (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51020 * C131 +
               C7913 * C123 + C51019 * C130) *
                  C1511) +
             (C7913 * C391 + C51019 * C399 + C7914 * C390 + C51020 * C398 +
              C7915 * C389 + C7910 * C397) *
                 C50788) *
                C50991 +
            ((C9649 + C9650 + C9651) * C1512 -
             ((C8110 + C8109 + C8108) * C1509 +
              (C8107 + C8106 + C8105) * C1511) +
             (C9652 + C9653 + C9654) * C50788) *
                C50885) *
               C50847 * C1169 +
           (((C8105 + C8106 + C8107) * C1511 + (C8108 + C8109 + C8110) * C1509 -
             (C9651 + C9650 + C9649) * C1512 -
             (C9654 + C9653 + C9652) * C50788) *
                C50991 +
            ((C8439 + C8440 + C8441) * C1511 + (C8442 + C8443 + C8444) * C1509 -
             (C7915 * C715 + C7910 * C727 + C7914 * C716 + C51020 * C728 +
              C7913 * C717 + C51019 * C729) *
                 C1512 -
             (C7915 * C731 + C7910 * C739 + C7914 * C732 + C51020 * C740 +
              C7913 * C733 + C51019 * C741) *
                 C50788) *
                C50885) *
               C50847 * C50762) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
             C7915 * C124 + C7910 * C131) *
                C1511 +
            (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
             C7915 * C135 + C7910 * C145) *
                C1509 -
            (C7915 * C380 + C7910 * C386 + C7914 * C381 + C51020 * C387 +
             C7913 * C382 + C51019 * C388) *
                C1512 -
            (C7915 * C390 + C7910 * C398 + C7914 * C391 + C51020 * C399 +
             C7913 * C392 + C51019 * C400) *
                C50788) *
               C50991 +
           ((C8099 + C8100 + C8101) * C1511 + (C8102 + C8103 + C8104) * C1509 -
            (C8731 + C8732 + C8733) * C1512 -
            (C8734 + C8735 + C8736) * C50788) *
               C50885) *
              C50847 * C51022 +
          (((C8733 + C8732 + C8731) * C1512 -
            ((C8104 + C8103 + C8102) * C1509 +
             (C8101 + C8100 + C8099) * C1511) +
            (C8736 + C8735 + C8734) * C50788) *
               C50991 +
           ((C8737 + C8738 + C8739) * C1512 -
            ((C8433 + C8434 + C8435) * C1509 +
             (C8436 + C8437 + C8438) * C1511) +
            (C8740 + C8741 + C8742) * C50788) *
               C50885) *
              C50847 * C51009 +
          (((C8438 + C8437 + C8436) * C1511 + (C8435 + C8434 + C8433) * C1509 -
            (C8739 + C8738 + C8737) * C1512 -
            (C8742 + C8741 + C8740) * C50788) *
               C50991 +
           ((C8555 + C8556 + C8557) * C1511 + (C8558 + C8559 + C8560) * C1509 -
            (C7915 * C4000 + C7910 * C4001 + C7914 * C3004 + C51020 * C3008 +
             C7913 * C3003 + C51019 * C3007) *
                C1512 -
            (C7915 * C4002 + C7910 * C4003 + C7914 * C3010 + C51020 * C3016 +
             C7913 * C3009 + C51019 * C3015) *
                C50788) *
               C50885) *
              C50847 * C1274) *
         C50714) /
        (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
             C7915 * C124 + C7910 * C131) *
                C1744 +
            (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
             C7915 * C135 + C7910 * C145) *
                C51023 -
            (C7915 * C380 + C7910 * C386 + C7914 * C381 + C51020 * C387 +
             C7913 * C382 + C51019 * C388) *
                C1745 -
            (C7915 * C390 + C7910 * C398 + C7914 * C391 + C51020 * C399 +
             C7913 * C392 + C51019 * C400) *
                C51012 +
            (C7913 * C847 + C51019 * C852 + C7914 * C848 + C51020 * C853 +
             C7915 * C849 + C7910 * C854) *
                C1746 +
            (C7913 * C856 + C51019 * C862 + C7914 * C857 + C51020 * C863 +
             C7915 * C858 + C7910 * C864) *
                C1743) *
               C50991 +
           ((C8099 + C8100 + C8101) * C1744 + (C8102 + C8103 + C8104) * C51023 -
            (C8731 + C8732 + C8733) * C1745 - (C8734 + C8735 + C8736) * C51012 +
            (C9047 + C9048 + C9049) * C1746 + (C9050 + C9051 + C9052) * C1743) *
               C50885) *
              C50847 * C1169 +
          (((C8733 + C8732 + C8731) * C1745 -
            ((C8104 + C8103 + C8102) * C51023 +
             (C8101 + C8100 + C8099) * C1744) +
            (C8736 + C8735 + C8734) * C51012 - (C9049 + C9048 + C9047) * C1746 -
            (C9052 + C9051 + C9050) * C1743) *
               C50991 +
           ((C8737 + C8738 + C8739) * C1745 -
            ((C8433 + C8434 + C8435) * C51023 +
             (C8436 + C8437 + C8438) * C1744) +
            (C8740 + C8741 + C8742) * C51012 -
            (C7915 * C3212 + C7910 * C3217 + C7914 * C3211 + C51020 * C3214 +
             C7913 * C3210 + C51019 * C3213) *
                C1746 -
            (C7915 * C3218 + C7910 * C3221 + C7914 * C3216 + C51020 * C3220 +
             C7913 * C3215 + C51019 * C3219) *
                C1743) *
               C50885) *
              C50847 * C50762) *
         C50714) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
              C7915 * C124 + C7910 * C131) *
                 C121 +
             (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
              C7915 * C135 + C7910 * C145) *
                 C50776) *
                C50991 +
            ((C8099 + C8100 + C8101) * C121 +
             (C8102 + C8103 + C8104) * C50776) *
                C50885) *
               C50847 * C501 -
           (((C8433 + C8434 + C8435) * C50776 +
             (C8436 + C8437 + C8438) * C121) *
                C50885 +
            ((C8104 + C8103 + C8102) * C50776 +
             (C8101 + C8100 + C8099) * C121) *
                C50991) *
               C50847 * C502 +
           (((C8438 + C8437 + C8436) * C121 +
             (C8435 + C8434 + C8433) * C50776) *
                C50991 +
            ((C7913 * C600 + C51019 * C608 + C7914 * C599 + C51020 * C607 +
              C7915 * C598 + C7910 * C606) *
                 C121 +
             (C7913 * C604 + C51019 * C612 + C7914 * C603 + C51020 * C611 +
              C7915 * C602 + C7910 * C610) *
                 C50776) *
                C50885) *
               C50847 * C503) *
              C50968 +
          ((((C8105 + C8106 + C8107) * C121 +
             (C8108 + C8109 + C8110) * C50776) *
                C50991 +
            ((C8439 + C8440 + C8441) * C121 +
             (C8442 + C8443 + C8444) * C50776) *
                C50885) *
               C50847 * C502 -
           (((C8110 + C8109 + C8108) * C50776 +
             (C8107 + C8106 + C8105) * C121) *
                C50885 +
            ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51020 * C145 +
              C7913 * C134 + C51019 * C144) *
                 C50776 +
             (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51020 * C131 +
              C7913 * C123 + C51019 * C130) *
                 C121) *
                C50991) *
               C50847 * C501 -
           (((C7915 * C601 + C7910 * C609 + C7914 * C602 + C51020 * C610 +
              C7913 * C603 + C51019 * C611) *
                 C50776 +
             (C7915 * C597 + C7910 * C605 + C7914 * C598 + C51020 * C606 +
              C7913 * C599 + C51019 * C607) *
                 C121) *
                C50885 +
            ((C8444 + C8443 + C8442) * C50776 +
             (C8441 + C8440 + C8439) * C121) *
                C50991) *
               C50847 * C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
             C7915 * C124 + C7910 * C131) *
                C121 +
            (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
             C7915 * C135 + C7910 * C145) *
                C50776) *
               C50991 +
           ((C7913 * C256 + C51019 * C266 + C7914 * C255 + C51020 * C265 +
             C7915 * C254 + C7910 * C264) *
                C121 +
            (C7913 * C262 + C51019 * C274 + C7914 * C261 + C51020 * C273 +
             C7915 * C260 + C7910 * C272) *
                C50776) *
               C50885) *
              C50847 * C50746 * C113 -
          (((C7915 * C259 + C7910 * C271 + C7914 * C260 + C51020 * C272 +
             C7913 * C261 + C51019 * C273) *
                C50776 +
            (C7915 * C253 + C7910 * C263 + C7914 * C254 + C51020 * C264 +
             C7913 * C255 + C51019 * C265) *
                C121) *
               C50885 +
           ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51020 * C145 +
             C7913 * C134 + C51019 * C144) *
                C50776 +
            (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51020 * C131 +
             C7913 * C123 + C51019 * C130) *
                C121) *
               C50991) *
              C50847 * C50746 * C114 +
          (((C7913 * C124 + C51019 * C131 + C7914 * C125 + C51020 * C132 +
             C7915 * C126 + C7910 * C138) *
                C121 +
            (C7913 * C135 + C51019 * C145 + C7914 * C136 + C51020 * C146 +
             C7915 * C137 + C7910 * C147) *
                C50776) *
               C50991 +
           ((C7913 * C254 + C51019 * C264 + C7914 * C253 + C51020 * C263 +
             C7915 * C257 + C7910 * C267) *
                C121 +
            (C7913 * C260 + C51019 * C272 + C7914 * C259 + C51020 * C271 +
             C7915 * C268 + C7910 * C275) *
                C50776) *
               C50885) *
              C50847 * C50746 * C115 -
          (((C7915 * C269 + C7910 * C276 + C7914 * C268 + C51020 * C275 +
             C7913 * C259 + C51019 * C271) *
                C50776 +
            (C7915 * C258 + C7910 * C270 + C7914 * C257 + C51020 * C267 +
             C7913 * C253 + C51019 * C263) *
                C121) *
               C50885 +
           ((C7915 * C140 + C7910 * C148 + C7914 * C137 + C51020 * C147 +
             C7913 * C136 + C51019 * C146) *
                C50776 +
            (C7915 * C127 + C7910 * C139 + C7914 * C126 + C51020 * C138 +
             C7913 * C125 + C51019 * C132) *
                C121) *
               C50991) *
              C50847 * C50746 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
             C7915 * C124 + C7910 * C131) *
                C844 +
            (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
             C7915 * C135 + C7910 * C145) *
                C841 -
            (C7915 * C380 + C7910 * C386 + C7914 * C381 + C51020 * C387 +
             C7913 * C382 + C51019 * C388) *
                C845 -
            (C7915 * C390 + C7910 * C398 + C7914 * C391 + C51020 * C399 +
             C7913 * C392 + C51019 * C400) *
                C842 +
            (C7913 * C847 + C51019 * C852 + C7914 * C848 + C51020 * C853 +
             C7915 * C849 + C7910 * C854) *
                C846 +
            (C7913 * C856 + C51019 * C862 + C7914 * C857 + C51020 * C863 +
             C7915 * C858 + C7910 * C864) *
                C843) *
               C50991 +
           ((C8099 + C8100 + C8101) * C844 + (C8102 + C8103 + C8104) * C841 -
            (C8731 + C8732 + C8733) * C845 - (C8734 + C8735 + C8736) * C842 +
            (C7913 * C968 + C51019 * C972 + C7914 * C967 + C51020 * C971 +
             C7915 * C966 + C7910 * C970) *
                C846 +
            (C7913 * C976 + C51019 * C980 + C7914 * C975 + C51020 * C979 +
             C7915 * C974 + C7910 * C978) *
                C843) *
               C50885) *
              C50847 * C50746 * C50968 +
          (((C7913 * C381 + C51019 * C387 + C7914 * C380 + C51020 * C386 +
             C7915 * C379 + C7910 * C385) *
                C845 -
            ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51020 * C145 +
              C7913 * C134 + C51019 * C144) *
                 C841 +
             (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51020 * C131 +
              C7913 * C123 + C51019 * C130) *
                 C844) +
            (C7913 * C391 + C51019 * C399 + C7914 * C390 + C51020 * C398 +
             C7915 * C389 + C7910 * C397) *
                C842 -
            (C7915 * C850 + C7910 * C855 + C7914 * C849 + C51020 * C854 +
             C7913 * C848 + C51019 * C853) *
                C846 -
            (C7915 * C859 + C7910 * C865 + C7914 * C858 + C51020 * C864 +
             C7913 * C857 + C51019 * C863) *
                C843) *
               C50991 +
           ((C7913 * C712 + C51019 * C720 + C7914 * C713 + C51020 * C721 +
             C7915 * C714 + C7910 * C722) *
                C845 -
            ((C8110 + C8109 + C8108) * C841 + (C8107 + C8106 + C8105) * C844) +
            (C7913 * C724 + C51019 * C736 + C7914 * C725 + C51020 * C737 +
             C7915 * C726 + C7910 * C738) *
                C842 -
            (C7915 * C965 + C7910 * C969 + C7914 * C966 + C51020 * C970 +
             C7913 * C967 + C51019 * C971) *
                C846 -
            (C7915 * C973 + C7910 * C977 + C7914 * C974 + C51020 * C978 +
             C7913 * C975 + C51019 * C979) *
                C843) *
               C50885) *
              C50847 * C50746 * C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
             C7915 * C124 + C7910 * C131) *
                C121 +
            (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
             C7915 * C135 + C7910 * C145) *
                C50776) *
               C50991 +
           ((C8099 + C8100 + C8101) * C121 + (C8102 + C8103 + C8104) * C50776) *
               C50885) *
              C50847 * C592 -
          (((C8433 + C8434 + C8435) * C50776 + (C8436 + C8437 + C8438) * C121) *
               C50885 +
           ((C8104 + C8103 + C8102) * C50776 + (C8101 + C8100 + C8099) * C121) *
               C50991) *
              C50847 * C593 +
          (((C8438 + C8437 + C8436) * C121 + (C8435 + C8434 + C8433) * C50776) *
               C50991 +
           ((C8555 + C8556 + C8557) * C121 + (C8558 + C8559 + C8560) * C50776) *
               C50885) *
              C50847 * C594 -
          (((C7915 * C2695 + C7910 * C2699 + C7914 * C2694 + C51020 * C2698 +
             C7913 * C2693 + C51019 * C2697) *
                C50776 +
            (C7915 * C2690 + C7910 * C2696 + C7914 * C2689 + C51020 * C2692 +
             C7913 * C2688 + C51019 * C2691) *
                C121) *
               C50885 +
           ((C8560 + C8559 + C8558) * C50776 + (C8557 + C8556 + C8555) * C121) *
               C50991) *
              C50847 * C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
              C7915 * C124 + C7910 * C131) *
                 C121 +
             (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
              C7915 * C135 + C7910 * C145) *
                 C50776) *
                C50991 +
            ((C8099 + C8100 + C8101) * C121 +
             (C8102 + C8103 + C8104) * C50776) *
                C50885) *
               C50847 * C50975 -
           (((C7915 * C517 + C7910 * C523 + C7914 * C516 + C51020 * C522 +
              C7913 * C515 + C51019 * C521) *
                 C50776 +
             (C7915 * C508 + C7910 * C513 + C7914 * C507 + C51020 * C512 +
              C7913 * C506 + C51019 * C511) *
                 C121) *
                C50885 +
            ((C8104 + C8103 + C8102) * C50776 +
             (C8101 + C8100 + C8099) * C121) *
                C50991) *
               C50847 * C50762) *
              C250 +
          ((((C8105 + C8106 + C8107) * C121 +
             (C8108 + C8109 + C8110) * C50776) *
                C50991 +
            ((C7913 * C507 + C51019 * C512 + C7914 * C508 + C51020 * C513 +
              C7915 * C509 + C7910 * C514) *
                 C121 +
             (C7913 * C516 + C51019 * C522 + C7914 * C517 + C51020 * C523 +
              C7915 * C518 + C7910 * C524) *
                 C50776) *
                C50885) *
               C50847 * C50762 -
           (((C8110 + C8109 + C8108) * C50776 +
             (C8107 + C8106 + C8105) * C121) *
                C50885 +
            ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51020 * C145 +
              C7913 * C134 + C51019 * C144) *
                 C50776 +
             (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51020 * C131 +
              C7913 * C123 + C51019 * C130) *
                 C121) *
                C50991) *
               C50847 * C50975) *
              C251 +
          ((((C7913 * C124 + C51019 * C131 + C7914 * C125 + C51020 * C132 +
              C7915 * C126 + C7910 * C138) *
                 C121 +
             (C7913 * C135 + C51019 * C145 + C7914 * C136 + C51020 * C146 +
              C7915 * C137 + C7910 * C147) *
                 C50776) *
                C50991 +
            ((C8111 + C8112 + C8113) * C121 +
             (C8114 + C8115 + C8116) * C50776) *
                C50885) *
               C50847 * C50975 -
           (((C7915 * C519 + C7910 * C525 + C7914 * C518 + C51020 * C524 +
              C7913 * C517 + C51019 * C523) *
                 C50776 +
             (C7915 * C510 + C7910 * C520 + C7914 * C509 + C51020 * C514 +
              C7913 * C508 + C51019 * C513) *
                 C121) *
                C50885 +
            ((C8116 + C8115 + C8114) * C50776 +
             (C8113 + C8112 + C8111) * C121) *
                C50991) *
               C50847 * C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
             C7915 * C124 + C7910 * C131) *
                C844 +
            (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
             C7915 * C135 + C7910 * C145) *
                C841 -
            (C7915 * C380 + C7910 * C386 + C7914 * C381 + C51020 * C387 +
             C7913 * C382 + C51019 * C388) *
                C845 -
            (C7915 * C390 + C7910 * C398 + C7914 * C391 + C51020 * C399 +
             C7913 * C392 + C51019 * C400) *
                C842 +
            (C7913 * C847 + C51019 * C852 + C7914 * C848 + C51020 * C853 +
             C7915 * C849 + C7910 * C854) *
                C846 +
            (C7913 * C856 + C51019 * C862 + C7914 * C857 + C51020 * C863 +
             C7915 * C858 + C7910 * C864) *
                C843) *
               C50991 +
           ((C8099 + C8100 + C8101) * C844 + (C8102 + C8103 + C8104) * C841 -
            (C8731 + C8732 + C8733) * C845 - (C8734 + C8735 + C8736) * C842 +
            (C9047 + C9048 + C9049) * C846 + (C9050 + C9051 + C9052) * C843) *
               C50885) *
              C50847 * C50975 +
          (((C8733 + C8732 + C8731) * C845 -
            ((C8104 + C8103 + C8102) * C841 + (C8101 + C8100 + C8099) * C844) +
            (C8736 + C8735 + C8734) * C842 - (C9049 + C9048 + C9047) * C846 -
            (C9052 + C9051 + C9050) * C843) *
               C50991 +
           ((C8737 + C8738 + C8739) * C845 -
            ((C8433 + C8434 + C8435) * C841 + (C8436 + C8437 + C8438) * C844) +
            (C8740 + C8741 + C8742) * C842 -
            (C7915 * C3212 + C7910 * C3217 + C7914 * C3211 + C51020 * C3214 +
             C7913 * C3210 + C51019 * C3213) *
                C846 -
            (C7915 * C3218 + C7910 * C3221 + C7914 * C3216 + C51020 * C3220 +
             C7913 * C3215 + C51019 * C3219) *
                C843) *
               C50885) *
              C50847 * C50762) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
             C7915 * C124 + C7910 * C131) *
                C377 +
            (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
             C7915 * C135 + C7910 * C145) *
                C50977 -
            (C7915 * C380 + C7910 * C386 + C7914 * C381 + C51020 * C387 +
             C7913 * C382 + C51019 * C388) *
                C378 -
            (C7915 * C390 + C7910 * C398 + C7914 * C391 + C51020 * C399 +
             C7913 * C392 + C51019 * C400) *
                C50788) *
               C50991 +
           ((C8099 + C8100 + C8101) * C377 + (C8102 + C8103 + C8104) * C50977 -
            (C8731 + C8732 + C8733) * C378 - (C8734 + C8735 + C8736) * C50788) *
               C50885) *
              C50847 * C501 +
          (((C8733 + C8732 + C8731) * C378 -
            ((C8104 + C8103 + C8102) * C50977 +
             (C8101 + C8100 + C8099) * C377) +
            (C8736 + C8735 + C8734) * C50788) *
               C50991 +
           ((C8737 + C8738 + C8739) * C378 -
            ((C8433 + C8434 + C8435) * C50977 +
             (C8436 + C8437 + C8438) * C377) +
            (C8740 + C8741 + C8742) * C50788) *
               C50885) *
              C50847 * C502 +
          (((C8438 + C8437 + C8436) * C377 + (C8435 + C8434 + C8433) * C50977 -
            (C8739 + C8738 + C8737) * C378 - (C8742 + C8741 + C8740) * C50788) *
               C50991 +
           ((C8555 + C8556 + C8557) * C377 + (C8558 + C8559 + C8560) * C50977 -
            (C7915 * C4000 + C7910 * C4001 + C7914 * C3004 + C51020 * C3008 +
             C7913 * C3003 + C51019 * C3007) *
                C378 -
            (C7915 * C4002 + C7910 * C4003 + C7914 * C3010 + C51020 * C3016 +
             C7913 * C3009 + C51019 * C3015) *
                C50788) *
               C50885) *
              C50847 * C503) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
             C7915 * C124 + C7910 * C131) *
                C377 +
            (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
             C7915 * C135 + C7910 * C145) *
                C50977 -
            (C7915 * C380 + C7910 * C386 + C7914 * C381 + C51020 * C387 +
             C7913 * C382 + C51019 * C388) *
                C378 -
            (C7915 * C390 + C7910 * C398 + C7914 * C391 + C51020 * C399 +
             C7913 * C392 + C51019 * C400) *
                C50788) *
               C50991 +
           ((C8099 + C8100 + C8101) * C377 + (C8102 + C8103 + C8104) * C50977 -
            (C7915 * C713 + C7910 * C721 + C7914 * C712 + C51020 * C720 +
             C7913 * C711 + C51019 * C719) *
                C378 -
            (C7915 * C725 + C7910 * C737 + C7914 * C724 + C51020 * C736 +
             C7913 * C723 + C51019 * C735) *
                C50788) *
               C50885) *
              C50847 * C50746 * C250 +
          (((C7913 * C381 + C51019 * C387 + C7914 * C380 + C51020 * C386 +
             C7915 * C379 + C7910 * C385) *
                C378 -
            ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51020 * C145 +
              C7913 * C134 + C51019 * C144) *
                 C50977 +
             (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51020 * C131 +
              C7913 * C123 + C51019 * C130) *
                 C377) +
            (C7913 * C391 + C51019 * C399 + C7914 * C390 + C51020 * C398 +
             C7915 * C389 + C7910 * C397) *
                C50788) *
               C50991 +
           ((C7913 * C712 + C51019 * C720 + C7914 * C713 + C51020 * C721 +
             C7915 * C714 + C7910 * C722) *
                C378 -
            ((C8110 + C8109 + C8108) * C50977 +
             (C8107 + C8106 + C8105) * C377) +
            (C7913 * C724 + C51019 * C736 + C7914 * C725 + C51020 * C737 +
             C7915 * C726 + C7910 * C738) *
                C50788) *
               C50885) *
              C50847 * C50746 * C251 +
          (((C7913 * C124 + C51019 * C131 + C7914 * C125 + C51020 * C132 +
             C7915 * C126 + C7910 * C138) *
                C377 +
            (C7913 * C135 + C51019 * C145 + C7914 * C136 + C51020 * C146 +
             C7915 * C137 + C7910 * C147) *
                C50977 -
            (C7915 * C383 + C7910 * C393 + C7914 * C379 + C51020 * C385 +
             C7913 * C380 + C51019 * C386) *
                C378 -
            (C7915 * C394 + C7910 * C401 + C7914 * C389 + C51020 * C397 +
             C7913 * C390 + C51019 * C398) *
                C50788) *
               C50991 +
           ((C8111 + C8112 + C8113) * C377 + (C8114 + C8115 + C8116) * C50977 -
            (C7915 * C1407 + C7910 * C1408 + C7914 * C714 + C51020 * C722 +
             C7913 * C713 + C51019 * C721) *
                C378 -
            (C7915 * C1409 + C7910 * C1410 + C7914 * C726 + C51020 * C738 +
             C7913 * C725 + C51019 * C737) *
                C50788) *
               C50885) *
              C50847 * C50746 * C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
            C7915 * C124 + C7910 * C131) *
               C1051 +
           (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
            C7915 * C135 + C7910 * C145) *
               C1047 -
           (C7915 * C380 + C7910 * C386 + C7914 * C381 + C51020 * C387 +
            C7913 * C382 + C51019 * C388) *
               C1052 -
           (C7915 * C390 + C7910 * C398 + C7914 * C391 + C51020 * C399 +
            C7913 * C392 + C51019 * C400) *
               C1048 +
           (C7913 * C847 + C51019 * C852 + C7914 * C848 + C51020 * C853 +
            C7915 * C849 + C7910 * C854) *
               C1053 +
           (C7913 * C856 + C51019 * C862 + C7914 * C857 + C51020 * C863 +
            C7915 * C858 + C7910 * C864) *
               C1049 -
           (C7915 * C1056 + C7910 * C1060 + C7914 * C1057 + C51020 * C1061 +
            C7913 * C1058 + C51019 * C1062) *
               C1054 -
           (C7915 * C1064 + C7910 * C1068 + C7914 * C1065 + C51020 * C1069 +
            C7913 * C1066 + C51019 * C1070) *
               C1050) *
              C50991 +
          ((C8099 + C8100 + C8101) * C1051 + (C8102 + C8103 + C8104) * C1047 -
           (C8731 + C8732 + C8733) * C1052 - (C8734 + C8735 + C8736) * C1048 +
           (C9047 + C9048 + C9049) * C1053 + (C9050 + C9051 + C9052) * C1049 -
           (C7915 * C6822 + C7910 * C6823 + C7914 * C3498 + C51020 * C3502 +
            C7913 * C3499 + C51019 * C3503) *
               C1054 -
           (C7915 * C6824 + C7910 * C6825 + C7914 * C3504 + C51020 * C3510 +
            C7913 * C3505 + C51019 * C3511) *
               C1050) *
              C50885) *
         C50847 * C50746 * C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
             C7915 * C124 + C7910 * C131) *
                C1511 +
            (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
             C7915 * C135 + C7910 * C145) *
                C1509 -
            (C7915 * C380 + C7910 * C386 + C7914 * C381 + C51020 * C387 +
             C7913 * C382 + C51019 * C388) *
                C1512 -
            (C7915 * C390 + C7910 * C398 + C7914 * C391 + C51020 * C399 +
             C7913 * C392 + C51019 * C400) *
                C50788) *
               C50991 +
           ((C8099 + C8100 + C8101) * C1511 + (C8102 + C8103 + C8104) * C1509 -
            (C8731 + C8732 + C8733) * C1512 -
            (C8734 + C8735 + C8736) * C50788) *
               C50885) *
              C50847 * C50746 * C51021 +
          (((C7913 * C381 + C51019 * C387 + C7914 * C380 + C51020 * C386 +
             C7915 * C379 + C7910 * C385) *
                C1512 -
            ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51020 * C145 +
              C7913 * C134 + C51019 * C144) *
                 C1509 +
             (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51020 * C131 +
              C7913 * C123 + C51019 * C130) *
                 C1511) +
            (C7913 * C391 + C51019 * C399 + C7914 * C390 + C51020 * C398 +
             C7915 * C389 + C7910 * C397) *
                C50788) *
               C50991 +
           ((C9649 + C9650 + C9651) * C1512 -
            ((C8110 + C8109 + C8108) * C1509 +
             (C8107 + C8106 + C8105) * C1511) +
            (C9652 + C9653 + C9654) * C50788) *
               C50885) *
              C50847 * C50746 * C51006 +
          (((C7913 * C124 + C51019 * C131 + C7914 * C125 + C51020 * C132 +
             C7915 * C126 + C7910 * C138) *
                C1511 +
            (C7913 * C135 + C51019 * C145 + C7914 * C136 + C51020 * C146 +
             C7915 * C137 + C7910 * C147) *
                C1509 -
            (C7915 * C383 + C7910 * C393 + C7914 * C379 + C51020 * C385 +
             C7913 * C380 + C51019 * C386) *
                C1512 -
            (C7915 * C394 + C7910 * C401 + C7914 * C389 + C51020 * C397 +
             C7913 * C390 + C51019 * C398) *
                C50788) *
               C50991 +
           ((C8111 + C8112 + C8113) * C1511 + (C8114 + C8115 + C8116) * C1509 -
            (C7915 * C1407 + C7910 * C1408 + C7914 * C714 + C51020 * C722 +
             C7913 * C713 + C51019 * C721) *
                C1512 -
            (C7915 * C1409 + C7910 * C1410 + C7914 * C726 + C51020 * C738 +
             C7913 * C725 + C51019 * C737) *
                C50788) *
               C50885) *
              C50847 * C50746 * C1173)) /
        (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
              C7915 * C124 + C7910 * C131) *
                 C1511 +
             (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
              C7915 * C135 + C7910 * C145) *
                 C1509 -
             (C7915 * C380 + C7910 * C386 + C7914 * C381 + C51020 * C387 +
              C7913 * C382 + C51019 * C388) *
                 C1512 -
             (C7915 * C390 + C7910 * C398 + C7914 * C391 + C51020 * C399 +
              C7913 * C392 + C51019 * C400) *
                 C50788) *
                C50991 +
            ((C8099 + C8100 + C8101) * C1511 + (C8102 + C8103 + C8104) * C1509 -
             (C8731 + C8732 + C8733) * C1512 -
             (C8734 + C8735 + C8736) * C50788) *
                C50885) *
               C50847 * C50975 +
           (((C8733 + C8732 + C8731) * C1512 -
             ((C8104 + C8103 + C8102) * C1509 +
              (C8101 + C8100 + C8099) * C1511) +
             (C8736 + C8735 + C8734) * C50788) *
                C50991 +
            ((C8737 + C8738 + C8739) * C1512 -
             ((C8433 + C8434 + C8435) * C1509 +
              (C8436 + C8437 + C8438) * C1511) +
             (C8740 + C8741 + C8742) * C50788) *
                C50885) *
               C50847 * C50762) *
              C1275 +
          ((((C7913 * C381 + C51019 * C387 + C7914 * C380 + C51020 * C386 +
              C7915 * C379 + C7910 * C385) *
                 C1512 -
             ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51020 * C145 +
               C7913 * C134 + C51019 * C144) *
                  C1509 +
              (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51020 * C131 +
               C7913 * C123 + C51019 * C130) *
                  C1511) +
             (C7913 * C391 + C51019 * C399 + C7914 * C390 + C51020 * C398 +
              C7915 * C389 + C7910 * C397) *
                 C50788) *
                C50991 +
            ((C9649 + C9650 + C9651) * C1512 -
             ((C8110 + C8109 + C8108) * C1509 +
              (C8107 + C8106 + C8105) * C1511) +
             (C9652 + C9653 + C9654) * C50788) *
                C50885) *
               C50847 * C50975 +
           (((C8105 + C8106 + C8107) * C1511 + (C8108 + C8109 + C8110) * C1509 -
             (C9651 + C9650 + C9649) * C1512 -
             (C9654 + C9653 + C9652) * C50788) *
                C50991 +
            ((C8439 + C8440 + C8441) * C1511 + (C8442 + C8443 + C8444) * C1509 -
             (C7915 * C715 + C7910 * C727 + C7914 * C716 + C51020 * C728 +
              C7913 * C717 + C51019 * C729) *
                 C1512 -
             (C7915 * C731 + C7910 * C739 + C7914 * C732 + C51020 * C740 +
              C7913 * C733 + C51019 * C741) *
                 C50788) *
                C50885) *
               C50847 * C50762) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
             C7915 * C124 + C7910 * C131) *
                C1744 +
            (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
             C7915 * C135 + C7910 * C145) *
                C51023 -
            (C7915 * C380 + C7910 * C386 + C7914 * C381 + C51020 * C387 +
             C7913 * C382 + C51019 * C388) *
                C1745 -
            (C7915 * C390 + C7910 * C398 + C7914 * C391 + C51020 * C399 +
             C7913 * C392 + C51019 * C400) *
                C51012 +
            (C7913 * C847 + C51019 * C852 + C7914 * C848 + C51020 * C853 +
             C7915 * C849 + C7910 * C854) *
                C1746 +
            (C7913 * C856 + C51019 * C862 + C7914 * C857 + C51020 * C863 +
             C7915 * C858 + C7910 * C864) *
                C1743) *
               C50991 +
           ((C8099 + C8100 + C8101) * C1744 + (C8102 + C8103 + C8104) * C51023 -
            (C8731 + C8732 + C8733) * C1745 - (C8734 + C8735 + C8736) * C51012 +
            (C9047 + C9048 + C9049) * C1746 + (C9050 + C9051 + C9052) * C1743) *
               C50885) *
              C50847 * C50746 * C1275 +
          (((C7913 * C381 + C51019 * C387 + C7914 * C380 + C51020 * C386 +
             C7915 * C379 + C7910 * C385) *
                C1745 -
            ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51020 * C145 +
              C7913 * C134 + C51019 * C144) *
                 C51023 +
             (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51020 * C131 +
              C7913 * C123 + C51019 * C130) *
                 C1744) +
            (C7913 * C391 + C51019 * C399 + C7914 * C390 + C51020 * C398 +
             C7915 * C389 + C7910 * C397) *
                C51012 -
            (C7915 * C850 + C7910 * C855 + C7914 * C849 + C51020 * C854 +
             C7913 * C848 + C51019 * C853) *
                C1746 -
            (C7915 * C859 + C7910 * C865 + C7914 * C858 + C51020 * C864 +
             C7913 * C857 + C51019 * C863) *
                C1743) *
               C50991 +
           ((C9649 + C9650 + C9651) * C1745 -
            ((C8110 + C8109 + C8108) * C51023 +
             (C8107 + C8106 + C8105) * C1744) +
            (C9652 + C9653 + C9654) * C51012 -
            (C7915 * C965 + C7910 * C969 + C7914 * C966 + C51020 * C970 +
             C7913 * C967 + C51019 * C971) *
                C1746 -
            (C7915 * C973 + C7910 * C977 + C7914 * C974 + C51020 * C978 +
             C7913 * C975 + C51019 * C979) *
                C1743) *
               C50885) *
              C50847 * C50746 * C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[12] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C7913 * C122 + C51019 * C129 + C7914 * C123 +
                     C51020 * C130 + C7915 * C124 + C7910 * C131) *
                        C121 +
                    (C7913 * C133 + C51019 * C143 + C7914 * C134 +
                     C51020 * C144 + C7915 * C135 + C7910 * C145) *
                        C50776) *
                       C50991 +
                   ((C7913 * C256 + C51019 * C266 + C7914 * C255 +
                     C51020 * C265 + C7915 * C254 + C7910 * C264) *
                        C121 +
                    (C7913 * C262 + C51019 * C274 + C7914 * C261 +
                     C51020 * C273 + C7915 * C260 + C7910 * C272) *
                        C50776) *
                       C50885) *
                      C50847 * C50746 * C113 -
                  (((C7915 * C259 + C7910 * C271 + C7914 * C260 +
                     C51020 * C272 + C7913 * C261 + C51019 * C273) *
                        C50776 +
                    (C7915 * C253 + C7910 * C263 + C7914 * C254 +
                     C51020 * C264 + C7913 * C255 + C51019 * C265) *
                        C121) *
                       C50885 +
                   ((C7915 * C136 + C7910 * C146 + C7914 * C135 +
                     C51020 * C145 + C7913 * C134 + C51019 * C144) *
                        C50776 +
                    (C7915 * C125 + C7910 * C132 + C7914 * C124 +
                     C51020 * C131 + C7913 * C123 + C51019 * C130) *
                        C121) *
                       C50991) *
                      C50847 * C50746 * C114 +
                  (((C7913 * C124 + C51019 * C131 + C7914 * C125 +
                     C51020 * C132 + C7915 * C126 + C7910 * C138) *
                        C121 +
                    (C7913 * C135 + C51019 * C145 + C7914 * C136 +
                     C51020 * C146 + C7915 * C137 + C7910 * C147) *
                        C50776) *
                       C50991 +
                   ((C7913 * C254 + C51019 * C264 + C7914 * C253 +
                     C51020 * C263 + C7915 * C257 + C7910 * C267) *
                        C121 +
                    (C7913 * C260 + C51019 * C272 + C7914 * C259 +
                     C51020 * C271 + C7915 * C268 + C7910 * C275) *
                        C50776) *
                       C50885) *
                      C50847 * C50746 * C115 -
                  (((C7915 * C269 + C7910 * C276 + C7914 * C268 +
                     C51020 * C275 + C7913 * C259 + C51019 * C271) *
                        C50776 +
                    (C7915 * C258 + C7910 * C270 + C7914 * C257 +
                     C51020 * C267 + C7913 * C253 + C51019 * C263) *
                        C121) *
                       C50885 +
                   ((C7915 * C140 + C7910 * C148 + C7914 * C137 +
                     C51020 * C147 + C7913 * C136 + C51019 * C146) *
                        C50776 +
                    (C7915 * C127 + C7910 * C139 + C7914 * C126 +
                     C51020 * C138 + C7913 * C125 + C51019 * C132) *
                        C121) *
                       C50991) *
                      C50847 * C50746 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C7913 * C122 + C51019 * C129 + C7914 * C123 +
                      C51020 * C130 + C7915 * C124 + C7910 * C131) *
                         C121 +
                     (C7913 * C133 + C51019 * C143 + C7914 * C134 +
                      C51020 * C144 + C7915 * C135 + C7910 * C145) *
                         C50776) *
                        C50991 +
                    ((C8099 + C8100 + C8101) * C121 +
                     (C8102 + C8103 + C8104) * C50776) *
                        C50885) *
                       C50847 * C501 -
                   (((C8433 + C8434 + C8435) * C50776 +
                     (C8436 + C8437 + C8438) * C121) *
                        C50885 +
                    ((C8104 + C8103 + C8102) * C50776 +
                     (C8101 + C8100 + C8099) * C121) *
                        C50991) *
                       C50847 * C502 +
                   (((C8438 + C8437 + C8436) * C121 +
                     (C8435 + C8434 + C8433) * C50776) *
                        C50991 +
                    ((C7913 * C600 + C51019 * C608 + C7914 * C599 +
                      C51020 * C607 + C7915 * C598 + C7910 * C606) *
                         C121 +
                     (C7913 * C604 + C51019 * C612 + C7914 * C603 +
                      C51020 * C611 + C7915 * C602 + C7910 * C610) *
                         C50776) *
                        C50885) *
                       C50847 * C503) *
                      C50968 +
                  ((((C8105 + C8106 + C8107) * C121 +
                     (C8108 + C8109 + C8110) * C50776) *
                        C50991 +
                    ((C8439 + C8440 + C8441) * C121 +
                     (C8442 + C8443 + C8444) * C50776) *
                        C50885) *
                       C50847 * C502 -
                   (((C8110 + C8109 + C8108) * C50776 +
                     (C8107 + C8106 + C8105) * C121) *
                        C50885 +
                    ((C7915 * C136 + C7910 * C146 + C7914 * C135 +
                      C51020 * C145 + C7913 * C134 + C51019 * C144) *
                         C50776 +
                     (C7915 * C125 + C7910 * C132 + C7914 * C124 +
                      C51020 * C131 + C7913 * C123 + C51019 * C130) *
                         C121) *
                        C50991) *
                       C50847 * C501 -
                   (((C7915 * C601 + C7910 * C609 + C7914 * C602 +
                      C51020 * C610 + C7913 * C603 + C51019 * C611) *
                         C50776 +
                     (C7915 * C597 + C7910 * C605 + C7914 * C598 +
                      C51020 * C606 + C7913 * C599 + C51019 * C607) *
                         C121) *
                        C50885 +
                    ((C8444 + C8443 + C8442) * C50776 +
                     (C8441 + C8440 + C8439) * C121) *
                        C50991) *
                       C50847 * C503) *
                      C50719)) /
                    (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
              C7915 * C124 + C7910 * C131) *
                 C121 +
             (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
              C7915 * C135 + C7910 * C145) *
                 C50776) *
                C50991 +
            ((C8099 + C8100 + C8101) * C121 +
             (C8102 + C8103 + C8104) * C50776) *
                C50885) *
               C50847 * C50975 -
           (((C7915 * C517 + C7910 * C523 + C7914 * C516 + C51020 * C522 +
              C7913 * C515 + C51019 * C521) *
                 C50776 +
             (C7915 * C508 + C7910 * C513 + C7914 * C507 + C51020 * C512 +
              C7913 * C506 + C51019 * C511) *
                 C121) *
                C50885 +
            ((C8104 + C8103 + C8102) * C50776 +
             (C8101 + C8100 + C8099) * C121) *
                C50991) *
               C50847 * C50762) *
              C250 +
          ((((C8105 + C8106 + C8107) * C121 +
             (C8108 + C8109 + C8110) * C50776) *
                C50991 +
            ((C7913 * C507 + C51019 * C512 + C7914 * C508 + C51020 * C513 +
              C7915 * C509 + C7910 * C514) *
                 C121 +
             (C7913 * C516 + C51019 * C522 + C7914 * C517 + C51020 * C523 +
              C7915 * C518 + C7910 * C524) *
                 C50776) *
                C50885) *
               C50847 * C50762 -
           (((C8110 + C8109 + C8108) * C50776 +
             (C8107 + C8106 + C8105) * C121) *
                C50885 +
            ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51020 * C145 +
              C7913 * C134 + C51019 * C144) *
                 C50776 +
             (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51020 * C131 +
              C7913 * C123 + C51019 * C130) *
                 C121) *
                C50991) *
               C50847 * C50975) *
              C251 +
          ((((C7913 * C124 + C51019 * C131 + C7914 * C125 + C51020 * C132 +
              C7915 * C126 + C7910 * C138) *
                 C121 +
             (C7913 * C135 + C51019 * C145 + C7914 * C136 + C51020 * C146 +
              C7915 * C137 + C7910 * C147) *
                 C50776) *
                C50991 +
            ((C8111 + C8112 + C8113) * C121 +
             (C8114 + C8115 + C8116) * C50776) *
                C50885) *
               C50847 * C50975 -
           (((C7915 * C519 + C7910 * C525 + C7914 * C518 + C51020 * C524 +
              C7913 * C517 + C51019 * C523) *
                 C50776 +
             (C7915 * C510 + C7910 * C520 + C7914 * C509 + C51020 * C514 +
              C7913 * C508 + C51019 * C513) *
                 C121) *
                C50885 +
            ((C8116 + C8115 + C8114) * C50776 +
             (C8113 + C8112 + C8111) * C121) *
                C50991) *
               C50847 * C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
             C7915 * C124 + C7910 * C131) *
                C121 +
            (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
             C7915 * C135 + C7910 * C145) *
                C50776) *
               C50991 +
           ((C8099 + C8100 + C8101) * C121 + (C8102 + C8103 + C8104) * C50776) *
               C50885) *
              C50847 * C592 -
          (((C8433 + C8434 + C8435) * C50776 + (C8436 + C8437 + C8438) * C121) *
               C50885 +
           ((C8104 + C8103 + C8102) * C50776 + (C8101 + C8100 + C8099) * C121) *
               C50991) *
              C50847 * C593 +
          (((C8438 + C8437 + C8436) * C121 + (C8435 + C8434 + C8433) * C50776) *
               C50991 +
           ((C8555 + C8556 + C8557) * C121 + (C8558 + C8559 + C8560) * C50776) *
               C50885) *
              C50847 * C594 -
          (((C7915 * C2695 + C7910 * C2699 + C7914 * C2694 + C51020 * C2698 +
             C7913 * C2693 + C51019 * C2697) *
                C50776 +
            (C7915 * C2690 + C7910 * C2696 + C7914 * C2689 + C51020 * C2692 +
             C7913 * C2688 + C51019 * C2691) *
                C121) *
               C50885 +
           ((C8560 + C8559 + C8558) * C50776 + (C8557 + C8556 + C8555) * C121) *
               C50991) *
              C50847 * C595) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
             C7915 * C124 + C7910 * C131) *
                C377 +
            (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
             C7915 * C135 + C7910 * C145) *
                C50977 -
            (C7915 * C380 + C7910 * C386 + C7914 * C381 + C51020 * C387 +
             C7913 * C382 + C51019 * C388) *
                C378 -
            (C7915 * C390 + C7910 * C398 + C7914 * C391 + C51020 * C399 +
             C7913 * C392 + C51019 * C400) *
                C50788) *
               C50991 +
           ((C8099 + C8100 + C8101) * C377 + (C8102 + C8103 + C8104) * C50977 -
            (C7915 * C713 + C7910 * C721 + C7914 * C712 + C51020 * C720 +
             C7913 * C711 + C51019 * C719) *
                C378 -
            (C7915 * C725 + C7910 * C737 + C7914 * C724 + C51020 * C736 +
             C7913 * C723 + C51019 * C735) *
                C50788) *
               C50885) *
              C50847 * C50746 * C250 +
          (((C7913 * C381 + C51019 * C387 + C7914 * C380 + C51020 * C386 +
             C7915 * C379 + C7910 * C385) *
                C378 -
            ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51020 * C145 +
              C7913 * C134 + C51019 * C144) *
                 C50977 +
             (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51020 * C131 +
              C7913 * C123 + C51019 * C130) *
                 C377) +
            (C7913 * C391 + C51019 * C399 + C7914 * C390 + C51020 * C398 +
             C7915 * C389 + C7910 * C397) *
                C50788) *
               C50991 +
           ((C7913 * C712 + C51019 * C720 + C7914 * C713 + C51020 * C721 +
             C7915 * C714 + C7910 * C722) *
                C378 -
            ((C8110 + C8109 + C8108) * C50977 +
             (C8107 + C8106 + C8105) * C377) +
            (C7913 * C724 + C51019 * C736 + C7914 * C725 + C51020 * C737 +
             C7915 * C726 + C7910 * C738) *
                C50788) *
               C50885) *
              C50847 * C50746 * C251 +
          (((C7913 * C124 + C51019 * C131 + C7914 * C125 + C51020 * C132 +
             C7915 * C126 + C7910 * C138) *
                C377 +
            (C7913 * C135 + C51019 * C145 + C7914 * C136 + C51020 * C146 +
             C7915 * C137 + C7910 * C147) *
                C50977 -
            (C7915 * C383 + C7910 * C393 + C7914 * C379 + C51020 * C385 +
             C7913 * C380 + C51019 * C386) *
                C378 -
            (C7915 * C394 + C7910 * C401 + C7914 * C389 + C51020 * C397 +
             C7913 * C390 + C51019 * C398) *
                C50788) *
               C50991 +
           ((C8111 + C8112 + C8113) * C377 + (C8114 + C8115 + C8116) * C50977 -
            (C7915 * C1407 + C7910 * C1408 + C7914 * C714 + C51020 * C722 +
             C7913 * C713 + C51019 * C721) *
                C378 -
            (C7915 * C1409 + C7910 * C1410 + C7914 * C726 + C51020 * C738 +
             C7913 * C725 + C51019 * C737) *
                C50788) *
               C50885) *
              C50847 * C50746 * C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
             C7915 * C124 + C7910 * C131) *
                C377 +
            (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
             C7915 * C135 + C7910 * C145) *
                C50977 -
            (C7915 * C380 + C7910 * C386 + C7914 * C381 + C51020 * C387 +
             C7913 * C382 + C51019 * C388) *
                C378 -
            (C7915 * C390 + C7910 * C398 + C7914 * C391 + C51020 * C399 +
             C7913 * C392 + C51019 * C400) *
                C50788) *
               C50991 +
           ((C8099 + C8100 + C8101) * C377 + (C8102 + C8103 + C8104) * C50977 -
            (C8731 + C8732 + C8733) * C378 - (C8734 + C8735 + C8736) * C50788) *
               C50885) *
              C50847 * C501 +
          (((C8733 + C8732 + C8731) * C378 -
            ((C8104 + C8103 + C8102) * C50977 +
             (C8101 + C8100 + C8099) * C377) +
            (C8736 + C8735 + C8734) * C50788) *
               C50991 +
           ((C8737 + C8738 + C8739) * C378 -
            ((C8433 + C8434 + C8435) * C50977 +
             (C8436 + C8437 + C8438) * C377) +
            (C8740 + C8741 + C8742) * C50788) *
               C50885) *
              C50847 * C502 +
          (((C8438 + C8437 + C8436) * C377 + (C8435 + C8434 + C8433) * C50977 -
            (C8739 + C8738 + C8737) * C378 - (C8742 + C8741 + C8740) * C50788) *
               C50991 +
           ((C8555 + C8556 + C8557) * C377 + (C8558 + C8559 + C8560) * C50977 -
            (C7915 * C4000 + C7910 * C4001 + C7914 * C3004 + C51020 * C3008 +
             C7913 * C3003 + C51019 * C3007) *
                C378 -
            (C7915 * C4002 + C7910 * C4003 + C7914 * C3010 + C51020 * C3016 +
             C7913 * C3009 + C51019 * C3015) *
                C50788) *
               C50885) *
              C50847 * C503) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                  C121 +
              (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                  C50776) *
                 C50991 +
             ((C2373 + C2374) * C121 + (C2375 + C2376) * C50776) * C50885) *
                C50992 +
            (((C5450 + C5449) * C121 + (C5452 + C5451) * C50776) * C50991 +
             (C14415 * C121 + C14416 * C50776) * C50885) *
                C50911) *
               C1169 -
           (((C3060 * C50776 + C3059 * C121) * C50885 +
             (C14414 * C50776 + C14413 * C121) * C50991) *
                C50911 +
            (((C2380 + C2379) * C50776 + (C2378 + C2377) * C121) * C50885 +
             ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C50991) *
                C50992) *
               C50762) *
              C51021 +
          (((((C2381 + C2382) * C121 + (C2383 + C2384) * C50776) * C50991 +
             ((C2385 + C2386) * C121 + (C2387 + C2388) * C50776) * C50885) *
                C50992 +
            (((C4021 + C4022) * C121 + (C4023 + C4024) * C50776) * C50991 +
             ((C4025 + C4026) * C121 + (C4027 + C4028) * C50776) * C50885) *
                C50911) *
               C50762 -
           ((((C4024 + C4023) * C50776 + (C4022 + C4021) * C121) * C50885 +
             ((C5460 + C5459) * C50776 + (C5458 + C5457) * C121) * C50991) *
                C50911 +
            (((C2384 + C2383) * C50776 + (C2382 + C2381) * C121) * C50885 +
             ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                  C50776 +
              (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                  C121) *
                 C50991) *
                C50992) *
               C1169) *
              C51006 +
          (((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                  C121 +
              (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                  C50776) *
                 C50991 +
             ((C2389 + C2390) * C121 + (C2391 + C2392) * C50776) * C50885) *
                C50992 +
            (((C5466 + C5465) * C121 + (C5468 + C5467) * C50776) * C50991 +
             ((C13697 + C13698) * C121 + (C13699 + C13700) * C50776) * C50885) *
                C50911) *
               C1169 -
           ((((C2177 * C731 + C50692 * C739 + C2176 * C732 + C2171 * C740) *
                  C50776 +
              (C2177 * C715 + C50692 * C727 + C2176 * C716 + C2171 * C728) *
                  C121) *
                 C50885 +
             ((C13700 + C13699) * C50776 + (C13698 + C13697) * C121) * C50991) *
                C50911 +
            (((C2396 + C2395) * C50776 + (C2394 + C2393) * C121) * C50885 +
             ((C2392 + C2391) * C50776 + (C2390 + C2389) * C121) * C50991) *
                C50992) *
               C50762) *
              C1173)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                  C121 +
              (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                  C50776) *
                 C50991 +
             ((C2373 + C2374) * C121 + (C2375 + C2376) * C50776) * C50885) *
                C50992 +
            (((C5450 + C5449) * C121 + (C5452 + C5451) * C50776) * C50991 +
             (C14415 * C121 + C14416 * C50776) * C50885) *
                C50911) *
               C51022 -
           (((C3060 * C50776 + C3059 * C121) * C50885 +
             (C14414 * C50776 + C14413 * C121) * C50991) *
                C50911 +
            (((C2380 + C2379) * C50776 + (C2378 + C2377) * C121) * C50885 +
             ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C50991) *
                C50992) *
               C51009 +
           ((C2733 * C50991 +
             ((C2726 + C2725) * C121 + (C2724 + C2723) * C50776) * C50885) *
                C50992 +
            ((C14417 * C121 + C14418 * C50776) * C50991 +
             ((C3055 + C3056) * C121 + (C3057 + C3058) * C50776) * C50885) *
                C50911) *
               C1274) *
              C1275 +
          (((((C2381 + C2382) * C121 + (C2383 + C2384) * C50776) * C50991 +
             ((C2385 + C2386) * C121 + (C2387 + C2388) * C50776) * C50885) *
                C50992 +
            (((C4021 + C4022) * C121 + (C4023 + C4024) * C50776) * C50991 +
             ((C4025 + C4026) * C121 + (C4027 + C4028) * C50776) * C50885) *
                C50911) *
               C51009 -
           ((((C4024 + C4023) * C50776 + (C4022 + C4021) * C121) * C50885 +
             ((C5460 + C5459) * C50776 + (C5458 + C5457) * C121) * C50991) *
                C50911 +
            (((C2384 + C2383) * C50776 + (C2382 + C2381) * C121) * C50885 +
             ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                  C50776 +
              (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                  C121) *
                 C50991) *
                C50992) *
               C51022 -
           ((((C2177 * C4002 + C50692 * C4003 + C2176 * C3010 + C2171 * C3016) *
                  C50776 +
              (C2177 * C4000 + C50692 * C4001 + C2176 * C3004 + C2171 * C3008) *
                  C121) *
                 C50885 +
             ((C4028 + C4027) * C50776 + (C4026 + C4025) * C121) * C50991) *
                C50911 +
            (((C2730 + C2729) * C50776 + (C2728 + C2727) * C121) * C50885 +
             C2734 * C50991) *
                C50992) *
               C1274) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                  C377 +
              (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                  C50977 -
              (C5449 + C5450) * C378 - (C5451 + C5452) * C50788) *
                 C50991 +
             ((C2373 + C2374) * C377 + (C2375 + C2376) * C50977 -
              C14413 * C378 - C14414 * C50788) *
                 C50885) *
                C50992 +
            (((C5450 + C5449) * C377 + (C5452 + C5451) * C50977 -
              (C5453 + C5454) * C378 - (C5455 + C5456) * C50788) *
                 C50991 +
             (C14415 * C377 + C14416 * C50977 - C6203 * C378 - C6204 * C50788) *
                 C50885) *
                C50911) *
               C1169 +
           (((C14415 * C378 -
              ((C2376 + C2375) * C50977 + (C2374 + C2373) * C377) +
              C14416 * C50788) *
                 C50991 +
             (C14417 * C378 -
              ((C2380 + C2379) * C50977 + (C2378 + C2377) * C377) +
              C14418 * C50788) *
                 C50885) *
                C50992 +
            ((C14807 * C378 - (C14414 * C50977 + C14413 * C377) +
              C14808 * C50788) *
                 C50991 +
             ((C3397 + C3398) * C378 - (C3060 * C50977 + C3059 * C377) +
              (C3399 + C3400) * C50788) *
                 C50885) *
                C50911) *
               C50762) *
              C1275 +
          (((((C5457 + C5458) * C378 -
              ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                   C50977 +
               (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                   C377) +
              (C5459 + C5460) * C50788) *
                 C50991 +
             (C15585 * C378 -
              ((C2384 + C2383) * C50977 + (C2382 + C2381) * C377) +
              C15586 * C50788) *
                 C50885) *
                C50992 +
            (((C5461 + C5462) * C378 -
              ((C5460 + C5459) * C50977 + (C5458 + C5457) * C377) +
              (C5463 + C5464) * C50788) *
                 C50991 +
             ((C6836 + C6835) * C378 - (C15587 * C50977 + C15588 * C377) +
              (C6838 + C6837) * C50788) *
                 C50885) *
                C50911) *
               C1169 +
           ((((C2381 + C2382) * C377 + (C2383 + C2384) * C50977 -
              C15588 * C378 - C15587 * C50788) *
                 C50991 +
             ((C2385 + C2386) * C377 + (C2387 + C2388) * C50977 -
              (C4026 + C4025) * C378 - (C4028 + C4027) * C50788) *
                 C50885) *
                C50992 +
            ((C15585 * C377 + C15586 * C50977 - (C6835 + C6836) * C378 -
              (C6837 + C6838) * C50788) *
                 C50991 +
             ((C4025 + C4026) * C377 + (C4027 + C4028) * C50977 -
              (C2177 * C3212 + C50692 * C3217 + C2176 * C3211 + C2171 * C3214) *
                  C378 -
              (C2177 * C3218 + C50692 * C3221 + C2176 * C3216 + C2171 * C3220) *
                  C50788) *
                 C50885) *
                C50911) *
               C50762) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                  C1511 +
              (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                  C1509 -
              (C5449 + C5450) * C1512 - (C5451 + C5452) * C50788) *
                 C50991 +
             ((C2373 + C2374) * C1511 + (C2375 + C2376) * C1509 -
              C14413 * C1512 - C14414 * C50788) *
                 C50885) *
                C50992 +
            (((C5450 + C5449) * C1511 + (C5452 + C5451) * C1509 -
              (C5453 + C5454) * C1512 - (C5455 + C5456) * C50788) *
                 C50991 +
             (C14415 * C1511 + C14416 * C1509 - C6203 * C1512 -
              C6204 * C50788) *
                 C50885) *
                C50911) *
               C1169 +
           (((C14415 * C1512 -
              ((C2376 + C2375) * C1509 + (C2374 + C2373) * C1511) +
              C14416 * C50788) *
                 C50991 +
             (C14417 * C1512 -
              ((C2380 + C2379) * C1509 + (C2378 + C2377) * C1511) +
              C14418 * C50788) *
                 C50885) *
                C50992 +
            ((C14807 * C1512 - (C14414 * C1509 + C14413 * C1511) +
              C14808 * C50788) *
                 C50991 +
             ((C3397 + C3398) * C1512 - (C3060 * C1509 + C3059 * C1511) +
              (C3399 + C3400) * C50788) *
                 C50885) *
                C50911) *
               C50762) *
              C50968 +
          (((((C5457 + C5458) * C1512 -
              ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                   C1509 +
               (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                   C1511) +
              (C5459 + C5460) * C50788) *
                 C50991 +
             (C15585 * C1512 -
              ((C2384 + C2383) * C1509 + (C2382 + C2381) * C1511) +
              C15586 * C50788) *
                 C50885) *
                C50992 +
            (((C5461 + C5462) * C1512 -
              ((C5460 + C5459) * C1509 + (C5458 + C5457) * C1511) +
              (C5463 + C5464) * C50788) *
                 C50991 +
             ((C6836 + C6835) * C1512 - (C15587 * C1509 + C15588 * C1511) +
              (C6838 + C6837) * C50788) *
                 C50885) *
                C50911) *
               C1169 +
           ((((C2381 + C2382) * C1511 + (C2383 + C2384) * C1509 -
              C15588 * C1512 - C15587 * C50788) *
                 C50991 +
             ((C2385 + C2386) * C1511 + (C2387 + C2388) * C1509 -
              (C4026 + C4025) * C1512 - (C4028 + C4027) * C50788) *
                 C50885) *
                C50992 +
            ((C15585 * C1511 + C15586 * C1509 - (C6835 + C6836) * C1512 -
              (C6837 + C6838) * C50788) *
                 C50991 +
             ((C4025 + C4026) * C1511 + (C4027 + C4028) * C1509 -
              (C2177 * C3212 + C50692 * C3217 + C2176 * C3211 + C2171 * C3214) *
                  C1512 -
              (C2177 * C3218 + C50692 * C3221 + C2176 * C3216 + C2171 * C3220) *
                  C50788) *
                 C50885) *
                C50911) *
               C50762) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C1511 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C1509 -
             (C5449 + C5450) * C1512 - (C5451 + C5452) * C50788) *
                C50991 +
            ((C2373 + C2374) * C1511 + (C2375 + C2376) * C1509 -
             C14413 * C1512 - C14414 * C50788) *
                C50885) *
               C50992 +
           (((C5450 + C5449) * C1511 + (C5452 + C5451) * C1509 -
             (C5453 + C5454) * C1512 - (C5455 + C5456) * C50788) *
                C50991 +
            (C14415 * C1511 + C14416 * C1509 - C6203 * C1512 - C6204 * C50788) *
                C50885) *
               C50911) *
              C51022 +
          (((C14415 * C1512 -
             ((C2376 + C2375) * C1509 + (C2374 + C2373) * C1511) +
             C14416 * C50788) *
                C50991 +
            (C14417 * C1512 -
             ((C2380 + C2379) * C1509 + (C2378 + C2377) * C1511) +
             C14418 * C50788) *
                C50885) *
               C50992 +
           ((C14807 * C1512 - (C14414 * C1509 + C14413 * C1511) +
             C14808 * C50788) *
                C50991 +
            ((C3397 + C3398) * C1512 - (C3060 * C1509 + C3059 * C1511) +
             (C3399 + C3400) * C50788) *
                C50885) *
               C50911) *
              C51009 +
          ((C4861 * C50991 +
            ((C2726 + C2725) * C1511 + (C2724 + C2723) * C1509 -
             (C3056 + C3055) * C1512 - (C3058 + C3057) * C50788) *
                C50885) *
               C50992 +
           ((C14417 * C1511 + C14418 * C1509 - (C3398 + C3397) * C1512 -
             (C3400 + C3399) * C50788) *
                C50991 +
            ((C3055 + C3056) * C1511 + (C3057 + C3058) * C1509 -
             (C2177 * C3368 + C50692 * C3370 + C2176 * C3369 + C2171 * C3371) *
                 C1512 -
             (C2177 * C3372 + C50692 * C3374 + C2176 * C3373 + C2171 * C3375) *
                 C50788) *
                C50885) *
               C50911) *
              C1274) *
         C50714) /
        (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C1744 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C51023 -
             (C5449 + C5450) * C1745 - (C5451 + C5452) * C51012 +
             C6021 * C1746 + C6022 * C1743) *
                C50991 +
            ((C2373 + C2374) * C1744 + (C2375 + C2376) * C51023 -
             C14413 * C1745 - C14414 * C51012 + C14807 * C1746 +
             C14808 * C1743) *
                C50885) *
               C50992 +
           (((C5450 + C5449) * C1744 + (C5452 + C5451) * C51023 -
             (C5453 + C5454) * C1745 - (C5455 + C5456) * C51012 +
             (C6041 + C6042) * C1746 + (C6043 + C6044) * C1743) *
                C50991 +
            (C14415 * C1744 + C14416 * C51023 - C6203 * C1745 - C6204 * C51012 +
             (C6214 + C6213) * C1746 + (C6216 + C6215) * C1743) *
                C50885) *
               C50911) *
              C1169 +
          (((C14415 * C1745 -
             ((C2376 + C2375) * C51023 + (C2374 + C2373) * C1744) +
             C14416 * C51012 - C6203 * C1746 - C6204 * C1743) *
                C50991 +
            (C14417 * C1745 -
             ((C2380 + C2379) * C51023 + (C2378 + C2377) * C1744) +
             C14418 * C51012 - (C3398 + C3397) * C1746 -
             (C3400 + C3399) * C1743) *
                C50885) *
               C50992 +
           ((C14807 * C1745 - (C14414 * C51023 + C14413 * C1744) +
             C14808 * C51012 - (C6213 + C6214) * C1746 -
             (C6215 + C6216) * C1743) *
                C50991 +
            ((C3397 + C3398) * C1745 - (C3060 * C51023 + C3059 * C1744) +
             (C3399 + C3400) * C51012 -
             (C2177 * C3500 + C50692 * C3506 + C2176 * C3501 + C2171 * C3507) *
                 C1746 -
             (C2177 * C3508 + C50692 * C3512 + C2176 * C3509 + C2171 * C3513) *
                 C1743) *
                C50885) *
               C50911) *
              C50762) *
         C50714) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                  C121 +
              (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                  C50776) *
                 C50991 +
             ((C2373 + C2374) * C121 + (C2375 + C2376) * C50776) * C50885) *
                C50992 +
            (((C5450 + C5449) * C121 + (C5452 + C5451) * C50776) * C50991 +
             ((C3047 + C3046) * C121 + (C3049 + C3048) * C50776) * C50885) *
                C50911) *
               C501 -
           (((C3060 * C50776 + C3059 * C121) * C50885 +
             ((C3048 + C3049) * C50776 + (C3046 + C3047) * C121) * C50991) *
                C50911 +
            (((C2380 + C2379) * C50776 + (C2378 + C2377) * C121) * C50885 +
             ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C50991) *
                C50992) *
               C502 +
           ((C2733 * C50991 +
             ((C2726 + C2725) * C121 + (C2724 + C2723) * C50776) * C50885) *
                C50992 +
            (((C3052 + C3051) * C121 + (C3054 + C3053) * C50776) * C50991 +
             ((C3055 + C3056) * C121 + (C3057 + C3058) * C50776) * C50885) *
                C50911) *
               C503) *
              C50968 +
          (((((C2381 + C2382) * C121 + (C2383 + C2384) * C50776) * C50991 +
             ((C2385 + C2386) * C121 + (C2387 + C2388) * C50776) * C50885) *
                C50992 +
            (((C4021 + C4022) * C121 + (C4023 + C4024) * C50776) * C50991 +
             ((C4025 + C4026) * C121 + (C4027 + C4028) * C50776) * C50885) *
                C50911) *
               C502 -
           ((((C4024 + C4023) * C50776 + (C4022 + C4021) * C121) * C50885 +
             ((C5460 + C5459) * C50776 + (C5458 + C5457) * C121) * C50991) *
                C50911 +
            (((C2384 + C2383) * C50776 + (C2382 + C2381) * C121) * C50885 +
             ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                  C50776 +
              (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                  C121) *
                 C50991) *
                C50992) *
               C501 -
           ((((C2177 * C4002 + C50692 * C4003 + C2176 * C3010 + C2171 * C3016) *
                  C50776 +
              (C2177 * C4000 + C50692 * C4001 + C2176 * C3004 + C2171 * C3008) *
                  C121) *
                 C50885 +
             ((C4028 + C4027) * C50776 + (C4026 + C4025) * C121) * C50991) *
                C50911 +
            (((C2730 + C2729) * C50776 + (C2728 + C2727) * C121) * C50885 +
             C2734 * C50991) *
                C50992) *
               C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50776) *
                C50991 +
            ((C2373 + C2374) * C121 + (C2375 + C2376) * C50776) * C50885) *
               C50992 +
           (((C5450 + C5449) * C121 + (C5452 + C5451) * C50776) * C50991 +
            ((C3047 + C3046) * C121 + (C3049 + C3048) * C50776) * C50885) *
               C50911) *
              C50746 * C113 -
          ((((C4024 + C4023) * C50776 + (C4022 + C4021) * C121) * C50885 +
            ((C5460 + C5459) * C50776 + (C5458 + C5457) * C121) * C50991) *
               C50911 +
           (((C2384 + C2383) * C50776 + (C2382 + C2381) * C121) * C50885 +
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C50776 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C50991) *
               C50992) *
              C50746 * C114 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                 C50776) *
                C50991 +
            ((C2389 + C2390) * C121 + (C2391 + C2392) * C50776) * C50885) *
               C50992 +
           (((C5466 + C5465) * C121 + (C5468 + C5467) * C50776) * C50991 +
            ((C2176 * C713 + C2171 * C721 + C2177 * C714 + C50692 * C722) *
                 C121 +
             (C2176 * C725 + C2171 * C737 + C2177 * C726 + C50692 * C738) *
                 C50776) *
                C50885) *
               C50911) *
              C50746 * C115 -
          ((((C2177 * C1409 + C50692 * C1410 + C2176 * C726 + C2171 * C738) *
                 C50776 +
             (C2177 * C1407 + C50692 * C1408 + C2176 * C714 + C2171 * C722) *
                 C121) *
                C50885 +
            ((C2177 * C394 + C50692 * C401 + C2176 * C389 + C2171 * C397) *
                 C50776 +
             (C2177 * C383 + C50692 * C393 + C2176 * C379 + C2171 * C385) *
                 C121) *
                C50991) *
               C50911 +
           (((C2177 * C268 + C50692 * C275 + C2176 * C259 + C2171 * C271) *
                 C50776 +
             (C2177 * C257 + C50692 * C267 + C2176 * C253 + C2171 * C263) *
                 C121) *
                C50885 +
            ((C2177 * C137 + C50692 * C147 + C2176 * C136 + C2171 * C146) *
                 C50776 +
             (C2177 * C126 + C50692 * C138 + C2176 * C125 + C2171 * C132) *
                 C121) *
                C50991) *
               C50992) *
              C50746 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C844 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C841 -
             (C5449 + C5450) * C845 - (C5451 + C5452) * C842 + C6021 * C846 +
             C6022 * C843) *
                C50991 +
            ((C2373 + C2374) * C844 + (C2375 + C2376) * C841 - C14413 * C845 -
             C14414 * C842 + (C3393 + C3394) * C846 + (C3395 + C3396) * C843) *
                C50885) *
               C50992 +
           (((C5450 + C5449) * C844 + (C5452 + C5451) * C841 -
             (C5453 + C5454) * C845 - (C5455 + C5456) * C842 +
             (C6041 + C6042) * C846 + (C6043 + C6044) * C843) *
                C50991 +
            (C14415 * C844 + C14416 * C841 - C6203 * C845 - C6204 * C842 +
             (C6214 + C6213) * C846 + (C6216 + C6215) * C843) *
                C50885) *
               C50911) *
              C50746 * C50968 +
          ((((C5457 + C5458) * C845 -
             ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                  C841 +
              (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                  C844) +
             (C5459 + C5460) * C842 - C6031 * C846 - C6032 * C843) *
                C50991 +
            ((C4021 + C4022) * C845 -
             ((C2384 + C2383) * C841 + (C2382 + C2381) * C844) +
             (C4023 + C4024) * C842 - (C6835 + C6836) * C846 -
             (C6837 + C6838) * C843) *
                C50885) *
               C50992 +
           (((C5461 + C5462) * C845 -
             ((C5460 + C5459) * C841 + (C5458 + C5457) * C844) +
             (C5463 + C5464) * C842 - (C6045 + C6046) * C846 -
             (C6047 + C6048) * C843) *
                C50991 +
            ((C6836 + C6835) * C845 -
             ((C4024 + C4023) * C841 + (C4022 + C4021) * C844) +
             (C6838 + C6837) * C842 -
             (C2177 * C6822 + C50692 * C6823 + C2176 * C3498 + C2171 * C3502) *
                 C846 -
             (C2177 * C6824 + C50692 * C6825 + C2176 * C3504 + C2171 * C3510) *
                 C843) *
                C50885) *
               C50911) *
              C50746 * C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50776) *
                C50991 +
            ((C2373 + C2374) * C121 + (C2375 + C2376) * C50776) * C50885) *
               C50992 +
           (((C5450 + C5449) * C121 + (C5452 + C5451) * C50776) * C50991 +
            ((C3047 + C3046) * C121 + (C3049 + C3048) * C50776) * C50885) *
               C50911) *
              C592 -
          (((C3060 * C50776 + C3059 * C121) * C50885 +
            ((C3048 + C3049) * C50776 + (C3046 + C3047) * C121) * C50991) *
               C50911 +
           (((C2380 + C2379) * C50776 + (C2378 + C2377) * C121) * C50885 +
            ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C50991) *
               C50992) *
              C593 +
          ((C2733 * C50991 +
            ((C2726 + C2725) * C121 + (C2724 + C2723) * C50776) * C50885) *
               C50992 +
           (((C3052 + C3051) * C121 + (C3054 + C3053) * C50776) * C50991 +
            ((C3055 + C3056) * C121 + (C3057 + C3058) * C50776) * C50885) *
               C50911) *
              C594 -
          ((((C2177 * C3013 + C50692 * C3017 + C2176 * C3014 + C2171 * C3018) *
                 C50776 +
             (C2177 * C3005 + C50692 * C3011 + C2176 * C3006 + C2171 * C3012) *
                 C121) *
                C50885 +
            ((C3058 + C3057) * C50776 + (C3056 + C3055) * C121) * C50991) *
               C50911 +
           (((C2856 + C2855) * C50776 + (C2854 + C2853) * C121) * C50885 +
            C2857 * C50991) *
               C50992) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                  C121 +
              (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                  C50776) *
                 C50991 +
             ((C2373 + C2374) * C121 + (C2375 + C2376) * C50776) * C50885) *
                C50992 +
            (((C5450 + C5449) * C121 + (C5452 + C5451) * C50776) * C50991 +
             ((C3047 + C3046) * C121 + (C3049 + C3048) * C50776) * C50885) *
                C50911) *
               C50975 -
           (((C3060 * C50776 + C3059 * C121) * C50885 +
             ((C3048 + C3049) * C50776 + (C3046 + C3047) * C121) * C50991) *
                C50911 +
            (((C2380 + C2379) * C50776 + (C2378 + C2377) * C121) * C50885 +
             ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C50991) *
                C50992) *
               C50762) *
              C250 +
          (((((C2381 + C2382) * C121 + (C2383 + C2384) * C50776) * C50991 +
             ((C2385 + C2386) * C121 + (C2387 + C2388) * C50776) * C50885) *
                C50992 +
            (((C4021 + C4022) * C121 + (C4023 + C4024) * C50776) * C50991 +
             ((C4025 + C4026) * C121 + (C4027 + C4028) * C50776) * C50885) *
                C50911) *
               C50762 -
           ((((C4024 + C4023) * C50776 + (C4022 + C4021) * C121) * C50885 +
             ((C5460 + C5459) * C50776 + (C5458 + C5457) * C121) * C50991) *
                C50911 +
            (((C2384 + C2383) * C50776 + (C2382 + C2381) * C121) * C50885 +
             ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                  C50776 +
              (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                  C121) *
                 C50991) *
                C50992) *
               C50975) *
              C251 +
          (((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                  C121 +
              (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                  C50776) *
                 C50991 +
             ((C2389 + C2390) * C121 + (C2391 + C2392) * C50776) * C50885) *
                C50992 +
            (((C5466 + C5465) * C121 + (C5468 + C5467) * C50776) * C50991 +
             ((C13697 + C13698) * C121 + (C13699 + C13700) * C50776) * C50885) *
                C50911) *
               C50975 -
           ((((C2177 * C731 + C50692 * C739 + C2176 * C732 + C2171 * C740) *
                  C50776 +
              (C2177 * C715 + C50692 * C727 + C2176 * C716 + C2171 * C728) *
                  C121) *
                 C50885 +
             ((C13700 + C13699) * C50776 + (C13698 + C13697) * C121) * C50991) *
                C50911 +
            (((C2396 + C2395) * C50776 + (C2394 + C2393) * C121) * C50885 +
             ((C2392 + C2391) * C50776 + (C2390 + C2389) * C121) * C50991) *
                C50992) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C844 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C841 -
             (C5449 + C5450) * C845 - (C5451 + C5452) * C842 + C6021 * C846 +
             C6022 * C843) *
                C50991 +
            ((C2373 + C2374) * C844 + (C2375 + C2376) * C841 - C14413 * C845 -
             C14414 * C842 + C14807 * C846 + C14808 * C843) *
                C50885) *
               C50992 +
           (((C5450 + C5449) * C844 + (C5452 + C5451) * C841 -
             (C5453 + C5454) * C845 - (C5455 + C5456) * C842 +
             (C6041 + C6042) * C846 + (C6043 + C6044) * C843) *
                C50991 +
            (C14415 * C844 + C14416 * C841 - C6203 * C845 - C6204 * C842 +
             (C6214 + C6213) * C846 + (C6216 + C6215) * C843) *
                C50885) *
               C50911) *
              C50975 +
          (((C14415 * C845 - ((C2376 + C2375) * C841 + (C2374 + C2373) * C844) +
             C14416 * C842 - C6203 * C846 - C6204 * C843) *
                C50991 +
            (C14417 * C845 - ((C2380 + C2379) * C841 + (C2378 + C2377) * C844) +
             C14418 * C842 - (C3398 + C3397) * C846 - (C3400 + C3399) * C843) *
                C50885) *
               C50992 +
           ((C14807 * C845 - (C14414 * C841 + C14413 * C844) + C14808 * C842 -
             (C6213 + C6214) * C846 - (C6215 + C6216) * C843) *
                C50991 +
            ((C3397 + C3398) * C845 - (C3060 * C841 + C3059 * C844) +
             (C3399 + C3400) * C842 -
             (C2177 * C3500 + C50692 * C3506 + C2176 * C3501 + C2171 * C3507) *
                 C846 -
             (C2177 * C3508 + C50692 * C3512 + C2176 * C3509 + C2171 * C3513) *
                 C843) *
                C50885) *
               C50911) *
              C50762) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C377 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50977 -
             (C5449 + C5450) * C378 - (C5451 + C5452) * C50788) *
                C50991 +
            ((C2373 + C2374) * C377 + (C2375 + C2376) * C50977 - C14413 * C378 -
             C14414 * C50788) *
                C50885) *
               C50992 +
           (((C5450 + C5449) * C377 + (C5452 + C5451) * C50977 -
             (C5453 + C5454) * C378 - (C5455 + C5456) * C50788) *
                C50991 +
            (C14415 * C377 + C14416 * C50977 - C6203 * C378 - C6204 * C50788) *
                C50885) *
               C50911) *
              C501 +
          (((C14415 * C378 -
             ((C2376 + C2375) * C50977 + (C2374 + C2373) * C377) +
             C14416 * C50788) *
                C50991 +
            (C14417 * C378 -
             ((C2380 + C2379) * C50977 + (C2378 + C2377) * C377) +
             C14418 * C50788) *
                C50885) *
               C50992 +
           (((C3393 + C3394) * C378 - (C14414 * C50977 + C14413 * C377) +
             (C3395 + C3396) * C50788) *
                C50991 +
            ((C3397 + C3398) * C378 - (C3060 * C50977 + C3059 * C377) +
             (C3399 + C3400) * C50788) *
                C50885) *
               C50911) *
              C502 +
          ((C3064 * C50991 +
            ((C2726 + C2725) * C377 + (C2724 + C2723) * C50977 -
             (C3056 + C3055) * C378 - (C3058 + C3057) * C50788) *
                C50885) *
               C50992 +
           ((C14417 * C377 + C14418 * C50977 - (C3398 + C3397) * C378 -
             (C3400 + C3399) * C50788) *
                C50991 +
            ((C3055 + C3056) * C377 + (C3057 + C3058) * C50977 -
             (C2177 * C3368 + C50692 * C3370 + C2176 * C3369 + C2171 * C3371) *
                 C378 -
             (C2177 * C3372 + C50692 * C3374 + C2176 * C3373 + C2171 * C3375) *
                 C50788) *
                C50885) *
               C50911) *
              C503) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C377 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50977 -
             (C5449 + C5450) * C378 - (C5451 + C5452) * C50788) *
                C50991 +
            ((C2373 + C2374) * C377 + (C2375 + C2376) * C50977 -
             (C3046 + C3047) * C378 - (C3048 + C3049) * C50788) *
                C50885) *
               C50992 +
           (((C5450 + C5449) * C377 + (C5452 + C5451) * C50977 -
             (C5453 + C5454) * C378 - (C5455 + C5456) * C50788) *
                C50991 +
            ((C3047 + C3046) * C377 + (C3049 + C3048) * C50977 - C6203 * C378 -
             C6204 * C50788) *
                C50885) *
               C50911) *
              C50746 * C250 +
          ((((C5457 + C5458) * C378 -
             ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                  C50977 +
              (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                  C377) +
             (C5459 + C5460) * C50788) *
                C50991 +
            ((C4021 + C4022) * C378 -
             ((C2384 + C2383) * C50977 + (C2382 + C2381) * C377) +
             (C4023 + C4024) * C50788) *
                C50885) *
               C50992 +
           (((C5461 + C5462) * C378 -
             ((C5460 + C5459) * C50977 + (C5458 + C5457) * C377) +
             (C5463 + C5464) * C50788) *
                C50991 +
            ((C6836 + C6835) * C378 -
             ((C4024 + C4023) * C50977 + (C4022 + C4021) * C377) +
             (C6838 + C6837) * C50788) *
                C50885) *
               C50911) *
              C50746 * C251 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                 C377 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                 C50977 -
             (C5465 + C5466) * C378 - (C5467 + C5468) * C50788) *
                C50991 +
            ((C2389 + C2390) * C377 + (C2391 + C2392) * C50977 -
             (C13698 + C13697) * C378 - (C13700 + C13699) * C50788) *
                C50885) *
               C50992 +
           (((C5466 + C5465) * C377 + (C5468 + C5467) * C50977 -
             (C5469 + C5470) * C378 - (C5471 + C5472) * C50788) *
                C50991 +
            ((C13697 + C13698) * C377 + (C13699 + C13700) * C50977 -
             (C2177 * C965 + C50692 * C969 + C2176 * C966 + C2171 * C970) *
                 C378 -
             (C2177 * C973 + C50692 * C977 + C2176 * C974 + C2171 * C978) *
                 C50788) *
                C50885) *
               C50911) *
              C50746 * C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C1051 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C1047 -
            (C5449 + C5450) * C1052 - (C5451 + C5452) * C1048 + C6021 * C1053 +
            C6022 * C1049 - C6323 * C1054 - C6324 * C1050) *
               C50991 +
           ((C2373 + C2374) * C1051 + (C2375 + C2376) * C1047 - C14413 * C1052 -
            C14414 * C1048 + C14807 * C1053 + C14808 * C1049 -
            (C6213 + C6214) * C1054 - (C6215 + C6216) * C1050) *
               C50885) *
              C50992 +
          (((C5450 + C5449) * C1051 + (C5452 + C5451) * C1047 -
            (C5453 + C5454) * C1052 - (C5455 + C5456) * C1048 +
            (C6041 + C6042) * C1053 + (C6043 + C6044) * C1049 -
            (C6333 + C6334) * C1054 - (C6335 + C6336) * C1050) *
               C50991 +
           (C14415 * C1051 + C14416 * C1047 - C6203 * C1052 - C6204 * C1048 +
            (C6214 + C6213) * C1053 + (C6216 + C6215) * C1049 -
            (C2177 * C6194 + C50692 * C6196 + C2176 * C6195 + C2171 * C6197) *
                C1054 -
            (C2177 * C6198 + C50692 * C6200 + C2176 * C6199 + C2171 * C6201) *
                C1050) *
               C50885) *
              C50911) *
         C50746 * C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C1511 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C1509 -
             (C5449 + C5450) * C1512 - (C5451 + C5452) * C50788) *
                C50991 +
            ((C2373 + C2374) * C1511 + (C2375 + C2376) * C1509 -
             C14413 * C1512 - C14414 * C50788) *
                C50885) *
               C50992 +
           (((C5450 + C5449) * C1511 + (C5452 + C5451) * C1509 -
             (C5453 + C5454) * C1512 - (C5455 + C5456) * C50788) *
                C50991 +
            (C14415 * C1511 + C14416 * C1509 - C6203 * C1512 - C6204 * C50788) *
                C50885) *
               C50911) *
              C50746 * C51021 +
          ((((C5457 + C5458) * C1512 -
             ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                  C1509 +
              (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                  C1511) +
             (C5459 + C5460) * C50788) *
                C50991 +
            (C15585 * C1512 -
             ((C2384 + C2383) * C1509 + (C2382 + C2381) * C1511) +
             C15586 * C50788) *
                C50885) *
               C50992 +
           (((C5461 + C5462) * C1512 -
             ((C5460 + C5459) * C1509 + (C5458 + C5457) * C1511) +
             (C5463 + C5464) * C50788) *
                C50991 +
            ((C6836 + C6835) * C1512 - (C15587 * C1509 + C15588 * C1511) +
             (C6838 + C6837) * C50788) *
                C50885) *
               C50911) *
              C50746 * C51006 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                 C1511 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                 C1509 -
             (C5465 + C5466) * C1512 - (C5467 + C5468) * C50788) *
                C50991 +
            ((C2389 + C2390) * C1511 + (C2391 + C2392) * C1509 -
             (C13698 + C13697) * C1512 - (C13700 + C13699) * C50788) *
                C50885) *
               C50992 +
           (((C5466 + C5465) * C1511 + (C5468 + C5467) * C1509 -
             (C5469 + C5470) * C1512 - (C5471 + C5472) * C50788) *
                C50991 +
            ((C13697 + C13698) * C1511 + (C13699 + C13700) * C1509 -
             (C2177 * C965 + C50692 * C969 + C2176 * C966 + C2171 * C970) *
                 C1512 -
             (C2177 * C973 + C50692 * C977 + C2176 * C974 + C2171 * C978) *
                 C50788) *
                C50885) *
               C50911) *
              C50746 * C1173)) /
        (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                  C1511 +
              (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                  C1509 -
              (C5449 + C5450) * C1512 - (C5451 + C5452) * C50788) *
                 C50991 +
             ((C2373 + C2374) * C1511 + (C2375 + C2376) * C1509 -
              C14413 * C1512 - C14414 * C50788) *
                 C50885) *
                C50992 +
            (((C5450 + C5449) * C1511 + (C5452 + C5451) * C1509 -
              (C5453 + C5454) * C1512 - (C5455 + C5456) * C50788) *
                 C50991 +
             (C14415 * C1511 + C14416 * C1509 - C6203 * C1512 -
              C6204 * C50788) *
                 C50885) *
                C50911) *
               C50975 +
           (((C14415 * C1512 -
              ((C2376 + C2375) * C1509 + (C2374 + C2373) * C1511) +
              C14416 * C50788) *
                 C50991 +
             (C14417 * C1512 -
              ((C2380 + C2379) * C1509 + (C2378 + C2377) * C1511) +
              C14418 * C50788) *
                 C50885) *
                C50992 +
            ((C14807 * C1512 - (C14414 * C1509 + C14413 * C1511) +
              C14808 * C50788) *
                 C50991 +
             ((C3397 + C3398) * C1512 - (C3060 * C1509 + C3059 * C1511) +
              (C3399 + C3400) * C50788) *
                 C50885) *
                C50911) *
               C50762) *
              C1275 +
          (((((C5457 + C5458) * C1512 -
              ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                   C1509 +
               (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                   C1511) +
              (C5459 + C5460) * C50788) *
                 C50991 +
             (C15585 * C1512 -
              ((C2384 + C2383) * C1509 + (C2382 + C2381) * C1511) +
              C15586 * C50788) *
                 C50885) *
                C50992 +
            (((C5461 + C5462) * C1512 -
              ((C5460 + C5459) * C1509 + (C5458 + C5457) * C1511) +
              (C5463 + C5464) * C50788) *
                 C50991 +
             ((C6836 + C6835) * C1512 - (C15587 * C1509 + C15588 * C1511) +
              (C6838 + C6837) * C50788) *
                 C50885) *
                C50911) *
               C50975 +
           ((((C2381 + C2382) * C1511 + (C2383 + C2384) * C1509 -
              C15588 * C1512 - C15587 * C50788) *
                 C50991 +
             ((C2385 + C2386) * C1511 + (C2387 + C2388) * C1509 -
              (C4026 + C4025) * C1512 - (C4028 + C4027) * C50788) *
                 C50885) *
                C50992 +
            ((C15585 * C1511 + C15586 * C1509 - (C6835 + C6836) * C1512 -
              (C6837 + C6838) * C50788) *
                 C50991 +
             ((C4025 + C4026) * C1511 + (C4027 + C4028) * C1509 -
              (C2177 * C3212 + C50692 * C3217 + C2176 * C3211 + C2171 * C3214) *
                  C1512 -
              (C2177 * C3218 + C50692 * C3221 + C2176 * C3216 + C2171 * C3220) *
                  C50788) *
                 C50885) *
                C50911) *
               C50762) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C1744 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C51023 -
             (C5449 + C5450) * C1745 - (C5451 + C5452) * C51012 +
             C6021 * C1746 + C6022 * C1743) *
                C50991 +
            ((C2373 + C2374) * C1744 + (C2375 + C2376) * C51023 -
             C14413 * C1745 - C14414 * C51012 + C14807 * C1746 +
             C14808 * C1743) *
                C50885) *
               C50992 +
           (((C5450 + C5449) * C1744 + (C5452 + C5451) * C51023 -
             (C5453 + C5454) * C1745 - (C5455 + C5456) * C51012 +
             (C6041 + C6042) * C1746 + (C6043 + C6044) * C1743) *
                C50991 +
            (C14415 * C1744 + C14416 * C51023 - C6203 * C1745 - C6204 * C51012 +
             (C6214 + C6213) * C1746 + (C6216 + C6215) * C1743) *
                C50885) *
               C50911) *
              C50746 * C1275 +
          ((((C5457 + C5458) * C1745 -
             ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                  C51023 +
              (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                  C1744) +
             (C5459 + C5460) * C51012 - C6031 * C1746 - C6032 * C1743) *
                C50991 +
            (C15585 * C1745 -
             ((C2384 + C2383) * C51023 + (C2382 + C2381) * C1744) +
             C15586 * C51012 - (C6835 + C6836) * C1746 -
             (C6837 + C6838) * C1743) *
                C50885) *
               C50992 +
           (((C5461 + C5462) * C1745 -
             ((C5460 + C5459) * C51023 + (C5458 + C5457) * C1744) +
             (C5463 + C5464) * C51012 - (C6045 + C6046) * C1746 -
             (C6047 + C6048) * C1743) *
                C50991 +
            ((C6836 + C6835) * C1745 - (C15587 * C51023 + C15588 * C1744) +
             (C6838 + C6837) * C51012 -
             (C2177 * C6822 + C50692 * C6823 + C2176 * C3498 + C2171 * C3502) *
                 C1746 -
             (C2177 * C6824 + C50692 * C6825 + C2176 * C3504 + C2171 * C3510) *
                 C1743) *
                C50885) *
               C50911) *
              C50746 * C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50776) *
                C50991 +
            ((C2373 + C2374) * C121 + (C2375 + C2376) * C50776) * C50885) *
               C50992 +
           (((C5450 + C5449) * C121 + (C5452 + C5451) * C50776) * C50991 +
            ((C3047 + C3046) * C121 + (C3049 + C3048) * C50776) * C50885) *
               C50911) *
              C50746 * C113 -
          ((((C4024 + C4023) * C50776 + (C4022 + C4021) * C121) * C50885 +
            ((C5460 + C5459) * C50776 + (C5458 + C5457) * C121) * C50991) *
               C50911 +
           (((C2384 + C2383) * C50776 + (C2382 + C2381) * C121) * C50885 +
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C50776 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C50991) *
               C50992) *
              C50746 * C114 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                 C50776) *
                C50991 +
            ((C2389 + C2390) * C121 + (C2391 + C2392) * C50776) * C50885) *
               C50992 +
           (((C5466 + C5465) * C121 + (C5468 + C5467) * C50776) * C50991 +
            ((C2176 * C713 + C2171 * C721 + C2177 * C714 + C50692 * C722) *
                 C121 +
             (C2176 * C725 + C2171 * C737 + C2177 * C726 + C50692 * C738) *
                 C50776) *
                C50885) *
               C50911) *
              C50746 * C115 -
          ((((C2177 * C1409 + C50692 * C1410 + C2176 * C726 + C2171 * C738) *
                 C50776 +
             (C2177 * C1407 + C50692 * C1408 + C2176 * C714 + C2171 * C722) *
                 C121) *
                C50885 +
            ((C2177 * C394 + C50692 * C401 + C2176 * C389 + C2171 * C397) *
                 C50776 +
             (C2177 * C383 + C50692 * C393 + C2176 * C379 + C2171 * C385) *
                 C121) *
                C50991) *
               C50911 +
           (((C2177 * C268 + C50692 * C275 + C2176 * C259 + C2171 * C271) *
                 C50776 +
             (C2177 * C257 + C50692 * C267 + C2176 * C253 + C2171 * C263) *
                 C121) *
                C50885 +
            ((C2177 * C137 + C50692 * C147 + C2176 * C136 + C2171 * C146) *
                 C50776 +
             (C2177 * C126 + C50692 * C138 + C2176 * C125 + C2171 * C132) *
                 C121) *
                C50991) *
               C50992) *
              C50746 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                  C121 +
              (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                  C50776) *
                 C50991 +
             ((C2373 + C2374) * C121 + (C2375 + C2376) * C50776) * C50885) *
                C50992 +
            (((C5450 + C5449) * C121 + (C5452 + C5451) * C50776) * C50991 +
             ((C3047 + C3046) * C121 + (C3049 + C3048) * C50776) * C50885) *
                C50911) *
               C501 -
           (((C3060 * C50776 + C3059 * C121) * C50885 +
             ((C3048 + C3049) * C50776 + (C3046 + C3047) * C121) * C50991) *
                C50911 +
            (((C2380 + C2379) * C50776 + (C2378 + C2377) * C121) * C50885 +
             ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C50991) *
                C50992) *
               C502 +
           ((C2733 * C50991 +
             ((C2726 + C2725) * C121 + (C2724 + C2723) * C50776) * C50885) *
                C50992 +
            (((C3052 + C3051) * C121 + (C3054 + C3053) * C50776) * C50991 +
             ((C3055 + C3056) * C121 + (C3057 + C3058) * C50776) * C50885) *
                C50911) *
               C503) *
              C50968 +
          (((((C2381 + C2382) * C121 + (C2383 + C2384) * C50776) * C50991 +
             ((C2385 + C2386) * C121 + (C2387 + C2388) * C50776) * C50885) *
                C50992 +
            (((C4021 + C4022) * C121 + (C4023 + C4024) * C50776) * C50991 +
             ((C4025 + C4026) * C121 + (C4027 + C4028) * C50776) * C50885) *
                C50911) *
               C502 -
           ((((C4024 + C4023) * C50776 + (C4022 + C4021) * C121) * C50885 +
             ((C5460 + C5459) * C50776 + (C5458 + C5457) * C121) * C50991) *
                C50911 +
            (((C2384 + C2383) * C50776 + (C2382 + C2381) * C121) * C50885 +
             ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                  C50776 +
              (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                  C121) *
                 C50991) *
                C50992) *
               C501 -
           ((((C2177 * C4002 + C50692 * C4003 + C2176 * C3010 + C2171 * C3016) *
                  C50776 +
              (C2177 * C4000 + C50692 * C4001 + C2176 * C3004 + C2171 * C3008) *
                  C121) *
                 C50885 +
             ((C4028 + C4027) * C50776 + (C4026 + C4025) * C121) * C50991) *
                C50911 +
            (((C2730 + C2729) * C50776 + (C2728 + C2727) * C121) * C50885 +
             C2734 * C50991) *
                C50992) *
               C503) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                  C121 +
              (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                  C50776) *
                 C50991 +
             ((C2373 + C2374) * C121 + (C2375 + C2376) * C50776) * C50885) *
                C50992 +
            (((C5450 + C5449) * C121 + (C5452 + C5451) * C50776) * C50991 +
             ((C3047 + C3046) * C121 + (C3049 + C3048) * C50776) * C50885) *
                C50911) *
               C50975 -
           (((C3060 * C50776 + C3059 * C121) * C50885 +
             ((C3048 + C3049) * C50776 + (C3046 + C3047) * C121) * C50991) *
                C50911 +
            (((C2380 + C2379) * C50776 + (C2378 + C2377) * C121) * C50885 +
             ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C50991) *
                C50992) *
               C50762) *
              C250 +
          (((((C2381 + C2382) * C121 + (C2383 + C2384) * C50776) * C50991 +
             ((C2385 + C2386) * C121 + (C2387 + C2388) * C50776) * C50885) *
                C50992 +
            (((C4021 + C4022) * C121 + (C4023 + C4024) * C50776) * C50991 +
             ((C4025 + C4026) * C121 + (C4027 + C4028) * C50776) * C50885) *
                C50911) *
               C50762 -
           ((((C4024 + C4023) * C50776 + (C4022 + C4021) * C121) * C50885 +
             ((C5460 + C5459) * C50776 + (C5458 + C5457) * C121) * C50991) *
                C50911 +
            (((C2384 + C2383) * C50776 + (C2382 + C2381) * C121) * C50885 +
             ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                  C50776 +
              (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                  C121) *
                 C50991) *
                C50992) *
               C50975) *
              C251 +
          (((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                  C121 +
              (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                  C50776) *
                 C50991 +
             ((C2389 + C2390) * C121 + (C2391 + C2392) * C50776) * C50885) *
                C50992 +
            (((C5466 + C5465) * C121 + (C5468 + C5467) * C50776) * C50991 +
             ((C13697 + C13698) * C121 + (C13699 + C13700) * C50776) * C50885) *
                C50911) *
               C50975 -
           ((((C2177 * C731 + C50692 * C739 + C2176 * C732 + C2171 * C740) *
                  C50776 +
              (C2177 * C715 + C50692 * C727 + C2176 * C716 + C2171 * C728) *
                  C121) *
                 C50885 +
             ((C13700 + C13699) * C50776 + (C13698 + C13697) * C121) * C50991) *
                C50911 +
            (((C2396 + C2395) * C50776 + (C2394 + C2393) * C121) * C50885 +
             ((C2392 + C2391) * C50776 + (C2390 + C2389) * C121) * C50991) *
                C50992) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50776) *
                C50991 +
            ((C2373 + C2374) * C121 + (C2375 + C2376) * C50776) * C50885) *
               C50992 +
           (((C5450 + C5449) * C121 + (C5452 + C5451) * C50776) * C50991 +
            ((C3047 + C3046) * C121 + (C3049 + C3048) * C50776) * C50885) *
               C50911) *
              C592 -
          (((C3060 * C50776 + C3059 * C121) * C50885 +
            ((C3048 + C3049) * C50776 + (C3046 + C3047) * C121) * C50991) *
               C50911 +
           (((C2380 + C2379) * C50776 + (C2378 + C2377) * C121) * C50885 +
            ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C50991) *
               C50992) *
              C593 +
          ((C2733 * C50991 +
            ((C2726 + C2725) * C121 + (C2724 + C2723) * C50776) * C50885) *
               C50992 +
           (((C3052 + C3051) * C121 + (C3054 + C3053) * C50776) * C50991 +
            ((C3055 + C3056) * C121 + (C3057 + C3058) * C50776) * C50885) *
               C50911) *
              C594 -
          ((((C2177 * C3013 + C50692 * C3017 + C2176 * C3014 + C2171 * C3018) *
                 C50776 +
             (C2177 * C3005 + C50692 * C3011 + C2176 * C3006 + C2171 * C3012) *
                 C121) *
                C50885 +
            ((C3058 + C3057) * C50776 + (C3056 + C3055) * C121) * C50991) *
               C50911 +
           (((C2856 + C2855) * C50776 + (C2854 + C2853) * C121) * C50885 +
            C2857 * C50991) *
               C50992) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C377 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50977 -
             (C5449 + C5450) * C378 - (C5451 + C5452) * C50788) *
                C50991 +
            ((C2373 + C2374) * C377 + (C2375 + C2376) * C50977 -
             (C3046 + C3047) * C378 - (C3048 + C3049) * C50788) *
                C50885) *
               C50992 +
           (((C5450 + C5449) * C377 + (C5452 + C5451) * C50977 -
             (C5453 + C5454) * C378 - (C5455 + C5456) * C50788) *
                C50991 +
            ((C3047 + C3046) * C377 + (C3049 + C3048) * C50977 - C6203 * C378 -
             C6204 * C50788) *
                C50885) *
               C50911) *
              C50746 * C250 +
          ((((C5457 + C5458) * C378 -
             ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                  C50977 +
              (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                  C377) +
             (C5459 + C5460) * C50788) *
                C50991 +
            ((C4021 + C4022) * C378 -
             ((C2384 + C2383) * C50977 + (C2382 + C2381) * C377) +
             (C4023 + C4024) * C50788) *
                C50885) *
               C50992 +
           (((C5461 + C5462) * C378 -
             ((C5460 + C5459) * C50977 + (C5458 + C5457) * C377) +
             (C5463 + C5464) * C50788) *
                C50991 +
            ((C6836 + C6835) * C378 -
             ((C4024 + C4023) * C50977 + (C4022 + C4021) * C377) +
             (C6838 + C6837) * C50788) *
                C50885) *
               C50911) *
              C50746 * C251 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                 C377 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                 C50977 -
             (C5465 + C5466) * C378 - (C5467 + C5468) * C50788) *
                C50991 +
            ((C2389 + C2390) * C377 + (C2391 + C2392) * C50977 -
             (C13698 + C13697) * C378 - (C13700 + C13699) * C50788) *
                C50885) *
               C50992 +
           (((C5466 + C5465) * C377 + (C5468 + C5467) * C50977 -
             (C5469 + C5470) * C378 - (C5471 + C5472) * C50788) *
                C50991 +
            ((C13697 + C13698) * C377 + (C13699 + C13700) * C50977 -
             (C2177 * C965 + C50692 * C969 + C2176 * C966 + C2171 * C970) *
                 C378 -
             (C2177 * C973 + C50692 * C977 + C2176 * C974 + C2171 * C978) *
                 C50788) *
                C50885) *
               C50911) *
              C50746 * C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C377 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50977 -
             (C5449 + C5450) * C378 - (C5451 + C5452) * C50788) *
                C50991 +
            ((C2373 + C2374) * C377 + (C2375 + C2376) * C50977 - C14413 * C378 -
             C14414 * C50788) *
                C50885) *
               C50992 +
           (((C5450 + C5449) * C377 + (C5452 + C5451) * C50977 -
             (C5453 + C5454) * C378 - (C5455 + C5456) * C50788) *
                C50991 +
            (C14415 * C377 + C14416 * C50977 - C6203 * C378 - C6204 * C50788) *
                C50885) *
               C50911) *
              C501 +
          (((C14415 * C378 -
             ((C2376 + C2375) * C50977 + (C2374 + C2373) * C377) +
             C14416 * C50788) *
                C50991 +
            (C14417 * C378 -
             ((C2380 + C2379) * C50977 + (C2378 + C2377) * C377) +
             C14418 * C50788) *
                C50885) *
               C50992 +
           (((C3393 + C3394) * C378 - (C14414 * C50977 + C14413 * C377) +
             (C3395 + C3396) * C50788) *
                C50991 +
            ((C3397 + C3398) * C378 - (C3060 * C50977 + C3059 * C377) +
             (C3399 + C3400) * C50788) *
                C50885) *
               C50911) *
              C502 +
          ((C3064 * C50991 +
            ((C2726 + C2725) * C377 + (C2724 + C2723) * C50977 -
             (C3056 + C3055) * C378 - (C3058 + C3057) * C50788) *
                C50885) *
               C50992 +
           ((C14417 * C377 + C14418 * C50977 - (C3398 + C3397) * C378 -
             (C3400 + C3399) * C50788) *
                C50991 +
            ((C3055 + C3056) * C377 + (C3057 + C3058) * C50977 -
             (C2177 * C3368 + C50692 * C3370 + C2176 * C3369 + C2171 * C3371) *
                 C378 -
             (C2177 * C3372 + C50692 * C3374 + C2176 * C3373 + C2171 * C3375) *
                 C50788) *
                C50885) *
               C50911) *
              C503) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50776) *
                C2173 +
            ((C2373 + C2374) * C121 + (C2375 + C2376) * C50776) * C2174 +
            C2733 * C2175) *
               C50847 * C1169 -
           (C2857 * C2175 +
            ((C2380 + C2379) * C50776 + (C2378 + C2377) * C121) * C2174 +
            ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C2173) *
               C50847 * C50762) *
              C51021 +
          ((((C2381 + C2382) * C121 + (C2383 + C2384) * C50776) * C2173 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50776) * C2174 +
            ((C2727 + C2728) * C121 + (C2729 + C2730) * C50776) * C2175) *
               C50847 * C50762 -
           (C2734 * C2175 +
            ((C2384 + C2383) * C50776 + (C2382 + C2381) * C121) * C2174 +
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C50776 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50847 * C1169) *
              C51006 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                 C50776) *
                C2173 +
            ((C2389 + C2390) * C121 + (C2391 + C2392) * C50776) * C2174 +
            ((C2393 + C2394) * C121 + (C2395 + C2396) * C50776) * C2175) *
               C50847 * C1169 -
           (((C2177 * C601 + C50692 * C609 + C2176 * C602 + C2171 * C610) *
                 C50776 +
             (C2177 * C597 + C50692 * C605 + C2176 * C598 + C2171 * C606) *
                 C121) *
                C2175 +
            ((C2396 + C2395) * C50776 + (C2394 + C2393) * C121) * C2174 +
            ((C2392 + C2391) * C50776 + (C2390 + C2389) * C121) * C2173) *
               C50847 * C50762) *
              C1173)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50776) *
               C50835 * C50847 * C1169 -
           ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
             C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                C50776 +
            (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
             C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                C121) *
               C50835 * C50847 * C50762) *
              C51021 +
          (((C117 * C255 + C105 * C265 + C118 * C254 + C106 * C264 +
             C119 * C253 + C107 * C263 + C120 * C257 + C108 * C267) *
                C121 +
            (C117 * C261 + C105 * C273 + C118 * C260 + C106 * C272 +
             C119 * C259 + C107 * C271 + C120 * C268 + C108 * C275) *
                C50776) *
               C50835 * C50847 * C50762 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50776 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50835 * C50847 * C1169) *
              C51006 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50776) *
               C50835 * C50847 * C1169 -
           ((C120 * C269 + C108 * C276 + C119 * C268 + C107 * C275 +
             C118 * C259 + C106 * C271 + C117 * C260 + C105 * C272) *
                C50776 +
            (C120 * C258 + C108 * C270 + C119 * C257 + C107 * C267 +
             C118 * C253 + C106 * C263 + C117 * C254 + C105 * C264) *
                C121) *
               C50835 * C50847 * C50762) *
              C1173)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50776) *
                C50835 * C5105 +
            ((C5450 + C5449) * C121 + (C5452 + C5451) * C50776) * C50835 *
                C5106 +
            (C6021 * C121 + C6022 * C50776) * C50835 * C5107) *
               C1169 -
           ((C6204 * C50776 + C6203 * C121) * C50835 * C5107 +
            ((C3048 + C3049) * C50776 + (C3046 + C3047) * C121) * C50835 *
                C5106 +
            ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C50835 *
                C5105) *
               C50762) *
              C51021 +
          ((((C2381 + C2382) * C121 + (C2383 + C2384) * C50776) * C50835 *
                C5105 +
            ((C4021 + C4022) * C121 + (C4023 + C4024) * C50776) * C50835 *
                C5106 +
            ((C2176 * C967 + C2171 * C971 + C2177 * C966 + C50692 * C970) *
                 C121 +
             (C2176 * C975 + C2171 * C979 + C2177 * C974 + C50692 * C978) *
                 C50776) *
                C50835 * C5107) *
               C50762 -
           ((C6032 * C50776 + C6031 * C121) * C50835 * C5107 +
            ((C5460 + C5459) * C50776 + (C5458 + C5457) * C121) * C50835 *
                C5106 +
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C50776 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C50835 * C5105) *
               C1169) *
              C51006 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                 C50776) *
                C50835 * C5105 +
            ((C5466 + C5465) * C121 + (C5468 + C5467) * C50776) * C50835 *
                C5106 +
            ((C5470 + C5469) * C121 + (C5472 + C5471) * C50776) * C50835 *
                C5107) *
               C1169 -
           (((C2177 * C973 + C50692 * C977 + C2176 * C974 + C2171 * C978) *
                 C50776 +
             (C2177 * C965 + C50692 * C969 + C2176 * C966 + C2171 * C970) *
                 C121) *
                C50835 * C5107 +
            ((C2177 * C726 + C50692 * C738 + C2176 * C725 + C2171 * C737) *
                 C50776 +
             (C2177 * C714 + C50692 * C722 + C2176 * C713 + C2171 * C721) *
                 C121) *
                C50835 * C5106 +
            ((C2392 + C2391) * C50776 + (C2390 + C2389) * C121) * C50835 *
                C5105) *
               C50762) *
              C1173)) /
            (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50776) *
                C2173 +
            ((C2373 + C2374) * C121 + (C2375 + C2376) * C50776) * C2174 +
            C2733 * C2175) *
               C50847 * C51022 -
           (C2857 * C2175 +
            ((C2380 + C2379) * C50776 + (C2378 + C2377) * C121) * C2174 +
            ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C2173) *
               C50847 * C51009 +
           (C2733 * C2173 +
            ((C2726 + C2725) * C121 + (C2724 + C2723) * C50776) * C2174 +
            ((C2853 + C2854) * C121 + (C2855 + C2856) * C50776) * C2175) *
               C50847 * C1274) *
              C1275 +
          ((((C2381 + C2382) * C121 + (C2383 + C2384) * C50776) * C2173 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50776) * C2174 +
            ((C2727 + C2728) * C121 + (C2729 + C2730) * C50776) * C2175) *
               C50847 * C51009 -
           (C2734 * C2175 +
            ((C2384 + C2383) * C50776 + (C2382 + C2381) * C121) * C2174 +
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C50776 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50847 * C51022 -
           (((C2177 * C2695 + C50692 * C2699 + C2176 * C2694 + C2171 * C2698) *
                 C50776 +
             (C2177 * C2690 + C50692 * C2696 + C2176 * C2689 + C2171 * C2692) *
                 C121) *
                C2175 +
            ((C2730 + C2729) * C50776 + (C2728 + C2727) * C121) * C2174 +
            C2734 * C2173) *
               C50847 * C1274) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50776) *
               C50835 * C50847 * C51022 -
           ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
             C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                C50776 +
            (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
             C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                C121) *
               C50835 * C50847 * C51009 +
           ((C117 * C506 + C105 * C511 + C118 * C507 + C106 * C512 +
             C119 * C508 + C107 * C513 + C120 * C509 + C108 * C514) *
                C121 +
            (C117 * C515 + C105 * C521 + C118 * C516 + C106 * C522 +
             C119 * C517 + C107 * C523 + C120 * C518 + C108 * C524) *
                C50776) *
               C50835 * C50847 * C1274) *
              C1275 +
          (((C117 * C255 + C105 * C265 + C118 * C254 + C106 * C264 +
             C119 * C253 + C107 * C263 + C120 * C257 + C108 * C267) *
                C121 +
            (C117 * C261 + C105 * C273 + C118 * C260 + C106 * C272 +
             C119 * C259 + C107 * C271 + C120 * C268 + C108 * C275) *
                C50776) *
               C50835 * C50847 * C51009 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50776 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50835 * C50847 * C51022 -
           ((C120 * C519 + C108 * C525 + C119 * C518 + C107 * C524 +
             C118 * C517 + C106 * C523 + C117 * C516 + C105 * C522) *
                C50776 +
            (C120 * C510 + C108 * C520 + C119 * C509 + C107 * C514 +
             C118 * C508 + C106 * C513 + C117 * C507 + C105 * C512) *
                C121) *
               C50835 * C50847 * C1274) *
              C50719)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50776) *
                C50835 * C5105 +
            ((C5450 + C5449) * C121 + (C5452 + C5451) * C50776) * C50835 *
                C5106 +
            (C6021 * C121 + C6022 * C50776) * C50835 * C5107) *
               C51022 -
           ((C6204 * C50776 + C6203 * C121) * C50835 * C5107 +
            ((C3048 + C3049) * C50776 + (C3046 + C3047) * C121) * C50835 *
                C5106 +
            ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C50835 *
                C5105) *
               C51009 +
           (C2733 * C50835 * C5105 +
            ((C3052 + C3051) * C121 + (C3054 + C3053) * C50776) * C50835 *
                C5106 +
            ((C3397 + C3398) * C121 + (C3399 + C3400) * C50776) * C50835 *
                C5107) *
               C1274) *
              C1275 +
          ((((C2381 + C2382) * C121 + (C2383 + C2384) * C50776) * C50835 *
                C5105 +
            ((C4021 + C4022) * C121 + (C4023 + C4024) * C50776) * C50835 *
                C5106 +
            ((C2176 * C967 + C2171 * C971 + C2177 * C966 + C50692 * C970) *
                 C121 +
             (C2176 * C975 + C2171 * C979 + C2177 * C974 + C50692 * C978) *
                 C50776) *
                C50835 * C5107) *
               C51009 -
           ((C6032 * C50776 + C6031 * C121) * C50835 * C5107 +
            ((C5460 + C5459) * C50776 + (C5458 + C5457) * C121) * C50835 *
                C5106 +
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C50776 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C50835 * C5105) *
               C51022 -
           (((C2177 * C3218 + C50692 * C3221 + C2176 * C3216 + C2171 * C3220) *
                 C50776 +
             (C2177 * C3212 + C50692 * C3217 + C2176 * C3211 + C2171 * C3214) *
                 C121) *
                C50835 * C5107 +
            ((C4028 + C4027) * C50776 + (C4026 + C4025) * C121) * C50835 *
                C5106 +
            C2734 * C50835 * C5105) *
               C1274) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C377 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50977 -
             (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
                 C378 -
             (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
                 C50788) *
                C2173 +
            ((C2373 + C2374) * C377 + (C2375 + C2376) * C50977 -
             (C3046 + C3047) * C378 - (C3048 + C3049) * C50788) *
                C2174 +
            C3064 * C2175) *
               C50847 * C1169 +
           (((C3047 + C3046) * C378 -
             ((C2376 + C2375) * C50977 + (C2374 + C2373) * C377) +
             (C3049 + C3048) * C50788) *
                C2173 +
            ((C3052 + C3051) * C378 -
             ((C2380 + C2379) * C50977 + (C2378 + C2377) * C377) +
             (C3054 + C3053) * C50788) *
                C2174 +
            ((C3055 + C3056) * C378 - (C2841 * C50977 + C2842 * C377) +
             (C3057 + C3058) * C50788) *
                C2175) *
               C50847 * C50762) *
              C1275 +
          ((((C2176 * C381 + C2171 * C387 + C2177 * C380 + C50692 * C386) *
                 C378 -
             ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                  C50977 +
              (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                  C377) +
             (C2176 * C391 + C2171 * C399 + C2177 * C390 + C50692 * C398) *
                 C50788) *
                C2173 +
            ((C4021 + C4022) * C378 -
             ((C2384 + C2383) * C50977 + (C2382 + C2381) * C377) +
             (C4023 + C4024) * C50788) *
                C2174 +
            ((C4025 + C4026) * C378 - (C2719 * C50977 + C2720 * C377) +
             (C4027 + C4028) * C50788) *
                C2175) *
               C50847 * C1169 +
           (((C2381 + C2382) * C377 + (C2383 + C2384) * C50977 -
             (C4022 + C4021) * C378 - (C4024 + C4023) * C50788) *
                C2173 +
            ((C2385 + C2386) * C377 + (C2387 + C2388) * C50977 -
             (C4026 + C4025) * C378 - (C4028 + C4027) * C50788) *
                C2174 +
            ((C2727 + C2728) * C377 + (C2729 + C2730) * C50977 -
             (C2177 * C4000 + C50692 * C4001 + C2176 * C3004 + C2171 * C3008) *
                 C378 -
             (C2177 * C4002 + C50692 * C4003 + C2176 * C3010 + C2171 * C3016) *
                 C50788) *
                C2175) *
               C50847 * C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C377 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50977 -
            (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 +
             C118 * C381 + C106 * C387 + C117 * C382 + C105 * C388) *
                C378 -
            (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 +
             C118 * C391 + C106 * C399 + C117 * C392 + C105 * C400) *
                C50788) *
               C50835 * C50847 * C1169 +
           ((C117 * C711 + C105 * C719 + C118 * C712 + C106 * C720 +
             C119 * C713 + C107 * C721 + C120 * C714 + C108 * C722) *
                C378 -
            ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
              C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                 C50977 +
             (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
              C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                 C377) +
            (C117 * C723 + C105 * C735 + C118 * C724 + C106 * C736 +
             C119 * C725 + C107 * C737 + C120 * C726 + C108 * C738) *
                C50788) *
               C50835 * C50847 * C50762) *
              C1275 +
          (((C117 * C381 + C105 * C387 + C118 * C380 + C106 * C386 +
             C119 * C379 + C107 * C385 + C120 * C383 + C108 * C393) *
                C378 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C50977 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C377) +
            (C117 * C391 + C105 * C399 + C118 * C390 + C106 * C398 +
             C119 * C389 + C107 * C397 + C120 * C394 + C108 * C401) *
                C50788) *
               C50835 * C50847 * C1169 +
           ((C117 * C255 + C105 * C265 + C118 * C254 + C106 * C264 +
             C119 * C253 + C107 * C263 + C120 * C257 + C108 * C267) *
                C377 +
            (C117 * C261 + C105 * C273 + C118 * C260 + C106 * C272 +
             C119 * C259 + C107 * C271 + C120 * C268 + C108 * C275) *
                C50977 -
            (C120 * C1407 + C108 * C1408 + C119 * C714 + C107 * C722 +
             C118 * C713 + C106 * C721 + C117 * C712 + C105 * C720) *
                C378 -
            (C120 * C1409 + C108 * C1410 + C119 * C726 + C107 * C738 +
             C118 * C725 + C106 * C737 + C117 * C724 + C105 * C736) *
                C50788) *
               C50835 * C50847 * C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C377 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50977 -
             (C5449 + C5450) * C378 - (C5451 + C5452) * C50788) *
                C50835 * C5105 +
            ((C5450 + C5449) * C377 + (C5452 + C5451) * C50977 -
             (C5453 + C5454) * C378 - (C5455 + C5456) * C50788) *
                C50835 * C5106 +
            (C6021 * C377 + C6022 * C50977 - C6323 * C378 - C6324 * C50788) *
                C50835 * C5107) *
               C1169 +
           (((C3047 + C3046) * C378 -
             ((C2376 + C2375) * C50977 + (C2374 + C2373) * C377) +
             (C3049 + C3048) * C50788) *
                C50835 * C5105 +
            ((C3393 + C3394) * C378 -
             ((C3048 + C3049) * C50977 + (C3046 + C3047) * C377) +
             (C3395 + C3396) * C50788) *
                C50835 * C5106 +
            ((C6214 + C6213) * C378 - (C6204 * C50977 + C6203 * C377) +
             (C6216 + C6215) * C50788) *
                C50835 * C5107) *
               C50762) *
              C1275 +
          ((((C5457 + C5458) * C378 -
             ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                  C50977 +
              (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                  C377) +
             (C5459 + C5460) * C50788) *
                C50835 * C5105 +
            ((C5461 + C5462) * C378 -
             ((C5460 + C5459) * C50977 + (C5458 + C5457) * C377) +
             (C5463 + C5464) * C50788) *
                C50835 * C5106 +
            ((C6046 + C6045) * C378 - (C6032 * C50977 + C6031 * C377) +
             (C6048 + C6047) * C50788) *
                C50835 * C5107) *
               C1169 +
           (((C2381 + C2382) * C377 + (C2383 + C2384) * C50977 -
             (C4022 + C4021) * C378 - (C4024 + C4023) * C50788) *
                C50835 * C5105 +
            ((C4021 + C4022) * C377 + (C4023 + C4024) * C50977 -
             (C6835 + C6836) * C378 - (C6837 + C6838) * C50788) *
                C50835 * C5106 +
            ((C6836 + C6835) * C377 + (C6838 + C6837) * C50977 -
             (C2177 * C6822 + C50692 * C6823 + C2176 * C3498 + C2171 * C3502) *
                 C378 -
             (C2177 * C6824 + C50692 * C6825 + C2176 * C3504 + C2171 * C3510) *
                 C50788) *
                C50835 * C5107) *
               C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C1511 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C1509 -
             (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
                 C1512 -
             (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
                 C50788) *
                C2173 +
            ((C2373 + C2374) * C1511 + (C2375 + C2376) * C1509 -
             (C3046 + C3047) * C1512 - (C3048 + C3049) * C50788) *
                C2174 +
            (C2701 * C1511 + C2702 * C1509 - C3059 * C1512 - C3060 * C50788) *
                C2175) *
               C50847 * C1169 +
           (((C3047 + C3046) * C1512 -
             ((C2376 + C2375) * C1509 + (C2374 + C2373) * C1511) +
             (C3049 + C3048) * C50788) *
                C2173 +
            ((C3052 + C3051) * C1512 -
             ((C2380 + C2379) * C1509 + (C2378 + C2377) * C1511) +
             (C3054 + C3053) * C50788) *
                C2174 +
            ((C3055 + C3056) * C1512 - (C2841 * C1509 + C2842 * C1511) +
             (C3057 + C3058) * C50788) *
                C2175) *
               C50847 * C50762) *
              C50968 +
          ((((C2176 * C381 + C2171 * C387 + C2177 * C380 + C50692 * C386) *
                 C1512 -
             ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                  C1509 +
              (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                  C1511) +
             (C2176 * C391 + C2171 * C399 + C2177 * C390 + C50692 * C398) *
                 C50788) *
                C2173 +
            ((C4021 + C4022) * C1512 -
             ((C2384 + C2383) * C1509 + (C2382 + C2381) * C1511) +
             (C4023 + C4024) * C50788) *
                C2174 +
            ((C4025 + C4026) * C1512 - (C2719 * C1509 + C2720 * C1511) +
             (C4027 + C4028) * C50788) *
                C2175) *
               C50847 * C1169 +
           (((C2381 + C2382) * C1511 + (C2383 + C2384) * C1509 -
             (C4022 + C4021) * C1512 - (C4024 + C4023) * C50788) *
                C2173 +
            ((C2385 + C2386) * C1511 + (C2387 + C2388) * C1509 -
             (C4026 + C4025) * C1512 - (C4028 + C4027) * C50788) *
                C2174 +
            ((C2727 + C2728) * C1511 + (C2729 + C2730) * C1509 -
             (C2177 * C4000 + C50692 * C4001 + C2176 * C3004 + C2171 * C3008) *
                 C1512 -
             (C2177 * C4002 + C50692 * C4003 + C2176 * C3010 + C2171 * C3016) *
                 C50788) *
                C2175) *
               C50847 * C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C1511 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C1509 -
            (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 +
             C118 * C381 + C106 * C387 + C117 * C382 + C105 * C388) *
                C1512 -
            (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 +
             C118 * C391 + C106 * C399 + C117 * C392 + C105 * C400) *
                C50788) *
               C50835 * C50847 * C1169 +
           ((C117 * C711 + C105 * C719 + C118 * C712 + C106 * C720 +
             C119 * C713 + C107 * C721 + C120 * C714 + C108 * C722) *
                C1512 -
            ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
              C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                 C1509 +
             (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
              C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                 C1511) +
            (C117 * C723 + C105 * C735 + C118 * C724 + C106 * C736 +
             C119 * C725 + C107 * C737 + C120 * C726 + C108 * C738) *
                C50788) *
               C50835 * C50847 * C50762) *
              C50968 +
          (((C117 * C381 + C105 * C387 + C118 * C380 + C106 * C386 +
             C119 * C379 + C107 * C385 + C120 * C383 + C108 * C393) *
                C1512 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C1509 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C1511) +
            (C117 * C391 + C105 * C399 + C118 * C390 + C106 * C398 +
             C119 * C389 + C107 * C397 + C120 * C394 + C108 * C401) *
                C50788) *
               C50835 * C50847 * C1169 +
           ((C117 * C255 + C105 * C265 + C118 * C254 + C106 * C264 +
             C119 * C253 + C107 * C263 + C120 * C257 + C108 * C267) *
                C1511 +
            (C117 * C261 + C105 * C273 + C118 * C260 + C106 * C272 +
             C119 * C259 + C107 * C271 + C120 * C268 + C108 * C275) *
                C1509 -
            (C120 * C1407 + C108 * C1408 + C119 * C714 + C107 * C722 +
             C118 * C713 + C106 * C721 + C117 * C712 + C105 * C720) *
                C1512 -
            (C120 * C1409 + C108 * C1410 + C119 * C726 + C107 * C738 +
             C118 * C725 + C106 * C737 + C117 * C724 + C105 * C736) *
                C50788) *
               C50835 * C50847 * C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C1511 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C1509 -
             (C5449 + C5450) * C1512 - (C5451 + C5452) * C50788) *
                C50835 * C5105 +
            ((C5450 + C5449) * C1511 + (C5452 + C5451) * C1509 -
             (C5453 + C5454) * C1512 - (C5455 + C5456) * C50788) *
                C50835 * C5106 +
            (C6021 * C1511 + C6022 * C1509 - C6323 * C1512 - C6324 * C50788) *
                C50835 * C5107) *
               C1169 +
           (((C3047 + C3046) * C1512 -
             ((C2376 + C2375) * C1509 + (C2374 + C2373) * C1511) +
             (C3049 + C3048) * C50788) *
                C50835 * C5105 +
            ((C3393 + C3394) * C1512 -
             ((C3048 + C3049) * C1509 + (C3046 + C3047) * C1511) +
             (C3395 + C3396) * C50788) *
                C50835 * C5106 +
            ((C6214 + C6213) * C1512 - (C6204 * C1509 + C6203 * C1511) +
             (C6216 + C6215) * C50788) *
                C50835 * C5107) *
               C50762) *
              C50968 +
          ((((C5457 + C5458) * C1512 -
             ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                  C1509 +
              (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                  C1511) +
             (C5459 + C5460) * C50788) *
                C50835 * C5105 +
            ((C5461 + C5462) * C1512 -
             ((C5460 + C5459) * C1509 + (C5458 + C5457) * C1511) +
             (C5463 + C5464) * C50788) *
                C50835 * C5106 +
            ((C6046 + C6045) * C1512 - (C6032 * C1509 + C6031 * C1511) +
             (C6048 + C6047) * C50788) *
                C50835 * C5107) *
               C1169 +
           (((C2381 + C2382) * C1511 + (C2383 + C2384) * C1509 -
             (C4022 + C4021) * C1512 - (C4024 + C4023) * C50788) *
                C50835 * C5105 +
            ((C4021 + C4022) * C1511 + (C4023 + C4024) * C1509 -
             (C6835 + C6836) * C1512 - (C6837 + C6838) * C50788) *
                C50835 * C5106 +
            ((C6836 + C6835) * C1511 + (C6838 + C6837) * C1509 -
             (C2177 * C6822 + C50692 * C6823 + C2176 * C3498 + C2171 * C3502) *
                 C1512 -
             (C2177 * C6824 + C50692 * C6825 + C2176 * C3504 + C2171 * C3510) *
                 C50788) *
                C50835 * C5107) *
               C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C1511 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C1509 -
            (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
                C1512 -
            (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
                C50788) *
               C2173 +
           ((C2373 + C2374) * C1511 + (C2375 + C2376) * C1509 -
            (C3046 + C3047) * C1512 - (C3048 + C3049) * C50788) *
               C2174 +
           C4861 * C2175) *
              C50847 * C51022 +
          (((C3047 + C3046) * C1512 -
            ((C2376 + C2375) * C1509 + (C2374 + C2373) * C1511) +
            (C3049 + C3048) * C50788) *
               C2173 +
           ((C3052 + C3051) * C1512 -
            ((C2380 + C2379) * C1509 + (C2378 + C2377) * C1511) +
            (C3054 + C3053) * C50788) *
               C2174 +
           ((C3055 + C3056) * C1512 - (C2841 * C1509 + C2842 * C1511) +
            (C3057 + C3058) * C50788) *
               C2175) *
              C50847 * C51009 +
          (C4861 * C2173 +
           ((C2726 + C2725) * C1511 + (C2724 + C2723) * C1509 -
            (C3056 + C3055) * C1512 - (C3058 + C3057) * C50788) *
               C2174 +
           ((C2853 + C2854) * C1511 + (C2855 + C2856) * C1509 -
            (C2177 * C3005 + C50692 * C3011 + C2176 * C3006 + C2171 * C3012) *
                C1512 -
            (C2177 * C3013 + C50692 * C3017 + C2176 * C3014 + C2171 * C3018) *
                C50788) *
               C2175) *
              C50847 * C1274) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C1511 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C1509 -
           (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 +
            C118 * C381 + C106 * C387 + C117 * C382 + C105 * C388) *
               C1512 -
           (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 +
            C118 * C391 + C106 * C399 + C117 * C392 + C105 * C400) *
               C50788) *
              C50835 * C50847 * C51022 +
          ((C117 * C711 + C105 * C719 + C118 * C712 + C106 * C720 +
            C119 * C713 + C107 * C721 + C120 * C714 + C108 * C722) *
               C1512 -
           ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
             C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                C1509 +
            (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
             C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                C1511) +
           (C117 * C723 + C105 * C735 + C118 * C724 + C106 * C736 +
            C119 * C725 + C107 * C737 + C120 * C726 + C108 * C738) *
               C50788) *
              C50835 * C50847 * C51009 +
          ((C117 * C506 + C105 * C511 + C118 * C507 + C106 * C512 +
            C119 * C508 + C107 * C513 + C120 * C509 + C108 * C514) *
               C1511 +
           (C117 * C515 + C105 * C521 + C118 * C516 + C106 * C522 +
            C119 * C517 + C107 * C523 + C120 * C518 + C108 * C524) *
               C1509 -
           (C120 * C715 + C108 * C727 + C119 * C716 + C107 * C728 +
            C118 * C717 + C106 * C729 + C117 * C718 + C105 * C730) *
               C1512 -
           (C120 * C731 + C108 * C739 + C119 * C732 + C107 * C740 +
            C118 * C733 + C106 * C741 + C117 * C734 + C105 * C742) *
               C50788) *
              C50835 * C50847 * C1274) *
         C50714) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C1511 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C1509 -
            (C5449 + C5450) * C1512 - (C5451 + C5452) * C50788) *
               C50835 * C5105 +
           ((C5450 + C5449) * C1511 + (C5452 + C5451) * C1509 -
            (C5453 + C5454) * C1512 - (C5455 + C5456) * C50788) *
               C50835 * C5106 +
           (C6021 * C1511 + C6022 * C1509 - C6323 * C1512 - C6324 * C50788) *
               C50835 * C5107) *
              C51022 +
          (((C3047 + C3046) * C1512 -
            ((C2376 + C2375) * C1509 + (C2374 + C2373) * C1511) +
            (C3049 + C3048) * C50788) *
               C50835 * C5105 +
           ((C3393 + C3394) * C1512 -
            ((C3048 + C3049) * C1509 + (C3046 + C3047) * C1511) +
            (C3395 + C3396) * C50788) *
               C50835 * C5106 +
           ((C6214 + C6213) * C1512 - (C6204 * C1509 + C6203 * C1511) +
            (C6216 + C6215) * C50788) *
               C50835 * C5107) *
              C51009 +
          (C4861 * C50835 * C5105 +
           ((C3052 + C3051) * C1511 + (C3054 + C3053) * C1509 -
            (C3398 + C3397) * C1512 - (C3400 + C3399) * C50788) *
               C50835 * C5106 +
           ((C3397 + C3398) * C1511 + (C3399 + C3400) * C1509 -
            (C2177 * C3500 + C50692 * C3506 + C2176 * C3501 + C2171 * C3507) *
                C1512 -
            (C2177 * C3508 + C50692 * C3512 + C2176 * C3509 + C2171 * C3513) *
                C50788) *
               C50835 * C5107) *
              C1274) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C1744 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C51023 -
            (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
                C1745 -
            (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
                C51012 +
            (C2176 * C847 + C2171 * C852 + C2177 * C848 + C50692 * C853) *
                C1746 +
            (C2176 * C856 + C2171 * C862 + C2177 * C857 + C50692 * C863) *
                C1743) *
               C2173 +
           ((C2373 + C2374) * C1744 + (C2375 + C2376) * C51023 -
            (C3046 + C3047) * C1745 - (C3048 + C3049) * C51012 +
            (C3393 + C3394) * C1746 + (C3395 + C3396) * C1743) *
               C2174 +
           (C2701 * C1744 + C2702 * C51023 - C3059 * C1745 - C3060 * C51012 +
            (C3397 + C3398) * C1746 + (C3399 + C3400) * C1743) *
               C2175) *
              C50847 * C1169 +
          (((C3047 + C3046) * C1745 -
            ((C2376 + C2375) * C51023 + (C2374 + C2373) * C1744) +
            (C3049 + C3048) * C51012 - (C3394 + C3393) * C1746 -
            (C3396 + C3395) * C1743) *
               C2173 +
           ((C3052 + C3051) * C1745 -
            ((C2380 + C2379) * C51023 + (C2378 + C2377) * C1744) +
            (C3054 + C3053) * C51012 - (C3398 + C3397) * C1746 -
            (C3400 + C3399) * C1743) *
               C2174 +
           ((C3055 + C3056) * C1745 - (C2841 * C51023 + C2842 * C1744) +
            (C3057 + C3058) * C51012 -
            (C2177 * C3368 + C50692 * C3370 + C2176 * C3369 + C2171 * C3371) *
                C1746 -
            (C2177 * C3372 + C50692 * C3374 + C2176 * C3373 + C2171 * C3375) *
                C1743) *
               C2175) *
              C50847 * C50762) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C1744 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C51023 -
           (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 +
            C118 * C381 + C106 * C387 + C117 * C382 + C105 * C388) *
               C1745 -
           (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 +
            C118 * C391 + C106 * C399 + C117 * C392 + C105 * C400) *
               C51012 +
           (C117 * C847 + C105 * C852 + C118 * C848 + C106 * C853 +
            C119 * C849 + C107 * C854 + C120 * C850 + C108 * C855) *
               C1746 +
           (C117 * C856 + C105 * C862 + C118 * C857 + C106 * C863 +
            C119 * C858 + C107 * C864 + C120 * C859 + C108 * C865) *
               C1743) *
              C50835 * C50847 * C1169 +
          ((C117 * C711 + C105 * C719 + C118 * C712 + C106 * C720 +
            C119 * C713 + C107 * C721 + C120 * C714 + C108 * C722) *
               C1745 -
           ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
             C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                C51023 +
            (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
             C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                C1744) +
           (C117 * C723 + C105 * C735 + C118 * C724 + C106 * C736 +
            C119 * C725 + C107 * C737 + C120 * C726 + C108 * C738) *
               C51012 -
           (C120 * C965 + C108 * C969 + C119 * C966 + C107 * C970 +
            C118 * C967 + C106 * C971 + C117 * C968 + C105 * C972) *
               C1746 -
           (C120 * C973 + C108 * C977 + C119 * C974 + C107 * C978 +
            C118 * C975 + C106 * C979 + C117 * C976 + C105 * C980) *
               C1743) *
              C50835 * C50847 * C50762) *
         C50714) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C1744 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C51023 -
            (C5449 + C5450) * C1745 - (C5451 + C5452) * C51012 + C6021 * C1746 +
            C6022 * C1743) *
               C50835 * C5105 +
           ((C5450 + C5449) * C1744 + (C5452 + C5451) * C51023 -
            (C5453 + C5454) * C1745 - (C5455 + C5456) * C51012 +
            (C6041 + C6042) * C1746 + (C6043 + C6044) * C1743) *
               C50835 * C5106 +
           (C6021 * C1744 + C6022 * C51023 - C6323 * C1745 - C6324 * C51012 +
            (C6334 + C6333) * C1746 + (C6336 + C6335) * C1743) *
               C50835 * C5107) *
              C1169 +
          (((C3047 + C3046) * C1745 -
            ((C2376 + C2375) * C51023 + (C2374 + C2373) * C1744) +
            (C3049 + C3048) * C51012 - C6203 * C1746 - C6204 * C1743) *
               C50835 * C5105 +
           ((C3393 + C3394) * C1745 -
            ((C3048 + C3049) * C51023 + (C3046 + C3047) * C1744) +
            (C3395 + C3396) * C51012 - (C6213 + C6214) * C1746 -
            (C6215 + C6216) * C1743) *
               C50835 * C5106 +
           ((C6214 + C6213) * C1745 - (C6204 * C51023 + C6203 * C1744) +
            (C6216 + C6215) * C51012 -
            (C2177 * C6194 + C50692 * C6196 + C2176 * C6195 + C2171 * C6197) *
                C1746 -
            (C2177 * C6198 + C50692 * C6200 + C2176 * C6199 + C2171 * C6201) *
                C1743) *
               C50835 * C5107) *
              C50762) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                   C121 +
               (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                   C50776) *
                  C50835 * C50847 * C50746 * C113 -
              ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
                C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                   C50776 +
               (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
                C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                   C121) *
                  C50835 * C50847 * C50746 * C114 +
              ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
                C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                   C121 +
               (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
                C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                   C50776) *
                  C50835 * C50847 * C50746 * C115 -
              ((C120 * C141 + C108 * C149 + C119 * C140 + C107 * C148 +
                C118 * C137 + C106 * C147 + C117 * C136 + C105 * C146) *
                   C50776 +
               (C120 * C128 + C108 * C142 + C119 * C127 + C107 * C139 +
                C118 * C126 + C106 * C138 + C117 * C125 + C105 * C132) *
                   C121) *
                  C50835 * C50847 * C50746 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                 C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                    C121 +
                (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                 C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                    C50776) *
                   C50835 * C50847 * C501 -
               ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
                 C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                    C50776 +
                (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
                 C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                    C121) *
                   C50835 * C50847 * C502 +
               ((C117 * C506 + C105 * C511 + C118 * C507 + C106 * C512 +
                 C119 * C508 + C107 * C513 + C120 * C509 + C108 * C514) *
                    C121 +
                (C117 * C515 + C105 * C521 + C118 * C516 + C106 * C522 +
                 C119 * C517 + C107 * C523 + C120 * C518 + C108 * C524) *
                    C50776) *
                   C50835 * C50847 * C503) *
                  C50968 +
              (((C117 * C255 + C105 * C265 + C118 * C254 + C106 * C264 +
                 C119 * C253 + C107 * C263 + C120 * C257 + C108 * C267) *
                    C121 +
                (C117 * C261 + C105 * C273 + C118 * C260 + C106 * C272 +
                 C119 * C259 + C107 * C271 + C120 * C268 + C108 * C275) *
                    C50776) *
                   C50835 * C50847 * C502 -
               ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
                 C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                    C50776 +
                (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
                 C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                    C121) *
                   C50835 * C50847 * C501 -
               ((C120 * C519 + C108 * C525 + C119 * C518 + C107 * C524 +
                 C118 * C517 + C106 * C523 + C117 * C516 + C105 * C522) *
                    C50776 +
                (C120 * C510 + C108 * C520 + C119 * C509 + C107 * C514 +
                 C118 * C508 + C106 * C513 + C117 * C507 + C105 * C512) *
                    C121) *
                   C50835 * C50847 * C503) *
                  C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C844 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C841 -
           (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 +
            C118 * C381 + C106 * C387 + C117 * C382 + C105 * C388) *
               C845 -
           (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 +
            C118 * C391 + C106 * C399 + C117 * C392 + C105 * C400) *
               C842 +
           (C117 * C847 + C105 * C852 + C118 * C848 + C106 * C853 +
            C119 * C849 + C107 * C854 + C120 * C850 + C108 * C855) *
               C846 +
           (C117 * C856 + C105 * C862 + C118 * C857 + C106 * C863 +
            C119 * C858 + C107 * C864 + C120 * C859 + C108 * C865) *
               C843) *
              C50835 * C50847 * C50746 * C50968 +
          ((C117 * C381 + C105 * C387 + C118 * C380 + C106 * C386 +
            C119 * C379 + C107 * C385 + C120 * C383 + C108 * C393) *
               C845 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C841 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C844) +
           (C117 * C391 + C105 * C399 + C118 * C390 + C106 * C398 +
            C119 * C389 + C107 * C397 + C120 * C394 + C108 * C401) *
               C842 -
           (C120 * C851 + C108 * C860 + C119 * C850 + C107 * C855 +
            C118 * C849 + C106 * C854 + C117 * C848 + C105 * C853) *
               C846 -
           (C120 * C861 + C108 * C866 + C119 * C859 + C107 * C865 +
            C118 * C858 + C106 * C864 + C117 * C857 + C105 * C863) *
               C843) *
              C50835 * C50847 * C50746 * C50719)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C50776) *
               C2173 +
           ((C2176 * C256 + C2171 * C266 + C2177 * C255 + C50692 * C265) *
                C121 +
            (C2176 * C262 + C2171 * C274 + C2177 * C261 + C50692 * C273) *
                C50776) *
               C2174 +
           ((C2176 * C506 + C2171 * C511 + C2177 * C507 + C50692 * C512) *
                C121 +
            (C2176 * C515 + C2171 * C521 + C2177 * C516 + C50692 * C522) *
                C50776) *
               C2175) *
              C50847 * C50746 * C113 -
          (((C2177 * C517 + C50692 * C523 + C2176 * C516 + C2171 * C522) *
                C50776 +
            (C2177 * C508 + C50692 * C513 + C2176 * C507 + C2171 * C512) *
                C121) *
               C2175 +
           ((C2177 * C260 + C50692 * C272 + C2176 * C261 + C2171 * C273) *
                C50776 +
            (C2177 * C254 + C50692 * C264 + C2176 * C255 + C2171 * C265) *
                C121) *
               C2174 +
           ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                C50776 +
            (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                C121) *
               C2173) *
              C50847 * C50746 * C114 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                C121 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                C50776) *
               C2173 +
           ((C2176 * C254 + C2171 * C264 + C2177 * C253 + C50692 * C263) *
                C121 +
            (C2176 * C260 + C2171 * C272 + C2177 * C259 + C50692 * C271) *
                C50776) *
               C2174 +
           ((C2176 * C508 + C2171 * C513 + C2177 * C509 + C50692 * C514) *
                C121 +
            (C2176 * C517 + C2171 * C523 + C2177 * C518 + C50692 * C524) *
                C50776) *
               C2175) *
              C50847 * C50746 * C115 -
          (((C2177 * C519 + C50692 * C525 + C2176 * C518 + C2171 * C524) *
                C50776 +
            (C2177 * C510 + C50692 * C520 + C2176 * C509 + C2171 * C514) *
                C121) *
               C2175 +
           ((C2177 * C268 + C50692 * C275 + C2176 * C259 + C2171 * C271) *
                C50776 +
            (C2177 * C257 + C50692 * C267 + C2176 * C253 + C2171 * C263) *
                C121) *
               C2174 +
           ((C2177 * C137 + C50692 * C147 + C2176 * C136 + C2171 * C146) *
                C50776 +
            (C2177 * C126 + C50692 * C138 + C2176 * C125 + C2171 * C132) *
                C121) *
               C2173) *
              C50847 * C50746 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50776) *
                C2173 +
            ((C2373 + C2374) * C121 + (C2375 + C2376) * C50776) * C2174 +
            C2733 * C2175) *
               C50847 * C501 -
           (((C2723 + C2724) * C50776 + (C2725 + C2726) * C121) * C2175 +
            ((C2380 + C2379) * C50776 + (C2378 + C2377) * C121) * C2174 +
            ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C2173) *
               C50847 * C502 +
           (C2733 * C2173 +
            ((C2726 + C2725) * C121 + (C2724 + C2723) * C50776) * C2174 +
            ((C2176 * C2688 + C2171 * C2691 + C2177 * C2689 + C50692 * C2692) *
                 C121 +
             (C2176 * C2693 + C2171 * C2697 + C2177 * C2694 + C50692 * C2698) *
                 C50776) *
                C2175) *
               C50847 * C503) *
              C50968 +
          ((((C2381 + C2382) * C121 + (C2383 + C2384) * C50776) * C2173 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50776) * C2174 +
            ((C2727 + C2728) * C121 + (C2729 + C2730) * C50776) * C2175) *
               C50847 * C502 -
           (C2734 * C2175 +
            ((C2384 + C2383) * C50776 + (C2382 + C2381) * C121) * C2174 +
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C50776 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50847 * C501 -
           (((C2177 * C2695 + C50692 * C2699 + C2176 * C2694 + C2171 * C2698) *
                 C50776 +
             (C2177 * C2690 + C50692 * C2696 + C2176 * C2689 + C2171 * C2692) *
                 C121) *
                C2175 +
            ((C2730 + C2729) * C50776 + (C2728 + C2727) * C121) * C2174 +
            C2734 * C2173) *
               C50847 * C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C844 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C841 -
            (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
                C845 -
            (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
                C842 +
            (C2176 * C847 + C2171 * C852 + C2177 * C848 + C50692 * C853) *
                C846 +
            (C2176 * C856 + C2171 * C862 + C2177 * C857 + C50692 * C863) *
                C843) *
               C2173 +
           ((C2373 + C2374) * C844 + (C2375 + C2376) * C841 -
            (C3046 + C3047) * C845 - (C3048 + C3049) * C842 +
            (C2176 * C968 + C2171 * C972 + C2177 * C967 + C50692 * C971) *
                C846 +
            (C2176 * C976 + C2171 * C980 + C2177 * C975 + C50692 * C979) *
                C843) *
               C2174 +
           (C2701 * C844 + C2702 * C841 - C3059 * C845 - C3060 * C842 +
            (C2176 * C3210 + C2171 * C3213 + C2177 * C3211 + C50692 * C3214) *
                C846 +
            (C2176 * C3215 + C2171 * C3219 + C2177 * C3216 + C50692 * C3220) *
                C843) *
               C2175) *
              C50847 * C50746 * C50968 +
          (((C2176 * C381 + C2171 * C387 + C2177 * C380 + C50692 * C386) *
                C845 -
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C841 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C844) +
            (C2176 * C391 + C2171 * C399 + C2177 * C390 + C50692 * C398) *
                C842 -
            (C2177 * C849 + C50692 * C854 + C2176 * C848 + C2171 * C853) *
                C846 -
            (C2177 * C858 + C50692 * C864 + C2176 * C857 + C2171 * C863) *
                C843) *
               C2173 +
           ((C2176 * C712 + C2171 * C720 + C2177 * C713 + C50692 * C721) *
                C845 -
            ((C2384 + C2383) * C841 + (C2382 + C2381) * C844) +
            (C2176 * C724 + C2171 * C736 + C2177 * C725 + C50692 * C737) *
                C842 -
            (C2177 * C966 + C50692 * C970 + C2176 * C967 + C2171 * C971) *
                C846 -
            (C2177 * C974 + C50692 * C978 + C2176 * C975 + C2171 * C979) *
                C843) *
               C2174 +
           ((C2176 * C717 + C2171 * C729 + C2177 * C716 + C50692 * C728) *
                C845 -
            (C2719 * C841 + C2720 * C844) +
            (C2176 * C733 + C2171 * C741 + C2177 * C732 + C50692 * C740) *
                C842 -
            (C2177 * C3212 + C50692 * C3217 + C2176 * C3211 + C2171 * C3214) *
                C846 -
            (C2177 * C3218 + C50692 * C3221 + C2176 * C3216 + C2171 * C3220) *
                C843) *
               C2175) *
              C50847 * C50746 * C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C50776) *
               C50835 * C5105 +
           ((C2176 * C382 + C2171 * C388 + C2177 * C381 + C50692 * C387) *
                C121 +
            (C2176 * C392 + C2171 * C400 + C2177 * C391 + C50692 * C399) *
                C50776) *
               C50835 * C5106 +
           ((C2176 * C847 + C2171 * C852 + C2177 * C848 + C50692 * C853) *
                C121 +
            (C2176 * C856 + C2171 * C862 + C2177 * C857 + C50692 * C863) *
                C50776) *
               C50835 * C5107) *
              C50746 * C113 -
          (((C2177 * C858 + C50692 * C864 + C2176 * C857 + C2171 * C863) *
                C50776 +
            (C2177 * C849 + C50692 * C854 + C2176 * C848 + C2171 * C853) *
                C121) *
               C50835 * C5107 +
           ((C2177 * C390 + C50692 * C398 + C2176 * C391 + C2171 * C399) *
                C50776 +
            (C2177 * C380 + C50692 * C386 + C2176 * C381 + C2171 * C387) *
                C121) *
               C50835 * C5106 +
           ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                C50776 +
            (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                C121) *
               C50835 * C5105) *
              C50746 * C114 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                C121 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                C50776) *
               C50835 * C5105 +
           ((C2176 * C380 + C2171 * C386 + C2177 * C379 + C50692 * C385) *
                C121 +
            (C2176 * C390 + C2171 * C398 + C2177 * C389 + C50692 * C397) *
                C50776) *
               C50835 * C5106 +
           ((C2176 * C849 + C2171 * C854 + C2177 * C850 + C50692 * C855) *
                C121 +
            (C2176 * C858 + C2171 * C864 + C2177 * C859 + C50692 * C865) *
                C50776) *
               C50835 * C5107) *
              C50746 * C115 -
          (((C2177 * C861 + C50692 * C866 + C2176 * C859 + C2171 * C865) *
                C50776 +
            (C2177 * C851 + C50692 * C860 + C2176 * C850 + C2171 * C855) *
                C121) *
               C50835 * C5107 +
           ((C2177 * C394 + C50692 * C401 + C2176 * C389 + C2171 * C397) *
                C50776 +
            (C2177 * C383 + C50692 * C393 + C2176 * C379 + C2171 * C385) *
                C121) *
               C50835 * C5106 +
           ((C2177 * C137 + C50692 * C147 + C2176 * C136 + C2171 * C146) *
                C50776 +
            (C2177 * C126 + C50692 * C138 + C2176 * C125 + C2171 * C132) *
                C121) *
               C50835 * C5105) *
              C50746 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50776) *
                C50835 * C5105 +
            ((C5450 + C5449) * C121 + (C5452 + C5451) * C50776) * C50835 *
                C5106 +
            ((C5454 + C5453) * C121 + (C5456 + C5455) * C50776) * C50835 *
                C5107) *
               C501 -
           (((C3396 + C3395) * C50776 + (C3394 + C3393) * C121) * C50835 *
                C5107 +
            ((C3048 + C3049) * C50776 + (C3046 + C3047) * C121) * C50835 *
                C5106 +
            ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C50835 *
                C5105) *
               C502 +
           (C2733 * C50835 * C5105 +
            ((C3052 + C3051) * C121 + (C3054 + C3053) * C50776) * C50835 *
                C5106 +
            ((C3397 + C3398) * C121 + (C3399 + C3400) * C50776) * C50835 *
                C5107) *
               C503) *
              C50968 +
          ((((C2381 + C2382) * C121 + (C2383 + C2384) * C50776) * C50835 *
                C5105 +
            ((C4021 + C4022) * C121 + (C4023 + C4024) * C50776) * C50835 *
                C5106 +
            ((C2176 * C967 + C2171 * C971 + C2177 * C966 + C50692 * C970) *
                 C121 +
             (C2176 * C975 + C2171 * C979 + C2177 * C974 + C50692 * C978) *
                 C50776) *
                C50835 * C5107) *
               C502 -
           (((C5464 + C5463) * C50776 + (C5462 + C5461) * C121) * C50835 *
                C5107 +
            ((C5460 + C5459) * C50776 + (C5458 + C5457) * C121) * C50835 *
                C5106 +
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C50776 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C50835 * C5105) *
               C501 -
           (((C2177 * C3218 + C50692 * C3221 + C2176 * C3216 + C2171 * C3220) *
                 C50776 +
             (C2177 * C3212 + C50692 * C3217 + C2176 * C3211 + C2171 * C3214) *
                 C121) *
                C50835 * C5107 +
            ((C4028 + C4027) * C50776 + (C4026 + C4025) * C121) * C50835 *
                C5106 +
            C2734 * C50835 * C5105) *
               C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C844 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C841 -
            (C5449 + C5450) * C845 - (C5451 + C5452) * C842 + C6021 * C846 +
            C6022 * C843) *
               C50835 * C5105 +
           ((C5450 + C5449) * C844 + (C5452 + C5451) * C841 -
            (C5453 + C5454) * C845 - (C5455 + C5456) * C842 +
            (C6041 + C6042) * C846 + (C6043 + C6044) * C843) *
               C50835 * C5106 +
           (C6021 * C844 + C6022 * C841 - (C6042 + C6041) * C845 -
            (C6044 + C6043) * C842 +
            (C2176 * C6008 + C2171 * C6011 + C2177 * C6009 + C50692 * C6012) *
                C846 +
            (C2176 * C6013 + C2171 * C6017 + C2177 * C6014 + C50692 * C6018) *
                C843) *
               C50835 * C5107) *
              C50746 * C50968 +
          (((C5457 + C5458) * C845 -
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C841 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C844) +
            (C5459 + C5460) * C842 - C6031 * C846 - C6032 * C843) *
               C50835 * C5105 +
           ((C5461 + C5462) * C845 -
            ((C5460 + C5459) * C841 + (C5458 + C5457) * C844) +
            (C5463 + C5464) * C842 - (C6045 + C6046) * C846 -
            (C6047 + C6048) * C843) *
               C50835 * C5106 +
           ((C6046 + C6045) * C845 - (C6032 * C841 + C6031 * C844) +
            (C6048 + C6047) * C842 -
            (C2177 * C6010 + C50692 * C6015 + C2176 * C6009 + C2171 * C6012) *
                C846 -
            (C2177 * C6016 + C50692 * C6019 + C2176 * C6014 + C2171 * C6018) *
                C843) *
               C50835 * C5107) *
              C50746 * C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                 C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                    C121 +
                (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                 C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                    C50776) *
                   C50835 * C50847 * C50975 -
               ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
                 C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                    C50776 +
                (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
                 C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                    C121) *
                   C50835 * C50847 * C50762) *
                  C250 +
              (((C117 * C255 + C105 * C265 + C118 * C254 + C106 * C264 +
                 C119 * C253 + C107 * C263 + C120 * C257 + C108 * C267) *
                    C121 +
                (C117 * C261 + C105 * C273 + C118 * C260 + C106 * C272 +
                 C119 * C259 + C107 * C271 + C120 * C268 + C108 * C275) *
                    C50776) *
                   C50835 * C50847 * C50762 -
               ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
                 C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                    C50776 +
                (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
                 C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                    C121) *
                   C50835 * C50847 * C50975) *
                  C251 +
              (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
                 C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                    C121 +
                (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
                 C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                    C50776) *
                   C50835 * C50847 * C50975 -
               ((C120 * C269 + C108 * C276 + C119 * C268 + C107 * C275 +
                 C118 * C259 + C106 * C271 + C117 * C260 + C105 * C272) *
                    C50776 +
                (C120 * C258 + C108 * C270 + C119 * C257 + C107 * C267 +
                 C118 * C253 + C106 * C263 + C117 * C254 + C105 * C264) *
                    C121) *
                   C50835 * C50847 * C50762) *
                  C252) +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                   C121 +
               (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                   C50776) *
                  C50835 * C50847 * C592 -
              ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
                C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                   C50776 +
               (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
                C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                   C121) *
                  C50835 * C50847 * C593 +
              ((C117 * C506 + C105 * C511 + C118 * C507 + C106 * C512 +
                C119 * C508 + C107 * C513 + C120 * C509 + C108 * C514) *
                   C121 +
               (C117 * C515 + C105 * C521 + C118 * C516 + C106 * C522 +
                C119 * C517 + C107 * C523 + C120 * C518 + C108 * C524) *
                   C50776) *
                  C50835 * C50847 * C594 -
              ((C120 * C601 + C108 * C609 + C119 * C602 + C107 * C610 +
                C118 * C603 + C106 * C611 + C117 * C604 + C105 * C612) *
                   C50776 +
               (C120 * C597 + C108 * C605 + C119 * C598 + C107 * C606 +
                C118 * C599 + C106 * C607 + C117 * C600 + C105 * C608) *
                   C121) *
                  C50835 * C50847 * C595) *
             C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C844 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C841 -
           (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 +
            C118 * C381 + C106 * C387 + C117 * C382 + C105 * C388) *
               C845 -
           (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 +
            C118 * C391 + C106 * C399 + C117 * C392 + C105 * C400) *
               C842 +
           (C117 * C847 + C105 * C852 + C118 * C848 + C106 * C853 +
            C119 * C849 + C107 * C854 + C120 * C850 + C108 * C855) *
               C846 +
           (C117 * C856 + C105 * C862 + C118 * C857 + C106 * C863 +
            C119 * C858 + C107 * C864 + C120 * C859 + C108 * C865) *
               C843) *
              C50835 * C50847 * C50975 +
          ((C117 * C711 + C105 * C719 + C118 * C712 + C106 * C720 +
            C119 * C713 + C107 * C721 + C120 * C714 + C108 * C722) *
               C845 -
           ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
             C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                C841 +
            (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
             C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                C844) +
           (C117 * C723 + C105 * C735 + C118 * C724 + C106 * C736 +
            C119 * C725 + C107 * C737 + C120 * C726 + C108 * C738) *
               C842 -
           (C120 * C965 + C108 * C969 + C119 * C966 + C107 * C970 +
            C118 * C967 + C106 * C971 + C117 * C968 + C105 * C972) *
               C846 -
           (C120 * C973 + C108 * C977 + C119 * C974 + C107 * C978 +
            C118 * C975 + C106 * C979 + C117 * C976 + C105 * C980) *
               C843) *
              C50835 * C50847 * C50762) *
         C50714) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50776) *
                C2173 +
            ((C2373 + C2374) * C121 + (C2375 + C2376) * C50776) * C2174 +
            ((C2377 + C2378) * C121 + (C2379 + C2380) * C50776) * C2175) *
               C50847 * C50975 -
           (((C2177 * C603 + C50692 * C611 + C2176 * C604 + C2171 * C612) *
                 C50776 +
             (C2177 * C599 + C50692 * C607 + C2176 * C600 + C2171 * C608) *
                 C121) *
                C2175 +
            ((C2380 + C2379) * C50776 + (C2378 + C2377) * C121) * C2174 +
            ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C2173) *
               C50847 * C50762) *
              C250 +
          ((((C2381 + C2382) * C121 + (C2383 + C2384) * C50776) * C2173 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50776) * C2174 +
            ((C2176 * C599 + C2171 * C607 + C2177 * C598 + C50692 * C606) *
                 C121 +
             (C2176 * C603 + C2171 * C611 + C2177 * C602 + C50692 * C610) *
                 C50776) *
                C2175) *
               C50847 * C50762 -
           (((C2388 + C2387) * C50776 + (C2386 + C2385) * C121) * C2175 +
            ((C2384 + C2383) * C50776 + (C2382 + C2381) * C121) * C2174 +
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C50776 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50847 * C50975) *
              C251 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                 C50776) *
                C2173 +
            ((C2389 + C2390) * C121 + (C2391 + C2392) * C50776) * C2174 +
            ((C2393 + C2394) * C121 + (C2395 + C2396) * C50776) * C2175) *
               C50847 * C50975 -
           (((C2177 * C601 + C50692 * C609 + C2176 * C602 + C2171 * C610) *
                 C50776 +
             (C2177 * C597 + C50692 * C605 + C2176 * C598 + C2171 * C606) *
                 C121) *
                C2175 +
            ((C2396 + C2395) * C50776 + (C2394 + C2393) * C121) * C2174 +
            ((C2392 + C2391) * C50776 + (C2390 + C2389) * C121) * C2173) *
               C50847 * C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C50776) *
               C2173 +
           ((C2373 + C2374) * C121 + (C2375 + C2376) * C50776) * C2174 +
           C2733 * C2175) *
              C50847 * C592 -
          (C2857 * C2175 +
           ((C2380 + C2379) * C50776 + (C2378 + C2377) * C121) * C2174 +
           ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C2173) *
              C50847 * C593 +
          (C2733 * C2173 +
           ((C2726 + C2725) * C121 + (C2724 + C2723) * C50776) * C2174 +
           ((C2853 + C2854) * C121 + (C2855 + C2856) * C50776) * C2175) *
              C50847 * C594 -
          (((C2177 * C2834 + C50692 * C2838 + C2176 * C2835 + C2171 * C2839) *
                C50776 +
            (C2177 * C2832 + C50692 * C2836 + C2176 * C2833 + C2171 * C2837) *
                C121) *
               C2175 +
           ((C2856 + C2855) * C50776 + (C2854 + C2853) * C121) * C2174 +
           C2857 * C2173) *
              C50847 * C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C844 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C841 -
            (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
                C845 -
            (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
                C842 +
            (C2176 * C847 + C2171 * C852 + C2177 * C848 + C50692 * C853) *
                C846 +
            (C2176 * C856 + C2171 * C862 + C2177 * C857 + C50692 * C863) *
                C843) *
               C2173 +
           ((C2373 + C2374) * C844 + (C2375 + C2376) * C841 -
            (C3046 + C3047) * C845 - (C3048 + C3049) * C842 +
            (C3393 + C3394) * C846 + (C3395 + C3396) * C843) *
               C2174 +
           (C2701 * C844 + C2702 * C841 - C3059 * C845 - C3060 * C842 +
            (C3397 + C3398) * C846 + (C3399 + C3400) * C843) *
               C2175) *
              C50847 * C50975 +
          (((C3047 + C3046) * C845 -
            ((C2376 + C2375) * C841 + (C2374 + C2373) * C844) +
            (C3049 + C3048) * C842 - (C3394 + C3393) * C846 -
            (C3396 + C3395) * C843) *
               C2173 +
           ((C3052 + C3051) * C845 -
            ((C2380 + C2379) * C841 + (C2378 + C2377) * C844) +
            (C3054 + C3053) * C842 - (C3398 + C3397) * C846 -
            (C3400 + C3399) * C843) *
               C2174 +
           ((C3055 + C3056) * C845 - (C2841 * C841 + C2842 * C844) +
            (C3057 + C3058) * C842 -
            (C2177 * C3368 + C50692 * C3370 + C2176 * C3369 + C2171 * C3371) *
                C846 -
            (C2177 * C3372 + C50692 * C3374 + C2176 * C3373 + C2171 * C3375) *
                C843) *
               C2175) *
              C50847 * C50762) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50776) *
                C50835 * C5105 +
            ((C2176 * C382 + C2171 * C388 + C2177 * C381 + C50692 * C387) *
                 C121 +
             (C2176 * C392 + C2171 * C400 + C2177 * C391 + C50692 * C399) *
                 C50776) *
                C50835 * C5106 +
            ((C2176 * C847 + C2171 * C852 + C2177 * C848 + C50692 * C853) *
                 C121 +
             (C2176 * C856 + C2171 * C862 + C2177 * C857 + C50692 * C863) *
                 C50776) *
                C50835 * C5107) *
               C50975 -
           (((C3396 + C3395) * C50776 + (C3394 + C3393) * C121) * C50835 *
                C5107 +
            ((C3048 + C3049) * C50776 + (C3046 + C3047) * C121) * C50835 *
                C5106 +
            ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C50835 *
                C5105) *
               C50762) *
              C250 +
          ((((C2381 + C2382) * C121 + (C2383 + C2384) * C50776) * C50835 *
                C5105 +
            ((C4021 + C4022) * C121 + (C4023 + C4024) * C50776) * C50835 *
                C5106 +
            ((C2176 * C967 + C2171 * C971 + C2177 * C966 + C50692 * C970) *
                 C121 +
             (C2176 * C975 + C2171 * C979 + C2177 * C974 + C50692 * C978) *
                 C50776) *
                C50835 * C5107) *
               C50762 -
           (((C2177 * C858 + C50692 * C864 + C2176 * C857 + C2171 * C863) *
                 C50776 +
             (C2177 * C849 + C50692 * C854 + C2176 * C848 + C2171 * C853) *
                 C121) *
                C50835 * C5107 +
            ((C2177 * C390 + C50692 * C398 + C2176 * C391 + C2171 * C399) *
                 C50776 +
             (C2177 * C380 + C50692 * C386 + C2176 * C381 + C2171 * C387) *
                 C121) *
                C50835 * C5106 +
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C50776 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C50835 * C5105) *
               C50975) *
              C251 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                 C50776) *
                C50835 * C5105 +
            ((C2176 * C380 + C2171 * C386 + C2177 * C379 + C50692 * C385) *
                 C121 +
             (C2176 * C390 + C2171 * C398 + C2177 * C389 + C50692 * C397) *
                 C50776) *
                C50835 * C5106 +
            ((C2176 * C849 + C2171 * C854 + C2177 * C850 + C50692 * C855) *
                 C121 +
             (C2176 * C858 + C2171 * C864 + C2177 * C859 + C50692 * C865) *
                 C50776) *
                C50835 * C5107) *
               C50975 -
           (((C2177 * C973 + C50692 * C977 + C2176 * C974 + C2171 * C978) *
                 C50776 +
             (C2177 * C965 + C50692 * C969 + C2176 * C966 + C2171 * C970) *
                 C121) *
                C50835 * C5107 +
            ((C2177 * C726 + C50692 * C738 + C2176 * C725 + C2171 * C737) *
                 C50776 +
             (C2177 * C714 + C50692 * C722 + C2176 * C713 + C2171 * C721) *
                 C121) *
                C50835 * C5106 +
            ((C2392 + C2391) * C50776 + (C2390 + C2389) * C121) * C50835 *
                C5105) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C50776) *
               C50835 * C5105 +
           ((C5450 + C5449) * C121 + (C5452 + C5451) * C50776) * C50835 *
               C5106 +
           ((C5454 + C5453) * C121 + (C5456 + C5455) * C50776) * C50835 *
               C5107) *
              C592 -
          (((C3396 + C3395) * C50776 + (C3394 + C3393) * C121) * C50835 *
               C5107 +
           ((C3048 + C3049) * C50776 + (C3046 + C3047) * C121) * C50835 *
               C5106 +
           ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C50835 *
               C5105) *
              C593 +
          (C2733 * C50835 * C5105 +
           ((C3052 + C3051) * C121 + (C3054 + C3053) * C50776) * C50835 *
               C5106 +
           ((C3397 + C3398) * C121 + (C3399 + C3400) * C50776) * C50835 *
               C5107) *
              C594 -
          (((C2177 * C3372 + C50692 * C3374 + C2176 * C3373 + C2171 * C3375) *
                C50776 +
            (C2177 * C3368 + C50692 * C3370 + C2176 * C3369 + C2171 * C3371) *
                C121) *
               C50835 * C5107 +
           ((C3058 + C3057) * C50776 + (C3056 + C3055) * C121) * C50835 *
               C5106 +
           C2857 * C50835 * C5105) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C844 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C841 -
            (C5449 + C5450) * C845 - (C5451 + C5452) * C842 + C6021 * C846 +
            C6022 * C843) *
               C50835 * C5105 +
           ((C5450 + C5449) * C844 + (C5452 + C5451) * C841 -
            (C5453 + C5454) * C845 - (C5455 + C5456) * C842 +
            (C6041 + C6042) * C846 + (C6043 + C6044) * C843) *
               C50835 * C5106 +
           (C6021 * C844 + C6022 * C841 - (C6042 + C6041) * C845 -
            (C6044 + C6043) * C842 +
            (C2176 * C6008 + C2171 * C6011 + C2177 * C6009 + C50692 * C6012) *
                C846 +
            (C2176 * C6013 + C2171 * C6017 + C2177 * C6014 + C50692 * C6018) *
                C843) *
               C50835 * C5107) *
              C50975 +
          (((C3047 + C3046) * C845 -
            ((C2376 + C2375) * C841 + (C2374 + C2373) * C844) +
            (C3049 + C3048) * C842 - C6203 * C846 - C6204 * C843) *
               C50835 * C5105 +
           ((C3393 + C3394) * C845 -
            ((C3048 + C3049) * C841 + (C3046 + C3047) * C844) +
            (C3395 + C3396) * C842 - (C6213 + C6214) * C846 -
            (C6215 + C6216) * C843) *
               C50835 * C5106 +
           ((C6214 + C6213) * C845 - (C6204 * C841 + C6203 * C844) +
            (C6216 + C6215) * C842 -
            (C2177 * C6194 + C50692 * C6196 + C2176 * C6195 + C2171 * C6197) *
                C846 -
            (C2177 * C6198 + C50692 * C6200 + C2176 * C6199 + C2171 * C6201) *
                C843) *
               C50835 * C5107) *
              C50762) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                   C377 +
               (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                   C50977 -
               (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 +
                C118 * C381 + C106 * C387 + C117 * C382 + C105 * C388) *
                   C378 -
               (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 +
                C118 * C391 + C106 * C399 + C117 * C392 + C105 * C400) *
                   C50788) *
                  C50835 * C50847 * C50746 * C250 +
              ((C117 * C381 + C105 * C387 + C118 * C380 + C106 * C386 +
                C119 * C379 + C107 * C385 + C120 * C383 + C108 * C393) *
                   C378 -
               ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
                 C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                    C50977 +
                (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
                 C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                    C377) +
               (C117 * C391 + C105 * C399 + C118 * C390 + C106 * C398 +
                C119 * C389 + C107 * C397 + C120 * C394 + C108 * C401) *
                   C50788) *
                  C50835 * C50847 * C50746 * C251 +
              ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
                C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                   C377 +
               (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
                C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                   C50977 -
               (C120 * C384 + C108 * C395 + C119 * C383 + C107 * C393 +
                C118 * C379 + C106 * C385 + C117 * C380 + C105 * C386) *
                   C378 -
               (C120 * C396 + C108 * C402 + C119 * C394 + C107 * C401 +
                C118 * C389 + C106 * C397 + C117 * C390 + C105 * C398) *
                   C50788) *
                  C50835 * C50847 * C50746 * C252) +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                   C377 +
               (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                   C50977 -
               (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 +
                C118 * C381 + C106 * C387 + C117 * C382 + C105 * C388) *
                   C378 -
               (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 +
                C118 * C391 + C106 * C399 + C117 * C392 + C105 * C400) *
                   C50788) *
                  C50835 * C50847 * C501 +
              ((C117 * C711 + C105 * C719 + C118 * C712 + C106 * C720 +
                C119 * C713 + C107 * C721 + C120 * C714 + C108 * C722) *
                   C378 -
               ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
                 C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                    C50977 +
                (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
                 C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                    C377) +
               (C117 * C723 + C105 * C735 + C118 * C724 + C106 * C736 +
                C119 * C725 + C107 * C737 + C120 * C726 + C108 * C738) *
                   C50788) *
                  C50835 * C50847 * C502 +
              ((C117 * C506 + C105 * C511 + C118 * C507 + C106 * C512 +
                C119 * C508 + C107 * C513 + C120 * C509 + C108 * C514) *
                   C377 +
               (C117 * C515 + C105 * C521 + C118 * C516 + C106 * C522 +
                C119 * C517 + C107 * C523 + C120 * C518 + C108 * C524) *
                   C50977 -
               (C120 * C715 + C108 * C727 + C119 * C716 + C107 * C728 +
                C118 * C717 + C106 * C729 + C117 * C718 + C105 * C730) *
                   C378 -
               (C120 * C731 + C108 * C739 + C119 * C732 + C107 * C740 +
                C118 * C733 + C106 * C741 + C117 * C734 + C105 * C742) *
                   C50788) *
                  C50835 * C50847 * C503) *
             C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 + C119 * C124 +
           C107 * C131 + C120 * C125 + C108 * C132) *
              C1051 +
          (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 + C119 * C135 +
           C107 * C145 + C120 * C136 + C108 * C146) *
              C1047 -
          (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 + C118 * C381 +
           C106 * C387 + C117 * C382 + C105 * C388) *
              C1052 -
          (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 + C118 * C391 +
           C106 * C399 + C117 * C392 + C105 * C400) *
              C1048 +
          (C117 * C847 + C105 * C852 + C118 * C848 + C106 * C853 + C119 * C849 +
           C107 * C854 + C120 * C850 + C108 * C855) *
              C1053 +
          (C117 * C856 + C105 * C862 + C118 * C857 + C106 * C863 + C119 * C858 +
           C107 * C864 + C120 * C859 + C108 * C865) *
              C1049 -
          (C120 * C1055 + C108 * C1059 + C119 * C1056 + C107 * C1060 +
           C118 * C1057 + C106 * C1061 + C117 * C1058 + C105 * C1062) *
              C1054 -
          (C120 * C1063 + C108 * C1067 + C119 * C1064 + C107 * C1068 +
           C118 * C1065 + C106 * C1069 + C117 * C1066 + C105 * C1070) *
              C1050) *
         C50835 * C50847 * C50746 * C50714) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C377 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C50977 -
            (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
                C378 -
            (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
                C50788) *
               C2173 +
           ((C2373 + C2374) * C377 + (C2375 + C2376) * C50977 -
            (C2177 * C712 + C50692 * C720 + C2176 * C711 + C2171 * C719) *
                C378 -
            (C2177 * C724 + C50692 * C736 + C2176 * C723 + C2171 * C735) *
                C50788) *
               C2174 +
           ((C2377 + C2378) * C377 + (C2379 + C2380) * C50977 -
            (C2177 * C717 + C50692 * C729 + C2176 * C718 + C2171 * C730) *
                C378 -
            (C2177 * C733 + C50692 * C741 + C2176 * C734 + C2171 * C742) *
                C50788) *
               C2175) *
              C50847 * C50746 * C250 +
          (((C2176 * C381 + C2171 * C387 + C2177 * C380 + C50692 * C386) *
                C378 -
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C50977 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C377) +
            (C2176 * C391 + C2171 * C399 + C2177 * C390 + C50692 * C398) *
                C50788) *
               C2173 +
           ((C2176 * C712 + C2171 * C720 + C2177 * C713 + C50692 * C721) *
                C378 -
            ((C2384 + C2383) * C50977 + (C2382 + C2381) * C377) +
            (C2176 * C724 + C2171 * C736 + C2177 * C725 + C50692 * C737) *
                C50788) *
               C2174 +
           ((C2176 * C717 + C2171 * C729 + C2177 * C716 + C50692 * C728) *
                C378 -
            ((C2388 + C2387) * C50977 + (C2386 + C2385) * C377) +
            (C2176 * C733 + C2171 * C741 + C2177 * C732 + C50692 * C740) *
                C50788) *
               C2175) *
              C50847 * C50746 * C251 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                C377 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                C50977 -
            (C2177 * C379 + C50692 * C385 + C2176 * C380 + C2171 * C386) *
                C378 -
            (C2177 * C389 + C50692 * C397 + C2176 * C390 + C2171 * C398) *
                C50788) *
               C2173 +
           ((C2389 + C2390) * C377 + (C2391 + C2392) * C50977 -
            (C2177 * C714 + C50692 * C722 + C2176 * C713 + C2171 * C721) *
                C378 -
            (C2177 * C726 + C50692 * C738 + C2176 * C725 + C2171 * C737) *
                C50788) *
               C2174 +
           ((C2393 + C2394) * C377 + (C2395 + C2396) * C50977 -
            (C2177 * C715 + C50692 * C727 + C2176 * C716 + C2171 * C728) *
                C378 -
            (C2177 * C731 + C50692 * C739 + C2176 * C732 + C2171 * C740) *
                C50788) *
               C2175) *
              C50847 * C50746 * C252)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C377 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C50977 -
            (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
                C378 -
            (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
                C50788) *
               C2173 +
           ((C2373 + C2374) * C377 + (C2375 + C2376) * C50977 -
            (C3046 + C3047) * C378 - (C3048 + C3049) * C50788) *
               C2174 +
           C3064 * C2175) *
              C50847 * C501 +
          (((C3047 + C3046) * C378 -
            ((C2376 + C2375) * C50977 + (C2374 + C2373) * C377) +
            (C3049 + C3048) * C50788) *
               C2173 +
           ((C3052 + C3051) * C378 -
            ((C2380 + C2379) * C50977 + (C2378 + C2377) * C377) +
            (C3054 + C3053) * C50788) *
               C2174 +
           ((C3055 + C3056) * C378 - (C2841 * C50977 + C2842 * C377) +
            (C3057 + C3058) * C50788) *
               C2175) *
              C50847 * C502 +
          (C3064 * C2173 +
           ((C2726 + C2725) * C377 + (C2724 + C2723) * C50977 -
            (C3056 + C3055) * C378 - (C3058 + C3057) * C50788) *
               C2174 +
           ((C2853 + C2854) * C377 + (C2855 + C2856) * C50977 -
            (C2177 * C3005 + C50692 * C3011 + C2176 * C3006 + C2171 * C3012) *
                C378 -
            (C2177 * C3013 + C50692 * C3017 + C2176 * C3014 + C2171 * C3018) *
                C50788) *
               C2175) *
              C50847 * C503) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
               C1051 +
           (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
               C1047 -
           (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
               C1052 -
           (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
               C1048 +
           (C2176 * C847 + C2171 * C852 + C2177 * C848 + C50692 * C853) *
               C1053 +
           (C2176 * C856 + C2171 * C862 + C2177 * C857 + C50692 * C863) *
               C1049 -
           (C2177 * C1057 + C50692 * C1061 + C2176 * C1058 + C2171 * C1062) *
               C1054 -
           (C2177 * C1065 + C50692 * C1069 + C2176 * C1066 + C2171 * C1070) *
               C1050) *
              C2173 +
          ((C2373 + C2374) * C1051 + (C2375 + C2376) * C1047 -
           (C3046 + C3047) * C1052 - (C3048 + C3049) * C1048 +
           (C3393 + C3394) * C1053 + (C3395 + C3396) * C1049 -
           (C2177 * C3498 + C50692 * C3502 + C2176 * C3499 + C2171 * C3503) *
               C1054 -
           (C2177 * C3504 + C50692 * C3510 + C2176 * C3505 + C2171 * C3511) *
               C1050) *
              C2174 +
          (C2701 * C1051 + C2702 * C1047 - C3059 * C1052 - C3060 * C1048 +
           (C3397 + C3398) * C1053 + (C3399 + C3400) * C1049 -
           (C2177 * C3500 + C50692 * C3506 + C2176 * C3501 + C2171 * C3507) *
               C1054 -
           (C2177 * C3508 + C50692 * C3512 + C2176 * C3509 + C2171 * C3513) *
               C1050) *
              C2175) *
         C50847 * C50746 * C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C377 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C50977 -
            (C5449 + C5450) * C378 - (C5451 + C5452) * C50788) *
               C50835 * C5105 +
           ((C5450 + C5449) * C377 + (C5452 + C5451) * C50977 -
            (C5453 + C5454) * C378 - (C5455 + C5456) * C50788) *
               C50835 * C5106 +
           ((C5454 + C5453) * C377 + (C5456 + C5455) * C50977 -
            (C2177 * C1057 + C50692 * C1061 + C2176 * C1058 + C2171 * C1062) *
                C378 -
            (C2177 * C1065 + C50692 * C1069 + C2176 * C1066 + C2171 * C1070) *
                C50788) *
               C50835 * C5107) *
              C50746 * C250 +
          (((C5457 + C5458) * C378 -
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C50977 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C377) +
            (C5459 + C5460) * C50788) *
               C50835 * C5105 +
           ((C5461 + C5462) * C378 -
            ((C5460 + C5459) * C50977 + (C5458 + C5457) * C377) +
            (C5463 + C5464) * C50788) *
               C50835 * C5106 +
           ((C2176 * C1057 + C2171 * C1061 + C2177 * C1056 + C50692 * C1060) *
                C378 -
            ((C5464 + C5463) * C50977 + (C5462 + C5461) * C377) +
            (C2176 * C1065 + C2171 * C1069 + C2177 * C1064 + C50692 * C1068) *
                C50788) *
               C50835 * C5107) *
              C50746 * C251 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                C377 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                C50977 -
            (C5465 + C5466) * C378 - (C5467 + C5468) * C50788) *
               C50835 * C5105 +
           ((C5466 + C5465) * C377 + (C5468 + C5467) * C50977 -
            (C5469 + C5470) * C378 - (C5471 + C5472) * C50788) *
               C50835 * C5106 +
           ((C5470 + C5469) * C377 + (C5472 + C5471) * C50977 -
            (C2177 * C1055 + C50692 * C1059 + C2176 * C1056 + C2171 * C1060) *
                C378 -
            (C2177 * C1063 + C50692 * C1067 + C2176 * C1064 + C2171 * C1068) *
                C50788) *
               C50835 * C5107) *
              C50746 * C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C377 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C50977 -
            (C5449 + C5450) * C378 - (C5451 + C5452) * C50788) *
               C50835 * C5105 +
           ((C5450 + C5449) * C377 + (C5452 + C5451) * C50977 -
            (C5453 + C5454) * C378 - (C5455 + C5456) * C50788) *
               C50835 * C5106 +
           ((C5454 + C5453) * C377 + (C5456 + C5455) * C50977 -
            (C2177 * C1057 + C50692 * C1061 + C2176 * C1058 + C2171 * C1062) *
                C378 -
            (C2177 * C1065 + C50692 * C1069 + C2176 * C1066 + C2171 * C1070) *
                C50788) *
               C50835 * C5107) *
              C501 +
          (((C3047 + C3046) * C378 -
            ((C2376 + C2375) * C50977 + (C2374 + C2373) * C377) +
            (C3049 + C3048) * C50788) *
               C50835 * C5105 +
           ((C3393 + C3394) * C378 -
            ((C3048 + C3049) * C50977 + (C3046 + C3047) * C377) +
            (C3395 + C3396) * C50788) *
               C50835 * C5106 +
           ((C2176 * C3499 + C2171 * C3503 + C2177 * C3498 + C50692 * C3502) *
                C378 -
            ((C3396 + C3395) * C50977 + (C3394 + C3393) * C377) +
            (C2176 * C3505 + C2171 * C3511 + C2177 * C3504 + C50692 * C3510) *
                C50788) *
               C50835 * C5107) *
              C502 +
          (C3064 * C50835 * C5105 +
           ((C3052 + C3051) * C377 + (C3054 + C3053) * C50977 -
            (C3398 + C3397) * C378 - (C3400 + C3399) * C50788) *
               C50835 * C5106 +
           ((C3397 + C3398) * C377 + (C3399 + C3400) * C50977 -
            (C2177 * C3500 + C50692 * C3506 + C2176 * C3501 + C2171 * C3507) *
                C378 -
            (C2177 * C3508 + C50692 * C3512 + C2176 * C3509 + C2171 * C3513) *
                C50788) *
               C50835 * C5107) *
              C503) *
         C50714) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
               C1051 +
           (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
               C1047 -
           (C5449 + C5450) * C1052 - (C5451 + C5452) * C1048 + C6021 * C1053 +
           C6022 * C1049 - C6323 * C1054 - C6324 * C1050) *
              C50835 * C5105 +
          ((C5450 + C5449) * C1051 + (C5452 + C5451) * C1047 -
           (C5453 + C5454) * C1052 - (C5455 + C5456) * C1048 +
           (C6041 + C6042) * C1053 + (C6043 + C6044) * C1049 -
           (C6333 + C6334) * C1054 - (C6335 + C6336) * C1050) *
              C50835 * C5106 +
          (C6021 * C1051 + C6022 * C1047 - C6323 * C1052 - C6324 * C1048 +
           (C6334 + C6333) * C1053 + (C6336 + C6335) * C1049 -
           (C2177 * C6314 + C50692 * C6316 + C2176 * C6315 + C2171 * C6317) *
               C1054 -
           (C2177 * C6318 + C50692 * C6320 + C2176 * C6319 + C2171 * C6321) *
               C1050) *
              C50835 * C5107) *
         C50746 * C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C1511 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C1509 -
            (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
                C1512 -
            (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
                C50788) *
               C2173 +
           ((C2373 + C2374) * C1511 + (C2375 + C2376) * C1509 -
            (C3046 + C3047) * C1512 - (C3048 + C3049) * C50788) *
               C2174 +
           (C2701 * C1511 + C2702 * C1509 - C3059 * C1512 - C3060 * C50788) *
               C2175) *
              C50847 * C50746 * C51021 +
          (((C2176 * C381 + C2171 * C387 + C2177 * C380 + C50692 * C386) *
                C1512 -
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C1509 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C1511) +
            (C2176 * C391 + C2171 * C399 + C2177 * C390 + C50692 * C398) *
                C50788) *
               C2173 +
           ((C4021 + C4022) * C1512 -
            ((C2384 + C2383) * C1509 + (C2382 + C2381) * C1511) +
            (C4023 + C4024) * C50788) *
               C2174 +
           ((C4025 + C4026) * C1512 - (C2719 * C1509 + C2720 * C1511) +
            (C4027 + C4028) * C50788) *
               C2175) *
              C50847 * C50746 * C51006 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                C1511 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                C1509 -
            (C2177 * C379 + C50692 * C385 + C2176 * C380 + C2171 * C386) *
                C1512 -
            (C2177 * C389 + C50692 * C397 + C2176 * C390 + C2171 * C398) *
                C50788) *
               C2173 +
           ((C2389 + C2390) * C1511 + (C2391 + C2392) * C1509 -
            (C2177 * C714 + C50692 * C722 + C2176 * C713 + C2171 * C721) *
                C1512 -
            (C2177 * C726 + C50692 * C738 + C2176 * C725 + C2171 * C737) *
                C50788) *
               C2174 +
           ((C2393 + C2394) * C1511 + (C2395 + C2396) * C1509 -
            (C2177 * C715 + C50692 * C727 + C2176 * C716 + C2171 * C728) *
                C1512 -
            (C2177 * C731 + C50692 * C739 + C2176 * C732 + C2171 * C740) *
                C50788) *
               C2175) *
              C50847 * C50746 * C1173)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C1511 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C1509 -
           (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 +
            C118 * C381 + C106 * C387 + C117 * C382 + C105 * C388) *
               C1512 -
           (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 +
            C118 * C391 + C106 * C399 + C117 * C392 + C105 * C400) *
               C50788) *
              C50835 * C50847 * C50746 * C51021 +
          ((C117 * C381 + C105 * C387 + C118 * C380 + C106 * C386 +
            C119 * C379 + C107 * C385 + C120 * C383 + C108 * C393) *
               C1512 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C1509 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C1511) +
           (C117 * C391 + C105 * C399 + C118 * C390 + C106 * C398 +
            C119 * C389 + C107 * C397 + C120 * C394 + C108 * C401) *
               C50788) *
              C50835 * C50847 * C50746 * C51006 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C1511 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C1509 -
           (C120 * C384 + C108 * C395 + C119 * C383 + C107 * C393 +
            C118 * C379 + C106 * C385 + C117 * C380 + C105 * C386) *
               C1512 -
           (C120 * C396 + C108 * C402 + C119 * C394 + C107 * C401 +
            C118 * C389 + C106 * C397 + C117 * C390 + C105 * C398) *
               C50788) *
              C50835 * C50847 * C50746 * C1173)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C1511 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C1509 -
            (C5449 + C5450) * C1512 - (C5451 + C5452) * C50788) *
               C50835 * C5105 +
           ((C5450 + C5449) * C1511 + (C5452 + C5451) * C1509 -
            (C5453 + C5454) * C1512 - (C5455 + C5456) * C50788) *
               C50835 * C5106 +
           (C6021 * C1511 + C6022 * C1509 - C6323 * C1512 - C6324 * C50788) *
               C50835 * C5107) *
              C50746 * C51021 +
          (((C5457 + C5458) * C1512 -
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C1509 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C1511) +
            (C5459 + C5460) * C50788) *
               C50835 * C5105 +
           ((C5461 + C5462) * C1512 -
            ((C5460 + C5459) * C1509 + (C5458 + C5457) * C1511) +
            (C5463 + C5464) * C50788) *
               C50835 * C5106 +
           ((C6046 + C6045) * C1512 - (C6032 * C1509 + C6031 * C1511) +
            (C6048 + C6047) * C50788) *
               C50835 * C5107) *
              C50746 * C51006 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                C1511 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                C1509 -
            (C5465 + C5466) * C1512 - (C5467 + C5468) * C50788) *
               C50835 * C5105 +
           ((C5466 + C5465) * C1511 + (C5468 + C5467) * C1509 -
            (C5469 + C5470) * C1512 - (C5471 + C5472) * C50788) *
               C50835 * C5106 +
           ((C5470 + C5469) * C1511 + (C5472 + C5471) * C1509 -
            (C2177 * C1055 + C50692 * C1059 + C2176 * C1056 + C2171 * C1060) *
                C1512 -
            (C2177 * C1063 + C50692 * C1067 + C2176 * C1064 + C2171 * C1068) *
                C50788) *
               C50835 * C5107) *
              C50746 * C1173)) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C1511 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C1509 -
             (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
                 C1512 -
             (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
                 C50788) *
                C2173 +
            ((C2373 + C2374) * C1511 + (C2375 + C2376) * C1509 -
             (C3046 + C3047) * C1512 - (C3048 + C3049) * C50788) *
                C2174 +
            (C2701 * C1511 + C2702 * C1509 - C3059 * C1512 - C3060 * C50788) *
                C2175) *
               C50847 * C50975 +
           (((C3047 + C3046) * C1512 -
             ((C2376 + C2375) * C1509 + (C2374 + C2373) * C1511) +
             (C3049 + C3048) * C50788) *
                C2173 +
            ((C3052 + C3051) * C1512 -
             ((C2380 + C2379) * C1509 + (C2378 + C2377) * C1511) +
             (C3054 + C3053) * C50788) *
                C2174 +
            ((C3055 + C3056) * C1512 - (C2841 * C1509 + C2842 * C1511) +
             (C3057 + C3058) * C50788) *
                C2175) *
               C50847 * C50762) *
              C1275 +
          ((((C2176 * C381 + C2171 * C387 + C2177 * C380 + C50692 * C386) *
                 C1512 -
             ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                  C1509 +
              (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                  C1511) +
             (C2176 * C391 + C2171 * C399 + C2177 * C390 + C50692 * C398) *
                 C50788) *
                C2173 +
            ((C4021 + C4022) * C1512 -
             ((C2384 + C2383) * C1509 + (C2382 + C2381) * C1511) +
             (C4023 + C4024) * C50788) *
                C2174 +
            ((C4025 + C4026) * C1512 - (C2719 * C1509 + C2720 * C1511) +
             (C4027 + C4028) * C50788) *
                C2175) *
               C50847 * C50975 +
           (((C2381 + C2382) * C1511 + (C2383 + C2384) * C1509 -
             (C4022 + C4021) * C1512 - (C4024 + C4023) * C50788) *
                C2173 +
            ((C2385 + C2386) * C1511 + (C2387 + C2388) * C1509 -
             (C4026 + C4025) * C1512 - (C4028 + C4027) * C50788) *
                C2174 +
            ((C2727 + C2728) * C1511 + (C2729 + C2730) * C1509 -
             (C2177 * C4000 + C50692 * C4001 + C2176 * C3004 + C2171 * C3008) *
                 C1512 -
             (C2177 * C4002 + C50692 * C4003 + C2176 * C3010 + C2171 * C3016) *
                 C50788) *
                C2175) *
               C50847 * C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C1511 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C1509 -
            (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 +
             C118 * C381 + C106 * C387 + C117 * C382 + C105 * C388) *
                C1512 -
            (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 +
             C118 * C391 + C106 * C399 + C117 * C392 + C105 * C400) *
                C50788) *
               C50835 * C50847 * C50975 +
           ((C117 * C711 + C105 * C719 + C118 * C712 + C106 * C720 +
             C119 * C713 + C107 * C721 + C120 * C714 + C108 * C722) *
                C1512 -
            ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
              C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                 C1509 +
             (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
              C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                 C1511) +
            (C117 * C723 + C105 * C735 + C118 * C724 + C106 * C736 +
             C119 * C725 + C107 * C737 + C120 * C726 + C108 * C738) *
                C50788) *
               C50835 * C50847 * C50762) *
              C1275 +
          (((C117 * C381 + C105 * C387 + C118 * C380 + C106 * C386 +
             C119 * C379 + C107 * C385 + C120 * C383 + C108 * C393) *
                C1512 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C1509 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C1511) +
            (C117 * C391 + C105 * C399 + C118 * C390 + C106 * C398 +
             C119 * C389 + C107 * C397 + C120 * C394 + C108 * C401) *
                C50788) *
               C50835 * C50847 * C50975 +
           ((C117 * C255 + C105 * C265 + C118 * C254 + C106 * C264 +
             C119 * C253 + C107 * C263 + C120 * C257 + C108 * C267) *
                C1511 +
            (C117 * C261 + C105 * C273 + C118 * C260 + C106 * C272 +
             C119 * C259 + C107 * C271 + C120 * C268 + C108 * C275) *
                C1509 -
            (C120 * C1407 + C108 * C1408 + C119 * C714 + C107 * C722 +
             C118 * C713 + C106 * C721 + C117 * C712 + C105 * C720) *
                C1512 -
            (C120 * C1409 + C108 * C1410 + C119 * C726 + C107 * C738 +
             C118 * C725 + C106 * C737 + C117 * C724 + C105 * C736) *
                C50788) *
               C50835 * C50847 * C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C1511 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C1509 -
             (C5449 + C5450) * C1512 - (C5451 + C5452) * C50788) *
                C50835 * C5105 +
            ((C5450 + C5449) * C1511 + (C5452 + C5451) * C1509 -
             (C5453 + C5454) * C1512 - (C5455 + C5456) * C50788) *
                C50835 * C5106 +
            (C6021 * C1511 + C6022 * C1509 - C6323 * C1512 - C6324 * C50788) *
                C50835 * C5107) *
               C50975 +
           (((C3047 + C3046) * C1512 -
             ((C2376 + C2375) * C1509 + (C2374 + C2373) * C1511) +
             (C3049 + C3048) * C50788) *
                C50835 * C5105 +
            ((C3393 + C3394) * C1512 -
             ((C3048 + C3049) * C1509 + (C3046 + C3047) * C1511) +
             (C3395 + C3396) * C50788) *
                C50835 * C5106 +
            ((C6214 + C6213) * C1512 - (C6204 * C1509 + C6203 * C1511) +
             (C6216 + C6215) * C50788) *
                C50835 * C5107) *
               C50762) *
              C1275 +
          ((((C5457 + C5458) * C1512 -
             ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                  C1509 +
              (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                  C1511) +
             (C5459 + C5460) * C50788) *
                C50835 * C5105 +
            ((C5461 + C5462) * C1512 -
             ((C5460 + C5459) * C1509 + (C5458 + C5457) * C1511) +
             (C5463 + C5464) * C50788) *
                C50835 * C5106 +
            ((C6046 + C6045) * C1512 - (C6032 * C1509 + C6031 * C1511) +
             (C6048 + C6047) * C50788) *
                C50835 * C5107) *
               C50975 +
           (((C2381 + C2382) * C1511 + (C2383 + C2384) * C1509 -
             (C4022 + C4021) * C1512 - (C4024 + C4023) * C50788) *
                C50835 * C5105 +
            ((C4021 + C4022) * C1511 + (C4023 + C4024) * C1509 -
             (C6835 + C6836) * C1512 - (C6837 + C6838) * C50788) *
                C50835 * C5106 +
            ((C6836 + C6835) * C1511 + (C6838 + C6837) * C1509 -
             (C2177 * C6822 + C50692 * C6823 + C2176 * C3498 + C2171 * C3502) *
                 C1512 -
             (C2177 * C6824 + C50692 * C6825 + C2176 * C3504 + C2171 * C3510) *
                 C50788) *
                C50835 * C5107) *
               C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C1744 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C51023 -
            (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
                C1745 -
            (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
                C51012 +
            (C2176 * C847 + C2171 * C852 + C2177 * C848 + C50692 * C853) *
                C1746 +
            (C2176 * C856 + C2171 * C862 + C2177 * C857 + C50692 * C863) *
                C1743) *
               C2173 +
           ((C2373 + C2374) * C1744 + (C2375 + C2376) * C51023 -
            (C3046 + C3047) * C1745 - (C3048 + C3049) * C51012 +
            (C3393 + C3394) * C1746 + (C3395 + C3396) * C1743) *
               C2174 +
           (C2701 * C1744 + C2702 * C51023 - C3059 * C1745 - C3060 * C51012 +
            (C3397 + C3398) * C1746 + (C3399 + C3400) * C1743) *
               C2175) *
              C50847 * C50746 * C1275 +
          (((C2176 * C381 + C2171 * C387 + C2177 * C380 + C50692 * C386) *
                C1745 -
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C51023 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C1744) +
            (C2176 * C391 + C2171 * C399 + C2177 * C390 + C50692 * C398) *
                C51012 -
            (C2177 * C849 + C50692 * C854 + C2176 * C848 + C2171 * C853) *
                C1746 -
            (C2177 * C858 + C50692 * C864 + C2176 * C857 + C2171 * C863) *
                C1743) *
               C2173 +
           ((C4021 + C4022) * C1745 -
            ((C2384 + C2383) * C51023 + (C2382 + C2381) * C1744) +
            (C4023 + C4024) * C51012 -
            (C2177 * C966 + C50692 * C970 + C2176 * C967 + C2171 * C971) *
                C1746 -
            (C2177 * C974 + C50692 * C978 + C2176 * C975 + C2171 * C979) *
                C1743) *
               C2174 +
           ((C4025 + C4026) * C1745 - (C2719 * C51023 + C2720 * C1744) +
            (C4027 + C4028) * C51012 -
            (C2177 * C3212 + C50692 * C3217 + C2176 * C3211 + C2171 * C3214) *
                C1746 -
            (C2177 * C3218 + C50692 * C3221 + C2176 * C3216 + C2171 * C3220) *
                C1743) *
               C2175) *
              C50847 * C50746 * C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C1744 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C51023 -
           (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 +
            C118 * C381 + C106 * C387 + C117 * C382 + C105 * C388) *
               C1745 -
           (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 +
            C118 * C391 + C106 * C399 + C117 * C392 + C105 * C400) *
               C51012 +
           (C117 * C847 + C105 * C852 + C118 * C848 + C106 * C853 +
            C119 * C849 + C107 * C854 + C120 * C850 + C108 * C855) *
               C1746 +
           (C117 * C856 + C105 * C862 + C118 * C857 + C106 * C863 +
            C119 * C858 + C107 * C864 + C120 * C859 + C108 * C865) *
               C1743) *
              C50835 * C50847 * C50746 * C1275 +
          ((C117 * C381 + C105 * C387 + C118 * C380 + C106 * C386 +
            C119 * C379 + C107 * C385 + C120 * C383 + C108 * C393) *
               C1745 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C51023 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C1744) +
           (C117 * C391 + C105 * C399 + C118 * C390 + C106 * C398 +
            C119 * C389 + C107 * C397 + C120 * C394 + C108 * C401) *
               C51012 -
           (C120 * C851 + C108 * C860 + C119 * C850 + C107 * C855 +
            C118 * C849 + C106 * C854 + C117 * C848 + C105 * C853) *
               C1746 -
           (C120 * C861 + C108 * C866 + C119 * C859 + C107 * C865 +
            C118 * C858 + C106 * C864 + C117 * C857 + C105 * C863) *
               C1743) *
              C50835 * C50847 * C50746 * C50719)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C1744 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C51023 -
            (C5449 + C5450) * C1745 - (C5451 + C5452) * C51012 + C6021 * C1746 +
            C6022 * C1743) *
               C50835 * C5105 +
           ((C5450 + C5449) * C1744 + (C5452 + C5451) * C51023 -
            (C5453 + C5454) * C1745 - (C5455 + C5456) * C51012 +
            (C6041 + C6042) * C1746 + (C6043 + C6044) * C1743) *
               C50835 * C5106 +
           (C6021 * C1744 + C6022 * C51023 - C6323 * C1745 - C6324 * C51012 +
            (C6334 + C6333) * C1746 + (C6336 + C6335) * C1743) *
               C50835 * C5107) *
              C50746 * C1275 +
          (((C5457 + C5458) * C1745 -
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C51023 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C1744) +
            (C5459 + C5460) * C51012 - C6031 * C1746 - C6032 * C1743) *
               C50835 * C5105 +
           ((C5461 + C5462) * C1745 -
            ((C5460 + C5459) * C51023 + (C5458 + C5457) * C1744) +
            (C5463 + C5464) * C51012 - (C6045 + C6046) * C1746 -
            (C6047 + C6048) * C1743) *
               C50835 * C5106 +
           ((C6046 + C6045) * C1745 - (C6032 * C51023 + C6031 * C1744) +
            (C6048 + C6047) * C51012 -
            (C2177 * C6010 + C50692 * C6015 + C2176 * C6009 + C2171 * C6012) *
                C1746 -
            (C2177 * C6016 + C50692 * C6019 + C2176 * C6014 + C2171 * C6018) *
                C1743) *
               C50835 * C5107) *
              C50746 * C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50776) *
               C50835 * C50847 * C501 -
           ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
             C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                C50776 +
            (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
             C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                C121) *
               C50835 * C50847 * C502 +
           ((C117 * C506 + C105 * C511 + C118 * C507 + C106 * C512 +
             C119 * C508 + C107 * C513 + C120 * C509 + C108 * C514) *
                C121 +
            (C117 * C515 + C105 * C521 + C118 * C516 + C106 * C522 +
             C119 * C517 + C107 * C523 + C120 * C518 + C108 * C524) *
                C50776) *
               C50835 * C50847 * C503) *
              C50968 +
          (((C117 * C255 + C105 * C265 + C118 * C254 + C106 * C264 +
             C119 * C253 + C107 * C263 + C120 * C257 + C108 * C267) *
                C121 +
            (C117 * C261 + C105 * C273 + C118 * C260 + C106 * C272 +
             C119 * C259 + C107 * C271 + C120 * C268 + C108 * C275) *
                C50776) *
               C50835 * C50847 * C502 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50776 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50835 * C50847 * C501 -
           ((C120 * C519 + C108 * C525 + C119 * C518 + C107 * C524 +
             C118 * C517 + C106 * C523 + C117 * C516 + C105 * C522) *
                C50776 +
            (C120 * C510 + C108 * C520 + C119 * C509 + C107 * C514 +
             C118 * C508 + C106 * C513 + C117 * C507 + C105 * C512) *
                C121) *
               C50835 * C50847 * C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50776) *
              C50835 * C50847 * C50746 * C113 -
          ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
            C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
               C50776 +
           (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
            C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
               C121) *
              C50835 * C50847 * C50746 * C114 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C121 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C50776) *
              C50835 * C50847 * C50746 * C115 -
          ((C120 * C141 + C108 * C149 + C119 * C140 + C107 * C148 +
            C118 * C137 + C106 * C147 + C117 * C136 + C105 * C146) *
               C50776 +
           (C120 * C128 + C108 * C142 + C119 * C127 + C107 * C139 +
            C118 * C126 + C106 * C138 + C117 * C125 + C105 * C132) *
               C121) *
              C50835 * C50847 * C50746 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C50776) *
               C2173 +
           ((C2176 * C256 + C2171 * C266 + C2177 * C255 + C50692 * C265) *
                C121 +
            (C2176 * C262 + C2171 * C274 + C2177 * C261 + C50692 * C273) *
                C50776) *
               C2174 +
           ((C2176 * C506 + C2171 * C511 + C2177 * C507 + C50692 * C512) *
                C121 +
            (C2176 * C515 + C2171 * C521 + C2177 * C516 + C50692 * C522) *
                C50776) *
               C2175) *
              C50847 * C50746 * C113 -
          (((C2177 * C517 + C50692 * C523 + C2176 * C516 + C2171 * C522) *
                C50776 +
            (C2177 * C508 + C50692 * C513 + C2176 * C507 + C2171 * C512) *
                C121) *
               C2175 +
           ((C2177 * C260 + C50692 * C272 + C2176 * C261 + C2171 * C273) *
                C50776 +
            (C2177 * C254 + C50692 * C264 + C2176 * C255 + C2171 * C265) *
                C121) *
               C2174 +
           ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                C50776 +
            (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                C121) *
               C2173) *
              C50847 * C50746 * C114 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                C121 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                C50776) *
               C2173 +
           ((C2176 * C254 + C2171 * C264 + C2177 * C253 + C50692 * C263) *
                C121 +
            (C2176 * C260 + C2171 * C272 + C2177 * C259 + C50692 * C271) *
                C50776) *
               C2174 +
           ((C2176 * C508 + C2171 * C513 + C2177 * C509 + C50692 * C514) *
                C121 +
            (C2176 * C517 + C2171 * C523 + C2177 * C518 + C50692 * C524) *
                C50776) *
               C2175) *
              C50847 * C50746 * C115 -
          (((C2177 * C519 + C50692 * C525 + C2176 * C518 + C2171 * C524) *
                C50776 +
            (C2177 * C510 + C50692 * C520 + C2176 * C509 + C2171 * C514) *
                C121) *
               C2175 +
           ((C2177 * C268 + C50692 * C275 + C2176 * C259 + C2171 * C271) *
                C50776 +
            (C2177 * C257 + C50692 * C267 + C2176 * C253 + C2171 * C263) *
                C121) *
               C2174 +
           ((C2177 * C137 + C50692 * C147 + C2176 * C136 + C2171 * C146) *
                C50776 +
            (C2177 * C126 + C50692 * C138 + C2176 * C125 + C2171 * C132) *
                C121) *
               C2173) *
              C50847 * C50746 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50776) *
                C2173 +
            ((C2373 + C2374) * C121 + (C2375 + C2376) * C50776) * C2174 +
            C2733 * C2175) *
               C50847 * C501 -
           (((C2723 + C2724) * C50776 + (C2725 + C2726) * C121) * C2175 +
            ((C2380 + C2379) * C50776 + (C2378 + C2377) * C121) * C2174 +
            ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C2173) *
               C50847 * C502 +
           (C2733 * C2173 +
            ((C2726 + C2725) * C121 + (C2724 + C2723) * C50776) * C2174 +
            ((C2176 * C2688 + C2171 * C2691 + C2177 * C2689 + C50692 * C2692) *
                 C121 +
             (C2176 * C2693 + C2171 * C2697 + C2177 * C2694 + C50692 * C2698) *
                 C50776) *
                C2175) *
               C50847 * C503) *
              C50968 +
          ((((C2381 + C2382) * C121 + (C2383 + C2384) * C50776) * C2173 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50776) * C2174 +
            ((C2727 + C2728) * C121 + (C2729 + C2730) * C50776) * C2175) *
               C50847 * C502 -
           (C2734 * C2175 +
            ((C2384 + C2383) * C50776 + (C2382 + C2381) * C121) * C2174 +
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C50776 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50847 * C501 -
           (((C2177 * C2695 + C50692 * C2699 + C2176 * C2694 + C2171 * C2698) *
                 C50776 +
             (C2177 * C2690 + C50692 * C2696 + C2176 * C2689 + C2171 * C2692) *
                 C121) *
                C2175 +
            ((C2730 + C2729) * C50776 + (C2728 + C2727) * C121) * C2174 +
            C2734 * C2173) *
               C50847 * C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C50776) *
               C50835 * C5105 +
           ((C2176 * C382 + C2171 * C388 + C2177 * C381 + C50692 * C387) *
                C121 +
            (C2176 * C392 + C2171 * C400 + C2177 * C391 + C50692 * C399) *
                C50776) *
               C50835 * C5106 +
           ((C2176 * C847 + C2171 * C852 + C2177 * C848 + C50692 * C853) *
                C121 +
            (C2176 * C856 + C2171 * C862 + C2177 * C857 + C50692 * C863) *
                C50776) *
               C50835 * C5107) *
              C50746 * C113 -
          (((C2177 * C858 + C50692 * C864 + C2176 * C857 + C2171 * C863) *
                C50776 +
            (C2177 * C849 + C50692 * C854 + C2176 * C848 + C2171 * C853) *
                C121) *
               C50835 * C5107 +
           ((C2177 * C390 + C50692 * C398 + C2176 * C391 + C2171 * C399) *
                C50776 +
            (C2177 * C380 + C50692 * C386 + C2176 * C381 + C2171 * C387) *
                C121) *
               C50835 * C5106 +
           ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                C50776 +
            (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                C121) *
               C50835 * C5105) *
              C50746 * C114 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                C121 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                C50776) *
               C50835 * C5105 +
           ((C2176 * C380 + C2171 * C386 + C2177 * C379 + C50692 * C385) *
                C121 +
            (C2176 * C390 + C2171 * C398 + C2177 * C389 + C50692 * C397) *
                C50776) *
               C50835 * C5106 +
           ((C2176 * C849 + C2171 * C854 + C2177 * C850 + C50692 * C855) *
                C121 +
            (C2176 * C858 + C2171 * C864 + C2177 * C859 + C50692 * C865) *
                C50776) *
               C50835 * C5107) *
              C50746 * C115 -
          (((C2177 * C861 + C50692 * C866 + C2176 * C859 + C2171 * C865) *
                C50776 +
            (C2177 * C851 + C50692 * C860 + C2176 * C850 + C2171 * C855) *
                C121) *
               C50835 * C5107 +
           ((C2177 * C394 + C50692 * C401 + C2176 * C389 + C2171 * C397) *
                C50776 +
            (C2177 * C383 + C50692 * C393 + C2176 * C379 + C2171 * C385) *
                C121) *
               C50835 * C5106 +
           ((C2177 * C137 + C50692 * C147 + C2176 * C136 + C2171 * C146) *
                C50776 +
            (C2177 * C126 + C50692 * C138 + C2176 * C125 + C2171 * C132) *
                C121) *
               C50835 * C5105) *
              C50746 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50776) *
                C50835 * C5105 +
            ((C5450 + C5449) * C121 + (C5452 + C5451) * C50776) * C50835 *
                C5106 +
            ((C5454 + C5453) * C121 + (C5456 + C5455) * C50776) * C50835 *
                C5107) *
               C501 -
           (((C3396 + C3395) * C50776 + (C3394 + C3393) * C121) * C50835 *
                C5107 +
            ((C3048 + C3049) * C50776 + (C3046 + C3047) * C121) * C50835 *
                C5106 +
            ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C50835 *
                C5105) *
               C502 +
           (C2733 * C50835 * C5105 +
            ((C3052 + C3051) * C121 + (C3054 + C3053) * C50776) * C50835 *
                C5106 +
            ((C3397 + C3398) * C121 + (C3399 + C3400) * C50776) * C50835 *
                C5107) *
               C503) *
              C50968 +
          ((((C2381 + C2382) * C121 + (C2383 + C2384) * C50776) * C50835 *
                C5105 +
            ((C4021 + C4022) * C121 + (C4023 + C4024) * C50776) * C50835 *
                C5106 +
            ((C2176 * C967 + C2171 * C971 + C2177 * C966 + C50692 * C970) *
                 C121 +
             (C2176 * C975 + C2171 * C979 + C2177 * C974 + C50692 * C978) *
                 C50776) *
                C50835 * C5107) *
               C502 -
           (((C5464 + C5463) * C50776 + (C5462 + C5461) * C121) * C50835 *
                C5107 +
            ((C5460 + C5459) * C50776 + (C5458 + C5457) * C121) * C50835 *
                C5106 +
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C50776 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C50835 * C5105) *
               C501 -
           (((C2177 * C3218 + C50692 * C3221 + C2176 * C3216 + C2171 * C3220) *
                 C50776 +
             (C2177 * C3212 + C50692 * C3217 + C2176 * C3211 + C2171 * C3214) *
                 C121) *
                C50835 * C5107 +
            ((C4028 + C4027) * C50776 + (C4026 + C4025) * C121) * C50835 *
                C5106 +
            C2734 * C50835 * C5105) *
               C503) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50776) *
              C50835 * C50847 * C592 -
          ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
            C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
               C50776 +
           (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
            C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
               C121) *
              C50835 * C50847 * C593 +
          ((C117 * C506 + C105 * C511 + C118 * C507 + C106 * C512 +
            C119 * C508 + C107 * C513 + C120 * C509 + C108 * C514) *
               C121 +
           (C117 * C515 + C105 * C521 + C118 * C516 + C106 * C522 +
            C119 * C517 + C107 * C523 + C120 * C518 + C108 * C524) *
               C50776) *
              C50835 * C50847 * C594 -
          ((C120 * C601 + C108 * C609 + C119 * C602 + C107 * C610 +
            C118 * C603 + C106 * C611 + C117 * C604 + C105 * C612) *
               C50776 +
           (C120 * C597 + C108 * C605 + C119 * C598 + C107 * C606 +
            C118 * C599 + C106 * C607 + C117 * C600 + C105 * C608) *
               C121) *
              C50835 * C50847 * C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50776) *
               C50835 * C50847 * C50975 -
           ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
             C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                C50776 +
            (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
             C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                C121) *
               C50835 * C50847 * C50762) *
              C250 +
          (((C117 * C255 + C105 * C265 + C118 * C254 + C106 * C264 +
             C119 * C253 + C107 * C263 + C120 * C257 + C108 * C267) *
                C121 +
            (C117 * C261 + C105 * C273 + C118 * C260 + C106 * C272 +
             C119 * C259 + C107 * C271 + C120 * C268 + C108 * C275) *
                C50776) *
               C50835 * C50847 * C50762 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50776 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50835 * C50847 * C50975) *
              C251 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50776) *
               C50835 * C50847 * C50975 -
           ((C120 * C269 + C108 * C276 + C119 * C268 + C107 * C275 +
             C118 * C259 + C106 * C271 + C117 * C260 + C105 * C272) *
                C50776 +
            (C120 * C258 + C108 * C270 + C119 * C257 + C107 * C267 +
             C118 * C253 + C106 * C263 + C117 * C254 + C105 * C264) *
                C121) *
               C50835 * C50847 * C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50776) *
                C2173 +
            ((C2373 + C2374) * C121 + (C2375 + C2376) * C50776) * C2174 +
            ((C2377 + C2378) * C121 + (C2379 + C2380) * C50776) * C2175) *
               C50847 * C50975 -
           (((C2177 * C603 + C50692 * C611 + C2176 * C604 + C2171 * C612) *
                 C50776 +
             (C2177 * C599 + C50692 * C607 + C2176 * C600 + C2171 * C608) *
                 C121) *
                C2175 +
            ((C2380 + C2379) * C50776 + (C2378 + C2377) * C121) * C2174 +
            ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C2173) *
               C50847 * C50762) *
              C250 +
          ((((C2381 + C2382) * C121 + (C2383 + C2384) * C50776) * C2173 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50776) * C2174 +
            ((C2176 * C599 + C2171 * C607 + C2177 * C598 + C50692 * C606) *
                 C121 +
             (C2176 * C603 + C2171 * C611 + C2177 * C602 + C50692 * C610) *
                 C50776) *
                C2175) *
               C50847 * C50762 -
           (((C2388 + C2387) * C50776 + (C2386 + C2385) * C121) * C2175 +
            ((C2384 + C2383) * C50776 + (C2382 + C2381) * C121) * C2174 +
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C50776 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50847 * C50975) *
              C251 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                 C50776) *
                C2173 +
            ((C2389 + C2390) * C121 + (C2391 + C2392) * C50776) * C2174 +
            ((C2393 + C2394) * C121 + (C2395 + C2396) * C50776) * C2175) *
               C50847 * C50975 -
           (((C2177 * C601 + C50692 * C609 + C2176 * C602 + C2171 * C610) *
                 C50776 +
             (C2177 * C597 + C50692 * C605 + C2176 * C598 + C2171 * C606) *
                 C121) *
                C2175 +
            ((C2396 + C2395) * C50776 + (C2394 + C2393) * C121) * C2174 +
            ((C2392 + C2391) * C50776 + (C2390 + C2389) * C121) * C2173) *
               C50847 * C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C50776) *
               C2173 +
           ((C2373 + C2374) * C121 + (C2375 + C2376) * C50776) * C2174 +
           C2733 * C2175) *
              C50847 * C592 -
          (C2857 * C2175 +
           ((C2380 + C2379) * C50776 + (C2378 + C2377) * C121) * C2174 +
           ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C2173) *
              C50847 * C593 +
          (C2733 * C2173 +
           ((C2726 + C2725) * C121 + (C2724 + C2723) * C50776) * C2174 +
           ((C2853 + C2854) * C121 + (C2855 + C2856) * C50776) * C2175) *
              C50847 * C594 -
          (((C2177 * C2834 + C50692 * C2838 + C2176 * C2835 + C2171 * C2839) *
                C50776 +
            (C2177 * C2832 + C50692 * C2836 + C2176 * C2833 + C2171 * C2837) *
                C121) *
               C2175 +
           ((C2856 + C2855) * C50776 + (C2854 + C2853) * C121) * C2174 +
           C2857 * C2173) *
              C50847 * C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50776) *
                C50835 * C5105 +
            ((C2176 * C382 + C2171 * C388 + C2177 * C381 + C50692 * C387) *
                 C121 +
             (C2176 * C392 + C2171 * C400 + C2177 * C391 + C50692 * C399) *
                 C50776) *
                C50835 * C5106 +
            ((C2176 * C847 + C2171 * C852 + C2177 * C848 + C50692 * C853) *
                 C121 +
             (C2176 * C856 + C2171 * C862 + C2177 * C857 + C50692 * C863) *
                 C50776) *
                C50835 * C5107) *
               C50975 -
           (((C3396 + C3395) * C50776 + (C3394 + C3393) * C121) * C50835 *
                C5107 +
            ((C3048 + C3049) * C50776 + (C3046 + C3047) * C121) * C50835 *
                C5106 +
            ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C50835 *
                C5105) *
               C50762) *
              C250 +
          ((((C2381 + C2382) * C121 + (C2383 + C2384) * C50776) * C50835 *
                C5105 +
            ((C4021 + C4022) * C121 + (C4023 + C4024) * C50776) * C50835 *
                C5106 +
            ((C2176 * C967 + C2171 * C971 + C2177 * C966 + C50692 * C970) *
                 C121 +
             (C2176 * C975 + C2171 * C979 + C2177 * C974 + C50692 * C978) *
                 C50776) *
                C50835 * C5107) *
               C50762 -
           (((C2177 * C858 + C50692 * C864 + C2176 * C857 + C2171 * C863) *
                 C50776 +
             (C2177 * C849 + C50692 * C854 + C2176 * C848 + C2171 * C853) *
                 C121) *
                C50835 * C5107 +
            ((C2177 * C390 + C50692 * C398 + C2176 * C391 + C2171 * C399) *
                 C50776 +
             (C2177 * C380 + C50692 * C386 + C2176 * C381 + C2171 * C387) *
                 C121) *
                C50835 * C5106 +
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C50776 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C50835 * C5105) *
               C50975) *
              C251 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                 C50776) *
                C50835 * C5105 +
            ((C2176 * C380 + C2171 * C386 + C2177 * C379 + C50692 * C385) *
                 C121 +
             (C2176 * C390 + C2171 * C398 + C2177 * C389 + C50692 * C397) *
                 C50776) *
                C50835 * C5106 +
            ((C2176 * C849 + C2171 * C854 + C2177 * C850 + C50692 * C855) *
                 C121 +
             (C2176 * C858 + C2171 * C864 + C2177 * C859 + C50692 * C865) *
                 C50776) *
                C50835 * C5107) *
               C50975 -
           (((C2177 * C973 + C50692 * C977 + C2176 * C974 + C2171 * C978) *
                 C50776 +
             (C2177 * C965 + C50692 * C969 + C2176 * C966 + C2171 * C970) *
                 C121) *
                C50835 * C5107 +
            ((C2177 * C726 + C50692 * C738 + C2176 * C725 + C2171 * C737) *
                 C50776 +
             (C2177 * C714 + C50692 * C722 + C2176 * C713 + C2171 * C721) *
                 C121) *
                C50835 * C5106 +
            ((C2392 + C2391) * C50776 + (C2390 + C2389) * C121) * C50835 *
                C5105) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C50776) *
               C50835 * C5105 +
           ((C5450 + C5449) * C121 + (C5452 + C5451) * C50776) * C50835 *
               C5106 +
           ((C5454 + C5453) * C121 + (C5456 + C5455) * C50776) * C50835 *
               C5107) *
              C592 -
          (((C3396 + C3395) * C50776 + (C3394 + C3393) * C121) * C50835 *
               C5107 +
           ((C3048 + C3049) * C50776 + (C3046 + C3047) * C121) * C50835 *
               C5106 +
           ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C50835 *
               C5105) *
              C593 +
          (C2733 * C50835 * C5105 +
           ((C3052 + C3051) * C121 + (C3054 + C3053) * C50776) * C50835 *
               C5106 +
           ((C3397 + C3398) * C121 + (C3399 + C3400) * C50776) * C50835 *
               C5107) *
              C594 -
          (((C2177 * C3372 + C50692 * C3374 + C2176 * C3373 + C2171 * C3375) *
                C50776 +
            (C2177 * C3368 + C50692 * C3370 + C2176 * C3369 + C2171 * C3371) *
                C121) *
               C50835 * C5107 +
           ((C3058 + C3057) * C50776 + (C3056 + C3055) * C121) * C50835 *
               C5106 +
           C2857 * C50835 * C5105) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C377 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50977 -
           (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 +
            C118 * C381 + C106 * C387 + C117 * C382 + C105 * C388) *
               C378 -
           (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 +
            C118 * C391 + C106 * C399 + C117 * C392 + C105 * C400) *
               C50788) *
              C50835 * C50847 * C501 +
          ((C117 * C711 + C105 * C719 + C118 * C712 + C106 * C720 +
            C119 * C713 + C107 * C721 + C120 * C714 + C108 * C722) *
               C378 -
           ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
             C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                C50977 +
            (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
             C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                C377) +
           (C117 * C723 + C105 * C735 + C118 * C724 + C106 * C736 +
            C119 * C725 + C107 * C737 + C120 * C726 + C108 * C738) *
               C50788) *
              C50835 * C50847 * C502 +
          ((C117 * C506 + C105 * C511 + C118 * C507 + C106 * C512 +
            C119 * C508 + C107 * C513 + C120 * C509 + C108 * C514) *
               C377 +
           (C117 * C515 + C105 * C521 + C118 * C516 + C106 * C522 +
            C119 * C517 + C107 * C523 + C120 * C518 + C108 * C524) *
               C50977 -
           (C120 * C715 + C108 * C727 + C119 * C716 + C107 * C728 +
            C118 * C717 + C106 * C729 + C117 * C718 + C105 * C730) *
               C378 -
           (C120 * C731 + C108 * C739 + C119 * C732 + C107 * C740 +
            C118 * C733 + C106 * C741 + C117 * C734 + C105 * C742) *
               C50788) *
              C50835 * C50847 * C503) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C377 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50977 -
           (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 +
            C118 * C381 + C106 * C387 + C117 * C382 + C105 * C388) *
               C378 -
           (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 +
            C118 * C391 + C106 * C399 + C117 * C392 + C105 * C400) *
               C50788) *
              C50835 * C50847 * C50746 * C250 +
          ((C117 * C381 + C105 * C387 + C118 * C380 + C106 * C386 +
            C119 * C379 + C107 * C385 + C120 * C383 + C108 * C393) *
               C378 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50977 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C377) +
           (C117 * C391 + C105 * C399 + C118 * C390 + C106 * C398 +
            C119 * C389 + C107 * C397 + C120 * C394 + C108 * C401) *
               C50788) *
              C50835 * C50847 * C50746 * C251 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C377 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C50977 -
           (C120 * C384 + C108 * C395 + C119 * C383 + C107 * C393 +
            C118 * C379 + C106 * C385 + C117 * C380 + C105 * C386) *
               C378 -
           (C120 * C396 + C108 * C402 + C119 * C394 + C107 * C401 +
            C118 * C389 + C106 * C397 + C117 * C390 + C105 * C398) *
               C50788) *
              C50835 * C50847 * C50746 * C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C377 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C50977 -
            (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
                C378 -
            (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
                C50788) *
               C2173 +
           ((C2373 + C2374) * C377 + (C2375 + C2376) * C50977 -
            (C2177 * C712 + C50692 * C720 + C2176 * C711 + C2171 * C719) *
                C378 -
            (C2177 * C724 + C50692 * C736 + C2176 * C723 + C2171 * C735) *
                C50788) *
               C2174 +
           ((C2377 + C2378) * C377 + (C2379 + C2380) * C50977 -
            (C2177 * C717 + C50692 * C729 + C2176 * C718 + C2171 * C730) *
                C378 -
            (C2177 * C733 + C50692 * C741 + C2176 * C734 + C2171 * C742) *
                C50788) *
               C2175) *
              C50847 * C50746 * C250 +
          (((C2176 * C381 + C2171 * C387 + C2177 * C380 + C50692 * C386) *
                C378 -
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C50977 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C377) +
            (C2176 * C391 + C2171 * C399 + C2177 * C390 + C50692 * C398) *
                C50788) *
               C2173 +
           ((C2176 * C712 + C2171 * C720 + C2177 * C713 + C50692 * C721) *
                C378 -
            ((C2384 + C2383) * C50977 + (C2382 + C2381) * C377) +
            (C2176 * C724 + C2171 * C736 + C2177 * C725 + C50692 * C737) *
                C50788) *
               C2174 +
           ((C2176 * C717 + C2171 * C729 + C2177 * C716 + C50692 * C728) *
                C378 -
            ((C2388 + C2387) * C50977 + (C2386 + C2385) * C377) +
            (C2176 * C733 + C2171 * C741 + C2177 * C732 + C50692 * C740) *
                C50788) *
               C2175) *
              C50847 * C50746 * C251 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                C377 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                C50977 -
            (C2177 * C379 + C50692 * C385 + C2176 * C380 + C2171 * C386) *
                C378 -
            (C2177 * C389 + C50692 * C397 + C2176 * C390 + C2171 * C398) *
                C50788) *
               C2173 +
           ((C2389 + C2390) * C377 + (C2391 + C2392) * C50977 -
            (C2177 * C714 + C50692 * C722 + C2176 * C713 + C2171 * C721) *
                C378 -
            (C2177 * C726 + C50692 * C738 + C2176 * C725 + C2171 * C737) *
                C50788) *
               C2174 +
           ((C2393 + C2394) * C377 + (C2395 + C2396) * C50977 -
            (C2177 * C715 + C50692 * C727 + C2176 * C716 + C2171 * C728) *
                C378 -
            (C2177 * C731 + C50692 * C739 + C2176 * C732 + C2171 * C740) *
                C50788) *
               C2175) *
              C50847 * C50746 * C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C377 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C50977 -
            (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
                C378 -
            (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
                C50788) *
               C2173 +
           ((C2373 + C2374) * C377 + (C2375 + C2376) * C50977 -
            (C3046 + C3047) * C378 - (C3048 + C3049) * C50788) *
               C2174 +
           C3064 * C2175) *
              C50847 * C501 +
          (((C3047 + C3046) * C378 -
            ((C2376 + C2375) * C50977 + (C2374 + C2373) * C377) +
            (C3049 + C3048) * C50788) *
               C2173 +
           ((C3052 + C3051) * C378 -
            ((C2380 + C2379) * C50977 + (C2378 + C2377) * C377) +
            (C3054 + C3053) * C50788) *
               C2174 +
           ((C3055 + C3056) * C378 - (C2841 * C50977 + C2842 * C377) +
            (C3057 + C3058) * C50788) *
               C2175) *
              C50847 * C502 +
          (C3064 * C2173 +
           ((C2726 + C2725) * C377 + (C2724 + C2723) * C50977 -
            (C3056 + C3055) * C378 - (C3058 + C3057) * C50788) *
               C2174 +
           ((C2853 + C2854) * C377 + (C2855 + C2856) * C50977 -
            (C2177 * C3005 + C50692 * C3011 + C2176 * C3006 + C2171 * C3012) *
                C378 -
            (C2177 * C3013 + C50692 * C3017 + C2176 * C3014 + C2171 * C3018) *
                C50788) *
               C2175) *
              C50847 * C503) *
         C50714) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C377 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C50977 -
            (C5449 + C5450) * C378 - (C5451 + C5452) * C50788) *
               C50835 * C5105 +
           ((C5450 + C5449) * C377 + (C5452 + C5451) * C50977 -
            (C5453 + C5454) * C378 - (C5455 + C5456) * C50788) *
               C50835 * C5106 +
           ((C5454 + C5453) * C377 + (C5456 + C5455) * C50977 -
            (C2177 * C1057 + C50692 * C1061 + C2176 * C1058 + C2171 * C1062) *
                C378 -
            (C2177 * C1065 + C50692 * C1069 + C2176 * C1066 + C2171 * C1070) *
                C50788) *
               C50835 * C5107) *
              C50746 * C250 +
          (((C5457 + C5458) * C378 -
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C50977 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C377) +
            (C5459 + C5460) * C50788) *
               C50835 * C5105 +
           ((C5461 + C5462) * C378 -
            ((C5460 + C5459) * C50977 + (C5458 + C5457) * C377) +
            (C5463 + C5464) * C50788) *
               C50835 * C5106 +
           ((C2176 * C1057 + C2171 * C1061 + C2177 * C1056 + C50692 * C1060) *
                C378 -
            ((C5464 + C5463) * C50977 + (C5462 + C5461) * C377) +
            (C2176 * C1065 + C2171 * C1069 + C2177 * C1064 + C50692 * C1068) *
                C50788) *
               C50835 * C5107) *
              C50746 * C251 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                C377 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                C50977 -
            (C5465 + C5466) * C378 - (C5467 + C5468) * C50788) *
               C50835 * C5105 +
           ((C5466 + C5465) * C377 + (C5468 + C5467) * C50977 -
            (C5469 + C5470) * C378 - (C5471 + C5472) * C50788) *
               C50835 * C5106 +
           ((C5470 + C5469) * C377 + (C5472 + C5471) * C50977 -
            (C2177 * C1055 + C50692 * C1059 + C2176 * C1056 + C2171 * C1060) *
                C378 -
            (C2177 * C1063 + C50692 * C1067 + C2176 * C1064 + C2171 * C1068) *
                C50788) *
               C50835 * C5107) *
              C50746 * C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C377 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C50977 -
            (C5449 + C5450) * C378 - (C5451 + C5452) * C50788) *
               C50835 * C5105 +
           ((C5450 + C5449) * C377 + (C5452 + C5451) * C50977 -
            (C5453 + C5454) * C378 - (C5455 + C5456) * C50788) *
               C50835 * C5106 +
           ((C5454 + C5453) * C377 + (C5456 + C5455) * C50977 -
            (C2177 * C1057 + C50692 * C1061 + C2176 * C1058 + C2171 * C1062) *
                C378 -
            (C2177 * C1065 + C50692 * C1069 + C2176 * C1066 + C2171 * C1070) *
                C50788) *
               C50835 * C5107) *
              C501 +
          (((C3047 + C3046) * C378 -
            ((C2376 + C2375) * C50977 + (C2374 + C2373) * C377) +
            (C3049 + C3048) * C50788) *
               C50835 * C5105 +
           ((C3393 + C3394) * C378 -
            ((C3048 + C3049) * C50977 + (C3046 + C3047) * C377) +
            (C3395 + C3396) * C50788) *
               C50835 * C5106 +
           ((C2176 * C3499 + C2171 * C3503 + C2177 * C3498 + C50692 * C3502) *
                C378 -
            ((C3396 + C3395) * C50977 + (C3394 + C3393) * C377) +
            (C2176 * C3505 + C2171 * C3511 + C2177 * C3504 + C50692 * C3510) *
                C50788) *
               C50835 * C5107) *
              C502 +
          (C3064 * C50835 * C5105 +
           ((C3052 + C3051) * C377 + (C3054 + C3053) * C50977 -
            (C3398 + C3397) * C378 - (C3400 + C3399) * C50788) *
               C50835 * C5106 +
           ((C3397 + C3398) * C377 + (C3399 + C3400) * C50977 -
            (C2177 * C3500 + C50692 * C3506 + C2176 * C3501 + C2171 * C3507) *
                C378 -
            (C2177 * C3508 + C50692 * C3512 + C2176 * C3509 + C2171 * C3513) *
                C50788) *
               C50835 * C5107) *
              C503) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[45] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7913 * C122 + C51019 * C129 + C7914 * C123 +
                      C51020 * C130 + C7915 * C124 + C7910 * C131) *
                         C121 +
                     (C7913 * C133 + C51019 * C143 + C7914 * C134 +
                      C51020 * C144 + C7915 * C135 + C7910 * C145) *
                         C50776) *
                        C50835 * C50992 +
                    ((C11057 + C11056 + C11055) * C121 +
                     (C11060 + C11059 + C11058) * C50776) *
                        C50835 * C50911) *
                       C1169 -
                   (((C8734 + C8735 + C8736) * C50776 +
                     (C8731 + C8732 + C8733) * C121) *
                        C50835 * C50911 +
                    ((C8104 + C8103 + C8102) * C50776 +
                     (C8101 + C8100 + C8099) * C121) *
                        C50835 * C50992) *
                       C50762) *
                      C51021 +
                  ((((C8105 + C8106 + C8107) * C121 +
                     (C8108 + C8109 + C8110) * C50776) *
                        C50835 * C50992 +
                    ((C9649 + C9650 + C9651) * C121 +
                     (C9652 + C9653 + C9654) * C50776) *
                        C50835 * C50911) *
                       C50762 -
                   (((C11066 + C11065 + C11064) * C50776 +
                     (C11063 + C11062 + C11061) * C121) *
                        C50835 * C50911 +
                    ((C7915 * C136 + C7910 * C146 + C7914 * C135 +
                      C51020 * C145 + C7913 * C134 + C51019 * C144) *
                         C50776 +
                     (C7915 * C125 + C7910 * C132 + C7914 * C124 +
                      C51020 * C131 + C7913 * C123 + C51019 * C130) *
                         C121) *
                        C50835 * C50992) *
                       C1169) *
                      C51006 +
                  ((((C7913 * C124 + C51019 * C131 + C7914 * C125 +
                      C51020 * C132 + C7915 * C126 + C7910 * C138) *
                         C121 +
                     (C7913 * C135 + C51019 * C145 + C7914 * C136 +
                      C51020 * C146 + C7915 * C137 + C7910 * C147) *
                         C50776) *
                        C50835 * C50992 +
                    ((C11069 + C11068 + C11067) * C121 +
                     (C11072 + C11071 + C11070) * C50776) *
                        C50835 * C50911) *
                       C1169 -
                   (((C7915 * C1409 + C7910 * C1410 + C7914 * C726 +
                      C51020 * C738 + C7913 * C725 + C51019 * C737) *
                         C50776 +
                     (C7915 * C1407 + C7910 * C1408 + C7914 * C714 +
                      C51020 * C722 + C7913 * C713 + C51019 * C721) *
                         C121) *
                        C50835 * C50911 +
                    ((C8116 + C8115 + C8114) * C50776 +
                     (C8113 + C8112 + C8111) * C121) *
                        C50835 * C50992) *
                       C50762) *
                      C1173)) /
                (p * q * std::sqrt(p + q));
    d2ee[46] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7913 * C122 + C51019 * C129 + C7914 * C123 +
                      C51020 * C130 + C7915 * C124 + C7910 * C131) *
                         C121 +
                     (C7913 * C133 + C51019 * C143 + C7914 * C134 +
                      C51020 * C144 + C7915 * C135 + C7910 * C145) *
                         C50776) *
                        C50835 * C50992 +
                    ((C11057 + C11056 + C11055) * C121 +
                     (C11060 + C11059 + C11058) * C50776) *
                        C50835 * C50911) *
                       C51022 -
                   (((C8734 + C8735 + C8736) * C50776 +
                     (C8731 + C8732 + C8733) * C121) *
                        C50835 * C50911 +
                    ((C8104 + C8103 + C8102) * C50776 +
                     (C8101 + C8100 + C8099) * C121) *
                        C50835 * C50992) *
                       C51009 +
                   (((C8438 + C8437 + C8436) * C121 +
                     (C8435 + C8434 + C8433) * C50776) *
                        C50835 * C50992 +
                    ((C8737 + C8738 + C8739) * C121 +
                     (C8740 + C8741 + C8742) * C50776) *
                        C50835 * C50911) *
                       C1274) *
                      C1275 +
                  ((((C8105 + C8106 + C8107) * C121 +
                     (C8108 + C8109 + C8110) * C50776) *
                        C50835 * C50992 +
                    ((C9649 + C9650 + C9651) * C121 +
                     (C9652 + C9653 + C9654) * C50776) *
                        C50835 * C50911) *
                       C51009 -
                   (((C11066 + C11065 + C11064) * C50776 +
                     (C11063 + C11062 + C11061) * C121) *
                        C50835 * C50911 +
                    ((C7915 * C136 + C7910 * C146 + C7914 * C135 +
                      C51020 * C145 + C7913 * C134 + C51019 * C144) *
                         C50776 +
                     (C7915 * C125 + C7910 * C132 + C7914 * C124 +
                      C51020 * C131 + C7913 * C123 + C51019 * C130) *
                         C121) *
                        C50835 * C50992) *
                       C51022 -
                   (((C7915 * C731 + C7910 * C739 + C7914 * C732 +
                      C51020 * C740 + C7913 * C733 + C51019 * C741) *
                         C50776 +
                     (C7915 * C715 + C7910 * C727 + C7914 * C716 +
                      C51020 * C728 + C7913 * C717 + C51019 * C729) *
                         C121) *
                        C50835 * C50911 +
                    ((C8444 + C8443 + C8442) * C50776 +
                     (C8441 + C8440 + C8439) * C121) *
                        C50835 * C50992) *
                       C1274) *
                      C50719)) /
                (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
              C7915 * C124 + C7910 * C131) *
                 C377 +
             (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
              C7915 * C135 + C7910 * C145) *
                 C50977 -
             (C11055 + C11056 + C11057) * C378 -
             (C11058 + C11059 + C11060) * C50788) *
                C50835 * C50992 +
            ((C11057 + C11056 + C11055) * C377 +
             (C11060 + C11059 + C11058) * C50977 -
             (C11635 + C11634 + C11633) * C378 -
             (C11638 + C11637 + C11636) * C50788) *
                C50835 * C50911) *
               C1169 +
           (((C8733 + C8732 + C8731) * C378 -
             ((C8104 + C8103 + C8102) * C50977 +
              (C8101 + C8100 + C8099) * C377) +
             (C8736 + C8735 + C8734) * C50788) *
                C50835 * C50992 +
            ((C9047 + C9048 + C9049) * C378 -
             ((C8734 + C8735 + C8736) * C50977 +
              (C8731 + C8732 + C8733) * C377) +
             (C9050 + C9051 + C9052) * C50788) *
                C50835 * C50911) *
               C50762) *
              C1275 +
          ((((C11061 + C11062 + C11063) * C378 -
             ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51020 * C145 +
               C7913 * C134 + C51019 * C144) *
                  C50977 +
              (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51020 * C131 +
               C7913 * C123 + C51019 * C130) *
                  C377) +
             (C11064 + C11065 + C11066) * C50788) *
                C50835 * C50992 +
            ((C11641 + C11640 + C11639) * C378 -
             ((C11066 + C11065 + C11064) * C50977 +
              (C11063 + C11062 + C11061) * C377) +
             (C11644 + C11643 + C11642) * C50788) *
                C50835 * C50911) *
               C1169 +
           (((C8105 + C8106 + C8107) * C377 + (C8108 + C8109 + C8110) * C50977 -
             (C9651 + C9650 + C9649) * C378 -
             (C9654 + C9653 + C9652) * C50788) *
                C50835 * C50992 +
            ((C9649 + C9650 + C9651) * C377 + (C9652 + C9653 + C9654) * C50977 -
             (C7915 * C965 + C7910 * C969 + C7914 * C966 + C51020 * C970 +
              C7913 * C967 + C51019 * C971) *
                 C378 -
             (C7915 * C973 + C7910 * C977 + C7914 * C974 + C51020 * C978 +
              C7913 * C975 + C51019 * C979) *
                 C50788) *
                C50835 * C50911) *
               C50762) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
              C7915 * C124 + C7910 * C131) *
                 C1511 +
             (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
              C7915 * C135 + C7910 * C145) *
                 C1509 -
             (C11055 + C11056 + C11057) * C1512 -
             (C11058 + C11059 + C11060) * C50788) *
                C50835 * C50992 +
            ((C11057 + C11056 + C11055) * C1511 +
             (C11060 + C11059 + C11058) * C1509 -
             (C11635 + C11634 + C11633) * C1512 -
             (C11638 + C11637 + C11636) * C50788) *
                C50835 * C50911) *
               C1169 +
           (((C8733 + C8732 + C8731) * C1512 -
             ((C8104 + C8103 + C8102) * C1509 +
              (C8101 + C8100 + C8099) * C1511) +
             (C8736 + C8735 + C8734) * C50788) *
                C50835 * C50992 +
            ((C9047 + C9048 + C9049) * C1512 -
             ((C8734 + C8735 + C8736) * C1509 +
              (C8731 + C8732 + C8733) * C1511) +
             (C9050 + C9051 + C9052) * C50788) *
                C50835 * C50911) *
               C50762) *
              C50968 +
          ((((C11061 + C11062 + C11063) * C1512 -
             ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51020 * C145 +
               C7913 * C134 + C51019 * C144) *
                  C1509 +
              (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51020 * C131 +
               C7913 * C123 + C51019 * C130) *
                  C1511) +
             (C11064 + C11065 + C11066) * C50788) *
                C50835 * C50992 +
            ((C11641 + C11640 + C11639) * C1512 -
             ((C11066 + C11065 + C11064) * C1509 +
              (C11063 + C11062 + C11061) * C1511) +
             (C11644 + C11643 + C11642) * C50788) *
                C50835 * C50911) *
               C1169 +
           (((C8105 + C8106 + C8107) * C1511 + (C8108 + C8109 + C8110) * C1509 -
             (C9651 + C9650 + C9649) * C1512 -
             (C9654 + C9653 + C9652) * C50788) *
                C50835 * C50992 +
            ((C9649 + C9650 + C9651) * C1511 + (C9652 + C9653 + C9654) * C1509 -
             (C7915 * C965 + C7910 * C969 + C7914 * C966 + C51020 * C970 +
              C7913 * C967 + C51019 * C971) *
                 C1512 -
             (C7915 * C973 + C7910 * C977 + C7914 * C974 + C51020 * C978 +
              C7913 * C975 + C51019 * C979) *
                 C50788) *
                C50835 * C50911) *
               C50762) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
             C7915 * C124 + C7910 * C131) *
                C1511 +
            (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
             C7915 * C135 + C7910 * C145) *
                C1509 -
            (C11055 + C11056 + C11057) * C1512 -
            (C11058 + C11059 + C11060) * C50788) *
               C50835 * C50992 +
           ((C11057 + C11056 + C11055) * C1511 +
            (C11060 + C11059 + C11058) * C1509 -
            (C11635 + C11634 + C11633) * C1512 -
            (C11638 + C11637 + C11636) * C50788) *
               C50835 * C50911) *
              C51022 +
          (((C8733 + C8732 + C8731) * C1512 -
            ((C8104 + C8103 + C8102) * C1509 +
             (C8101 + C8100 + C8099) * C1511) +
            (C8736 + C8735 + C8734) * C50788) *
               C50835 * C50992 +
           ((C9047 + C9048 + C9049) * C1512 -
            ((C8734 + C8735 + C8736) * C1509 +
             (C8731 + C8732 + C8733) * C1511) +
            (C9050 + C9051 + C9052) * C50788) *
               C50835 * C50911) *
              C51009 +
          (((C8438 + C8437 + C8436) * C1511 + (C8435 + C8434 + C8433) * C1509 -
            (C8739 + C8738 + C8737) * C1512 -
            (C8742 + C8741 + C8740) * C50788) *
               C50835 * C50992 +
           ((C8737 + C8738 + C8739) * C1511 + (C8740 + C8741 + C8742) * C1509 -
            (C7915 * C3212 + C7910 * C3217 + C7914 * C3211 + C51020 * C3214 +
             C7913 * C3210 + C51019 * C3213) *
                C1512 -
            (C7915 * C3218 + C7910 * C3221 + C7914 * C3216 + C51020 * C3220 +
             C7913 * C3215 + C51019 * C3219) *
                C50788) *
               C50835 * C50911) *
              C1274) *
         C50714) /
        (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
             C7915 * C124 + C7910 * C131) *
                C1744 +
            (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
             C7915 * C135 + C7910 * C145) *
                C51023 -
            (C11055 + C11056 + C11057) * C1745 -
            (C11058 + C11059 + C11060) * C51012 +
            (C11633 + C11634 + C11635) * C1746 +
            (C11636 + C11637 + C11638) * C1743) *
               C50835 * C50992 +
           ((C11057 + C11056 + C11055) * C1744 +
            (C11060 + C11059 + C11058) * C51023 -
            (C11635 + C11634 + C11633) * C1745 -
            (C11638 + C11637 + C11636) * C51012 +
            (C11903 + C11902 + C11901) * C1746 +
            (C11906 + C11905 + C11904) * C1743) *
               C50835 * C50911) *
              C1169 +
          (((C8733 + C8732 + C8731) * C1745 -
            ((C8104 + C8103 + C8102) * C51023 +
             (C8101 + C8100 + C8099) * C1744) +
            (C8736 + C8735 + C8734) * C51012 - (C9049 + C9048 + C9047) * C1746 -
            (C9052 + C9051 + C9050) * C1743) *
               C50835 * C50992 +
           ((C9047 + C9048 + C9049) * C1745 -
            ((C8734 + C8735 + C8736) * C51023 +
             (C8731 + C8732 + C8733) * C1744) +
            (C9050 + C9051 + C9052) * C51012 -
            (C7915 * C6822 + C7910 * C6823 + C7914 * C3498 + C51020 * C3502 +
             C7913 * C3499 + C51019 * C3503) *
                C1746 -
            (C7915 * C6824 + C7910 * C6825 + C7914 * C3504 + C51020 * C3510 +
             C7913 * C3505 + C51019 * C3511) *
                C1743) *
               C50835 * C50911) *
              C50762) *
         C50714) /
        (p * q * std::sqrt(p + q));
    d2ee[51] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C7913 * C122 + C51019 * C129 + C7914 * C123 +
                      C51020 * C130 + C7915 * C124 + C7910 * C131) *
                         C121 +
                     (C7913 * C133 + C51019 * C143 + C7914 * C134 +
                      C51020 * C144 + C7915 * C135 + C7910 * C145) *
                         C50776) *
                        C50835 * C50992 +
                    ((C11057 + C11056 + C11055) * C121 +
                     (C11060 + C11059 + C11058) * C50776) *
                        C50835 * C50911) *
                       C501 -
                   (((C8734 + C8735 + C8736) * C50776 +
                     (C8731 + C8732 + C8733) * C121) *
                        C50835 * C50911 +
                    ((C8104 + C8103 + C8102) * C50776 +
                     (C8101 + C8100 + C8099) * C121) *
                        C50835 * C50992) *
                       C502 +
                   (((C8438 + C8437 + C8436) * C121 +
                     (C8435 + C8434 + C8433) * C50776) *
                        C50835 * C50992 +
                    ((C8737 + C8738 + C8739) * C121 +
                     (C8740 + C8741 + C8742) * C50776) *
                        C50835 * C50911) *
                       C503) *
                      C50968 +
                  ((((C8105 + C8106 + C8107) * C121 +
                     (C8108 + C8109 + C8110) * C50776) *
                        C50835 * C50992 +
                    ((C9649 + C9650 + C9651) * C121 +
                     (C9652 + C9653 + C9654) * C50776) *
                        C50835 * C50911) *
                       C502 -
                   (((C11066 + C11065 + C11064) * C50776 +
                     (C11063 + C11062 + C11061) * C121) *
                        C50835 * C50911 +
                    ((C7915 * C136 + C7910 * C146 + C7914 * C135 +
                      C51020 * C145 + C7913 * C134 + C51019 * C144) *
                         C50776 +
                     (C7915 * C125 + C7910 * C132 + C7914 * C124 +
                      C51020 * C131 + C7913 * C123 + C51019 * C130) *
                         C121) *
                        C50835 * C50992) *
                       C501 -
                   (((C7915 * C731 + C7910 * C739 + C7914 * C732 +
                      C51020 * C740 + C7913 * C733 + C51019 * C741) *
                         C50776 +
                     (C7915 * C715 + C7910 * C727 + C7914 * C716 +
                      C51020 * C728 + C7913 * C717 + C51019 * C729) *
                         C121) *
                        C50835 * C50911 +
                    ((C8444 + C8443 + C8442) * C50776 +
                     (C8441 + C8440 + C8439) * C121) *
                        C50835 * C50992) *
                       C503) *
                      C50719)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C7913 * C122 + C51019 * C129 + C7914 * C123 +
                     C51020 * C130 + C7915 * C124 + C7910 * C131) *
                        C121 +
                    (C7913 * C133 + C51019 * C143 + C7914 * C134 +
                     C51020 * C144 + C7915 * C135 + C7910 * C145) *
                        C50776) *
                       C50835 * C50992 +
                   ((C7913 * C382 + C51019 * C388 + C7914 * C381 +
                     C51020 * C387 + C7915 * C380 + C7910 * C386) *
                        C121 +
                    (C7913 * C392 + C51019 * C400 + C7914 * C391 +
                     C51020 * C399 + C7915 * C390 + C7910 * C398) *
                        C50776) *
                       C50835 * C50911) *
                      C50746 * C113 -
                  (((C7915 * C389 + C7910 * C397 + C7914 * C390 +
                     C51020 * C398 + C7913 * C391 + C51019 * C399) *
                        C50776 +
                    (C7915 * C379 + C7910 * C385 + C7914 * C380 +
                     C51020 * C386 + C7913 * C381 + C51019 * C387) *
                        C121) *
                       C50835 * C50911 +
                   ((C7915 * C136 + C7910 * C146 + C7914 * C135 +
                     C51020 * C145 + C7913 * C134 + C51019 * C144) *
                        C50776 +
                    (C7915 * C125 + C7910 * C132 + C7914 * C124 +
                     C51020 * C131 + C7913 * C123 + C51019 * C130) *
                        C121) *
                       C50835 * C50992) *
                      C50746 * C114 +
                  (((C7913 * C124 + C51019 * C131 + C7914 * C125 +
                     C51020 * C132 + C7915 * C126 + C7910 * C138) *
                        C121 +
                    (C7913 * C135 + C51019 * C145 + C7914 * C136 +
                     C51020 * C146 + C7915 * C137 + C7910 * C147) *
                        C50776) *
                       C50835 * C50992 +
                   ((C7913 * C380 + C51019 * C386 + C7914 * C379 +
                     C51020 * C385 + C7915 * C383 + C7910 * C393) *
                        C121 +
                    (C7913 * C390 + C51019 * C398 + C7914 * C389 +
                     C51020 * C397 + C7915 * C394 + C7910 * C401) *
                        C50776) *
                       C50835 * C50911) *
                      C50746 * C115 -
                  (((C7915 * C396 + C7910 * C402 + C7914 * C394 +
                     C51020 * C401 + C7913 * C389 + C51019 * C397) *
                        C50776 +
                    (C7915 * C384 + C7910 * C395 + C7914 * C383 +
                     C51020 * C393 + C7913 * C379 + C51019 * C385) *
                        C121) *
                       C50835 * C50911 +
                   ((C7915 * C140 + C7910 * C148 + C7914 * C137 +
                     C51020 * C147 + C7913 * C136 + C51019 * C146) *
                        C50776 +
                    (C7915 * C127 + C7910 * C139 + C7914 * C126 +
                     C51020 * C138 + C7913 * C125 + C51019 * C132) *
                        C121) *
                       C50835 * C50992) *
                      C50746 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C7913 * C122 + C51019 * C129 + C7914 * C123 +
                     C51020 * C130 + C7915 * C124 + C7910 * C131) *
                        C844 +
                    (C7913 * C133 + C51019 * C143 + C7914 * C134 +
                     C51020 * C144 + C7915 * C135 + C7910 * C145) *
                        C841 -
                    (C11055 + C11056 + C11057) * C845 -
                    (C11058 + C11059 + C11060) * C842 +
                    (C11633 + C11634 + C11635) * C846 +
                    (C11636 + C11637 + C11638) * C843) *
                       C50835 * C50992 +
                   ((C11057 + C11056 + C11055) * C844 +
                    (C11060 + C11059 + C11058) * C841 -
                    (C11635 + C11634 + C11633) * C845 -
                    (C11638 + C11637 + C11636) * C842 +
                    (C7913 * C1058 + C51019 * C1062 + C7914 * C1057 +
                     C51020 * C1061 + C7915 * C1056 + C7910 * C1060) *
                        C846 +
                    (C7913 * C1066 + C51019 * C1070 + C7914 * C1065 +
                     C51020 * C1069 + C7915 * C1064 + C7910 * C1068) *
                        C843) *
                       C50835 * C50911) *
                      C50746 * C50968 +
                  (((C11061 + C11062 + C11063) * C845 -
                    ((C7915 * C136 + C7910 * C146 + C7914 * C135 +
                      C51020 * C145 + C7913 * C134 + C51019 * C144) *
                         C841 +
                     (C7915 * C125 + C7910 * C132 + C7914 * C124 +
                      C51020 * C131 + C7913 * C123 + C51019 * C130) *
                         C844) +
                    (C11064 + C11065 + C11066) * C842 -
                    (C11639 + C11640 + C11641) * C846 -
                    (C11642 + C11643 + C11644) * C843) *
                       C50835 * C50992 +
                   ((C11641 + C11640 + C11639) * C845 -
                    ((C11066 + C11065 + C11064) * C841 +
                     (C11063 + C11062 + C11061) * C844) +
                    (C11644 + C11643 + C11642) * C842 -
                    (C7915 * C1055 + C7910 * C1059 + C7914 * C1056 +
                     C51020 * C1060 + C7913 * C1057 + C51019 * C1061) *
                        C846 -
                    (C7915 * C1063 + C7910 * C1067 + C7914 * C1064 +
                     C51020 * C1068 + C7913 * C1065 + C51019 * C1069) *
                        C843) *
                       C50835 * C50911) *
                      C50746 * C50719)) /
                    (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
             C7915 * C124 + C7910 * C131) *
                C121 +
            (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
             C7915 * C135 + C7910 * C145) *
                C50776) *
               C50835 * C50992 +
           ((C11057 + C11056 + C11055) * C121 +
            (C11060 + C11059 + C11058) * C50776) *
               C50835 * C50911) *
              C592 -
          (((C8734 + C8735 + C8736) * C50776 + (C8731 + C8732 + C8733) * C121) *
               C50835 * C50911 +
           ((C8104 + C8103 + C8102) * C50776 + (C8101 + C8100 + C8099) * C121) *
               C50835 * C50992) *
              C593 +
          (((C8438 + C8437 + C8436) * C121 + (C8435 + C8434 + C8433) * C50776) *
               C50835 * C50992 +
           ((C8737 + C8738 + C8739) * C121 + (C8740 + C8741 + C8742) * C50776) *
               C50835 * C50911) *
              C594 -
          (((C7915 * C4002 + C7910 * C4003 + C7914 * C3010 + C51020 * C3016 +
             C7913 * C3009 + C51019 * C3015) *
                C50776 +
            (C7915 * C4000 + C7910 * C4001 + C7914 * C3004 + C51020 * C3008 +
             C7913 * C3003 + C51019 * C3007) *
                C121) *
               C50835 * C50911 +
           ((C8560 + C8559 + C8558) * C50776 + (C8557 + C8556 + C8555) * C121) *
               C50835 * C50992) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
              C7915 * C124 + C7910 * C131) *
                 C121 +
             (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
              C7915 * C135 + C7910 * C145) *
                 C50776) *
                C50835 * C50992 +
            ((C7913 * C382 + C51019 * C388 + C7914 * C381 + C51020 * C387 +
              C7915 * C380 + C7910 * C386) *
                 C121 +
             (C7913 * C392 + C51019 * C400 + C7914 * C391 + C51020 * C399 +
              C7915 * C390 + C7910 * C398) *
                 C50776) *
                C50835 * C50911) *
               C50975 -
           (((C8734 + C8735 + C8736) * C50776 +
             (C8731 + C8732 + C8733) * C121) *
                C50835 * C50911 +
            ((C8104 + C8103 + C8102) * C50776 +
             (C8101 + C8100 + C8099) * C121) *
                C50835 * C50992) *
               C50762) *
              C250 +
          ((((C8105 + C8106 + C8107) * C121 +
             (C8108 + C8109 + C8110) * C50776) *
                C50835 * C50992 +
            ((C9649 + C9650 + C9651) * C121 +
             (C9652 + C9653 + C9654) * C50776) *
                C50835 * C50911) *
               C50762 -
           (((C7915 * C389 + C7910 * C397 + C7914 * C390 + C51020 * C398 +
              C7913 * C391 + C51019 * C399) *
                 C50776 +
             (C7915 * C379 + C7910 * C385 + C7914 * C380 + C51020 * C386 +
              C7913 * C381 + C51019 * C387) *
                 C121) *
                C50835 * C50911 +
            ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51020 * C145 +
              C7913 * C134 + C51019 * C144) *
                 C50776 +
             (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51020 * C131 +
              C7913 * C123 + C51019 * C130) *
                 C121) *
                C50835 * C50992) *
               C50975) *
              C251 +
          ((((C7913 * C124 + C51019 * C131 + C7914 * C125 + C51020 * C132 +
              C7915 * C126 + C7910 * C138) *
                 C121 +
             (C7913 * C135 + C51019 * C145 + C7914 * C136 + C51020 * C146 +
              C7915 * C137 + C7910 * C147) *
                 C50776) *
                C50835 * C50992 +
            ((C7913 * C380 + C51019 * C386 + C7914 * C379 + C51020 * C385 +
              C7915 * C383 + C7910 * C393) *
                 C121 +
             (C7913 * C390 + C51019 * C398 + C7914 * C389 + C51020 * C397 +
              C7915 * C394 + C7910 * C401) *
                 C50776) *
                C50835 * C50911) *
               C50975 -
           (((C7915 * C1409 + C7910 * C1410 + C7914 * C726 + C51020 * C738 +
              C7913 * C725 + C51019 * C737) *
                 C50776 +
             (C7915 * C1407 + C7910 * C1408 + C7914 * C714 + C51020 * C722 +
              C7913 * C713 + C51019 * C721) *
                 C121) *
                C50835 * C50911 +
            ((C8116 + C8115 + C8114) * C50776 +
             (C8113 + C8112 + C8111) * C121) *
                C50835 * C50992) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
             C7915 * C124 + C7910 * C131) *
                C844 +
            (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
             C7915 * C135 + C7910 * C145) *
                C841 -
            (C11055 + C11056 + C11057) * C845 -
            (C11058 + C11059 + C11060) * C842 +
            (C11633 + C11634 + C11635) * C846 +
            (C11636 + C11637 + C11638) * C843) *
               C50835 * C50992 +
           ((C11057 + C11056 + C11055) * C844 +
            (C11060 + C11059 + C11058) * C841 -
            (C11635 + C11634 + C11633) * C845 -
            (C11638 + C11637 + C11636) * C842 +
            (C7913 * C1058 + C51019 * C1062 + C7914 * C1057 + C51020 * C1061 +
             C7915 * C1056 + C7910 * C1060) *
                C846 +
            (C7913 * C1066 + C51019 * C1070 + C7914 * C1065 + C51020 * C1069 +
             C7915 * C1064 + C7910 * C1068) *
                C843) *
               C50835 * C50911) *
              C50975 +
          (((C8733 + C8732 + C8731) * C845 -
            ((C8104 + C8103 + C8102) * C841 + (C8101 + C8100 + C8099) * C844) +
            (C8736 + C8735 + C8734) * C842 - (C9049 + C9048 + C9047) * C846 -
            (C9052 + C9051 + C9050) * C843) *
               C50835 * C50992 +
           ((C9047 + C9048 + C9049) * C845 -
            ((C8734 + C8735 + C8736) * C841 + (C8731 + C8732 + C8733) * C844) +
            (C9050 + C9051 + C9052) * C842 -
            (C7915 * C6822 + C7910 * C6823 + C7914 * C3498 + C51020 * C3502 +
             C7913 * C3499 + C51019 * C3503) *
                C846 -
            (C7915 * C6824 + C7910 * C6825 + C7914 * C3504 + C51020 * C3510 +
             C7913 * C3505 + C51019 * C3511) *
                C843) *
               C50835 * C50911) *
              C50762) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
             C7915 * C124 + C7910 * C131) *
                C377 +
            (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
             C7915 * C135 + C7910 * C145) *
                C50977 -
            (C11055 + C11056 + C11057) * C378 -
            (C11058 + C11059 + C11060) * C50788) *
               C50835 * C50992 +
           ((C11057 + C11056 + C11055) * C377 +
            (C11060 + C11059 + C11058) * C50977 -
            (C7915 * C849 + C7910 * C854 + C7914 * C848 + C51020 * C853 +
             C7913 * C847 + C51019 * C852) *
                C378 -
            (C7915 * C858 + C7910 * C864 + C7914 * C857 + C51020 * C863 +
             C7913 * C856 + C51019 * C862) *
                C50788) *
               C50835 * C50911) *
              C501 +
          (((C8733 + C8732 + C8731) * C378 -
            ((C8104 + C8103 + C8102) * C50977 +
             (C8101 + C8100 + C8099) * C377) +
            (C8736 + C8735 + C8734) * C50788) *
               C50835 * C50992 +
           ((C9047 + C9048 + C9049) * C378 -
            ((C8734 + C8735 + C8736) * C50977 +
             (C8731 + C8732 + C8733) * C377) +
            (C9050 + C9051 + C9052) * C50788) *
               C50835 * C50911) *
              C502 +
          (((C8438 + C8437 + C8436) * C377 + (C8435 + C8434 + C8433) * C50977 -
            (C8739 + C8738 + C8737) * C378 - (C8742 + C8741 + C8740) * C50788) *
               C50835 * C50992 +
           ((C8737 + C8738 + C8739) * C377 + (C8740 + C8741 + C8742) * C50977 -
            (C7915 * C3212 + C7910 * C3217 + C7914 * C3211 + C51020 * C3214 +
             C7913 * C3210 + C51019 * C3213) *
                C378 -
            (C7915 * C3218 + C7910 * C3221 + C7914 * C3216 + C51020 * C3220 +
             C7913 * C3215 + C51019 * C3219) *
                C50788) *
               C50835 * C50911) *
              C503) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
             C7915 * C124 + C7910 * C131) *
                C377 +
            (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
             C7915 * C135 + C7910 * C145) *
                C50977 -
            (C11055 + C11056 + C11057) * C378 -
            (C11058 + C11059 + C11060) * C50788) *
               C50835 * C50992 +
           ((C11057 + C11056 + C11055) * C377 +
            (C11060 + C11059 + C11058) * C50977 -
            (C7915 * C849 + C7910 * C854 + C7914 * C848 + C51020 * C853 +
             C7913 * C847 + C51019 * C852) *
                C378 -
            (C7915 * C858 + C7910 * C864 + C7914 * C857 + C51020 * C863 +
             C7913 * C856 + C51019 * C862) *
                C50788) *
               C50835 * C50911) *
              C50746 * C250 +
          (((C11061 + C11062 + C11063) * C378 -
            ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51020 * C145 +
              C7913 * C134 + C51019 * C144) *
                 C50977 +
             (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51020 * C131 +
              C7913 * C123 + C51019 * C130) *
                 C377) +
            (C11064 + C11065 + C11066) * C50788) *
               C50835 * C50992 +
           ((C7913 * C848 + C51019 * C853 + C7914 * C849 + C51020 * C854 +
             C7915 * C850 + C7910 * C855) *
                C378 -
            ((C11066 + C11065 + C11064) * C50977 +
             (C11063 + C11062 + C11061) * C377) +
            (C7913 * C857 + C51019 * C863 + C7914 * C858 + C51020 * C864 +
             C7915 * C859 + C7910 * C865) *
                C50788) *
               C50835 * C50911) *
              C50746 * C251 +
          (((C7913 * C124 + C51019 * C131 + C7914 * C125 + C51020 * C132 +
             C7915 * C126 + C7910 * C138) *
                C377 +
            (C7913 * C135 + C51019 * C145 + C7914 * C136 + C51020 * C146 +
             C7915 * C137 + C7910 * C147) *
                C50977 -
            (C11067 + C11068 + C11069) * C378 -
            (C11070 + C11071 + C11072) * C50788) *
               C50835 * C50992 +
           ((C11069 + C11068 + C11067) * C377 +
            (C11072 + C11071 + C11070) * C50977 -
            (C7915 * C851 + C7910 * C860 + C7914 * C850 + C51020 * C855 +
             C7913 * C849 + C51019 * C854) *
                C378 -
            (C7915 * C861 + C7910 * C866 + C7914 * C859 + C51020 * C865 +
             C7913 * C858 + C51019 * C864) *
                C50788) *
               C50835 * C50911) *
              C50746 * C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
            C7915 * C124 + C7910 * C131) *
               C1051 +
           (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
            C7915 * C135 + C7910 * C145) *
               C1047 -
           (C11055 + C11056 + C11057) * C1052 -
           (C11058 + C11059 + C11060) * C1048 +
           (C11633 + C11634 + C11635) * C1053 +
           (C11636 + C11637 + C11638) * C1049 -
           (C11901 + C11902 + C11903) * C1054 -
           (C11904 + C11905 + C11906) * C1050) *
              C50835 * C50992 +
          ((C11057 + C11056 + C11055) * C1051 +
           (C11060 + C11059 + C11058) * C1047 -
           (C11635 + C11634 + C11633) * C1052 -
           (C11638 + C11637 + C11636) * C1048 +
           (C11903 + C11902 + C11901) * C1053 +
           (C11906 + C11905 + C11904) * C1049 -
           (C7915 * C6010 + C7910 * C6015 + C7914 * C6009 + C51020 * C6012 +
            C7913 * C6008 + C51019 * C6011) *
               C1054 -
           (C7915 * C6016 + C7910 * C6019 + C7914 * C6014 + C51020 * C6018 +
            C7913 * C6013 + C51019 * C6017) *
               C1050) *
              C50835 * C50911) *
         C50746 * C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[54] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C7913 * C122 + C51019 * C129 + C7914 * C123 +
                     C51020 * C130 + C7915 * C124 + C7910 * C131) *
                        C1511 +
                    (C7913 * C133 + C51019 * C143 + C7914 * C134 +
                     C51020 * C144 + C7915 * C135 + C7910 * C145) *
                        C1509 -
                    (C11055 + C11056 + C11057) * C1512 -
                    (C11058 + C11059 + C11060) * C50788) *
                       C50835 * C50992 +
                   ((C11057 + C11056 + C11055) * C1511 +
                    (C11060 + C11059 + C11058) * C1509 -
                    (C11635 + C11634 + C11633) * C1512 -
                    (C11638 + C11637 + C11636) * C50788) *
                       C50835 * C50911) *
                      C50746 * C51021 +
                  (((C11061 + C11062 + C11063) * C1512 -
                    ((C7915 * C136 + C7910 * C146 + C7914 * C135 +
                      C51020 * C145 + C7913 * C134 + C51019 * C144) *
                         C1509 +
                     (C7915 * C125 + C7910 * C132 + C7914 * C124 +
                      C51020 * C131 + C7913 * C123 + C51019 * C130) *
                         C1511) +
                    (C11064 + C11065 + C11066) * C50788) *
                       C50835 * C50992 +
                   ((C11641 + C11640 + C11639) * C1512 -
                    ((C11066 + C11065 + C11064) * C1509 +
                     (C11063 + C11062 + C11061) * C1511) +
                    (C11644 + C11643 + C11642) * C50788) *
                       C50835 * C50911) *
                      C50746 * C51006 +
                  (((C7913 * C124 + C51019 * C131 + C7914 * C125 +
                     C51020 * C132 + C7915 * C126 + C7910 * C138) *
                        C1511 +
                    (C7913 * C135 + C51019 * C145 + C7914 * C136 +
                     C51020 * C146 + C7915 * C137 + C7910 * C147) *
                        C1509 -
                    (C11067 + C11068 + C11069) * C1512 -
                    (C11070 + C11071 + C11072) * C50788) *
                       C50835 * C50992 +
                   ((C11069 + C11068 + C11067) * C1511 +
                    (C11072 + C11071 + C11070) * C1509 -
                    (C7915 * C851 + C7910 * C860 + C7914 * C850 +
                     C51020 * C855 + C7913 * C849 + C51019 * C854) *
                        C1512 -
                    (C7915 * C861 + C7910 * C866 + C7914 * C859 +
                     C51020 * C865 + C7913 * C858 + C51019 * C864) *
                        C50788) *
                       C50835 * C50911) *
                      C50746 * C1173)) /
                (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
              C7915 * C124 + C7910 * C131) *
                 C1511 +
             (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
              C7915 * C135 + C7910 * C145) *
                 C1509 -
             (C11055 + C11056 + C11057) * C1512 -
             (C11058 + C11059 + C11060) * C50788) *
                C50835 * C50992 +
            ((C11057 + C11056 + C11055) * C1511 +
             (C11060 + C11059 + C11058) * C1509 -
             (C11635 + C11634 + C11633) * C1512 -
             (C11638 + C11637 + C11636) * C50788) *
                C50835 * C50911) *
               C50975 +
           (((C8733 + C8732 + C8731) * C1512 -
             ((C8104 + C8103 + C8102) * C1509 +
              (C8101 + C8100 + C8099) * C1511) +
             (C8736 + C8735 + C8734) * C50788) *
                C50835 * C50992 +
            ((C9047 + C9048 + C9049) * C1512 -
             ((C8734 + C8735 + C8736) * C1509 +
              (C8731 + C8732 + C8733) * C1511) +
             (C9050 + C9051 + C9052) * C50788) *
                C50835 * C50911) *
               C50762) *
              C1275 +
          ((((C11061 + C11062 + C11063) * C1512 -
             ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51020 * C145 +
               C7913 * C134 + C51019 * C144) *
                  C1509 +
              (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51020 * C131 +
               C7913 * C123 + C51019 * C130) *
                  C1511) +
             (C11064 + C11065 + C11066) * C50788) *
                C50835 * C50992 +
            ((C11641 + C11640 + C11639) * C1512 -
             ((C11066 + C11065 + C11064) * C1509 +
              (C11063 + C11062 + C11061) * C1511) +
             (C11644 + C11643 + C11642) * C50788) *
                C50835 * C50911) *
               C50975 +
           (((C8105 + C8106 + C8107) * C1511 + (C8108 + C8109 + C8110) * C1509 -
             (C9651 + C9650 + C9649) * C1512 -
             (C9654 + C9653 + C9652) * C50788) *
                C50835 * C50992 +
            ((C9649 + C9650 + C9651) * C1511 + (C9652 + C9653 + C9654) * C1509 -
             (C7915 * C965 + C7910 * C969 + C7914 * C966 + C51020 * C970 +
              C7913 * C967 + C51019 * C971) *
                 C1512 -
             (C7915 * C973 + C7910 * C977 + C7914 * C974 + C51020 * C978 +
              C7913 * C975 + C51019 * C979) *
                 C50788) *
                C50835 * C50911) *
               C50762) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C7913 * C122 + C51019 * C129 + C7914 * C123 +
                     C51020 * C130 + C7915 * C124 + C7910 * C131) *
                        C1744 +
                    (C7913 * C133 + C51019 * C143 + C7914 * C134 +
                     C51020 * C144 + C7915 * C135 + C7910 * C145) *
                        C51023 -
                    (C11055 + C11056 + C11057) * C1745 -
                    (C11058 + C11059 + C11060) * C51012 +
                    (C11633 + C11634 + C11635) * C1746 +
                    (C11636 + C11637 + C11638) * C1743) *
                       C50835 * C50992 +
                   ((C11057 + C11056 + C11055) * C1744 +
                    (C11060 + C11059 + C11058) * C51023 -
                    (C11635 + C11634 + C11633) * C1745 -
                    (C11638 + C11637 + C11636) * C51012 +
                    (C11903 + C11902 + C11901) * C1746 +
                    (C11906 + C11905 + C11904) * C1743) *
                       C50835 * C50911) *
                      C50746 * C1275 +
                  (((C11061 + C11062 + C11063) * C1745 -
                    ((C7915 * C136 + C7910 * C146 + C7914 * C135 +
                      C51020 * C145 + C7913 * C134 + C51019 * C144) *
                         C51023 +
                     (C7915 * C125 + C7910 * C132 + C7914 * C124 +
                      C51020 * C131 + C7913 * C123 + C51019 * C130) *
                         C1744) +
                    (C11064 + C11065 + C11066) * C51012 -
                    (C11639 + C11640 + C11641) * C1746 -
                    (C11642 + C11643 + C11644) * C1743) *
                       C50835 * C50992 +
                   ((C11641 + C11640 + C11639) * C1745 -
                    ((C11066 + C11065 + C11064) * C51023 +
                     (C11063 + C11062 + C11061) * C1744) +
                    (C11644 + C11643 + C11642) * C51012 -
                    (C7915 * C1055 + C7910 * C1059 + C7914 * C1056 +
                     C51020 * C1060 + C7913 * C1057 + C51019 * C1061) *
                        C1746 -
                    (C7915 * C1063 + C7910 * C1067 + C7914 * C1064 +
                     C51020 * C1068 + C7913 * C1065 + C51019 * C1069) *
                        C1743) *
                       C50835 * C50911) *
                      C50746 * C50719)) /
                (p * q * std::sqrt(p + q));
    d2ee[57] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C7913 * C122 + C51019 * C129 + C7914 * C123 +
                     C51020 * C130 + C7915 * C124 + C7910 * C131) *
                        C121 +
                    (C7913 * C133 + C51019 * C143 + C7914 * C134 +
                     C51020 * C144 + C7915 * C135 + C7910 * C145) *
                        C50776) *
                       C50835 * C50992 +
                   ((C7913 * C382 + C51019 * C388 + C7914 * C381 +
                     C51020 * C387 + C7915 * C380 + C7910 * C386) *
                        C121 +
                    (C7913 * C392 + C51019 * C400 + C7914 * C391 +
                     C51020 * C399 + C7915 * C390 + C7910 * C398) *
                        C50776) *
                       C50835 * C50911) *
                      C50746 * C113 -
                  (((C7915 * C389 + C7910 * C397 + C7914 * C390 +
                     C51020 * C398 + C7913 * C391 + C51019 * C399) *
                        C50776 +
                    (C7915 * C379 + C7910 * C385 + C7914 * C380 +
                     C51020 * C386 + C7913 * C381 + C51019 * C387) *
                        C121) *
                       C50835 * C50911 +
                   ((C7915 * C136 + C7910 * C146 + C7914 * C135 +
                     C51020 * C145 + C7913 * C134 + C51019 * C144) *
                        C50776 +
                    (C7915 * C125 + C7910 * C132 + C7914 * C124 +
                     C51020 * C131 + C7913 * C123 + C51019 * C130) *
                        C121) *
                       C50835 * C50992) *
                      C50746 * C114 +
                  (((C7913 * C124 + C51019 * C131 + C7914 * C125 +
                     C51020 * C132 + C7915 * C126 + C7910 * C138) *
                        C121 +
                    (C7913 * C135 + C51019 * C145 + C7914 * C136 +
                     C51020 * C146 + C7915 * C137 + C7910 * C147) *
                        C50776) *
                       C50835 * C50992 +
                   ((C7913 * C380 + C51019 * C386 + C7914 * C379 +
                     C51020 * C385 + C7915 * C383 + C7910 * C393) *
                        C121 +
                    (C7913 * C390 + C51019 * C398 + C7914 * C389 +
                     C51020 * C397 + C7915 * C394 + C7910 * C401) *
                        C50776) *
                       C50835 * C50911) *
                      C50746 * C115 -
                  (((C7915 * C396 + C7910 * C402 + C7914 * C394 +
                     C51020 * C401 + C7913 * C389 + C51019 * C397) *
                        C50776 +
                    (C7915 * C384 + C7910 * C395 + C7914 * C383 +
                     C51020 * C393 + C7913 * C379 + C51019 * C385) *
                        C121) *
                       C50835 * C50911 +
                   ((C7915 * C140 + C7910 * C148 + C7914 * C137 +
                     C51020 * C147 + C7913 * C136 + C51019 * C146) *
                        C50776 +
                    (C7915 * C127 + C7910 * C139 + C7914 * C126 +
                     C51020 * C138 + C7913 * C125 + C51019 * C132) *
                        C121) *
                       C50835 * C50992) *
                      C50746 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C7913 * C122 + C51019 * C129 + C7914 * C123 +
                      C51020 * C130 + C7915 * C124 + C7910 * C131) *
                         C121 +
                     (C7913 * C133 + C51019 * C143 + C7914 * C134 +
                      C51020 * C144 + C7915 * C135 + C7910 * C145) *
                         C50776) *
                        C50835 * C50992 +
                    ((C11057 + C11056 + C11055) * C121 +
                     (C11060 + C11059 + C11058) * C50776) *
                        C50835 * C50911) *
                       C501 -
                   (((C8734 + C8735 + C8736) * C50776 +
                     (C8731 + C8732 + C8733) * C121) *
                        C50835 * C50911 +
                    ((C8104 + C8103 + C8102) * C50776 +
                     (C8101 + C8100 + C8099) * C121) *
                        C50835 * C50992) *
                       C502 +
                   (((C8438 + C8437 + C8436) * C121 +
                     (C8435 + C8434 + C8433) * C50776) *
                        C50835 * C50992 +
                    ((C8737 + C8738 + C8739) * C121 +
                     (C8740 + C8741 + C8742) * C50776) *
                        C50835 * C50911) *
                       C503) *
                      C50968 +
                  ((((C8105 + C8106 + C8107) * C121 +
                     (C8108 + C8109 + C8110) * C50776) *
                        C50835 * C50992 +
                    ((C9649 + C9650 + C9651) * C121 +
                     (C9652 + C9653 + C9654) * C50776) *
                        C50835 * C50911) *
                       C502 -
                   (((C11066 + C11065 + C11064) * C50776 +
                     (C11063 + C11062 + C11061) * C121) *
                        C50835 * C50911 +
                    ((C7915 * C136 + C7910 * C146 + C7914 * C135 +
                      C51020 * C145 + C7913 * C134 + C51019 * C144) *
                         C50776 +
                     (C7915 * C125 + C7910 * C132 + C7914 * C124 +
                      C51020 * C131 + C7913 * C123 + C51019 * C130) *
                         C121) *
                        C50835 * C50992) *
                       C501 -
                   (((C7915 * C731 + C7910 * C739 + C7914 * C732 +
                      C51020 * C740 + C7913 * C733 + C51019 * C741) *
                         C50776 +
                     (C7915 * C715 + C7910 * C727 + C7914 * C716 +
                      C51020 * C728 + C7913 * C717 + C51019 * C729) *
                         C121) *
                        C50835 * C50911 +
                    ((C8444 + C8443 + C8442) * C50776 +
                     (C8441 + C8440 + C8439) * C121) *
                        C50835 * C50992) *
                       C503) *
                      C50719)) /
                    (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
              C7915 * C124 + C7910 * C131) *
                 C121 +
             (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
              C7915 * C135 + C7910 * C145) *
                 C50776) *
                C50835 * C50992 +
            ((C7913 * C382 + C51019 * C388 + C7914 * C381 + C51020 * C387 +
              C7915 * C380 + C7910 * C386) *
                 C121 +
             (C7913 * C392 + C51019 * C400 + C7914 * C391 + C51020 * C399 +
              C7915 * C390 + C7910 * C398) *
                 C50776) *
                C50835 * C50911) *
               C50975 -
           (((C8734 + C8735 + C8736) * C50776 +
             (C8731 + C8732 + C8733) * C121) *
                C50835 * C50911 +
            ((C8104 + C8103 + C8102) * C50776 +
             (C8101 + C8100 + C8099) * C121) *
                C50835 * C50992) *
               C50762) *
              C250 +
          ((((C8105 + C8106 + C8107) * C121 +
             (C8108 + C8109 + C8110) * C50776) *
                C50835 * C50992 +
            ((C9649 + C9650 + C9651) * C121 +
             (C9652 + C9653 + C9654) * C50776) *
                C50835 * C50911) *
               C50762 -
           (((C7915 * C389 + C7910 * C397 + C7914 * C390 + C51020 * C398 +
              C7913 * C391 + C51019 * C399) *
                 C50776 +
             (C7915 * C379 + C7910 * C385 + C7914 * C380 + C51020 * C386 +
              C7913 * C381 + C51019 * C387) *
                 C121) *
                C50835 * C50911 +
            ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51020 * C145 +
              C7913 * C134 + C51019 * C144) *
                 C50776 +
             (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51020 * C131 +
              C7913 * C123 + C51019 * C130) *
                 C121) *
                C50835 * C50992) *
               C50975) *
              C251 +
          ((((C7913 * C124 + C51019 * C131 + C7914 * C125 + C51020 * C132 +
              C7915 * C126 + C7910 * C138) *
                 C121 +
             (C7913 * C135 + C51019 * C145 + C7914 * C136 + C51020 * C146 +
              C7915 * C137 + C7910 * C147) *
                 C50776) *
                C50835 * C50992 +
            ((C7913 * C380 + C51019 * C386 + C7914 * C379 + C51020 * C385 +
              C7915 * C383 + C7910 * C393) *
                 C121 +
             (C7913 * C390 + C51019 * C398 + C7914 * C389 + C51020 * C397 +
              C7915 * C394 + C7910 * C401) *
                 C50776) *
                C50835 * C50911) *
               C50975 -
           (((C7915 * C1409 + C7910 * C1410 + C7914 * C726 + C51020 * C738 +
              C7913 * C725 + C51019 * C737) *
                 C50776 +
             (C7915 * C1407 + C7910 * C1408 + C7914 * C714 + C51020 * C722 +
              C7913 * C713 + C51019 * C721) *
                 C121) *
                C50835 * C50911 +
            ((C8116 + C8115 + C8114) * C50776 +
             (C8113 + C8112 + C8111) * C121) *
                C50835 * C50992) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
             C7915 * C124 + C7910 * C131) *
                C121 +
            (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
             C7915 * C135 + C7910 * C145) *
                C50776) *
               C50835 * C50992 +
           ((C11057 + C11056 + C11055) * C121 +
            (C11060 + C11059 + C11058) * C50776) *
               C50835 * C50911) *
              C592 -
          (((C8734 + C8735 + C8736) * C50776 + (C8731 + C8732 + C8733) * C121) *
               C50835 * C50911 +
           ((C8104 + C8103 + C8102) * C50776 + (C8101 + C8100 + C8099) * C121) *
               C50835 * C50992) *
              C593 +
          (((C8438 + C8437 + C8436) * C121 + (C8435 + C8434 + C8433) * C50776) *
               C50835 * C50992 +
           ((C8737 + C8738 + C8739) * C121 + (C8740 + C8741 + C8742) * C50776) *
               C50835 * C50911) *
              C594 -
          (((C7915 * C4002 + C7910 * C4003 + C7914 * C3010 + C51020 * C3016 +
             C7913 * C3009 + C51019 * C3015) *
                C50776 +
            (C7915 * C4000 + C7910 * C4001 + C7914 * C3004 + C51020 * C3008 +
             C7913 * C3003 + C51019 * C3007) *
                C121) *
               C50835 * C50911 +
           ((C8560 + C8559 + C8558) * C50776 + (C8557 + C8556 + C8555) * C121) *
               C50835 * C50992) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
             C7915 * C124 + C7910 * C131) *
                C377 +
            (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
             C7915 * C135 + C7910 * C145) *
                C50977 -
            (C11055 + C11056 + C11057) * C378 -
            (C11058 + C11059 + C11060) * C50788) *
               C50835 * C50992 +
           ((C11057 + C11056 + C11055) * C377 +
            (C11060 + C11059 + C11058) * C50977 -
            (C7915 * C849 + C7910 * C854 + C7914 * C848 + C51020 * C853 +
             C7913 * C847 + C51019 * C852) *
                C378 -
            (C7915 * C858 + C7910 * C864 + C7914 * C857 + C51020 * C863 +
             C7913 * C856 + C51019 * C862) *
                C50788) *
               C50835 * C50911) *
              C50746 * C250 +
          (((C11061 + C11062 + C11063) * C378 -
            ((C7915 * C136 + C7910 * C146 + C7914 * C135 + C51020 * C145 +
              C7913 * C134 + C51019 * C144) *
                 C50977 +
             (C7915 * C125 + C7910 * C132 + C7914 * C124 + C51020 * C131 +
              C7913 * C123 + C51019 * C130) *
                 C377) +
            (C11064 + C11065 + C11066) * C50788) *
               C50835 * C50992 +
           ((C7913 * C848 + C51019 * C853 + C7914 * C849 + C51020 * C854 +
             C7915 * C850 + C7910 * C855) *
                C378 -
            ((C11066 + C11065 + C11064) * C50977 +
             (C11063 + C11062 + C11061) * C377) +
            (C7913 * C857 + C51019 * C863 + C7914 * C858 + C51020 * C864 +
             C7915 * C859 + C7910 * C865) *
                C50788) *
               C50835 * C50911) *
              C50746 * C251 +
          (((C7913 * C124 + C51019 * C131 + C7914 * C125 + C51020 * C132 +
             C7915 * C126 + C7910 * C138) *
                C377 +
            (C7913 * C135 + C51019 * C145 + C7914 * C136 + C51020 * C146 +
             C7915 * C137 + C7910 * C147) *
                C50977 -
            (C11067 + C11068 + C11069) * C378 -
            (C11070 + C11071 + C11072) * C50788) *
               C50835 * C50992 +
           ((C11069 + C11068 + C11067) * C377 +
            (C11072 + C11071 + C11070) * C50977 -
            (C7915 * C851 + C7910 * C860 + C7914 * C850 + C51020 * C855 +
             C7913 * C849 + C51019 * C854) *
                C378 -
            (C7915 * C861 + C7910 * C866 + C7914 * C859 + C51020 * C865 +
             C7913 * C858 + C51019 * C864) *
                C50788) *
               C50835 * C50911) *
              C50746 * C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7913 * C122 + C51019 * C129 + C7914 * C123 + C51020 * C130 +
             C7915 * C124 + C7910 * C131) *
                C377 +
            (C7913 * C133 + C51019 * C143 + C7914 * C134 + C51020 * C144 +
             C7915 * C135 + C7910 * C145) *
                C50977 -
            (C11055 + C11056 + C11057) * C378 -
            (C11058 + C11059 + C11060) * C50788) *
               C50835 * C50992 +
           ((C11057 + C11056 + C11055) * C377 +
            (C11060 + C11059 + C11058) * C50977 -
            (C7915 * C849 + C7910 * C854 + C7914 * C848 + C51020 * C853 +
             C7913 * C847 + C51019 * C852) *
                C378 -
            (C7915 * C858 + C7910 * C864 + C7914 * C857 + C51020 * C863 +
             C7913 * C856 + C51019 * C862) *
                C50788) *
               C50835 * C50911) *
              C501 +
          (((C8733 + C8732 + C8731) * C378 -
            ((C8104 + C8103 + C8102) * C50977 +
             (C8101 + C8100 + C8099) * C377) +
            (C8736 + C8735 + C8734) * C50788) *
               C50835 * C50992 +
           ((C9047 + C9048 + C9049) * C378 -
            ((C8734 + C8735 + C8736) * C50977 +
             (C8731 + C8732 + C8733) * C377) +
            (C9050 + C9051 + C9052) * C50788) *
               C50835 * C50911) *
              C502 +
          (((C8438 + C8437 + C8436) * C377 + (C8435 + C8434 + C8433) * C50977 -
            (C8739 + C8738 + C8737) * C378 - (C8742 + C8741 + C8740) * C50788) *
               C50835 * C50992 +
           ((C8737 + C8738 + C8739) * C377 + (C8740 + C8741 + C8742) * C50977 -
            (C7915 * C3212 + C7910 * C3217 + C7914 * C3211 + C51020 * C3214 +
             C7913 * C3210 + C51019 * C3213) *
                C378 -
            (C7915 * C3218 + C7910 * C3221 + C7914 * C3216 + C51020 * C3220 +
             C7913 * C3215 + C51019 * C3219) *
                C50788) *
               C50835 * C50911) *
              C503) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50776) *
               C50835 * C50847 * C1169 -
           ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
             C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                C50776 +
            (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
             C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                C121) *
               C50835 * C50847 * C50762) *
              C51021 +
          (((C117 * C255 + C105 * C265 + C118 * C254 + C106 * C264 +
             C119 * C253 + C107 * C263 + C120 * C257 + C108 * C267) *
                C121 +
            (C117 * C261 + C105 * C273 + C118 * C260 + C106 * C272 +
             C119 * C259 + C107 * C271 + C120 * C268 + C108 * C275) *
                C50776) *
               C50835 * C50847 * C50762 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50776 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50835 * C50847 * C1169) *
              C51006 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50776) *
               C50835 * C50847 * C1169 -
           ((C120 * C269 + C108 * C276 + C119 * C268 + C107 * C275 +
             C118 * C259 + C106 * C271 + C117 * C260 + C105 * C272) *
                C50776 +
            (C120 * C258 + C108 * C270 + C119 * C257 + C107 * C267 +
             C118 * C253 + C106 * C263 + C117 * C254 + C105 * C264) *
                C121) *
               C50835 * C50847 * C50762) *
              C1173)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50776) *
                C2173 +
            ((C2373 + C2374) * C121 + (C2375 + C2376) * C50776) * C2174 +
            C2733 * C2175) *
               C50847 * C1169 -
           (C2857 * C2175 +
            ((C2380 + C2379) * C50776 + (C2378 + C2377) * C121) * C2174 +
            ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C2173) *
               C50847 * C50762) *
              C51021 +
          ((((C2381 + C2382) * C121 + (C2383 + C2384) * C50776) * C2173 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50776) * C2174 +
            ((C2727 + C2728) * C121 + (C2729 + C2730) * C50776) * C2175) *
               C50847 * C50762 -
           (C2734 * C2175 +
            ((C2384 + C2383) * C50776 + (C2382 + C2381) * C121) * C2174 +
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C50776 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50847 * C1169) *
              C51006 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                 C50776) *
                C2173 +
            ((C2389 + C2390) * C121 + (C2391 + C2392) * C50776) * C2174 +
            ((C2393 + C2394) * C121 + (C2395 + C2396) * C50776) * C2175) *
               C50847 * C1169 -
           (((C2177 * C601 + C50692 * C609 + C2176 * C602 + C2171 * C610) *
                 C50776 +
             (C2177 * C597 + C50692 * C605 + C2176 * C598 + C2171 * C606) *
                 C121) *
                C2175 +
            ((C2396 + C2395) * C50776 + (C2394 + C2393) * C121) * C2174 +
            ((C2392 + C2391) * C50776 + (C2390 + C2389) * C121) * C2173) *
               C50847 * C50762) *
              C1173)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50776) *
               C50835 * C50847 * C51022 -
           ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
             C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                C50776 +
            (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
             C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                C121) *
               C50835 * C50847 * C51009 +
           ((C117 * C506 + C105 * C511 + C118 * C507 + C106 * C512 +
             C119 * C508 + C107 * C513 + C120 * C509 + C108 * C514) *
                C121 +
            (C117 * C515 + C105 * C521 + C118 * C516 + C106 * C522 +
             C119 * C517 + C107 * C523 + C120 * C518 + C108 * C524) *
                C50776) *
               C50835 * C50847 * C1274) *
              C1275 +
          (((C117 * C255 + C105 * C265 + C118 * C254 + C106 * C264 +
             C119 * C253 + C107 * C263 + C120 * C257 + C108 * C267) *
                C121 +
            (C117 * C261 + C105 * C273 + C118 * C260 + C106 * C272 +
             C119 * C259 + C107 * C271 + C120 * C268 + C108 * C275) *
                C50776) *
               C50835 * C50847 * C51009 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50776 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50835 * C50847 * C51022 -
           ((C120 * C519 + C108 * C525 + C119 * C518 + C107 * C524 +
             C118 * C517 + C106 * C523 + C117 * C516 + C105 * C522) *
                C50776 +
            (C120 * C510 + C108 * C520 + C119 * C509 + C107 * C514 +
             C118 * C508 + C106 * C513 + C117 * C507 + C105 * C512) *
                C121) *
               C50835 * C50847 * C1274) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50776) *
                C2173 +
            ((C2373 + C2374) * C121 + (C2375 + C2376) * C50776) * C2174 +
            C2733 * C2175) *
               C50847 * C51022 -
           (C2857 * C2175 +
            ((C2380 + C2379) * C50776 + (C2378 + C2377) * C121) * C2174 +
            ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C2173) *
               C50847 * C51009 +
           (C2733 * C2173 +
            ((C2726 + C2725) * C121 + (C2724 + C2723) * C50776) * C2174 +
            ((C2853 + C2854) * C121 + (C2855 + C2856) * C50776) * C2175) *
               C50847 * C1274) *
              C1275 +
          ((((C2381 + C2382) * C121 + (C2383 + C2384) * C50776) * C2173 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50776) * C2174 +
            ((C2727 + C2728) * C121 + (C2729 + C2730) * C50776) * C2175) *
               C50847 * C51009 -
           (C2734 * C2175 +
            ((C2384 + C2383) * C50776 + (C2382 + C2381) * C121) * C2174 +
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C50776 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50847 * C51022 -
           (((C2177 * C2695 + C50692 * C2699 + C2176 * C2694 + C2171 * C2698) *
                 C50776 +
             (C2177 * C2690 + C50692 * C2696 + C2176 * C2689 + C2171 * C2692) *
                 C121) *
                C2175 +
            ((C2730 + C2729) * C50776 + (C2728 + C2727) * C121) * C2174 +
            C2734 * C2173) *
               C50847 * C1274) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C377 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50977 -
            (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 +
             C118 * C381 + C106 * C387 + C117 * C382 + C105 * C388) *
                C378 -
            (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 +
             C118 * C391 + C106 * C399 + C117 * C392 + C105 * C400) *
                C50788) *
               C50835 * C50847 * C1169 +
           ((C117 * C711 + C105 * C719 + C118 * C712 + C106 * C720 +
             C119 * C713 + C107 * C721 + C120 * C714 + C108 * C722) *
                C378 -
            ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
              C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                 C50977 +
             (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
              C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                 C377) +
            (C117 * C723 + C105 * C735 + C118 * C724 + C106 * C736 +
             C119 * C725 + C107 * C737 + C120 * C726 + C108 * C738) *
                C50788) *
               C50835 * C50847 * C50762) *
              C1275 +
          (((C117 * C381 + C105 * C387 + C118 * C380 + C106 * C386 +
             C119 * C379 + C107 * C385 + C120 * C383 + C108 * C393) *
                C378 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C50977 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C377) +
            (C117 * C391 + C105 * C399 + C118 * C390 + C106 * C398 +
             C119 * C389 + C107 * C397 + C120 * C394 + C108 * C401) *
                C50788) *
               C50835 * C50847 * C1169 +
           ((C117 * C255 + C105 * C265 + C118 * C254 + C106 * C264 +
             C119 * C253 + C107 * C263 + C120 * C257 + C108 * C267) *
                C377 +
            (C117 * C261 + C105 * C273 + C118 * C260 + C106 * C272 +
             C119 * C259 + C107 * C271 + C120 * C268 + C108 * C275) *
                C50977 -
            (C120 * C1407 + C108 * C1408 + C119 * C714 + C107 * C722 +
             C118 * C713 + C106 * C721 + C117 * C712 + C105 * C720) *
                C378 -
            (C120 * C1409 + C108 * C1410 + C119 * C726 + C107 * C738 +
             C118 * C725 + C106 * C737 + C117 * C724 + C105 * C736) *
                C50788) *
               C50835 * C50847 * C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C377 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50977 -
             (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
                 C378 -
             (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
                 C50788) *
                C2173 +
            ((C2373 + C2374) * C377 + (C2375 + C2376) * C50977 -
             (C3046 + C3047) * C378 - (C3048 + C3049) * C50788) *
                C2174 +
            C3064 * C2175) *
               C50847 * C1169 +
           (((C3047 + C3046) * C378 -
             ((C2376 + C2375) * C50977 + (C2374 + C2373) * C377) +
             (C3049 + C3048) * C50788) *
                C2173 +
            ((C3052 + C3051) * C378 -
             ((C2380 + C2379) * C50977 + (C2378 + C2377) * C377) +
             (C3054 + C3053) * C50788) *
                C2174 +
            ((C3055 + C3056) * C378 - (C2841 * C50977 + C2842 * C377) +
             (C3057 + C3058) * C50788) *
                C2175) *
               C50847 * C50762) *
              C1275 +
          ((((C2176 * C381 + C2171 * C387 + C2177 * C380 + C50692 * C386) *
                 C378 -
             ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                  C50977 +
              (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                  C377) +
             (C2176 * C391 + C2171 * C399 + C2177 * C390 + C50692 * C398) *
                 C50788) *
                C2173 +
            ((C4021 + C4022) * C378 -
             ((C2384 + C2383) * C50977 + (C2382 + C2381) * C377) +
             (C4023 + C4024) * C50788) *
                C2174 +
            ((C4025 + C4026) * C378 - (C2719 * C50977 + C2720 * C377) +
             (C4027 + C4028) * C50788) *
                C2175) *
               C50847 * C1169 +
           (((C2381 + C2382) * C377 + (C2383 + C2384) * C50977 -
             (C4022 + C4021) * C378 - (C4024 + C4023) * C50788) *
                C2173 +
            ((C2385 + C2386) * C377 + (C2387 + C2388) * C50977 -
             (C4026 + C4025) * C378 - (C4028 + C4027) * C50788) *
                C2174 +
            ((C2727 + C2728) * C377 + (C2729 + C2730) * C50977 -
             (C2177 * C4000 + C50692 * C4001 + C2176 * C3004 + C2171 * C3008) *
                 C378 -
             (C2177 * C4002 + C50692 * C4003 + C2176 * C3010 + C2171 * C3016) *
                 C50788) *
                C2175) *
               C50847 * C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C1511 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C1509 -
            (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 +
             C118 * C381 + C106 * C387 + C117 * C382 + C105 * C388) *
                C1512 -
            (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 +
             C118 * C391 + C106 * C399 + C117 * C392 + C105 * C400) *
                C50788) *
               C50835 * C50847 * C1169 +
           ((C117 * C711 + C105 * C719 + C118 * C712 + C106 * C720 +
             C119 * C713 + C107 * C721 + C120 * C714 + C108 * C722) *
                C1512 -
            ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
              C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                 C1509 +
             (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
              C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                 C1511) +
            (C117 * C723 + C105 * C735 + C118 * C724 + C106 * C736 +
             C119 * C725 + C107 * C737 + C120 * C726 + C108 * C738) *
                C50788) *
               C50835 * C50847 * C50762) *
              C50968 +
          (((C117 * C381 + C105 * C387 + C118 * C380 + C106 * C386 +
             C119 * C379 + C107 * C385 + C120 * C383 + C108 * C393) *
                C1512 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C1509 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C1511) +
            (C117 * C391 + C105 * C399 + C118 * C390 + C106 * C398 +
             C119 * C389 + C107 * C397 + C120 * C394 + C108 * C401) *
                C50788) *
               C50835 * C50847 * C1169 +
           ((C117 * C255 + C105 * C265 + C118 * C254 + C106 * C264 +
             C119 * C253 + C107 * C263 + C120 * C257 + C108 * C267) *
                C1511 +
            (C117 * C261 + C105 * C273 + C118 * C260 + C106 * C272 +
             C119 * C259 + C107 * C271 + C120 * C268 + C108 * C275) *
                C1509 -
            (C120 * C1407 + C108 * C1408 + C119 * C714 + C107 * C722 +
             C118 * C713 + C106 * C721 + C117 * C712 + C105 * C720) *
                C1512 -
            (C120 * C1409 + C108 * C1410 + C119 * C726 + C107 * C738 +
             C118 * C725 + C106 * C737 + C117 * C724 + C105 * C736) *
                C50788) *
               C50835 * C50847 * C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C1511 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C1509 -
             (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
                 C1512 -
             (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
                 C50788) *
                C2173 +
            ((C2373 + C2374) * C1511 + (C2375 + C2376) * C1509 -
             (C3046 + C3047) * C1512 - (C3048 + C3049) * C50788) *
                C2174 +
            (C2701 * C1511 + C2702 * C1509 - C3059 * C1512 - C3060 * C50788) *
                C2175) *
               C50847 * C1169 +
           (((C3047 + C3046) * C1512 -
             ((C2376 + C2375) * C1509 + (C2374 + C2373) * C1511) +
             (C3049 + C3048) * C50788) *
                C2173 +
            ((C3052 + C3051) * C1512 -
             ((C2380 + C2379) * C1509 + (C2378 + C2377) * C1511) +
             (C3054 + C3053) * C50788) *
                C2174 +
            ((C3055 + C3056) * C1512 - (C2841 * C1509 + C2842 * C1511) +
             (C3057 + C3058) * C50788) *
                C2175) *
               C50847 * C50762) *
              C50968 +
          ((((C2176 * C381 + C2171 * C387 + C2177 * C380 + C50692 * C386) *
                 C1512 -
             ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                  C1509 +
              (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                  C1511) +
             (C2176 * C391 + C2171 * C399 + C2177 * C390 + C50692 * C398) *
                 C50788) *
                C2173 +
            ((C4021 + C4022) * C1512 -
             ((C2384 + C2383) * C1509 + (C2382 + C2381) * C1511) +
             (C4023 + C4024) * C50788) *
                C2174 +
            ((C4025 + C4026) * C1512 - (C2719 * C1509 + C2720 * C1511) +
             (C4027 + C4028) * C50788) *
                C2175) *
               C50847 * C1169 +
           (((C2381 + C2382) * C1511 + (C2383 + C2384) * C1509 -
             (C4022 + C4021) * C1512 - (C4024 + C4023) * C50788) *
                C2173 +
            ((C2385 + C2386) * C1511 + (C2387 + C2388) * C1509 -
             (C4026 + C4025) * C1512 - (C4028 + C4027) * C50788) *
                C2174 +
            ((C2727 + C2728) * C1511 + (C2729 + C2730) * C1509 -
             (C2177 * C4000 + C50692 * C4001 + C2176 * C3004 + C2171 * C3008) *
                 C1512 -
             (C2177 * C4002 + C50692 * C4003 + C2176 * C3010 + C2171 * C3016) *
                 C50788) *
                C2175) *
               C50847 * C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C1511 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C1509 -
           (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 +
            C118 * C381 + C106 * C387 + C117 * C382 + C105 * C388) *
               C1512 -
           (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 +
            C118 * C391 + C106 * C399 + C117 * C392 + C105 * C400) *
               C50788) *
              C50835 * C50847 * C51022 +
          ((C117 * C711 + C105 * C719 + C118 * C712 + C106 * C720 +
            C119 * C713 + C107 * C721 + C120 * C714 + C108 * C722) *
               C1512 -
           ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
             C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                C1509 +
            (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
             C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                C1511) +
           (C117 * C723 + C105 * C735 + C118 * C724 + C106 * C736 +
            C119 * C725 + C107 * C737 + C120 * C726 + C108 * C738) *
               C50788) *
              C50835 * C50847 * C51009 +
          ((C117 * C506 + C105 * C511 + C118 * C507 + C106 * C512 +
            C119 * C508 + C107 * C513 + C120 * C509 + C108 * C514) *
               C1511 +
           (C117 * C515 + C105 * C521 + C118 * C516 + C106 * C522 +
            C119 * C517 + C107 * C523 + C120 * C518 + C108 * C524) *
               C1509 -
           (C120 * C715 + C108 * C727 + C119 * C716 + C107 * C728 +
            C118 * C717 + C106 * C729 + C117 * C718 + C105 * C730) *
               C1512 -
           (C120 * C731 + C108 * C739 + C119 * C732 + C107 * C740 +
            C118 * C733 + C106 * C741 + C117 * C734 + C105 * C742) *
               C50788) *
              C50835 * C50847 * C1274) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C1511 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C1509 -
            (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
                C1512 -
            (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
                C50788) *
               C2173 +
           ((C2373 + C2374) * C1511 + (C2375 + C2376) * C1509 -
            (C3046 + C3047) * C1512 - (C3048 + C3049) * C50788) *
               C2174 +
           C4861 * C2175) *
              C50847 * C51022 +
          (((C3047 + C3046) * C1512 -
            ((C2376 + C2375) * C1509 + (C2374 + C2373) * C1511) +
            (C3049 + C3048) * C50788) *
               C2173 +
           ((C3052 + C3051) * C1512 -
            ((C2380 + C2379) * C1509 + (C2378 + C2377) * C1511) +
            (C3054 + C3053) * C50788) *
               C2174 +
           ((C3055 + C3056) * C1512 - (C2841 * C1509 + C2842 * C1511) +
            (C3057 + C3058) * C50788) *
               C2175) *
              C50847 * C51009 +
          (C4861 * C2173 +
           ((C2726 + C2725) * C1511 + (C2724 + C2723) * C1509 -
            (C3056 + C3055) * C1512 - (C3058 + C3057) * C50788) *
               C2174 +
           ((C2853 + C2854) * C1511 + (C2855 + C2856) * C1509 -
            (C2177 * C3005 + C50692 * C3011 + C2176 * C3006 + C2171 * C3012) *
                C1512 -
            (C2177 * C3013 + C50692 * C3017 + C2176 * C3014 + C2171 * C3018) *
                C50788) *
               C2175) *
              C50847 * C1274) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C1744 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C51023 -
           (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 +
            C118 * C381 + C106 * C387 + C117 * C382 + C105 * C388) *
               C1745 -
           (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 +
            C118 * C391 + C106 * C399 + C117 * C392 + C105 * C400) *
               C51012 +
           (C117 * C847 + C105 * C852 + C118 * C848 + C106 * C853 +
            C119 * C849 + C107 * C854 + C120 * C850 + C108 * C855) *
               C1746 +
           (C117 * C856 + C105 * C862 + C118 * C857 + C106 * C863 +
            C119 * C858 + C107 * C864 + C120 * C859 + C108 * C865) *
               C1743) *
              C50835 * C50847 * C1169 +
          ((C117 * C711 + C105 * C719 + C118 * C712 + C106 * C720 +
            C119 * C713 + C107 * C721 + C120 * C714 + C108 * C722) *
               C1745 -
           ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
             C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                C51023 +
            (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
             C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                C1744) +
           (C117 * C723 + C105 * C735 + C118 * C724 + C106 * C736 +
            C119 * C725 + C107 * C737 + C120 * C726 + C108 * C738) *
               C51012 -
           (C120 * C965 + C108 * C969 + C119 * C966 + C107 * C970 +
            C118 * C967 + C106 * C971 + C117 * C968 + C105 * C972) *
               C1746 -
           (C120 * C973 + C108 * C977 + C119 * C974 + C107 * C978 +
            C118 * C975 + C106 * C979 + C117 * C976 + C105 * C980) *
               C1743) *
              C50835 * C50847 * C50762) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C1744 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C51023 -
            (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
                C1745 -
            (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
                C51012 +
            (C2176 * C847 + C2171 * C852 + C2177 * C848 + C50692 * C853) *
                C1746 +
            (C2176 * C856 + C2171 * C862 + C2177 * C857 + C50692 * C863) *
                C1743) *
               C2173 +
           ((C2373 + C2374) * C1744 + (C2375 + C2376) * C51023 -
            (C3046 + C3047) * C1745 - (C3048 + C3049) * C51012 +
            (C3393 + C3394) * C1746 + (C3395 + C3396) * C1743) *
               C2174 +
           (C2701 * C1744 + C2702 * C51023 - C3059 * C1745 - C3060 * C51012 +
            (C3397 + C3398) * C1746 + (C3399 + C3400) * C1743) *
               C2175) *
              C50847 * C1169 +
          (((C3047 + C3046) * C1745 -
            ((C2376 + C2375) * C51023 + (C2374 + C2373) * C1744) +
            (C3049 + C3048) * C51012 - (C3394 + C3393) * C1746 -
            (C3396 + C3395) * C1743) *
               C2173 +
           ((C3052 + C3051) * C1745 -
            ((C2380 + C2379) * C51023 + (C2378 + C2377) * C1744) +
            (C3054 + C3053) * C51012 - (C3398 + C3397) * C1746 -
            (C3400 + C3399) * C1743) *
               C2174 +
           ((C3055 + C3056) * C1745 - (C2841 * C51023 + C2842 * C1744) +
            (C3057 + C3058) * C51012 -
            (C2177 * C3368 + C50692 * C3370 + C2176 * C3369 + C2171 * C3371) *
                C1746 -
            (C2177 * C3372 + C50692 * C3374 + C2176 * C3373 + C2171 * C3375) *
                C1743) *
               C2175) *
              C50847 * C50762) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50776) *
               C50835 * C50847 * C501 -
           ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
             C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                C50776 +
            (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
             C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                C121) *
               C50835 * C50847 * C502 +
           ((C117 * C506 + C105 * C511 + C118 * C507 + C106 * C512 +
             C119 * C508 + C107 * C513 + C120 * C509 + C108 * C514) *
                C121 +
            (C117 * C515 + C105 * C521 + C118 * C516 + C106 * C522 +
             C119 * C517 + C107 * C523 + C120 * C518 + C108 * C524) *
                C50776) *
               C50835 * C50847 * C503) *
              C50968 +
          (((C117 * C255 + C105 * C265 + C118 * C254 + C106 * C264 +
             C119 * C253 + C107 * C263 + C120 * C257 + C108 * C267) *
                C121 +
            (C117 * C261 + C105 * C273 + C118 * C260 + C106 * C272 +
             C119 * C259 + C107 * C271 + C120 * C268 + C108 * C275) *
                C50776) *
               C50835 * C50847 * C502 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50776 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50835 * C50847 * C501 -
           ((C120 * C519 + C108 * C525 + C119 * C518 + C107 * C524 +
             C118 * C517 + C106 * C523 + C117 * C516 + C105 * C522) *
                C50776 +
            (C120 * C510 + C108 * C520 + C119 * C509 + C107 * C514 +
             C118 * C508 + C106 * C513 + C117 * C507 + C105 * C512) *
                C121) *
               C50835 * C50847 * C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50776) *
              C50835 * C50847 * C50746 * C113 -
          ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
            C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
               C50776 +
           (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
            C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
               C121) *
              C50835 * C50847 * C50746 * C114 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C121 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C50776) *
              C50835 * C50847 * C50746 * C115 -
          ((C120 * C141 + C108 * C149 + C119 * C140 + C107 * C148 +
            C118 * C137 + C106 * C147 + C117 * C136 + C105 * C146) *
               C50776 +
           (C120 * C128 + C108 * C142 + C119 * C127 + C107 * C139 +
            C118 * C126 + C106 * C138 + C117 * C125 + C105 * C132) *
               C121) *
              C50835 * C50847 * C50746 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C844 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C841 -
           (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 +
            C118 * C381 + C106 * C387 + C117 * C382 + C105 * C388) *
               C845 -
           (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 +
            C118 * C391 + C106 * C399 + C117 * C392 + C105 * C400) *
               C842 +
           (C117 * C847 + C105 * C852 + C118 * C848 + C106 * C853 +
            C119 * C849 + C107 * C854 + C120 * C850 + C108 * C855) *
               C846 +
           (C117 * C856 + C105 * C862 + C118 * C857 + C106 * C863 +
            C119 * C858 + C107 * C864 + C120 * C859 + C108 * C865) *
               C843) *
              C50835 * C50847 * C50746 * C50968 +
          ((C117 * C381 + C105 * C387 + C118 * C380 + C106 * C386 +
            C119 * C379 + C107 * C385 + C120 * C383 + C108 * C393) *
               C845 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C841 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C844) +
           (C117 * C391 + C105 * C399 + C118 * C390 + C106 * C398 +
            C119 * C389 + C107 * C397 + C120 * C394 + C108 * C401) *
               C842 -
           (C120 * C851 + C108 * C860 + C119 * C850 + C107 * C855 +
            C118 * C849 + C106 * C854 + C117 * C848 + C105 * C853) *
               C846 -
           (C120 * C861 + C108 * C866 + C119 * C859 + C107 * C865 +
            C118 * C858 + C106 * C864 + C117 * C857 + C105 * C863) *
               C843) *
              C50835 * C50847 * C50746 * C50719)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C50776) *
               C2173 +
           ((C2176 * C256 + C2171 * C266 + C2177 * C255 + C50692 * C265) *
                C121 +
            (C2176 * C262 + C2171 * C274 + C2177 * C261 + C50692 * C273) *
                C50776) *
               C2174 +
           ((C2176 * C506 + C2171 * C511 + C2177 * C507 + C50692 * C512) *
                C121 +
            (C2176 * C515 + C2171 * C521 + C2177 * C516 + C50692 * C522) *
                C50776) *
               C2175) *
              C50847 * C50746 * C113 -
          (((C2177 * C517 + C50692 * C523 + C2176 * C516 + C2171 * C522) *
                C50776 +
            (C2177 * C508 + C50692 * C513 + C2176 * C507 + C2171 * C512) *
                C121) *
               C2175 +
           ((C2177 * C260 + C50692 * C272 + C2176 * C261 + C2171 * C273) *
                C50776 +
            (C2177 * C254 + C50692 * C264 + C2176 * C255 + C2171 * C265) *
                C121) *
               C2174 +
           ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                C50776 +
            (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                C121) *
               C2173) *
              C50847 * C50746 * C114 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                C121 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                C50776) *
               C2173 +
           ((C2176 * C254 + C2171 * C264 + C2177 * C253 + C50692 * C263) *
                C121 +
            (C2176 * C260 + C2171 * C272 + C2177 * C259 + C50692 * C271) *
                C50776) *
               C2174 +
           ((C2176 * C508 + C2171 * C513 + C2177 * C509 + C50692 * C514) *
                C121 +
            (C2176 * C517 + C2171 * C523 + C2177 * C518 + C50692 * C524) *
                C50776) *
               C2175) *
              C50847 * C50746 * C115 -
          (((C2177 * C519 + C50692 * C525 + C2176 * C518 + C2171 * C524) *
                C50776 +
            (C2177 * C510 + C50692 * C520 + C2176 * C509 + C2171 * C514) *
                C121) *
               C2175 +
           ((C2177 * C268 + C50692 * C275 + C2176 * C259 + C2171 * C271) *
                C50776 +
            (C2177 * C257 + C50692 * C267 + C2176 * C253 + C2171 * C263) *
                C121) *
               C2174 +
           ((C2177 * C137 + C50692 * C147 + C2176 * C136 + C2171 * C146) *
                C50776 +
            (C2177 * C126 + C50692 * C138 + C2176 * C125 + C2171 * C132) *
                C121) *
               C2173) *
              C50847 * C50746 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50776) *
                C2173 +
            ((C2373 + C2374) * C121 + (C2375 + C2376) * C50776) * C2174 +
            C2733 * C2175) *
               C50847 * C501 -
           (((C2723 + C2724) * C50776 + (C2725 + C2726) * C121) * C2175 +
            ((C2380 + C2379) * C50776 + (C2378 + C2377) * C121) * C2174 +
            ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C2173) *
               C50847 * C502 +
           (C2733 * C2173 +
            ((C2726 + C2725) * C121 + (C2724 + C2723) * C50776) * C2174 +
            ((C2176 * C2688 + C2171 * C2691 + C2177 * C2689 + C50692 * C2692) *
                 C121 +
             (C2176 * C2693 + C2171 * C2697 + C2177 * C2694 + C50692 * C2698) *
                 C50776) *
                C2175) *
               C50847 * C503) *
              C50968 +
          ((((C2381 + C2382) * C121 + (C2383 + C2384) * C50776) * C2173 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50776) * C2174 +
            ((C2727 + C2728) * C121 + (C2729 + C2730) * C50776) * C2175) *
               C50847 * C502 -
           (C2734 * C2175 +
            ((C2384 + C2383) * C50776 + (C2382 + C2381) * C121) * C2174 +
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C50776 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50847 * C501 -
           (((C2177 * C2695 + C50692 * C2699 + C2176 * C2694 + C2171 * C2698) *
                 C50776 +
             (C2177 * C2690 + C50692 * C2696 + C2176 * C2689 + C2171 * C2692) *
                 C121) *
                C2175 +
            ((C2730 + C2729) * C50776 + (C2728 + C2727) * C121) * C2174 +
            C2734 * C2173) *
               C50847 * C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C844 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C841 -
            (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
                C845 -
            (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
                C842 +
            (C2176 * C847 + C2171 * C852 + C2177 * C848 + C50692 * C853) *
                C846 +
            (C2176 * C856 + C2171 * C862 + C2177 * C857 + C50692 * C863) *
                C843) *
               C2173 +
           ((C2373 + C2374) * C844 + (C2375 + C2376) * C841 -
            (C3046 + C3047) * C845 - (C3048 + C3049) * C842 +
            (C2176 * C968 + C2171 * C972 + C2177 * C967 + C50692 * C971) *
                C846 +
            (C2176 * C976 + C2171 * C980 + C2177 * C975 + C50692 * C979) *
                C843) *
               C2174 +
           (C2701 * C844 + C2702 * C841 - C3059 * C845 - C3060 * C842 +
            (C2176 * C3210 + C2171 * C3213 + C2177 * C3211 + C50692 * C3214) *
                C846 +
            (C2176 * C3215 + C2171 * C3219 + C2177 * C3216 + C50692 * C3220) *
                C843) *
               C2175) *
              C50847 * C50746 * C50968 +
          (((C2176 * C381 + C2171 * C387 + C2177 * C380 + C50692 * C386) *
                C845 -
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C841 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C844) +
            (C2176 * C391 + C2171 * C399 + C2177 * C390 + C50692 * C398) *
                C842 -
            (C2177 * C849 + C50692 * C854 + C2176 * C848 + C2171 * C853) *
                C846 -
            (C2177 * C858 + C50692 * C864 + C2176 * C857 + C2171 * C863) *
                C843) *
               C2173 +
           ((C2176 * C712 + C2171 * C720 + C2177 * C713 + C50692 * C721) *
                C845 -
            ((C2384 + C2383) * C841 + (C2382 + C2381) * C844) +
            (C2176 * C724 + C2171 * C736 + C2177 * C725 + C50692 * C737) *
                C842 -
            (C2177 * C966 + C50692 * C970 + C2176 * C967 + C2171 * C971) *
                C846 -
            (C2177 * C974 + C50692 * C978 + C2176 * C975 + C2171 * C979) *
                C843) *
               C2174 +
           ((C2176 * C717 + C2171 * C729 + C2177 * C716 + C50692 * C728) *
                C845 -
            (C2719 * C841 + C2720 * C844) +
            (C2176 * C733 + C2171 * C741 + C2177 * C732 + C50692 * C740) *
                C842 -
            (C2177 * C3212 + C50692 * C3217 + C2176 * C3211 + C2171 * C3214) *
                C846 -
            (C2177 * C3218 + C50692 * C3221 + C2176 * C3216 + C2171 * C3220) *
                C843) *
               C2175) *
              C50847 * C50746 * C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50776) *
              C50835 * C50847 * C592 -
          ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
            C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
               C50776 +
           (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
            C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
               C121) *
              C50835 * C50847 * C593 +
          ((C117 * C506 + C105 * C511 + C118 * C507 + C106 * C512 +
            C119 * C508 + C107 * C513 + C120 * C509 + C108 * C514) *
               C121 +
           (C117 * C515 + C105 * C521 + C118 * C516 + C106 * C522 +
            C119 * C517 + C107 * C523 + C120 * C518 + C108 * C524) *
               C50776) *
              C50835 * C50847 * C594 -
          ((C120 * C601 + C108 * C609 + C119 * C602 + C107 * C610 +
            C118 * C603 + C106 * C611 + C117 * C604 + C105 * C612) *
               C50776 +
           (C120 * C597 + C108 * C605 + C119 * C598 + C107 * C606 +
            C118 * C599 + C106 * C607 + C117 * C600 + C105 * C608) *
               C121) *
              C50835 * C50847 * C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50776) *
               C50835 * C50847 * C50975 -
           ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
             C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                C50776 +
            (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
             C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                C121) *
               C50835 * C50847 * C50762) *
              C250 +
          (((C117 * C255 + C105 * C265 + C118 * C254 + C106 * C264 +
             C119 * C253 + C107 * C263 + C120 * C257 + C108 * C267) *
                C121 +
            (C117 * C261 + C105 * C273 + C118 * C260 + C106 * C272 +
             C119 * C259 + C107 * C271 + C120 * C268 + C108 * C275) *
                C50776) *
               C50835 * C50847 * C50762 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50776 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50835 * C50847 * C50975) *
              C251 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50776) *
               C50835 * C50847 * C50975 -
           ((C120 * C269 + C108 * C276 + C119 * C268 + C107 * C275 +
             C118 * C259 + C106 * C271 + C117 * C260 + C105 * C272) *
                C50776 +
            (C120 * C258 + C108 * C270 + C119 * C257 + C107 * C267 +
             C118 * C253 + C106 * C263 + C117 * C254 + C105 * C264) *
                C121) *
               C50835 * C50847 * C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C844 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C841 -
           (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 +
            C118 * C381 + C106 * C387 + C117 * C382 + C105 * C388) *
               C845 -
           (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 +
            C118 * C391 + C106 * C399 + C117 * C392 + C105 * C400) *
               C842 +
           (C117 * C847 + C105 * C852 + C118 * C848 + C106 * C853 +
            C119 * C849 + C107 * C854 + C120 * C850 + C108 * C855) *
               C846 +
           (C117 * C856 + C105 * C862 + C118 * C857 + C106 * C863 +
            C119 * C858 + C107 * C864 + C120 * C859 + C108 * C865) *
               C843) *
              C50835 * C50847 * C50975 +
          ((C117 * C711 + C105 * C719 + C118 * C712 + C106 * C720 +
            C119 * C713 + C107 * C721 + C120 * C714 + C108 * C722) *
               C845 -
           ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
             C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                C841 +
            (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
             C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                C844) +
           (C117 * C723 + C105 * C735 + C118 * C724 + C106 * C736 +
            C119 * C725 + C107 * C737 + C120 * C726 + C108 * C738) *
               C842 -
           (C120 * C965 + C108 * C969 + C119 * C966 + C107 * C970 +
            C118 * C967 + C106 * C971 + C117 * C968 + C105 * C972) *
               C846 -
           (C120 * C973 + C108 * C977 + C119 * C974 + C107 * C978 +
            C118 * C975 + C106 * C979 + C117 * C976 + C105 * C980) *
               C843) *
              C50835 * C50847 * C50762) *
         C50714) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50776) *
                C2173 +
            ((C2373 + C2374) * C121 + (C2375 + C2376) * C50776) * C2174 +
            ((C2377 + C2378) * C121 + (C2379 + C2380) * C50776) * C2175) *
               C50847 * C50975 -
           (((C2177 * C603 + C50692 * C611 + C2176 * C604 + C2171 * C612) *
                 C50776 +
             (C2177 * C599 + C50692 * C607 + C2176 * C600 + C2171 * C608) *
                 C121) *
                C2175 +
            ((C2380 + C2379) * C50776 + (C2378 + C2377) * C121) * C2174 +
            ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C2173) *
               C50847 * C50762) *
              C250 +
          ((((C2381 + C2382) * C121 + (C2383 + C2384) * C50776) * C2173 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50776) * C2174 +
            ((C2176 * C599 + C2171 * C607 + C2177 * C598 + C50692 * C606) *
                 C121 +
             (C2176 * C603 + C2171 * C611 + C2177 * C602 + C50692 * C610) *
                 C50776) *
                C2175) *
               C50847 * C50762 -
           (((C2388 + C2387) * C50776 + (C2386 + C2385) * C121) * C2175 +
            ((C2384 + C2383) * C50776 + (C2382 + C2381) * C121) * C2174 +
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C50776 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50847 * C50975) *
              C251 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                 C50776) *
                C2173 +
            ((C2389 + C2390) * C121 + (C2391 + C2392) * C50776) * C2174 +
            ((C2393 + C2394) * C121 + (C2395 + C2396) * C50776) * C2175) *
               C50847 * C50975 -
           (((C2177 * C601 + C50692 * C609 + C2176 * C602 + C2171 * C610) *
                 C50776 +
             (C2177 * C597 + C50692 * C605 + C2176 * C598 + C2171 * C606) *
                 C121) *
                C2175 +
            ((C2396 + C2395) * C50776 + (C2394 + C2393) * C121) * C2174 +
            ((C2392 + C2391) * C50776 + (C2390 + C2389) * C121) * C2173) *
               C50847 * C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C50776) *
               C2173 +
           ((C2373 + C2374) * C121 + (C2375 + C2376) * C50776) * C2174 +
           C2733 * C2175) *
              C50847 * C592 -
          (C2857 * C2175 +
           ((C2380 + C2379) * C50776 + (C2378 + C2377) * C121) * C2174 +
           ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C2173) *
              C50847 * C593 +
          (C2733 * C2173 +
           ((C2726 + C2725) * C121 + (C2724 + C2723) * C50776) * C2174 +
           ((C2853 + C2854) * C121 + (C2855 + C2856) * C50776) * C2175) *
              C50847 * C594 -
          (((C2177 * C2834 + C50692 * C2838 + C2176 * C2835 + C2171 * C2839) *
                C50776 +
            (C2177 * C2832 + C50692 * C2836 + C2176 * C2833 + C2171 * C2837) *
                C121) *
               C2175 +
           ((C2856 + C2855) * C50776 + (C2854 + C2853) * C121) * C2174 +
           C2857 * C2173) *
              C50847 * C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C844 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C841 -
            (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
                C845 -
            (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
                C842 +
            (C2176 * C847 + C2171 * C852 + C2177 * C848 + C50692 * C853) *
                C846 +
            (C2176 * C856 + C2171 * C862 + C2177 * C857 + C50692 * C863) *
                C843) *
               C2173 +
           ((C2373 + C2374) * C844 + (C2375 + C2376) * C841 -
            (C3046 + C3047) * C845 - (C3048 + C3049) * C842 +
            (C3393 + C3394) * C846 + (C3395 + C3396) * C843) *
               C2174 +
           (C2701 * C844 + C2702 * C841 - C3059 * C845 - C3060 * C842 +
            (C3397 + C3398) * C846 + (C3399 + C3400) * C843) *
               C2175) *
              C50847 * C50975 +
          (((C3047 + C3046) * C845 -
            ((C2376 + C2375) * C841 + (C2374 + C2373) * C844) +
            (C3049 + C3048) * C842 - (C3394 + C3393) * C846 -
            (C3396 + C3395) * C843) *
               C2173 +
           ((C3052 + C3051) * C845 -
            ((C2380 + C2379) * C841 + (C2378 + C2377) * C844) +
            (C3054 + C3053) * C842 - (C3398 + C3397) * C846 -
            (C3400 + C3399) * C843) *
               C2174 +
           ((C3055 + C3056) * C845 - (C2841 * C841 + C2842 * C844) +
            (C3057 + C3058) * C842 -
            (C2177 * C3368 + C50692 * C3370 + C2176 * C3369 + C2171 * C3371) *
                C846 -
            (C2177 * C3372 + C50692 * C3374 + C2176 * C3373 + C2171 * C3375) *
                C843) *
               C2175) *
              C50847 * C50762) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C377 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50977 -
           (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 +
            C118 * C381 + C106 * C387 + C117 * C382 + C105 * C388) *
               C378 -
           (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 +
            C118 * C391 + C106 * C399 + C117 * C392 + C105 * C400) *
               C50788) *
              C50835 * C50847 * C501 +
          ((C117 * C711 + C105 * C719 + C118 * C712 + C106 * C720 +
            C119 * C713 + C107 * C721 + C120 * C714 + C108 * C722) *
               C378 -
           ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
             C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                C50977 +
            (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
             C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                C377) +
           (C117 * C723 + C105 * C735 + C118 * C724 + C106 * C736 +
            C119 * C725 + C107 * C737 + C120 * C726 + C108 * C738) *
               C50788) *
              C50835 * C50847 * C502 +
          ((C117 * C506 + C105 * C511 + C118 * C507 + C106 * C512 +
            C119 * C508 + C107 * C513 + C120 * C509 + C108 * C514) *
               C377 +
           (C117 * C515 + C105 * C521 + C118 * C516 + C106 * C522 +
            C119 * C517 + C107 * C523 + C120 * C518 + C108 * C524) *
               C50977 -
           (C120 * C715 + C108 * C727 + C119 * C716 + C107 * C728 +
            C118 * C717 + C106 * C729 + C117 * C718 + C105 * C730) *
               C378 -
           (C120 * C731 + C108 * C739 + C119 * C732 + C107 * C740 +
            C118 * C733 + C106 * C741 + C117 * C734 + C105 * C742) *
               C50788) *
              C50835 * C50847 * C503) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C377 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50977 -
           (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 +
            C118 * C381 + C106 * C387 + C117 * C382 + C105 * C388) *
               C378 -
           (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 +
            C118 * C391 + C106 * C399 + C117 * C392 + C105 * C400) *
               C50788) *
              C50835 * C50847 * C50746 * C250 +
          ((C117 * C381 + C105 * C387 + C118 * C380 + C106 * C386 +
            C119 * C379 + C107 * C385 + C120 * C383 + C108 * C393) *
               C378 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50977 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C377) +
           (C117 * C391 + C105 * C399 + C118 * C390 + C106 * C398 +
            C119 * C389 + C107 * C397 + C120 * C394 + C108 * C401) *
               C50788) *
              C50835 * C50847 * C50746 * C251 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C377 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C50977 -
           (C120 * C384 + C108 * C395 + C119 * C383 + C107 * C393 +
            C118 * C379 + C106 * C385 + C117 * C380 + C105 * C386) *
               C378 -
           (C120 * C396 + C108 * C402 + C119 * C394 + C107 * C401 +
            C118 * C389 + C106 * C397 + C117 * C390 + C105 * C398) *
               C50788) *
              C50835 * C50847 * C50746 * C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 + C119 * C124 +
           C107 * C131 + C120 * C125 + C108 * C132) *
              C1051 +
          (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 + C119 * C135 +
           C107 * C145 + C120 * C136 + C108 * C146) *
              C1047 -
          (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 + C118 * C381 +
           C106 * C387 + C117 * C382 + C105 * C388) *
              C1052 -
          (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 + C118 * C391 +
           C106 * C399 + C117 * C392 + C105 * C400) *
              C1048 +
          (C117 * C847 + C105 * C852 + C118 * C848 + C106 * C853 + C119 * C849 +
           C107 * C854 + C120 * C850 + C108 * C855) *
              C1053 +
          (C117 * C856 + C105 * C862 + C118 * C857 + C106 * C863 + C119 * C858 +
           C107 * C864 + C120 * C859 + C108 * C865) *
              C1049 -
          (C120 * C1055 + C108 * C1059 + C119 * C1056 + C107 * C1060 +
           C118 * C1057 + C106 * C1061 + C117 * C1058 + C105 * C1062) *
              C1054 -
          (C120 * C1063 + C108 * C1067 + C119 * C1064 + C107 * C1068 +
           C118 * C1065 + C106 * C1069 + C117 * C1066 + C105 * C1070) *
              C1050) *
         C50835 * C50847 * C50746 * C50714) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C377 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C50977 -
            (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
                C378 -
            (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
                C50788) *
               C2173 +
           ((C2373 + C2374) * C377 + (C2375 + C2376) * C50977 -
            (C2177 * C712 + C50692 * C720 + C2176 * C711 + C2171 * C719) *
                C378 -
            (C2177 * C724 + C50692 * C736 + C2176 * C723 + C2171 * C735) *
                C50788) *
               C2174 +
           ((C2377 + C2378) * C377 + (C2379 + C2380) * C50977 -
            (C2177 * C717 + C50692 * C729 + C2176 * C718 + C2171 * C730) *
                C378 -
            (C2177 * C733 + C50692 * C741 + C2176 * C734 + C2171 * C742) *
                C50788) *
               C2175) *
              C50847 * C50746 * C250 +
          (((C2176 * C381 + C2171 * C387 + C2177 * C380 + C50692 * C386) *
                C378 -
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C50977 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C377) +
            (C2176 * C391 + C2171 * C399 + C2177 * C390 + C50692 * C398) *
                C50788) *
               C2173 +
           ((C2176 * C712 + C2171 * C720 + C2177 * C713 + C50692 * C721) *
                C378 -
            ((C2384 + C2383) * C50977 + (C2382 + C2381) * C377) +
            (C2176 * C724 + C2171 * C736 + C2177 * C725 + C50692 * C737) *
                C50788) *
               C2174 +
           ((C2176 * C717 + C2171 * C729 + C2177 * C716 + C50692 * C728) *
                C378 -
            ((C2388 + C2387) * C50977 + (C2386 + C2385) * C377) +
            (C2176 * C733 + C2171 * C741 + C2177 * C732 + C50692 * C740) *
                C50788) *
               C2175) *
              C50847 * C50746 * C251 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                C377 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                C50977 -
            (C2177 * C379 + C50692 * C385 + C2176 * C380 + C2171 * C386) *
                C378 -
            (C2177 * C389 + C50692 * C397 + C2176 * C390 + C2171 * C398) *
                C50788) *
               C2173 +
           ((C2389 + C2390) * C377 + (C2391 + C2392) * C50977 -
            (C2177 * C714 + C50692 * C722 + C2176 * C713 + C2171 * C721) *
                C378 -
            (C2177 * C726 + C50692 * C738 + C2176 * C725 + C2171 * C737) *
                C50788) *
               C2174 +
           ((C2393 + C2394) * C377 + (C2395 + C2396) * C50977 -
            (C2177 * C715 + C50692 * C727 + C2176 * C716 + C2171 * C728) *
                C378 -
            (C2177 * C731 + C50692 * C739 + C2176 * C732 + C2171 * C740) *
                C50788) *
               C2175) *
              C50847 * C50746 * C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C377 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C50977 -
            (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
                C378 -
            (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
                C50788) *
               C2173 +
           ((C2373 + C2374) * C377 + (C2375 + C2376) * C50977 -
            (C3046 + C3047) * C378 - (C3048 + C3049) * C50788) *
               C2174 +
           C3064 * C2175) *
              C50847 * C501 +
          (((C3047 + C3046) * C378 -
            ((C2376 + C2375) * C50977 + (C2374 + C2373) * C377) +
            (C3049 + C3048) * C50788) *
               C2173 +
           ((C3052 + C3051) * C378 -
            ((C2380 + C2379) * C50977 + (C2378 + C2377) * C377) +
            (C3054 + C3053) * C50788) *
               C2174 +
           ((C3055 + C3056) * C378 - (C2841 * C50977 + C2842 * C377) +
            (C3057 + C3058) * C50788) *
               C2175) *
              C50847 * C502 +
          (C3064 * C2173 +
           ((C2726 + C2725) * C377 + (C2724 + C2723) * C50977 -
            (C3056 + C3055) * C378 - (C3058 + C3057) * C50788) *
               C2174 +
           ((C2853 + C2854) * C377 + (C2855 + C2856) * C50977 -
            (C2177 * C3005 + C50692 * C3011 + C2176 * C3006 + C2171 * C3012) *
                C378 -
            (C2177 * C3013 + C50692 * C3017 + C2176 * C3014 + C2171 * C3018) *
                C50788) *
               C2175) *
              C50847 * C503) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
               C1051 +
           (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
               C1047 -
           (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
               C1052 -
           (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
               C1048 +
           (C2176 * C847 + C2171 * C852 + C2177 * C848 + C50692 * C853) *
               C1053 +
           (C2176 * C856 + C2171 * C862 + C2177 * C857 + C50692 * C863) *
               C1049 -
           (C2177 * C1057 + C50692 * C1061 + C2176 * C1058 + C2171 * C1062) *
               C1054 -
           (C2177 * C1065 + C50692 * C1069 + C2176 * C1066 + C2171 * C1070) *
               C1050) *
              C2173 +
          ((C2373 + C2374) * C1051 + (C2375 + C2376) * C1047 -
           (C3046 + C3047) * C1052 - (C3048 + C3049) * C1048 +
           (C3393 + C3394) * C1053 + (C3395 + C3396) * C1049 -
           (C2177 * C3498 + C50692 * C3502 + C2176 * C3499 + C2171 * C3503) *
               C1054 -
           (C2177 * C3504 + C50692 * C3510 + C2176 * C3505 + C2171 * C3511) *
               C1050) *
              C2174 +
          (C2701 * C1051 + C2702 * C1047 - C3059 * C1052 - C3060 * C1048 +
           (C3397 + C3398) * C1053 + (C3399 + C3400) * C1049 -
           (C2177 * C3500 + C50692 * C3506 + C2176 * C3501 + C2171 * C3507) *
               C1054 -
           (C2177 * C3508 + C50692 * C3512 + C2176 * C3509 + C2171 * C3513) *
               C1050) *
              C2175) *
         C50847 * C50746 * C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C1511 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C1509 -
           (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 +
            C118 * C381 + C106 * C387 + C117 * C382 + C105 * C388) *
               C1512 -
           (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 +
            C118 * C391 + C106 * C399 + C117 * C392 + C105 * C400) *
               C50788) *
              C50835 * C50847 * C50746 * C51021 +
          ((C117 * C381 + C105 * C387 + C118 * C380 + C106 * C386 +
            C119 * C379 + C107 * C385 + C120 * C383 + C108 * C393) *
               C1512 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C1509 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C1511) +
           (C117 * C391 + C105 * C399 + C118 * C390 + C106 * C398 +
            C119 * C389 + C107 * C397 + C120 * C394 + C108 * C401) *
               C50788) *
              C50835 * C50847 * C50746 * C51006 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C1511 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C1509 -
           (C120 * C384 + C108 * C395 + C119 * C383 + C107 * C393 +
            C118 * C379 + C106 * C385 + C117 * C380 + C105 * C386) *
               C1512 -
           (C120 * C396 + C108 * C402 + C119 * C394 + C107 * C401 +
            C118 * C389 + C106 * C397 + C117 * C390 + C105 * C398) *
               C50788) *
              C50835 * C50847 * C50746 * C1173)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C1511 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C1509 -
            (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
                C1512 -
            (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
                C50788) *
               C2173 +
           ((C2373 + C2374) * C1511 + (C2375 + C2376) * C1509 -
            (C3046 + C3047) * C1512 - (C3048 + C3049) * C50788) *
               C2174 +
           (C2701 * C1511 + C2702 * C1509 - C3059 * C1512 - C3060 * C50788) *
               C2175) *
              C50847 * C50746 * C51021 +
          (((C2176 * C381 + C2171 * C387 + C2177 * C380 + C50692 * C386) *
                C1512 -
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C1509 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C1511) +
            (C2176 * C391 + C2171 * C399 + C2177 * C390 + C50692 * C398) *
                C50788) *
               C2173 +
           ((C4021 + C4022) * C1512 -
            ((C2384 + C2383) * C1509 + (C2382 + C2381) * C1511) +
            (C4023 + C4024) * C50788) *
               C2174 +
           ((C4025 + C4026) * C1512 - (C2719 * C1509 + C2720 * C1511) +
            (C4027 + C4028) * C50788) *
               C2175) *
              C50847 * C50746 * C51006 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                C1511 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                C1509 -
            (C2177 * C379 + C50692 * C385 + C2176 * C380 + C2171 * C386) *
                C1512 -
            (C2177 * C389 + C50692 * C397 + C2176 * C390 + C2171 * C398) *
                C50788) *
               C2173 +
           ((C2389 + C2390) * C1511 + (C2391 + C2392) * C1509 -
            (C2177 * C714 + C50692 * C722 + C2176 * C713 + C2171 * C721) *
                C1512 -
            (C2177 * C726 + C50692 * C738 + C2176 * C725 + C2171 * C737) *
                C50788) *
               C2174 +
           ((C2393 + C2394) * C1511 + (C2395 + C2396) * C1509 -
            (C2177 * C715 + C50692 * C727 + C2176 * C716 + C2171 * C728) *
                C1512 -
            (C2177 * C731 + C50692 * C739 + C2176 * C732 + C2171 * C740) *
                C50788) *
               C2175) *
              C50847 * C50746 * C1173)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C1511 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C1509 -
            (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 +
             C118 * C381 + C106 * C387 + C117 * C382 + C105 * C388) *
                C1512 -
            (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 +
             C118 * C391 + C106 * C399 + C117 * C392 + C105 * C400) *
                C50788) *
               C50835 * C50847 * C50975 +
           ((C117 * C711 + C105 * C719 + C118 * C712 + C106 * C720 +
             C119 * C713 + C107 * C721 + C120 * C714 + C108 * C722) *
                C1512 -
            ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
              C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                 C1509 +
             (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
              C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                 C1511) +
            (C117 * C723 + C105 * C735 + C118 * C724 + C106 * C736 +
             C119 * C725 + C107 * C737 + C120 * C726 + C108 * C738) *
                C50788) *
               C50835 * C50847 * C50762) *
              C1275 +
          (((C117 * C381 + C105 * C387 + C118 * C380 + C106 * C386 +
             C119 * C379 + C107 * C385 + C120 * C383 + C108 * C393) *
                C1512 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C1509 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C1511) +
            (C117 * C391 + C105 * C399 + C118 * C390 + C106 * C398 +
             C119 * C389 + C107 * C397 + C120 * C394 + C108 * C401) *
                C50788) *
               C50835 * C50847 * C50975 +
           ((C117 * C255 + C105 * C265 + C118 * C254 + C106 * C264 +
             C119 * C253 + C107 * C263 + C120 * C257 + C108 * C267) *
                C1511 +
            (C117 * C261 + C105 * C273 + C118 * C260 + C106 * C272 +
             C119 * C259 + C107 * C271 + C120 * C268 + C108 * C275) *
                C1509 -
            (C120 * C1407 + C108 * C1408 + C119 * C714 + C107 * C722 +
             C118 * C713 + C106 * C721 + C117 * C712 + C105 * C720) *
                C1512 -
            (C120 * C1409 + C108 * C1410 + C119 * C726 + C107 * C738 +
             C118 * C725 + C106 * C737 + C117 * C724 + C105 * C736) *
                C50788) *
               C50835 * C50847 * C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C1511 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C1509 -
             (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
                 C1512 -
             (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
                 C50788) *
                C2173 +
            ((C2373 + C2374) * C1511 + (C2375 + C2376) * C1509 -
             (C3046 + C3047) * C1512 - (C3048 + C3049) * C50788) *
                C2174 +
            (C2701 * C1511 + C2702 * C1509 - C3059 * C1512 - C3060 * C50788) *
                C2175) *
               C50847 * C50975 +
           (((C3047 + C3046) * C1512 -
             ((C2376 + C2375) * C1509 + (C2374 + C2373) * C1511) +
             (C3049 + C3048) * C50788) *
                C2173 +
            ((C3052 + C3051) * C1512 -
             ((C2380 + C2379) * C1509 + (C2378 + C2377) * C1511) +
             (C3054 + C3053) * C50788) *
                C2174 +
            ((C3055 + C3056) * C1512 - (C2841 * C1509 + C2842 * C1511) +
             (C3057 + C3058) * C50788) *
                C2175) *
               C50847 * C50762) *
              C1275 +
          ((((C2176 * C381 + C2171 * C387 + C2177 * C380 + C50692 * C386) *
                 C1512 -
             ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                  C1509 +
              (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                  C1511) +
             (C2176 * C391 + C2171 * C399 + C2177 * C390 + C50692 * C398) *
                 C50788) *
                C2173 +
            ((C4021 + C4022) * C1512 -
             ((C2384 + C2383) * C1509 + (C2382 + C2381) * C1511) +
             (C4023 + C4024) * C50788) *
                C2174 +
            ((C4025 + C4026) * C1512 - (C2719 * C1509 + C2720 * C1511) +
             (C4027 + C4028) * C50788) *
                C2175) *
               C50847 * C50975 +
           (((C2381 + C2382) * C1511 + (C2383 + C2384) * C1509 -
             (C4022 + C4021) * C1512 - (C4024 + C4023) * C50788) *
                C2173 +
            ((C2385 + C2386) * C1511 + (C2387 + C2388) * C1509 -
             (C4026 + C4025) * C1512 - (C4028 + C4027) * C50788) *
                C2174 +
            ((C2727 + C2728) * C1511 + (C2729 + C2730) * C1509 -
             (C2177 * C4000 + C50692 * C4001 + C2176 * C3004 + C2171 * C3008) *
                 C1512 -
             (C2177 * C4002 + C50692 * C4003 + C2176 * C3010 + C2171 * C3016) *
                 C50788) *
                C2175) *
               C50847 * C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C1744 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C51023 -
           (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 +
            C118 * C381 + C106 * C387 + C117 * C382 + C105 * C388) *
               C1745 -
           (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 +
            C118 * C391 + C106 * C399 + C117 * C392 + C105 * C400) *
               C51012 +
           (C117 * C847 + C105 * C852 + C118 * C848 + C106 * C853 +
            C119 * C849 + C107 * C854 + C120 * C850 + C108 * C855) *
               C1746 +
           (C117 * C856 + C105 * C862 + C118 * C857 + C106 * C863 +
            C119 * C858 + C107 * C864 + C120 * C859 + C108 * C865) *
               C1743) *
              C50835 * C50847 * C50746 * C1275 +
          ((C117 * C381 + C105 * C387 + C118 * C380 + C106 * C386 +
            C119 * C379 + C107 * C385 + C120 * C383 + C108 * C393) *
               C1745 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C51023 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C1744) +
           (C117 * C391 + C105 * C399 + C118 * C390 + C106 * C398 +
            C119 * C389 + C107 * C397 + C120 * C394 + C108 * C401) *
               C51012 -
           (C120 * C851 + C108 * C860 + C119 * C850 + C107 * C855 +
            C118 * C849 + C106 * C854 + C117 * C848 + C105 * C853) *
               C1746 -
           (C120 * C861 + C108 * C866 + C119 * C859 + C107 * C865 +
            C118 * C858 + C106 * C864 + C117 * C857 + C105 * C863) *
               C1743) *
              C50835 * C50847 * C50746 * C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C1744 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C51023 -
            (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
                C1745 -
            (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
                C51012 +
            (C2176 * C847 + C2171 * C852 + C2177 * C848 + C50692 * C853) *
                C1746 +
            (C2176 * C856 + C2171 * C862 + C2177 * C857 + C50692 * C863) *
                C1743) *
               C2173 +
           ((C2373 + C2374) * C1744 + (C2375 + C2376) * C51023 -
            (C3046 + C3047) * C1745 - (C3048 + C3049) * C51012 +
            (C3393 + C3394) * C1746 + (C3395 + C3396) * C1743) *
               C2174 +
           (C2701 * C1744 + C2702 * C51023 - C3059 * C1745 - C3060 * C51012 +
            (C3397 + C3398) * C1746 + (C3399 + C3400) * C1743) *
               C2175) *
              C50847 * C50746 * C1275 +
          (((C2176 * C381 + C2171 * C387 + C2177 * C380 + C50692 * C386) *
                C1745 -
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C51023 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C1744) +
            (C2176 * C391 + C2171 * C399 + C2177 * C390 + C50692 * C398) *
                C51012 -
            (C2177 * C849 + C50692 * C854 + C2176 * C848 + C2171 * C853) *
                C1746 -
            (C2177 * C858 + C50692 * C864 + C2176 * C857 + C2171 * C863) *
                C1743) *
               C2173 +
           ((C4021 + C4022) * C1745 -
            ((C2384 + C2383) * C51023 + (C2382 + C2381) * C1744) +
            (C4023 + C4024) * C51012 -
            (C2177 * C966 + C50692 * C970 + C2176 * C967 + C2171 * C971) *
                C1746 -
            (C2177 * C974 + C50692 * C978 + C2176 * C975 + C2171 * C979) *
                C1743) *
               C2174 +
           ((C4025 + C4026) * C1745 - (C2719 * C51023 + C2720 * C1744) +
            (C4027 + C4028) * C51012 -
            (C2177 * C3212 + C50692 * C3217 + C2176 * C3211 + C2171 * C3214) *
                C1746 -
            (C2177 * C3218 + C50692 * C3221 + C2176 * C3216 + C2171 * C3220) *
                C1743) *
               C2175) *
              C50847 * C50746 * C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50776) *
              C50835 * C50847 * C50746 * C113 -
          ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
            C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
               C50776 +
           (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
            C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
               C121) *
              C50835 * C50847 * C50746 * C114 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C121 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C50776) *
              C50835 * C50847 * C50746 * C115 -
          ((C120 * C141 + C108 * C149 + C119 * C140 + C107 * C148 +
            C118 * C137 + C106 * C147 + C117 * C136 + C105 * C146) *
               C50776 +
           (C120 * C128 + C108 * C142 + C119 * C127 + C107 * C139 +
            C118 * C126 + C106 * C138 + C117 * C125 + C105 * C132) *
               C121) *
              C50835 * C50847 * C50746 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50776) *
               C50835 * C50847 * C501 -
           ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
             C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                C50776 +
            (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
             C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                C121) *
               C50835 * C50847 * C502 +
           ((C117 * C506 + C105 * C511 + C118 * C507 + C106 * C512 +
             C119 * C508 + C107 * C513 + C120 * C509 + C108 * C514) *
                C121 +
            (C117 * C515 + C105 * C521 + C118 * C516 + C106 * C522 +
             C119 * C517 + C107 * C523 + C120 * C518 + C108 * C524) *
                C50776) *
               C50835 * C50847 * C503) *
              C50968 +
          (((C117 * C255 + C105 * C265 + C118 * C254 + C106 * C264 +
             C119 * C253 + C107 * C263 + C120 * C257 + C108 * C267) *
                C121 +
            (C117 * C261 + C105 * C273 + C118 * C260 + C106 * C272 +
             C119 * C259 + C107 * C271 + C120 * C268 + C108 * C275) *
                C50776) *
               C50835 * C50847 * C502 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50776 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50835 * C50847 * C501 -
           ((C120 * C519 + C108 * C525 + C119 * C518 + C107 * C524 +
             C118 * C517 + C106 * C523 + C117 * C516 + C105 * C522) *
                C50776 +
            (C120 * C510 + C108 * C520 + C119 * C509 + C107 * C514 +
             C118 * C508 + C106 * C513 + C117 * C507 + C105 * C512) *
                C121) *
               C50835 * C50847 * C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C50776) *
               C2173 +
           ((C2176 * C256 + C2171 * C266 + C2177 * C255 + C50692 * C265) *
                C121 +
            (C2176 * C262 + C2171 * C274 + C2177 * C261 + C50692 * C273) *
                C50776) *
               C2174 +
           ((C2176 * C506 + C2171 * C511 + C2177 * C507 + C50692 * C512) *
                C121 +
            (C2176 * C515 + C2171 * C521 + C2177 * C516 + C50692 * C522) *
                C50776) *
               C2175) *
              C50847 * C50746 * C113 -
          (((C2177 * C517 + C50692 * C523 + C2176 * C516 + C2171 * C522) *
                C50776 +
            (C2177 * C508 + C50692 * C513 + C2176 * C507 + C2171 * C512) *
                C121) *
               C2175 +
           ((C2177 * C260 + C50692 * C272 + C2176 * C261 + C2171 * C273) *
                C50776 +
            (C2177 * C254 + C50692 * C264 + C2176 * C255 + C2171 * C265) *
                C121) *
               C2174 +
           ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                C50776 +
            (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                C121) *
               C2173) *
              C50847 * C50746 * C114 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                C121 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                C50776) *
               C2173 +
           ((C2176 * C254 + C2171 * C264 + C2177 * C253 + C50692 * C263) *
                C121 +
            (C2176 * C260 + C2171 * C272 + C2177 * C259 + C50692 * C271) *
                C50776) *
               C2174 +
           ((C2176 * C508 + C2171 * C513 + C2177 * C509 + C50692 * C514) *
                C121 +
            (C2176 * C517 + C2171 * C523 + C2177 * C518 + C50692 * C524) *
                C50776) *
               C2175) *
              C50847 * C50746 * C115 -
          (((C2177 * C519 + C50692 * C525 + C2176 * C518 + C2171 * C524) *
                C50776 +
            (C2177 * C510 + C50692 * C520 + C2176 * C509 + C2171 * C514) *
                C121) *
               C2175 +
           ((C2177 * C268 + C50692 * C275 + C2176 * C259 + C2171 * C271) *
                C50776 +
            (C2177 * C257 + C50692 * C267 + C2176 * C253 + C2171 * C263) *
                C121) *
               C2174 +
           ((C2177 * C137 + C50692 * C147 + C2176 * C136 + C2171 * C146) *
                C50776 +
            (C2177 * C126 + C50692 * C138 + C2176 * C125 + C2171 * C132) *
                C121) *
               C2173) *
              C50847 * C50746 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50776) *
                C2173 +
            ((C2373 + C2374) * C121 + (C2375 + C2376) * C50776) * C2174 +
            C2733 * C2175) *
               C50847 * C501 -
           (((C2723 + C2724) * C50776 + (C2725 + C2726) * C121) * C2175 +
            ((C2380 + C2379) * C50776 + (C2378 + C2377) * C121) * C2174 +
            ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C2173) *
               C50847 * C502 +
           (C2733 * C2173 +
            ((C2726 + C2725) * C121 + (C2724 + C2723) * C50776) * C2174 +
            ((C2176 * C2688 + C2171 * C2691 + C2177 * C2689 + C50692 * C2692) *
                 C121 +
             (C2176 * C2693 + C2171 * C2697 + C2177 * C2694 + C50692 * C2698) *
                 C50776) *
                C2175) *
               C50847 * C503) *
              C50968 +
          ((((C2381 + C2382) * C121 + (C2383 + C2384) * C50776) * C2173 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50776) * C2174 +
            ((C2727 + C2728) * C121 + (C2729 + C2730) * C50776) * C2175) *
               C50847 * C502 -
           (C2734 * C2175 +
            ((C2384 + C2383) * C50776 + (C2382 + C2381) * C121) * C2174 +
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C50776 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50847 * C501 -
           (((C2177 * C2695 + C50692 * C2699 + C2176 * C2694 + C2171 * C2698) *
                 C50776 +
             (C2177 * C2690 + C50692 * C2696 + C2176 * C2689 + C2171 * C2692) *
                 C121) *
                C2175 +
            ((C2730 + C2729) * C50776 + (C2728 + C2727) * C121) * C2174 +
            C2734 * C2173) *
               C50847 * C503) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50776) *
               C50835 * C50847 * C50975 -
           ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
             C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                C50776 +
            (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
             C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                C121) *
               C50835 * C50847 * C50762) *
              C250 +
          (((C117 * C255 + C105 * C265 + C118 * C254 + C106 * C264 +
             C119 * C253 + C107 * C263 + C120 * C257 + C108 * C267) *
                C121 +
            (C117 * C261 + C105 * C273 + C118 * C260 + C106 * C272 +
             C119 * C259 + C107 * C271 + C120 * C268 + C108 * C275) *
                C50776) *
               C50835 * C50847 * C50762 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50776 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50835 * C50847 * C50975) *
              C251 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50776) *
               C50835 * C50847 * C50975 -
           ((C120 * C269 + C108 * C276 + C119 * C268 + C107 * C275 +
             C118 * C259 + C106 * C271 + C117 * C260 + C105 * C272) *
                C50776 +
            (C120 * C258 + C108 * C270 + C119 * C257 + C107 * C267 +
             C118 * C253 + C106 * C263 + C117 * C254 + C105 * C264) *
                C121) *
               C50835 * C50847 * C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50776) *
              C50835 * C50847 * C592 -
          ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
            C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
               C50776 +
           (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
            C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
               C121) *
              C50835 * C50847 * C593 +
          ((C117 * C506 + C105 * C511 + C118 * C507 + C106 * C512 +
            C119 * C508 + C107 * C513 + C120 * C509 + C108 * C514) *
               C121 +
           (C117 * C515 + C105 * C521 + C118 * C516 + C106 * C522 +
            C119 * C517 + C107 * C523 + C120 * C518 + C108 * C524) *
               C50776) *
              C50835 * C50847 * C594 -
          ((C120 * C601 + C108 * C609 + C119 * C602 + C107 * C610 +
            C118 * C603 + C106 * C611 + C117 * C604 + C105 * C612) *
               C50776 +
           (C120 * C597 + C108 * C605 + C119 * C598 + C107 * C606 +
            C118 * C599 + C106 * C607 + C117 * C600 + C105 * C608) *
               C121) *
              C50835 * C50847 * C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                 C121 +
             (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                 C50776) *
                C2173 +
            ((C2373 + C2374) * C121 + (C2375 + C2376) * C50776) * C2174 +
            ((C2377 + C2378) * C121 + (C2379 + C2380) * C50776) * C2175) *
               C50847 * C50975 -
           (((C2177 * C603 + C50692 * C611 + C2176 * C604 + C2171 * C612) *
                 C50776 +
             (C2177 * C599 + C50692 * C607 + C2176 * C600 + C2171 * C608) *
                 C121) *
                C2175 +
            ((C2380 + C2379) * C50776 + (C2378 + C2377) * C121) * C2174 +
            ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C2173) *
               C50847 * C50762) *
              C250 +
          ((((C2381 + C2382) * C121 + (C2383 + C2384) * C50776) * C2173 +
            ((C2385 + C2386) * C121 + (C2387 + C2388) * C50776) * C2174 +
            ((C2176 * C599 + C2171 * C607 + C2177 * C598 + C50692 * C606) *
                 C121 +
             (C2176 * C603 + C2171 * C611 + C2177 * C602 + C50692 * C610) *
                 C50776) *
                C2175) *
               C50847 * C50762 -
           (((C2388 + C2387) * C50776 + (C2386 + C2385) * C121) * C2175 +
            ((C2384 + C2383) * C50776 + (C2382 + C2381) * C121) * C2174 +
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C50776 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C121) *
                C2173) *
               C50847 * C50975) *
              C251 +
          ((((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                 C121 +
             (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                 C50776) *
                C2173 +
            ((C2389 + C2390) * C121 + (C2391 + C2392) * C50776) * C2174 +
            ((C2393 + C2394) * C121 + (C2395 + C2396) * C50776) * C2175) *
               C50847 * C50975 -
           (((C2177 * C601 + C50692 * C609 + C2176 * C602 + C2171 * C610) *
                 C50776 +
             (C2177 * C597 + C50692 * C605 + C2176 * C598 + C2171 * C606) *
                 C121) *
                C2175 +
            ((C2396 + C2395) * C50776 + (C2394 + C2393) * C121) * C2174 +
            ((C2392 + C2391) * C50776 + (C2390 + C2389) * C121) * C2173) *
               C50847 * C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C121 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C50776) *
               C2173 +
           ((C2373 + C2374) * C121 + (C2375 + C2376) * C50776) * C2174 +
           C2733 * C2175) *
              C50847 * C592 -
          (C2857 * C2175 +
           ((C2380 + C2379) * C50776 + (C2378 + C2377) * C121) * C2174 +
           ((C2376 + C2375) * C50776 + (C2374 + C2373) * C121) * C2173) *
              C50847 * C593 +
          (C2733 * C2173 +
           ((C2726 + C2725) * C121 + (C2724 + C2723) * C50776) * C2174 +
           ((C2853 + C2854) * C121 + (C2855 + C2856) * C50776) * C2175) *
              C50847 * C594 -
          (((C2177 * C2834 + C50692 * C2838 + C2176 * C2835 + C2171 * C2839) *
                C50776 +
            (C2177 * C2832 + C50692 * C2836 + C2176 * C2833 + C2171 * C2837) *
                C121) *
               C2175 +
           ((C2856 + C2855) * C50776 + (C2854 + C2853) * C121) * C2174 +
           C2857 * C2173) *
              C50847 * C595) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C377 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50977 -
           (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 +
            C118 * C381 + C106 * C387 + C117 * C382 + C105 * C388) *
               C378 -
           (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 +
            C118 * C391 + C106 * C399 + C117 * C392 + C105 * C400) *
               C50788) *
              C50835 * C50847 * C50746 * C250 +
          ((C117 * C381 + C105 * C387 + C118 * C380 + C106 * C386 +
            C119 * C379 + C107 * C385 + C120 * C383 + C108 * C393) *
               C378 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50977 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C377) +
           (C117 * C391 + C105 * C399 + C118 * C390 + C106 * C398 +
            C119 * C389 + C107 * C397 + C120 * C394 + C108 * C401) *
               C50788) *
              C50835 * C50847 * C50746 * C251 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C377 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C50977 -
           (C120 * C384 + C108 * C395 + C119 * C383 + C107 * C393 +
            C118 * C379 + C106 * C385 + C117 * C380 + C105 * C386) *
               C378 -
           (C120 * C396 + C108 * C402 + C119 * C394 + C107 * C401 +
            C118 * C389 + C106 * C397 + C117 * C390 + C105 * C398) *
               C50788) *
              C50835 * C50847 * C50746 * C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C377 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50977 -
           (C120 * C379 + C108 * C385 + C119 * C380 + C107 * C386 +
            C118 * C381 + C106 * C387 + C117 * C382 + C105 * C388) *
               C378 -
           (C120 * C389 + C108 * C397 + C119 * C390 + C107 * C398 +
            C118 * C391 + C106 * C399 + C117 * C392 + C105 * C400) *
               C50788) *
              C50835 * C50847 * C501 +
          ((C117 * C711 + C105 * C719 + C118 * C712 + C106 * C720 +
            C119 * C713 + C107 * C721 + C120 * C714 + C108 * C722) *
               C378 -
           ((C120 * C259 + C108 * C271 + C119 * C260 + C107 * C272 +
             C118 * C261 + C106 * C273 + C117 * C262 + C105 * C274) *
                C50977 +
            (C120 * C253 + C108 * C263 + C119 * C254 + C107 * C264 +
             C118 * C255 + C106 * C265 + C117 * C256 + C105 * C266) *
                C377) +
           (C117 * C723 + C105 * C735 + C118 * C724 + C106 * C736 +
            C119 * C725 + C107 * C737 + C120 * C726 + C108 * C738) *
               C50788) *
              C50835 * C50847 * C502 +
          ((C117 * C506 + C105 * C511 + C118 * C507 + C106 * C512 +
            C119 * C508 + C107 * C513 + C120 * C509 + C108 * C514) *
               C377 +
           (C117 * C515 + C105 * C521 + C118 * C516 + C106 * C522 +
            C119 * C517 + C107 * C523 + C120 * C518 + C108 * C524) *
               C50977 -
           (C120 * C715 + C108 * C727 + C119 * C716 + C107 * C728 +
            C118 * C717 + C106 * C729 + C117 * C718 + C105 * C730) *
               C378 -
           (C120 * C731 + C108 * C739 + C119 * C732 + C107 * C740 +
            C118 * C733 + C106 * C741 + C117 * C734 + C105 * C742) *
               C50788) *
              C50835 * C50847 * C503) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C377 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C50977 -
            (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
                C378 -
            (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
                C50788) *
               C2173 +
           ((C2373 + C2374) * C377 + (C2375 + C2376) * C50977 -
            (C2177 * C712 + C50692 * C720 + C2176 * C711 + C2171 * C719) *
                C378 -
            (C2177 * C724 + C50692 * C736 + C2176 * C723 + C2171 * C735) *
                C50788) *
               C2174 +
           ((C2377 + C2378) * C377 + (C2379 + C2380) * C50977 -
            (C2177 * C717 + C50692 * C729 + C2176 * C718 + C2171 * C730) *
                C378 -
            (C2177 * C733 + C50692 * C741 + C2176 * C734 + C2171 * C742) *
                C50788) *
               C2175) *
              C50847 * C50746 * C250 +
          (((C2176 * C381 + C2171 * C387 + C2177 * C380 + C50692 * C386) *
                C378 -
            ((C2177 * C135 + C50692 * C145 + C2176 * C134 + C2171 * C144) *
                 C50977 +
             (C2177 * C124 + C50692 * C131 + C2176 * C123 + C2171 * C130) *
                 C377) +
            (C2176 * C391 + C2171 * C399 + C2177 * C390 + C50692 * C398) *
                C50788) *
               C2173 +
           ((C2176 * C712 + C2171 * C720 + C2177 * C713 + C50692 * C721) *
                C378 -
            ((C2384 + C2383) * C50977 + (C2382 + C2381) * C377) +
            (C2176 * C724 + C2171 * C736 + C2177 * C725 + C50692 * C737) *
                C50788) *
               C2174 +
           ((C2176 * C717 + C2171 * C729 + C2177 * C716 + C50692 * C728) *
                C378 -
            ((C2388 + C2387) * C50977 + (C2386 + C2385) * C377) +
            (C2176 * C733 + C2171 * C741 + C2177 * C732 + C50692 * C740) *
                C50788) *
               C2175) *
              C50847 * C50746 * C251 +
          (((C2176 * C124 + C2171 * C131 + C2177 * C125 + C50692 * C132) *
                C377 +
            (C2176 * C135 + C2171 * C145 + C2177 * C136 + C50692 * C146) *
                C50977 -
            (C2177 * C379 + C50692 * C385 + C2176 * C380 + C2171 * C386) *
                C378 -
            (C2177 * C389 + C50692 * C397 + C2176 * C390 + C2171 * C398) *
                C50788) *
               C2173 +
           ((C2389 + C2390) * C377 + (C2391 + C2392) * C50977 -
            (C2177 * C714 + C50692 * C722 + C2176 * C713 + C2171 * C721) *
                C378 -
            (C2177 * C726 + C50692 * C738 + C2176 * C725 + C2171 * C737) *
                C50788) *
               C2174 +
           ((C2393 + C2394) * C377 + (C2395 + C2396) * C50977 -
            (C2177 * C715 + C50692 * C727 + C2176 * C716 + C2171 * C728) *
                C378 -
            (C2177 * C731 + C50692 * C739 + C2176 * C732 + C2171 * C740) *
                C50788) *
               C2175) *
              C50847 * C50746 * C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C122 + C2171 * C129 + C2177 * C123 + C50692 * C130) *
                C377 +
            (C2176 * C133 + C2171 * C143 + C2177 * C134 + C50692 * C144) *
                C50977 -
            (C2177 * C381 + C50692 * C387 + C2176 * C382 + C2171 * C388) *
                C378 -
            (C2177 * C391 + C50692 * C399 + C2176 * C392 + C2171 * C400) *
                C50788) *
               C2173 +
           ((C2373 + C2374) * C377 + (C2375 + C2376) * C50977 -
            (C3046 + C3047) * C378 - (C3048 + C3049) * C50788) *
               C2174 +
           C3064 * C2175) *
              C50847 * C501 +
          (((C3047 + C3046) * C378 -
            ((C2376 + C2375) * C50977 + (C2374 + C2373) * C377) +
            (C3049 + C3048) * C50788) *
               C2173 +
           ((C3052 + C3051) * C378 -
            ((C2380 + C2379) * C50977 + (C2378 + C2377) * C377) +
            (C3054 + C3053) * C50788) *
               C2174 +
           ((C3055 + C3056) * C378 - (C2841 * C50977 + C2842 * C377) +
            (C3057 + C3058) * C50788) *
               C2175) *
              C50847 * C502 +
          (C3064 * C2173 +
           ((C2726 + C2725) * C377 + (C2724 + C2723) * C50977 -
            (C3056 + C3055) * C378 - (C3058 + C3057) * C50788) *
               C2174 +
           ((C2853 + C2854) * C377 + (C2855 + C2856) * C50977 -
            (C2177 * C3005 + C50692 * C3011 + C2176 * C3006 + C2171 * C3012) *
                C378 -
            (C2177 * C3013 + C50692 * C3017 + C2176 * C3014 + C2171 * C3018) *
                C50788) *
               C2175) *
              C50847 * C503) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C121 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50776) *
                C51024 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C51025 +
            C25230 * C24684) *
               C50847 * C1169 -
           (C25346 * C24684 +
            ((C24889 + C24888) * C50776 + (C24887 + C24886) * C121) * C51025 +
            ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C51024) *
               C50847 * C50762) *
              C51021 +
          ((((C24890 + C24891) * C121 + (C24892 + C24893) * C50776) * C51024 +
            ((C24894 + C24895) * C121 + (C24896 + C24897) * C50776) * C51025 +
            ((C25224 + C25225) * C121 + (C25226 + C25227) * C50776) * C24684) *
               C50847 * C50762 -
           (C25231 * C24684 +
            ((C24893 + C24892) * C50776 + (C24891 + C24890) * C121) * C51025 +
            ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                 C50776 +
             (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                 C121) *
                C51024) *
               C50847 * C1169) *
              C51006 +
          ((((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                 C121 +
             (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                 C50776) *
                C51024 +
            ((C24898 + C24899) * C121 + (C24900 + C24901) * C50776) * C51025 +
            ((C24902 + C24903) * C121 + (C24904 + C24905) * C50776) * C24684) *
               C50847 * C1169 -
           (((C49711 * C601 + C50692 * C609 + C49718 * C602 + C50963 * C610) *
                 C50776 +
             (C49711 * C597 + C50692 * C605 + C49718 * C598 + C50963 * C606) *
                 C121) *
                C24684 +
            ((C24905 + C24904) * C50776 + (C24903 + C24902) * C121) * C51025 +
            ((C24901 + C24900) * C50776 + (C24899 + C24898) * C121) * C51024) *
               C50847 * C50762) *
              C1173)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C121 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50776) *
                C51024 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C51025 +
            C25230 * C24684) *
               C50847 * C51022 -
           (C25346 * C24684 +
            ((C24889 + C24888) * C50776 + (C24887 + C24886) * C121) * C51025 +
            ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C51024) *
               C50847 * C51009 +
           (C25230 * C51024 +
            ((C25223 + C25222) * C121 + (C25221 + C25220) * C50776) * C51025 +
            ((C25342 + C25343) * C121 + (C25344 + C25345) * C50776) * C24684) *
               C50847 * C1274) *
              C1275 +
          ((((C24890 + C24891) * C121 + (C24892 + C24893) * C50776) * C51024 +
            ((C24894 + C24895) * C121 + (C24896 + C24897) * C50776) * C51025 +
            ((C25224 + C25225) * C121 + (C25226 + C25227) * C50776) * C24684) *
               C50847 * C51009 -
           (C25231 * C24684 +
            ((C24893 + C24892) * C50776 + (C24891 + C24890) * C121) * C51025 +
            ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                 C50776 +
             (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                 C121) *
                C51024) *
               C50847 * C51022 -
           (((C49711 * C2695 + C50692 * C2699 + C49718 * C2694 +
              C50963 * C2698) *
                 C50776 +
             (C49711 * C2690 + C50692 * C2696 + C49718 * C2689 +
              C50963 * C2692) *
                 C121) *
                C24684 +
            ((C25227 + C25226) * C50776 + (C25225 + C25224) * C121) * C51025 +
            C25231 * C51024) *
               C50847 * C1274) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C377 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50977 -
             (C49711 * C381 + C50692 * C387 + C49718 * C382 + C50963 * C388) *
                 C378 -
             (C49711 * C391 + C50692 * C399 + C49718 * C392 + C50963 * C400) *
                 C50788) *
                C51024 +
            ((C24882 + C24883) * C377 + (C24884 + C24885) * C50977 -
             (C25519 + C25520) * C378 - (C25521 + C25522) * C50788) *
                C51025 +
            C25537 * C24684) *
               C50847 * C1169 +
           (((C25520 + C25519) * C378 -
             ((C24885 + C24884) * C50977 + (C24883 + C24882) * C377) +
             (C25522 + C25521) * C50788) *
                C51024 +
            ((C25525 + C25524) * C378 -
             ((C24889 + C24888) * C50977 + (C24887 + C24886) * C377) +
             (C25527 + C25526) * C50788) *
                C51025 +
            ((C25528 + C25529) * C378 - (C25330 * C50977 + C25331 * C377) +
             (C25530 + C25531) * C50788) *
                C24684) *
               C50847 * C50762) *
              C1275 +
          ((((C49718 * C381 + C50963 * C387 + C49711 * C380 + C50692 * C386) *
                 C378 -
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C50977 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C377) +
             (C49718 * C391 + C50963 * C399 + C49711 * C390 + C50692 * C398) *
                 C50788) *
                C51024 +
            ((C26454 + C26455) * C378 -
             ((C24893 + C24892) * C50977 + (C24891 + C24890) * C377) +
             (C26456 + C26457) * C50788) *
                C51025 +
            ((C26458 + C26459) * C378 - (C25216 * C50977 + C25217 * C377) +
             (C26460 + C26461) * C50788) *
                C24684) *
               C50847 * C1169 +
           (((C24890 + C24891) * C377 + (C24892 + C24893) * C50977 -
             (C26455 + C26454) * C378 - (C26457 + C26456) * C50788) *
                C51024 +
            ((C24894 + C24895) * C377 + (C24896 + C24897) * C50977 -
             (C26459 + C26458) * C378 - (C26461 + C26460) * C50788) *
                C51025 +
            ((C25224 + C25225) * C377 + (C25226 + C25227) * C50977 -
             (C49711 * C4000 + C50692 * C4001 + C49718 * C3004 +
              C50963 * C3008) *
                 C378 -
             (C49711 * C4002 + C50692 * C4003 + C49718 * C3010 +
              C50963 * C3016) *
                 C50788) *
                C24684) *
               C50847 * C50762) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C1511 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C1509 -
             (C49711 * C381 + C50692 * C387 + C49718 * C382 + C50963 * C388) *
                 C1512 -
             (C49711 * C391 + C50692 * C399 + C49718 * C392 + C50963 * C400) *
                 C50788) *
                C51024 +
            ((C24882 + C24883) * C1511 + (C24884 + C24885) * C1509 -
             (C25519 + C25520) * C1512 - (C25521 + C25522) * C50788) *
                C51025 +
            (C25198 * C1511 + C25199 * C1509 - C25532 * C1512 -
             C25533 * C50788) *
                C24684) *
               C50847 * C1169 +
           (((C25520 + C25519) * C1512 -
             ((C24885 + C24884) * C1509 + (C24883 + C24882) * C1511) +
             (C25522 + C25521) * C50788) *
                C51024 +
            ((C25525 + C25524) * C1512 -
             ((C24889 + C24888) * C1509 + (C24887 + C24886) * C1511) +
             (C25527 + C25526) * C50788) *
                C51025 +
            ((C25528 + C25529) * C1512 - (C25330 * C1509 + C25331 * C1511) +
             (C25530 + C25531) * C50788) *
                C24684) *
               C50847 * C50762) *
              C50968 +
          ((((C49718 * C381 + C50963 * C387 + C49711 * C380 + C50692 * C386) *
                 C1512 -
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C1509 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C1511) +
             (C49718 * C391 + C50963 * C399 + C49711 * C390 + C50692 * C398) *
                 C50788) *
                C51024 +
            ((C26454 + C26455) * C1512 -
             ((C24893 + C24892) * C1509 + (C24891 + C24890) * C1511) +
             (C26456 + C26457) * C50788) *
                C51025 +
            ((C26458 + C26459) * C1512 - (C25216 * C1509 + C25217 * C1511) +
             (C26460 + C26461) * C50788) *
                C24684) *
               C50847 * C1169 +
           (((C24890 + C24891) * C1511 + (C24892 + C24893) * C1509 -
             (C26455 + C26454) * C1512 - (C26457 + C26456) * C50788) *
                C51024 +
            ((C24894 + C24895) * C1511 + (C24896 + C24897) * C1509 -
             (C26459 + C26458) * C1512 - (C26461 + C26460) * C50788) *
                C51025 +
            ((C25224 + C25225) * C1511 + (C25226 + C25227) * C1509 -
             (C49711 * C4000 + C50692 * C4001 + C49718 * C3004 +
              C50963 * C3008) *
                 C1512 -
             (C49711 * C4002 + C50692 * C4003 + C49718 * C3010 +
              C50963 * C3016) *
                 C50788) *
                C24684) *
               C50847 * C50762) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C1511 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C1509 -
            (C49711 * C381 + C50692 * C387 + C49718 * C382 + C50963 * C388) *
                C1512 -
            (C49711 * C391 + C50692 * C399 + C49718 * C392 + C50963 * C400) *
                C50788) *
               C51024 +
           ((C24882 + C24883) * C1511 + (C24884 + C24885) * C1509 -
            (C25519 + C25520) * C1512 - (C25521 + C25522) * C50788) *
               C51025 +
           C27294 * C24684) *
              C50847 * C51022 +
          (((C25520 + C25519) * C1512 -
            ((C24885 + C24884) * C1509 + (C24883 + C24882) * C1511) +
            (C25522 + C25521) * C50788) *
               C51024 +
           ((C25525 + C25524) * C1512 -
            ((C24889 + C24888) * C1509 + (C24887 + C24886) * C1511) +
            (C25527 + C25526) * C50788) *
               C51025 +
           ((C25528 + C25529) * C1512 - (C25330 * C1509 + C25331 * C1511) +
            (C25530 + C25531) * C50788) *
               C24684) *
              C50847 * C51009 +
          (C27294 * C51024 +
           ((C25223 + C25222) * C1511 + (C25221 + C25220) * C1509 -
            (C25529 + C25528) * C1512 - (C25531 + C25530) * C50788) *
               C51025 +
           ((C25342 + C25343) * C1511 + (C25344 + C25345) * C1509 -
            (C49711 * C3005 + C50692 * C3011 + C49718 * C3006 +
             C50963 * C3012) *
                C1512 -
            (C49711 * C3013 + C50692 * C3017 + C49718 * C3014 +
             C50963 * C3018) *
                C50788) *
               C24684) *
              C50847 * C1274) *
         C50714) /
        (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C1744 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C51023 -
            (C49711 * C381 + C50692 * C387 + C49718 * C382 + C50963 * C388) *
                C1745 -
            (C49711 * C391 + C50692 * C399 + C49718 * C392 + C50963 * C400) *
                C51012 +
            (C49718 * C847 + C50963 * C852 + C49711 * C848 + C50692 * C853) *
                C1746 +
            (C49718 * C856 + C50963 * C862 + C49711 * C857 + C50692 * C863) *
                C1743) *
               C51024 +
           ((C24882 + C24883) * C1744 + (C24884 + C24885) * C51023 -
            (C25519 + C25520) * C1745 - (C25521 + C25522) * C51012 +
            (C25846 + C25847) * C1746 + (C25848 + C25849) * C1743) *
               C51025 +
           (C25198 * C1744 + C25199 * C51023 - C25532 * C1745 -
            C25533 * C51012 + (C25850 + C25851) * C1746 +
            (C25852 + C25853) * C1743) *
               C24684) *
              C50847 * C1169 +
          (((C25520 + C25519) * C1745 -
            ((C24885 + C24884) * C51023 + (C24883 + C24882) * C1744) +
            (C25522 + C25521) * C51012 - (C25847 + C25846) * C1746 -
            (C25849 + C25848) * C1743) *
               C51024 +
           ((C25525 + C25524) * C1745 -
            ((C24889 + C24888) * C51023 + (C24887 + C24886) * C1744) +
            (C25527 + C25526) * C51012 - (C25851 + C25850) * C1746 -
            (C25853 + C25852) * C1743) *
               C51025 +
           ((C25528 + C25529) * C1745 - (C25330 * C51023 + C25331 * C1744) +
            (C25530 + C25531) * C51012 -
            (C49711 * C3368 + C50692 * C3370 + C49718 * C3369 +
             C50963 * C3371) *
                C1746 -
            (C49711 * C3372 + C50692 * C3374 + C49718 * C3373 +
             C50963 * C3375) *
                C1743) *
               C24684) *
              C50847 * C50762) *
         C50714) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C121 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50776) *
                C51024 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C51025 +
            C25230 * C24684) *
               C50847 * C501 -
           (((C25220 + C25221) * C50776 + (C25222 + C25223) * C121) * C24684 +
            ((C24889 + C24888) * C50776 + (C24887 + C24886) * C121) * C51025 +
            ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C51024) *
               C50847 * C502 +
           (C25230 * C51024 +
            ((C25223 + C25222) * C121 + (C25221 + C25220) * C50776) * C51025 +
            ((C49718 * C2688 + C50963 * C2691 + C49711 * C2689 +
              C50692 * C2692) *
                 C121 +
             (C49718 * C2693 + C50963 * C2697 + C49711 * C2694 +
              C50692 * C2698) *
                 C50776) *
                C24684) *
               C50847 * C503) *
              C50968 +
          ((((C24890 + C24891) * C121 + (C24892 + C24893) * C50776) * C51024 +
            ((C24894 + C24895) * C121 + (C24896 + C24897) * C50776) * C51025 +
            ((C25224 + C25225) * C121 + (C25226 + C25227) * C50776) * C24684) *
               C50847 * C502 -
           (C25231 * C24684 +
            ((C24893 + C24892) * C50776 + (C24891 + C24890) * C121) * C51025 +
            ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                 C50776 +
             (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                 C121) *
                C51024) *
               C50847 * C501 -
           (((C49711 * C2695 + C50692 * C2699 + C49718 * C2694 +
              C50963 * C2698) *
                 C50776 +
             (C49711 * C2690 + C50692 * C2696 + C49718 * C2689 +
              C50963 * C2692) *
                 C121) *
                C24684 +
            ((C25227 + C25226) * C50776 + (C25225 + C25224) * C121) * C51025 +
            C25231 * C51024) *
               C50847 * C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C121 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C50776) *
               C51024 +
           ((C49718 * C256 + C50963 * C266 + C49711 * C255 + C50692 * C265) *
                C121 +
            (C49718 * C262 + C50963 * C274 + C49711 * C261 + C50692 * C273) *
                C50776) *
               C51025 +
           ((C49718 * C506 + C50963 * C511 + C49711 * C507 + C50692 * C512) *
                C121 +
            (C49718 * C515 + C50963 * C521 + C49711 * C516 + C50692 * C522) *
                C50776) *
               C24684) *
              C50847 * C50746 * C113 -
          (((C49711 * C517 + C50692 * C523 + C49718 * C516 + C50963 * C522) *
                C50776 +
            (C49711 * C508 + C50692 * C513 + C49718 * C507 + C50963 * C512) *
                C121) *
               C24684 +
           ((C49711 * C260 + C50692 * C272 + C49718 * C261 + C50963 * C273) *
                C50776 +
            (C49711 * C254 + C50692 * C264 + C49718 * C255 + C50963 * C265) *
                C121) *
               C51025 +
           ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                C50776 +
            (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                C121) *
               C51024) *
              C50847 * C50746 * C114 +
          (((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                C121 +
            (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                C50776) *
               C51024 +
           ((C49718 * C254 + C50963 * C264 + C49711 * C253 + C50692 * C263) *
                C121 +
            (C49718 * C260 + C50963 * C272 + C49711 * C259 + C50692 * C271) *
                C50776) *
               C51025 +
           ((C49718 * C508 + C50963 * C513 + C49711 * C509 + C50692 * C514) *
                C121 +
            (C49718 * C517 + C50963 * C523 + C49711 * C518 + C50692 * C524) *
                C50776) *
               C24684) *
              C50847 * C50746 * C115 -
          (((C49711 * C519 + C50692 * C525 + C49718 * C518 + C50963 * C524) *
                C50776 +
            (C49711 * C510 + C50692 * C520 + C49718 * C509 + C50963 * C514) *
                C121) *
               C24684 +
           ((C49711 * C268 + C50692 * C275 + C49718 * C259 + C50963 * C271) *
                C50776 +
            (C49711 * C257 + C50692 * C267 + C49718 * C253 + C50963 * C263) *
                C121) *
               C51025 +
           ((C49711 * C137 + C50692 * C147 + C49718 * C136 + C50963 * C146) *
                C50776 +
            (C49711 * C126 + C50692 * C138 + C49718 * C125 + C50963 * C132) *
                C121) *
               C51024) *
              C50847 * C50746 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C844 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C841 -
            (C49711 * C381 + C50692 * C387 + C49718 * C382 + C50963 * C388) *
                C845 -
            (C49711 * C391 + C50692 * C399 + C49718 * C392 + C50963 * C400) *
                C842 +
            (C49718 * C847 + C50963 * C852 + C49711 * C848 + C50692 * C853) *
                C846 +
            (C49718 * C856 + C50963 * C862 + C49711 * C857 + C50692 * C863) *
                C843) *
               C51024 +
           ((C24882 + C24883) * C844 + (C24884 + C24885) * C841 -
            (C25519 + C25520) * C845 - (C25521 + C25522) * C842 +
            (C49718 * C968 + C50963 * C972 + C49711 * C967 + C50692 * C971) *
                C846 +
            (C49718 * C976 + C50963 * C980 + C49711 * C975 + C50692 * C979) *
                C843) *
               C51025 +
           (C25198 * C844 + C25199 * C841 - C25532 * C845 - C25533 * C842 +
            (C49718 * C3210 + C50963 * C3213 + C49711 * C3211 +
             C50692 * C3214) *
                C846 +
            (C49718 * C3215 + C50963 * C3219 + C49711 * C3216 +
             C50692 * C3220) *
                C843) *
               C24684) *
              C50847 * C50746 * C50968 +
          (((C49718 * C381 + C50963 * C387 + C49711 * C380 + C50692 * C386) *
                C845 -
            ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                 C841 +
             (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                 C844) +
            (C49718 * C391 + C50963 * C399 + C49711 * C390 + C50692 * C398) *
                C842 -
            (C49711 * C849 + C50692 * C854 + C49718 * C848 + C50963 * C853) *
                C846 -
            (C49711 * C858 + C50692 * C864 + C49718 * C857 + C50963 * C863) *
                C843) *
               C51024 +
           ((C49718 * C712 + C50963 * C720 + C49711 * C713 + C50692 * C721) *
                C845 -
            ((C24893 + C24892) * C841 + (C24891 + C24890) * C844) +
            (C49718 * C724 + C50963 * C736 + C49711 * C725 + C50692 * C737) *
                C842 -
            (C49711 * C966 + C50692 * C970 + C49718 * C967 + C50963 * C971) *
                C846 -
            (C49711 * C974 + C50692 * C978 + C49718 * C975 + C50963 * C979) *
                C843) *
               C51025 +
           ((C49718 * C717 + C50963 * C729 + C49711 * C716 + C50692 * C728) *
                C845 -
            (C25216 * C841 + C25217 * C844) +
            (C49718 * C733 + C50963 * C741 + C49711 * C732 + C50692 * C740) *
                C842 -
            (C49711 * C3212 + C50692 * C3217 + C49718 * C3211 +
             C50963 * C3214) *
                C846 -
            (C49711 * C3218 + C50692 * C3221 + C49718 * C3216 +
             C50963 * C3220) *
                C843) *
               C24684) *
              C50847 * C50746 * C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C121 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C50776) *
               C51024 +
           ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C51025 +
           C25230 * C24684) *
              C50847 * C592 -
          (C25346 * C24684 +
           ((C24889 + C24888) * C50776 + (C24887 + C24886) * C121) * C51025 +
           ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C51024) *
              C50847 * C593 +
          (C25230 * C51024 +
           ((C25223 + C25222) * C121 + (C25221 + C25220) * C50776) * C51025 +
           ((C25342 + C25343) * C121 + (C25344 + C25345) * C50776) * C24684) *
              C50847 * C594 -
          (((C49711 * C2834 + C50692 * C2838 + C49718 * C2835 +
             C50963 * C2839) *
                C50776 +
            (C49711 * C2832 + C50692 * C2836 + C49718 * C2833 +
             C50963 * C2837) *
                C121) *
               C24684 +
           ((C25345 + C25344) * C50776 + (C25343 + C25342) * C121) * C51025 +
           C25346 * C51024) *
              C50847 * C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C121 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50776) *
                C51024 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C51025 +
            ((C24886 + C24887) * C121 + (C24888 + C24889) * C50776) * C24684) *
               C50847 * C50975 -
           (((C49711 * C603 + C50692 * C611 + C49718 * C604 + C50963 * C612) *
                 C50776 +
             (C49711 * C599 + C50692 * C607 + C49718 * C600 + C50963 * C608) *
                 C121) *
                C24684 +
            ((C24889 + C24888) * C50776 + (C24887 + C24886) * C121) * C51025 +
            ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C51024) *
               C50847 * C50762) *
              C250 +
          ((((C24890 + C24891) * C121 + (C24892 + C24893) * C50776) * C51024 +
            ((C24894 + C24895) * C121 + (C24896 + C24897) * C50776) * C51025 +
            ((C49718 * C599 + C50963 * C607 + C49711 * C598 + C50692 * C606) *
                 C121 +
             (C49718 * C603 + C50963 * C611 + C49711 * C602 + C50692 * C610) *
                 C50776) *
                C24684) *
               C50847 * C50762 -
           (((C24897 + C24896) * C50776 + (C24895 + C24894) * C121) * C24684 +
            ((C24893 + C24892) * C50776 + (C24891 + C24890) * C121) * C51025 +
            ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                 C50776 +
             (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                 C121) *
                C51024) *
               C50847 * C50975) *
              C251 +
          ((((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                 C121 +
             (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                 C50776) *
                C51024 +
            ((C24898 + C24899) * C121 + (C24900 + C24901) * C50776) * C51025 +
            ((C24902 + C24903) * C121 + (C24904 + C24905) * C50776) * C24684) *
               C50847 * C50975 -
           (((C49711 * C601 + C50692 * C609 + C49718 * C602 + C50963 * C610) *
                 C50776 +
             (C49711 * C597 + C50692 * C605 + C49718 * C598 + C50963 * C606) *
                 C121) *
                C24684 +
            ((C24905 + C24904) * C50776 + (C24903 + C24902) * C121) * C51025 +
            ((C24901 + C24900) * C50776 + (C24899 + C24898) * C121) * C51024) *
               C50847 * C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C844 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C841 -
            (C49711 * C381 + C50692 * C387 + C49718 * C382 + C50963 * C388) *
                C845 -
            (C49711 * C391 + C50692 * C399 + C49718 * C392 + C50963 * C400) *
                C842 +
            (C49718 * C847 + C50963 * C852 + C49711 * C848 + C50692 * C853) *
                C846 +
            (C49718 * C856 + C50963 * C862 + C49711 * C857 + C50692 * C863) *
                C843) *
               C51024 +
           ((C24882 + C24883) * C844 + (C24884 + C24885) * C841 -
            (C25519 + C25520) * C845 - (C25521 + C25522) * C842 +
            (C25846 + C25847) * C846 + (C25848 + C25849) * C843) *
               C51025 +
           (C25198 * C844 + C25199 * C841 - C25532 * C845 - C25533 * C842 +
            (C25850 + C25851) * C846 + (C25852 + C25853) * C843) *
               C24684) *
              C50847 * C50975 +
          (((C25520 + C25519) * C845 -
            ((C24885 + C24884) * C841 + (C24883 + C24882) * C844) +
            (C25522 + C25521) * C842 - (C25847 + C25846) * C846 -
            (C25849 + C25848) * C843) *
               C51024 +
           ((C25525 + C25524) * C845 -
            ((C24889 + C24888) * C841 + (C24887 + C24886) * C844) +
            (C25527 + C25526) * C842 - (C25851 + C25850) * C846 -
            (C25853 + C25852) * C843) *
               C51025 +
           ((C25528 + C25529) * C845 - (C25330 * C841 + C25331 * C844) +
            (C25530 + C25531) * C842 -
            (C49711 * C3368 + C50692 * C3370 + C49718 * C3369 +
             C50963 * C3371) *
                C846 -
            (C49711 * C3372 + C50692 * C3374 + C49718 * C3373 +
             C50963 * C3375) *
                C843) *
               C24684) *
              C50847 * C50762) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C377 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C50977 -
            (C49711 * C381 + C50692 * C387 + C49718 * C382 + C50963 * C388) *
                C378 -
            (C49711 * C391 + C50692 * C399 + C49718 * C392 + C50963 * C400) *
                C50788) *
               C51024 +
           ((C24882 + C24883) * C377 + (C24884 + C24885) * C50977 -
            (C25519 + C25520) * C378 - (C25521 + C25522) * C50788) *
               C51025 +
           C25537 * C24684) *
              C50847 * C501 +
          (((C25520 + C25519) * C378 -
            ((C24885 + C24884) * C50977 + (C24883 + C24882) * C377) +
            (C25522 + C25521) * C50788) *
               C51024 +
           ((C25525 + C25524) * C378 -
            ((C24889 + C24888) * C50977 + (C24887 + C24886) * C377) +
            (C25527 + C25526) * C50788) *
               C51025 +
           ((C25528 + C25529) * C378 - (C25330 * C50977 + C25331 * C377) +
            (C25530 + C25531) * C50788) *
               C24684) *
              C50847 * C502 +
          (C25537 * C51024 +
           ((C25223 + C25222) * C377 + (C25221 + C25220) * C50977 -
            (C25529 + C25528) * C378 - (C25531 + C25530) * C50788) *
               C51025 +
           ((C25342 + C25343) * C377 + (C25344 + C25345) * C50977 -
            (C49711 * C3005 + C50692 * C3011 + C49718 * C3006 +
             C50963 * C3012) *
                C378 -
            (C49711 * C3013 + C50692 * C3017 + C49718 * C3014 +
             C50963 * C3018) *
                C50788) *
               C24684) *
              C50847 * C503) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C377 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C50977 -
            (C49711 * C381 + C50692 * C387 + C49718 * C382 + C50963 * C388) *
                C378 -
            (C49711 * C391 + C50692 * C399 + C49718 * C392 + C50963 * C400) *
                C50788) *
               C51024 +
           ((C24882 + C24883) * C377 + (C24884 + C24885) * C50977 -
            (C49711 * C712 + C50692 * C720 + C49718 * C711 + C50963 * C719) *
                C378 -
            (C49711 * C724 + C50692 * C736 + C49718 * C723 + C50963 * C735) *
                C50788) *
               C51025 +
           ((C24886 + C24887) * C377 + (C24888 + C24889) * C50977 -
            (C49711 * C717 + C50692 * C729 + C49718 * C718 + C50963 * C730) *
                C378 -
            (C49711 * C733 + C50692 * C741 + C49718 * C734 + C50963 * C742) *
                C50788) *
               C24684) *
              C50847 * C50746 * C250 +
          (((C49718 * C381 + C50963 * C387 + C49711 * C380 + C50692 * C386) *
                C378 -
            ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                 C50977 +
             (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                 C377) +
            (C49718 * C391 + C50963 * C399 + C49711 * C390 + C50692 * C398) *
                C50788) *
               C51024 +
           ((C49718 * C712 + C50963 * C720 + C49711 * C713 + C50692 * C721) *
                C378 -
            ((C24893 + C24892) * C50977 + (C24891 + C24890) * C377) +
            (C49718 * C724 + C50963 * C736 + C49711 * C725 + C50692 * C737) *
                C50788) *
               C51025 +
           ((C49718 * C717 + C50963 * C729 + C49711 * C716 + C50692 * C728) *
                C378 -
            ((C24897 + C24896) * C50977 + (C24895 + C24894) * C377) +
            (C49718 * C733 + C50963 * C741 + C49711 * C732 + C50692 * C740) *
                C50788) *
               C24684) *
              C50847 * C50746 * C251 +
          (((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                C377 +
            (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                C50977 -
            (C49711 * C379 + C50692 * C385 + C49718 * C380 + C50963 * C386) *
                C378 -
            (C49711 * C389 + C50692 * C397 + C49718 * C390 + C50963 * C398) *
                C50788) *
               C51024 +
           ((C24898 + C24899) * C377 + (C24900 + C24901) * C50977 -
            (C49711 * C714 + C50692 * C722 + C49718 * C713 + C50963 * C721) *
                C378 -
            (C49711 * C726 + C50692 * C738 + C49718 * C725 + C50963 * C737) *
                C50788) *
               C51025 +
           ((C24902 + C24903) * C377 + (C24904 + C24905) * C50977 -
            (C49711 * C715 + C50692 * C727 + C49718 * C716 + C50963 * C728) *
                C378 -
            (C49711 * C731 + C50692 * C739 + C49718 * C732 + C50963 * C740) *
                C50788) *
               C24684) *
              C50847 * C50746 * C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
               C1051 +
           (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
               C1047 -
           (C49711 * C381 + C50692 * C387 + C49718 * C382 + C50963 * C388) *
               C1052 -
           (C49711 * C391 + C50692 * C399 + C49718 * C392 + C50963 * C400) *
               C1048 +
           (C49718 * C847 + C50963 * C852 + C49711 * C848 + C50692 * C853) *
               C1053 +
           (C49718 * C856 + C50963 * C862 + C49711 * C857 + C50692 * C863) *
               C1049 -
           (C49711 * C1057 + C50692 * C1061 + C49718 * C1058 + C50963 * C1062) *
               C1054 -
           (C49711 * C1065 + C50692 * C1069 + C49718 * C1066 + C50963 * C1070) *
               C1050) *
              C51024 +
          ((C24882 + C24883) * C1051 + (C24884 + C24885) * C1047 -
           (C25519 + C25520) * C1052 - (C25521 + C25522) * C1048 +
           (C25846 + C25847) * C1053 + (C25848 + C25849) * C1049 -
           (C49711 * C3498 + C50692 * C3502 + C49718 * C3499 + C50963 * C3503) *
               C1054 -
           (C49711 * C3504 + C50692 * C3510 + C49718 * C3505 + C50963 * C3511) *
               C1050) *
              C51025 +
          (C25198 * C1051 + C25199 * C1047 - C25532 * C1052 - C25533 * C1048 +
           (C25850 + C25851) * C1053 + (C25852 + C25853) * C1049 -
           (C49711 * C3500 + C50692 * C3506 + C49718 * C3501 + C50963 * C3507) *
               C1054 -
           (C49711 * C3508 + C50692 * C3512 + C49718 * C3509 + C50963 * C3513) *
               C1050) *
              C24684) *
         C50847 * C50746 * C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C1511 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C1509 -
            (C49711 * C381 + C50692 * C387 + C49718 * C382 + C50963 * C388) *
                C1512 -
            (C49711 * C391 + C50692 * C399 + C49718 * C392 + C50963 * C400) *
                C50788) *
               C51024 +
           ((C24882 + C24883) * C1511 + (C24884 + C24885) * C1509 -
            (C25519 + C25520) * C1512 - (C25521 + C25522) * C50788) *
               C51025 +
           (C25198 * C1511 + C25199 * C1509 - C25532 * C1512 -
            C25533 * C50788) *
               C24684) *
              C50847 * C50746 * C51021 +
          (((C49718 * C381 + C50963 * C387 + C49711 * C380 + C50692 * C386) *
                C1512 -
            ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                 C1509 +
             (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                 C1511) +
            (C49718 * C391 + C50963 * C399 + C49711 * C390 + C50692 * C398) *
                C50788) *
               C51024 +
           ((C26454 + C26455) * C1512 -
            ((C24893 + C24892) * C1509 + (C24891 + C24890) * C1511) +
            (C26456 + C26457) * C50788) *
               C51025 +
           ((C26458 + C26459) * C1512 - (C25216 * C1509 + C25217 * C1511) +
            (C26460 + C26461) * C50788) *
               C24684) *
              C50847 * C50746 * C51006 +
          (((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                C1511 +
            (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                C1509 -
            (C49711 * C379 + C50692 * C385 + C49718 * C380 + C50963 * C386) *
                C1512 -
            (C49711 * C389 + C50692 * C397 + C49718 * C390 + C50963 * C398) *
                C50788) *
               C51024 +
           ((C24898 + C24899) * C1511 + (C24900 + C24901) * C1509 -
            (C49711 * C714 + C50692 * C722 + C49718 * C713 + C50963 * C721) *
                C1512 -
            (C49711 * C726 + C50692 * C738 + C49718 * C725 + C50963 * C737) *
                C50788) *
               C51025 +
           ((C24902 + C24903) * C1511 + (C24904 + C24905) * C1509 -
            (C49711 * C715 + C50692 * C727 + C49718 * C716 + C50963 * C728) *
                C1512 -
            (C49711 * C731 + C50692 * C739 + C49718 * C732 + C50963 * C740) *
                C50788) *
               C24684) *
              C50847 * C50746 * C1173)) /
        (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C1511 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C1509 -
             (C49711 * C381 + C50692 * C387 + C49718 * C382 + C50963 * C388) *
                 C1512 -
             (C49711 * C391 + C50692 * C399 + C49718 * C392 + C50963 * C400) *
                 C50788) *
                C51024 +
            ((C24882 + C24883) * C1511 + (C24884 + C24885) * C1509 -
             (C25519 + C25520) * C1512 - (C25521 + C25522) * C50788) *
                C51025 +
            (C25198 * C1511 + C25199 * C1509 - C25532 * C1512 -
             C25533 * C50788) *
                C24684) *
               C50847 * C50975 +
           (((C25520 + C25519) * C1512 -
             ((C24885 + C24884) * C1509 + (C24883 + C24882) * C1511) +
             (C25522 + C25521) * C50788) *
                C51024 +
            ((C25525 + C25524) * C1512 -
             ((C24889 + C24888) * C1509 + (C24887 + C24886) * C1511) +
             (C25527 + C25526) * C50788) *
                C51025 +
            ((C25528 + C25529) * C1512 - (C25330 * C1509 + C25331 * C1511) +
             (C25530 + C25531) * C50788) *
                C24684) *
               C50847 * C50762) *
              C1275 +
          ((((C49718 * C381 + C50963 * C387 + C49711 * C380 + C50692 * C386) *
                 C1512 -
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C1509 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C1511) +
             (C49718 * C391 + C50963 * C399 + C49711 * C390 + C50692 * C398) *
                 C50788) *
                C51024 +
            ((C26454 + C26455) * C1512 -
             ((C24893 + C24892) * C1509 + (C24891 + C24890) * C1511) +
             (C26456 + C26457) * C50788) *
                C51025 +
            ((C26458 + C26459) * C1512 - (C25216 * C1509 + C25217 * C1511) +
             (C26460 + C26461) * C50788) *
                C24684) *
               C50847 * C50975 +
           (((C24890 + C24891) * C1511 + (C24892 + C24893) * C1509 -
             (C26455 + C26454) * C1512 - (C26457 + C26456) * C50788) *
                C51024 +
            ((C24894 + C24895) * C1511 + (C24896 + C24897) * C1509 -
             (C26459 + C26458) * C1512 - (C26461 + C26460) * C50788) *
                C51025 +
            ((C25224 + C25225) * C1511 + (C25226 + C25227) * C1509 -
             (C49711 * C4000 + C50692 * C4001 + C49718 * C3004 +
              C50963 * C3008) *
                 C1512 -
             (C49711 * C4002 + C50692 * C4003 + C49718 * C3010 +
              C50963 * C3016) *
                 C50788) *
                C24684) *
               C50847 * C50762) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C1744 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C51023 -
            (C49711 * C381 + C50692 * C387 + C49718 * C382 + C50963 * C388) *
                C1745 -
            (C49711 * C391 + C50692 * C399 + C49718 * C392 + C50963 * C400) *
                C51012 +
            (C49718 * C847 + C50963 * C852 + C49711 * C848 + C50692 * C853) *
                C1746 +
            (C49718 * C856 + C50963 * C862 + C49711 * C857 + C50692 * C863) *
                C1743) *
               C51024 +
           ((C24882 + C24883) * C1744 + (C24884 + C24885) * C51023 -
            (C25519 + C25520) * C1745 - (C25521 + C25522) * C51012 +
            (C25846 + C25847) * C1746 + (C25848 + C25849) * C1743) *
               C51025 +
           (C25198 * C1744 + C25199 * C51023 - C25532 * C1745 -
            C25533 * C51012 + (C25850 + C25851) * C1746 +
            (C25852 + C25853) * C1743) *
               C24684) *
              C50847 * C50746 * C1275 +
          (((C49718 * C381 + C50963 * C387 + C49711 * C380 + C50692 * C386) *
                C1745 -
            ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                 C51023 +
             (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                 C1744) +
            (C49718 * C391 + C50963 * C399 + C49711 * C390 + C50692 * C398) *
                C51012 -
            (C49711 * C849 + C50692 * C854 + C49718 * C848 + C50963 * C853) *
                C1746 -
            (C49711 * C858 + C50692 * C864 + C49718 * C857 + C50963 * C863) *
                C1743) *
               C51024 +
           ((C26454 + C26455) * C1745 -
            ((C24893 + C24892) * C51023 + (C24891 + C24890) * C1744) +
            (C26456 + C26457) * C51012 -
            (C49711 * C966 + C50692 * C970 + C49718 * C967 + C50963 * C971) *
                C1746 -
            (C49711 * C974 + C50692 * C978 + C49718 * C975 + C50963 * C979) *
                C1743) *
               C51025 +
           ((C26458 + C26459) * C1745 - (C25216 * C51023 + C25217 * C1744) +
            (C26460 + C26461) * C51012 -
            (C49711 * C3212 + C50692 * C3217 + C49718 * C3211 +
             C50963 * C3214) *
                C1746 -
            (C49711 * C3218 + C50692 * C3221 + C49718 * C3216 +
             C50963 * C3220) *
                C1743) *
               C24684) *
              C50847 * C50746 * C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C121 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C50776) *
               C51024 +
           ((C49718 * C256 + C50963 * C266 + C49711 * C255 + C50692 * C265) *
                C121 +
            (C49718 * C262 + C50963 * C274 + C49711 * C261 + C50692 * C273) *
                C50776) *
               C51025 +
           ((C49718 * C506 + C50963 * C511 + C49711 * C507 + C50692 * C512) *
                C121 +
            (C49718 * C515 + C50963 * C521 + C49711 * C516 + C50692 * C522) *
                C50776) *
               C24684) *
              C50847 * C50746 * C113 -
          (((C49711 * C517 + C50692 * C523 + C49718 * C516 + C50963 * C522) *
                C50776 +
            (C49711 * C508 + C50692 * C513 + C49718 * C507 + C50963 * C512) *
                C121) *
               C24684 +
           ((C49711 * C260 + C50692 * C272 + C49718 * C261 + C50963 * C273) *
                C50776 +
            (C49711 * C254 + C50692 * C264 + C49718 * C255 + C50963 * C265) *
                C121) *
               C51025 +
           ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                C50776 +
            (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                C121) *
               C51024) *
              C50847 * C50746 * C114 +
          (((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                C121 +
            (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                C50776) *
               C51024 +
           ((C49718 * C254 + C50963 * C264 + C49711 * C253 + C50692 * C263) *
                C121 +
            (C49718 * C260 + C50963 * C272 + C49711 * C259 + C50692 * C271) *
                C50776) *
               C51025 +
           ((C49718 * C508 + C50963 * C513 + C49711 * C509 + C50692 * C514) *
                C121 +
            (C49718 * C517 + C50963 * C523 + C49711 * C518 + C50692 * C524) *
                C50776) *
               C24684) *
              C50847 * C50746 * C115 -
          (((C49711 * C519 + C50692 * C525 + C49718 * C518 + C50963 * C524) *
                C50776 +
            (C49711 * C510 + C50692 * C520 + C49718 * C509 + C50963 * C514) *
                C121) *
               C24684 +
           ((C49711 * C268 + C50692 * C275 + C49718 * C259 + C50963 * C271) *
                C50776 +
            (C49711 * C257 + C50692 * C267 + C49718 * C253 + C50963 * C263) *
                C121) *
               C51025 +
           ((C49711 * C137 + C50692 * C147 + C49718 * C136 + C50963 * C146) *
                C50776 +
            (C49711 * C126 + C50692 * C138 + C49718 * C125 + C50963 * C132) *
                C121) *
               C51024) *
              C50847 * C50746 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C121 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50776) *
                C51024 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C51025 +
            C25230 * C24684) *
               C50847 * C501 -
           (((C25220 + C25221) * C50776 + (C25222 + C25223) * C121) * C24684 +
            ((C24889 + C24888) * C50776 + (C24887 + C24886) * C121) * C51025 +
            ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C51024) *
               C50847 * C502 +
           (C25230 * C51024 +
            ((C25223 + C25222) * C121 + (C25221 + C25220) * C50776) * C51025 +
            ((C49718 * C2688 + C50963 * C2691 + C49711 * C2689 +
              C50692 * C2692) *
                 C121 +
             (C49718 * C2693 + C50963 * C2697 + C49711 * C2694 +
              C50692 * C2698) *
                 C50776) *
                C24684) *
               C50847 * C503) *
              C50968 +
          ((((C24890 + C24891) * C121 + (C24892 + C24893) * C50776) * C51024 +
            ((C24894 + C24895) * C121 + (C24896 + C24897) * C50776) * C51025 +
            ((C25224 + C25225) * C121 + (C25226 + C25227) * C50776) * C24684) *
               C50847 * C502 -
           (C25231 * C24684 +
            ((C24893 + C24892) * C50776 + (C24891 + C24890) * C121) * C51025 +
            ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                 C50776 +
             (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                 C121) *
                C51024) *
               C50847 * C501 -
           (((C49711 * C2695 + C50692 * C2699 + C49718 * C2694 +
              C50963 * C2698) *
                 C50776 +
             (C49711 * C2690 + C50692 * C2696 + C49718 * C2689 +
              C50963 * C2692) *
                 C121) *
                C24684 +
            ((C25227 + C25226) * C50776 + (C25225 + C25224) * C121) * C51025 +
            C25231 * C51024) *
               C50847 * C503) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C121 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50776) *
                C51024 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C51025 +
            ((C24886 + C24887) * C121 + (C24888 + C24889) * C50776) * C24684) *
               C50847 * C50975 -
           (((C49711 * C603 + C50692 * C611 + C49718 * C604 + C50963 * C612) *
                 C50776 +
             (C49711 * C599 + C50692 * C607 + C49718 * C600 + C50963 * C608) *
                 C121) *
                C24684 +
            ((C24889 + C24888) * C50776 + (C24887 + C24886) * C121) * C51025 +
            ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C51024) *
               C50847 * C50762) *
              C250 +
          ((((C24890 + C24891) * C121 + (C24892 + C24893) * C50776) * C51024 +
            ((C24894 + C24895) * C121 + (C24896 + C24897) * C50776) * C51025 +
            ((C49718 * C599 + C50963 * C607 + C49711 * C598 + C50692 * C606) *
                 C121 +
             (C49718 * C603 + C50963 * C611 + C49711 * C602 + C50692 * C610) *
                 C50776) *
                C24684) *
               C50847 * C50762 -
           (((C24897 + C24896) * C50776 + (C24895 + C24894) * C121) * C24684 +
            ((C24893 + C24892) * C50776 + (C24891 + C24890) * C121) * C51025 +
            ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                 C50776 +
             (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                 C121) *
                C51024) *
               C50847 * C50975) *
              C251 +
          ((((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                 C121 +
             (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                 C50776) *
                C51024 +
            ((C24898 + C24899) * C121 + (C24900 + C24901) * C50776) * C51025 +
            ((C24902 + C24903) * C121 + (C24904 + C24905) * C50776) * C24684) *
               C50847 * C50975 -
           (((C49711 * C601 + C50692 * C609 + C49718 * C602 + C50963 * C610) *
                 C50776 +
             (C49711 * C597 + C50692 * C605 + C49718 * C598 + C50963 * C606) *
                 C121) *
                C24684 +
            ((C24905 + C24904) * C50776 + (C24903 + C24902) * C121) * C51025 +
            ((C24901 + C24900) * C50776 + (C24899 + C24898) * C121) * C51024) *
               C50847 * C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C121 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C50776) *
               C51024 +
           ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C51025 +
           C25230 * C24684) *
              C50847 * C592 -
          (C25346 * C24684 +
           ((C24889 + C24888) * C50776 + (C24887 + C24886) * C121) * C51025 +
           ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C51024) *
              C50847 * C593 +
          (C25230 * C51024 +
           ((C25223 + C25222) * C121 + (C25221 + C25220) * C50776) * C51025 +
           ((C25342 + C25343) * C121 + (C25344 + C25345) * C50776) * C24684) *
              C50847 * C594 -
          (((C49711 * C2834 + C50692 * C2838 + C49718 * C2835 +
             C50963 * C2839) *
                C50776 +
            (C49711 * C2832 + C50692 * C2836 + C49718 * C2833 +
             C50963 * C2837) *
                C121) *
               C24684 +
           ((C25345 + C25344) * C50776 + (C25343 + C25342) * C121) * C51025 +
           C25346 * C51024) *
              C50847 * C595) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C377 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C50977 -
            (C49711 * C381 + C50692 * C387 + C49718 * C382 + C50963 * C388) *
                C378 -
            (C49711 * C391 + C50692 * C399 + C49718 * C392 + C50963 * C400) *
                C50788) *
               C51024 +
           ((C24882 + C24883) * C377 + (C24884 + C24885) * C50977 -
            (C49711 * C712 + C50692 * C720 + C49718 * C711 + C50963 * C719) *
                C378 -
            (C49711 * C724 + C50692 * C736 + C49718 * C723 + C50963 * C735) *
                C50788) *
               C51025 +
           ((C24886 + C24887) * C377 + (C24888 + C24889) * C50977 -
            (C49711 * C717 + C50692 * C729 + C49718 * C718 + C50963 * C730) *
                C378 -
            (C49711 * C733 + C50692 * C741 + C49718 * C734 + C50963 * C742) *
                C50788) *
               C24684) *
              C50847 * C50746 * C250 +
          (((C49718 * C381 + C50963 * C387 + C49711 * C380 + C50692 * C386) *
                C378 -
            ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                 C50977 +
             (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                 C377) +
            (C49718 * C391 + C50963 * C399 + C49711 * C390 + C50692 * C398) *
                C50788) *
               C51024 +
           ((C49718 * C712 + C50963 * C720 + C49711 * C713 + C50692 * C721) *
                C378 -
            ((C24893 + C24892) * C50977 + (C24891 + C24890) * C377) +
            (C49718 * C724 + C50963 * C736 + C49711 * C725 + C50692 * C737) *
                C50788) *
               C51025 +
           ((C49718 * C717 + C50963 * C729 + C49711 * C716 + C50692 * C728) *
                C378 -
            ((C24897 + C24896) * C50977 + (C24895 + C24894) * C377) +
            (C49718 * C733 + C50963 * C741 + C49711 * C732 + C50692 * C740) *
                C50788) *
               C24684) *
              C50847 * C50746 * C251 +
          (((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                C377 +
            (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                C50977 -
            (C49711 * C379 + C50692 * C385 + C49718 * C380 + C50963 * C386) *
                C378 -
            (C49711 * C389 + C50692 * C397 + C49718 * C390 + C50963 * C398) *
                C50788) *
               C51024 +
           ((C24898 + C24899) * C377 + (C24900 + C24901) * C50977 -
            (C49711 * C714 + C50692 * C722 + C49718 * C713 + C50963 * C721) *
                C378 -
            (C49711 * C726 + C50692 * C738 + C49718 * C725 + C50963 * C737) *
                C50788) *
               C51025 +
           ((C24902 + C24903) * C377 + (C24904 + C24905) * C50977 -
            (C49711 * C715 + C50692 * C727 + C49718 * C716 + C50963 * C728) *
                C378 -
            (C49711 * C731 + C50692 * C739 + C49718 * C732 + C50963 * C740) *
                C50788) *
               C24684) *
              C50847 * C50746 * C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C377 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C50977 -
            (C49711 * C381 + C50692 * C387 + C49718 * C382 + C50963 * C388) *
                C378 -
            (C49711 * C391 + C50692 * C399 + C49718 * C392 + C50963 * C400) *
                C50788) *
               C51024 +
           ((C24882 + C24883) * C377 + (C24884 + C24885) * C50977 -
            (C25519 + C25520) * C378 - (C25521 + C25522) * C50788) *
               C51025 +
           C25537 * C24684) *
              C50847 * C501 +
          (((C25520 + C25519) * C378 -
            ((C24885 + C24884) * C50977 + (C24883 + C24882) * C377) +
            (C25522 + C25521) * C50788) *
               C51024 +
           ((C25525 + C25524) * C378 -
            ((C24889 + C24888) * C50977 + (C24887 + C24886) * C377) +
            (C25527 + C25526) * C50788) *
               C51025 +
           ((C25528 + C25529) * C378 - (C25330 * C50977 + C25331 * C377) +
            (C25530 + C25531) * C50788) *
               C24684) *
              C50847 * C502 +
          (C25537 * C51024 +
           ((C25223 + C25222) * C377 + (C25221 + C25220) * C50977 -
            (C25529 + C25528) * C378 - (C25531 + C25530) * C50788) *
               C51025 +
           ((C25342 + C25343) * C377 + (C25344 + C25345) * C50977 -
            (C49711 * C3005 + C50692 * C3011 + C49718 * C3006 +
             C50963 * C3012) *
                C378 -
            (C49711 * C3013 + C50692 * C3017 + C49718 * C3014 +
             C50963 * C3018) *
                C50788) *
               C24684) *
              C50847 * C503) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[90] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C19767 * C122 + C50687 * C129) * C121 +
                      (C19767 * C133 + C50687 * C143) * C50776) *
                         C51024 +
                     (C19921 + C19922) * C51025 + C20135 * C24684) *
                        C50992 +
                    ((C22193 * C121 + C22194 * C50776) * C51024 +
                     (C21993 + C21994) * C51025 + C31599 * C24684) *
                        C50911) *
                       C1169 -
                   ((C31701 * C24684 + (C22353 + C22354) * C51025 +
                     (C21994 + C21993) * C51024) *
                        C50911 +
                    (C20226 * C24684 + (C19924 + C19923) * C51025 +
                     (C19922 + C19921) * C51024) *
                        C50992) *
                       C50762) *
                      C51021 +
                  ((((C19927 + C19928) * C51024 + (C19929 + C19930) * C51025 +
                     (C19931 + C19932) * C24684) *
                        C50992 +
                    ((C21997 + C21998) * C51024 + (C22355 + C22356) * C51025 +
                     (C31600 + C31601) * C24684) *
                        C50911) *
                       C50762 -
                   ((C31602 * C24684 + (C21998 + C21997) * C51025 +
                     (C22198 * C50776 + C22197 * C121) * C51024) *
                        C50911 +
                    (C20146 * C24684 + (C19928 + C19927) * C51025 +
                     ((C19767 * C134 + C50687 * C144) * C50776 +
                      (C19767 * C123 + C50687 * C130) * C121) *
                         C51024) *
                        C50992) *
                       C1169) *
                      C51006 +
                  (((((C19767 * C124 + C50687 * C131) * C121 +
                      (C19767 * C135 + C50687 * C145) * C50776) *
                         C51024 +
                     (C19933 + C19934) * C51025 + (C19935 + C19936) * C24684) *
                        C50992 +
                    ((C22201 * C121 + C22202 * C50776) * C51024 +
                     (C22019 + C22020) * C51025 + (C31305 + C31306) * C24684) *
                        C50911) *
                       C1169 -
                   ((((C19767 * C4002 + C50687 * C4003) * C50776 +
                      (C19767 * C4000 + C50687 * C4001) * C121) *
                         C24684 +
                     (C31306 + C31305) * C51025 + (C22020 + C22019) * C51024) *
                        C50911 +
                    ((C19938 + C19937) * C24684 + (C19936 + C19935) * C51025 +
                     (C19934 + C19933) * C51024) *
                        C50992) *
                       C50762) *
                      C1173)) /
                (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C51024 +
             (C19921 + C19922) * C51025 + C20135 * C24684) *
                C50992 +
            ((C22193 * C121 + C22194 * C50776) * C51024 +
             (C21993 + C21994) * C51025 + C31599 * C24684) *
                C50911) *
               C51022 -
           ((C31701 * C24684 + (C22353 + C22354) * C51025 +
             (C21994 + C21993) * C51024) *
                C50911 +
            (C20226 * C24684 + (C19924 + C19923) * C51025 +
             (C19922 + C19921) * C51024) *
                C50992) *
               C51009 +
           ((C20135 * C51024 + C20136 * C51025 + (C20152 + C20151) * C24684) *
                C50992 +
            (C31599 * C51024 + (C22463 + C22464) * C51025 +
             (C31702 + C31703) * C24684) *
                C50911) *
               C1274) *
              C1275 +
          ((((C19927 + C19928) * C51024 + (C19929 + C19930) * C51025 +
             (C19931 + C19932) * C24684) *
                C50992 +
            ((C21997 + C21998) * C51024 + (C22355 + C22356) * C51025 +
             (C31600 + C31601) * C24684) *
                C50911) *
               C51009 -
           ((C31602 * C24684 + (C21998 + C21997) * C51025 +
             (C22198 * C50776 + C22197 * C121) * C51024) *
                C50911 +
            (C20146 * C24684 + (C19928 + C19927) * C51025 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C51024) *
                C50992) *
               C51022 -
           ((((C19767 * C3013 + C50687 * C3017) * C50776 +
              (C19767 * C3005 + C50687 * C3011) * C121) *
                 C24684 +
             (C31601 + C31600) * C51025 + C31602 * C51024) *
                C50911 +
            ((C20154 + C20153) * C24684 + C20145 * C51025 + C20146 * C51024) *
                C50992) *
               C1274) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C377 +
              (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
              C22194 * C50788) *
                 C51024 +
             (C20337 + C20338 - C20371 - C20372) * C51025 + C20381 * C24684) *
                C50992 +
            ((C22193 * C377 + C22194 * C50977 - C22195 * C378 -
              C22196 * C50788) *
                 C51024 +
             (C22613 + C22614 - C22615 - C22616) * C51025 + C31856 * C24684) *
                C50911) *
               C1169 +
           (((C20371 - (C20338 + C20337) + C20372) * C51024 +
             (C20373 - (C20344 + C20343) + C20374) * C51025 +
             (C20375 - (C20350 + C20349) + C20376) * C24684) *
                C50992 +
            ((C22615 - (C22614 + C22613) + C22616) * C51024 +
             (C22623 - (C22624 + C22625) + C22626) * C51025 +
             (C31851 - (C31852 + C31853) + C31854) * C24684) *
                C50911) *
               C50762) *
              C1275 +
          ((((C22197 * C378 -
              ((C19767 * C134 + C50687 * C144) * C50977 +
               (C19767 * C123 + C50687 * C130) * C377) +
              C22198 * C50788) *
                 C51024 +
             (C21039 - (C21017 + C21018) + C21040) * C51025 +
             (C21041 - (C21023 + C21024) + C21042) * C24684) *
                C50992 +
            ((C22199 * C378 - (C22198 * C50977 + C22197 * C377) +
              C22200 * C50788) *
                 C51024 +
             (C23567 - (C23568 + C23569) + C23570) * C51025 +
             (C32739 - (C32740 + C32741) + C32742) * C24684) *
                C50911) *
               C1169 +
           (((C21018 + C21017 - C21039 - C21040) * C51024 +
             (C21024 + C21023 - C21041 - C21042) * C51025 +
             (C21030 + C21029 - C21043 - C21044) * C24684) *
                C50992 +
            ((C23569 + C23568 - C23567 - C23570) * C51024 +
             (C32741 + C32740 - C32739 - C32742) * C51025 +
             (C21037 * C377 + C21038 * C50977 -
              (C19767 * C3368 + C50687 * C3370) * C378 -
              (C19767 * C3372 + C50687 * C3374) * C50788) *
                 C24684) *
                C50911) *
               C50762) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C1511 +
              (C19767 * C133 + C50687 * C143) * C1509 - C22193 * C1512 -
              C22194 * C50788) *
                 C51024 +
             (C21273 + C21274 - C21275 - C21276) * C51025 + C21631 * C24684) *
                C50992 +
            ((C22193 * C1511 + C22194 * C1509 - C22195 * C1512 -
              C22196 * C50788) *
                 C51024 +
             (C23915 + C23916 - C23917 - C23918) * C51025 +
             (C24419 + C24418 - C24417 - C24420) * C24684) *
                C50911) *
               C1169 +
           (((C21275 - (C21274 + C21273) + C21276) * C51024 +
             (C21279 - (C21278 + C21277) + C21280) * C51025 +
             (C21283 - (C21282 + C21281) + C21284) * C24684) *
                C50992 +
            ((C23917 - (C23916 + C23915) + C23918) * C51024 +
             (C24417 - (C24418 + C24419) + C24420) * C51025 +
             (C20611 * C1512 - (C20368 * C1509 + C20367 * C1511) +
              C20612 * C50788) *
                 C24684) *
                C50911) *
               C50762) *
              C50968 +
          ((((C22197 * C1512 -
              ((C19767 * C134 + C50687 * C144) * C1509 +
               (C19767 * C123 + C50687 * C130) * C1511) +
              C22198 * C50788) *
                 C51024 +
             (C21285 - (C21286 + C21287) + C21288) * C51025 +
             (C21289 - (C21290 + C21291) + C21292) * C24684) *
                C50992 +
            ((C22199 * C1512 - (C22198 * C1509 + C22197 * C1511) +
              C22200 * C50788) *
                 C51024 +
             (C23923 - (C23924 + C23925) + C23926) * C51025 +
             (C33083 - (C33084 + C33085) + C33086) * C24684) *
                C50911) *
               C1169 +
           (((C21287 + C21286 - C21285 - C21288) * C51024 +
             (C21291 + C21290 - C21289 - C21292) * C51025 +
             (C21295 + C21294 - C21293 - C21296) * C24684) *
                C50992 +
            ((C23925 + C23924 - C23923 - C23926) * C51024 +
             (C33085 + C33084 - C33083 - C33086) * C51025 +
             (C21037 * C1511 + C21038 * C1509 -
              (C19767 * C3368 + C50687 * C3370) * C1512 -
              (C19767 * C3372 + C50687 * C3374) * C50788) *
                 C24684) *
                C50911) *
               C50762) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C1511 +
             (C19767 * C133 + C50687 * C143) * C1509 - C22193 * C1512 -
             C22194 * C50788) *
                C51024 +
            (C21273 + C21274 - C21275 - C21276) * C51025 + C21631 * C24684) *
               C50992 +
           ((C22193 * C1511 + C22194 * C1509 - C22195 * C1512 -
             C22196 * C50788) *
                C51024 +
            (C23915 + C23916 - C23917 - C23918) * C51025 + C33579 * C24684) *
               C50911) *
              C51022 +
          (((C21275 - (C21274 + C21273) + C21276) * C51024 +
            (C21279 - (C21278 + C21277) + C21280) * C51025 +
            (C21283 - (C21282 + C21281) + C21284) * C24684) *
               C50992 +
           ((C23917 - (C23916 + C23915) + C23918) * C51024 +
            (C24417 - (C24418 + C24419) + C24420) * C51025 +
            (C33574 - (C33575 + C33576) + C33577) * C24684) *
               C50911) *
              C51009 +
          ((C21631 * C51024 + C21632 * C51025 +
            (C21627 + C21626 - C21625 - C21628) * C24684) *
               C50992 +
           (C33579 * C51024 + (C33576 + C33575 - C33574 - C33577) * C51025 +
            (C20369 * C1511 + C20370 * C1509 -
             (C19767 * C20578 + C50687 * C20579) * C1512 -
             (C19767 * C20580 + C50687 * C20581) * C50788) *
                C24684) *
               C50911) *
              C1274) *
         C50714) /
        (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C1744 +
             (C19767 * C133 + C50687 * C143) * C51023 - C22193 * C1745 -
             C22194 * C51012 + C22195 * C1746 + C22196 * C1743) *
                C51024 +
            (C21731 + C21732 - C21733 - C21734 + C21735 + C21736) * C51025 +
            (C21737 + C21738 - C21739 - C21740 + C21741 + C21742) * C24684) *
               C50992 +
           ((C22193 * C1744 + C22194 * C51023 - C22195 * C1745 -
             C22196 * C51012 + C22799 * C1746 + C22800 * C1743) *
                C51024 +
            (C24571 + C24572 - C24573 - C24574 + C24575 + C24576) * C51025 +
            (C33726 + C33727 - C33728 - C33729 + C33730 + C33731) * C24684) *
               C50911) *
              C1169 +
          (((C21733 - (C21732 + C21731) + C21734 - C21735 - C21736) * C51024 +
            (C21739 - (C21738 + C21737) + C21740 - C21741 - C21742) * C51025 +
            (C21745 - (C21744 + C21743) + C21746 - C21747 - C21748) * C24684) *
               C50992 +
           ((C24573 - (C24572 + C24571) + C24574 - C24575 - C24576) * C51024 +
            (C33728 - (C33727 + C33726) + C33729 - C33730 - C33731) * C51025 +
            (C20611 * C1745 - (C20368 * C51023 + C20367 * C1744) +
             C20612 * C51012 - (C19767 * C20684 + C50687 * C20685) * C1746 -
             (C19767 * C20686 + C50687 * C20687) * C1743) *
                C24684) *
               C50911) *
              C50762) *
         C50714) /
        (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C51024 +
             (C19921 + C19922) * C51025 + C20135 * C24684) *
                C50992 +
            ((C22193 * C121 + C22194 * C50776) * C51024 +
             (C21993 + C21994) * C51025 + C31599 * C24684) *
                C50911) *
               C501 -
           (((C22464 + C22463) * C24684 + (C22353 + C22354) * C51025 +
             (C21994 + C21993) * C51024) *
                C50911 +
            (C20226 * C24684 + (C19924 + C19923) * C51025 +
             (C19922 + C19921) * C51024) *
                C50992) *
               C502 +
           ((C20135 * C51024 + C20136 * C51025 + (C20152 + C20151) * C24684) *
                C50992 +
            (C31599 * C51024 + (C22463 + C22464) * C51025 +
             (C20369 * C121 + C20370 * C50776) * C24684) *
                C50911) *
               C503) *
              C50968 +
          ((((C19927 + C19928) * C51024 + (C19929 + C19930) * C51025 +
             (C19931 + C19932) * C24684) *
                C50992 +
            ((C21997 + C21998) * C51024 + (C22355 + C22356) * C51025 +
             (C31600 + C31601) * C24684) *
                C50911) *
               C502 -
           ((C31602 * C24684 + (C21998 + C21997) * C51025 +
             (C22198 * C50776 + C22197 * C121) * C51024) *
                C50911 +
            (C20146 * C24684 + (C19928 + C19927) * C51025 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C51024) *
                C50992) *
               C501 -
           ((((C19767 * C3013 + C50687 * C3017) * C50776 +
              (C19767 * C3005 + C50687 * C3011) * C121) *
                 C24684 +
             (C31601 + C31600) * C51025 + C31602 * C51024) *
                C50911 +
            ((C20154 + C20153) * C24684 + C20145 * C51025 + C20146 * C51024) *
                C50992) *
               C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C51024 +
            (C19921 + C19922) * C51025 + C20135 * C24684) *
               C50992 +
           ((C22193 * C121 + C22194 * C50776) * C51024 +
            (C21993 + C21994) * C51025 + (C22354 + C22353) * C24684) *
               C50911) *
              C50746 * C113 -
          (((C22356 + C22355) * C24684 + (C21998 + C21997) * C51025 +
            (C22198 * C50776 + C22197 * C121) * C51024) *
               C50911 +
           (C20146 * C24684 + (C19928 + C19927) * C51025 +
            ((C19767 * C134 + C50687 * C144) * C50776 +
             (C19767 * C123 + C50687 * C130) * C121) *
                C51024) *
               C50992) *
              C50746 * C114 +
          ((((C19767 * C124 + C50687 * C131) * C121 +
             (C19767 * C135 + C50687 * C145) * C50776) *
                C51024 +
            (C19933 + C19934) * C51025 + (C19935 + C19936) * C24684) *
               C50992 +
           ((C22201 * C121 + C22202 * C50776) * C51024 +
            (C22019 + C22020) * C51025 +
            ((C19767 * C716 + C50687 * C728) * C121 +
             (C19767 * C732 + C50687 * C740) * C50776) *
                C24684) *
               C50911) *
              C50746 * C115 -
          ((((C19767 * C731 + C50687 * C739) * C50776 +
             (C19767 * C715 + C50687 * C727) * C121) *
                C24684 +
            ((C19767 * C726 + C50687 * C738) * C50776 +
             (C19767 * C714 + C50687 * C722) * C121) *
                C51025 +
            ((C19767 * C389 + C50687 * C397) * C50776 +
             (C19767 * C379 + C50687 * C385) * C121) *
                C51024) *
               C50911 +
           (((C19767 * C518 + C50687 * C524) * C50776 +
             (C19767 * C509 + C50687 * C514) * C121) *
                C24684 +
            ((C19767 * C259 + C50687 * C271) * C50776 +
             (C19767 * C253 + C50687 * C263) * C121) *
                C51025 +
            ((C19767 * C136 + C50687 * C146) * C50776 +
             (C19767 * C125 + C50687 * C132) * C121) *
                C51024) *
               C50992) *
              C50746 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C844 +
             (C19767 * C133 + C50687 * C143) * C841 - C22193 * C845 -
             C22194 * C842 + C22195 * C846 + C22196 * C843) *
                C51024 +
            (C20583 + C20584 - C20585 - C20586 + C20613 + C20614) * C51025 +
            (C20591 + C20592 - C20593 - C20594 + C20615 + C20616) * C24684) *
               C50992 +
           ((C22193 * C844 + C22194 * C841 - C22195 * C845 - C22196 * C842 +
             C22799 * C846 + C22800 * C843) *
                C51024 +
            (C22955 + C22956 - C22957 - C22958 + C22959 + C22960) * C51025 +
            (C20364 * C844 + C20365 * C841 - C20609 * C845 - C20610 * C842 +
             C22635 * C846 + C22636 * C843) *
                C24684) *
               C50911) *
              C50746 * C50968 +
          (((C22197 * C845 -
             ((C19767 * C134 + C50687 * C144) * C841 +
              (C19767 * C123 + C50687 * C130) * C844) +
             C22198 * C842 - C22199 * C846 - C22200 * C843) *
                C51024 +
            (C21033 * C845 - (C19910 * C841 + C19909 * C844) + C21034 * C842 -
             C22011 * C846 - C22012 * C843) *
                C51025 +
            (C21035 * C845 - (C19912 * C841 + C19911 * C844) + C21036 * C842 -
             C22361 * C846 - C22362 * C843) *
                C24684) *
               C50992 +
           ((C22199 * C845 - (C22198 * C841 + C22197 * C844) + C22200 * C842 -
             C22801 * C846 - C22802 * C843) *
                C51024 +
            (C22011 * C845 - (C21034 * C841 + C21033 * C844) + C22012 * C842 -
             C22803 * C846 - C22804 * C843) *
                C51025 +
            (C22361 * C845 - (C21036 * C841 + C21035 * C844) + C22362 * C842 -
             (C19767 * C3500 + C50687 * C3506) * C846 -
             (C19767 * C3508 + C50687 * C3512) * C843) *
                C24684) *
               C50911) *
              C50746 * C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C51024 +
            (C19921 + C19922) * C51025 + C20135 * C24684) *
               C50992 +
           ((C22193 * C121 + C22194 * C50776) * C51024 +
            (C21993 + C21994) * C51025 + C31599 * C24684) *
               C50911) *
              C592 -
          ((C31701 * C24684 + (C22353 + C22354) * C51025 +
            (C21994 + C21993) * C51024) *
               C50911 +
           (C20226 * C24684 + (C19924 + C19923) * C51025 +
            (C19922 + C19921) * C51024) *
               C50992) *
              C593 +
          ((C20135 * C51024 + C20136 * C51025 + (C20152 + C20151) * C24684) *
               C50992 +
           (C31599 * C51024 + (C22463 + C22464) * C51025 +
            (C31702 + C31703) * C24684) *
               C50911) *
              C594 -
          ((((C19767 * C20334 + C50687 * C20335) * C50776 +
             (C19767 * C20332 + C50687 * C20333) * C121) *
                C24684 +
            (C31703 + C31702) * C51025 + C31701 * C51024) *
               C50911 +
           ((C20234 + C20233) * C24684 + C20225 * C51025 + C20226 * C51024) *
               C50992) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C51024 +
             (C19921 + C19922) * C51025 + C20135 * C24684) *
                C50992 +
            ((C22193 * C121 + C22194 * C50776) * C51024 +
             (C21993 + C21994) * C51025 + (C22354 + C22353) * C24684) *
                C50911) *
               C50975 -
           (((C22464 + C22463) * C24684 + (C22353 + C22354) * C51025 +
             (C21994 + C21993) * C51024) *
                C50911 +
            (C20226 * C24684 + (C19924 + C19923) * C51025 +
             (C19922 + C19921) * C51024) *
                C50992) *
               C50762) *
              C250 +
          ((((C19927 + C19928) * C51024 + (C19929 + C19930) * C51025 +
             (C19931 + C19932) * C24684) *
                C50992 +
            ((C21997 + C21998) * C51024 + (C22355 + C22356) * C51025 +
             (C21037 * C121 + C21038 * C50776) * C24684) *
                C50911) *
               C50762 -
           (((C22356 + C22355) * C24684 + (C21998 + C21997) * C51025 +
             (C22198 * C50776 + C22197 * C121) * C51024) *
                C50911 +
            (C20146 * C24684 + (C19928 + C19927) * C51025 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C51024) *
                C50992) *
               C50975) *
              C251 +
          (((((C19767 * C124 + C50687 * C131) * C121 +
              (C19767 * C135 + C50687 * C145) * C50776) *
                 C51024 +
             (C19933 + C19934) * C51025 + (C19935 + C19936) * C24684) *
                C50992 +
            ((C22201 * C121 + C22202 * C50776) * C51024 +
             (C22019 + C22020) * C51025 + (C31305 + C31306) * C24684) *
                C50911) *
               C50975 -
           ((((C19767 * C4002 + C50687 * C4003) * C50776 +
              (C19767 * C4000 + C50687 * C4001) * C121) *
                 C24684 +
             (C31306 + C31305) * C51025 + (C22020 + C22019) * C51024) *
                C50911 +
            ((C19938 + C19937) * C24684 + (C19936 + C19935) * C51025 +
             (C19934 + C19933) * C51024) *
                C50992) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C844 +
             (C19767 * C133 + C50687 * C143) * C841 - C22193 * C845 -
             C22194 * C842 + C22195 * C846 + C22196 * C843) *
                C51024 +
            (C20583 + C20584 - C20585 - C20586 + C20613 + C20614) * C51025 +
            (C20591 + C20592 - C20593 - C20594 + C20615 + C20616) * C24684) *
               C50992 +
           ((C22193 * C844 + C22194 * C841 - C22195 * C845 - C22196 * C842 +
             C22799 * C846 + C22800 * C843) *
                C51024 +
            (C22955 + C22956 - C22957 - C22958 + C22959 + C22960) * C51025 +
            (C32149 + C32150 - C32151 - C32152 + C32153 + C32154) * C24684) *
               C50911) *
              C50975 +
          (((C20585 - (C20584 + C20583) + C20586 - C20613 - C20614) * C51024 +
            (C20593 - (C20592 + C20591) + C20594 - C20615 - C20616) * C51025 +
            (C20601 - (C20600 + C20599) + C20602 - C20617 - C20618) * C24684) *
               C50992 +
           ((C22957 - (C22956 + C22955) + C22958 - C22959 - C22960) * C51024 +
            (C32151 - (C32150 + C32149) + C32152 - C32153 - C32154) * C51025 +
            (C20611 * C845 - (C20368 * C841 + C20367 * C844) + C20612 * C842 -
             (C19767 * C20684 + C50687 * C20685) * C846 -
             (C19767 * C20686 + C50687 * C20687) * C843) *
                C24684) *
               C50911) *
              C50762) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C377 +
             (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
             C22194 * C50788) *
                C51024 +
            (C20337 + C20338 - C20371 - C20372) * C51025 + C20381 * C24684) *
               C50992 +
           ((C22193 * C377 + C22194 * C50977 - C22195 * C378 -
             C22196 * C50788) *
                C51024 +
            (C22613 + C22614 - C22615 - C22616) * C51025 + C31856 * C24684) *
               C50911) *
              C501 +
          (((C20371 - (C20338 + C20337) + C20372) * C51024 +
            (C20373 - (C20344 + C20343) + C20374) * C51025 +
            (C20375 - (C20350 + C20349) + C20376) * C24684) *
               C50992 +
           ((C22615 - (C22614 + C22613) + C22616) * C51024 +
            (C22623 - (C22624 + C22625) + C22626) * C51025 +
            (C31851 - (C31852 + C31853) + C31854) * C24684) *
               C50911) *
              C502 +
          ((C20381 * C51024 + C20382 * C51025 +
            (C20358 + C20357 - C20377 - C20378) * C24684) *
               C50992 +
           (C31856 * C51024 + (C31853 + C31852 - C31851 - C31854) * C51025 +
            (C20369 * C377 + C20370 * C50977 -
             (C19767 * C20578 + C50687 * C20579) * C378 -
             (C19767 * C20580 + C50687 * C20581) * C50788) *
                C24684) *
               C50911) *
              C503) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C377 +
             (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
             C22194 * C50788) *
                C51024 +
            (C20337 + C20338 - C20371 - C20372) * C51025 + C20381 * C24684) *
               C50992 +
           ((C22193 * C377 + C22194 * C50977 - C22195 * C378 -
             C22196 * C50788) *
                C51024 +
            (C22613 + C22614 - C22615 - C22616) * C51025 +
            (C22625 + C22624 - C22623 - C22626) * C24684) *
               C50911) *
              C50746 * C250 +
          (((C22197 * C378 -
             ((C19767 * C134 + C50687 * C144) * C50977 +
              (C19767 * C123 + C50687 * C130) * C377) +
             C22198 * C50788) *
                C51024 +
            (C21039 - (C21017 + C21018) + C21040) * C51025 +
            (C21041 - (C21023 + C21024) + C21042) * C24684) *
               C50992 +
           ((C22199 * C378 - (C22198 * C50977 + C22197 * C377) +
             C22200 * C50788) *
                C51024 +
            (C23567 - (C23568 + C23569) + C23570) * C51025 +
            (C22361 * C378 - (C21036 * C50977 + C21035 * C377) +
             C22362 * C50788) *
                C24684) *
               C50911) *
              C50746 * C251 +
          ((((C19767 * C124 + C50687 * C131) * C377 +
             (C19767 * C135 + C50687 * C145) * C50977 - C22201 * C378 -
             C22202 * C50788) *
                C51024 +
            (C19915 * C377 + C19916 * C50977 - C22013 * C378 -
             C22014 * C50788) *
                C51025 +
            (C19917 * C377 + C19918 * C50977 - C31303 * C378 -
             C31304 * C50788) *
                C24684) *
               C50992 +
           ((C22201 * C377 + C22202 * C50977 - C22203 * C378 -
             C22204 * C50788) *
                C51024 +
            (C22013 * C377 + C22014 * C50977 - C22015 * C378 -
             C22016 * C50788) *
                C51025 +
            (C31303 * C377 + C31304 * C50977 -
             (C19767 * C3212 + C50687 * C3217) * C378 -
             (C19767 * C3218 + C50687 * C3221) * C50788) *
                C24684) *
               C50911) *
              C50746 * C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C1051 +
            (C19767 * C133 + C50687 * C143) * C1047 - C22193 * C1052 -
            C22194 * C1048 + C22195 * C1053 + C22196 * C1049 - C22799 * C1054 -
            C22800 * C1050) *
               C51024 +
           (C19903 * C1051 + C19904 * C1047 - C20361 * C1052 - C20362 * C1048 +
            C20607 * C1053 + C20608 * C1049 - C22633 * C1054 - C22634 * C1050) *
               C51025 +
           (C19905 * C1051 + C19906 * C1047 - C20364 * C1052 - C20365 * C1048 +
            C20609 * C1053 + C20610 * C1049 - C22635 * C1054 - C22636 * C1050) *
               C24684) *
              C50992 +
          ((C22193 * C1051 + C22194 * C1047 - C22195 * C1052 - C22196 * C1048 +
            C22799 * C1053 + C22800 * C1049 - C23079 * C1054 - C23080 * C1050) *
               C51024 +
           (C20361 * C1051 + C20362 * C1047 - C20607 * C1052 - C20608 * C1048 +
            C22633 * C1053 + C22634 * C1049 - C22969 * C1054 - C22970 * C1050) *
               C51025 +
           (C20364 * C1051 + C20365 * C1047 - C20609 * C1052 - C20610 * C1048 +
            C22635 * C1053 + C22636 * C1049 -
            (C19767 * C22950 + C50687 * C22951) * C1054 -
            (C19767 * C22952 + C50687 * C22953) * C1050) *
               C24684) *
              C50911) *
         C50746 * C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C1511 +
             (C19767 * C133 + C50687 * C143) * C1509 - C22193 * C1512 -
             C22194 * C50788) *
                C51024 +
            (C21273 + C21274 - C21275 - C21276) * C51025 + C21631 * C24684) *
               C50992 +
           ((C22193 * C1511 + C22194 * C1509 - C22195 * C1512 -
             C22196 * C50788) *
                C51024 +
            (C23915 + C23916 - C23917 - C23918) * C51025 +
            (C24419 + C24418 - C24417 - C24420) * C24684) *
               C50911) *
              C50746 * C51021 +
          (((C22197 * C1512 -
             ((C19767 * C134 + C50687 * C144) * C1509 +
              (C19767 * C123 + C50687 * C130) * C1511) +
             C22198 * C50788) *
                C51024 +
            (C21285 - (C21286 + C21287) + C21288) * C51025 +
            (C21289 - (C21290 + C21291) + C21292) * C24684) *
               C50992 +
           ((C22199 * C1512 - (C22198 * C1509 + C22197 * C1511) +
             C22200 * C50788) *
                C51024 +
            (C23923 - (C23924 + C23925) + C23926) * C51025 +
            (C22361 * C1512 - (C21036 * C1509 + C21035 * C1511) +
             C22362 * C50788) *
                C24684) *
               C50911) *
              C50746 * C51006 +
          ((((C19767 * C124 + C50687 * C131) * C1511 +
             (C19767 * C135 + C50687 * C145) * C1509 - C22201 * C1512 -
             C22202 * C50788) *
                C51024 +
            (C19915 * C1511 + C19916 * C1509 - C22013 * C1512 -
             C22014 * C50788) *
                C51025 +
            (C19917 * C1511 + C19918 * C1509 - C31303 * C1512 -
             C31304 * C50788) *
                C24684) *
               C50992 +
           ((C22201 * C1511 + C22202 * C1509 - C22203 * C1512 -
             C22204 * C50788) *
                C51024 +
            (C22013 * C1511 + C22014 * C1509 - C22015 * C1512 -
             C22016 * C50788) *
                C51025 +
            (C31303 * C1511 + C31304 * C1509 -
             (C19767 * C3212 + C50687 * C3217) * C1512 -
             (C19767 * C3218 + C50687 * C3221) * C50788) *
                C24684) *
               C50911) *
              C50746 * C1173)) /
        (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C1511 +
              (C19767 * C133 + C50687 * C143) * C1509 - C22193 * C1512 -
              C22194 * C50788) *
                 C51024 +
             (C21273 + C21274 - C21275 - C21276) * C51025 + C21631 * C24684) *
                C50992 +
            ((C22193 * C1511 + C22194 * C1509 - C22195 * C1512 -
              C22196 * C50788) *
                 C51024 +
             (C23915 + C23916 - C23917 - C23918) * C51025 +
             (C24419 + C24418 - C24417 - C24420) * C24684) *
                C50911) *
               C50975 +
           (((C21275 - (C21274 + C21273) + C21276) * C51024 +
             (C21279 - (C21278 + C21277) + C21280) * C51025 +
             (C21283 - (C21282 + C21281) + C21284) * C24684) *
                C50992 +
            ((C23917 - (C23916 + C23915) + C23918) * C51024 +
             (C24417 - (C24418 + C24419) + C24420) * C51025 +
             (C20611 * C1512 - (C20368 * C1509 + C20367 * C1511) +
              C20612 * C50788) *
                 C24684) *
                C50911) *
               C50762) *
              C1275 +
          ((((C22197 * C1512 -
              ((C19767 * C134 + C50687 * C144) * C1509 +
               (C19767 * C123 + C50687 * C130) * C1511) +
              C22198 * C50788) *
                 C51024 +
             (C21285 - (C21286 + C21287) + C21288) * C51025 +
             (C21289 - (C21290 + C21291) + C21292) * C24684) *
                C50992 +
            ((C22199 * C1512 - (C22198 * C1509 + C22197 * C1511) +
              C22200 * C50788) *
                 C51024 +
             (C23923 - (C23924 + C23925) + C23926) * C51025 +
             (C33083 - (C33084 + C33085) + C33086) * C24684) *
                C50911) *
               C50975 +
           (((C21287 + C21286 - C21285 - C21288) * C51024 +
             (C21291 + C21290 - C21289 - C21292) * C51025 +
             (C21295 + C21294 - C21293 - C21296) * C24684) *
                C50992 +
            ((C23925 + C23924 - C23923 - C23926) * C51024 +
             (C33085 + C33084 - C33083 - C33086) * C51025 +
             (C21037 * C1511 + C21038 * C1509 -
              (C19767 * C3368 + C50687 * C3370) * C1512 -
              (C19767 * C3372 + C50687 * C3374) * C50788) *
                 C24684) *
                C50911) *
               C50762) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C1744 +
             (C19767 * C133 + C50687 * C143) * C51023 - C22193 * C1745 -
             C22194 * C51012 + C22195 * C1746 + C22196 * C1743) *
                C51024 +
            (C21731 + C21732 - C21733 - C21734 + C21735 + C21736) * C51025 +
            (C21737 + C21738 - C21739 - C21740 + C21741 + C21742) * C24684) *
               C50992 +
           ((C22193 * C1744 + C22194 * C51023 - C22195 * C1745 -
             C22196 * C51012 + C22799 * C1746 + C22800 * C1743) *
                C51024 +
            (C24571 + C24572 - C24573 - C24574 + C24575 + C24576) * C51025 +
            (C20364 * C1744 + C20365 * C51023 - C20609 * C1745 -
             C20610 * C51012 + C22635 * C1746 + C22636 * C1743) *
                C24684) *
               C50911) *
              C50746 * C1275 +
          (((C22197 * C1745 -
             ((C19767 * C134 + C50687 * C144) * C51023 +
              (C19767 * C123 + C50687 * C130) * C1744) +
             C22198 * C51012 - C22199 * C1746 - C22200 * C1743) *
                C51024 +
            (C21033 * C1745 - (C19910 * C51023 + C19909 * C1744) +
             C21034 * C51012 - C22011 * C1746 - C22012 * C1743) *
                C51025 +
            (C21035 * C1745 - (C19912 * C51023 + C19911 * C1744) +
             C21036 * C51012 - C22361 * C1746 - C22362 * C1743) *
                C24684) *
               C50992 +
           ((C22199 * C1745 - (C22198 * C51023 + C22197 * C1744) +
             C22200 * C51012 - C22801 * C1746 - C22802 * C1743) *
                C51024 +
            (C22011 * C1745 - (C21034 * C51023 + C21033 * C1744) +
             C22012 * C51012 - C22803 * C1746 - C22804 * C1743) *
                C51025 +
            (C22361 * C1745 - (C21036 * C51023 + C21035 * C1744) +
             C22362 * C51012 - (C19767 * C3500 + C50687 * C3506) * C1746 -
             (C19767 * C3508 + C50687 * C3512) * C1743) *
                C24684) *
               C50911) *
              C50746 * C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C51024 +
            (C19921 + C19922) * C51025 + C20135 * C24684) *
               C50992 +
           ((C22193 * C121 + C22194 * C50776) * C51024 +
            (C21993 + C21994) * C51025 + (C22354 + C22353) * C24684) *
               C50911) *
              C50746 * C113 -
          (((C22356 + C22355) * C24684 + (C21998 + C21997) * C51025 +
            (C22198 * C50776 + C22197 * C121) * C51024) *
               C50911 +
           (C20146 * C24684 + (C19928 + C19927) * C51025 +
            ((C19767 * C134 + C50687 * C144) * C50776 +
             (C19767 * C123 + C50687 * C130) * C121) *
                C51024) *
               C50992) *
              C50746 * C114 +
          ((((C19767 * C124 + C50687 * C131) * C121 +
             (C19767 * C135 + C50687 * C145) * C50776) *
                C51024 +
            (C19933 + C19934) * C51025 + (C19935 + C19936) * C24684) *
               C50992 +
           ((C22201 * C121 + C22202 * C50776) * C51024 +
            (C22019 + C22020) * C51025 +
            ((C19767 * C716 + C50687 * C728) * C121 +
             (C19767 * C732 + C50687 * C740) * C50776) *
                C24684) *
               C50911) *
              C50746 * C115 -
          ((((C19767 * C731 + C50687 * C739) * C50776 +
             (C19767 * C715 + C50687 * C727) * C121) *
                C24684 +
            ((C19767 * C726 + C50687 * C738) * C50776 +
             (C19767 * C714 + C50687 * C722) * C121) *
                C51025 +
            ((C19767 * C389 + C50687 * C397) * C50776 +
             (C19767 * C379 + C50687 * C385) * C121) *
                C51024) *
               C50911 +
           (((C19767 * C518 + C50687 * C524) * C50776 +
             (C19767 * C509 + C50687 * C514) * C121) *
                C24684 +
            ((C19767 * C259 + C50687 * C271) * C50776 +
             (C19767 * C253 + C50687 * C263) * C121) *
                C51025 +
            ((C19767 * C136 + C50687 * C146) * C50776 +
             (C19767 * C125 + C50687 * C132) * C121) *
                C51024) *
               C50992) *
              C50746 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C51024 +
             (C19921 + C19922) * C51025 + C20135 * C24684) *
                C50992 +
            ((C22193 * C121 + C22194 * C50776) * C51024 +
             (C21993 + C21994) * C51025 + C31599 * C24684) *
                C50911) *
               C501 -
           (((C22464 + C22463) * C24684 + (C22353 + C22354) * C51025 +
             (C21994 + C21993) * C51024) *
                C50911 +
            (C20226 * C24684 + (C19924 + C19923) * C51025 +
             (C19922 + C19921) * C51024) *
                C50992) *
               C502 +
           ((C20135 * C51024 + C20136 * C51025 + (C20152 + C20151) * C24684) *
                C50992 +
            (C31599 * C51024 + (C22463 + C22464) * C51025 +
             (C20369 * C121 + C20370 * C50776) * C24684) *
                C50911) *
               C503) *
              C50968 +
          ((((C19927 + C19928) * C51024 + (C19929 + C19930) * C51025 +
             (C19931 + C19932) * C24684) *
                C50992 +
            ((C21997 + C21998) * C51024 + (C22355 + C22356) * C51025 +
             (C31600 + C31601) * C24684) *
                C50911) *
               C502 -
           ((C31602 * C24684 + (C21998 + C21997) * C51025 +
             (C22198 * C50776 + C22197 * C121) * C51024) *
                C50911 +
            (C20146 * C24684 + (C19928 + C19927) * C51025 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C51024) *
                C50992) *
               C501 -
           ((((C19767 * C3013 + C50687 * C3017) * C50776 +
              (C19767 * C3005 + C50687 * C3011) * C121) *
                 C24684 +
             (C31601 + C31600) * C51025 + C31602 * C51024) *
                C50911 +
            ((C20154 + C20153) * C24684 + C20145 * C51025 + C20146 * C51024) *
                C50992) *
               C503) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C51024 +
             (C19921 + C19922) * C51025 + C20135 * C24684) *
                C50992 +
            ((C22193 * C121 + C22194 * C50776) * C51024 +
             (C21993 + C21994) * C51025 + (C22354 + C22353) * C24684) *
                C50911) *
               C50975 -
           (((C22464 + C22463) * C24684 + (C22353 + C22354) * C51025 +
             (C21994 + C21993) * C51024) *
                C50911 +
            (C20226 * C24684 + (C19924 + C19923) * C51025 +
             (C19922 + C19921) * C51024) *
                C50992) *
               C50762) *
              C250 +
          ((((C19927 + C19928) * C51024 + (C19929 + C19930) * C51025 +
             (C19931 + C19932) * C24684) *
                C50992 +
            ((C21997 + C21998) * C51024 + (C22355 + C22356) * C51025 +
             (C21037 * C121 + C21038 * C50776) * C24684) *
                C50911) *
               C50762 -
           (((C22356 + C22355) * C24684 + (C21998 + C21997) * C51025 +
             (C22198 * C50776 + C22197 * C121) * C51024) *
                C50911 +
            (C20146 * C24684 + (C19928 + C19927) * C51025 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C51024) *
                C50992) *
               C50975) *
              C251 +
          (((((C19767 * C124 + C50687 * C131) * C121 +
              (C19767 * C135 + C50687 * C145) * C50776) *
                 C51024 +
             (C19933 + C19934) * C51025 + (C19935 + C19936) * C24684) *
                C50992 +
            ((C22201 * C121 + C22202 * C50776) * C51024 +
             (C22019 + C22020) * C51025 + (C31305 + C31306) * C24684) *
                C50911) *
               C50975 -
           ((((C19767 * C4002 + C50687 * C4003) * C50776 +
              (C19767 * C4000 + C50687 * C4001) * C121) *
                 C24684 +
             (C31306 + C31305) * C51025 + (C22020 + C22019) * C51024) *
                C50911 +
            ((C19938 + C19937) * C24684 + (C19936 + C19935) * C51025 +
             (C19934 + C19933) * C51024) *
                C50992) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C51024 +
            (C19921 + C19922) * C51025 + C20135 * C24684) *
               C50992 +
           ((C22193 * C121 + C22194 * C50776) * C51024 +
            (C21993 + C21994) * C51025 + C31599 * C24684) *
               C50911) *
              C592 -
          ((C31701 * C24684 + (C22353 + C22354) * C51025 +
            (C21994 + C21993) * C51024) *
               C50911 +
           (C20226 * C24684 + (C19924 + C19923) * C51025 +
            (C19922 + C19921) * C51024) *
               C50992) *
              C593 +
          ((C20135 * C51024 + C20136 * C51025 + (C20152 + C20151) * C24684) *
               C50992 +
           (C31599 * C51024 + (C22463 + C22464) * C51025 +
            (C31702 + C31703) * C24684) *
               C50911) *
              C594 -
          ((((C19767 * C20334 + C50687 * C20335) * C50776 +
             (C19767 * C20332 + C50687 * C20333) * C121) *
                C24684 +
            (C31703 + C31702) * C51025 + C31701 * C51024) *
               C50911 +
           ((C20234 + C20233) * C24684 + C20225 * C51025 + C20226 * C51024) *
               C50992) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C377 +
             (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
             C22194 * C50788) *
                C51024 +
            (C20337 + C20338 - C20371 - C20372) * C51025 + C20381 * C24684) *
               C50992 +
           ((C22193 * C377 + C22194 * C50977 - C22195 * C378 -
             C22196 * C50788) *
                C51024 +
            (C22613 + C22614 - C22615 - C22616) * C51025 +
            (C22625 + C22624 - C22623 - C22626) * C24684) *
               C50911) *
              C50746 * C250 +
          (((C22197 * C378 -
             ((C19767 * C134 + C50687 * C144) * C50977 +
              (C19767 * C123 + C50687 * C130) * C377) +
             C22198 * C50788) *
                C51024 +
            (C21039 - (C21017 + C21018) + C21040) * C51025 +
            (C21041 - (C21023 + C21024) + C21042) * C24684) *
               C50992 +
           ((C22199 * C378 - (C22198 * C50977 + C22197 * C377) +
             C22200 * C50788) *
                C51024 +
            (C23567 - (C23568 + C23569) + C23570) * C51025 +
            (C22361 * C378 - (C21036 * C50977 + C21035 * C377) +
             C22362 * C50788) *
                C24684) *
               C50911) *
              C50746 * C251 +
          ((((C19767 * C124 + C50687 * C131) * C377 +
             (C19767 * C135 + C50687 * C145) * C50977 - C22201 * C378 -
             C22202 * C50788) *
                C51024 +
            (C19915 * C377 + C19916 * C50977 - C22013 * C378 -
             C22014 * C50788) *
                C51025 +
            (C19917 * C377 + C19918 * C50977 - C31303 * C378 -
             C31304 * C50788) *
                C24684) *
               C50992 +
           ((C22201 * C377 + C22202 * C50977 - C22203 * C378 -
             C22204 * C50788) *
                C51024 +
            (C22013 * C377 + C22014 * C50977 - C22015 * C378 -
             C22016 * C50788) *
                C51025 +
            (C31303 * C377 + C31304 * C50977 -
             (C19767 * C3212 + C50687 * C3217) * C378 -
             (C19767 * C3218 + C50687 * C3221) * C50788) *
                C24684) *
               C50911) *
              C50746 * C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C377 +
             (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
             C22194 * C50788) *
                C51024 +
            (C20337 + C20338 - C20371 - C20372) * C51025 + C20381 * C24684) *
               C50992 +
           ((C22193 * C377 + C22194 * C50977 - C22195 * C378 -
             C22196 * C50788) *
                C51024 +
            (C22613 + C22614 - C22615 - C22616) * C51025 + C31856 * C24684) *
               C50911) *
              C501 +
          (((C20371 - (C20338 + C20337) + C20372) * C51024 +
            (C20373 - (C20344 + C20343) + C20374) * C51025 +
            (C20375 - (C20350 + C20349) + C20376) * C24684) *
               C50992 +
           ((C22615 - (C22614 + C22613) + C22616) * C51024 +
            (C22623 - (C22624 + C22625) + C22626) * C51025 +
            (C31851 - (C31852 + C31853) + C31854) * C24684) *
               C50911) *
              C502 +
          ((C20381 * C51024 + C20382 * C51025 +
            (C20358 + C20357 - C20377 - C20378) * C24684) *
               C50992 +
           (C31856 * C51024 + (C31853 + C31852 - C31851 - C31854) * C51025 +
            (C20369 * C377 + C20370 * C50977 -
             (C19767 * C20578 + C50687 * C20579) * C378 -
             (C19767 * C20580 + C50687 * C20581) * C50788) *
                C24684) *
               C50911) *
              C503) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C19763 +
            (C19921 + C19922) * C19764 + C20135 * C19765 + C20136 * C19766) *
               C50847 * C1169 -
           (C20225 * C19766 + C20226 * C19765 + (C19924 + C19923) * C19764 +
            (C19922 + C19921) * C19763) *
               C50847 * C50762) *
              C51021 +
          (((C19927 + C19928) * C19763 + (C19929 + C19930) * C19764 +
            (C19931 + C19932) * C19765 + (C20153 + C20154) * C19766) *
               C50847 * C50762 -
           (C20145 * C19766 + C20146 * C19765 + (C19928 + C19927) * C19764 +
            ((C19767 * C134 + C50687 * C144) * C50776 +
             (C19767 * C123 + C50687 * C130) * C121) *
                C19763) *
               C50847 * C1169) *
              C51006 +
          ((((C19767 * C124 + C50687 * C131) * C121 +
             (C19767 * C135 + C50687 * C145) * C50776) *
                C19763 +
            (C19933 + C19934) * C19764 + (C19935 + C19936) * C19765 +
            (C19937 + C19938) * C19766) *
               C50847 * C1169 -
           (((C19767 * C2695 + C50687 * C2699) * C50776 +
             (C19767 * C2690 + C50687 * C2696) * C121) *
                C19766 +
            (C19938 + C19937) * C19765 + (C19936 + C19935) * C19764 +
            (C19934 + C19933) * C19763) *
               C50847 * C50762) *
              C1173)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50776) *
                C16981 +
            ((C17169 + C17170 + C17171) * C121 +
             (C17172 + C17173 + C17174) * C50776) *
                C50885) *
               C50847 * C1169 -
           (((C17503 + C17504 + C17505) * C50776 +
             (C17506 + C17507 + C17508) * C121) *
                C50885 +
            ((C17174 + C17173 + C17172) * C50776 +
             (C17171 + C17170 + C17169) * C121) *
                C16981) *
               C50847 * C50762) *
              C51021 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50776) *
                C16981 +
            ((C17509 + C17510 + C17511) * C121 +
             (C17512 + C17513 + C17514) * C50776) *
                C50885) *
               C50847 * C50762 -
           (((C17180 + C17179 + C17178) * C50776 +
             (C17177 + C17176 + C17175) * C121) *
                C50885 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50776 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C16981) *
               C50847 * C1169) *
              C51006 +
          ((((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
              C16985 * C126 + C16980 * C138) *
                 C121 +
             (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
              C16985 * C137 + C16980 * C147) *
                 C50776) *
                C16981 +
            ((C17181 + C17182 + C17183) * C121 +
             (C17184 + C17185 + C17186) * C50776) *
                C50885) *
               C50847 * C1169 -
           (((C16985 * C519 + C16980 * C525 + C16984 * C518 + C16979 * C524 +
              C16983 * C517 + C16978 * C523) *
                 C50776 +
             (C16985 * C510 + C16980 * C520 + C16984 * C509 + C16979 * C514 +
              C16983 * C508 + C16978 * C513) *
                 C121) *
                C50885 +
            ((C17186 + C17185 + C17184) * C50776 +
             (C17183 + C17182 + C17181) * C121) *
                C16981) *
               C50847 * C50762) *
              C1173)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C16981 +
             (C19921 + C19922) * C50885) *
                C5105 +
            ((C22193 * C121 + C22194 * C50776) * C16981 +
             (C21993 + C21994) * C50885) *
                C5106 +
            ((C22195 * C121 + C22196 * C50776) * C16981 +
             (C21995 + C21996) * C50885) *
                C5107) *
               C1169 -
           (((C22351 + C22352) * C50885 + (C21996 + C21995) * C16981) * C5107 +
            ((C22353 + C22354) * C50885 + (C21994 + C21993) * C16981) * C5106 +
            ((C19924 + C19923) * C50885 + (C19922 + C19921) * C16981) * C5105) *
               C50762) *
              C51021 +
          ((((C19927 + C19928) * C16981 + (C19929 + C19930) * C50885) * C5105 +
            ((C21997 + C21998) * C16981 + (C22355 + C22356) * C50885) * C5106 +
            ((C22017 + C22018) * C16981 + (C22363 + C22364) * C50885) * C5107) *
               C50762 -
           (((C22018 + C22017) * C50885 +
             (C22200 * C50776 + C22199 * C121) * C16981) *
                C5107 +
            ((C21998 + C21997) * C50885 +
             (C22198 * C50776 + C22197 * C121) * C16981) *
                C5106 +
            ((C19928 + C19927) * C50885 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C16981) *
                C5105) *
               C1169) *
              C51006 +
          (((((C19767 * C124 + C50687 * C131) * C121 +
              (C19767 * C135 + C50687 * C145) * C50776) *
                 C16981 +
             (C19933 + C19934) * C50885) *
                C5105 +
            ((C22201 * C121 + C22202 * C50776) * C16981 +
             (C22019 + C22020) * C50885) *
                C5106 +
            ((C22203 * C121 + C22204 * C50776) * C16981 +
             (C22021 + C22022) * C50885) *
                C5107) *
               C1169 -
           ((((C19767 * C3218 + C50687 * C3221) * C50776 +
              (C19767 * C3212 + C50687 * C3217) * C121) *
                 C50885 +
             (C22022 + C22021) * C16981) *
                C5107 +
            (((C19767 * C732 + C50687 * C740) * C50776 +
              (C19767 * C716 + C50687 * C728) * C121) *
                 C50885 +
             (C22020 + C22019) * C16981) *
                C5106 +
            ((C19936 + C19935) * C50885 + (C19934 + C19933) * C16981) * C5105) *
               C50762) *
              C1173)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C19763 +
            (C19921 + C19922) * C19764 + C20135 * C19765 + C20136 * C19766) *
               C50847 * C51022 -
           (C20225 * C19766 + C20226 * C19765 + (C19924 + C19923) * C19764 +
            (C19922 + C19921) * C19763) *
               C50847 * C51009 +
           (C20135 * C19763 + C20136 * C19764 + (C20152 + C20151) * C19765 +
            (C20233 + C20234) * C19766) *
               C50847 * C1274) *
              C1275 +
          (((C19927 + C19928) * C19763 + (C19929 + C19930) * C19764 +
            (C19931 + C19932) * C19765 + (C20153 + C20154) * C19766) *
               C50847 * C51009 -
           (C20145 * C19766 + C20146 * C19765 + (C19928 + C19927) * C19764 +
            ((C19767 * C134 + C50687 * C144) * C50776 +
             (C19767 * C123 + C50687 * C130) * C121) *
                C19763) *
               C50847 * C51022 -
           (((C19767 * C2834 + C50687 * C2838) * C50776 +
             (C19767 * C2832 + C50687 * C2836) * C121) *
                C19766 +
            (C20154 + C20153) * C19765 + C20145 * C19764 + C20146 * C19763) *
               C50847 * C1274) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50776) *
                C16981 +
            ((C17169 + C17170 + C17171) * C121 +
             (C17172 + C17173 + C17174) * C50776) *
                C50885) *
               C50847 * C51022 -
           (((C17503 + C17504 + C17505) * C50776 +
             (C17506 + C17507 + C17508) * C121) *
                C50885 +
            ((C17174 + C17173 + C17172) * C50776 +
             (C17171 + C17170 + C17169) * C121) *
                C16981) *
               C50847 * C51009 +
           (((C17508 + C17507 + C17506) * C121 +
             (C17505 + C17504 + C17503) * C50776) *
                C16981 +
            ((C17625 + C17626 + C17627) * C121 +
             (C17628 + C17629 + C17630) * C50776) *
                C50885) *
               C50847 * C1274) *
              C1275 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50776) *
                C16981 +
            ((C17509 + C17510 + C17511) * C121 +
             (C17512 + C17513 + C17514) * C50776) *
                C50885) *
               C50847 * C51009 -
           (((C17180 + C17179 + C17178) * C50776 +
             (C17177 + C17176 + C17175) * C121) *
                C50885 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50776 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C16981) *
               C50847 * C51022 -
           (((C16985 * C601 + C16980 * C609 + C16984 * C602 + C16979 * C610 +
              C16983 * C603 + C16978 * C611) *
                 C50776 +
             (C16985 * C597 + C16980 * C605 + C16984 * C598 + C16979 * C606 +
              C16983 * C599 + C16978 * C607) *
                 C121) *
                C50885 +
            ((C17514 + C17513 + C17512) * C50776 +
             (C17511 + C17510 + C17509) * C121) *
                C16981) *
               C50847 * C1274) *
              C50719)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C16981 +
             (C19921 + C19922) * C50885) *
                C5105 +
            ((C22193 * C121 + C22194 * C50776) * C16981 +
             (C21993 + C21994) * C50885) *
                C5106 +
            ((C22195 * C121 + C22196 * C50776) * C16981 +
             (C21995 + C21996) * C50885) *
                C5107) *
               C51022 -
           (((C22351 + C22352) * C50885 + (C21996 + C21995) * C16981) * C5107 +
            ((C22353 + C22354) * C50885 + (C21994 + C21993) * C16981) * C5106 +
            ((C19924 + C19923) * C50885 + (C19922 + C19921) * C16981) * C5105) *
               C51009 +
           ((C20135 * C16981 + C20136 * C50885) * C5105 +
            ((C22354 + C22353) * C16981 + (C22463 + C22464) * C50885) * C5106 +
            ((C22352 + C22351) * C16981 + (C22465 + C22466) * C50885) * C5107) *
               C1274) *
              C1275 +
          ((((C19927 + C19928) * C16981 + (C19929 + C19930) * C50885) * C5105 +
            ((C21997 + C21998) * C16981 + (C22355 + C22356) * C50885) * C5106 +
            ((C22017 + C22018) * C16981 + (C22363 + C22364) * C50885) * C5107) *
               C51009 -
           (((C22018 + C22017) * C50885 +
             (C22200 * C50776 + C22199 * C121) * C16981) *
                C5107 +
            ((C21998 + C21997) * C50885 +
             (C22198 * C50776 + C22197 * C121) * C16981) *
                C5106 +
            ((C19928 + C19927) * C50885 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C16981) *
                C5105) *
               C51022 -
           ((((C19767 * C3372 + C50687 * C3374) * C50776 +
              (C19767 * C3368 + C50687 * C3370) * C121) *
                 C50885 +
             (C22364 + C22363) * C16981) *
                C5107 +
            ((C21038 * C50776 + C21037 * C121) * C50885 +
             (C22356 + C22355) * C16981) *
                C5106 +
            (C20145 * C50885 + C20146 * C16981) * C5105) *
               C1274) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C19767 * C122 + C50687 * C129) * C377 +
                      (C19767 * C133 + C50687 * C143) * C50977 -
                      (C19767 * C382 + C50687 * C388) * C378 -
                      (C19767 * C392 + C50687 * C400) * C50788) *
                         C19763 +
                     (C20337 + C20338 - C20371 - C20372) * C19764 +
                     C20381 * C19765 + C20382 * C19766) *
                        C50847 * C1169 +
                    ((C20371 - (C20338 + C20337) + C20372) * C19763 +
                     (C20373 - (C20344 + C20343) + C20374) * C19764 +
                     (C20375 - (C20350 + C20349) + C20376) * C19765 +
                     (C20377 - (C20357 + C20358) + C20378) * C19766) *
                        C50847 * C50762) *
                       C1275 +
                   ((((C19767 * C381 + C50687 * C387) * C378 -
                      ((C19767 * C134 + C50687 * C144) * C50977 +
                       (C19767 * C123 + C50687 * C130) * C377) +
                      (C19767 * C391 + C50687 * C399) * C50788) *
                         C19763 +
                     (C21039 - (C21017 + C21018) + C21040) * C19764 +
                     (C21041 - (C21023 + C21024) + C21042) * C19765 +
                     (C21043 - (C21029 + C21030) + C21044) * C19766) *
                        C50847 * C1169 +
                    ((C21018 + C21017 - C21039 - C21040) * C19763 +
                     (C21024 + C21023 - C21041 - C21042) * C19764 +
                     (C21030 + C21029 - C21043 - C21044) * C19765 +
                     (C20149 * C377 + C20150 * C50977 -
                      (C19767 * C3005 + C50687 * C3011) * C378 -
                      (C19767 * C3013 + C50687 * C3017) * C50788) *
                         C19766) *
                        C50847 * C50762) *
                       C50719)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                       C16979 * C130 + C16985 * C124 + C16980 * C131) *
                          C377 +
                      (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                       C16979 * C144 + C16985 * C135 + C16980 * C145) *
                          C50977 -
                      (C16985 * C380 + C16980 * C386 + C16984 * C381 +
                       C16979 * C387 + C16983 * C382 + C16978 * C388) *
                          C378 -
                      (C16985 * C390 + C16980 * C398 + C16984 * C391 +
                       C16979 * C399 + C16983 * C392 + C16978 * C400) *
                          C50788) *
                         C16981 +
                     ((C17169 + C17170 + C17171) * C377 +
                      (C17172 + C17173 + C17174) * C50977 -
                      (C17801 + C17802 + C17803) * C378 -
                      (C17804 + C17805 + C17806) * C50788) *
                         C50885) *
                        C50847 * C1169 +
                    (((C17803 + C17802 + C17801) * C378 -
                      ((C17174 + C17173 + C17172) * C50977 +
                       (C17171 + C17170 + C17169) * C377) +
                      (C17806 + C17805 + C17804) * C50788) *
                         C16981 +
                     ((C17807 + C17808 + C17809) * C378 -
                      ((C17503 + C17504 + C17505) * C50977 +
                       (C17506 + C17507 + C17508) * C377) +
                      (C17810 + C17811 + C17812) * C50788) *
                         C50885) *
                        C50847 * C50762) *
                       C1275 +
                   ((((C16983 * C381 + C16978 * C387 + C16984 * C380 +
                       C16979 * C386 + C16985 * C379 + C16980 * C385) *
                          C378 -
                      ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                        C16979 * C145 + C16983 * C134 + C16978 * C144) *
                           C50977 +
                       (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                        C16979 * C131 + C16983 * C123 + C16978 * C130) *
                           C377) +
                      (C16983 * C391 + C16978 * C399 + C16984 * C390 +
                       C16979 * C398 + C16985 * C389 + C16980 * C397) *
                          C50788) *
                         C16981 +
                     ((C18719 + C18720 + C18721) * C378 -
                      ((C17180 + C17179 + C17178) * C50977 +
                       (C17177 + C17176 + C17175) * C377) +
                      (C18722 + C18723 + C18724) * C50788) *
                         C50885) *
                        C50847 * C1169 +
                    (((C17175 + C17176 + C17177) * C377 +
                      (C17178 + C17179 + C17180) * C50977 -
                      (C18721 + C18720 + C18719) * C378 -
                      (C18724 + C18723 + C18722) * C50788) *
                         C16981 +
                     ((C17509 + C17510 + C17511) * C377 +
                      (C17512 + C17513 + C17514) * C50977 -
                      (C16985 * C715 + C16980 * C727 + C16984 * C716 +
                       C16979 * C728 + C16983 * C717 + C16978 * C729) *
                          C378 -
                      (C16985 * C731 + C16980 * C739 + C16984 * C732 +
                       C16979 * C740 + C16983 * C733 + C16978 * C741) *
                          C50788) *
                         C50885) *
                        C50847 * C50762) *
                       C50719)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19767 * C122 + C50687 * C129) * C377 +
                       (C19767 * C133 + C50687 * C143) * C50977 -
                       C22193 * C378 - C22194 * C50788) *
                          C16981 +
                      (C20337 + C20338 - C20371 - C20372) * C50885) *
                         C5105 +
                     ((C22193 * C377 + C22194 * C50977 - C22195 * C378 -
                       C22196 * C50788) *
                          C16981 +
                      (C22613 + C22614 - C22615 - C22616) * C50885) *
                         C5106 +
                     ((C22195 * C377 + C22196 * C50977 - C22799 * C378 -
                       C22800 * C50788) *
                          C16981 +
                      (C22617 + C22618 - C22637 - C22638) * C50885) *
                         C5107) *
                        C1169 +
                    (((C20371 - (C20338 + C20337) + C20372) * C16981 +
                      (C20373 - (C20344 + C20343) + C20374) * C50885) *
                         C5105 +
                     ((C22615 - (C22614 + C22613) + C22616) * C16981 +
                      (C22623 - (C22624 + C22625) + C22626) * C50885) *
                         C5106 +
                     ((C22637 - (C22618 + C22617) + C22638) * C16981 +
                      (C22639 - (C22629 + C22630) + C22640) * C50885) *
                         C5107) *
                        C50762) *
                       C1275 +
                   ((((C22197 * C378 -
                       ((C19767 * C134 + C50687 * C144) * C50977 +
                        (C19767 * C123 + C50687 * C130) * C377) +
                       C22198 * C50788) *
                          C16981 +
                      (C21039 - (C21017 + C21018) + C21040) * C50885) *
                         C5105 +
                     ((C22199 * C378 - (C22198 * C50977 + C22197 * C377) +
                       C22200 * C50788) *
                          C16981 +
                      (C23567 - (C23568 + C23569) + C23570) * C50885) *
                         C5106 +
                     ((C22801 * C378 - (C22200 * C50977 + C22199 * C377) +
                       C22802 * C50788) *
                          C16981 +
                      (C23571 - (C23572 + C23573) + C23574) * C50885) *
                         C5107) *
                        C1169 +
                    (((C21018 + C21017 - C21039 - C21040) * C16981 +
                      (C21024 + C21023 - C21041 - C21042) * C50885) *
                         C5105 +
                     ((C23569 + C23568 - C23567 - C23570) * C16981 +
                      (C21035 * C377 + C21036 * C50977 - C22361 * C378 -
                       C22362 * C50788) *
                          C50885) *
                         C5106 +
                     ((C23573 + C23572 - C23571 - C23574) * C16981 +
                      (C22361 * C377 + C22362 * C50977 -
                       (C19767 * C3500 + C50687 * C3506) * C378 -
                       (C19767 * C3508 + C50687 * C3512) * C50788) *
                          C50885) *
                         C5107) *
                        C50762) *
                       C50719)) /
                     (p * q * std::sqrt(p + q));
    d2ee[108] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C19767 * C122 + C50687 * C129) * C1511 +
                      (C19767 * C133 + C50687 * C143) * C1509 -
                      (C19767 * C382 + C50687 * C388) * C1512 -
                      (C19767 * C392 + C50687 * C400) * C50788) *
                         C19763 +
                     (C21273 + C21274 - C21275 - C21276) * C19764 +
                     (C21277 + C21278 - C21279 - C21280) * C19765 +
                     (C21281 + C21282 - C21283 - C21284) * C19766) *
                        C50847 * C1169 +
                    ((C21275 - (C21274 + C21273) + C21276) * C19763 +
                     (C21279 - (C21278 + C21277) + C21280) * C19764 +
                     (C21283 - (C21282 + C21281) + C21284) * C19765 +
                     (C20369 * C1512 - (C20147 * C1509 + C20148 * C1511) +
                      C20370 * C50788) *
                         C19766) *
                        C50847 * C50762) *
                       C50968 +
                   ((((C19767 * C381 + C50687 * C387) * C1512 -
                      ((C19767 * C134 + C50687 * C144) * C1509 +
                       (C19767 * C123 + C50687 * C130) * C1511) +
                      (C19767 * C391 + C50687 * C399) * C50788) *
                         C19763 +
                     (C21285 - (C21286 + C21287) + C21288) * C19764 +
                     (C21289 - (C21290 + C21291) + C21292) * C19765 +
                     (C21293 - (C21294 + C21295) + C21296) * C19766) *
                        C50847 * C1169 +
                    ((C21287 + C21286 - C21285 - C21288) * C19763 +
                     (C21291 + C21290 - C21289 - C21292) * C19764 +
                     (C21295 + C21294 - C21293 - C21296) * C19765 +
                     (C20149 * C1511 + C20150 * C1509 -
                      (C19767 * C3005 + C50687 * C3011) * C1512 -
                      (C19767 * C3013 + C50687 * C3017) * C50788) *
                         C19766) *
                        C50847 * C50762) *
                       C50719)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                       C16979 * C130 + C16985 * C124 + C16980 * C131) *
                          C1511 +
                      (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                       C16979 * C144 + C16985 * C135 + C16980 * C145) *
                          C1509 -
                      (C16985 * C380 + C16980 * C386 + C16984 * C381 +
                       C16979 * C387 + C16983 * C382 + C16978 * C388) *
                          C1512 -
                      (C16985 * C390 + C16980 * C398 + C16984 * C391 +
                       C16979 * C399 + C16983 * C392 + C16978 * C400) *
                          C50788) *
                         C16981 +
                     ((C17169 + C17170 + C17171) * C1511 +
                      (C17172 + C17173 + C17174) * C1509 -
                      (C17801 + C17802 + C17803) * C1512 -
                      (C17804 + C17805 + C17806) * C50788) *
                         C50885) *
                        C50847 * C1169 +
                    (((C17803 + C17802 + C17801) * C1512 -
                      ((C17174 + C17173 + C17172) * C1509 +
                       (C17171 + C17170 + C17169) * C1511) +
                      (C17806 + C17805 + C17804) * C50788) *
                         C16981 +
                     ((C17807 + C17808 + C17809) * C1512 -
                      ((C17503 + C17504 + C17505) * C1509 +
                       (C17506 + C17507 + C17508) * C1511) +
                      (C17810 + C17811 + C17812) * C50788) *
                         C50885) *
                        C50847 * C50762) *
                       C50968 +
                   ((((C16983 * C381 + C16978 * C387 + C16984 * C380 +
                       C16979 * C386 + C16985 * C379 + C16980 * C385) *
                          C1512 -
                      ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                        C16979 * C145 + C16983 * C134 + C16978 * C144) *
                           C1509 +
                       (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                        C16979 * C131 + C16983 * C123 + C16978 * C130) *
                           C1511) +
                      (C16983 * C391 + C16978 * C399 + C16984 * C390 +
                       C16979 * C398 + C16985 * C389 + C16980 * C397) *
                          C50788) *
                         C16981 +
                     ((C18719 + C18720 + C18721) * C1512 -
                      ((C17180 + C17179 + C17178) * C1509 +
                       (C17177 + C17176 + C17175) * C1511) +
                      (C18722 + C18723 + C18724) * C50788) *
                         C50885) *
                        C50847 * C1169 +
                    (((C17175 + C17176 + C17177) * C1511 +
                      (C17178 + C17179 + C17180) * C1509 -
                      (C18721 + C18720 + C18719) * C1512 -
                      (C18724 + C18723 + C18722) * C50788) *
                         C16981 +
                     ((C17509 + C17510 + C17511) * C1511 +
                      (C17512 + C17513 + C17514) * C1509 -
                      (C16985 * C715 + C16980 * C727 + C16984 * C716 +
                       C16979 * C728 + C16983 * C717 + C16978 * C729) *
                          C1512 -
                      (C16985 * C731 + C16980 * C739 + C16984 * C732 +
                       C16979 * C740 + C16983 * C733 + C16978 * C741) *
                          C50788) *
                         C50885) *
                        C50847 * C50762) *
                       C50719)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19767 * C122 + C50687 * C129) * C1511 +
                       (C19767 * C133 + C50687 * C143) * C1509 -
                       C22193 * C1512 - C22194 * C50788) *
                          C16981 +
                      (C21273 + C21274 - C21275 - C21276) * C50885) *
                         C5105 +
                     ((C22193 * C1511 + C22194 * C1509 - C22195 * C1512 -
                       C22196 * C50788) *
                          C16981 +
                      (C23915 + C23916 - C23917 - C23918) * C50885) *
                         C5106 +
                     ((C22195 * C1511 + C22196 * C1509 - C22799 * C1512 -
                       C22800 * C50788) *
                          C16981 +
                      (C23919 + C23920 - C23921 - C23922) * C50885) *
                         C5107) *
                        C1169 +
                    (((C21275 - (C21274 + C21273) + C21276) * C16981 +
                      (C21279 - (C21278 + C21277) + C21280) * C50885) *
                         C5105 +
                     ((C23917 - (C23916 + C23915) + C23918) * C16981 +
                      (C20609 * C1512 - (C20365 * C1509 + C20364 * C1511) +
                       C20610 * C50788) *
                          C50885) *
                         C5106 +
                     ((C23921 - (C23920 + C23919) + C23922) * C16981 +
                      (C22635 * C1512 - (C20610 * C1509 + C20609 * C1511) +
                       C22636 * C50788) *
                          C50885) *
                         C5107) *
                        C50762) *
                       C50968 +
                   ((((C22197 * C1512 -
                       ((C19767 * C134 + C50687 * C144) * C1509 +
                        (C19767 * C123 + C50687 * C130) * C1511) +
                       C22198 * C50788) *
                          C16981 +
                      (C21285 - (C21286 + C21287) + C21288) * C50885) *
                         C5105 +
                     ((C22199 * C1512 - (C22198 * C1509 + C22197 * C1511) +
                       C22200 * C50788) *
                          C16981 +
                      (C23923 - (C23924 + C23925) + C23926) * C50885) *
                         C5106 +
                     ((C22801 * C1512 - (C22200 * C1509 + C22199 * C1511) +
                       C22802 * C50788) *
                          C16981 +
                      (C23927 - (C23928 + C23929) + C23930) * C50885) *
                         C5107) *
                        C1169 +
                    (((C21287 + C21286 - C21285 - C21288) * C16981 +
                      (C21291 + C21290 - C21289 - C21292) * C50885) *
                         C5105 +
                     ((C23925 + C23924 - C23923 - C23926) * C16981 +
                      (C21035 * C1511 + C21036 * C1509 - C22361 * C1512 -
                       C22362 * C50788) *
                          C50885) *
                         C5106 +
                     ((C23929 + C23928 - C23927 - C23930) * C16981 +
                      (C22361 * C1511 + C22362 * C1509 -
                       (C19767 * C3500 + C50687 * C3506) * C1512 -
                       (C19767 * C3508 + C50687 * C3512) * C50788) *
                          C50885) *
                         C5107) *
                        C50762) *
                       C50719)) /
                     (p * q * std::sqrt(p + q));
    d2ee[109] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C19767 * C122 + C50687 * C129) * C1511 +
                     (C19767 * C133 + C50687 * C143) * C1509 -
                     (C19767 * C382 + C50687 * C388) * C1512 -
                     (C19767 * C392 + C50687 * C400) * C50788) *
                        C19763 +
                    (C21273 + C21274 - C21275 - C21276) * C19764 +
                    C21631 * C19765 + C21632 * C19766) *
                       C50847 * C51022 +
                   ((C21275 - (C21274 + C21273) + C21276) * C19763 +
                    (C21279 - (C21278 + C21277) + C21280) * C19764 +
                    (C21283 - (C21282 + C21281) + C21284) * C19765 +
                    (C21625 - (C21626 + C21627) + C21628) * C19766) *
                       C50847 * C51009 +
                   (C21631 * C19763 + C21632 * C19764 +
                    (C21627 + C21626 - C21625 - C21628) * C19765 +
                    (C20231 * C1511 + C20232 * C1509 -
                     (C19767 * C20332 + C50687 * C20333) * C1512 -
                     (C19767 * C20334 + C50687 * C20335) * C50788) *
                        C19766) *
                       C50847 * C1274) *
                  C50714) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                      C16979 * C130 + C16985 * C124 + C16980 * C131) *
                         C1511 +
                     (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                      C16979 * C144 + C16985 * C135 + C16980 * C145) *
                         C1509 -
                     (C16985 * C380 + C16980 * C386 + C16984 * C381 +
                      C16979 * C387 + C16983 * C382 + C16978 * C388) *
                         C1512 -
                     (C16985 * C390 + C16980 * C398 + C16984 * C391 +
                      C16979 * C399 + C16983 * C392 + C16978 * C400) *
                         C50788) *
                        C16981 +
                    ((C17169 + C17170 + C17171) * C1511 +
                     (C17172 + C17173 + C17174) * C1509 -
                     (C17801 + C17802 + C17803) * C1512 -
                     (C17804 + C17805 + C17806) * C50788) *
                        C50885) *
                       C50847 * C51022 +
                   (((C17803 + C17802 + C17801) * C1512 -
                     ((C17174 + C17173 + C17172) * C1509 +
                      (C17171 + C17170 + C17169) * C1511) +
                     (C17806 + C17805 + C17804) * C50788) *
                        C16981 +
                    ((C17807 + C17808 + C17809) * C1512 -
                     ((C17503 + C17504 + C17505) * C1509 +
                      (C17506 + C17507 + C17508) * C1511) +
                     (C17810 + C17811 + C17812) * C50788) *
                        C50885) *
                       C50847 * C51009 +
                   (((C17508 + C17507 + C17506) * C1511 +
                     (C17505 + C17504 + C17503) * C1509 -
                     (C17809 + C17808 + C17807) * C1512 -
                     (C17812 + C17811 + C17810) * C50788) *
                        C16981 +
                    ((C17625 + C17626 + C17627) * C1511 +
                     (C17628 + C17629 + C17630) * C1509 -
                     (C16985 * C4000 + C16980 * C4001 + C16984 * C3004 +
                      C16979 * C3008 + C16983 * C3003 + C16978 * C3007) *
                         C1512 -
                     (C16985 * C4002 + C16980 * C4003 + C16984 * C3010 +
                      C16979 * C3016 + C16983 * C3009 + C16978 * C3015) *
                         C50788) *
                        C50885) *
                       C50847 * C1274) *
                  C50714) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C19767 * C122 + C50687 * C129) * C1511 +
                      (C19767 * C133 + C50687 * C143) * C1509 - C22193 * C1512 -
                      C22194 * C50788) *
                         C16981 +
                     (C21273 + C21274 - C21275 - C21276) * C50885) *
                        C5105 +
                    ((C22193 * C1511 + C22194 * C1509 - C22195 * C1512 -
                      C22196 * C50788) *
                         C16981 +
                     (C23915 + C23916 - C23917 - C23918) * C50885) *
                        C5106 +
                    ((C22195 * C1511 + C22196 * C1509 - C22799 * C1512 -
                      C22800 * C50788) *
                         C16981 +
                     (C23919 + C23920 - C23921 - C23922) * C50885) *
                        C5107) *
                       C51022 +
                   (((C21275 - (C21274 + C21273) + C21276) * C16981 +
                     (C21279 - (C21278 + C21277) + C21280) * C50885) *
                        C5105 +
                    ((C23917 - (C23916 + C23915) + C23918) * C16981 +
                     (C24417 - (C24418 + C24419) + C24420) * C50885) *
                        C5106 +
                    ((C23921 - (C23920 + C23919) + C23922) * C16981 +
                     (C24421 - (C24422 + C24423) + C24424) * C50885) *
                        C5107) *
                       C51009 +
                   ((C21631 * C16981 + C21632 * C50885) * C5105 +
                    ((C24419 + C24418 - C24417 - C24420) * C16981 +
                     (C20367 * C1511 + C20368 * C1509 - C20611 * C1512 -
                      C20612 * C50788) *
                         C50885) *
                        C5106 +
                    ((C24423 + C24422 - C24421 - C24424) * C16981 +
                     (C20611 * C1511 + C20612 * C1509 -
                      (C19767 * C20684 + C50687 * C20685) * C1512 -
                      (C19767 * C20686 + C50687 * C20687) * C50788) *
                         C50885) *
                        C5107) *
                       C1274) *
                  C50714) /
                     (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C1744 +
            (C19767 * C133 + C50687 * C143) * C51023 -
            (C19767 * C382 + C50687 * C388) * C1745 -
            (C19767 * C392 + C50687 * C400) * C51012 +
            (C19767 * C847 + C50687 * C852) * C1746 +
            (C19767 * C856 + C50687 * C862) * C1743) *
               C19763 +
           (C21731 + C21732 - C21733 - C21734 + C21735 + C21736) * C19764 +
           (C21737 + C21738 - C21739 - C21740 + C21741 + C21742) * C19765 +
           (C21743 + C21744 - C21745 - C21746 + C21747 + C21748) * C19766) *
              C50847 * C1169 +
          ((C21733 - (C21732 + C21731) + C21734 - C21735 - C21736) * C19763 +
           (C21739 - (C21738 + C21737) + C21740 - C21741 - C21742) * C19764 +
           (C21745 - (C21744 + C21743) + C21746 - C21747 - C21748) * C19765 +
           (C20369 * C1745 - (C20147 * C51023 + C20148 * C1744) +
            C20370 * C51012 - (C19767 * C20578 + C50687 * C20579) * C1746 -
            (C19767 * C20580 + C50687 * C20581) * C1743) *
               C19766) *
              C50847 * C50762) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C1744 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C51023 -
            (C16985 * C380 + C16980 * C386 + C16984 * C381 + C16979 * C387 +
             C16983 * C382 + C16978 * C388) *
                C1745 -
            (C16985 * C390 + C16980 * C398 + C16984 * C391 + C16979 * C399 +
             C16983 * C392 + C16978 * C400) *
                C51012 +
            (C16983 * C847 + C16978 * C852 + C16984 * C848 + C16979 * C853 +
             C16985 * C849 + C16980 * C854) *
                C1746 +
            (C16983 * C856 + C16978 * C862 + C16984 * C857 + C16979 * C863 +
             C16985 * C858 + C16980 * C864) *
                C1743) *
               C16981 +
           ((C17169 + C17170 + C17171) * C1744 +
            (C17172 + C17173 + C17174) * C51023 -
            (C17801 + C17802 + C17803) * C1745 -
            (C17804 + C17805 + C17806) * C51012 +
            (C18117 + C18118 + C18119) * C1746 +
            (C18120 + C18121 + C18122) * C1743) *
               C50885) *
              C50847 * C1169 +
          (((C17803 + C17802 + C17801) * C1745 -
            ((C17174 + C17173 + C17172) * C51023 +
             (C17171 + C17170 + C17169) * C1744) +
            (C17806 + C17805 + C17804) * C51012 -
            (C18119 + C18118 + C18117) * C1746 -
            (C18122 + C18121 + C18120) * C1743) *
               C16981 +
           ((C17807 + C17808 + C17809) * C1745 -
            ((C17503 + C17504 + C17505) * C51023 +
             (C17506 + C17507 + C17508) * C1744) +
            (C17810 + C17811 + C17812) * C51012 -
            (C16985 * C3212 + C16980 * C3217 + C16984 * C3211 + C16979 * C3214 +
             C16983 * C3210 + C16978 * C3213) *
                C1746 -
            (C16985 * C3218 + C16980 * C3221 + C16984 * C3216 + C16979 * C3220 +
             C16983 * C3215 + C16978 * C3219) *
                C1743) *
               C50885) *
              C50847 * C50762) *
         C50714) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C1744 +
             (C19767 * C133 + C50687 * C143) * C51023 - C22193 * C1745 -
             C22194 * C51012 + C22195 * C1746 + C22196 * C1743) *
                C16981 +
            (C21731 + C21732 - C21733 - C21734 + C21735 + C21736) * C50885) *
               C5105 +
           ((C22193 * C1744 + C22194 * C51023 - C22195 * C1745 -
             C22196 * C51012 + C22799 * C1746 + C22800 * C1743) *
                C16981 +
            (C24571 + C24572 - C24573 - C24574 + C24575 + C24576) * C50885) *
               C5106 +
           ((C22195 * C1744 + C22196 * C51023 - C22799 * C1745 -
             C22800 * C51012 + C23079 * C1746 + C23080 * C1743) *
                C16981 +
            (C24577 + C24578 - C24579 - C24580 + C24581 + C24582) * C50885) *
               C5107) *
              C1169 +
          (((C21733 - (C21732 + C21731) + C21734 - C21735 - C21736) * C16981 +
            (C21739 - (C21738 + C21737) + C21740 - C21741 - C21742) * C50885) *
               C5105 +
           ((C24573 - (C24572 + C24571) + C24574 - C24575 - C24576) * C16981 +
            (C20609 * C1745 - (C20365 * C51023 + C20364 * C1744) +
             C20610 * C51012 - C22635 * C1746 - C22636 * C1743) *
                C50885) *
               C5106 +
           ((C24579 - (C24578 + C24577) + C24580 - C24581 - C24582) * C16981 +
            (C22635 * C1745 - (C20610 * C51023 + C20609 * C1744) +
             C22636 * C51012 - (C19767 * C22950 + C50687 * C22951) * C1746 -
             (C19767 * C22952 + C50687 * C22953) * C1743) *
                C50885) *
               C5107) *
              C50762) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
                 C16985 * C124 + C16980 * C131) *
                    C121 +
                (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
                 C16985 * C135 + C16980 * C145) *
                    C50776) *
                   C16981 +
               ((C16983 * C256 + C16978 * C266 + C16984 * C255 + C16979 * C265 +
                 C16985 * C254 + C16980 * C264) *
                    C121 +
                (C16983 * C262 + C16978 * C274 + C16984 * C261 + C16979 * C273 +
                 C16985 * C260 + C16980 * C272) *
                    C50776) *
                   C50885) *
                  C50847 * C50746 * C113 -
              (((C16985 * C259 + C16980 * C271 + C16984 * C260 + C16979 * C272 +
                 C16983 * C261 + C16978 * C273) *
                    C50776 +
                (C16985 * C253 + C16980 * C263 + C16984 * C254 + C16979 * C264 +
                 C16983 * C255 + C16978 * C265) *
                    C121) *
                   C50885 +
               ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
                 C16983 * C134 + C16978 * C144) *
                    C50776 +
                (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
                 C16983 * C123 + C16978 * C130) *
                    C121) *
                   C16981) *
                  C50847 * C50746 * C114 +
              (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
                 C16985 * C126 + C16980 * C138) *
                    C121 +
                (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
                 C16985 * C137 + C16980 * C147) *
                    C50776) *
                   C16981 +
               ((C16983 * C254 + C16978 * C264 + C16984 * C253 + C16979 * C263 +
                 C16985 * C257 + C16980 * C267) *
                    C121 +
                (C16983 * C260 + C16978 * C272 + C16984 * C259 + C16979 * C271 +
                 C16985 * C268 + C16980 * C275) *
                    C50776) *
                   C50885) *
                  C50847 * C50746 * C115 -
              (((C16985 * C269 + C16980 * C276 + C16984 * C268 + C16979 * C275 +
                 C16983 * C259 + C16978 * C271) *
                    C50776 +
                (C16985 * C258 + C16980 * C270 + C16984 * C257 + C16979 * C267 +
                 C16983 * C253 + C16978 * C263) *
                    C121) *
                   C50885 +
               ((C16985 * C140 + C16980 * C148 + C16984 * C137 + C16979 * C147 +
                 C16983 * C136 + C16978 * C146) *
                    C50776 +
                (C16985 * C127 + C16980 * C139 + C16984 * C126 + C16979 * C138 +
                 C16983 * C125 + C16978 * C132) *
                    C121) *
                   C16981) *
                  C50847 * C50746 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                  C16979 * C130 + C16985 * C124 + C16980 * C131) *
                     C121 +
                 (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                  C16979 * C144 + C16985 * C135 + C16980 * C145) *
                     C50776) *
                    C16981 +
                ((C17169 + C17170 + C17171) * C121 +
                 (C17172 + C17173 + C17174) * C50776) *
                    C50885) *
                   C50847 * C501 -
               (((C17503 + C17504 + C17505) * C50776 +
                 (C17506 + C17507 + C17508) * C121) *
                    C50885 +
                ((C17174 + C17173 + C17172) * C50776 +
                 (C17171 + C17170 + C17169) * C121) *
                    C16981) *
                   C50847 * C502 +
               (((C17508 + C17507 + C17506) * C121 +
                 (C17505 + C17504 + C17503) * C50776) *
                    C16981 +
                ((C16983 * C600 + C16978 * C608 + C16984 * C599 +
                  C16979 * C607 + C16985 * C598 + C16980 * C606) *
                     C121 +
                 (C16983 * C604 + C16978 * C612 + C16984 * C603 +
                  C16979 * C611 + C16985 * C602 + C16980 * C610) *
                     C50776) *
                    C50885) *
                   C50847 * C503) *
                  C50968 +
              ((((C17175 + C17176 + C17177) * C121 +
                 (C17178 + C17179 + C17180) * C50776) *
                    C16981 +
                ((C17509 + C17510 + C17511) * C121 +
                 (C17512 + C17513 + C17514) * C50776) *
                    C50885) *
                   C50847 * C502 -
               (((C17180 + C17179 + C17178) * C50776 +
                 (C17177 + C17176 + C17175) * C121) *
                    C50885 +
                ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                  C16979 * C145 + C16983 * C134 + C16978 * C144) *
                     C50776 +
                 (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                  C16979 * C131 + C16983 * C123 + C16978 * C130) *
                     C121) *
                    C16981) *
                   C50847 * C501 -
               (((C16985 * C601 + C16980 * C609 + C16984 * C602 +
                  C16979 * C610 + C16983 * C603 + C16978 * C611) *
                     C50776 +
                 (C16985 * C597 + C16980 * C605 + C16984 * C598 +
                  C16979 * C606 + C16983 * C599 + C16978 * C607) *
                     C121) *
                    C50885 +
                ((C17514 + C17513 + C17512) * C50776 +
                 (C17511 + C17510 + C17509) * C121) *
                    C16981) *
                   C50847 * C503) *
                  C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C844 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C841 -
            (C16985 * C380 + C16980 * C386 + C16984 * C381 + C16979 * C387 +
             C16983 * C382 + C16978 * C388) *
                C845 -
            (C16985 * C390 + C16980 * C398 + C16984 * C391 + C16979 * C399 +
             C16983 * C392 + C16978 * C400) *
                C842 +
            (C16983 * C847 + C16978 * C852 + C16984 * C848 + C16979 * C853 +
             C16985 * C849 + C16980 * C854) *
                C846 +
            (C16983 * C856 + C16978 * C862 + C16984 * C857 + C16979 * C863 +
             C16985 * C858 + C16980 * C864) *
                C843) *
               C16981 +
           ((C17169 + C17170 + C17171) * C844 +
            (C17172 + C17173 + C17174) * C841 -
            (C17801 + C17802 + C17803) * C845 -
            (C17804 + C17805 + C17806) * C842 +
            (C16983 * C968 + C16978 * C972 + C16984 * C967 + C16979 * C971 +
             C16985 * C966 + C16980 * C970) *
                C846 +
            (C16983 * C976 + C16978 * C980 + C16984 * C975 + C16979 * C979 +
             C16985 * C974 + C16980 * C978) *
                C843) *
               C50885) *
              C50847 * C50746 * C50968 +
          (((C16983 * C381 + C16978 * C387 + C16984 * C380 + C16979 * C386 +
             C16985 * C379 + C16980 * C385) *
                C845 -
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C841 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C844) +
            (C16983 * C391 + C16978 * C399 + C16984 * C390 + C16979 * C398 +
             C16985 * C389 + C16980 * C397) *
                C842 -
            (C16985 * C850 + C16980 * C855 + C16984 * C849 + C16979 * C854 +
             C16983 * C848 + C16978 * C853) *
                C846 -
            (C16985 * C859 + C16980 * C865 + C16984 * C858 + C16979 * C864 +
             C16983 * C857 + C16978 * C863) *
                C843) *
               C16981 +
           ((C16983 * C712 + C16978 * C720 + C16984 * C713 + C16979 * C721 +
             C16985 * C714 + C16980 * C722) *
                C845 -
            ((C17180 + C17179 + C17178) * C841 +
             (C17177 + C17176 + C17175) * C844) +
            (C16983 * C724 + C16978 * C736 + C16984 * C725 + C16979 * C737 +
             C16985 * C726 + C16980 * C738) *
                C842 -
            (C16985 * C965 + C16980 * C969 + C16984 * C966 + C16979 * C970 +
             C16983 * C967 + C16978 * C971) *
                C846 -
            (C16985 * C973 + C16980 * C977 + C16984 * C974 + C16979 * C978 +
             C16983 * C975 + C16978 * C979) *
                C843) *
               C50885) *
              C50847 * C50746 * C50719)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C121 +
            (C19767 * C133 + C50687 * C143) * C50776) *
               C19763 +
           ((C19767 * C256 + C50687 * C266) * C121 +
            (C19767 * C262 + C50687 * C274) * C50776) *
               C19764 +
           ((C19767 * C506 + C50687 * C511) * C121 +
            (C19767 * C515 + C50687 * C521) * C50776) *
               C19765 +
           ((C19767 * C600 + C50687 * C608) * C121 +
            (C19767 * C604 + C50687 * C612) * C50776) *
               C19766) *
              C50847 * C50746 * C113 -
          (((C19767 * C603 + C50687 * C611) * C50776 +
            (C19767 * C599 + C50687 * C607) * C121) *
               C19766 +
           ((C19767 * C516 + C50687 * C522) * C50776 +
            (C19767 * C507 + C50687 * C512) * C121) *
               C19765 +
           ((C19767 * C261 + C50687 * C273) * C50776 +
            (C19767 * C255 + C50687 * C265) * C121) *
               C19764 +
           ((C19767 * C134 + C50687 * C144) * C50776 +
            (C19767 * C123 + C50687 * C130) * C121) *
               C19763) *
              C50847 * C50746 * C114 +
          (((C19767 * C124 + C50687 * C131) * C121 +
            (C19767 * C135 + C50687 * C145) * C50776) *
               C19763 +
           ((C19767 * C254 + C50687 * C264) * C121 +
            (C19767 * C260 + C50687 * C272) * C50776) *
               C19764 +
           ((C19767 * C508 + C50687 * C513) * C121 +
            (C19767 * C517 + C50687 * C523) * C50776) *
               C19765 +
           ((C19767 * C598 + C50687 * C606) * C121 +
            (C19767 * C602 + C50687 * C610) * C50776) *
               C19766) *
              C50847 * C50746 * C115 -
          (((C19767 * C601 + C50687 * C609) * C50776 +
            (C19767 * C597 + C50687 * C605) * C121) *
               C19766 +
           ((C19767 * C518 + C50687 * C524) * C50776 +
            (C19767 * C509 + C50687 * C514) * C121) *
               C19765 +
           ((C19767 * C259 + C50687 * C271) * C50776 +
            (C19767 * C253 + C50687 * C263) * C121) *
               C19764 +
           ((C19767 * C136 + C50687 * C146) * C50776 +
            (C19767 * C125 + C50687 * C132) * C121) *
               C19763) *
              C50847 * C50746 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C19763 +
            (C19921 + C19922) * C19764 + C20135 * C19765 + C20136 * C19766) *
               C50847 * C501 -
           ((C20151 + C20152) * C19766 + (C19926 + C19925) * C19765 +
            (C19924 + C19923) * C19764 + (C19922 + C19921) * C19763) *
               C50847 * C502 +
           (C20135 * C19763 + C20136 * C19764 + (C20152 + C20151) * C19765 +
            ((C19767 * C2833 + C50687 * C2837) * C121 +
             (C19767 * C2835 + C50687 * C2839) * C50776) *
                C19766) *
               C50847 * C503) *
              C50968 +
          (((C19927 + C19928) * C19763 + (C19929 + C19930) * C19764 +
            (C19931 + C19932) * C19765 + (C20153 + C20154) * C19766) *
               C50847 * C502 -
           (C20145 * C19766 + C20146 * C19765 + (C19928 + C19927) * C19764 +
            ((C19767 * C134 + C50687 * C144) * C50776 +
             (C19767 * C123 + C50687 * C130) * C121) *
                C19763) *
               C50847 * C501 -
           (((C19767 * C2834 + C50687 * C2838) * C50776 +
             (C19767 * C2832 + C50687 * C2836) * C121) *
                C19766 +
            (C20154 + C20153) * C19765 + C20145 * C19764 + C20146 * C19763) *
               C50847 * C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C844 +
            (C19767 * C133 + C50687 * C143) * C841 -
            (C19767 * C382 + C50687 * C388) * C845 -
            (C19767 * C392 + C50687 * C400) * C842 +
            (C19767 * C847 + C50687 * C852) * C846 +
            (C19767 * C856 + C50687 * C862) * C843) *
               C19763 +
           (C19903 * C844 + C19904 * C841 - C20361 * C845 - C20362 * C842 +
            (C19767 * C968 + C50687 * C972) * C846 +
            (C19767 * C976 + C50687 * C980) * C843) *
               C19764 +
           (C19905 * C844 + C19906 * C841 - C20364 * C845 - C20365 * C842 +
            (C19767 * C3210 + C50687 * C3213) * C846 +
            (C19767 * C3215 + C50687 * C3219) * C843) *
               C19765 +
           (C19907 * C844 + C19908 * C841 - C20367 * C845 - C20368 * C842 +
            (C19767 * C3369 + C50687 * C3371) * C846 +
            (C19767 * C3373 + C50687 * C3375) * C843) *
               C19766) *
              C50847 * C50746 * C50968 +
          (((C19767 * C381 + C50687 * C387) * C845 -
            ((C19767 * C134 + C50687 * C144) * C841 +
             (C19767 * C123 + C50687 * C130) * C844) +
            (C19767 * C391 + C50687 * C399) * C842 -
            (C19767 * C848 + C50687 * C853) * C846 -
            (C19767 * C857 + C50687 * C863) * C843) *
               C19763 +
           ((C19767 * C712 + C50687 * C720) * C845 -
            (C19910 * C841 + C19909 * C844) +
            (C19767 * C724 + C50687 * C736) * C842 -
            (C19767 * C967 + C50687 * C971) * C846 -
            (C19767 * C975 + C50687 * C979) * C843) *
               C19764 +
           ((C19767 * C717 + C50687 * C729) * C845 -
            (C19912 * C841 + C19911 * C844) +
            (C19767 * C733 + C50687 * C741) * C842 -
            (C19767 * C3211 + C50687 * C3214) * C846 -
            (C19767 * C3216 + C50687 * C3220) * C843) *
               C19765 +
           ((C19767 * C3004 + C50687 * C3008) * C845 -
            (C19914 * C841 + C19913 * C844) +
            (C19767 * C3010 + C50687 * C3016) * C842 -
            (C19767 * C3368 + C50687 * C3370) * C846 -
            (C19767 * C3372 + C50687 * C3374) * C843) *
               C19766) *
              C50847 * C50746 * C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C19767 * C122 + C50687 * C129) * C121 +
                                 (C19767 * C133 + C50687 * C143) * C50776) *
                                    C16981 +
                                (C19921 + C19922) * C50885) *
                                   C5105 +
                               (((C19767 * C382 + C50687 * C388) * C121 +
                                 (C19767 * C392 + C50687 * C400) * C50776) *
                                    C16981 +
                                (C20361 * C121 + C20362 * C50776) * C50885) *
                                   C5106 +
                               (((C19767 * C847 + C50687 * C852) * C121 +
                                 (C19767 * C856 + C50687 * C862) * C50776) *
                                    C16981 +
                                (C20607 * C121 + C20608 * C50776) * C50885) *
                                   C5107) *
                                  C50746 * C113 -
                              ((((C19767 * C975 + C50687 * C979) * C50776 +
                                 (C19767 * C967 + C50687 * C971) * C121) *
                                    C50885 +
                                ((C19767 * C857 + C50687 * C863) * C50776 +
                                 (C19767 * C848 + C50687 * C853) * C121) *
                                    C16981) *
                                   C5107 +
                               ((C21034 * C50776 + C21033 * C121) * C50885 +
                                ((C19767 * C391 + C50687 * C399) * C50776 +
                                 (C19767 * C381 + C50687 * C387) * C121) *
                                    C16981) *
                                   C5106 +
                               ((C19928 + C19927) * C50885 +
                                ((C19767 * C134 + C50687 * C144) * C50776 +
                                 (C19767 * C123 + C50687 * C130) * C121) *
                                    C16981) *
                                   C5105) *
                                  C50746 * C114 +
                              ((((C19767 * C124 + C50687 * C131) * C121 +
                                 (C19767 * C135 + C50687 * C145) * C50776) *
                                    C16981 +
                                (C19933 + C19934) * C50885) *
                                   C5105 +
                               (((C19767 * C380 + C50687 * C386) * C121 +
                                 (C19767 * C390 + C50687 * C398) * C50776) *
                                    C16981 +
                                ((C19767 * C713 + C50687 * C721) * C121 +
                                 (C19767 * C725 + C50687 * C737) * C50776) *
                                    C50885) *
                                   C5106 +
                               (((C19767 * C849 + C50687 * C854) * C121 +
                                 (C19767 * C858 + C50687 * C864) * C50776) *
                                    C16981 +
                                ((C19767 * C966 + C50687 * C970) * C121 +
                                 (C19767 * C974 + C50687 * C978) * C50776) *
                                    C50885) *
                                   C5107) *
                                  C50746 * C115 -
                              ((((C19767 * C973 + C50687 * C977) * C50776 +
                                 (C19767 * C965 + C50687 * C969) * C121) *
                                    C50885 +
                                ((C19767 * C859 + C50687 * C865) * C50776 +
                                 (C19767 * C850 + C50687 * C855) * C121) *
                                    C16981) *
                                   C5107 +
                               (((C19767 * C726 + C50687 * C738) * C50776 +
                                 (C19767 * C714 + C50687 * C722) * C121) *
                                    C50885 +
                                ((C19767 * C389 + C50687 * C397) * C50776 +
                                 (C19767 * C379 + C50687 * C385) * C121) *
                                    C16981) *
                                   C5106 +
                               (((C19767 * C259 + C50687 * C271) * C50776 +
                                 (C19767 * C253 + C50687 * C263) * C121) *
                                    C50885 +
                                ((C19767 * C136 + C50687 * C146) * C50776 +
                                 (C19767 * C125 + C50687 * C132) * C121) *
                                    C16981) *
                                   C5105) *
                                  C50746 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C16981 +
             (C19921 + C19922) * C50885) *
                C5105 +
            ((C22193 * C121 + C22194 * C50776) * C16981 +
             (C21993 + C21994) * C50885) *
                C5106 +
            ((C22195 * C121 + C22196 * C50776) * C16981 +
             (C21995 + C21996) * C50885) *
                C5107) *
               C501 -
           (((C22351 + C22352) * C50885 + (C21996 + C21995) * C16981) * C5107 +
            ((C22353 + C22354) * C50885 + (C21994 + C21993) * C16981) * C5106 +
            ((C19924 + C19923) * C50885 + (C19922 + C19921) * C16981) * C5105) *
               C502 +
           ((C20135 * C16981 + C20136 * C50885) * C5105 +
            ((C22354 + C22353) * C16981 +
             (C20367 * C121 + C20368 * C50776) * C50885) *
                C5106 +
            ((C22352 + C22351) * C16981 +
             (C20611 * C121 + C20612 * C50776) * C50885) *
                C5107) *
               C503) *
              C50968 +
          ((((C19927 + C19928) * C16981 + (C19929 + C19930) * C50885) * C5105 +
            ((C21997 + C21998) * C16981 + (C22355 + C22356) * C50885) * C5106 +
            ((C22017 + C22018) * C16981 + (C22363 + C22364) * C50885) * C5107) *
               C502 -
           (((C22018 + C22017) * C50885 +
             (C22200 * C50776 + C22199 * C121) * C16981) *
                C5107 +
            ((C21998 + C21997) * C50885 +
             (C22198 * C50776 + C22197 * C121) * C16981) *
                C5106 +
            ((C19928 + C19927) * C50885 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C16981) *
                C5105) *
               C501 -
           ((((C19767 * C3372 + C50687 * C3374) * C50776 +
              (C19767 * C3368 + C50687 * C3370) * C121) *
                 C50885 +
             (C22364 + C22363) * C16981) *
                C5107 +
            ((C21038 * C50776 + C21037 * C121) * C50885 +
             (C22356 + C22355) * C16981) *
                C5106 +
            (C20145 * C50885 + C20146 * C16981) * C5105) *
               C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C844 +
             (C19767 * C133 + C50687 * C143) * C841 - C22193 * C845 -
             C22194 * C842 + C22195 * C846 + C22196 * C843) *
                C16981 +
            (C20583 + C20584 - C20585 - C20586 + C20613 + C20614) * C50885) *
               C5105 +
           ((C22193 * C844 + C22194 * C841 - C22195 * C845 - C22196 * C842 +
             C22799 * C846 + C22800 * C843) *
                C16981 +
            (C20361 * C844 + C20362 * C841 - C20607 * C845 - C20608 * C842 +
             C22633 * C846 + C22634 * C843) *
                C50885) *
               C5106 +
           ((C22195 * C844 + C22196 * C841 - C22799 * C845 - C22800 * C842 +
             (C19767 * C6008 + C50687 * C6011) * C846 +
             (C19767 * C6013 + C50687 * C6017) * C843) *
                C16981 +
            (C20607 * C844 + C20608 * C841 - C22633 * C845 - C22634 * C842 +
             (C19767 * C6195 + C50687 * C6197) * C846 +
             (C19767 * C6199 + C50687 * C6201) * C843) *
                C50885) *
               C5107) *
              C50746 * C50968 +
          (((C22197 * C845 -
             ((C19767 * C134 + C50687 * C144) * C841 +
              (C19767 * C123 + C50687 * C130) * C844) +
             C22198 * C842 - C22199 * C846 - C22200 * C843) *
                C16981 +
            (C21033 * C845 - (C19910 * C841 + C19909 * C844) + C21034 * C842 -
             C22011 * C846 - C22012 * C843) *
                C50885) *
               C5105 +
           ((C22199 * C845 - (C22198 * C841 + C22197 * C844) + C22200 * C842 -
             C22801 * C846 - C22802 * C843) *
                C16981 +
            (C22011 * C845 - (C21034 * C841 + C21033 * C844) + C22012 * C842 -
             C22803 * C846 - C22804 * C843) *
                C50885) *
               C5106 +
           ((C22801 * C845 - (C22200 * C841 + C22199 * C844) + C22802 * C842 -
             (C19767 * C6009 + C50687 * C6012) * C846 -
             (C19767 * C6014 + C50687 * C6018) * C843) *
                C16981 +
            (C22803 * C845 - (C22012 * C841 + C22011 * C844) + C22804 * C842 -
             (C19767 * C6194 + C50687 * C6196) * C846 -
             (C19767 * C6198 + C50687 * C6200) * C843) *
                C50885) *
               C5107) *
              C50746 * C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                  C16979 * C130 + C16985 * C124 + C16980 * C131) *
                     C121 +
                 (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                  C16979 * C144 + C16985 * C135 + C16980 * C145) *
                     C50776) *
                    C16981 +
                ((C17169 + C17170 + C17171) * C121 +
                 (C17172 + C17173 + C17174) * C50776) *
                    C50885) *
                   C50847 * C50975 -
               (((C16985 * C517 + C16980 * C523 + C16984 * C516 +
                  C16979 * C522 + C16983 * C515 + C16978 * C521) *
                     C50776 +
                 (C16985 * C508 + C16980 * C513 + C16984 * C507 +
                  C16979 * C512 + C16983 * C506 + C16978 * C511) *
                     C121) *
                    C50885 +
                ((C17174 + C17173 + C17172) * C50776 +
                 (C17171 + C17170 + C17169) * C121) *
                    C16981) *
                   C50847 * C50762) *
                  C250 +
              ((((C17175 + C17176 + C17177) * C121 +
                 (C17178 + C17179 + C17180) * C50776) *
                    C16981 +
                ((C16983 * C507 + C16978 * C512 + C16984 * C508 +
                  C16979 * C513 + C16985 * C509 + C16980 * C514) *
                     C121 +
                 (C16983 * C516 + C16978 * C522 + C16984 * C517 +
                  C16979 * C523 + C16985 * C518 + C16980 * C524) *
                     C50776) *
                    C50885) *
                   C50847 * C50762 -
               (((C17180 + C17179 + C17178) * C50776 +
                 (C17177 + C17176 + C17175) * C121) *
                    C50885 +
                ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                  C16979 * C145 + C16983 * C134 + C16978 * C144) *
                     C50776 +
                 (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                  C16979 * C131 + C16983 * C123 + C16978 * C130) *
                     C121) *
                    C16981) *
                   C50847 * C50975) *
                  C251 +
              ((((C16983 * C124 + C16978 * C131 + C16984 * C125 +
                  C16979 * C132 + C16985 * C126 + C16980 * C138) *
                     C121 +
                 (C16983 * C135 + C16978 * C145 + C16984 * C136 +
                  C16979 * C146 + C16985 * C137 + C16980 * C147) *
                     C50776) *
                    C16981 +
                ((C17181 + C17182 + C17183) * C121 +
                 (C17184 + C17185 + C17186) * C50776) *
                    C50885) *
                   C50847 * C50975 -
               (((C16985 * C519 + C16980 * C525 + C16984 * C518 +
                  C16979 * C524 + C16983 * C517 + C16978 * C523) *
                     C50776 +
                 (C16985 * C510 + C16980 * C520 + C16984 * C509 +
                  C16979 * C514 + C16983 * C508 + C16978 * C513) *
                     C121) *
                    C50885 +
                ((C17186 + C17185 + C17184) * C50776 +
                 (C17183 + C17182 + C17181) * C121) *
                    C16981) *
                   C50847 * C50762) *
                  C252) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
                 C16985 * C124 + C16980 * C131) *
                    C121 +
                (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
                 C16985 * C135 + C16980 * C145) *
                    C50776) *
                   C16981 +
               ((C17169 + C17170 + C17171) * C121 +
                (C17172 + C17173 + C17174) * C50776) *
                   C50885) *
                  C50847 * C592 -
              (((C17503 + C17504 + C17505) * C50776 +
                (C17506 + C17507 + C17508) * C121) *
                   C50885 +
               ((C17174 + C17173 + C17172) * C50776 +
                (C17171 + C17170 + C17169) * C121) *
                   C16981) *
                  C50847 * C593 +
              (((C17508 + C17507 + C17506) * C121 +
                (C17505 + C17504 + C17503) * C50776) *
                   C16981 +
               ((C17625 + C17626 + C17627) * C121 +
                (C17628 + C17629 + C17630) * C50776) *
                   C50885) *
                  C50847 * C594 -
              (((C16985 * C2695 + C16980 * C2699 + C16984 * C2694 +
                 C16979 * C2698 + C16983 * C2693 + C16978 * C2697) *
                    C50776 +
                (C16985 * C2690 + C16980 * C2696 + C16984 * C2689 +
                 C16979 * C2692 + C16983 * C2688 + C16978 * C2691) *
                    C121) *
                   C50885 +
               ((C17630 + C17629 + C17628) * C50776 +
                (C17627 + C17626 + C17625) * C121) *
                   C16981) *
                  C50847 * C595) *
             C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C844 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C841 -
            (C16985 * C380 + C16980 * C386 + C16984 * C381 + C16979 * C387 +
             C16983 * C382 + C16978 * C388) *
                C845 -
            (C16985 * C390 + C16980 * C398 + C16984 * C391 + C16979 * C399 +
             C16983 * C392 + C16978 * C400) *
                C842 +
            (C16983 * C847 + C16978 * C852 + C16984 * C848 + C16979 * C853 +
             C16985 * C849 + C16980 * C854) *
                C846 +
            (C16983 * C856 + C16978 * C862 + C16984 * C857 + C16979 * C863 +
             C16985 * C858 + C16980 * C864) *
                C843) *
               C16981 +
           ((C17169 + C17170 + C17171) * C844 +
            (C17172 + C17173 + C17174) * C841 -
            (C17801 + C17802 + C17803) * C845 -
            (C17804 + C17805 + C17806) * C842 +
            (C18117 + C18118 + C18119) * C846 +
            (C18120 + C18121 + C18122) * C843) *
               C50885) *
              C50847 * C50975 +
          (((C17803 + C17802 + C17801) * C845 -
            ((C17174 + C17173 + C17172) * C841 +
             (C17171 + C17170 + C17169) * C844) +
            (C17806 + C17805 + C17804) * C842 -
            (C18119 + C18118 + C18117) * C846 -
            (C18122 + C18121 + C18120) * C843) *
               C16981 +
           ((C17807 + C17808 + C17809) * C845 -
            ((C17503 + C17504 + C17505) * C841 +
             (C17506 + C17507 + C17508) * C844) +
            (C17810 + C17811 + C17812) * C842 -
            (C16985 * C3212 + C16980 * C3217 + C16984 * C3211 + C16979 * C3214 +
             C16983 * C3210 + C16978 * C3213) *
                C846 -
            (C16985 * C3218 + C16980 * C3221 + C16984 * C3216 + C16979 * C3220 +
             C16983 * C3215 + C16978 * C3219) *
                C843) *
               C50885) *
              C50847 * C50762) *
         C50714) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C19763 +
            (C19921 + C19922) * C19764 + (C19923 + C19924) * C19765 +
            (C19925 + C19926) * C19766) *
               C50847 * C50975 -
           (((C19767 * C2693 + C50687 * C2697) * C50776 +
             (C19767 * C2688 + C50687 * C2691) * C121) *
                C19766 +
            (C19926 + C19925) * C19765 + (C19924 + C19923) * C19764 +
            (C19922 + C19921) * C19763) *
               C50847 * C50762) *
              C250 +
          (((C19927 + C19928) * C19763 + (C19929 + C19930) * C19764 +
            (C19931 + C19932) * C19765 +
            ((C19767 * C2689 + C50687 * C2692) * C121 +
             (C19767 * C2694 + C50687 * C2698) * C50776) *
                C19766) *
               C50847 * C50762 -
           ((C19932 + C19931) * C19766 + (C19930 + C19929) * C19765 +
            (C19928 + C19927) * C19764 +
            ((C19767 * C134 + C50687 * C144) * C50776 +
             (C19767 * C123 + C50687 * C130) * C121) *
                C19763) *
               C50847 * C50975) *
              C251 +
          ((((C19767 * C124 + C50687 * C131) * C121 +
             (C19767 * C135 + C50687 * C145) * C50776) *
                C19763 +
            (C19933 + C19934) * C19764 + (C19935 + C19936) * C19765 +
            (C19937 + C19938) * C19766) *
               C50847 * C50975 -
           (((C19767 * C2695 + C50687 * C2699) * C50776 +
             (C19767 * C2690 + C50687 * C2696) * C121) *
                C19766 +
            (C19938 + C19937) * C19765 + (C19936 + C19935) * C19764 +
            (C19934 + C19933) * C19763) *
               C50847 * C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C121 +
            (C19767 * C133 + C50687 * C143) * C50776) *
               C19763 +
           (C19921 + C19922) * C19764 + C20135 * C19765 + C20136 * C19766) *
              C50847 * C592 -
          (C20225 * C19766 + C20226 * C19765 + (C19924 + C19923) * C19764 +
           (C19922 + C19921) * C19763) *
              C50847 * C593 +
          (C20135 * C19763 + C20136 * C19764 + (C20152 + C20151) * C19765 +
           (C20233 + C20234) * C19766) *
              C50847 * C594 -
          (((C19767 * C20221 + C50687 * C20223) * C50776 +
            (C19767 * C20220 + C50687 * C20222) * C121) *
               C19766 +
           (C20234 + C20233) * C19765 + C20225 * C19764 + C20226 * C19763) *
              C50847 * C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C844 +
            (C19767 * C133 + C50687 * C143) * C841 -
            (C19767 * C382 + C50687 * C388) * C845 -
            (C19767 * C392 + C50687 * C400) * C842 +
            (C19767 * C847 + C50687 * C852) * C846 +
            (C19767 * C856 + C50687 * C862) * C843) *
               C19763 +
           (C20583 + C20584 - C20585 - C20586 + C20613 + C20614) * C19764 +
           (C20591 + C20592 - C20593 - C20594 + C20615 + C20616) * C19765 +
           (C20599 + C20600 - C20601 - C20602 + C20617 + C20618) * C19766) *
              C50847 * C50975 +
          ((C20585 - (C20584 + C20583) + C20586 - C20613 - C20614) * C19763 +
           (C20593 - (C20592 + C20591) + C20594 - C20615 - C20616) * C19764 +
           (C20601 - (C20600 + C20599) + C20602 - C20617 - C20618) * C19765 +
           (C20369 * C845 - (C20147 * C841 + C20148 * C844) + C20370 * C842 -
            (C19767 * C20578 + C50687 * C20579) * C846 -
            (C19767 * C20580 + C50687 * C20581) * C843) *
               C19766) *
              C50847 * C50762) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C16981 +
             (C19921 + C19922) * C50885) *
                C5105 +
            (((C19767 * C382 + C50687 * C388) * C121 +
              (C19767 * C392 + C50687 * C400) * C50776) *
                 C16981 +
             (C21993 + C21994) * C50885) *
                C5106 +
            (((C19767 * C847 + C50687 * C852) * C121 +
              (C19767 * C856 + C50687 * C862) * C50776) *
                 C16981 +
             (C21995 + C21996) * C50885) *
                C5107) *
               C50975 -
           (((C20610 * C50776 + C20609 * C121) * C50885 +
             (C21996 + C21995) * C16981) *
                C5107 +
            ((C20365 * C50776 + C20364 * C121) * C50885 +
             (C21994 + C21993) * C16981) *
                C5106 +
            ((C19924 + C19923) * C50885 + (C19922 + C19921) * C16981) * C5105) *
               C50762) *
              C250 +
          ((((C19927 + C19928) * C16981 + (C19929 + C19930) * C50885) * C5105 +
            ((C21997 + C21998) * C16981 +
             (C21035 * C121 + C21036 * C50776) * C50885) *
                C5106 +
            ((C22017 + C22018) * C16981 +
             ((C19767 * C3211 + C50687 * C3214) * C121 +
              (C19767 * C3216 + C50687 * C3220) * C50776) *
                 C50885) *
                C5107) *
               C50762 -
           (((C22018 + C22017) * C50885 +
             ((C19767 * C857 + C50687 * C863) * C50776 +
              (C19767 * C848 + C50687 * C853) * C121) *
                 C16981) *
                C5107 +
            ((C21998 + C21997) * C50885 +
             ((C19767 * C391 + C50687 * C399) * C50776 +
              (C19767 * C381 + C50687 * C387) * C121) *
                 C16981) *
                C5106 +
            ((C19928 + C19927) * C50885 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C16981) *
                C5105) *
               C50975) *
              C251 +
          (((((C19767 * C124 + C50687 * C131) * C121 +
              (C19767 * C135 + C50687 * C145) * C50776) *
                 C16981 +
             (C19933 + C19934) * C50885) *
                C5105 +
            (((C19767 * C380 + C50687 * C386) * C121 +
              (C19767 * C390 + C50687 * C398) * C50776) *
                 C16981 +
             (C22019 + C22020) * C50885) *
                C5106 +
            (((C19767 * C849 + C50687 * C854) * C121 +
              (C19767 * C858 + C50687 * C864) * C50776) *
                 C16981 +
             (C22021 + C22022) * C50885) *
                C5107) *
               C50975 -
           ((((C19767 * C3218 + C50687 * C3221) * C50776 +
              (C19767 * C3212 + C50687 * C3217) * C121) *
                 C50885 +
             (C22022 + C22021) * C16981) *
                C5107 +
            (((C19767 * C732 + C50687 * C740) * C50776 +
              (C19767 * C716 + C50687 * C728) * C121) *
                 C50885 +
             (C22020 + C22019) * C16981) *
                C5106 +
            ((C19936 + C19935) * C50885 + (C19934 + C19933) * C16981) * C5105) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C16981 +
            (C19921 + C19922) * C50885) *
               C5105 +
           ((C22193 * C121 + C22194 * C50776) * C16981 +
            (C21993 + C21994) * C50885) *
               C5106 +
           ((C22195 * C121 + C22196 * C50776) * C16981 +
            (C21995 + C21996) * C50885) *
               C5107) *
              C592 -
          (((C22351 + C22352) * C50885 + (C21996 + C21995) * C16981) * C5107 +
           ((C22353 + C22354) * C50885 + (C21994 + C21993) * C16981) * C5106 +
           ((C19924 + C19923) * C50885 + (C19922 + C19921) * C16981) * C5105) *
              C593 +
          ((C20135 * C16981 + C20136 * C50885) * C5105 +
           ((C22354 + C22353) * C16981 + (C22463 + C22464) * C50885) * C5106 +
           ((C22352 + C22351) * C16981 + (C22465 + C22466) * C50885) * C5107) *
              C594 -
          ((((C19767 * C20580 + C50687 * C20581) * C50776 +
             (C19767 * C20578 + C50687 * C20579) * C121) *
                C50885 +
            (C22466 + C22465) * C16981) *
               C5107 +
           ((C20370 * C50776 + C20369 * C121) * C50885 +
            (C22464 + C22463) * C16981) *
               C5106 +
           (C20225 * C50885 + C20226 * C16981) * C5105) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C844 +
             (C19767 * C133 + C50687 * C143) * C841 - C22193 * C845 -
             C22194 * C842 + C22195 * C846 + C22196 * C843) *
                C16981 +
            (C20583 + C20584 - C20585 - C20586 + C20613 + C20614) * C50885) *
               C5105 +
           ((C22193 * C844 + C22194 * C841 - C22195 * C845 - C22196 * C842 +
             C22799 * C846 + C22800 * C843) *
                C16981 +
            (C22955 + C22956 - C22957 - C22958 + C22959 + C22960) * C50885) *
               C5106 +
           ((C22195 * C844 + C22196 * C841 - C22799 * C845 - C22800 * C842 +
             (C19767 * C6008 + C50687 * C6011) * C846 +
             (C19767 * C6013 + C50687 * C6017) * C843) *
                C16981 +
            (C22961 + C22962 - C22963 - C22964 + C22971 + C22972) * C50885) *
               C5107) *
              C50975 +
          (((C20585 - (C20584 + C20583) + C20586 - C20613 - C20614) * C16981 +
            (C20593 - (C20592 + C20591) + C20594 - C20615 - C20616) * C50885) *
               C5105 +
           ((C22957 - (C22956 + C22955) + C22958 - C22959 - C22960) * C16981 +
            (C20609 * C845 - (C20365 * C841 + C20364 * C844) + C20610 * C842 -
             C22635 * C846 - C22636 * C843) *
                C50885) *
               C5106 +
           ((C22963 - (C22962 + C22961) + C22964 - C22971 - C22972) * C16981 +
            (C22635 * C845 - (C20610 * C841 + C20609 * C844) + C22636 * C842 -
             (C19767 * C22950 + C50687 * C22951) * C846 -
             (C19767 * C22952 + C50687 * C22953) * C843) *
                C50885) *
               C5107) *
              C50762) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
                 C16985 * C124 + C16980 * C131) *
                    C377 +
                (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
                 C16985 * C135 + C16980 * C145) *
                    C50977 -
                (C16985 * C380 + C16980 * C386 + C16984 * C381 + C16979 * C387 +
                 C16983 * C382 + C16978 * C388) *
                    C378 -
                (C16985 * C390 + C16980 * C398 + C16984 * C391 + C16979 * C399 +
                 C16983 * C392 + C16978 * C400) *
                    C50788) *
                   C16981 +
               ((C17169 + C17170 + C17171) * C377 +
                (C17172 + C17173 + C17174) * C50977 -
                (C16985 * C713 + C16980 * C721 + C16984 * C712 + C16979 * C720 +
                 C16983 * C711 + C16978 * C719) *
                    C378 -
                (C16985 * C725 + C16980 * C737 + C16984 * C724 + C16979 * C736 +
                 C16983 * C723 + C16978 * C735) *
                    C50788) *
                   C50885) *
                  C50847 * C50746 * C250 +
              (((C16983 * C381 + C16978 * C387 + C16984 * C380 + C16979 * C386 +
                 C16985 * C379 + C16980 * C385) *
                    C378 -
                ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                  C16979 * C145 + C16983 * C134 + C16978 * C144) *
                     C50977 +
                 (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                  C16979 * C131 + C16983 * C123 + C16978 * C130) *
                     C377) +
                (C16983 * C391 + C16978 * C399 + C16984 * C390 + C16979 * C398 +
                 C16985 * C389 + C16980 * C397) *
                    C50788) *
                   C16981 +
               ((C16983 * C712 + C16978 * C720 + C16984 * C713 + C16979 * C721 +
                 C16985 * C714 + C16980 * C722) *
                    C378 -
                ((C17180 + C17179 + C17178) * C50977 +
                 (C17177 + C17176 + C17175) * C377) +
                (C16983 * C724 + C16978 * C736 + C16984 * C725 + C16979 * C737 +
                 C16985 * C726 + C16980 * C738) *
                    C50788) *
                   C50885) *
                  C50847 * C50746 * C251 +
              (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
                 C16985 * C126 + C16980 * C138) *
                    C377 +
                (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
                 C16985 * C137 + C16980 * C147) *
                    C50977 -
                (C16985 * C383 + C16980 * C393 + C16984 * C379 + C16979 * C385 +
                 C16983 * C380 + C16978 * C386) *
                    C378 -
                (C16985 * C394 + C16980 * C401 + C16984 * C389 + C16979 * C397 +
                 C16983 * C390 + C16978 * C398) *
                    C50788) *
                   C16981 +
               ((C17181 + C17182 + C17183) * C377 +
                (C17184 + C17185 + C17186) * C50977 -
                (C16985 * C1407 + C16980 * C1408 + C16984 * C714 +
                 C16979 * C722 + C16983 * C713 + C16978 * C721) *
                    C378 -
                (C16985 * C1409 + C16980 * C1410 + C16984 * C726 +
                 C16979 * C738 + C16983 * C725 + C16978 * C737) *
                    C50788) *
                   C50885) *
                  C50847 * C50746 * C252) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
                 C16985 * C124 + C16980 * C131) *
                    C377 +
                (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
                 C16985 * C135 + C16980 * C145) *
                    C50977 -
                (C16985 * C380 + C16980 * C386 + C16984 * C381 + C16979 * C387 +
                 C16983 * C382 + C16978 * C388) *
                    C378 -
                (C16985 * C390 + C16980 * C398 + C16984 * C391 + C16979 * C399 +
                 C16983 * C392 + C16978 * C400) *
                    C50788) *
                   C16981 +
               ((C17169 + C17170 + C17171) * C377 +
                (C17172 + C17173 + C17174) * C50977 -
                (C17801 + C17802 + C17803) * C378 -
                (C17804 + C17805 + C17806) * C50788) *
                   C50885) *
                  C50847 * C501 +
              (((C17803 + C17802 + C17801) * C378 -
                ((C17174 + C17173 + C17172) * C50977 +
                 (C17171 + C17170 + C17169) * C377) +
                (C17806 + C17805 + C17804) * C50788) *
                   C16981 +
               ((C17807 + C17808 + C17809) * C378 -
                ((C17503 + C17504 + C17505) * C50977 +
                 (C17506 + C17507 + C17508) * C377) +
                (C17810 + C17811 + C17812) * C50788) *
                   C50885) *
                  C50847 * C502 +
              (((C17508 + C17507 + C17506) * C377 +
                (C17505 + C17504 + C17503) * C50977 -
                (C17809 + C17808 + C17807) * C378 -
                (C17812 + C17811 + C17810) * C50788) *
                   C16981 +
               ((C17625 + C17626 + C17627) * C377 +
                (C17628 + C17629 + C17630) * C50977 -
                (C16985 * C4000 + C16980 * C4001 + C16984 * C3004 +
                 C16979 * C3008 + C16983 * C3003 + C16978 * C3007) *
                    C378 -
                (C16985 * C4002 + C16980 * C4003 + C16984 * C3010 +
                 C16979 * C3016 + C16983 * C3009 + C16978 * C3015) *
                    C50788) *
                   C50885) *
                  C50847 * C503) *
             C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
            C16985 * C124 + C16980 * C131) *
               C1051 +
           (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
            C16985 * C135 + C16980 * C145) *
               C1047 -
           (C16985 * C380 + C16980 * C386 + C16984 * C381 + C16979 * C387 +
            C16983 * C382 + C16978 * C388) *
               C1052 -
           (C16985 * C390 + C16980 * C398 + C16984 * C391 + C16979 * C399 +
            C16983 * C392 + C16978 * C400) *
               C1048 +
           (C16983 * C847 + C16978 * C852 + C16984 * C848 + C16979 * C853 +
            C16985 * C849 + C16980 * C854) *
               C1053 +
           (C16983 * C856 + C16978 * C862 + C16984 * C857 + C16979 * C863 +
            C16985 * C858 + C16980 * C864) *
               C1049 -
           (C16985 * C1056 + C16980 * C1060 + C16984 * C1057 + C16979 * C1061 +
            C16983 * C1058 + C16978 * C1062) *
               C1054 -
           (C16985 * C1064 + C16980 * C1068 + C16984 * C1065 + C16979 * C1069 +
            C16983 * C1066 + C16978 * C1070) *
               C1050) *
              C16981 +
          ((C17169 + C17170 + C17171) * C1051 +
           (C17172 + C17173 + C17174) * C1047 -
           (C17801 + C17802 + C17803) * C1052 -
           (C17804 + C17805 + C17806) * C1048 +
           (C18117 + C18118 + C18119) * C1053 +
           (C18120 + C18121 + C18122) * C1049 -
           (C16985 * C6822 + C16980 * C6823 + C16984 * C3498 + C16979 * C3502 +
            C16983 * C3499 + C16978 * C3503) *
               C1054 -
           (C16985 * C6824 + C16980 * C6825 + C16984 * C3504 + C16979 * C3510 +
            C16983 * C3505 + C16978 * C3511) *
               C1050) *
              C50885) *
         C50847 * C50746 * C50714) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C377 +
            (C19767 * C133 + C50687 * C143) * C50977 -
            (C19767 * C382 + C50687 * C388) * C378 -
            (C19767 * C392 + C50687 * C400) * C50788) *
               C19763 +
           (C19903 * C377 + C19904 * C50977 -
            (C19767 * C711 + C50687 * C719) * C378 -
            (C19767 * C723 + C50687 * C735) * C50788) *
               C19764 +
           (C19905 * C377 + C19906 * C50977 -
            (C19767 * C718 + C50687 * C730) * C378 -
            (C19767 * C734 + C50687 * C742) * C50788) *
               C19765 +
           (C19907 * C377 + C19908 * C50977 -
            (C19767 * C3003 + C50687 * C3007) * C378 -
            (C19767 * C3009 + C50687 * C3015) * C50788) *
               C19766) *
              C50847 * C50746 * C250 +
          (((C19767 * C381 + C50687 * C387) * C378 -
            ((C19767 * C134 + C50687 * C144) * C50977 +
             (C19767 * C123 + C50687 * C130) * C377) +
            (C19767 * C391 + C50687 * C399) * C50788) *
               C19763 +
           ((C19767 * C712 + C50687 * C720) * C378 -
            (C19910 * C50977 + C19909 * C377) +
            (C19767 * C724 + C50687 * C736) * C50788) *
               C19764 +
           ((C19767 * C717 + C50687 * C729) * C378 -
            (C19912 * C50977 + C19911 * C377) +
            (C19767 * C733 + C50687 * C741) * C50788) *
               C19765 +
           ((C19767 * C3004 + C50687 * C3008) * C378 -
            (C19914 * C50977 + C19913 * C377) +
            (C19767 * C3010 + C50687 * C3016) * C50788) *
               C19766) *
              C50847 * C50746 * C251 +
          (((C19767 * C124 + C50687 * C131) * C377 +
            (C19767 * C135 + C50687 * C145) * C50977 -
            (C19767 * C380 + C50687 * C386) * C378 -
            (C19767 * C390 + C50687 * C398) * C50788) *
               C19763 +
           (C19915 * C377 + C19916 * C50977 -
            (C19767 * C713 + C50687 * C721) * C378 -
            (C19767 * C725 + C50687 * C737) * C50788) *
               C19764 +
           (C19917 * C377 + C19918 * C50977 -
            (C19767 * C716 + C50687 * C728) * C378 -
            (C19767 * C732 + C50687 * C740) * C50788) *
               C19765 +
           (C19919 * C377 + C19920 * C50977 -
            (C19767 * C4000 + C50687 * C4001) * C378 -
            (C19767 * C4002 + C50687 * C4003) * C50788) *
               C19766) *
              C50847 * C50746 * C252)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C377 +
            (C19767 * C133 + C50687 * C143) * C50977 -
            (C19767 * C382 + C50687 * C388) * C378 -
            (C19767 * C392 + C50687 * C400) * C50788) *
               C19763 +
           (C20337 + C20338 - C20371 - C20372) * C19764 + C20381 * C19765 +
           C20382 * C19766) *
              C50847 * C501 +
          ((C20371 - (C20338 + C20337) + C20372) * C19763 +
           (C20373 - (C20344 + C20343) + C20374) * C19764 +
           (C20375 - (C20350 + C20349) + C20376) * C19765 +
           (C20377 - (C20357 + C20358) + C20378) * C19766) *
              C50847 * C502 +
          (C20381 * C19763 + C20382 * C19764 +
           (C20358 + C20357 - C20377 - C20378) * C19765 +
           (C20231 * C377 + C20232 * C50977 -
            (C19767 * C20332 + C50687 * C20333) * C378 -
            (C19767 * C20334 + C50687 * C20335) * C50788) *
               C19766) *
              C50847 * C503) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C19767 * C122 + C50687 * C129) * C1051 +
           (C19767 * C133 + C50687 * C143) * C1047 -
           (C19767 * C382 + C50687 * C388) * C1052 -
           (C19767 * C392 + C50687 * C400) * C1048 +
           (C19767 * C847 + C50687 * C852) * C1053 +
           (C19767 * C856 + C50687 * C862) * C1049 -
           (C19767 * C1058 + C50687 * C1062) * C1054 -
           (C19767 * C1066 + C50687 * C1070) * C1050) *
              C19763 +
          (C19903 * C1051 + C19904 * C1047 - C20361 * C1052 - C20362 * C1048 +
           C20607 * C1053 + C20608 * C1049 -
           (C19767 * C3499 + C50687 * C3503) * C1054 -
           (C19767 * C3505 + C50687 * C3511) * C1050) *
              C19764 +
          (C19905 * C1051 + C19906 * C1047 - C20364 * C1052 - C20365 * C1048 +
           C20609 * C1053 + C20610 * C1049 -
           (C19767 * C3501 + C50687 * C3507) * C1054 -
           (C19767 * C3509 + C50687 * C3513) * C1050) *
              C19765 +
          (C19907 * C1051 + C19908 * C1047 - C20367 * C1052 - C20368 * C1048 +
           C20611 * C1053 + C20612 * C1049 -
           (C19767 * C20684 + C50687 * C20685) * C1054 -
           (C19767 * C20686 + C50687 * C20687) * C1050) *
              C19766) *
         C50847 * C50746 * C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C377 +
             (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
             C22194 * C50788) *
                C16981 +
            (C20337 + C20338 - C20371 - C20372) * C50885) *
               C5105 +
           ((C22193 * C377 + C22194 * C50977 - C22195 * C378 -
             C22196 * C50788) *
                C16981 +
            (C20361 * C377 + C20362 * C50977 - C20607 * C378 -
             C20608 * C50788) *
                C50885) *
               C5106 +
           ((C22195 * C377 + C22196 * C50977 -
             (C19767 * C1058 + C50687 * C1062) * C378 -
             (C19767 * C1066 + C50687 * C1070) * C50788) *
                C16981 +
            (C20607 * C377 + C20608 * C50977 -
             (C19767 * C3499 + C50687 * C3503) * C378 -
             (C19767 * C3505 + C50687 * C3511) * C50788) *
                C50885) *
               C5107) *
              C50746 * C250 +
          (((C22197 * C378 -
             ((C19767 * C134 + C50687 * C144) * C50977 +
              (C19767 * C123 + C50687 * C130) * C377) +
             C22198 * C50788) *
                C16981 +
            (C21039 - (C21017 + C21018) + C21040) * C50885) *
               C5105 +
           ((C22199 * C378 - (C22198 * C50977 + C22197 * C377) +
             C22200 * C50788) *
                C16981 +
            (C22011 * C378 - (C21034 * C50977 + C21033 * C377) +
             C22012 * C50788) *
                C50885) *
               C5106 +
           (((C19767 * C1057 + C50687 * C1061) * C378 -
             (C22200 * C50977 + C22199 * C377) +
             (C19767 * C1065 + C50687 * C1069) * C50788) *
                C16981 +
            ((C19767 * C3498 + C50687 * C3502) * C378 -
             (C22012 * C50977 + C22011 * C377) +
             (C19767 * C3504 + C50687 * C3510) * C50788) *
                C50885) *
               C5107) *
              C50746 * C251 +
          ((((C19767 * C124 + C50687 * C131) * C377 +
             (C19767 * C135 + C50687 * C145) * C50977 - C22201 * C378 -
             C22202 * C50788) *
                C16981 +
            (C19915 * C377 + C19916 * C50977 - C22013 * C378 -
             C22014 * C50788) *
                C50885) *
               C5105 +
           ((C22201 * C377 + C22202 * C50977 - C22203 * C378 -
             C22204 * C50788) *
                C16981 +
            (C22013 * C377 + C22014 * C50977 - C22015 * C378 -
             C22016 * C50788) *
                C50885) *
               C5106 +
           ((C22203 * C377 + C22204 * C50977 -
             (C19767 * C1056 + C50687 * C1060) * C378 -
             (C19767 * C1064 + C50687 * C1068) * C50788) *
                C16981 +
            (C22015 * C377 + C22016 * C50977 -
             (C19767 * C6822 + C50687 * C6823) * C378 -
             (C19767 * C6824 + C50687 * C6825) * C50788) *
                C50885) *
               C5107) *
              C50746 * C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C377 +
             (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
             C22194 * C50788) *
                C16981 +
            (C20337 + C20338 - C20371 - C20372) * C50885) *
               C5105 +
           ((C22193 * C377 + C22194 * C50977 - C22195 * C378 -
             C22196 * C50788) *
                C16981 +
            (C22613 + C22614 - C22615 - C22616) * C50885) *
               C5106 +
           ((C22195 * C377 + C22196 * C50977 -
             (C19767 * C1058 + C50687 * C1062) * C378 -
             (C19767 * C1066 + C50687 * C1070) * C50788) *
                C16981 +
            (C22617 + C22618 - C22637 - C22638) * C50885) *
               C5107) *
              C501 +
          (((C20371 - (C20338 + C20337) + C20372) * C16981 +
            (C20373 - (C20344 + C20343) + C20374) * C50885) *
               C5105 +
           ((C22615 - (C22614 + C22613) + C22616) * C16981 +
            (C22623 - (C22624 + C22625) + C22626) * C50885) *
               C5106 +
           ((C22637 - (C22618 + C22617) + C22638) * C16981 +
            (C22639 - (C22629 + C22630) + C22640) * C50885) *
               C5107) *
              C502 +
          ((C20381 * C16981 + C20382 * C50885) * C5105 +
           ((C22625 + C22624 - C22623 - C22626) * C16981 +
            (C20367 * C377 + C20368 * C50977 - C20611 * C378 -
             C20612 * C50788) *
                C50885) *
               C5106 +
           ((C22630 + C22629 - C22639 - C22640) * C16981 +
            (C20611 * C377 + C20612 * C50977 -
             (C19767 * C20684 + C50687 * C20685) * C378 -
             (C19767 * C20686 + C50687 * C20687) * C50788) *
                C50885) *
               C5107) *
              C503) *
         C50714) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C1051 +
            (C19767 * C133 + C50687 * C143) * C1047 - C22193 * C1052 -
            C22194 * C1048 + C22195 * C1053 + C22196 * C1049 - C22799 * C1054 -
            C22800 * C1050) *
               C16981 +
           (C19903 * C1051 + C19904 * C1047 - C20361 * C1052 - C20362 * C1048 +
            C20607 * C1053 + C20608 * C1049 - C22633 * C1054 - C22634 * C1050) *
               C50885) *
              C5105 +
          ((C22193 * C1051 + C22194 * C1047 - C22195 * C1052 - C22196 * C1048 +
            C22799 * C1053 + C22800 * C1049 - C23079 * C1054 - C23080 * C1050) *
               C16981 +
           (C20361 * C1051 + C20362 * C1047 - C20607 * C1052 - C20608 * C1048 +
            C22633 * C1053 + C22634 * C1049 - C22969 * C1054 - C22970 * C1050) *
               C50885) *
              C5106 +
          ((C22195 * C1051 + C22196 * C1047 - C22799 * C1052 - C22800 * C1048 +
            C23079 * C1053 + C23080 * C1049 -
            (C19767 * C6315 + C50687 * C6317) * C1054 -
            (C19767 * C6319 + C50687 * C6321) * C1050) *
               C16981 +
           (C20607 * C1051 + C20608 * C1047 - C22633 * C1052 - C22634 * C1048 +
            C22969 * C1053 + C22970 * C1049 -
            (C19767 * C23070 + C50687 * C23071) * C1054 -
            (C19767 * C23072 + C50687 * C23073) * C1050) *
               C50885) *
              C5107) *
         C50746 * C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[114] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C19767 * C122 + C50687 * C129) * C1511 +
                     (C19767 * C133 + C50687 * C143) * C1509 -
                     (C19767 * C382 + C50687 * C388) * C1512 -
                     (C19767 * C392 + C50687 * C400) * C50788) *
                        C19763 +
                    (C19903 * C1511 + C19904 * C1509 - C20361 * C1512 -
                     C20362 * C50788) *
                        C19764 +
                    (C19905 * C1511 + C19906 * C1509 - C20364 * C1512 -
                     C20365 * C50788) *
                        C19765 +
                    (C19907 * C1511 + C19908 * C1509 - C20367 * C1512 -
                     C20368 * C50788) *
                        C19766) *
                       C50847 * C50746 * C51021 +
                   (((C19767 * C381 + C50687 * C387) * C1512 -
                     ((C19767 * C134 + C50687 * C144) * C1509 +
                      (C19767 * C123 + C50687 * C130) * C1511) +
                     (C19767 * C391 + C50687 * C399) * C50788) *
                        C19763 +
                    (C21033 * C1512 - (C19910 * C1509 + C19909 * C1511) +
                     C21034 * C50788) *
                        C19764 +
                    (C21035 * C1512 - (C19912 * C1509 + C19911 * C1511) +
                     C21036 * C50788) *
                        C19765 +
                    (C21037 * C1512 - (C19914 * C1509 + C19913 * C1511) +
                     C21038 * C50788) *
                        C19766) *
                       C50847 * C50746 * C51006 +
                   (((C19767 * C124 + C50687 * C131) * C1511 +
                     (C19767 * C135 + C50687 * C145) * C1509 -
                     (C19767 * C380 + C50687 * C386) * C1512 -
                     (C19767 * C390 + C50687 * C398) * C50788) *
                        C19763 +
                    (C19915 * C1511 + C19916 * C1509 -
                     (C19767 * C713 + C50687 * C721) * C1512 -
                     (C19767 * C725 + C50687 * C737) * C50788) *
                        C19764 +
                    (C19917 * C1511 + C19918 * C1509 -
                     (C19767 * C716 + C50687 * C728) * C1512 -
                     (C19767 * C732 + C50687 * C740) * C50788) *
                        C19765 +
                    (C19919 * C1511 + C19920 * C1509 -
                     (C19767 * C4000 + C50687 * C4001) * C1512 -
                     (C19767 * C4002 + C50687 * C4003) * C50788) *
                        C19766) *
                       C50847 * C50746 * C1173)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                      C16979 * C130 + C16985 * C124 + C16980 * C131) *
                         C1511 +
                     (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                      C16979 * C144 + C16985 * C135 + C16980 * C145) *
                         C1509 -
                     (C16985 * C380 + C16980 * C386 + C16984 * C381 +
                      C16979 * C387 + C16983 * C382 + C16978 * C388) *
                         C1512 -
                     (C16985 * C390 + C16980 * C398 + C16984 * C391 +
                      C16979 * C399 + C16983 * C392 + C16978 * C400) *
                         C50788) *
                        C16981 +
                    ((C17169 + C17170 + C17171) * C1511 +
                     (C17172 + C17173 + C17174) * C1509 -
                     (C17801 + C17802 + C17803) * C1512 -
                     (C17804 + C17805 + C17806) * C50788) *
                        C50885) *
                       C50847 * C50746 * C51021 +
                   (((C16983 * C381 + C16978 * C387 + C16984 * C380 +
                      C16979 * C386 + C16985 * C379 + C16980 * C385) *
                         C1512 -
                     ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                       C16979 * C145 + C16983 * C134 + C16978 * C144) *
                          C1509 +
                      (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                       C16979 * C131 + C16983 * C123 + C16978 * C130) *
                          C1511) +
                     (C16983 * C391 + C16978 * C399 + C16984 * C390 +
                      C16979 * C398 + C16985 * C389 + C16980 * C397) *
                         C50788) *
                        C16981 +
                    ((C18719 + C18720 + C18721) * C1512 -
                     ((C17180 + C17179 + C17178) * C1509 +
                      (C17177 + C17176 + C17175) * C1511) +
                     (C18722 + C18723 + C18724) * C50788) *
                        C50885) *
                       C50847 * C50746 * C51006 +
                   (((C16983 * C124 + C16978 * C131 + C16984 * C125 +
                      C16979 * C132 + C16985 * C126 + C16980 * C138) *
                         C1511 +
                     (C16983 * C135 + C16978 * C145 + C16984 * C136 +
                      C16979 * C146 + C16985 * C137 + C16980 * C147) *
                         C1509 -
                     (C16985 * C383 + C16980 * C393 + C16984 * C379 +
                      C16979 * C385 + C16983 * C380 + C16978 * C386) *
                         C1512 -
                     (C16985 * C394 + C16980 * C401 + C16984 * C389 +
                      C16979 * C397 + C16983 * C390 + C16978 * C398) *
                         C50788) *
                        C16981 +
                    ((C17181 + C17182 + C17183) * C1511 +
                     (C17184 + C17185 + C17186) * C1509 -
                     (C16985 * C1407 + C16980 * C1408 + C16984 * C714 +
                      C16979 * C722 + C16983 * C713 + C16978 * C721) *
                         C1512 -
                     (C16985 * C1409 + C16980 * C1410 + C16984 * C726 +
                      C16979 * C738 + C16983 * C725 + C16978 * C737) *
                         C50788) *
                        C50885) *
                       C50847 * C50746 * C1173)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C19767 * C122 + C50687 * C129) * C1511 +
                      (C19767 * C133 + C50687 * C143) * C1509 - C22193 * C1512 -
                      C22194 * C50788) *
                         C16981 +
                     (C21273 + C21274 - C21275 - C21276) * C50885) *
                        C5105 +
                    ((C22193 * C1511 + C22194 * C1509 - C22195 * C1512 -
                      C22196 * C50788) *
                         C16981 +
                     (C20361 * C1511 + C20362 * C1509 - C20607 * C1512 -
                      C20608 * C50788) *
                         C50885) *
                        C5106 +
                    ((C22195 * C1511 + C22196 * C1509 - C22799 * C1512 -
                      C22800 * C50788) *
                         C16981 +
                     (C20607 * C1511 + C20608 * C1509 - C22633 * C1512 -
                      C22634 * C50788) *
                         C50885) *
                        C5107) *
                       C50746 * C51021 +
                   (((C22197 * C1512 -
                      ((C19767 * C134 + C50687 * C144) * C1509 +
                       (C19767 * C123 + C50687 * C130) * C1511) +
                      C22198 * C50788) *
                         C16981 +
                     (C21285 - (C21286 + C21287) + C21288) * C50885) *
                        C5105 +
                    ((C22199 * C1512 - (C22198 * C1509 + C22197 * C1511) +
                      C22200 * C50788) *
                         C16981 +
                     (C22011 * C1512 - (C21034 * C1509 + C21033 * C1511) +
                      C22012 * C50788) *
                         C50885) *
                        C5106 +
                    ((C22801 * C1512 - (C22200 * C1509 + C22199 * C1511) +
                      C22802 * C50788) *
                         C16981 +
                     (C22803 * C1512 - (C22012 * C1509 + C22011 * C1511) +
                      C22804 * C50788) *
                         C50885) *
                        C5107) *
                       C50746 * C51006 +
                   ((((C19767 * C124 + C50687 * C131) * C1511 +
                      (C19767 * C135 + C50687 * C145) * C1509 - C22201 * C1512 -
                      C22202 * C50788) *
                         C16981 +
                     (C19915 * C1511 + C19916 * C1509 - C22013 * C1512 -
                      C22014 * C50788) *
                         C50885) *
                        C5105 +
                    ((C22201 * C1511 + C22202 * C1509 - C22203 * C1512 -
                      C22204 * C50788) *
                         C16981 +
                     (C22013 * C1511 + C22014 * C1509 - C22015 * C1512 -
                      C22016 * C50788) *
                         C50885) *
                        C5106 +
                    ((C22203 * C1511 + C22204 * C1509 -
                      (C19767 * C1056 + C50687 * C1060) * C1512 -
                      (C19767 * C1064 + C50687 * C1068) * C50788) *
                         C16981 +
                     (C22015 * C1511 + C22016 * C1509 -
                      (C19767 * C6822 + C50687 * C6823) * C1512 -
                      (C19767 * C6824 + C50687 * C6825) * C50788) *
                         C50885) *
                        C5107) *
                       C50746 * C1173)) /
                     (p * q * std::sqrt(p + q));
    d2ee[115] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C19767 * C122 + C50687 * C129) * C1511 +
                      (C19767 * C133 + C50687 * C143) * C1509 -
                      (C19767 * C382 + C50687 * C388) * C1512 -
                      (C19767 * C392 + C50687 * C400) * C50788) *
                         C19763 +
                     (C21273 + C21274 - C21275 - C21276) * C19764 +
                     (C21277 + C21278 - C21279 - C21280) * C19765 +
                     (C21281 + C21282 - C21283 - C21284) * C19766) *
                        C50847 * C50975 +
                    ((C21275 - (C21274 + C21273) + C21276) * C19763 +
                     (C21279 - (C21278 + C21277) + C21280) * C19764 +
                     (C21283 - (C21282 + C21281) + C21284) * C19765 +
                     (C20369 * C1512 - (C20147 * C1509 + C20148 * C1511) +
                      C20370 * C50788) *
                         C19766) *
                        C50847 * C50762) *
                       C1275 +
                   ((((C19767 * C381 + C50687 * C387) * C1512 -
                      ((C19767 * C134 + C50687 * C144) * C1509 +
                       (C19767 * C123 + C50687 * C130) * C1511) +
                      (C19767 * C391 + C50687 * C399) * C50788) *
                         C19763 +
                     (C21285 - (C21286 + C21287) + C21288) * C19764 +
                     (C21289 - (C21290 + C21291) + C21292) * C19765 +
                     (C21293 - (C21294 + C21295) + C21296) * C19766) *
                        C50847 * C50975 +
                    ((C21287 + C21286 - C21285 - C21288) * C19763 +
                     (C21291 + C21290 - C21289 - C21292) * C19764 +
                     (C21295 + C21294 - C21293 - C21296) * C19765 +
                     (C20149 * C1511 + C20150 * C1509 -
                      (C19767 * C3005 + C50687 * C3011) * C1512 -
                      (C19767 * C3013 + C50687 * C3017) * C50788) *
                         C19766) *
                        C50847 * C50762) *
                       C50719)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                       C16979 * C130 + C16985 * C124 + C16980 * C131) *
                          C1511 +
                      (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                       C16979 * C144 + C16985 * C135 + C16980 * C145) *
                          C1509 -
                      (C16985 * C380 + C16980 * C386 + C16984 * C381 +
                       C16979 * C387 + C16983 * C382 + C16978 * C388) *
                          C1512 -
                      (C16985 * C390 + C16980 * C398 + C16984 * C391 +
                       C16979 * C399 + C16983 * C392 + C16978 * C400) *
                          C50788) *
                         C16981 +
                     ((C17169 + C17170 + C17171) * C1511 +
                      (C17172 + C17173 + C17174) * C1509 -
                      (C17801 + C17802 + C17803) * C1512 -
                      (C17804 + C17805 + C17806) * C50788) *
                         C50885) *
                        C50847 * C50975 +
                    (((C17803 + C17802 + C17801) * C1512 -
                      ((C17174 + C17173 + C17172) * C1509 +
                       (C17171 + C17170 + C17169) * C1511) +
                      (C17806 + C17805 + C17804) * C50788) *
                         C16981 +
                     ((C17807 + C17808 + C17809) * C1512 -
                      ((C17503 + C17504 + C17505) * C1509 +
                       (C17506 + C17507 + C17508) * C1511) +
                      (C17810 + C17811 + C17812) * C50788) *
                         C50885) *
                        C50847 * C50762) *
                       C1275 +
                   ((((C16983 * C381 + C16978 * C387 + C16984 * C380 +
                       C16979 * C386 + C16985 * C379 + C16980 * C385) *
                          C1512 -
                      ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                        C16979 * C145 + C16983 * C134 + C16978 * C144) *
                           C1509 +
                       (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                        C16979 * C131 + C16983 * C123 + C16978 * C130) *
                           C1511) +
                      (C16983 * C391 + C16978 * C399 + C16984 * C390 +
                       C16979 * C398 + C16985 * C389 + C16980 * C397) *
                          C50788) *
                         C16981 +
                     ((C18719 + C18720 + C18721) * C1512 -
                      ((C17180 + C17179 + C17178) * C1509 +
                       (C17177 + C17176 + C17175) * C1511) +
                      (C18722 + C18723 + C18724) * C50788) *
                         C50885) *
                        C50847 * C50975 +
                    (((C17175 + C17176 + C17177) * C1511 +
                      (C17178 + C17179 + C17180) * C1509 -
                      (C18721 + C18720 + C18719) * C1512 -
                      (C18724 + C18723 + C18722) * C50788) *
                         C16981 +
                     ((C17509 + C17510 + C17511) * C1511 +
                      (C17512 + C17513 + C17514) * C1509 -
                      (C16985 * C715 + C16980 * C727 + C16984 * C716 +
                       C16979 * C728 + C16983 * C717 + C16978 * C729) *
                          C1512 -
                      (C16985 * C731 + C16980 * C739 + C16984 * C732 +
                       C16979 * C740 + C16983 * C733 + C16978 * C741) *
                          C50788) *
                         C50885) *
                        C50847 * C50762) *
                       C50719)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19767 * C122 + C50687 * C129) * C1511 +
                       (C19767 * C133 + C50687 * C143) * C1509 -
                       C22193 * C1512 - C22194 * C50788) *
                          C16981 +
                      (C21273 + C21274 - C21275 - C21276) * C50885) *
                         C5105 +
                     ((C22193 * C1511 + C22194 * C1509 - C22195 * C1512 -
                       C22196 * C50788) *
                          C16981 +
                      (C23915 + C23916 - C23917 - C23918) * C50885) *
                         C5106 +
                     ((C22195 * C1511 + C22196 * C1509 - C22799 * C1512 -
                       C22800 * C50788) *
                          C16981 +
                      (C23919 + C23920 - C23921 - C23922) * C50885) *
                         C5107) *
                        C50975 +
                    (((C21275 - (C21274 + C21273) + C21276) * C16981 +
                      (C21279 - (C21278 + C21277) + C21280) * C50885) *
                         C5105 +
                     ((C23917 - (C23916 + C23915) + C23918) * C16981 +
                      (C20609 * C1512 - (C20365 * C1509 + C20364 * C1511) +
                       C20610 * C50788) *
                          C50885) *
                         C5106 +
                     ((C23921 - (C23920 + C23919) + C23922) * C16981 +
                      (C22635 * C1512 - (C20610 * C1509 + C20609 * C1511) +
                       C22636 * C50788) *
                          C50885) *
                         C5107) *
                        C50762) *
                       C1275 +
                   ((((C22197 * C1512 -
                       ((C19767 * C134 + C50687 * C144) * C1509 +
                        (C19767 * C123 + C50687 * C130) * C1511) +
                       C22198 * C50788) *
                          C16981 +
                      (C21285 - (C21286 + C21287) + C21288) * C50885) *
                         C5105 +
                     ((C22199 * C1512 - (C22198 * C1509 + C22197 * C1511) +
                       C22200 * C50788) *
                          C16981 +
                      (C23923 - (C23924 + C23925) + C23926) * C50885) *
                         C5106 +
                     ((C22801 * C1512 - (C22200 * C1509 + C22199 * C1511) +
                       C22802 * C50788) *
                          C16981 +
                      (C23927 - (C23928 + C23929) + C23930) * C50885) *
                         C5107) *
                        C50975 +
                    (((C21287 + C21286 - C21285 - C21288) * C16981 +
                      (C21291 + C21290 - C21289 - C21292) * C50885) *
                         C5105 +
                     ((C23925 + C23924 - C23923 - C23926) * C16981 +
                      (C21035 * C1511 + C21036 * C1509 - C22361 * C1512 -
                       C22362 * C50788) *
                          C50885) *
                         C5106 +
                     ((C23929 + C23928 - C23927 - C23930) * C16981 +
                      (C22361 * C1511 + C22362 * C1509 -
                       (C19767 * C3500 + C50687 * C3506) * C1512 -
                       (C19767 * C3508 + C50687 * C3512) * C50788) *
                          C50885) *
                         C5107) *
                        C50762) *
                       C50719)) /
                     (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C1744 +
            (C19767 * C133 + C50687 * C143) * C51023 -
            (C19767 * C382 + C50687 * C388) * C1745 -
            (C19767 * C392 + C50687 * C400) * C51012 +
            (C19767 * C847 + C50687 * C852) * C1746 +
            (C19767 * C856 + C50687 * C862) * C1743) *
               C19763 +
           (C19903 * C1744 + C19904 * C51023 - C20361 * C1745 -
            C20362 * C51012 + C20607 * C1746 + C20608 * C1743) *
               C19764 +
           (C19905 * C1744 + C19906 * C51023 - C20364 * C1745 -
            C20365 * C51012 + C20609 * C1746 + C20610 * C1743) *
               C19765 +
           (C19907 * C1744 + C19908 * C51023 - C20367 * C1745 -
            C20368 * C51012 + C20611 * C1746 + C20612 * C1743) *
               C19766) *
              C50847 * C50746 * C1275 +
          (((C19767 * C381 + C50687 * C387) * C1745 -
            ((C19767 * C134 + C50687 * C144) * C51023 +
             (C19767 * C123 + C50687 * C130) * C1744) +
            (C19767 * C391 + C50687 * C399) * C51012 -
            (C19767 * C848 + C50687 * C853) * C1746 -
            (C19767 * C857 + C50687 * C863) * C1743) *
               C19763 +
           (C21033 * C1745 - (C19910 * C51023 + C19909 * C1744) +
            C21034 * C51012 - (C19767 * C967 + C50687 * C971) * C1746 -
            (C19767 * C975 + C50687 * C979) * C1743) *
               C19764 +
           (C21035 * C1745 - (C19912 * C51023 + C19911 * C1744) +
            C21036 * C51012 - (C19767 * C3211 + C50687 * C3214) * C1746 -
            (C19767 * C3216 + C50687 * C3220) * C1743) *
               C19765 +
           (C21037 * C1745 - (C19914 * C51023 + C19913 * C1744) +
            C21038 * C51012 - (C19767 * C3368 + C50687 * C3370) * C1746 -
            (C19767 * C3372 + C50687 * C3374) * C1743) *
               C19766) *
              C50847 * C50746 * C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C1744 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C51023 -
            (C16985 * C380 + C16980 * C386 + C16984 * C381 + C16979 * C387 +
             C16983 * C382 + C16978 * C388) *
                C1745 -
            (C16985 * C390 + C16980 * C398 + C16984 * C391 + C16979 * C399 +
             C16983 * C392 + C16978 * C400) *
                C51012 +
            (C16983 * C847 + C16978 * C852 + C16984 * C848 + C16979 * C853 +
             C16985 * C849 + C16980 * C854) *
                C1746 +
            (C16983 * C856 + C16978 * C862 + C16984 * C857 + C16979 * C863 +
             C16985 * C858 + C16980 * C864) *
                C1743) *
               C16981 +
           ((C17169 + C17170 + C17171) * C1744 +
            (C17172 + C17173 + C17174) * C51023 -
            (C17801 + C17802 + C17803) * C1745 -
            (C17804 + C17805 + C17806) * C51012 +
            (C18117 + C18118 + C18119) * C1746 +
            (C18120 + C18121 + C18122) * C1743) *
               C50885) *
              C50847 * C50746 * C1275 +
          (((C16983 * C381 + C16978 * C387 + C16984 * C380 + C16979 * C386 +
             C16985 * C379 + C16980 * C385) *
                C1745 -
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C51023 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C1744) +
            (C16983 * C391 + C16978 * C399 + C16984 * C390 + C16979 * C398 +
             C16985 * C389 + C16980 * C397) *
                C51012 -
            (C16985 * C850 + C16980 * C855 + C16984 * C849 + C16979 * C854 +
             C16983 * C848 + C16978 * C853) *
                C1746 -
            (C16985 * C859 + C16980 * C865 + C16984 * C858 + C16979 * C864 +
             C16983 * C857 + C16978 * C863) *
                C1743) *
               C16981 +
           ((C18719 + C18720 + C18721) * C1745 -
            ((C17180 + C17179 + C17178) * C51023 +
             (C17177 + C17176 + C17175) * C1744) +
            (C18722 + C18723 + C18724) * C51012 -
            (C16985 * C965 + C16980 * C969 + C16984 * C966 + C16979 * C970 +
             C16983 * C967 + C16978 * C971) *
                C1746 -
            (C16985 * C973 + C16980 * C977 + C16984 * C974 + C16979 * C978 +
             C16983 * C975 + C16978 * C979) *
                C1743) *
               C50885) *
              C50847 * C50746 * C50719)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C1744 +
             (C19767 * C133 + C50687 * C143) * C51023 - C22193 * C1745 -
             C22194 * C51012 + C22195 * C1746 + C22196 * C1743) *
                C16981 +
            (C21731 + C21732 - C21733 - C21734 + C21735 + C21736) * C50885) *
               C5105 +
           ((C22193 * C1744 + C22194 * C51023 - C22195 * C1745 -
             C22196 * C51012 + C22799 * C1746 + C22800 * C1743) *
                C16981 +
            (C20361 * C1744 + C20362 * C51023 - C20607 * C1745 -
             C20608 * C51012 + C22633 * C1746 + C22634 * C1743) *
                C50885) *
               C5106 +
           ((C22195 * C1744 + C22196 * C51023 - C22799 * C1745 -
             C22800 * C51012 + C23079 * C1746 + C23080 * C1743) *
                C16981 +
            (C20607 * C1744 + C20608 * C51023 - C22633 * C1745 -
             C22634 * C51012 + C22969 * C1746 + C22970 * C1743) *
                C50885) *
               C5107) *
              C50746 * C1275 +
          (((C22197 * C1745 -
             ((C19767 * C134 + C50687 * C144) * C51023 +
              (C19767 * C123 + C50687 * C130) * C1744) +
             C22198 * C51012 - C22199 * C1746 - C22200 * C1743) *
                C16981 +
            (C21033 * C1745 - (C19910 * C51023 + C19909 * C1744) +
             C21034 * C51012 - C22011 * C1746 - C22012 * C1743) *
                C50885) *
               C5105 +
           ((C22199 * C1745 - (C22198 * C51023 + C22197 * C1744) +
             C22200 * C51012 - C22801 * C1746 - C22802 * C1743) *
                C16981 +
            (C22011 * C1745 - (C21034 * C51023 + C21033 * C1744) +
             C22012 * C51012 - C22803 * C1746 - C22804 * C1743) *
                C50885) *
               C5106 +
           ((C22801 * C1745 - (C22200 * C51023 + C22199 * C1744) +
             C22802 * C51012 - (C19767 * C6009 + C50687 * C6012) * C1746 -
             (C19767 * C6014 + C50687 * C6018) * C1743) *
                C16981 +
            (C22803 * C1745 - (C22012 * C51023 + C22011 * C1744) +
             C22804 * C51012 - (C19767 * C6194 + C50687 * C6196) * C1746 -
             (C19767 * C6198 + C50687 * C6200) * C1743) *
                C50885) *
               C5107) *
              C50746 * C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50776) *
                C16981 +
            ((C17169 + C17170 + C17171) * C121 +
             (C17172 + C17173 + C17174) * C50776) *
                C50885) *
               C50847 * C501 -
           (((C17503 + C17504 + C17505) * C50776 +
             (C17506 + C17507 + C17508) * C121) *
                C50885 +
            ((C17174 + C17173 + C17172) * C50776 +
             (C17171 + C17170 + C17169) * C121) *
                C16981) *
               C50847 * C502 +
           (((C17508 + C17507 + C17506) * C121 +
             (C17505 + C17504 + C17503) * C50776) *
                C16981 +
            ((C16983 * C600 + C16978 * C608 + C16984 * C599 + C16979 * C607 +
              C16985 * C598 + C16980 * C606) *
                 C121 +
             (C16983 * C604 + C16978 * C612 + C16984 * C603 + C16979 * C611 +
              C16985 * C602 + C16980 * C610) *
                 C50776) *
                C50885) *
               C50847 * C503) *
              C50968 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50776) *
                C16981 +
            ((C17509 + C17510 + C17511) * C121 +
             (C17512 + C17513 + C17514) * C50776) *
                C50885) *
               C50847 * C502 -
           (((C17180 + C17179 + C17178) * C50776 +
             (C17177 + C17176 + C17175) * C121) *
                C50885 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50776 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C16981) *
               C50847 * C501 -
           (((C16985 * C601 + C16980 * C609 + C16984 * C602 + C16979 * C610 +
              C16983 * C603 + C16978 * C611) *
                 C50776 +
             (C16985 * C597 + C16980 * C605 + C16984 * C598 + C16979 * C606 +
              C16983 * C599 + C16978 * C607) *
                 C121) *
                C50885 +
            ((C17514 + C17513 + C17512) * C50776 +
             (C17511 + C17510 + C17509) * C121) *
                C16981) *
               C50847 * C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C121 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50776) *
               C16981 +
           ((C16983 * C256 + C16978 * C266 + C16984 * C255 + C16979 * C265 +
             C16985 * C254 + C16980 * C264) *
                C121 +
            (C16983 * C262 + C16978 * C274 + C16984 * C261 + C16979 * C273 +
             C16985 * C260 + C16980 * C272) *
                C50776) *
               C50885) *
              C50847 * C50746 * C113 -
          (((C16985 * C259 + C16980 * C271 + C16984 * C260 + C16979 * C272 +
             C16983 * C261 + C16978 * C273) *
                C50776 +
            (C16985 * C253 + C16980 * C263 + C16984 * C254 + C16979 * C264 +
             C16983 * C255 + C16978 * C265) *
                C121) *
               C50885 +
           ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
             C16983 * C134 + C16978 * C144) *
                C50776 +
            (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
             C16983 * C123 + C16978 * C130) *
                C121) *
               C16981) *
              C50847 * C50746 * C114 +
          (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
             C16985 * C126 + C16980 * C138) *
                C121 +
            (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
             C16985 * C137 + C16980 * C147) *
                C50776) *
               C16981 +
           ((C16983 * C254 + C16978 * C264 + C16984 * C253 + C16979 * C263 +
             C16985 * C257 + C16980 * C267) *
                C121 +
            (C16983 * C260 + C16978 * C272 + C16984 * C259 + C16979 * C271 +
             C16985 * C268 + C16980 * C275) *
                C50776) *
               C50885) *
              C50847 * C50746 * C115 -
          (((C16985 * C269 + C16980 * C276 + C16984 * C268 + C16979 * C275 +
             C16983 * C259 + C16978 * C271) *
                C50776 +
            (C16985 * C258 + C16980 * C270 + C16984 * C257 + C16979 * C267 +
             C16983 * C253 + C16978 * C263) *
                C121) *
               C50885 +
           ((C16985 * C140 + C16980 * C148 + C16984 * C137 + C16979 * C147 +
             C16983 * C136 + C16978 * C146) *
                C50776 +
            (C16985 * C127 + C16980 * C139 + C16984 * C126 + C16979 * C138 +
             C16983 * C125 + C16978 * C132) *
                C121) *
               C16981) *
              C50847 * C50746 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C121 +
            (C19767 * C133 + C50687 * C143) * C50776) *
               C19763 +
           ((C19767 * C256 + C50687 * C266) * C121 +
            (C19767 * C262 + C50687 * C274) * C50776) *
               C19764 +
           ((C19767 * C506 + C50687 * C511) * C121 +
            (C19767 * C515 + C50687 * C521) * C50776) *
               C19765 +
           ((C19767 * C600 + C50687 * C608) * C121 +
            (C19767 * C604 + C50687 * C612) * C50776) *
               C19766) *
              C50847 * C50746 * C113 -
          (((C19767 * C603 + C50687 * C611) * C50776 +
            (C19767 * C599 + C50687 * C607) * C121) *
               C19766 +
           ((C19767 * C516 + C50687 * C522) * C50776 +
            (C19767 * C507 + C50687 * C512) * C121) *
               C19765 +
           ((C19767 * C261 + C50687 * C273) * C50776 +
            (C19767 * C255 + C50687 * C265) * C121) *
               C19764 +
           ((C19767 * C134 + C50687 * C144) * C50776 +
            (C19767 * C123 + C50687 * C130) * C121) *
               C19763) *
              C50847 * C50746 * C114 +
          (((C19767 * C124 + C50687 * C131) * C121 +
            (C19767 * C135 + C50687 * C145) * C50776) *
               C19763 +
           ((C19767 * C254 + C50687 * C264) * C121 +
            (C19767 * C260 + C50687 * C272) * C50776) *
               C19764 +
           ((C19767 * C508 + C50687 * C513) * C121 +
            (C19767 * C517 + C50687 * C523) * C50776) *
               C19765 +
           ((C19767 * C598 + C50687 * C606) * C121 +
            (C19767 * C602 + C50687 * C610) * C50776) *
               C19766) *
              C50847 * C50746 * C115 -
          (((C19767 * C601 + C50687 * C609) * C50776 +
            (C19767 * C597 + C50687 * C605) * C121) *
               C19766 +
           ((C19767 * C518 + C50687 * C524) * C50776 +
            (C19767 * C509 + C50687 * C514) * C121) *
               C19765 +
           ((C19767 * C259 + C50687 * C271) * C50776 +
            (C19767 * C253 + C50687 * C263) * C121) *
               C19764 +
           ((C19767 * C136 + C50687 * C146) * C50776 +
            (C19767 * C125 + C50687 * C132) * C121) *
               C19763) *
              C50847 * C50746 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C19763 +
            (C19921 + C19922) * C19764 + C20135 * C19765 + C20136 * C19766) *
               C50847 * C501 -
           ((C20151 + C20152) * C19766 + (C19926 + C19925) * C19765 +
            (C19924 + C19923) * C19764 + (C19922 + C19921) * C19763) *
               C50847 * C502 +
           (C20135 * C19763 + C20136 * C19764 + (C20152 + C20151) * C19765 +
            ((C19767 * C2833 + C50687 * C2837) * C121 +
             (C19767 * C2835 + C50687 * C2839) * C50776) *
                C19766) *
               C50847 * C503) *
              C50968 +
          (((C19927 + C19928) * C19763 + (C19929 + C19930) * C19764 +
            (C19931 + C19932) * C19765 + (C20153 + C20154) * C19766) *
               C50847 * C502 -
           (C20145 * C19766 + C20146 * C19765 + (C19928 + C19927) * C19764 +
            ((C19767 * C134 + C50687 * C144) * C50776 +
             (C19767 * C123 + C50687 * C130) * C121) *
                C19763) *
               C50847 * C501 -
           (((C19767 * C2834 + C50687 * C2838) * C50776 +
             (C19767 * C2832 + C50687 * C2836) * C121) *
                C19766 +
            (C20154 + C20153) * C19765 + C20145 * C19764 + C20146 * C19763) *
               C50847 * C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C16981 +
            (C19921 + C19922) * C50885) *
               C5105 +
           (((C19767 * C382 + C50687 * C388) * C121 +
             (C19767 * C392 + C50687 * C400) * C50776) *
                C16981 +
            (C20361 * C121 + C20362 * C50776) * C50885) *
               C5106 +
           (((C19767 * C847 + C50687 * C852) * C121 +
             (C19767 * C856 + C50687 * C862) * C50776) *
                C16981 +
            (C20607 * C121 + C20608 * C50776) * C50885) *
               C5107) *
              C50746 * C113 -
          ((((C19767 * C975 + C50687 * C979) * C50776 +
             (C19767 * C967 + C50687 * C971) * C121) *
                C50885 +
            ((C19767 * C857 + C50687 * C863) * C50776 +
             (C19767 * C848 + C50687 * C853) * C121) *
                C16981) *
               C5107 +
           ((C21034 * C50776 + C21033 * C121) * C50885 +
            ((C19767 * C391 + C50687 * C399) * C50776 +
             (C19767 * C381 + C50687 * C387) * C121) *
                C16981) *
               C5106 +
           ((C19928 + C19927) * C50885 +
            ((C19767 * C134 + C50687 * C144) * C50776 +
             (C19767 * C123 + C50687 * C130) * C121) *
                C16981) *
               C5105) *
              C50746 * C114 +
          ((((C19767 * C124 + C50687 * C131) * C121 +
             (C19767 * C135 + C50687 * C145) * C50776) *
                C16981 +
            (C19933 + C19934) * C50885) *
               C5105 +
           (((C19767 * C380 + C50687 * C386) * C121 +
             (C19767 * C390 + C50687 * C398) * C50776) *
                C16981 +
            ((C19767 * C713 + C50687 * C721) * C121 +
             (C19767 * C725 + C50687 * C737) * C50776) *
                C50885) *
               C5106 +
           (((C19767 * C849 + C50687 * C854) * C121 +
             (C19767 * C858 + C50687 * C864) * C50776) *
                C16981 +
            ((C19767 * C966 + C50687 * C970) * C121 +
             (C19767 * C974 + C50687 * C978) * C50776) *
                C50885) *
               C5107) *
              C50746 * C115 -
          ((((C19767 * C973 + C50687 * C977) * C50776 +
             (C19767 * C965 + C50687 * C969) * C121) *
                C50885 +
            ((C19767 * C859 + C50687 * C865) * C50776 +
             (C19767 * C850 + C50687 * C855) * C121) *
                C16981) *
               C5107 +
           (((C19767 * C726 + C50687 * C738) * C50776 +
             (C19767 * C714 + C50687 * C722) * C121) *
                C50885 +
            ((C19767 * C389 + C50687 * C397) * C50776 +
             (C19767 * C379 + C50687 * C385) * C121) *
                C16981) *
               C5106 +
           (((C19767 * C259 + C50687 * C271) * C50776 +
             (C19767 * C253 + C50687 * C263) * C121) *
                C50885 +
            ((C19767 * C136 + C50687 * C146) * C50776 +
             (C19767 * C125 + C50687 * C132) * C121) *
                C16981) *
               C5105) *
              C50746 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C16981 +
             (C19921 + C19922) * C50885) *
                C5105 +
            ((C22193 * C121 + C22194 * C50776) * C16981 +
             (C21993 + C21994) * C50885) *
                C5106 +
            ((C22195 * C121 + C22196 * C50776) * C16981 +
             (C21995 + C21996) * C50885) *
                C5107) *
               C501 -
           (((C22351 + C22352) * C50885 + (C21996 + C21995) * C16981) * C5107 +
            ((C22353 + C22354) * C50885 + (C21994 + C21993) * C16981) * C5106 +
            ((C19924 + C19923) * C50885 + (C19922 + C19921) * C16981) * C5105) *
               C502 +
           ((C20135 * C16981 + C20136 * C50885) * C5105 +
            ((C22354 + C22353) * C16981 +
             (C20367 * C121 + C20368 * C50776) * C50885) *
                C5106 +
            ((C22352 + C22351) * C16981 +
             (C20611 * C121 + C20612 * C50776) * C50885) *
                C5107) *
               C503) *
              C50968 +
          ((((C19927 + C19928) * C16981 + (C19929 + C19930) * C50885) * C5105 +
            ((C21997 + C21998) * C16981 + (C22355 + C22356) * C50885) * C5106 +
            ((C22017 + C22018) * C16981 + (C22363 + C22364) * C50885) * C5107) *
               C502 -
           (((C22018 + C22017) * C50885 +
             (C22200 * C50776 + C22199 * C121) * C16981) *
                C5107 +
            ((C21998 + C21997) * C50885 +
             (C22198 * C50776 + C22197 * C121) * C16981) *
                C5106 +
            ((C19928 + C19927) * C50885 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C16981) *
                C5105) *
               C501 -
           ((((C19767 * C3372 + C50687 * C3374) * C50776 +
              (C19767 * C3368 + C50687 * C3370) * C121) *
                 C50885 +
             (C22364 + C22363) * C16981) *
                C5107 +
            ((C21038 * C50776 + C21037 * C121) * C50885 +
             (C22356 + C22355) * C16981) *
                C5106 +
            (C20145 * C50885 + C20146 * C16981) * C5105) *
               C503) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C121 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50776) *
               C16981 +
           ((C17169 + C17170 + C17171) * C121 +
            (C17172 + C17173 + C17174) * C50776) *
               C50885) *
              C50847 * C592 -
          (((C17503 + C17504 + C17505) * C50776 +
            (C17506 + C17507 + C17508) * C121) *
               C50885 +
           ((C17174 + C17173 + C17172) * C50776 +
            (C17171 + C17170 + C17169) * C121) *
               C16981) *
              C50847 * C593 +
          (((C17508 + C17507 + C17506) * C121 +
            (C17505 + C17504 + C17503) * C50776) *
               C16981 +
           ((C17625 + C17626 + C17627) * C121 +
            (C17628 + C17629 + C17630) * C50776) *
               C50885) *
              C50847 * C594 -
          (((C16985 * C2695 + C16980 * C2699 + C16984 * C2694 + C16979 * C2698 +
             C16983 * C2693 + C16978 * C2697) *
                C50776 +
            (C16985 * C2690 + C16980 * C2696 + C16984 * C2689 + C16979 * C2692 +
             C16983 * C2688 + C16978 * C2691) *
                C121) *
               C50885 +
           ((C17630 + C17629 + C17628) * C50776 +
            (C17627 + C17626 + C17625) * C121) *
               C16981) *
              C50847 * C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50776) *
                C16981 +
            ((C17169 + C17170 + C17171) * C121 +
             (C17172 + C17173 + C17174) * C50776) *
                C50885) *
               C50847 * C50975 -
           (((C16985 * C517 + C16980 * C523 + C16984 * C516 + C16979 * C522 +
              C16983 * C515 + C16978 * C521) *
                 C50776 +
             (C16985 * C508 + C16980 * C513 + C16984 * C507 + C16979 * C512 +
              C16983 * C506 + C16978 * C511) *
                 C121) *
                C50885 +
            ((C17174 + C17173 + C17172) * C50776 +
             (C17171 + C17170 + C17169) * C121) *
                C16981) *
               C50847 * C50762) *
              C250 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50776) *
                C16981 +
            ((C16983 * C507 + C16978 * C512 + C16984 * C508 + C16979 * C513 +
              C16985 * C509 + C16980 * C514) *
                 C121 +
             (C16983 * C516 + C16978 * C522 + C16984 * C517 + C16979 * C523 +
              C16985 * C518 + C16980 * C524) *
                 C50776) *
                C50885) *
               C50847 * C50762 -
           (((C17180 + C17179 + C17178) * C50776 +
             (C17177 + C17176 + C17175) * C121) *
                C50885 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50776 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C16981) *
               C50847 * C50975) *
              C251 +
          ((((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
              C16985 * C126 + C16980 * C138) *
                 C121 +
             (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
              C16985 * C137 + C16980 * C147) *
                 C50776) *
                C16981 +
            ((C17181 + C17182 + C17183) * C121 +
             (C17184 + C17185 + C17186) * C50776) *
                C50885) *
               C50847 * C50975 -
           (((C16985 * C519 + C16980 * C525 + C16984 * C518 + C16979 * C524 +
              C16983 * C517 + C16978 * C523) *
                 C50776 +
             (C16985 * C510 + C16980 * C520 + C16984 * C509 + C16979 * C514 +
              C16983 * C508 + C16978 * C513) *
                 C121) *
                C50885 +
            ((C17186 + C17185 + C17184) * C50776 +
             (C17183 + C17182 + C17181) * C121) *
                C16981) *
               C50847 * C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C19763 +
            (C19921 + C19922) * C19764 + (C19923 + C19924) * C19765 +
            (C19925 + C19926) * C19766) *
               C50847 * C50975 -
           (((C19767 * C2693 + C50687 * C2697) * C50776 +
             (C19767 * C2688 + C50687 * C2691) * C121) *
                C19766 +
            (C19926 + C19925) * C19765 + (C19924 + C19923) * C19764 +
            (C19922 + C19921) * C19763) *
               C50847 * C50762) *
              C250 +
          (((C19927 + C19928) * C19763 + (C19929 + C19930) * C19764 +
            (C19931 + C19932) * C19765 +
            ((C19767 * C2689 + C50687 * C2692) * C121 +
             (C19767 * C2694 + C50687 * C2698) * C50776) *
                C19766) *
               C50847 * C50762 -
           ((C19932 + C19931) * C19766 + (C19930 + C19929) * C19765 +
            (C19928 + C19927) * C19764 +
            ((C19767 * C134 + C50687 * C144) * C50776 +
             (C19767 * C123 + C50687 * C130) * C121) *
                C19763) *
               C50847 * C50975) *
              C251 +
          ((((C19767 * C124 + C50687 * C131) * C121 +
             (C19767 * C135 + C50687 * C145) * C50776) *
                C19763 +
            (C19933 + C19934) * C19764 + (C19935 + C19936) * C19765 +
            (C19937 + C19938) * C19766) *
               C50847 * C50975 -
           (((C19767 * C2695 + C50687 * C2699) * C50776 +
             (C19767 * C2690 + C50687 * C2696) * C121) *
                C19766 +
            (C19938 + C19937) * C19765 + (C19936 + C19935) * C19764 +
            (C19934 + C19933) * C19763) *
               C50847 * C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C121 +
            (C19767 * C133 + C50687 * C143) * C50776) *
               C19763 +
           (C19921 + C19922) * C19764 + C20135 * C19765 + C20136 * C19766) *
              C50847 * C592 -
          (C20225 * C19766 + C20226 * C19765 + (C19924 + C19923) * C19764 +
           (C19922 + C19921) * C19763) *
              C50847 * C593 +
          (C20135 * C19763 + C20136 * C19764 + (C20152 + C20151) * C19765 +
           (C20233 + C20234) * C19766) *
              C50847 * C594 -
          (((C19767 * C20221 + C50687 * C20223) * C50776 +
            (C19767 * C20220 + C50687 * C20222) * C121) *
               C19766 +
           (C20234 + C20233) * C19765 + C20225 * C19764 + C20226 * C19763) *
              C50847 * C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C16981 +
             (C19921 + C19922) * C50885) *
                C5105 +
            (((C19767 * C382 + C50687 * C388) * C121 +
              (C19767 * C392 + C50687 * C400) * C50776) *
                 C16981 +
             (C21993 + C21994) * C50885) *
                C5106 +
            (((C19767 * C847 + C50687 * C852) * C121 +
              (C19767 * C856 + C50687 * C862) * C50776) *
                 C16981 +
             (C21995 + C21996) * C50885) *
                C5107) *
               C50975 -
           (((C20610 * C50776 + C20609 * C121) * C50885 +
             (C21996 + C21995) * C16981) *
                C5107 +
            ((C20365 * C50776 + C20364 * C121) * C50885 +
             (C21994 + C21993) * C16981) *
                C5106 +
            ((C19924 + C19923) * C50885 + (C19922 + C19921) * C16981) * C5105) *
               C50762) *
              C250 +
          ((((C19927 + C19928) * C16981 + (C19929 + C19930) * C50885) * C5105 +
            ((C21997 + C21998) * C16981 +
             (C21035 * C121 + C21036 * C50776) * C50885) *
                C5106 +
            ((C22017 + C22018) * C16981 +
             ((C19767 * C3211 + C50687 * C3214) * C121 +
              (C19767 * C3216 + C50687 * C3220) * C50776) *
                 C50885) *
                C5107) *
               C50762 -
           (((C22018 + C22017) * C50885 +
             ((C19767 * C857 + C50687 * C863) * C50776 +
              (C19767 * C848 + C50687 * C853) * C121) *
                 C16981) *
                C5107 +
            ((C21998 + C21997) * C50885 +
             ((C19767 * C391 + C50687 * C399) * C50776 +
              (C19767 * C381 + C50687 * C387) * C121) *
                 C16981) *
                C5106 +
            ((C19928 + C19927) * C50885 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C16981) *
                C5105) *
               C50975) *
              C251 +
          (((((C19767 * C124 + C50687 * C131) * C121 +
              (C19767 * C135 + C50687 * C145) * C50776) *
                 C16981 +
             (C19933 + C19934) * C50885) *
                C5105 +
            (((C19767 * C380 + C50687 * C386) * C121 +
              (C19767 * C390 + C50687 * C398) * C50776) *
                 C16981 +
             (C22019 + C22020) * C50885) *
                C5106 +
            (((C19767 * C849 + C50687 * C854) * C121 +
              (C19767 * C858 + C50687 * C864) * C50776) *
                 C16981 +
             (C22021 + C22022) * C50885) *
                C5107) *
               C50975 -
           ((((C19767 * C3218 + C50687 * C3221) * C50776 +
              (C19767 * C3212 + C50687 * C3217) * C121) *
                 C50885 +
             (C22022 + C22021) * C16981) *
                C5107 +
            (((C19767 * C732 + C50687 * C740) * C50776 +
              (C19767 * C716 + C50687 * C728) * C121) *
                 C50885 +
             (C22020 + C22019) * C16981) *
                C5106 +
            ((C19936 + C19935) * C50885 + (C19934 + C19933) * C16981) * C5105) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C16981 +
            (C19921 + C19922) * C50885) *
               C5105 +
           ((C22193 * C121 + C22194 * C50776) * C16981 +
            (C21993 + C21994) * C50885) *
               C5106 +
           ((C22195 * C121 + C22196 * C50776) * C16981 +
            (C21995 + C21996) * C50885) *
               C5107) *
              C592 -
          (((C22351 + C22352) * C50885 + (C21996 + C21995) * C16981) * C5107 +
           ((C22353 + C22354) * C50885 + (C21994 + C21993) * C16981) * C5106 +
           ((C19924 + C19923) * C50885 + (C19922 + C19921) * C16981) * C5105) *
              C593 +
          ((C20135 * C16981 + C20136 * C50885) * C5105 +
           ((C22354 + C22353) * C16981 + (C22463 + C22464) * C50885) * C5106 +
           ((C22352 + C22351) * C16981 + (C22465 + C22466) * C50885) * C5107) *
              C594 -
          ((((C19767 * C20580 + C50687 * C20581) * C50776 +
             (C19767 * C20578 + C50687 * C20579) * C121) *
                C50885 +
            (C22466 + C22465) * C16981) *
               C5107 +
           ((C20370 * C50776 + C20369 * C121) * C50885 +
            (C22464 + C22463) * C16981) *
               C5106 +
           (C20225 * C50885 + C20226 * C16981) * C5105) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[119] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                      C16979 * C130 + C16985 * C124 + C16980 * C131) *
                         C377 +
                     (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                      C16979 * C144 + C16985 * C135 + C16980 * C145) *
                         C50977 -
                     (C16985 * C380 + C16980 * C386 + C16984 * C381 +
                      C16979 * C387 + C16983 * C382 + C16978 * C388) *
                         C378 -
                     (C16985 * C390 + C16980 * C398 + C16984 * C391 +
                      C16979 * C399 + C16983 * C392 + C16978 * C400) *
                         C50788) *
                        C16981 +
                    ((C17169 + C17170 + C17171) * C377 +
                     (C17172 + C17173 + C17174) * C50977 -
                     (C17801 + C17802 + C17803) * C378 -
                     (C17804 + C17805 + C17806) * C50788) *
                        C50885) *
                       C50847 * C501 +
                   (((C17803 + C17802 + C17801) * C378 -
                     ((C17174 + C17173 + C17172) * C50977 +
                      (C17171 + C17170 + C17169) * C377) +
                     (C17806 + C17805 + C17804) * C50788) *
                        C16981 +
                    ((C17807 + C17808 + C17809) * C378 -
                     ((C17503 + C17504 + C17505) * C50977 +
                      (C17506 + C17507 + C17508) * C377) +
                     (C17810 + C17811 + C17812) * C50788) *
                        C50885) *
                       C50847 * C502 +
                   (((C17508 + C17507 + C17506) * C377 +
                     (C17505 + C17504 + C17503) * C50977 -
                     (C17809 + C17808 + C17807) * C378 -
                     (C17812 + C17811 + C17810) * C50788) *
                        C16981 +
                    ((C17625 + C17626 + C17627) * C377 +
                     (C17628 + C17629 + C17630) * C50977 -
                     (C16985 * C4000 + C16980 * C4001 + C16984 * C3004 +
                      C16979 * C3008 + C16983 * C3003 + C16978 * C3007) *
                         C378 -
                     (C16985 * C4002 + C16980 * C4003 + C16984 * C3010 +
                      C16979 * C3016 + C16983 * C3009 + C16978 * C3015) *
                         C50788) *
                        C50885) *
                       C50847 * C503) *
                  C50714) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                      C16979 * C130 + C16985 * C124 + C16980 * C131) *
                         C377 +
                     (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                      C16979 * C144 + C16985 * C135 + C16980 * C145) *
                         C50977 -
                     (C16985 * C380 + C16980 * C386 + C16984 * C381 +
                      C16979 * C387 + C16983 * C382 + C16978 * C388) *
                         C378 -
                     (C16985 * C390 + C16980 * C398 + C16984 * C391 +
                      C16979 * C399 + C16983 * C392 + C16978 * C400) *
                         C50788) *
                        C16981 +
                    ((C17169 + C17170 + C17171) * C377 +
                     (C17172 + C17173 + C17174) * C50977 -
                     (C16985 * C713 + C16980 * C721 + C16984 * C712 +
                      C16979 * C720 + C16983 * C711 + C16978 * C719) *
                         C378 -
                     (C16985 * C725 + C16980 * C737 + C16984 * C724 +
                      C16979 * C736 + C16983 * C723 + C16978 * C735) *
                         C50788) *
                        C50885) *
                       C50847 * C50746 * C250 +
                   (((C16983 * C381 + C16978 * C387 + C16984 * C380 +
                      C16979 * C386 + C16985 * C379 + C16980 * C385) *
                         C378 -
                     ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                       C16979 * C145 + C16983 * C134 + C16978 * C144) *
                          C50977 +
                      (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                       C16979 * C131 + C16983 * C123 + C16978 * C130) *
                          C377) +
                     (C16983 * C391 + C16978 * C399 + C16984 * C390 +
                      C16979 * C398 + C16985 * C389 + C16980 * C397) *
                         C50788) *
                        C16981 +
                    ((C16983 * C712 + C16978 * C720 + C16984 * C713 +
                      C16979 * C721 + C16985 * C714 + C16980 * C722) *
                         C378 -
                     ((C17180 + C17179 + C17178) * C50977 +
                      (C17177 + C17176 + C17175) * C377) +
                     (C16983 * C724 + C16978 * C736 + C16984 * C725 +
                      C16979 * C737 + C16985 * C726 + C16980 * C738) *
                         C50788) *
                        C50885) *
                       C50847 * C50746 * C251 +
                   (((C16983 * C124 + C16978 * C131 + C16984 * C125 +
                      C16979 * C132 + C16985 * C126 + C16980 * C138) *
                         C377 +
                     (C16983 * C135 + C16978 * C145 + C16984 * C136 +
                      C16979 * C146 + C16985 * C137 + C16980 * C147) *
                         C50977 -
                     (C16985 * C383 + C16980 * C393 + C16984 * C379 +
                      C16979 * C385 + C16983 * C380 + C16978 * C386) *
                         C378 -
                     (C16985 * C394 + C16980 * C401 + C16984 * C389 +
                      C16979 * C397 + C16983 * C390 + C16978 * C398) *
                         C50788) *
                        C16981 +
                    ((C17181 + C17182 + C17183) * C377 +
                     (C17184 + C17185 + C17186) * C50977 -
                     (C16985 * C1407 + C16980 * C1408 + C16984 * C714 +
                      C16979 * C722 + C16983 * C713 + C16978 * C721) *
                         C378 -
                     (C16985 * C1409 + C16980 * C1410 + C16984 * C726 +
                      C16979 * C738 + C16983 * C725 + C16978 * C737) *
                         C50788) *
                        C50885) *
                       C50847 * C50746 * C252)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C19767 * C122 + C50687 * C129) * C377 +
                     (C19767 * C133 + C50687 * C143) * C50977 -
                     (C19767 * C382 + C50687 * C388) * C378 -
                     (C19767 * C392 + C50687 * C400) * C50788) *
                        C19763 +
                    (C19903 * C377 + C19904 * C50977 -
                     (C19767 * C711 + C50687 * C719) * C378 -
                     (C19767 * C723 + C50687 * C735) * C50788) *
                        C19764 +
                    (C19905 * C377 + C19906 * C50977 -
                     (C19767 * C718 + C50687 * C730) * C378 -
                     (C19767 * C734 + C50687 * C742) * C50788) *
                        C19765 +
                    (C19907 * C377 + C19908 * C50977 -
                     (C19767 * C3003 + C50687 * C3007) * C378 -
                     (C19767 * C3009 + C50687 * C3015) * C50788) *
                        C19766) *
                       C50847 * C50746 * C250 +
                   (((C19767 * C381 + C50687 * C387) * C378 -
                     ((C19767 * C134 + C50687 * C144) * C50977 +
                      (C19767 * C123 + C50687 * C130) * C377) +
                     (C19767 * C391 + C50687 * C399) * C50788) *
                        C19763 +
                    ((C19767 * C712 + C50687 * C720) * C378 -
                     (C19910 * C50977 + C19909 * C377) +
                     (C19767 * C724 + C50687 * C736) * C50788) *
                        C19764 +
                    ((C19767 * C717 + C50687 * C729) * C378 -
                     (C19912 * C50977 + C19911 * C377) +
                     (C19767 * C733 + C50687 * C741) * C50788) *
                        C19765 +
                    ((C19767 * C3004 + C50687 * C3008) * C378 -
                     (C19914 * C50977 + C19913 * C377) +
                     (C19767 * C3010 + C50687 * C3016) * C50788) *
                        C19766) *
                       C50847 * C50746 * C251 +
                   (((C19767 * C124 + C50687 * C131) * C377 +
                     (C19767 * C135 + C50687 * C145) * C50977 -
                     (C19767 * C380 + C50687 * C386) * C378 -
                     (C19767 * C390 + C50687 * C398) * C50788) *
                        C19763 +
                    (C19915 * C377 + C19916 * C50977 -
                     (C19767 * C713 + C50687 * C721) * C378 -
                     (C19767 * C725 + C50687 * C737) * C50788) *
                        C19764 +
                    (C19917 * C377 + C19918 * C50977 -
                     (C19767 * C716 + C50687 * C728) * C378 -
                     (C19767 * C732 + C50687 * C740) * C50788) *
                        C19765 +
                    (C19919 * C377 + C19920 * C50977 -
                     (C19767 * C4000 + C50687 * C4001) * C378 -
                     (C19767 * C4002 + C50687 * C4003) * C50788) *
                        C19766) *
                       C50847 * C50746 * C252)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C19767 * C122 + C50687 * C129) * C377 +
                     (C19767 * C133 + C50687 * C143) * C50977 -
                     (C19767 * C382 + C50687 * C388) * C378 -
                     (C19767 * C392 + C50687 * C400) * C50788) *
                        C19763 +
                    (C20337 + C20338 - C20371 - C20372) * C19764 +
                    C20381 * C19765 + C20382 * C19766) *
                       C50847 * C501 +
                   ((C20371 - (C20338 + C20337) + C20372) * C19763 +
                    (C20373 - (C20344 + C20343) + C20374) * C19764 +
                    (C20375 - (C20350 + C20349) + C20376) * C19765 +
                    (C20377 - (C20357 + C20358) + C20378) * C19766) *
                       C50847 * C502 +
                   (C20381 * C19763 + C20382 * C19764 +
                    (C20358 + C20357 - C20377 - C20378) * C19765 +
                    (C20231 * C377 + C20232 * C50977 -
                     (C19767 * C20332 + C50687 * C20333) * C378 -
                     (C19767 * C20334 + C50687 * C20335) * C50788) *
                        C19766) *
                       C50847 * C503) *
                  C50714) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C19767 * C122 + C50687 * C129) * C377 +
                      (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
                      C22194 * C50788) *
                         C16981 +
                     (C20337 + C20338 - C20371 - C20372) * C50885) *
                        C5105 +
                    ((C22193 * C377 + C22194 * C50977 - C22195 * C378 -
                      C22196 * C50788) *
                         C16981 +
                     (C20361 * C377 + C20362 * C50977 - C20607 * C378 -
                      C20608 * C50788) *
                         C50885) *
                        C5106 +
                    ((C22195 * C377 + C22196 * C50977 -
                      (C19767 * C1058 + C50687 * C1062) * C378 -
                      (C19767 * C1066 + C50687 * C1070) * C50788) *
                         C16981 +
                     (C20607 * C377 + C20608 * C50977 -
                      (C19767 * C3499 + C50687 * C3503) * C378 -
                      (C19767 * C3505 + C50687 * C3511) * C50788) *
                         C50885) *
                        C5107) *
                       C50746 * C250 +
                   (((C22197 * C378 -
                      ((C19767 * C134 + C50687 * C144) * C50977 +
                       (C19767 * C123 + C50687 * C130) * C377) +
                      C22198 * C50788) *
                         C16981 +
                     (C21039 - (C21017 + C21018) + C21040) * C50885) *
                        C5105 +
                    ((C22199 * C378 - (C22198 * C50977 + C22197 * C377) +
                      C22200 * C50788) *
                         C16981 +
                     (C22011 * C378 - (C21034 * C50977 + C21033 * C377) +
                      C22012 * C50788) *
                         C50885) *
                        C5106 +
                    (((C19767 * C1057 + C50687 * C1061) * C378 -
                      (C22200 * C50977 + C22199 * C377) +
                      (C19767 * C1065 + C50687 * C1069) * C50788) *
                         C16981 +
                     ((C19767 * C3498 + C50687 * C3502) * C378 -
                      (C22012 * C50977 + C22011 * C377) +
                      (C19767 * C3504 + C50687 * C3510) * C50788) *
                         C50885) *
                        C5107) *
                       C50746 * C251 +
                   ((((C19767 * C124 + C50687 * C131) * C377 +
                      (C19767 * C135 + C50687 * C145) * C50977 - C22201 * C378 -
                      C22202 * C50788) *
                         C16981 +
                     (C19915 * C377 + C19916 * C50977 - C22013 * C378 -
                      C22014 * C50788) *
                         C50885) *
                        C5105 +
                    ((C22201 * C377 + C22202 * C50977 - C22203 * C378 -
                      C22204 * C50788) *
                         C16981 +
                     (C22013 * C377 + C22014 * C50977 - C22015 * C378 -
                      C22016 * C50788) *
                         C50885) *
                        C5106 +
                    ((C22203 * C377 + C22204 * C50977 -
                      (C19767 * C1056 + C50687 * C1060) * C378 -
                      (C19767 * C1064 + C50687 * C1068) * C50788) *
                         C16981 +
                     (C22015 * C377 + C22016 * C50977 -
                      (C19767 * C6822 + C50687 * C6823) * C378 -
                      (C19767 * C6824 + C50687 * C6825) * C50788) *
                         C50885) *
                        C5107) *
                       C50746 * C252)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C19767 * C122 + C50687 * C129) * C377 +
                      (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
                      C22194 * C50788) *
                         C16981 +
                     (C20337 + C20338 - C20371 - C20372) * C50885) *
                        C5105 +
                    ((C22193 * C377 + C22194 * C50977 - C22195 * C378 -
                      C22196 * C50788) *
                         C16981 +
                     (C22613 + C22614 - C22615 - C22616) * C50885) *
                        C5106 +
                    ((C22195 * C377 + C22196 * C50977 -
                      (C19767 * C1058 + C50687 * C1062) * C378 -
                      (C19767 * C1066 + C50687 * C1070) * C50788) *
                         C16981 +
                     (C22617 + C22618 - C22637 - C22638) * C50885) *
                        C5107) *
                       C501 +
                   (((C20371 - (C20338 + C20337) + C20372) * C16981 +
                     (C20373 - (C20344 + C20343) + C20374) * C50885) *
                        C5105 +
                    ((C22615 - (C22614 + C22613) + C22616) * C16981 +
                     (C22623 - (C22624 + C22625) + C22626) * C50885) *
                        C5106 +
                    ((C22637 - (C22618 + C22617) + C22638) * C16981 +
                     (C22639 - (C22629 + C22630) + C22640) * C50885) *
                        C5107) *
                       C502 +
                   ((C20381 * C16981 + C20382 * C50885) * C5105 +
                    ((C22625 + C22624 - C22623 - C22626) * C16981 +
                     (C20367 * C377 + C20368 * C50977 - C20611 * C378 -
                      C20612 * C50788) *
                         C50885) *
                        C5106 +
                    ((C22630 + C22629 - C22639 - C22640) * C16981 +
                     (C20611 * C377 + C20612 * C50977 -
                      (C19767 * C20684 + C50687 * C20685) * C378 -
                      (C19767 * C20686 + C50687 * C20687) * C50788) *
                         C50885) *
                        C5107) *
                       C503) *
                  C50714) /
                     (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                  C121 +
              (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                  C50776) *
                 C16981 +
             ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C50885) *
                C50992 +
            (((C27996 + C27995) * C121 + (C27998 + C27997) * C50776) * C16981 +
             (C28527 * C121 + C28528 * C50776) * C50885) *
                C50911) *
               C1169 -
           (((C25533 * C50776 + C25532 * C121) * C50885 +
             (C28526 * C50776 + C28525 * C121) * C16981) *
                C50911 +
            (((C24889 + C24888) * C50776 + (C24887 + C24886) * C121) * C50885 +
             ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C16981) *
                C50992) *
               C50762) *
              C51021 +
          (((((C24890 + C24891) * C121 + (C24892 + C24893) * C50776) * C16981 +
             ((C24894 + C24895) * C121 + (C24896 + C24897) * C50776) * C50885) *
                C50992 +
            (((C26454 + C26455) * C121 + (C26456 + C26457) * C50776) * C16981 +
             ((C26458 + C26459) * C121 + (C26460 + C26461) * C50776) * C50885) *
                C50911) *
               C50762 -
           ((((C26457 + C26456) * C50776 + (C26455 + C26454) * C121) * C50885 +
             ((C28002 + C28001) * C50776 + (C28000 + C27999) * C121) * C16981) *
                C50911 +
            (((C24893 + C24892) * C50776 + (C24891 + C24890) * C121) * C50885 +
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C50776 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C121) *
                 C16981) *
                C50992) *
               C1169) *
              C51006 +
          (((((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                  C121 +
              (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                  C50776) *
                 C16981 +
             ((C24898 + C24899) * C121 + (C24900 + C24901) * C50776) * C50885) *
                C50992 +
            (((C28004 + C28003) * C121 + (C28006 + C28005) * C50776) * C16981 +
             ((C27773 + C27774) * C121 + (C27775 + C27776) * C50776) * C50885) *
                C50911) *
               C1169 -
           ((((C49711 * C731 + C50692 * C739 + C49718 * C732 + C50963 * C740) *
                  C50776 +
              (C49711 * C715 + C50692 * C727 + C49718 * C716 + C50963 * C728) *
                  C121) *
                 C50885 +
             ((C27776 + C27775) * C50776 + (C27774 + C27773) * C121) * C16981) *
                C50911 +
            (((C24905 + C24904) * C50776 + (C24903 + C24902) * C121) * C50885 +
             ((C24901 + C24900) * C50776 + (C24899 + C24898) * C121) * C16981) *
                C50992) *
               C50762) *
              C1173)) /
        (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                  C121 +
              (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                  C50776) *
                 C16981 +
             ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C50885) *
                C50992 +
            (((C27996 + C27995) * C121 + (C27998 + C27997) * C50776) * C16981 +
             (C28527 * C121 + C28528 * C50776) * C50885) *
                C50911) *
               C51022 -
           (((C25533 * C50776 + C25532 * C121) * C50885 +
             (C28526 * C50776 + C28525 * C121) * C16981) *
                C50911 +
            (((C24889 + C24888) * C50776 + (C24887 + C24886) * C121) * C50885 +
             ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C16981) *
                C50992) *
               C51009 +
           ((C25230 * C16981 +
             ((C25223 + C25222) * C121 + (C25221 + C25220) * C50776) * C50885) *
                C50992 +
            ((C28529 * C121 + C28530 * C50776) * C16981 +
             ((C25528 + C25529) * C121 + (C25530 + C25531) * C50776) * C50885) *
                C50911) *
               C1274) *
              C1275 +
          (((((C24890 + C24891) * C121 + (C24892 + C24893) * C50776) * C16981 +
             ((C24894 + C24895) * C121 + (C24896 + C24897) * C50776) * C50885) *
                C50992 +
            (((C26454 + C26455) * C121 + (C26456 + C26457) * C50776) * C16981 +
             ((C26458 + C26459) * C121 + (C26460 + C26461) * C50776) * C50885) *
                C50911) *
               C51009 -
           ((((C26457 + C26456) * C50776 + (C26455 + C26454) * C121) * C50885 +
             ((C28002 + C28001) * C50776 + (C28000 + C27999) * C121) * C16981) *
                C50911 +
            (((C24893 + C24892) * C50776 + (C24891 + C24890) * C121) * C50885 +
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C50776 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C121) *
                 C16981) *
                C50992) *
               C51022 -
           ((((C49711 * C4002 + C50692 * C4003 + C49718 * C3010 +
               C50963 * C3016) *
                  C50776 +
              (C49711 * C4000 + C50692 * C4001 + C49718 * C3004 +
               C50963 * C3008) *
                  C121) *
                 C50885 +
             ((C26461 + C26460) * C50776 + (C26459 + C26458) * C121) * C16981) *
                C50911 +
            (((C25227 + C25226) * C50776 + (C25225 + C25224) * C121) * C50885 +
             C25231 * C16981) *
                C50992) *
               C1274) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                  C377 +
              (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                  C50977 -
              (C27995 + C27996) * C378 - (C27997 + C27998) * C50788) *
                 C16981 +
             ((C24882 + C24883) * C377 + (C24884 + C24885) * C50977 -
              C28525 * C378 - C28526 * C50788) *
                 C50885) *
                C50992 +
            (((C27996 + C27995) * C377 + (C27998 + C27997) * C50977 -
              (C28750 + C28749) * C378 - (C28752 + C28751) * C50788) *
                 C16981 +
             (C28527 * C377 + C28528 * C50977 - C28957 * C378 -
              C28958 * C50788) *
                 C50885) *
                C50911) *
               C1169 +
           (((C28527 * C378 -
              ((C24885 + C24884) * C50977 + (C24883 + C24882) * C377) +
              C28528 * C50788) *
                 C16981 +
             (C28529 * C378 -
              ((C24889 + C24888) * C50977 + (C24887 + C24886) * C377) +
              C28530 * C50788) *
                 C50885) *
                C50992 +
            ((C28955 * C378 - (C28526 * C50977 + C28525 * C377) +
              C28956 * C50788) *
                 C16981 +
             ((C25850 + C25851) * C378 - (C25533 * C50977 + C25532 * C377) +
              (C25852 + C25853) * C50788) *
                 C50885) *
                C50911) *
               C50762) *
              C1275 +
          (((((C27999 + C28000) * C378 -
              ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                   C50977 +
               (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                   C377) +
              (C28001 + C28002) * C50788) *
                 C16981 +
             (C29759 * C378 -
              ((C24893 + C24892) * C50977 + (C24891 + C24890) * C377) +
              C29760 * C50788) *
                 C50885) *
                C50992 +
            (((C28754 + C28753) * C378 -
              ((C28002 + C28001) * C50977 + (C28000 + C27999) * C377) +
              (C28756 + C28755) * C50788) *
                 C16981 +
             ((C28758 + C28757) * C378 - (C29761 * C50977 + C29762 * C377) +
              (C28760 + C28759) * C50788) *
                 C50885) *
                C50911) *
               C1169 +
           ((((C24890 + C24891) * C377 + (C24892 + C24893) * C50977 -
              C29762 * C378 - C29761 * C50788) *
                 C16981 +
             ((C24894 + C24895) * C377 + (C24896 + C24897) * C50977 -
              (C26459 + C26458) * C378 - (C26461 + C26460) * C50788) *
                 C50885) *
                C50992 +
            ((C29759 * C377 + C29760 * C50977 - (C28757 + C28758) * C378 -
              (C28759 + C28760) * C50788) *
                 C16981 +
             ((C26458 + C26459) * C377 + (C26460 + C26461) * C50977 -
              (C49711 * C3212 + C50692 * C3217 + C49718 * C3211 +
               C50963 * C3214) *
                  C378 -
              (C49711 * C3218 + C50692 * C3221 + C49718 * C3216 +
               C50963 * C3220) *
                  C50788) *
                 C50885) *
                C50911) *
               C50762) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                  C1511 +
              (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                  C1509 -
              (C27995 + C27996) * C1512 - (C27997 + C27998) * C50788) *
                 C16981 +
             ((C24882 + C24883) * C1511 + (C24884 + C24885) * C1509 -
              C28525 * C1512 - C28526 * C50788) *
                 C50885) *
                C50992 +
            (((C27996 + C27995) * C1511 + (C27998 + C27997) * C1509 -
              (C28750 + C28749) * C1512 - (C28752 + C28751) * C50788) *
                 C16981 +
             (C28527 * C1511 + C28528 * C1509 - C28957 * C1512 -
              C28958 * C50788) *
                 C50885) *
                C50911) *
               C1169 +
           (((C28527 * C1512 -
              ((C24885 + C24884) * C1509 + (C24883 + C24882) * C1511) +
              C28528 * C50788) *
                 C16981 +
             (C28529 * C1512 -
              ((C24889 + C24888) * C1509 + (C24887 + C24886) * C1511) +
              C28530 * C50788) *
                 C50885) *
                C50992 +
            ((C28955 * C1512 - (C28526 * C1509 + C28525 * C1511) +
              C28956 * C50788) *
                 C16981 +
             ((C25850 + C25851) * C1512 - (C25533 * C1509 + C25532 * C1511) +
              (C25852 + C25853) * C50788) *
                 C50885) *
                C50911) *
               C50762) *
              C50968 +
          (((((C27999 + C28000) * C1512 -
              ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                   C1509 +
               (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                   C1511) +
              (C28001 + C28002) * C50788) *
                 C16981 +
             (C29759 * C1512 -
              ((C24893 + C24892) * C1509 + (C24891 + C24890) * C1511) +
              C29760 * C50788) *
                 C50885) *
                C50992 +
            (((C28754 + C28753) * C1512 -
              ((C28002 + C28001) * C1509 + (C28000 + C27999) * C1511) +
              (C28756 + C28755) * C50788) *
                 C16981 +
             ((C28758 + C28757) * C1512 - (C29761 * C1509 + C29762 * C1511) +
              (C28760 + C28759) * C50788) *
                 C50885) *
                C50911) *
               C1169 +
           ((((C24890 + C24891) * C1511 + (C24892 + C24893) * C1509 -
              C29762 * C1512 - C29761 * C50788) *
                 C16981 +
             ((C24894 + C24895) * C1511 + (C24896 + C24897) * C1509 -
              (C26459 + C26458) * C1512 - (C26461 + C26460) * C50788) *
                 C50885) *
                C50992 +
            ((C29759 * C1511 + C29760 * C1509 - (C28757 + C28758) * C1512 -
              (C28759 + C28760) * C50788) *
                 C16981 +
             ((C26458 + C26459) * C1511 + (C26460 + C26461) * C1509 -
              (C49711 * C3212 + C50692 * C3217 + C49718 * C3211 +
               C50963 * C3214) *
                  C1512 -
              (C49711 * C3218 + C50692 * C3221 + C49718 * C3216 +
               C50963 * C3220) *
                  C50788) *
                 C50885) *
                C50911) *
               C50762) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C1511 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C1509 -
             (C27995 + C27996) * C1512 - (C27997 + C27998) * C50788) *
                C16981 +
            ((C24882 + C24883) * C1511 + (C24884 + C24885) * C1509 -
             C28525 * C1512 - C28526 * C50788) *
                C50885) *
               C50992 +
           (((C27996 + C27995) * C1511 + (C27998 + C27997) * C1509 -
             (C28750 + C28749) * C1512 - (C28752 + C28751) * C50788) *
                C16981 +
            (C28527 * C1511 + C28528 * C1509 - C28957 * C1512 -
             C28958 * C50788) *
                C50885) *
               C50911) *
              C51022 +
          (((C28527 * C1512 -
             ((C24885 + C24884) * C1509 + (C24883 + C24882) * C1511) +
             C28528 * C50788) *
                C16981 +
            (C28529 * C1512 -
             ((C24889 + C24888) * C1509 + (C24887 + C24886) * C1511) +
             C28530 * C50788) *
                C50885) *
               C50992 +
           ((C28955 * C1512 - (C28526 * C1509 + C28525 * C1511) +
             C28956 * C50788) *
                C16981 +
            ((C25850 + C25851) * C1512 - (C25533 * C1509 + C25532 * C1511) +
             (C25852 + C25853) * C50788) *
                C50885) *
               C50911) *
              C51009 +
          ((C27294 * C16981 +
            ((C25223 + C25222) * C1511 + (C25221 + C25220) * C1509 -
             (C25529 + C25528) * C1512 - (C25531 + C25530) * C50788) *
                C50885) *
               C50992 +
           ((C28529 * C1511 + C28530 * C1509 - (C25851 + C25850) * C1512 -
             (C25853 + C25852) * C50788) *
                C16981 +
            ((C25528 + C25529) * C1511 + (C25530 + C25531) * C1509 -
             (C49711 * C3368 + C50692 * C3370 + C49718 * C3369 +
              C50963 * C3371) *
                 C1512 -
             (C49711 * C3372 + C50692 * C3374 + C49718 * C3373 +
              C50963 * C3375) *
                 C50788) *
                C50885) *
               C50911) *
              C1274) *
         C50714) /
        (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C1744 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C51023 -
             (C27995 + C27996) * C1745 - (C27997 + C27998) * C51012 +
             (C28749 + C28750) * C1746 + (C28751 + C28752) * C1743) *
                C16981 +
            ((C24882 + C24883) * C1744 + (C24884 + C24885) * C51023 -
             C28525 * C1745 - C28526 * C51012 + C28955 * C1746 +
             C28956 * C1743) *
                C50885) *
               C50992 +
           (((C27996 + C27995) * C1744 + (C27998 + C27997) * C51023 -
             (C28750 + C28749) * C1745 - (C28752 + C28751) * C51012 +
             (C29110 + C29109) * C1746 + (C29112 + C29111) * C1743) *
                C16981 +
            (C28527 * C1744 + C28528 * C51023 - C28957 * C1745 -
             C28958 * C51012 + (C28967 + C28968) * C1746 +
             (C28969 + C28970) * C1743) *
                C50885) *
               C50911) *
              C1169 +
          (((C28527 * C1745 -
             ((C24885 + C24884) * C51023 + (C24883 + C24882) * C1744) +
             C28528 * C51012 - C28957 * C1746 - C28958 * C1743) *
                C16981 +
            (C28529 * C1745 -
             ((C24889 + C24888) * C51023 + (C24887 + C24886) * C1744) +
             C28530 * C51012 - (C25851 + C25850) * C1746 -
             (C25853 + C25852) * C1743) *
                C50885) *
               C50992 +
           ((C28955 * C1745 - (C28526 * C51023 + C28525 * C1744) +
             C28956 * C51012 - (C28968 + C28967) * C1746 -
             (C28970 + C28969) * C1743) *
                C16981 +
            ((C25850 + C25851) * C1745 - (C25533 * C51023 + C25532 * C1744) +
             (C25852 + C25853) * C51012 -
             (C49711 * C3500 + C50692 * C3506 + C49718 * C3501 +
              C50963 * C3507) *
                 C1746 -
             (C49711 * C3508 + C50692 * C3512 + C49718 * C3509 +
              C50963 * C3513) *
                 C1743) *
                C50885) *
               C50911) *
              C50762) *
         C50714) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                  C121 +
              (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                  C50776) *
                 C16981 +
             ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C50885) *
                C50992 +
            (((C27996 + C27995) * C121 + (C27998 + C27997) * C50776) * C16981 +
             ((C25520 + C25519) * C121 + (C25522 + C25521) * C50776) * C50885) *
                C50911) *
               C501 -
           (((C25533 * C50776 + C25532 * C121) * C50885 +
             ((C25521 + C25522) * C50776 + (C25519 + C25520) * C121) * C16981) *
                C50911 +
            (((C24889 + C24888) * C50776 + (C24887 + C24886) * C121) * C50885 +
             ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C16981) *
                C50992) *
               C502 +
           ((C25230 * C16981 +
             ((C25223 + C25222) * C121 + (C25221 + C25220) * C50776) * C50885) *
                C50992 +
            (((C25525 + C25524) * C121 + (C25527 + C25526) * C50776) * C16981 +
             ((C25528 + C25529) * C121 + (C25530 + C25531) * C50776) * C50885) *
                C50911) *
               C503) *
              C50968 +
          (((((C24890 + C24891) * C121 + (C24892 + C24893) * C50776) * C16981 +
             ((C24894 + C24895) * C121 + (C24896 + C24897) * C50776) * C50885) *
                C50992 +
            (((C26454 + C26455) * C121 + (C26456 + C26457) * C50776) * C16981 +
             ((C26458 + C26459) * C121 + (C26460 + C26461) * C50776) * C50885) *
                C50911) *
               C502 -
           ((((C26457 + C26456) * C50776 + (C26455 + C26454) * C121) * C50885 +
             ((C28002 + C28001) * C50776 + (C28000 + C27999) * C121) * C16981) *
                C50911 +
            (((C24893 + C24892) * C50776 + (C24891 + C24890) * C121) * C50885 +
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C50776 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C121) *
                 C16981) *
                C50992) *
               C501 -
           ((((C49711 * C4002 + C50692 * C4003 + C49718 * C3010 +
               C50963 * C3016) *
                  C50776 +
              (C49711 * C4000 + C50692 * C4001 + C49718 * C3004 +
               C50963 * C3008) *
                  C121) *
                 C50885 +
             ((C26461 + C26460) * C50776 + (C26459 + C26458) * C121) * C16981) *
                C50911 +
            (((C25227 + C25226) * C50776 + (C25225 + C25224) * C121) * C50885 +
             C25231 * C16981) *
                C50992) *
               C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C121 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50776) *
                C16981 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C50885) *
               C50992 +
           (((C49718 * C382 + C50963 * C388 + C49711 * C381 + C50692 * C387) *
                 C121 +
             (C49718 * C392 + C50963 * C400 + C49711 * C391 + C50692 * C399) *
                 C50776) *
                C16981 +
            ((C25520 + C25519) * C121 + (C25522 + C25521) * C50776) * C50885) *
               C50911) *
              C50746 * C113 -
          ((((C26457 + C26456) * C50776 + (C26455 + C26454) * C121) * C50885 +
            ((C49711 * C390 + C50692 * C398 + C49718 * C391 + C50963 * C399) *
                 C50776 +
             (C49711 * C380 + C50692 * C386 + C49718 * C381 + C50963 * C387) *
                 C121) *
                C16981) *
               C50911 +
           (((C24893 + C24892) * C50776 + (C24891 + C24890) * C121) * C50885 +
            ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                 C50776 +
             (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                 C121) *
                C16981) *
               C50992) *
              C50746 * C114 +
          ((((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                 C121 +
             (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                 C50776) *
                C16981 +
            ((C24898 + C24899) * C121 + (C24900 + C24901) * C50776) * C50885) *
               C50992 +
           (((C49718 * C380 + C50963 * C386 + C49711 * C379 + C50692 * C385) *
                 C121 +
             (C49718 * C390 + C50963 * C398 + C49711 * C389 + C50692 * C397) *
                 C50776) *
                C16981 +
            ((C49718 * C713 + C50963 * C721 + C49711 * C714 + C50692 * C722) *
                 C121 +
             (C49718 * C725 + C50963 * C737 + C49711 * C726 + C50692 * C738) *
                 C50776) *
                C50885) *
               C50911) *
              C50746 * C115 -
          ((((C49711 * C1409 + C50692 * C1410 + C49718 * C726 + C50963 * C738) *
                 C50776 +
             (C49711 * C1407 + C50692 * C1408 + C49718 * C714 + C50963 * C722) *
                 C121) *
                C50885 +
            ((C49711 * C394 + C50692 * C401 + C49718 * C389 + C50963 * C397) *
                 C50776 +
             (C49711 * C383 + C50692 * C393 + C49718 * C379 + C50963 * C385) *
                 C121) *
                C16981) *
               C50911 +
           (((C49711 * C268 + C50692 * C275 + C49718 * C259 + C50963 * C271) *
                 C50776 +
             (C49711 * C257 + C50692 * C267 + C49718 * C253 + C50963 * C263) *
                 C121) *
                C50885 +
            ((C49711 * C137 + C50692 * C147 + C49718 * C136 + C50963 * C146) *
                 C50776 +
             (C49711 * C126 + C50692 * C138 + C49718 * C125 + C50963 * C132) *
                 C121) *
                C16981) *
               C50992) *
              C50746 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C844 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C841 -
             (C27995 + C27996) * C845 - (C27997 + C27998) * C842 +
             (C28749 + C28750) * C846 + (C28751 + C28752) * C843) *
                C16981 +
            ((C24882 + C24883) * C844 + (C24884 + C24885) * C841 -
             C28525 * C845 - C28526 * C842 + (C25846 + C25847) * C846 +
             (C25848 + C25849) * C843) *
                C50885) *
               C50992 +
           (((C27996 + C27995) * C844 + (C27998 + C27997) * C841 -
             (C28750 + C28749) * C845 - (C28752 + C28751) * C842 +
             (C49718 * C1058 + C50963 * C1062 + C49711 * C1057 +
              C50692 * C1061) *
                 C846 +
             (C49718 * C1066 + C50963 * C1070 + C49711 * C1065 +
              C50692 * C1069) *
                 C843) *
                C16981 +
            (C28527 * C844 + C28528 * C841 - (C25847 + C25846) * C845 -
             (C25849 + C25848) * C842 +
             (C49718 * C3499 + C50963 * C3503 + C49711 * C3498 +
              C50692 * C3502) *
                 C846 +
             (C49718 * C3505 + C50963 * C3511 + C49711 * C3504 +
              C50692 * C3510) *
                 C843) *
                C50885) *
               C50911) *
              C50746 * C50968 +
          ((((C27999 + C28000) * C845 -
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C841 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C844) +
             (C28001 + C28002) * C842 - (C28753 + C28754) * C846 -
             (C28755 + C28756) * C843) *
                C16981 +
            ((C26454 + C26455) * C845 -
             ((C24893 + C24892) * C841 + (C24891 + C24890) * C844) +
             (C26456 + C26457) * C842 - (C28757 + C28758) * C846 -
             (C28759 + C28760) * C843) *
                C50885) *
               C50992 +
           (((C28754 + C28753) * C845 -
             ((C28002 + C28001) * C841 + (C28000 + C27999) * C844) +
             (C28756 + C28755) * C842 -
             (C49711 * C1056 + C50692 * C1060 + C49718 * C1057 +
              C50963 * C1061) *
                 C846 -
             (C49711 * C1064 + C50692 * C1068 + C49718 * C1065 +
              C50963 * C1069) *
                 C843) *
                C16981 +
            ((C28758 + C28757) * C845 -
             ((C26457 + C26456) * C841 + (C26455 + C26454) * C844) +
             (C28760 + C28759) * C842 -
             (C49711 * C6822 + C50692 * C6823 + C49718 * C3498 +
              C50963 * C3502) *
                 C846 -
             (C49711 * C6824 + C50692 * C6825 + C49718 * C3504 +
              C50963 * C3510) *
                 C843) *
                C50885) *
               C50911) *
              C50746 * C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C121 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50776) *
                C16981 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C50885) *
               C50992 +
           (((C27996 + C27995) * C121 + (C27998 + C27997) * C50776) * C16981 +
            ((C25520 + C25519) * C121 + (C25522 + C25521) * C50776) * C50885) *
               C50911) *
              C592 -
          (((C25533 * C50776 + C25532 * C121) * C50885 +
            ((C25521 + C25522) * C50776 + (C25519 + C25520) * C121) * C16981) *
               C50911 +
           (((C24889 + C24888) * C50776 + (C24887 + C24886) * C121) * C50885 +
            ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C16981) *
               C50992) *
              C593 +
          ((C25230 * C16981 +
            ((C25223 + C25222) * C121 + (C25221 + C25220) * C50776) * C50885) *
               C50992 +
           (((C25525 + C25524) * C121 + (C25527 + C25526) * C50776) * C16981 +
            ((C25528 + C25529) * C121 + (C25530 + C25531) * C50776) * C50885) *
               C50911) *
              C594 -
          ((((C49711 * C3013 + C50692 * C3017 + C49718 * C3014 +
              C50963 * C3018) *
                 C50776 +
             (C49711 * C3005 + C50692 * C3011 + C49718 * C3006 +
              C50963 * C3012) *
                 C121) *
                C50885 +
            ((C25531 + C25530) * C50776 + (C25529 + C25528) * C121) * C16981) *
               C50911 +
           (((C25345 + C25344) * C50776 + (C25343 + C25342) * C121) * C50885 +
            C25346 * C16981) *
               C50992) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                  C121 +
              (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                  C50776) *
                 C16981 +
             ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C50885) *
                C50992 +
            (((C49718 * C382 + C50963 * C388 + C49711 * C381 + C50692 * C387) *
                  C121 +
              (C49718 * C392 + C50963 * C400 + C49711 * C391 + C50692 * C399) *
                  C50776) *
                 C16981 +
             ((C25520 + C25519) * C121 + (C25522 + C25521) * C50776) * C50885) *
                C50911) *
               C50975 -
           (((C25533 * C50776 + C25532 * C121) * C50885 +
             ((C25521 + C25522) * C50776 + (C25519 + C25520) * C121) * C16981) *
                C50911 +
            (((C24889 + C24888) * C50776 + (C24887 + C24886) * C121) * C50885 +
             ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C16981) *
                C50992) *
               C50762) *
              C250 +
          (((((C24890 + C24891) * C121 + (C24892 + C24893) * C50776) * C16981 +
             ((C24894 + C24895) * C121 + (C24896 + C24897) * C50776) * C50885) *
                C50992 +
            (((C26454 + C26455) * C121 + (C26456 + C26457) * C50776) * C16981 +
             ((C26458 + C26459) * C121 + (C26460 + C26461) * C50776) * C50885) *
                C50911) *
               C50762 -
           ((((C26457 + C26456) * C50776 + (C26455 + C26454) * C121) * C50885 +
             ((C49711 * C390 + C50692 * C398 + C49718 * C391 + C50963 * C399) *
                  C50776 +
              (C49711 * C380 + C50692 * C386 + C49718 * C381 + C50963 * C387) *
                  C121) *
                 C16981) *
                C50911 +
            (((C24893 + C24892) * C50776 + (C24891 + C24890) * C121) * C50885 +
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C50776 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C121) *
                 C16981) *
                C50992) *
               C50975) *
              C251 +
          (((((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                  C121 +
              (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                  C50776) *
                 C16981 +
             ((C24898 + C24899) * C121 + (C24900 + C24901) * C50776) * C50885) *
                C50992 +
            (((C49718 * C380 + C50963 * C386 + C49711 * C379 + C50692 * C385) *
                  C121 +
              (C49718 * C390 + C50963 * C398 + C49711 * C389 + C50692 * C397) *
                  C50776) *
                 C16981 +
             ((C27773 + C27774) * C121 + (C27775 + C27776) * C50776) * C50885) *
                C50911) *
               C50975 -
           ((((C49711 * C731 + C50692 * C739 + C49718 * C732 + C50963 * C740) *
                  C50776 +
              (C49711 * C715 + C50692 * C727 + C49718 * C716 + C50963 * C728) *
                  C121) *
                 C50885 +
             ((C27776 + C27775) * C50776 + (C27774 + C27773) * C121) * C16981) *
                C50911 +
            (((C24905 + C24904) * C50776 + (C24903 + C24902) * C121) * C50885 +
             ((C24901 + C24900) * C50776 + (C24899 + C24898) * C121) * C16981) *
                C50992) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C844 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C841 -
             (C27995 + C27996) * C845 - (C27997 + C27998) * C842 +
             (C28749 + C28750) * C846 + (C28751 + C28752) * C843) *
                C16981 +
            ((C24882 + C24883) * C844 + (C24884 + C24885) * C841 -
             C28525 * C845 - C28526 * C842 + C28955 * C846 + C28956 * C843) *
                C50885) *
               C50992 +
           (((C27996 + C27995) * C844 + (C27998 + C27997) * C841 -
             (C28750 + C28749) * C845 - (C28752 + C28751) * C842 +
             (C49718 * C1058 + C50963 * C1062 + C49711 * C1057 +
              C50692 * C1061) *
                 C846 +
             (C49718 * C1066 + C50963 * C1070 + C49711 * C1065 +
              C50692 * C1069) *
                 C843) *
                C16981 +
            (C28527 * C844 + C28528 * C841 - C28957 * C845 - C28958 * C842 +
             (C28967 + C28968) * C846 + (C28969 + C28970) * C843) *
                C50885) *
               C50911) *
              C50975 +
          (((C28527 * C845 -
             ((C24885 + C24884) * C841 + (C24883 + C24882) * C844) +
             C28528 * C842 - C28957 * C846 - C28958 * C843) *
                C16981 +
            (C28529 * C845 -
             ((C24889 + C24888) * C841 + (C24887 + C24886) * C844) +
             C28530 * C842 - (C25851 + C25850) * C846 -
             (C25853 + C25852) * C843) *
                C50885) *
               C50992 +
           ((C28955 * C845 - (C28526 * C841 + C28525 * C844) + C28956 * C842 -
             (C28968 + C28967) * C846 - (C28970 + C28969) * C843) *
                C16981 +
            ((C25850 + C25851) * C845 - (C25533 * C841 + C25532 * C844) +
             (C25852 + C25853) * C842 -
             (C49711 * C3500 + C50692 * C3506 + C49718 * C3501 +
              C50963 * C3507) *
                 C846 -
             (C49711 * C3508 + C50692 * C3512 + C49718 * C3509 +
              C50963 * C3513) *
                 C843) *
                C50885) *
               C50911) *
              C50762) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C377 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50977 -
             (C27995 + C27996) * C378 - (C27997 + C27998) * C50788) *
                C16981 +
            ((C24882 + C24883) * C377 + (C24884 + C24885) * C50977 -
             C28525 * C378 - C28526 * C50788) *
                C50885) *
               C50992 +
           (((C27996 + C27995) * C377 + (C27998 + C27997) * C50977 -
             (C49711 * C848 + C50692 * C853 + C49718 * C847 + C50963 * C852) *
                 C378 -
             (C49711 * C857 + C50692 * C863 + C49718 * C856 + C50963 * C862) *
                 C50788) *
                C16981 +
            (C28527 * C377 + C28528 * C50977 - (C25847 + C25846) * C378 -
             (C25849 + C25848) * C50788) *
                C50885) *
               C50911) *
              C501 +
          (((C28527 * C378 -
             ((C24885 + C24884) * C50977 + (C24883 + C24882) * C377) +
             C28528 * C50788) *
                C16981 +
            (C28529 * C378 -
             ((C24889 + C24888) * C50977 + (C24887 + C24886) * C377) +
             C28530 * C50788) *
                C50885) *
               C50992 +
           (((C25846 + C25847) * C378 - (C28526 * C50977 + C28525 * C377) +
             (C25848 + C25849) * C50788) *
                C16981 +
            ((C25850 + C25851) * C378 - (C25533 * C50977 + C25532 * C377) +
             (C25852 + C25853) * C50788) *
                C50885) *
               C50911) *
              C502 +
          ((C25537 * C16981 +
            ((C25223 + C25222) * C377 + (C25221 + C25220) * C50977 -
             (C25529 + C25528) * C378 - (C25531 + C25530) * C50788) *
                C50885) *
               C50992 +
           ((C28529 * C377 + C28530 * C50977 - (C25851 + C25850) * C378 -
             (C25853 + C25852) * C50788) *
                C16981 +
            ((C25528 + C25529) * C377 + (C25530 + C25531) * C50977 -
             (C49711 * C3368 + C50692 * C3370 + C49718 * C3369 +
              C50963 * C3371) *
                 C378 -
             (C49711 * C3372 + C50692 * C3374 + C49718 * C3373 +
              C50963 * C3375) *
                 C50788) *
                C50885) *
               C50911) *
              C503) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C377 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50977 -
             (C27995 + C27996) * C378 - (C27997 + C27998) * C50788) *
                C16981 +
            ((C24882 + C24883) * C377 + (C24884 + C24885) * C50977 -
             (C25519 + C25520) * C378 - (C25521 + C25522) * C50788) *
                C50885) *
               C50992 +
           (((C27996 + C27995) * C377 + (C27998 + C27997) * C50977 -
             (C49711 * C848 + C50692 * C853 + C49718 * C847 + C50963 * C852) *
                 C378 -
             (C49711 * C857 + C50692 * C863 + C49718 * C856 + C50963 * C862) *
                 C50788) *
                C16981 +
            ((C25520 + C25519) * C377 + (C25522 + C25521) * C50977 -
             (C25847 + C25846) * C378 - (C25849 + C25848) * C50788) *
                C50885) *
               C50911) *
              C50746 * C250 +
          ((((C27999 + C28000) * C378 -
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C50977 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C377) +
             (C28001 + C28002) * C50788) *
                C16981 +
            ((C26454 + C26455) * C378 -
             ((C24893 + C24892) * C50977 + (C24891 + C24890) * C377) +
             (C26456 + C26457) * C50788) *
                C50885) *
               C50992 +
           (((C49718 * C848 + C50963 * C853 + C49711 * C849 + C50692 * C854) *
                 C378 -
             ((C28002 + C28001) * C50977 + (C28000 + C27999) * C377) +
             (C49718 * C857 + C50963 * C863 + C49711 * C858 + C50692 * C864) *
                 C50788) *
                C16981 +
            ((C49718 * C967 + C50963 * C971 + C49711 * C966 + C50692 * C970) *
                 C378 -
             ((C26457 + C26456) * C50977 + (C26455 + C26454) * C377) +
             (C49718 * C975 + C50963 * C979 + C49711 * C974 + C50692 * C978) *
                 C50788) *
                C50885) *
               C50911) *
              C50746 * C251 +
          ((((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                 C377 +
             (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                 C50977 -
             (C28003 + C28004) * C378 - (C28005 + C28006) * C50788) *
                C16981 +
            ((C24898 + C24899) * C377 + (C24900 + C24901) * C50977 -
             (C27774 + C27773) * C378 - (C27776 + C27775) * C50788) *
                C50885) *
               C50992 +
           (((C28004 + C28003) * C377 + (C28006 + C28005) * C50977 -
             (C49711 * C850 + C50692 * C855 + C49718 * C849 + C50963 * C854) *
                 C378 -
             (C49711 * C859 + C50692 * C865 + C49718 * C858 + C50963 * C864) *
                 C50788) *
                C16981 +
            ((C27773 + C27774) * C377 + (C27775 + C27776) * C50977 -
             (C49711 * C965 + C50692 * C969 + C49718 * C966 + C50963 * C970) *
                 C378 -
             (C49711 * C973 + C50692 * C977 + C49718 * C974 + C50963 * C978) *
                 C50788) *
                C50885) *
               C50911) *
              C50746 * C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C1051 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C1047 -
            (C27995 + C27996) * C1052 - (C27997 + C27998) * C1048 +
            (C28749 + C28750) * C1053 + (C28751 + C28752) * C1049 -
            (C29109 + C29110) * C1054 - (C29111 + C29112) * C1050) *
               C16981 +
           ((C24882 + C24883) * C1051 + (C24884 + C24885) * C1047 -
            C28525 * C1052 - C28526 * C1048 + C28955 * C1053 + C28956 * C1049 -
            (C28968 + C28967) * C1054 - (C28970 + C28969) * C1050) *
               C50885) *
              C50992 +
          (((C27996 + C27995) * C1051 + (C27998 + C27997) * C1047 -
            (C28750 + C28749) * C1052 - (C28752 + C28751) * C1048 +
            (C29110 + C29109) * C1053 + (C29112 + C29111) * C1049 -
            (C49711 * C6009 + C50692 * C6012 + C49718 * C6008 +
             C50963 * C6011) *
                C1054 -
            (C49711 * C6014 + C50692 * C6018 + C49718 * C6013 +
             C50963 * C6017) *
                C1050) *
               C16981 +
           (C28527 * C1051 + C28528 * C1047 - C28957 * C1052 - C28958 * C1048 +
            (C28967 + C28968) * C1053 + (C28969 + C28970) * C1049 -
            (C49711 * C6194 + C50692 * C6196 + C49718 * C6195 +
             C50963 * C6197) *
                C1054 -
            (C49711 * C6198 + C50692 * C6200 + C49718 * C6199 +
             C50963 * C6201) *
                C1050) *
               C50885) *
              C50911) *
         C50746 * C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C1511 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C1509 -
             (C27995 + C27996) * C1512 - (C27997 + C27998) * C50788) *
                C16981 +
            ((C24882 + C24883) * C1511 + (C24884 + C24885) * C1509 -
             C28525 * C1512 - C28526 * C50788) *
                C50885) *
               C50992 +
           (((C27996 + C27995) * C1511 + (C27998 + C27997) * C1509 -
             (C28750 + C28749) * C1512 - (C28752 + C28751) * C50788) *
                C16981 +
            (C28527 * C1511 + C28528 * C1509 - C28957 * C1512 -
             C28958 * C50788) *
                C50885) *
               C50911) *
              C50746 * C51021 +
          ((((C27999 + C28000) * C1512 -
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C1509 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C1511) +
             (C28001 + C28002) * C50788) *
                C16981 +
            (C29759 * C1512 -
             ((C24893 + C24892) * C1509 + (C24891 + C24890) * C1511) +
             C29760 * C50788) *
                C50885) *
               C50992 +
           (((C28754 + C28753) * C1512 -
             ((C28002 + C28001) * C1509 + (C28000 + C27999) * C1511) +
             (C28756 + C28755) * C50788) *
                C16981 +
            ((C28758 + C28757) * C1512 - (C29761 * C1509 + C29762 * C1511) +
             (C28760 + C28759) * C50788) *
                C50885) *
               C50911) *
              C50746 * C51006 +
          ((((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                 C1511 +
             (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                 C1509 -
             (C28003 + C28004) * C1512 - (C28005 + C28006) * C50788) *
                C16981 +
            ((C24898 + C24899) * C1511 + (C24900 + C24901) * C1509 -
             (C27774 + C27773) * C1512 - (C27776 + C27775) * C50788) *
                C50885) *
               C50992 +
           (((C28004 + C28003) * C1511 + (C28006 + C28005) * C1509 -
             (C49711 * C850 + C50692 * C855 + C49718 * C849 + C50963 * C854) *
                 C1512 -
             (C49711 * C859 + C50692 * C865 + C49718 * C858 + C50963 * C864) *
                 C50788) *
                C16981 +
            ((C27773 + C27774) * C1511 + (C27775 + C27776) * C1509 -
             (C49711 * C965 + C50692 * C969 + C49718 * C966 + C50963 * C970) *
                 C1512 -
             (C49711 * C973 + C50692 * C977 + C49718 * C974 + C50963 * C978) *
                 C50788) *
                C50885) *
               C50911) *
              C50746 * C1173)) /
        (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                  C1511 +
              (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                  C1509 -
              (C27995 + C27996) * C1512 - (C27997 + C27998) * C50788) *
                 C16981 +
             ((C24882 + C24883) * C1511 + (C24884 + C24885) * C1509 -
              C28525 * C1512 - C28526 * C50788) *
                 C50885) *
                C50992 +
            (((C27996 + C27995) * C1511 + (C27998 + C27997) * C1509 -
              (C28750 + C28749) * C1512 - (C28752 + C28751) * C50788) *
                 C16981 +
             (C28527 * C1511 + C28528 * C1509 - C28957 * C1512 -
              C28958 * C50788) *
                 C50885) *
                C50911) *
               C50975 +
           (((C28527 * C1512 -
              ((C24885 + C24884) * C1509 + (C24883 + C24882) * C1511) +
              C28528 * C50788) *
                 C16981 +
             (C28529 * C1512 -
              ((C24889 + C24888) * C1509 + (C24887 + C24886) * C1511) +
              C28530 * C50788) *
                 C50885) *
                C50992 +
            ((C28955 * C1512 - (C28526 * C1509 + C28525 * C1511) +
              C28956 * C50788) *
                 C16981 +
             ((C25850 + C25851) * C1512 - (C25533 * C1509 + C25532 * C1511) +
              (C25852 + C25853) * C50788) *
                 C50885) *
                C50911) *
               C50762) *
              C1275 +
          (((((C27999 + C28000) * C1512 -
              ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                   C1509 +
               (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                   C1511) +
              (C28001 + C28002) * C50788) *
                 C16981 +
             (C29759 * C1512 -
              ((C24893 + C24892) * C1509 + (C24891 + C24890) * C1511) +
              C29760 * C50788) *
                 C50885) *
                C50992 +
            (((C28754 + C28753) * C1512 -
              ((C28002 + C28001) * C1509 + (C28000 + C27999) * C1511) +
              (C28756 + C28755) * C50788) *
                 C16981 +
             ((C28758 + C28757) * C1512 - (C29761 * C1509 + C29762 * C1511) +
              (C28760 + C28759) * C50788) *
                 C50885) *
                C50911) *
               C50975 +
           ((((C24890 + C24891) * C1511 + (C24892 + C24893) * C1509 -
              C29762 * C1512 - C29761 * C50788) *
                 C16981 +
             ((C24894 + C24895) * C1511 + (C24896 + C24897) * C1509 -
              (C26459 + C26458) * C1512 - (C26461 + C26460) * C50788) *
                 C50885) *
                C50992 +
            ((C29759 * C1511 + C29760 * C1509 - (C28757 + C28758) * C1512 -
              (C28759 + C28760) * C50788) *
                 C16981 +
             ((C26458 + C26459) * C1511 + (C26460 + C26461) * C1509 -
              (C49711 * C3212 + C50692 * C3217 + C49718 * C3211 +
               C50963 * C3214) *
                  C1512 -
              (C49711 * C3218 + C50692 * C3221 + C49718 * C3216 +
               C50963 * C3220) *
                  C50788) *
                 C50885) *
                C50911) *
               C50762) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C1744 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C51023 -
             (C27995 + C27996) * C1745 - (C27997 + C27998) * C51012 +
             (C28749 + C28750) * C1746 + (C28751 + C28752) * C1743) *
                C16981 +
            ((C24882 + C24883) * C1744 + (C24884 + C24885) * C51023 -
             C28525 * C1745 - C28526 * C51012 + C28955 * C1746 +
             C28956 * C1743) *
                C50885) *
               C50992 +
           (((C27996 + C27995) * C1744 + (C27998 + C27997) * C51023 -
             (C28750 + C28749) * C1745 - (C28752 + C28751) * C51012 +
             (C29110 + C29109) * C1746 + (C29112 + C29111) * C1743) *
                C16981 +
            (C28527 * C1744 + C28528 * C51023 - C28957 * C1745 -
             C28958 * C51012 + (C28967 + C28968) * C1746 +
             (C28969 + C28970) * C1743) *
                C50885) *
               C50911) *
              C50746 * C1275 +
          ((((C27999 + C28000) * C1745 -
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C51023 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C1744) +
             (C28001 + C28002) * C51012 - (C28753 + C28754) * C1746 -
             (C28755 + C28756) * C1743) *
                C16981 +
            (C29759 * C1745 -
             ((C24893 + C24892) * C51023 + (C24891 + C24890) * C1744) +
             C29760 * C51012 - (C28757 + C28758) * C1746 -
             (C28759 + C28760) * C1743) *
                C50885) *
               C50992 +
           (((C28754 + C28753) * C1745 -
             ((C28002 + C28001) * C51023 + (C28000 + C27999) * C1744) +
             (C28756 + C28755) * C51012 -
             (C49711 * C1056 + C50692 * C1060 + C49718 * C1057 +
              C50963 * C1061) *
                 C1746 -
             (C49711 * C1064 + C50692 * C1068 + C49718 * C1065 +
              C50963 * C1069) *
                 C1743) *
                C16981 +
            ((C28758 + C28757) * C1745 - (C29761 * C51023 + C29762 * C1744) +
             (C28760 + C28759) * C51012 -
             (C49711 * C6822 + C50692 * C6823 + C49718 * C3498 +
              C50963 * C3502) *
                 C1746 -
             (C49711 * C6824 + C50692 * C6825 + C49718 * C3504 +
              C50963 * C3510) *
                 C1743) *
                C50885) *
               C50911) *
              C50746 * C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C121 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50776) *
                C16981 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C50885) *
               C50992 +
           (((C49718 * C382 + C50963 * C388 + C49711 * C381 + C50692 * C387) *
                 C121 +
             (C49718 * C392 + C50963 * C400 + C49711 * C391 + C50692 * C399) *
                 C50776) *
                C16981 +
            ((C25520 + C25519) * C121 + (C25522 + C25521) * C50776) * C50885) *
               C50911) *
              C50746 * C113 -
          ((((C26457 + C26456) * C50776 + (C26455 + C26454) * C121) * C50885 +
            ((C49711 * C390 + C50692 * C398 + C49718 * C391 + C50963 * C399) *
                 C50776 +
             (C49711 * C380 + C50692 * C386 + C49718 * C381 + C50963 * C387) *
                 C121) *
                C16981) *
               C50911 +
           (((C24893 + C24892) * C50776 + (C24891 + C24890) * C121) * C50885 +
            ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                 C50776 +
             (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                 C121) *
                C16981) *
               C50992) *
              C50746 * C114 +
          ((((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                 C121 +
             (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                 C50776) *
                C16981 +
            ((C24898 + C24899) * C121 + (C24900 + C24901) * C50776) * C50885) *
               C50992 +
           (((C49718 * C380 + C50963 * C386 + C49711 * C379 + C50692 * C385) *
                 C121 +
             (C49718 * C390 + C50963 * C398 + C49711 * C389 + C50692 * C397) *
                 C50776) *
                C16981 +
            ((C49718 * C713 + C50963 * C721 + C49711 * C714 + C50692 * C722) *
                 C121 +
             (C49718 * C725 + C50963 * C737 + C49711 * C726 + C50692 * C738) *
                 C50776) *
                C50885) *
               C50911) *
              C50746 * C115 -
          ((((C49711 * C1409 + C50692 * C1410 + C49718 * C726 + C50963 * C738) *
                 C50776 +
             (C49711 * C1407 + C50692 * C1408 + C49718 * C714 + C50963 * C722) *
                 C121) *
                C50885 +
            ((C49711 * C394 + C50692 * C401 + C49718 * C389 + C50963 * C397) *
                 C50776 +
             (C49711 * C383 + C50692 * C393 + C49718 * C379 + C50963 * C385) *
                 C121) *
                C16981) *
               C50911 +
           (((C49711 * C268 + C50692 * C275 + C49718 * C259 + C50963 * C271) *
                 C50776 +
             (C49711 * C257 + C50692 * C267 + C49718 * C253 + C50963 * C263) *
                 C121) *
                C50885 +
            ((C49711 * C137 + C50692 * C147 + C49718 * C136 + C50963 * C146) *
                 C50776 +
             (C49711 * C126 + C50692 * C138 + C49718 * C125 + C50963 * C132) *
                 C121) *
                C16981) *
               C50992) *
              C50746 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                  C121 +
              (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                  C50776) *
                 C16981 +
             ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C50885) *
                C50992 +
            (((C27996 + C27995) * C121 + (C27998 + C27997) * C50776) * C16981 +
             ((C25520 + C25519) * C121 + (C25522 + C25521) * C50776) * C50885) *
                C50911) *
               C501 -
           (((C25533 * C50776 + C25532 * C121) * C50885 +
             ((C25521 + C25522) * C50776 + (C25519 + C25520) * C121) * C16981) *
                C50911 +
            (((C24889 + C24888) * C50776 + (C24887 + C24886) * C121) * C50885 +
             ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C16981) *
                C50992) *
               C502 +
           ((C25230 * C16981 +
             ((C25223 + C25222) * C121 + (C25221 + C25220) * C50776) * C50885) *
                C50992 +
            (((C25525 + C25524) * C121 + (C25527 + C25526) * C50776) * C16981 +
             ((C25528 + C25529) * C121 + (C25530 + C25531) * C50776) * C50885) *
                C50911) *
               C503) *
              C50968 +
          (((((C24890 + C24891) * C121 + (C24892 + C24893) * C50776) * C16981 +
             ((C24894 + C24895) * C121 + (C24896 + C24897) * C50776) * C50885) *
                C50992 +
            (((C26454 + C26455) * C121 + (C26456 + C26457) * C50776) * C16981 +
             ((C26458 + C26459) * C121 + (C26460 + C26461) * C50776) * C50885) *
                C50911) *
               C502 -
           ((((C26457 + C26456) * C50776 + (C26455 + C26454) * C121) * C50885 +
             ((C28002 + C28001) * C50776 + (C28000 + C27999) * C121) * C16981) *
                C50911 +
            (((C24893 + C24892) * C50776 + (C24891 + C24890) * C121) * C50885 +
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C50776 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C121) *
                 C16981) *
                C50992) *
               C501 -
           ((((C49711 * C4002 + C50692 * C4003 + C49718 * C3010 +
               C50963 * C3016) *
                  C50776 +
              (C49711 * C4000 + C50692 * C4001 + C49718 * C3004 +
               C50963 * C3008) *
                  C121) *
                 C50885 +
             ((C26461 + C26460) * C50776 + (C26459 + C26458) * C121) * C16981) *
                C50911 +
            (((C25227 + C25226) * C50776 + (C25225 + C25224) * C121) * C50885 +
             C25231 * C16981) *
                C50992) *
               C503) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                  C121 +
              (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                  C50776) *
                 C16981 +
             ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C50885) *
                C50992 +
            (((C49718 * C382 + C50963 * C388 + C49711 * C381 + C50692 * C387) *
                  C121 +
              (C49718 * C392 + C50963 * C400 + C49711 * C391 + C50692 * C399) *
                  C50776) *
                 C16981 +
             ((C25520 + C25519) * C121 + (C25522 + C25521) * C50776) * C50885) *
                C50911) *
               C50975 -
           (((C25533 * C50776 + C25532 * C121) * C50885 +
             ((C25521 + C25522) * C50776 + (C25519 + C25520) * C121) * C16981) *
                C50911 +
            (((C24889 + C24888) * C50776 + (C24887 + C24886) * C121) * C50885 +
             ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C16981) *
                C50992) *
               C50762) *
              C250 +
          (((((C24890 + C24891) * C121 + (C24892 + C24893) * C50776) * C16981 +
             ((C24894 + C24895) * C121 + (C24896 + C24897) * C50776) * C50885) *
                C50992 +
            (((C26454 + C26455) * C121 + (C26456 + C26457) * C50776) * C16981 +
             ((C26458 + C26459) * C121 + (C26460 + C26461) * C50776) * C50885) *
                C50911) *
               C50762 -
           ((((C26457 + C26456) * C50776 + (C26455 + C26454) * C121) * C50885 +
             ((C49711 * C390 + C50692 * C398 + C49718 * C391 + C50963 * C399) *
                  C50776 +
              (C49711 * C380 + C50692 * C386 + C49718 * C381 + C50963 * C387) *
                  C121) *
                 C16981) *
                C50911 +
            (((C24893 + C24892) * C50776 + (C24891 + C24890) * C121) * C50885 +
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C50776 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C121) *
                 C16981) *
                C50992) *
               C50975) *
              C251 +
          (((((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                  C121 +
              (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                  C50776) *
                 C16981 +
             ((C24898 + C24899) * C121 + (C24900 + C24901) * C50776) * C50885) *
                C50992 +
            (((C49718 * C380 + C50963 * C386 + C49711 * C379 + C50692 * C385) *
                  C121 +
              (C49718 * C390 + C50963 * C398 + C49711 * C389 + C50692 * C397) *
                  C50776) *
                 C16981 +
             ((C27773 + C27774) * C121 + (C27775 + C27776) * C50776) * C50885) *
                C50911) *
               C50975 -
           ((((C49711 * C731 + C50692 * C739 + C49718 * C732 + C50963 * C740) *
                  C50776 +
              (C49711 * C715 + C50692 * C727 + C49718 * C716 + C50963 * C728) *
                  C121) *
                 C50885 +
             ((C27776 + C27775) * C50776 + (C27774 + C27773) * C121) * C16981) *
                C50911 +
            (((C24905 + C24904) * C50776 + (C24903 + C24902) * C121) * C50885 +
             ((C24901 + C24900) * C50776 + (C24899 + C24898) * C121) * C16981) *
                C50992) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C121 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50776) *
                C16981 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C50885) *
               C50992 +
           (((C27996 + C27995) * C121 + (C27998 + C27997) * C50776) * C16981 +
            ((C25520 + C25519) * C121 + (C25522 + C25521) * C50776) * C50885) *
               C50911) *
              C592 -
          (((C25533 * C50776 + C25532 * C121) * C50885 +
            ((C25521 + C25522) * C50776 + (C25519 + C25520) * C121) * C16981) *
               C50911 +
           (((C24889 + C24888) * C50776 + (C24887 + C24886) * C121) * C50885 +
            ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C16981) *
               C50992) *
              C593 +
          ((C25230 * C16981 +
            ((C25223 + C25222) * C121 + (C25221 + C25220) * C50776) * C50885) *
               C50992 +
           (((C25525 + C25524) * C121 + (C25527 + C25526) * C50776) * C16981 +
            ((C25528 + C25529) * C121 + (C25530 + C25531) * C50776) * C50885) *
               C50911) *
              C594 -
          ((((C49711 * C3013 + C50692 * C3017 + C49718 * C3014 +
              C50963 * C3018) *
                 C50776 +
             (C49711 * C3005 + C50692 * C3011 + C49718 * C3006 +
              C50963 * C3012) *
                 C121) *
                C50885 +
            ((C25531 + C25530) * C50776 + (C25529 + C25528) * C121) * C16981) *
               C50911 +
           (((C25345 + C25344) * C50776 + (C25343 + C25342) * C121) * C50885 +
            C25346 * C16981) *
               C50992) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C377 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50977 -
             (C27995 + C27996) * C378 - (C27997 + C27998) * C50788) *
                C16981 +
            ((C24882 + C24883) * C377 + (C24884 + C24885) * C50977 -
             (C25519 + C25520) * C378 - (C25521 + C25522) * C50788) *
                C50885) *
               C50992 +
           (((C27996 + C27995) * C377 + (C27998 + C27997) * C50977 -
             (C49711 * C848 + C50692 * C853 + C49718 * C847 + C50963 * C852) *
                 C378 -
             (C49711 * C857 + C50692 * C863 + C49718 * C856 + C50963 * C862) *
                 C50788) *
                C16981 +
            ((C25520 + C25519) * C377 + (C25522 + C25521) * C50977 -
             (C25847 + C25846) * C378 - (C25849 + C25848) * C50788) *
                C50885) *
               C50911) *
              C50746 * C250 +
          ((((C27999 + C28000) * C378 -
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C50977 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C377) +
             (C28001 + C28002) * C50788) *
                C16981 +
            ((C26454 + C26455) * C378 -
             ((C24893 + C24892) * C50977 + (C24891 + C24890) * C377) +
             (C26456 + C26457) * C50788) *
                C50885) *
               C50992 +
           (((C49718 * C848 + C50963 * C853 + C49711 * C849 + C50692 * C854) *
                 C378 -
             ((C28002 + C28001) * C50977 + (C28000 + C27999) * C377) +
             (C49718 * C857 + C50963 * C863 + C49711 * C858 + C50692 * C864) *
                 C50788) *
                C16981 +
            ((C49718 * C967 + C50963 * C971 + C49711 * C966 + C50692 * C970) *
                 C378 -
             ((C26457 + C26456) * C50977 + (C26455 + C26454) * C377) +
             (C49718 * C975 + C50963 * C979 + C49711 * C974 + C50692 * C978) *
                 C50788) *
                C50885) *
               C50911) *
              C50746 * C251 +
          ((((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                 C377 +
             (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                 C50977 -
             (C28003 + C28004) * C378 - (C28005 + C28006) * C50788) *
                C16981 +
            ((C24898 + C24899) * C377 + (C24900 + C24901) * C50977 -
             (C27774 + C27773) * C378 - (C27776 + C27775) * C50788) *
                C50885) *
               C50992 +
           (((C28004 + C28003) * C377 + (C28006 + C28005) * C50977 -
             (C49711 * C850 + C50692 * C855 + C49718 * C849 + C50963 * C854) *
                 C378 -
             (C49711 * C859 + C50692 * C865 + C49718 * C858 + C50963 * C864) *
                 C50788) *
                C16981 +
            ((C27773 + C27774) * C377 + (C27775 + C27776) * C50977 -
             (C49711 * C965 + C50692 * C969 + C49718 * C966 + C50963 * C970) *
                 C378 -
             (C49711 * C973 + C50692 * C977 + C49718 * C974 + C50963 * C978) *
                 C50788) *
                C50885) *
               C50911) *
              C50746 * C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C377 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50977 -
             (C27995 + C27996) * C378 - (C27997 + C27998) * C50788) *
                C16981 +
            ((C24882 + C24883) * C377 + (C24884 + C24885) * C50977 -
             C28525 * C378 - C28526 * C50788) *
                C50885) *
               C50992 +
           (((C27996 + C27995) * C377 + (C27998 + C27997) * C50977 -
             (C49711 * C848 + C50692 * C853 + C49718 * C847 + C50963 * C852) *
                 C378 -
             (C49711 * C857 + C50692 * C863 + C49718 * C856 + C50963 * C862) *
                 C50788) *
                C16981 +
            (C28527 * C377 + C28528 * C50977 - (C25847 + C25846) * C378 -
             (C25849 + C25848) * C50788) *
                C50885) *
               C50911) *
              C501 +
          (((C28527 * C378 -
             ((C24885 + C24884) * C50977 + (C24883 + C24882) * C377) +
             C28528 * C50788) *
                C16981 +
            (C28529 * C378 -
             ((C24889 + C24888) * C50977 + (C24887 + C24886) * C377) +
             C28530 * C50788) *
                C50885) *
               C50992 +
           (((C25846 + C25847) * C378 - (C28526 * C50977 + C28525 * C377) +
             (C25848 + C25849) * C50788) *
                C16981 +
            ((C25850 + C25851) * C378 - (C25533 * C50977 + C25532 * C377) +
             (C25852 + C25853) * C50788) *
                C50885) *
               C50911) *
              C502 +
          ((C25537 * C16981 +
            ((C25223 + C25222) * C377 + (C25221 + C25220) * C50977 -
             (C25529 + C25528) * C378 - (C25531 + C25530) * C50788) *
                C50885) *
               C50992 +
           ((C28529 * C377 + C28530 * C50977 - (C25851 + C25850) * C378 -
             (C25853 + C25852) * C50788) *
                C16981 +
            ((C25528 + C25529) * C377 + (C25530 + C25531) * C50977 -
             (C49711 * C3368 + C50692 * C3370 + C49718 * C3369 +
              C50963 * C3371) *
                 C378 -
             (C49711 * C3372 + C50692 * C3374 + C49718 * C3373 +
              C50963 * C3375) *
                 C50788) *
                C50885) *
               C50911) *
              C503) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50776) *
                C16981 +
            ((C17169 + C17170 + C17171) * C121 +
             (C17172 + C17173 + C17174) * C50776) *
                C50885) *
               C50847 * C1169 -
           (((C17503 + C17504 + C17505) * C50776 +
             (C17506 + C17507 + C17508) * C121) *
                C50885 +
            ((C17174 + C17173 + C17172) * C50776 +
             (C17171 + C17170 + C17169) * C121) *
                C16981) *
               C50847 * C50762) *
              C51021 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50776) *
                C16981 +
            ((C17509 + C17510 + C17511) * C121 +
             (C17512 + C17513 + C17514) * C50776) *
                C50885) *
               C50847 * C50762 -
           (((C17180 + C17179 + C17178) * C50776 +
             (C17177 + C17176 + C17175) * C121) *
                C50885 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50776 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C16981) *
               C50847 * C1169) *
              C51006 +
          ((((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
              C16985 * C126 + C16980 * C138) *
                 C121 +
             (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
              C16985 * C137 + C16980 * C147) *
                 C50776) *
                C16981 +
            ((C17181 + C17182 + C17183) * C121 +
             (C17184 + C17185 + C17186) * C50776) *
                C50885) *
               C50847 * C1169 -
           (((C16985 * C519 + C16980 * C525 + C16984 * C518 + C16979 * C524 +
              C16983 * C517 + C16978 * C523) *
                 C50776 +
             (C16985 * C510 + C16980 * C520 + C16984 * C509 + C16979 * C514 +
              C16983 * C508 + C16978 * C513) *
                 C121) *
                C50885 +
            ((C17186 + C17185 + C17184) * C50776 +
             (C17183 + C17182 + C17181) * C121) *
                C16981) *
               C50847 * C50762) *
              C1173)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C19763 +
            (C19921 + C19922) * C19764 + C20135 * C19765 + C20136 * C19766) *
               C50847 * C1169 -
           (C20225 * C19766 + C20226 * C19765 + (C19924 + C19923) * C19764 +
            (C19922 + C19921) * C19763) *
               C50847 * C50762) *
              C51021 +
          (((C19927 + C19928) * C19763 + (C19929 + C19930) * C19764 +
            (C19931 + C19932) * C19765 + (C20153 + C20154) * C19766) *
               C50847 * C50762 -
           (C20145 * C19766 + C20146 * C19765 + (C19928 + C19927) * C19764 +
            ((C19767 * C134 + C50687 * C144) * C50776 +
             (C19767 * C123 + C50687 * C130) * C121) *
                C19763) *
               C50847 * C1169) *
              C51006 +
          ((((C19767 * C124 + C50687 * C131) * C121 +
             (C19767 * C135 + C50687 * C145) * C50776) *
                C19763 +
            (C19933 + C19934) * C19764 + (C19935 + C19936) * C19765 +
            (C19937 + C19938) * C19766) *
               C50847 * C1169 -
           (((C19767 * C2695 + C50687 * C2699) * C50776 +
             (C19767 * C2690 + C50687 * C2696) * C121) *
                C19766 +
            (C19938 + C19937) * C19765 + (C19936 + C19935) * C19764 +
            (C19934 + C19933) * C19763) *
               C50847 * C50762) *
              C1173)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50776) *
                C16981 +
            ((C17169 + C17170 + C17171) * C121 +
             (C17172 + C17173 + C17174) * C50776) *
                C50885) *
               C50847 * C51022 -
           (((C17503 + C17504 + C17505) * C50776 +
             (C17506 + C17507 + C17508) * C121) *
                C50885 +
            ((C17174 + C17173 + C17172) * C50776 +
             (C17171 + C17170 + C17169) * C121) *
                C16981) *
               C50847 * C51009 +
           (((C17508 + C17507 + C17506) * C121 +
             (C17505 + C17504 + C17503) * C50776) *
                C16981 +
            ((C17625 + C17626 + C17627) * C121 +
             (C17628 + C17629 + C17630) * C50776) *
                C50885) *
               C50847 * C1274) *
              C1275 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50776) *
                C16981 +
            ((C17509 + C17510 + C17511) * C121 +
             (C17512 + C17513 + C17514) * C50776) *
                C50885) *
               C50847 * C51009 -
           (((C17180 + C17179 + C17178) * C50776 +
             (C17177 + C17176 + C17175) * C121) *
                C50885 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50776 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C16981) *
               C50847 * C51022 -
           (((C16985 * C601 + C16980 * C609 + C16984 * C602 + C16979 * C610 +
              C16983 * C603 + C16978 * C611) *
                 C50776 +
             (C16985 * C597 + C16980 * C605 + C16984 * C598 + C16979 * C606 +
              C16983 * C599 + C16978 * C607) *
                 C121) *
                C50885 +
            ((C17514 + C17513 + C17512) * C50776 +
             (C17511 + C17510 + C17509) * C121) *
                C16981) *
               C50847 * C1274) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C19763 +
            (C19921 + C19922) * C19764 + C20135 * C19765 + C20136 * C19766) *
               C50847 * C51022 -
           (C20225 * C19766 + C20226 * C19765 + (C19924 + C19923) * C19764 +
            (C19922 + C19921) * C19763) *
               C50847 * C51009 +
           (C20135 * C19763 + C20136 * C19764 + (C20152 + C20151) * C19765 +
            (C20233 + C20234) * C19766) *
               C50847 * C1274) *
              C1275 +
          (((C19927 + C19928) * C19763 + (C19929 + C19930) * C19764 +
            (C19931 + C19932) * C19765 + (C20153 + C20154) * C19766) *
               C50847 * C51009 -
           (C20145 * C19766 + C20146 * C19765 + (C19928 + C19927) * C19764 +
            ((C19767 * C134 + C50687 * C144) * C50776 +
             (C19767 * C123 + C50687 * C130) * C121) *
                C19763) *
               C50847 * C51022 -
           (((C19767 * C2834 + C50687 * C2838) * C50776 +
             (C19767 * C2832 + C50687 * C2836) * C121) *
                C19766 +
            (C20154 + C20153) * C19765 + C20145 * C19764 + C20146 * C19763) *
               C50847 * C1274) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[137] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                       C16979 * C130 + C16985 * C124 + C16980 * C131) *
                          C377 +
                      (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                       C16979 * C144 + C16985 * C135 + C16980 * C145) *
                          C50977 -
                      (C16985 * C380 + C16980 * C386 + C16984 * C381 +
                       C16979 * C387 + C16983 * C382 + C16978 * C388) *
                          C378 -
                      (C16985 * C390 + C16980 * C398 + C16984 * C391 +
                       C16979 * C399 + C16983 * C392 + C16978 * C400) *
                          C50788) *
                         C16981 +
                     ((C17169 + C17170 + C17171) * C377 +
                      (C17172 + C17173 + C17174) * C50977 -
                      (C17801 + C17802 + C17803) * C378 -
                      (C17804 + C17805 + C17806) * C50788) *
                         C50885) *
                        C50847 * C1169 +
                    (((C17803 + C17802 + C17801) * C378 -
                      ((C17174 + C17173 + C17172) * C50977 +
                       (C17171 + C17170 + C17169) * C377) +
                      (C17806 + C17805 + C17804) * C50788) *
                         C16981 +
                     ((C17807 + C17808 + C17809) * C378 -
                      ((C17503 + C17504 + C17505) * C50977 +
                       (C17506 + C17507 + C17508) * C377) +
                      (C17810 + C17811 + C17812) * C50788) *
                         C50885) *
                        C50847 * C50762) *
                       C1275 +
                   ((((C16983 * C381 + C16978 * C387 + C16984 * C380 +
                       C16979 * C386 + C16985 * C379 + C16980 * C385) *
                          C378 -
                      ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                        C16979 * C145 + C16983 * C134 + C16978 * C144) *
                           C50977 +
                       (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                        C16979 * C131 + C16983 * C123 + C16978 * C130) *
                           C377) +
                      (C16983 * C391 + C16978 * C399 + C16984 * C390 +
                       C16979 * C398 + C16985 * C389 + C16980 * C397) *
                          C50788) *
                         C16981 +
                     ((C18719 + C18720 + C18721) * C378 -
                      ((C17180 + C17179 + C17178) * C50977 +
                       (C17177 + C17176 + C17175) * C377) +
                      (C18722 + C18723 + C18724) * C50788) *
                         C50885) *
                        C50847 * C1169 +
                    (((C17175 + C17176 + C17177) * C377 +
                      (C17178 + C17179 + C17180) * C50977 -
                      (C18721 + C18720 + C18719) * C378 -
                      (C18724 + C18723 + C18722) * C50788) *
                         C16981 +
                     ((C17509 + C17510 + C17511) * C377 +
                      (C17512 + C17513 + C17514) * C50977 -
                      (C16985 * C715 + C16980 * C727 + C16984 * C716 +
                       C16979 * C728 + C16983 * C717 + C16978 * C729) *
                          C378 -
                      (C16985 * C731 + C16980 * C739 + C16984 * C732 +
                       C16979 * C740 + C16983 * C733 + C16978 * C741) *
                          C50788) *
                         C50885) *
                        C50847 * C50762) *
                       C50719)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C19767 * C122 + C50687 * C129) * C377 +
                      (C19767 * C133 + C50687 * C143) * C50977 -
                      (C19767 * C382 + C50687 * C388) * C378 -
                      (C19767 * C392 + C50687 * C400) * C50788) *
                         C19763 +
                     (C20337 + C20338 - C20371 - C20372) * C19764 +
                     C20381 * C19765 + C20382 * C19766) *
                        C50847 * C1169 +
                    ((C20371 - (C20338 + C20337) + C20372) * C19763 +
                     (C20373 - (C20344 + C20343) + C20374) * C19764 +
                     (C20375 - (C20350 + C20349) + C20376) * C19765 +
                     (C20377 - (C20357 + C20358) + C20378) * C19766) *
                        C50847 * C50762) *
                       C1275 +
                   ((((C19767 * C381 + C50687 * C387) * C378 -
                      ((C19767 * C134 + C50687 * C144) * C50977 +
                       (C19767 * C123 + C50687 * C130) * C377) +
                      (C19767 * C391 + C50687 * C399) * C50788) *
                         C19763 +
                     (C21039 - (C21017 + C21018) + C21040) * C19764 +
                     (C21041 - (C21023 + C21024) + C21042) * C19765 +
                     (C21043 - (C21029 + C21030) + C21044) * C19766) *
                        C50847 * C1169 +
                    ((C21018 + C21017 - C21039 - C21040) * C19763 +
                     (C21024 + C21023 - C21041 - C21042) * C19764 +
                     (C21030 + C21029 - C21043 - C21044) * C19765 +
                     (C20149 * C377 + C20150 * C50977 -
                      (C19767 * C3005 + C50687 * C3011) * C378 -
                      (C19767 * C3013 + C50687 * C3017) * C50788) *
                         C19766) *
                        C50847 * C50762) *
                       C50719)) /
                     (p * q * std::sqrt(p + q));
    d2ee[138] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                       C16979 * C130 + C16985 * C124 + C16980 * C131) *
                          C1511 +
                      (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                       C16979 * C144 + C16985 * C135 + C16980 * C145) *
                          C1509 -
                      (C16985 * C380 + C16980 * C386 + C16984 * C381 +
                       C16979 * C387 + C16983 * C382 + C16978 * C388) *
                          C1512 -
                      (C16985 * C390 + C16980 * C398 + C16984 * C391 +
                       C16979 * C399 + C16983 * C392 + C16978 * C400) *
                          C50788) *
                         C16981 +
                     ((C17169 + C17170 + C17171) * C1511 +
                      (C17172 + C17173 + C17174) * C1509 -
                      (C17801 + C17802 + C17803) * C1512 -
                      (C17804 + C17805 + C17806) * C50788) *
                         C50885) *
                        C50847 * C1169 +
                    (((C17803 + C17802 + C17801) * C1512 -
                      ((C17174 + C17173 + C17172) * C1509 +
                       (C17171 + C17170 + C17169) * C1511) +
                      (C17806 + C17805 + C17804) * C50788) *
                         C16981 +
                     ((C17807 + C17808 + C17809) * C1512 -
                      ((C17503 + C17504 + C17505) * C1509 +
                       (C17506 + C17507 + C17508) * C1511) +
                      (C17810 + C17811 + C17812) * C50788) *
                         C50885) *
                        C50847 * C50762) *
                       C50968 +
                   ((((C16983 * C381 + C16978 * C387 + C16984 * C380 +
                       C16979 * C386 + C16985 * C379 + C16980 * C385) *
                          C1512 -
                      ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                        C16979 * C145 + C16983 * C134 + C16978 * C144) *
                           C1509 +
                       (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                        C16979 * C131 + C16983 * C123 + C16978 * C130) *
                           C1511) +
                      (C16983 * C391 + C16978 * C399 + C16984 * C390 +
                       C16979 * C398 + C16985 * C389 + C16980 * C397) *
                          C50788) *
                         C16981 +
                     ((C18719 + C18720 + C18721) * C1512 -
                      ((C17180 + C17179 + C17178) * C1509 +
                       (C17177 + C17176 + C17175) * C1511) +
                      (C18722 + C18723 + C18724) * C50788) *
                         C50885) *
                        C50847 * C1169 +
                    (((C17175 + C17176 + C17177) * C1511 +
                      (C17178 + C17179 + C17180) * C1509 -
                      (C18721 + C18720 + C18719) * C1512 -
                      (C18724 + C18723 + C18722) * C50788) *
                         C16981 +
                     ((C17509 + C17510 + C17511) * C1511 +
                      (C17512 + C17513 + C17514) * C1509 -
                      (C16985 * C715 + C16980 * C727 + C16984 * C716 +
                       C16979 * C728 + C16983 * C717 + C16978 * C729) *
                          C1512 -
                      (C16985 * C731 + C16980 * C739 + C16984 * C732 +
                       C16979 * C740 + C16983 * C733 + C16978 * C741) *
                          C50788) *
                         C50885) *
                        C50847 * C50762) *
                       C50719)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C19767 * C122 + C50687 * C129) * C1511 +
                      (C19767 * C133 + C50687 * C143) * C1509 -
                      (C19767 * C382 + C50687 * C388) * C1512 -
                      (C19767 * C392 + C50687 * C400) * C50788) *
                         C19763 +
                     (C21273 + C21274 - C21275 - C21276) * C19764 +
                     (C21277 + C21278 - C21279 - C21280) * C19765 +
                     (C21281 + C21282 - C21283 - C21284) * C19766) *
                        C50847 * C1169 +
                    ((C21275 - (C21274 + C21273) + C21276) * C19763 +
                     (C21279 - (C21278 + C21277) + C21280) * C19764 +
                     (C21283 - (C21282 + C21281) + C21284) * C19765 +
                     (C20369 * C1512 - (C20147 * C1509 + C20148 * C1511) +
                      C20370 * C50788) *
                         C19766) *
                        C50847 * C50762) *
                       C50968 +
                   ((((C19767 * C381 + C50687 * C387) * C1512 -
                      ((C19767 * C134 + C50687 * C144) * C1509 +
                       (C19767 * C123 + C50687 * C130) * C1511) +
                      (C19767 * C391 + C50687 * C399) * C50788) *
                         C19763 +
                     (C21285 - (C21286 + C21287) + C21288) * C19764 +
                     (C21289 - (C21290 + C21291) + C21292) * C19765 +
                     (C21293 - (C21294 + C21295) + C21296) * C19766) *
                        C50847 * C1169 +
                    ((C21287 + C21286 - C21285 - C21288) * C19763 +
                     (C21291 + C21290 - C21289 - C21292) * C19764 +
                     (C21295 + C21294 - C21293 - C21296) * C19765 +
                     (C20149 * C1511 + C20150 * C1509 -
                      (C19767 * C3005 + C50687 * C3011) * C1512 -
                      (C19767 * C3013 + C50687 * C3017) * C50788) *
                         C19766) *
                        C50847 * C50762) *
                       C50719)) /
                     (p * q * std::sqrt(p + q));
    d2ee[139] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                      C16979 * C130 + C16985 * C124 + C16980 * C131) *
                         C1511 +
                     (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                      C16979 * C144 + C16985 * C135 + C16980 * C145) *
                         C1509 -
                     (C16985 * C380 + C16980 * C386 + C16984 * C381 +
                      C16979 * C387 + C16983 * C382 + C16978 * C388) *
                         C1512 -
                     (C16985 * C390 + C16980 * C398 + C16984 * C391 +
                      C16979 * C399 + C16983 * C392 + C16978 * C400) *
                         C50788) *
                        C16981 +
                    ((C17169 + C17170 + C17171) * C1511 +
                     (C17172 + C17173 + C17174) * C1509 -
                     (C17801 + C17802 + C17803) * C1512 -
                     (C17804 + C17805 + C17806) * C50788) *
                        C50885) *
                       C50847 * C51022 +
                   (((C17803 + C17802 + C17801) * C1512 -
                     ((C17174 + C17173 + C17172) * C1509 +
                      (C17171 + C17170 + C17169) * C1511) +
                     (C17806 + C17805 + C17804) * C50788) *
                        C16981 +
                    ((C17807 + C17808 + C17809) * C1512 -
                     ((C17503 + C17504 + C17505) * C1509 +
                      (C17506 + C17507 + C17508) * C1511) +
                     (C17810 + C17811 + C17812) * C50788) *
                        C50885) *
                       C50847 * C51009 +
                   (((C17508 + C17507 + C17506) * C1511 +
                     (C17505 + C17504 + C17503) * C1509 -
                     (C17809 + C17808 + C17807) * C1512 -
                     (C17812 + C17811 + C17810) * C50788) *
                        C16981 +
                    ((C17625 + C17626 + C17627) * C1511 +
                     (C17628 + C17629 + C17630) * C1509 -
                     (C16985 * C4000 + C16980 * C4001 + C16984 * C3004 +
                      C16979 * C3008 + C16983 * C3003 + C16978 * C3007) *
                         C1512 -
                     (C16985 * C4002 + C16980 * C4003 + C16984 * C3010 +
                      C16979 * C3016 + C16983 * C3009 + C16978 * C3015) *
                         C50788) *
                        C50885) *
                       C50847 * C1274) *
                  C50714) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C19767 * C122 + C50687 * C129) * C1511 +
                     (C19767 * C133 + C50687 * C143) * C1509 -
                     (C19767 * C382 + C50687 * C388) * C1512 -
                     (C19767 * C392 + C50687 * C400) * C50788) *
                        C19763 +
                    (C21273 + C21274 - C21275 - C21276) * C19764 +
                    C21631 * C19765 + C21632 * C19766) *
                       C50847 * C51022 +
                   ((C21275 - (C21274 + C21273) + C21276) * C19763 +
                    (C21279 - (C21278 + C21277) + C21280) * C19764 +
                    (C21283 - (C21282 + C21281) + C21284) * C19765 +
                    (C21625 - (C21626 + C21627) + C21628) * C19766) *
                       C50847 * C51009 +
                   (C21631 * C19763 + C21632 * C19764 +
                    (C21627 + C21626 - C21625 - C21628) * C19765 +
                    (C20231 * C1511 + C20232 * C1509 -
                     (C19767 * C20332 + C50687 * C20333) * C1512 -
                     (C19767 * C20334 + C50687 * C20335) * C50788) *
                        C19766) *
                       C50847 * C1274) *
                  C50714) /
                     (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C1744 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C51023 -
            (C16985 * C380 + C16980 * C386 + C16984 * C381 + C16979 * C387 +
             C16983 * C382 + C16978 * C388) *
                C1745 -
            (C16985 * C390 + C16980 * C398 + C16984 * C391 + C16979 * C399 +
             C16983 * C392 + C16978 * C400) *
                C51012 +
            (C16983 * C847 + C16978 * C852 + C16984 * C848 + C16979 * C853 +
             C16985 * C849 + C16980 * C854) *
                C1746 +
            (C16983 * C856 + C16978 * C862 + C16984 * C857 + C16979 * C863 +
             C16985 * C858 + C16980 * C864) *
                C1743) *
               C16981 +
           ((C17169 + C17170 + C17171) * C1744 +
            (C17172 + C17173 + C17174) * C51023 -
            (C17801 + C17802 + C17803) * C1745 -
            (C17804 + C17805 + C17806) * C51012 +
            (C18117 + C18118 + C18119) * C1746 +
            (C18120 + C18121 + C18122) * C1743) *
               C50885) *
              C50847 * C1169 +
          (((C17803 + C17802 + C17801) * C1745 -
            ((C17174 + C17173 + C17172) * C51023 +
             (C17171 + C17170 + C17169) * C1744) +
            (C17806 + C17805 + C17804) * C51012 -
            (C18119 + C18118 + C18117) * C1746 -
            (C18122 + C18121 + C18120) * C1743) *
               C16981 +
           ((C17807 + C17808 + C17809) * C1745 -
            ((C17503 + C17504 + C17505) * C51023 +
             (C17506 + C17507 + C17508) * C1744) +
            (C17810 + C17811 + C17812) * C51012 -
            (C16985 * C3212 + C16980 * C3217 + C16984 * C3211 + C16979 * C3214 +
             C16983 * C3210 + C16978 * C3213) *
                C1746 -
            (C16985 * C3218 + C16980 * C3221 + C16984 * C3216 + C16979 * C3220 +
             C16983 * C3215 + C16978 * C3219) *
                C1743) *
               C50885) *
              C50847 * C50762) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C1744 +
            (C19767 * C133 + C50687 * C143) * C51023 -
            (C19767 * C382 + C50687 * C388) * C1745 -
            (C19767 * C392 + C50687 * C400) * C51012 +
            (C19767 * C847 + C50687 * C852) * C1746 +
            (C19767 * C856 + C50687 * C862) * C1743) *
               C19763 +
           (C21731 + C21732 - C21733 - C21734 + C21735 + C21736) * C19764 +
           (C21737 + C21738 - C21739 - C21740 + C21741 + C21742) * C19765 +
           (C21743 + C21744 - C21745 - C21746 + C21747 + C21748) * C19766) *
              C50847 * C1169 +
          ((C21733 - (C21732 + C21731) + C21734 - C21735 - C21736) * C19763 +
           (C21739 - (C21738 + C21737) + C21740 - C21741 - C21742) * C19764 +
           (C21745 - (C21744 + C21743) + C21746 - C21747 - C21748) * C19765 +
           (C20369 * C1745 - (C20147 * C51023 + C20148 * C1744) +
            C20370 * C51012 - (C19767 * C20578 + C50687 * C20579) * C1746 -
            (C19767 * C20580 + C50687 * C20581) * C1743) *
               C19766) *
              C50847 * C50762) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50776) *
                C16981 +
            ((C17169 + C17170 + C17171) * C121 +
             (C17172 + C17173 + C17174) * C50776) *
                C50885) *
               C50847 * C501 -
           (((C17503 + C17504 + C17505) * C50776 +
             (C17506 + C17507 + C17508) * C121) *
                C50885 +
            ((C17174 + C17173 + C17172) * C50776 +
             (C17171 + C17170 + C17169) * C121) *
                C16981) *
               C50847 * C502 +
           (((C17508 + C17507 + C17506) * C121 +
             (C17505 + C17504 + C17503) * C50776) *
                C16981 +
            ((C16983 * C600 + C16978 * C608 + C16984 * C599 + C16979 * C607 +
              C16985 * C598 + C16980 * C606) *
                 C121 +
             (C16983 * C604 + C16978 * C612 + C16984 * C603 + C16979 * C611 +
              C16985 * C602 + C16980 * C610) *
                 C50776) *
                C50885) *
               C50847 * C503) *
              C50968 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50776) *
                C16981 +
            ((C17509 + C17510 + C17511) * C121 +
             (C17512 + C17513 + C17514) * C50776) *
                C50885) *
               C50847 * C502 -
           (((C17180 + C17179 + C17178) * C50776 +
             (C17177 + C17176 + C17175) * C121) *
                C50885 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50776 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C16981) *
               C50847 * C501 -
           (((C16985 * C601 + C16980 * C609 + C16984 * C602 + C16979 * C610 +
              C16983 * C603 + C16978 * C611) *
                 C50776 +
             (C16985 * C597 + C16980 * C605 + C16984 * C598 + C16979 * C606 +
              C16983 * C599 + C16978 * C607) *
                 C121) *
                C50885 +
            ((C17514 + C17513 + C17512) * C50776 +
             (C17511 + C17510 + C17509) * C121) *
                C16981) *
               C50847 * C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C121 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50776) *
               C16981 +
           ((C16983 * C256 + C16978 * C266 + C16984 * C255 + C16979 * C265 +
             C16985 * C254 + C16980 * C264) *
                C121 +
            (C16983 * C262 + C16978 * C274 + C16984 * C261 + C16979 * C273 +
             C16985 * C260 + C16980 * C272) *
                C50776) *
               C50885) *
              C50847 * C50746 * C113 -
          (((C16985 * C259 + C16980 * C271 + C16984 * C260 + C16979 * C272 +
             C16983 * C261 + C16978 * C273) *
                C50776 +
            (C16985 * C253 + C16980 * C263 + C16984 * C254 + C16979 * C264 +
             C16983 * C255 + C16978 * C265) *
                C121) *
               C50885 +
           ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
             C16983 * C134 + C16978 * C144) *
                C50776 +
            (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
             C16983 * C123 + C16978 * C130) *
                C121) *
               C16981) *
              C50847 * C50746 * C114 +
          (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
             C16985 * C126 + C16980 * C138) *
                C121 +
            (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
             C16985 * C137 + C16980 * C147) *
                C50776) *
               C16981 +
           ((C16983 * C254 + C16978 * C264 + C16984 * C253 + C16979 * C263 +
             C16985 * C257 + C16980 * C267) *
                C121 +
            (C16983 * C260 + C16978 * C272 + C16984 * C259 + C16979 * C271 +
             C16985 * C268 + C16980 * C275) *
                C50776) *
               C50885) *
              C50847 * C50746 * C115 -
          (((C16985 * C269 + C16980 * C276 + C16984 * C268 + C16979 * C275 +
             C16983 * C259 + C16978 * C271) *
                C50776 +
            (C16985 * C258 + C16980 * C270 + C16984 * C257 + C16979 * C267 +
             C16983 * C253 + C16978 * C263) *
                C121) *
               C50885 +
           ((C16985 * C140 + C16980 * C148 + C16984 * C137 + C16979 * C147 +
             C16983 * C136 + C16978 * C146) *
                C50776 +
            (C16985 * C127 + C16980 * C139 + C16984 * C126 + C16979 * C138 +
             C16983 * C125 + C16978 * C132) *
                C121) *
               C16981) *
              C50847 * C50746 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C844 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C841 -
            (C16985 * C380 + C16980 * C386 + C16984 * C381 + C16979 * C387 +
             C16983 * C382 + C16978 * C388) *
                C845 -
            (C16985 * C390 + C16980 * C398 + C16984 * C391 + C16979 * C399 +
             C16983 * C392 + C16978 * C400) *
                C842 +
            (C16983 * C847 + C16978 * C852 + C16984 * C848 + C16979 * C853 +
             C16985 * C849 + C16980 * C854) *
                C846 +
            (C16983 * C856 + C16978 * C862 + C16984 * C857 + C16979 * C863 +
             C16985 * C858 + C16980 * C864) *
                C843) *
               C16981 +
           ((C17169 + C17170 + C17171) * C844 +
            (C17172 + C17173 + C17174) * C841 -
            (C17801 + C17802 + C17803) * C845 -
            (C17804 + C17805 + C17806) * C842 +
            (C16983 * C968 + C16978 * C972 + C16984 * C967 + C16979 * C971 +
             C16985 * C966 + C16980 * C970) *
                C846 +
            (C16983 * C976 + C16978 * C980 + C16984 * C975 + C16979 * C979 +
             C16985 * C974 + C16980 * C978) *
                C843) *
               C50885) *
              C50847 * C50746 * C50968 +
          (((C16983 * C381 + C16978 * C387 + C16984 * C380 + C16979 * C386 +
             C16985 * C379 + C16980 * C385) *
                C845 -
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C841 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C844) +
            (C16983 * C391 + C16978 * C399 + C16984 * C390 + C16979 * C398 +
             C16985 * C389 + C16980 * C397) *
                C842 -
            (C16985 * C850 + C16980 * C855 + C16984 * C849 + C16979 * C854 +
             C16983 * C848 + C16978 * C853) *
                C846 -
            (C16985 * C859 + C16980 * C865 + C16984 * C858 + C16979 * C864 +
             C16983 * C857 + C16978 * C863) *
                C843) *
               C16981 +
           ((C16983 * C712 + C16978 * C720 + C16984 * C713 + C16979 * C721 +
             C16985 * C714 + C16980 * C722) *
                C845 -
            ((C17180 + C17179 + C17178) * C841 +
             (C17177 + C17176 + C17175) * C844) +
            (C16983 * C724 + C16978 * C736 + C16984 * C725 + C16979 * C737 +
             C16985 * C726 + C16980 * C738) *
                C842 -
            (C16985 * C965 + C16980 * C969 + C16984 * C966 + C16979 * C970 +
             C16983 * C967 + C16978 * C971) *
                C846 -
            (C16985 * C973 + C16980 * C977 + C16984 * C974 + C16979 * C978 +
             C16983 * C975 + C16978 * C979) *
                C843) *
               C50885) *
              C50847 * C50746 * C50719)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C121 +
            (C19767 * C133 + C50687 * C143) * C50776) *
               C19763 +
           ((C19767 * C256 + C50687 * C266) * C121 +
            (C19767 * C262 + C50687 * C274) * C50776) *
               C19764 +
           ((C19767 * C506 + C50687 * C511) * C121 +
            (C19767 * C515 + C50687 * C521) * C50776) *
               C19765 +
           ((C19767 * C600 + C50687 * C608) * C121 +
            (C19767 * C604 + C50687 * C612) * C50776) *
               C19766) *
              C50847 * C50746 * C113 -
          (((C19767 * C603 + C50687 * C611) * C50776 +
            (C19767 * C599 + C50687 * C607) * C121) *
               C19766 +
           ((C19767 * C516 + C50687 * C522) * C50776 +
            (C19767 * C507 + C50687 * C512) * C121) *
               C19765 +
           ((C19767 * C261 + C50687 * C273) * C50776 +
            (C19767 * C255 + C50687 * C265) * C121) *
               C19764 +
           ((C19767 * C134 + C50687 * C144) * C50776 +
            (C19767 * C123 + C50687 * C130) * C121) *
               C19763) *
              C50847 * C50746 * C114 +
          (((C19767 * C124 + C50687 * C131) * C121 +
            (C19767 * C135 + C50687 * C145) * C50776) *
               C19763 +
           ((C19767 * C254 + C50687 * C264) * C121 +
            (C19767 * C260 + C50687 * C272) * C50776) *
               C19764 +
           ((C19767 * C508 + C50687 * C513) * C121 +
            (C19767 * C517 + C50687 * C523) * C50776) *
               C19765 +
           ((C19767 * C598 + C50687 * C606) * C121 +
            (C19767 * C602 + C50687 * C610) * C50776) *
               C19766) *
              C50847 * C50746 * C115 -
          (((C19767 * C601 + C50687 * C609) * C50776 +
            (C19767 * C597 + C50687 * C605) * C121) *
               C19766 +
           ((C19767 * C518 + C50687 * C524) * C50776 +
            (C19767 * C509 + C50687 * C514) * C121) *
               C19765 +
           ((C19767 * C259 + C50687 * C271) * C50776 +
            (C19767 * C253 + C50687 * C263) * C121) *
               C19764 +
           ((C19767 * C136 + C50687 * C146) * C50776 +
            (C19767 * C125 + C50687 * C132) * C121) *
               C19763) *
              C50847 * C50746 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C19763 +
            (C19921 + C19922) * C19764 + C20135 * C19765 + C20136 * C19766) *
               C50847 * C501 -
           ((C20151 + C20152) * C19766 + (C19926 + C19925) * C19765 +
            (C19924 + C19923) * C19764 + (C19922 + C19921) * C19763) *
               C50847 * C502 +
           (C20135 * C19763 + C20136 * C19764 + (C20152 + C20151) * C19765 +
            ((C19767 * C2833 + C50687 * C2837) * C121 +
             (C19767 * C2835 + C50687 * C2839) * C50776) *
                C19766) *
               C50847 * C503) *
              C50968 +
          (((C19927 + C19928) * C19763 + (C19929 + C19930) * C19764 +
            (C19931 + C19932) * C19765 + (C20153 + C20154) * C19766) *
               C50847 * C502 -
           (C20145 * C19766 + C20146 * C19765 + (C19928 + C19927) * C19764 +
            ((C19767 * C134 + C50687 * C144) * C50776 +
             (C19767 * C123 + C50687 * C130) * C121) *
                C19763) *
               C50847 * C501 -
           (((C19767 * C2834 + C50687 * C2838) * C50776 +
             (C19767 * C2832 + C50687 * C2836) * C121) *
                C19766 +
            (C20154 + C20153) * C19765 + C20145 * C19764 + C20146 * C19763) *
               C50847 * C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C844 +
            (C19767 * C133 + C50687 * C143) * C841 -
            (C19767 * C382 + C50687 * C388) * C845 -
            (C19767 * C392 + C50687 * C400) * C842 +
            (C19767 * C847 + C50687 * C852) * C846 +
            (C19767 * C856 + C50687 * C862) * C843) *
               C19763 +
           (C19903 * C844 + C19904 * C841 - C20361 * C845 - C20362 * C842 +
            (C19767 * C968 + C50687 * C972) * C846 +
            (C19767 * C976 + C50687 * C980) * C843) *
               C19764 +
           (C19905 * C844 + C19906 * C841 - C20364 * C845 - C20365 * C842 +
            (C19767 * C3210 + C50687 * C3213) * C846 +
            (C19767 * C3215 + C50687 * C3219) * C843) *
               C19765 +
           (C19907 * C844 + C19908 * C841 - C20367 * C845 - C20368 * C842 +
            (C19767 * C3369 + C50687 * C3371) * C846 +
            (C19767 * C3373 + C50687 * C3375) * C843) *
               C19766) *
              C50847 * C50746 * C50968 +
          (((C19767 * C381 + C50687 * C387) * C845 -
            ((C19767 * C134 + C50687 * C144) * C841 +
             (C19767 * C123 + C50687 * C130) * C844) +
            (C19767 * C391 + C50687 * C399) * C842 -
            (C19767 * C848 + C50687 * C853) * C846 -
            (C19767 * C857 + C50687 * C863) * C843) *
               C19763 +
           ((C19767 * C712 + C50687 * C720) * C845 -
            (C19910 * C841 + C19909 * C844) +
            (C19767 * C724 + C50687 * C736) * C842 -
            (C19767 * C967 + C50687 * C971) * C846 -
            (C19767 * C975 + C50687 * C979) * C843) *
               C19764 +
           ((C19767 * C717 + C50687 * C729) * C845 -
            (C19912 * C841 + C19911 * C844) +
            (C19767 * C733 + C50687 * C741) * C842 -
            (C19767 * C3211 + C50687 * C3214) * C846 -
            (C19767 * C3216 + C50687 * C3220) * C843) *
               C19765 +
           ((C19767 * C3004 + C50687 * C3008) * C845 -
            (C19914 * C841 + C19913 * C844) +
            (C19767 * C3010 + C50687 * C3016) * C842 -
            (C19767 * C3368 + C50687 * C3370) * C846 -
            (C19767 * C3372 + C50687 * C3374) * C843) *
               C19766) *
              C50847 * C50746 * C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C121 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50776) *
               C16981 +
           ((C17169 + C17170 + C17171) * C121 +
            (C17172 + C17173 + C17174) * C50776) *
               C50885) *
              C50847 * C592 -
          (((C17503 + C17504 + C17505) * C50776 +
            (C17506 + C17507 + C17508) * C121) *
               C50885 +
           ((C17174 + C17173 + C17172) * C50776 +
            (C17171 + C17170 + C17169) * C121) *
               C16981) *
              C50847 * C593 +
          (((C17508 + C17507 + C17506) * C121 +
            (C17505 + C17504 + C17503) * C50776) *
               C16981 +
           ((C17625 + C17626 + C17627) * C121 +
            (C17628 + C17629 + C17630) * C50776) *
               C50885) *
              C50847 * C594 -
          (((C16985 * C2695 + C16980 * C2699 + C16984 * C2694 + C16979 * C2698 +
             C16983 * C2693 + C16978 * C2697) *
                C50776 +
            (C16985 * C2690 + C16980 * C2696 + C16984 * C2689 + C16979 * C2692 +
             C16983 * C2688 + C16978 * C2691) *
                C121) *
               C50885 +
           ((C17630 + C17629 + C17628) * C50776 +
            (C17627 + C17626 + C17625) * C121) *
               C16981) *
              C50847 * C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50776) *
                C16981 +
            ((C17169 + C17170 + C17171) * C121 +
             (C17172 + C17173 + C17174) * C50776) *
                C50885) *
               C50847 * C50975 -
           (((C16985 * C517 + C16980 * C523 + C16984 * C516 + C16979 * C522 +
              C16983 * C515 + C16978 * C521) *
                 C50776 +
             (C16985 * C508 + C16980 * C513 + C16984 * C507 + C16979 * C512 +
              C16983 * C506 + C16978 * C511) *
                 C121) *
                C50885 +
            ((C17174 + C17173 + C17172) * C50776 +
             (C17171 + C17170 + C17169) * C121) *
                C16981) *
               C50847 * C50762) *
              C250 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50776) *
                C16981 +
            ((C16983 * C507 + C16978 * C512 + C16984 * C508 + C16979 * C513 +
              C16985 * C509 + C16980 * C514) *
                 C121 +
             (C16983 * C516 + C16978 * C522 + C16984 * C517 + C16979 * C523 +
              C16985 * C518 + C16980 * C524) *
                 C50776) *
                C50885) *
               C50847 * C50762 -
           (((C17180 + C17179 + C17178) * C50776 +
             (C17177 + C17176 + C17175) * C121) *
                C50885 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50776 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C16981) *
               C50847 * C50975) *
              C251 +
          ((((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
              C16985 * C126 + C16980 * C138) *
                 C121 +
             (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
              C16985 * C137 + C16980 * C147) *
                 C50776) *
                C16981 +
            ((C17181 + C17182 + C17183) * C121 +
             (C17184 + C17185 + C17186) * C50776) *
                C50885) *
               C50847 * C50975 -
           (((C16985 * C519 + C16980 * C525 + C16984 * C518 + C16979 * C524 +
              C16983 * C517 + C16978 * C523) *
                 C50776 +
             (C16985 * C510 + C16980 * C520 + C16984 * C509 + C16979 * C514 +
              C16983 * C508 + C16978 * C513) *
                 C121) *
                C50885 +
            ((C17186 + C17185 + C17184) * C50776 +
             (C17183 + C17182 + C17181) * C121) *
                C16981) *
               C50847 * C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C844 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C841 -
            (C16985 * C380 + C16980 * C386 + C16984 * C381 + C16979 * C387 +
             C16983 * C382 + C16978 * C388) *
                C845 -
            (C16985 * C390 + C16980 * C398 + C16984 * C391 + C16979 * C399 +
             C16983 * C392 + C16978 * C400) *
                C842 +
            (C16983 * C847 + C16978 * C852 + C16984 * C848 + C16979 * C853 +
             C16985 * C849 + C16980 * C854) *
                C846 +
            (C16983 * C856 + C16978 * C862 + C16984 * C857 + C16979 * C863 +
             C16985 * C858 + C16980 * C864) *
                C843) *
               C16981 +
           ((C17169 + C17170 + C17171) * C844 +
            (C17172 + C17173 + C17174) * C841 -
            (C17801 + C17802 + C17803) * C845 -
            (C17804 + C17805 + C17806) * C842 +
            (C18117 + C18118 + C18119) * C846 +
            (C18120 + C18121 + C18122) * C843) *
               C50885) *
              C50847 * C50975 +
          (((C17803 + C17802 + C17801) * C845 -
            ((C17174 + C17173 + C17172) * C841 +
             (C17171 + C17170 + C17169) * C844) +
            (C17806 + C17805 + C17804) * C842 -
            (C18119 + C18118 + C18117) * C846 -
            (C18122 + C18121 + C18120) * C843) *
               C16981 +
           ((C17807 + C17808 + C17809) * C845 -
            ((C17503 + C17504 + C17505) * C841 +
             (C17506 + C17507 + C17508) * C844) +
            (C17810 + C17811 + C17812) * C842 -
            (C16985 * C3212 + C16980 * C3217 + C16984 * C3211 + C16979 * C3214 +
             C16983 * C3210 + C16978 * C3213) *
                C846 -
            (C16985 * C3218 + C16980 * C3221 + C16984 * C3216 + C16979 * C3220 +
             C16983 * C3215 + C16978 * C3219) *
                C843) *
               C50885) *
              C50847 * C50762) *
         C50714) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C19763 +
            (C19921 + C19922) * C19764 + (C19923 + C19924) * C19765 +
            (C19925 + C19926) * C19766) *
               C50847 * C50975 -
           (((C19767 * C2693 + C50687 * C2697) * C50776 +
             (C19767 * C2688 + C50687 * C2691) * C121) *
                C19766 +
            (C19926 + C19925) * C19765 + (C19924 + C19923) * C19764 +
            (C19922 + C19921) * C19763) *
               C50847 * C50762) *
              C250 +
          (((C19927 + C19928) * C19763 + (C19929 + C19930) * C19764 +
            (C19931 + C19932) * C19765 +
            ((C19767 * C2689 + C50687 * C2692) * C121 +
             (C19767 * C2694 + C50687 * C2698) * C50776) *
                C19766) *
               C50847 * C50762 -
           ((C19932 + C19931) * C19766 + (C19930 + C19929) * C19765 +
            (C19928 + C19927) * C19764 +
            ((C19767 * C134 + C50687 * C144) * C50776 +
             (C19767 * C123 + C50687 * C130) * C121) *
                C19763) *
               C50847 * C50975) *
              C251 +
          ((((C19767 * C124 + C50687 * C131) * C121 +
             (C19767 * C135 + C50687 * C145) * C50776) *
                C19763 +
            (C19933 + C19934) * C19764 + (C19935 + C19936) * C19765 +
            (C19937 + C19938) * C19766) *
               C50847 * C50975 -
           (((C19767 * C2695 + C50687 * C2699) * C50776 +
             (C19767 * C2690 + C50687 * C2696) * C121) *
                C19766 +
            (C19938 + C19937) * C19765 + (C19936 + C19935) * C19764 +
            (C19934 + C19933) * C19763) *
               C50847 * C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C121 +
            (C19767 * C133 + C50687 * C143) * C50776) *
               C19763 +
           (C19921 + C19922) * C19764 + C20135 * C19765 + C20136 * C19766) *
              C50847 * C592 -
          (C20225 * C19766 + C20226 * C19765 + (C19924 + C19923) * C19764 +
           (C19922 + C19921) * C19763) *
              C50847 * C593 +
          (C20135 * C19763 + C20136 * C19764 + (C20152 + C20151) * C19765 +
           (C20233 + C20234) * C19766) *
              C50847 * C594 -
          (((C19767 * C20221 + C50687 * C20223) * C50776 +
            (C19767 * C20220 + C50687 * C20222) * C121) *
               C19766 +
           (C20234 + C20233) * C19765 + C20225 * C19764 + C20226 * C19763) *
              C50847 * C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C844 +
            (C19767 * C133 + C50687 * C143) * C841 -
            (C19767 * C382 + C50687 * C388) * C845 -
            (C19767 * C392 + C50687 * C400) * C842 +
            (C19767 * C847 + C50687 * C852) * C846 +
            (C19767 * C856 + C50687 * C862) * C843) *
               C19763 +
           (C20583 + C20584 - C20585 - C20586 + C20613 + C20614) * C19764 +
           (C20591 + C20592 - C20593 - C20594 + C20615 + C20616) * C19765 +
           (C20599 + C20600 - C20601 - C20602 + C20617 + C20618) * C19766) *
              C50847 * C50975 +
          ((C20585 - (C20584 + C20583) + C20586 - C20613 - C20614) * C19763 +
           (C20593 - (C20592 + C20591) + C20594 - C20615 - C20616) * C19764 +
           (C20601 - (C20600 + C20599) + C20602 - C20617 - C20618) * C19765 +
           (C20369 * C845 - (C20147 * C841 + C20148 * C844) + C20370 * C842 -
            (C19767 * C20578 + C50687 * C20579) * C846 -
            (C19767 * C20580 + C50687 * C20581) * C843) *
               C19766) *
              C50847 * C50762) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[143] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                      C16979 * C130 + C16985 * C124 + C16980 * C131) *
                         C377 +
                     (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                      C16979 * C144 + C16985 * C135 + C16980 * C145) *
                         C50977 -
                     (C16985 * C380 + C16980 * C386 + C16984 * C381 +
                      C16979 * C387 + C16983 * C382 + C16978 * C388) *
                         C378 -
                     (C16985 * C390 + C16980 * C398 + C16984 * C391 +
                      C16979 * C399 + C16983 * C392 + C16978 * C400) *
                         C50788) *
                        C16981 +
                    ((C17169 + C17170 + C17171) * C377 +
                     (C17172 + C17173 + C17174) * C50977 -
                     (C17801 + C17802 + C17803) * C378 -
                     (C17804 + C17805 + C17806) * C50788) *
                        C50885) *
                       C50847 * C501 +
                   (((C17803 + C17802 + C17801) * C378 -
                     ((C17174 + C17173 + C17172) * C50977 +
                      (C17171 + C17170 + C17169) * C377) +
                     (C17806 + C17805 + C17804) * C50788) *
                        C16981 +
                    ((C17807 + C17808 + C17809) * C378 -
                     ((C17503 + C17504 + C17505) * C50977 +
                      (C17506 + C17507 + C17508) * C377) +
                     (C17810 + C17811 + C17812) * C50788) *
                        C50885) *
                       C50847 * C502 +
                   (((C17508 + C17507 + C17506) * C377 +
                     (C17505 + C17504 + C17503) * C50977 -
                     (C17809 + C17808 + C17807) * C378 -
                     (C17812 + C17811 + C17810) * C50788) *
                        C16981 +
                    ((C17625 + C17626 + C17627) * C377 +
                     (C17628 + C17629 + C17630) * C50977 -
                     (C16985 * C4000 + C16980 * C4001 + C16984 * C3004 +
                      C16979 * C3008 + C16983 * C3003 + C16978 * C3007) *
                         C378 -
                     (C16985 * C4002 + C16980 * C4003 + C16984 * C3010 +
                      C16979 * C3016 + C16983 * C3009 + C16978 * C3015) *
                         C50788) *
                        C50885) *
                       C50847 * C503) *
                  C50714) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                      C16979 * C130 + C16985 * C124 + C16980 * C131) *
                         C377 +
                     (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                      C16979 * C144 + C16985 * C135 + C16980 * C145) *
                         C50977 -
                     (C16985 * C380 + C16980 * C386 + C16984 * C381 +
                      C16979 * C387 + C16983 * C382 + C16978 * C388) *
                         C378 -
                     (C16985 * C390 + C16980 * C398 + C16984 * C391 +
                      C16979 * C399 + C16983 * C392 + C16978 * C400) *
                         C50788) *
                        C16981 +
                    ((C17169 + C17170 + C17171) * C377 +
                     (C17172 + C17173 + C17174) * C50977 -
                     (C16985 * C713 + C16980 * C721 + C16984 * C712 +
                      C16979 * C720 + C16983 * C711 + C16978 * C719) *
                         C378 -
                     (C16985 * C725 + C16980 * C737 + C16984 * C724 +
                      C16979 * C736 + C16983 * C723 + C16978 * C735) *
                         C50788) *
                        C50885) *
                       C50847 * C50746 * C250 +
                   (((C16983 * C381 + C16978 * C387 + C16984 * C380 +
                      C16979 * C386 + C16985 * C379 + C16980 * C385) *
                         C378 -
                     ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                       C16979 * C145 + C16983 * C134 + C16978 * C144) *
                          C50977 +
                      (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                       C16979 * C131 + C16983 * C123 + C16978 * C130) *
                          C377) +
                     (C16983 * C391 + C16978 * C399 + C16984 * C390 +
                      C16979 * C398 + C16985 * C389 + C16980 * C397) *
                         C50788) *
                        C16981 +
                    ((C16983 * C712 + C16978 * C720 + C16984 * C713 +
                      C16979 * C721 + C16985 * C714 + C16980 * C722) *
                         C378 -
                     ((C17180 + C17179 + C17178) * C50977 +
                      (C17177 + C17176 + C17175) * C377) +
                     (C16983 * C724 + C16978 * C736 + C16984 * C725 +
                      C16979 * C737 + C16985 * C726 + C16980 * C738) *
                         C50788) *
                        C50885) *
                       C50847 * C50746 * C251 +
                   (((C16983 * C124 + C16978 * C131 + C16984 * C125 +
                      C16979 * C132 + C16985 * C126 + C16980 * C138) *
                         C377 +
                     (C16983 * C135 + C16978 * C145 + C16984 * C136 +
                      C16979 * C146 + C16985 * C137 + C16980 * C147) *
                         C50977 -
                     (C16985 * C383 + C16980 * C393 + C16984 * C379 +
                      C16979 * C385 + C16983 * C380 + C16978 * C386) *
                         C378 -
                     (C16985 * C394 + C16980 * C401 + C16984 * C389 +
                      C16979 * C397 + C16983 * C390 + C16978 * C398) *
                         C50788) *
                        C16981 +
                    ((C17181 + C17182 + C17183) * C377 +
                     (C17184 + C17185 + C17186) * C50977 -
                     (C16985 * C1407 + C16980 * C1408 + C16984 * C714 +
                      C16979 * C722 + C16983 * C713 + C16978 * C721) *
                         C378 -
                     (C16985 * C1409 + C16980 * C1410 + C16984 * C726 +
                      C16979 * C738 + C16983 * C725 + C16978 * C737) *
                         C50788) *
                        C50885) *
                       C50847 * C50746 * C252)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                     C16979 * C130 + C16985 * C124 + C16980 * C131) *
                        C1051 +
                    (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                     C16979 * C144 + C16985 * C135 + C16980 * C145) *
                        C1047 -
                    (C16985 * C380 + C16980 * C386 + C16984 * C381 +
                     C16979 * C387 + C16983 * C382 + C16978 * C388) *
                        C1052 -
                    (C16985 * C390 + C16980 * C398 + C16984 * C391 +
                     C16979 * C399 + C16983 * C392 + C16978 * C400) *
                        C1048 +
                    (C16983 * C847 + C16978 * C852 + C16984 * C848 +
                     C16979 * C853 + C16985 * C849 + C16980 * C854) *
                        C1053 +
                    (C16983 * C856 + C16978 * C862 + C16984 * C857 +
                     C16979 * C863 + C16985 * C858 + C16980 * C864) *
                        C1049 -
                    (C16985 * C1056 + C16980 * C1060 + C16984 * C1057 +
                     C16979 * C1061 + C16983 * C1058 + C16978 * C1062) *
                        C1054 -
                    (C16985 * C1064 + C16980 * C1068 + C16984 * C1065 +
                     C16979 * C1069 + C16983 * C1066 + C16978 * C1070) *
                        C1050) *
                       C16981 +
                   ((C17169 + C17170 + C17171) * C1051 +
                    (C17172 + C17173 + C17174) * C1047 -
                    (C17801 + C17802 + C17803) * C1052 -
                    (C17804 + C17805 + C17806) * C1048 +
                    (C18117 + C18118 + C18119) * C1053 +
                    (C18120 + C18121 + C18122) * C1049 -
                    (C16985 * C6822 + C16980 * C6823 + C16984 * C3498 +
                     C16979 * C3502 + C16983 * C3499 + C16978 * C3503) *
                        C1054 -
                    (C16985 * C6824 + C16980 * C6825 + C16984 * C3504 +
                     C16979 * C3510 + C16983 * C3505 + C16978 * C3511) *
                        C1050) *
                       C50885) *
                  C50847 * C50746 * C50714) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C19767 * C122 + C50687 * C129) * C377 +
                     (C19767 * C133 + C50687 * C143) * C50977 -
                     (C19767 * C382 + C50687 * C388) * C378 -
                     (C19767 * C392 + C50687 * C400) * C50788) *
                        C19763 +
                    (C19903 * C377 + C19904 * C50977 -
                     (C19767 * C711 + C50687 * C719) * C378 -
                     (C19767 * C723 + C50687 * C735) * C50788) *
                        C19764 +
                    (C19905 * C377 + C19906 * C50977 -
                     (C19767 * C718 + C50687 * C730) * C378 -
                     (C19767 * C734 + C50687 * C742) * C50788) *
                        C19765 +
                    (C19907 * C377 + C19908 * C50977 -
                     (C19767 * C3003 + C50687 * C3007) * C378 -
                     (C19767 * C3009 + C50687 * C3015) * C50788) *
                        C19766) *
                       C50847 * C50746 * C250 +
                   (((C19767 * C381 + C50687 * C387) * C378 -
                     ((C19767 * C134 + C50687 * C144) * C50977 +
                      (C19767 * C123 + C50687 * C130) * C377) +
                     (C19767 * C391 + C50687 * C399) * C50788) *
                        C19763 +
                    ((C19767 * C712 + C50687 * C720) * C378 -
                     (C19910 * C50977 + C19909 * C377) +
                     (C19767 * C724 + C50687 * C736) * C50788) *
                        C19764 +
                    ((C19767 * C717 + C50687 * C729) * C378 -
                     (C19912 * C50977 + C19911 * C377) +
                     (C19767 * C733 + C50687 * C741) * C50788) *
                        C19765 +
                    ((C19767 * C3004 + C50687 * C3008) * C378 -
                     (C19914 * C50977 + C19913 * C377) +
                     (C19767 * C3010 + C50687 * C3016) * C50788) *
                        C19766) *
                       C50847 * C50746 * C251 +
                   (((C19767 * C124 + C50687 * C131) * C377 +
                     (C19767 * C135 + C50687 * C145) * C50977 -
                     (C19767 * C380 + C50687 * C386) * C378 -
                     (C19767 * C390 + C50687 * C398) * C50788) *
                        C19763 +
                    (C19915 * C377 + C19916 * C50977 -
                     (C19767 * C713 + C50687 * C721) * C378 -
                     (C19767 * C725 + C50687 * C737) * C50788) *
                        C19764 +
                    (C19917 * C377 + C19918 * C50977 -
                     (C19767 * C716 + C50687 * C728) * C378 -
                     (C19767 * C732 + C50687 * C740) * C50788) *
                        C19765 +
                    (C19919 * C377 + C19920 * C50977 -
                     (C19767 * C4000 + C50687 * C4001) * C378 -
                     (C19767 * C4002 + C50687 * C4003) * C50788) *
                        C19766) *
                       C50847 * C50746 * C252)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C19767 * C122 + C50687 * C129) * C377 +
                     (C19767 * C133 + C50687 * C143) * C50977 -
                     (C19767 * C382 + C50687 * C388) * C378 -
                     (C19767 * C392 + C50687 * C400) * C50788) *
                        C19763 +
                    (C20337 + C20338 - C20371 - C20372) * C19764 +
                    C20381 * C19765 + C20382 * C19766) *
                       C50847 * C501 +
                   ((C20371 - (C20338 + C20337) + C20372) * C19763 +
                    (C20373 - (C20344 + C20343) + C20374) * C19764 +
                    (C20375 - (C20350 + C20349) + C20376) * C19765 +
                    (C20377 - (C20357 + C20358) + C20378) * C19766) *
                       C50847 * C502 +
                   (C20381 * C19763 + C20382 * C19764 +
                    (C20358 + C20357 - C20377 - C20378) * C19765 +
                    (C20231 * C377 + C20232 * C50977 -
                     (C19767 * C20332 + C50687 * C20333) * C378 -
                     (C19767 * C20334 + C50687 * C20335) * C50788) *
                        C19766) *
                       C50847 * C503) *
                  C50714) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C19767 * C122 + C50687 * C129) * C1051 +
                    (C19767 * C133 + C50687 * C143) * C1047 -
                    (C19767 * C382 + C50687 * C388) * C1052 -
                    (C19767 * C392 + C50687 * C400) * C1048 +
                    (C19767 * C847 + C50687 * C852) * C1053 +
                    (C19767 * C856 + C50687 * C862) * C1049 -
                    (C19767 * C1058 + C50687 * C1062) * C1054 -
                    (C19767 * C1066 + C50687 * C1070) * C1050) *
                       C19763 +
                   (C19903 * C1051 + C19904 * C1047 - C20361 * C1052 -
                    C20362 * C1048 + C20607 * C1053 + C20608 * C1049 -
                    (C19767 * C3499 + C50687 * C3503) * C1054 -
                    (C19767 * C3505 + C50687 * C3511) * C1050) *
                       C19764 +
                   (C19905 * C1051 + C19906 * C1047 - C20364 * C1052 -
                    C20365 * C1048 + C20609 * C1053 + C20610 * C1049 -
                    (C19767 * C3501 + C50687 * C3507) * C1054 -
                    (C19767 * C3509 + C50687 * C3513) * C1050) *
                       C19765 +
                   (C19907 * C1051 + C19908 * C1047 - C20367 * C1052 -
                    C20368 * C1048 + C20611 * C1053 + C20612 * C1049 -
                    (C19767 * C20684 + C50687 * C20685) * C1054 -
                    (C19767 * C20686 + C50687 * C20687) * C1050) *
                       C19766) *
                  C50847 * C50746 * C50714) /
                     (p * q * std::sqrt(p + q));
    d2ee[144] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                      C16979 * C130 + C16985 * C124 + C16980 * C131) *
                         C1511 +
                     (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                      C16979 * C144 + C16985 * C135 + C16980 * C145) *
                         C1509 -
                     (C16985 * C380 + C16980 * C386 + C16984 * C381 +
                      C16979 * C387 + C16983 * C382 + C16978 * C388) *
                         C1512 -
                     (C16985 * C390 + C16980 * C398 + C16984 * C391 +
                      C16979 * C399 + C16983 * C392 + C16978 * C400) *
                         C50788) *
                        C16981 +
                    ((C17169 + C17170 + C17171) * C1511 +
                     (C17172 + C17173 + C17174) * C1509 -
                     (C17801 + C17802 + C17803) * C1512 -
                     (C17804 + C17805 + C17806) * C50788) *
                        C50885) *
                       C50847 * C50746 * C51021 +
                   (((C16983 * C381 + C16978 * C387 + C16984 * C380 +
                      C16979 * C386 + C16985 * C379 + C16980 * C385) *
                         C1512 -
                     ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                       C16979 * C145 + C16983 * C134 + C16978 * C144) *
                          C1509 +
                      (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                       C16979 * C131 + C16983 * C123 + C16978 * C130) *
                          C1511) +
                     (C16983 * C391 + C16978 * C399 + C16984 * C390 +
                      C16979 * C398 + C16985 * C389 + C16980 * C397) *
                         C50788) *
                        C16981 +
                    ((C18719 + C18720 + C18721) * C1512 -
                     ((C17180 + C17179 + C17178) * C1509 +
                      (C17177 + C17176 + C17175) * C1511) +
                     (C18722 + C18723 + C18724) * C50788) *
                        C50885) *
                       C50847 * C50746 * C51006 +
                   (((C16983 * C124 + C16978 * C131 + C16984 * C125 +
                      C16979 * C132 + C16985 * C126 + C16980 * C138) *
                         C1511 +
                     (C16983 * C135 + C16978 * C145 + C16984 * C136 +
                      C16979 * C146 + C16985 * C137 + C16980 * C147) *
                         C1509 -
                     (C16985 * C383 + C16980 * C393 + C16984 * C379 +
                      C16979 * C385 + C16983 * C380 + C16978 * C386) *
                         C1512 -
                     (C16985 * C394 + C16980 * C401 + C16984 * C389 +
                      C16979 * C397 + C16983 * C390 + C16978 * C398) *
                         C50788) *
                        C16981 +
                    ((C17181 + C17182 + C17183) * C1511 +
                     (C17184 + C17185 + C17186) * C1509 -
                     (C16985 * C1407 + C16980 * C1408 + C16984 * C714 +
                      C16979 * C722 + C16983 * C713 + C16978 * C721) *
                         C1512 -
                     (C16985 * C1409 + C16980 * C1410 + C16984 * C726 +
                      C16979 * C738 + C16983 * C725 + C16978 * C737) *
                         C50788) *
                        C50885) *
                       C50847 * C50746 * C1173)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C19767 * C122 + C50687 * C129) * C1511 +
                     (C19767 * C133 + C50687 * C143) * C1509 -
                     (C19767 * C382 + C50687 * C388) * C1512 -
                     (C19767 * C392 + C50687 * C400) * C50788) *
                        C19763 +
                    (C19903 * C1511 + C19904 * C1509 - C20361 * C1512 -
                     C20362 * C50788) *
                        C19764 +
                    (C19905 * C1511 + C19906 * C1509 - C20364 * C1512 -
                     C20365 * C50788) *
                        C19765 +
                    (C19907 * C1511 + C19908 * C1509 - C20367 * C1512 -
                     C20368 * C50788) *
                        C19766) *
                       C50847 * C50746 * C51021 +
                   (((C19767 * C381 + C50687 * C387) * C1512 -
                     ((C19767 * C134 + C50687 * C144) * C1509 +
                      (C19767 * C123 + C50687 * C130) * C1511) +
                     (C19767 * C391 + C50687 * C399) * C50788) *
                        C19763 +
                    (C21033 * C1512 - (C19910 * C1509 + C19909 * C1511) +
                     C21034 * C50788) *
                        C19764 +
                    (C21035 * C1512 - (C19912 * C1509 + C19911 * C1511) +
                     C21036 * C50788) *
                        C19765 +
                    (C21037 * C1512 - (C19914 * C1509 + C19913 * C1511) +
                     C21038 * C50788) *
                        C19766) *
                       C50847 * C50746 * C51006 +
                   (((C19767 * C124 + C50687 * C131) * C1511 +
                     (C19767 * C135 + C50687 * C145) * C1509 -
                     (C19767 * C380 + C50687 * C386) * C1512 -
                     (C19767 * C390 + C50687 * C398) * C50788) *
                        C19763 +
                    (C19915 * C1511 + C19916 * C1509 -
                     (C19767 * C713 + C50687 * C721) * C1512 -
                     (C19767 * C725 + C50687 * C737) * C50788) *
                        C19764 +
                    (C19917 * C1511 + C19918 * C1509 -
                     (C19767 * C716 + C50687 * C728) * C1512 -
                     (C19767 * C732 + C50687 * C740) * C50788) *
                        C19765 +
                    (C19919 * C1511 + C19920 * C1509 -
                     (C19767 * C4000 + C50687 * C4001) * C1512 -
                     (C19767 * C4002 + C50687 * C4003) * C50788) *
                        C19766) *
                       C50847 * C50746 * C1173)) /
                     (p * q * std::sqrt(p + q));
    d2ee[145] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                       C16979 * C130 + C16985 * C124 + C16980 * C131) *
                          C1511 +
                      (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                       C16979 * C144 + C16985 * C135 + C16980 * C145) *
                          C1509 -
                      (C16985 * C380 + C16980 * C386 + C16984 * C381 +
                       C16979 * C387 + C16983 * C382 + C16978 * C388) *
                          C1512 -
                      (C16985 * C390 + C16980 * C398 + C16984 * C391 +
                       C16979 * C399 + C16983 * C392 + C16978 * C400) *
                          C50788) *
                         C16981 +
                     ((C17169 + C17170 + C17171) * C1511 +
                      (C17172 + C17173 + C17174) * C1509 -
                      (C17801 + C17802 + C17803) * C1512 -
                      (C17804 + C17805 + C17806) * C50788) *
                         C50885) *
                        C50847 * C50975 +
                    (((C17803 + C17802 + C17801) * C1512 -
                      ((C17174 + C17173 + C17172) * C1509 +
                       (C17171 + C17170 + C17169) * C1511) +
                      (C17806 + C17805 + C17804) * C50788) *
                         C16981 +
                     ((C17807 + C17808 + C17809) * C1512 -
                      ((C17503 + C17504 + C17505) * C1509 +
                       (C17506 + C17507 + C17508) * C1511) +
                      (C17810 + C17811 + C17812) * C50788) *
                         C50885) *
                        C50847 * C50762) *
                       C1275 +
                   ((((C16983 * C381 + C16978 * C387 + C16984 * C380 +
                       C16979 * C386 + C16985 * C379 + C16980 * C385) *
                          C1512 -
                      ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                        C16979 * C145 + C16983 * C134 + C16978 * C144) *
                           C1509 +
                       (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                        C16979 * C131 + C16983 * C123 + C16978 * C130) *
                           C1511) +
                      (C16983 * C391 + C16978 * C399 + C16984 * C390 +
                       C16979 * C398 + C16985 * C389 + C16980 * C397) *
                          C50788) *
                         C16981 +
                     ((C18719 + C18720 + C18721) * C1512 -
                      ((C17180 + C17179 + C17178) * C1509 +
                       (C17177 + C17176 + C17175) * C1511) +
                      (C18722 + C18723 + C18724) * C50788) *
                         C50885) *
                        C50847 * C50975 +
                    (((C17175 + C17176 + C17177) * C1511 +
                      (C17178 + C17179 + C17180) * C1509 -
                      (C18721 + C18720 + C18719) * C1512 -
                      (C18724 + C18723 + C18722) * C50788) *
                         C16981 +
                     ((C17509 + C17510 + C17511) * C1511 +
                      (C17512 + C17513 + C17514) * C1509 -
                      (C16985 * C715 + C16980 * C727 + C16984 * C716 +
                       C16979 * C728 + C16983 * C717 + C16978 * C729) *
                          C1512 -
                      (C16985 * C731 + C16980 * C739 + C16984 * C732 +
                       C16979 * C740 + C16983 * C733 + C16978 * C741) *
                          C50788) *
                         C50885) *
                        C50847 * C50762) *
                       C50719)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C19767 * C122 + C50687 * C129) * C1511 +
                      (C19767 * C133 + C50687 * C143) * C1509 -
                      (C19767 * C382 + C50687 * C388) * C1512 -
                      (C19767 * C392 + C50687 * C400) * C50788) *
                         C19763 +
                     (C21273 + C21274 - C21275 - C21276) * C19764 +
                     (C21277 + C21278 - C21279 - C21280) * C19765 +
                     (C21281 + C21282 - C21283 - C21284) * C19766) *
                        C50847 * C50975 +
                    ((C21275 - (C21274 + C21273) + C21276) * C19763 +
                     (C21279 - (C21278 + C21277) + C21280) * C19764 +
                     (C21283 - (C21282 + C21281) + C21284) * C19765 +
                     (C20369 * C1512 - (C20147 * C1509 + C20148 * C1511) +
                      C20370 * C50788) *
                         C19766) *
                        C50847 * C50762) *
                       C1275 +
                   ((((C19767 * C381 + C50687 * C387) * C1512 -
                      ((C19767 * C134 + C50687 * C144) * C1509 +
                       (C19767 * C123 + C50687 * C130) * C1511) +
                      (C19767 * C391 + C50687 * C399) * C50788) *
                         C19763 +
                     (C21285 - (C21286 + C21287) + C21288) * C19764 +
                     (C21289 - (C21290 + C21291) + C21292) * C19765 +
                     (C21293 - (C21294 + C21295) + C21296) * C19766) *
                        C50847 * C50975 +
                    ((C21287 + C21286 - C21285 - C21288) * C19763 +
                     (C21291 + C21290 - C21289 - C21292) * C19764 +
                     (C21295 + C21294 - C21293 - C21296) * C19765 +
                     (C20149 * C1511 + C20150 * C1509 -
                      (C19767 * C3005 + C50687 * C3011) * C1512 -
                      (C19767 * C3013 + C50687 * C3017) * C50788) *
                         C19766) *
                        C50847 * C50762) *
                       C50719)) /
                     (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C1744 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C51023 -
            (C16985 * C380 + C16980 * C386 + C16984 * C381 + C16979 * C387 +
             C16983 * C382 + C16978 * C388) *
                C1745 -
            (C16985 * C390 + C16980 * C398 + C16984 * C391 + C16979 * C399 +
             C16983 * C392 + C16978 * C400) *
                C51012 +
            (C16983 * C847 + C16978 * C852 + C16984 * C848 + C16979 * C853 +
             C16985 * C849 + C16980 * C854) *
                C1746 +
            (C16983 * C856 + C16978 * C862 + C16984 * C857 + C16979 * C863 +
             C16985 * C858 + C16980 * C864) *
                C1743) *
               C16981 +
           ((C17169 + C17170 + C17171) * C1744 +
            (C17172 + C17173 + C17174) * C51023 -
            (C17801 + C17802 + C17803) * C1745 -
            (C17804 + C17805 + C17806) * C51012 +
            (C18117 + C18118 + C18119) * C1746 +
            (C18120 + C18121 + C18122) * C1743) *
               C50885) *
              C50847 * C50746 * C1275 +
          (((C16983 * C381 + C16978 * C387 + C16984 * C380 + C16979 * C386 +
             C16985 * C379 + C16980 * C385) *
                C1745 -
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C51023 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C1744) +
            (C16983 * C391 + C16978 * C399 + C16984 * C390 + C16979 * C398 +
             C16985 * C389 + C16980 * C397) *
                C51012 -
            (C16985 * C850 + C16980 * C855 + C16984 * C849 + C16979 * C854 +
             C16983 * C848 + C16978 * C853) *
                C1746 -
            (C16985 * C859 + C16980 * C865 + C16984 * C858 + C16979 * C864 +
             C16983 * C857 + C16978 * C863) *
                C1743) *
               C16981 +
           ((C18719 + C18720 + C18721) * C1745 -
            ((C17180 + C17179 + C17178) * C51023 +
             (C17177 + C17176 + C17175) * C1744) +
            (C18722 + C18723 + C18724) * C51012 -
            (C16985 * C965 + C16980 * C969 + C16984 * C966 + C16979 * C970 +
             C16983 * C967 + C16978 * C971) *
                C1746 -
            (C16985 * C973 + C16980 * C977 + C16984 * C974 + C16979 * C978 +
             C16983 * C975 + C16978 * C979) *
                C1743) *
               C50885) *
              C50847 * C50746 * C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C1744 +
            (C19767 * C133 + C50687 * C143) * C51023 -
            (C19767 * C382 + C50687 * C388) * C1745 -
            (C19767 * C392 + C50687 * C400) * C51012 +
            (C19767 * C847 + C50687 * C852) * C1746 +
            (C19767 * C856 + C50687 * C862) * C1743) *
               C19763 +
           (C19903 * C1744 + C19904 * C51023 - C20361 * C1745 -
            C20362 * C51012 + C20607 * C1746 + C20608 * C1743) *
               C19764 +
           (C19905 * C1744 + C19906 * C51023 - C20364 * C1745 -
            C20365 * C51012 + C20609 * C1746 + C20610 * C1743) *
               C19765 +
           (C19907 * C1744 + C19908 * C51023 - C20367 * C1745 -
            C20368 * C51012 + C20611 * C1746 + C20612 * C1743) *
               C19766) *
              C50847 * C50746 * C1275 +
          (((C19767 * C381 + C50687 * C387) * C1745 -
            ((C19767 * C134 + C50687 * C144) * C51023 +
             (C19767 * C123 + C50687 * C130) * C1744) +
            (C19767 * C391 + C50687 * C399) * C51012 -
            (C19767 * C848 + C50687 * C853) * C1746 -
            (C19767 * C857 + C50687 * C863) * C1743) *
               C19763 +
           (C21033 * C1745 - (C19910 * C51023 + C19909 * C1744) +
            C21034 * C51012 - (C19767 * C967 + C50687 * C971) * C1746 -
            (C19767 * C975 + C50687 * C979) * C1743) *
               C19764 +
           (C21035 * C1745 - (C19912 * C51023 + C19911 * C1744) +
            C21036 * C51012 - (C19767 * C3211 + C50687 * C3214) * C1746 -
            (C19767 * C3216 + C50687 * C3220) * C1743) *
               C19765 +
           (C21037 * C1745 - (C19914 * C51023 + C19913 * C1744) +
            C21038 * C51012 - (C19767 * C3368 + C50687 * C3370) * C1746 -
            (C19767 * C3372 + C50687 * C3374) * C1743) *
               C19766) *
              C50847 * C50746 * C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C121 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50776) *
               C16981 +
           ((C16983 * C256 + C16978 * C266 + C16984 * C255 + C16979 * C265 +
             C16985 * C254 + C16980 * C264) *
                C121 +
            (C16983 * C262 + C16978 * C274 + C16984 * C261 + C16979 * C273 +
             C16985 * C260 + C16980 * C272) *
                C50776) *
               C50885) *
              C50847 * C50746 * C113 -
          (((C16985 * C259 + C16980 * C271 + C16984 * C260 + C16979 * C272 +
             C16983 * C261 + C16978 * C273) *
                C50776 +
            (C16985 * C253 + C16980 * C263 + C16984 * C254 + C16979 * C264 +
             C16983 * C255 + C16978 * C265) *
                C121) *
               C50885 +
           ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
             C16983 * C134 + C16978 * C144) *
                C50776 +
            (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
             C16983 * C123 + C16978 * C130) *
                C121) *
               C16981) *
              C50847 * C50746 * C114 +
          (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
             C16985 * C126 + C16980 * C138) *
                C121 +
            (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
             C16985 * C137 + C16980 * C147) *
                C50776) *
               C16981 +
           ((C16983 * C254 + C16978 * C264 + C16984 * C253 + C16979 * C263 +
             C16985 * C257 + C16980 * C267) *
                C121 +
            (C16983 * C260 + C16978 * C272 + C16984 * C259 + C16979 * C271 +
             C16985 * C268 + C16980 * C275) *
                C50776) *
               C50885) *
              C50847 * C50746 * C115 -
          (((C16985 * C269 + C16980 * C276 + C16984 * C268 + C16979 * C275 +
             C16983 * C259 + C16978 * C271) *
                C50776 +
            (C16985 * C258 + C16980 * C270 + C16984 * C257 + C16979 * C267 +
             C16983 * C253 + C16978 * C263) *
                C121) *
               C50885 +
           ((C16985 * C140 + C16980 * C148 + C16984 * C137 + C16979 * C147 +
             C16983 * C136 + C16978 * C146) *
                C50776 +
            (C16985 * C127 + C16980 * C139 + C16984 * C126 + C16979 * C138 +
             C16983 * C125 + C16978 * C132) *
                C121) *
               C16981) *
              C50847 * C50746 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50776) *
                C16981 +
            ((C17169 + C17170 + C17171) * C121 +
             (C17172 + C17173 + C17174) * C50776) *
                C50885) *
               C50847 * C501 -
           (((C17503 + C17504 + C17505) * C50776 +
             (C17506 + C17507 + C17508) * C121) *
                C50885 +
            ((C17174 + C17173 + C17172) * C50776 +
             (C17171 + C17170 + C17169) * C121) *
                C16981) *
               C50847 * C502 +
           (((C17508 + C17507 + C17506) * C121 +
             (C17505 + C17504 + C17503) * C50776) *
                C16981 +
            ((C16983 * C600 + C16978 * C608 + C16984 * C599 + C16979 * C607 +
              C16985 * C598 + C16980 * C606) *
                 C121 +
             (C16983 * C604 + C16978 * C612 + C16984 * C603 + C16979 * C611 +
              C16985 * C602 + C16980 * C610) *
                 C50776) *
                C50885) *
               C50847 * C503) *
              C50968 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50776) *
                C16981 +
            ((C17509 + C17510 + C17511) * C121 +
             (C17512 + C17513 + C17514) * C50776) *
                C50885) *
               C50847 * C502 -
           (((C17180 + C17179 + C17178) * C50776 +
             (C17177 + C17176 + C17175) * C121) *
                C50885 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50776 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C16981) *
               C50847 * C501 -
           (((C16985 * C601 + C16980 * C609 + C16984 * C602 + C16979 * C610 +
              C16983 * C603 + C16978 * C611) *
                 C50776 +
             (C16985 * C597 + C16980 * C605 + C16984 * C598 + C16979 * C606 +
              C16983 * C599 + C16978 * C607) *
                 C121) *
                C50885 +
            ((C17514 + C17513 + C17512) * C50776 +
             (C17511 + C17510 + C17509) * C121) *
                C16981) *
               C50847 * C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C121 +
            (C19767 * C133 + C50687 * C143) * C50776) *
               C19763 +
           ((C19767 * C256 + C50687 * C266) * C121 +
            (C19767 * C262 + C50687 * C274) * C50776) *
               C19764 +
           ((C19767 * C506 + C50687 * C511) * C121 +
            (C19767 * C515 + C50687 * C521) * C50776) *
               C19765 +
           ((C19767 * C600 + C50687 * C608) * C121 +
            (C19767 * C604 + C50687 * C612) * C50776) *
               C19766) *
              C50847 * C50746 * C113 -
          (((C19767 * C603 + C50687 * C611) * C50776 +
            (C19767 * C599 + C50687 * C607) * C121) *
               C19766 +
           ((C19767 * C516 + C50687 * C522) * C50776 +
            (C19767 * C507 + C50687 * C512) * C121) *
               C19765 +
           ((C19767 * C261 + C50687 * C273) * C50776 +
            (C19767 * C255 + C50687 * C265) * C121) *
               C19764 +
           ((C19767 * C134 + C50687 * C144) * C50776 +
            (C19767 * C123 + C50687 * C130) * C121) *
               C19763) *
              C50847 * C50746 * C114 +
          (((C19767 * C124 + C50687 * C131) * C121 +
            (C19767 * C135 + C50687 * C145) * C50776) *
               C19763 +
           ((C19767 * C254 + C50687 * C264) * C121 +
            (C19767 * C260 + C50687 * C272) * C50776) *
               C19764 +
           ((C19767 * C508 + C50687 * C513) * C121 +
            (C19767 * C517 + C50687 * C523) * C50776) *
               C19765 +
           ((C19767 * C598 + C50687 * C606) * C121 +
            (C19767 * C602 + C50687 * C610) * C50776) *
               C19766) *
              C50847 * C50746 * C115 -
          (((C19767 * C601 + C50687 * C609) * C50776 +
            (C19767 * C597 + C50687 * C605) * C121) *
               C19766 +
           ((C19767 * C518 + C50687 * C524) * C50776 +
            (C19767 * C509 + C50687 * C514) * C121) *
               C19765 +
           ((C19767 * C259 + C50687 * C271) * C50776 +
            (C19767 * C253 + C50687 * C263) * C121) *
               C19764 +
           ((C19767 * C136 + C50687 * C146) * C50776 +
            (C19767 * C125 + C50687 * C132) * C121) *
               C19763) *
              C50847 * C50746 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C19763 +
            (C19921 + C19922) * C19764 + C20135 * C19765 + C20136 * C19766) *
               C50847 * C501 -
           ((C20151 + C20152) * C19766 + (C19926 + C19925) * C19765 +
            (C19924 + C19923) * C19764 + (C19922 + C19921) * C19763) *
               C50847 * C502 +
           (C20135 * C19763 + C20136 * C19764 + (C20152 + C20151) * C19765 +
            ((C19767 * C2833 + C50687 * C2837) * C121 +
             (C19767 * C2835 + C50687 * C2839) * C50776) *
                C19766) *
               C50847 * C503) *
              C50968 +
          (((C19927 + C19928) * C19763 + (C19929 + C19930) * C19764 +
            (C19931 + C19932) * C19765 + (C20153 + C20154) * C19766) *
               C50847 * C502 -
           (C20145 * C19766 + C20146 * C19765 + (C19928 + C19927) * C19764 +
            ((C19767 * C134 + C50687 * C144) * C50776 +
             (C19767 * C123 + C50687 * C130) * C121) *
                C19763) *
               C50847 * C501 -
           (((C19767 * C2834 + C50687 * C2838) * C50776 +
             (C19767 * C2832 + C50687 * C2836) * C121) *
                C19766 +
            (C20154 + C20153) * C19765 + C20145 * C19764 + C20146 * C19763) *
               C50847 * C503) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50776) *
                C16981 +
            ((C17169 + C17170 + C17171) * C121 +
             (C17172 + C17173 + C17174) * C50776) *
                C50885) *
               C50847 * C50975 -
           (((C16985 * C517 + C16980 * C523 + C16984 * C516 + C16979 * C522 +
              C16983 * C515 + C16978 * C521) *
                 C50776 +
             (C16985 * C508 + C16980 * C513 + C16984 * C507 + C16979 * C512 +
              C16983 * C506 + C16978 * C511) *
                 C121) *
                C50885 +
            ((C17174 + C17173 + C17172) * C50776 +
             (C17171 + C17170 + C17169) * C121) *
                C16981) *
               C50847 * C50762) *
              C250 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50776) *
                C16981 +
            ((C16983 * C507 + C16978 * C512 + C16984 * C508 + C16979 * C513 +
              C16985 * C509 + C16980 * C514) *
                 C121 +
             (C16983 * C516 + C16978 * C522 + C16984 * C517 + C16979 * C523 +
              C16985 * C518 + C16980 * C524) *
                 C50776) *
                C50885) *
               C50847 * C50762 -
           (((C17180 + C17179 + C17178) * C50776 +
             (C17177 + C17176 + C17175) * C121) *
                C50885 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50776 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C16981) *
               C50847 * C50975) *
              C251 +
          ((((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
              C16985 * C126 + C16980 * C138) *
                 C121 +
             (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
              C16985 * C137 + C16980 * C147) *
                 C50776) *
                C16981 +
            ((C17181 + C17182 + C17183) * C121 +
             (C17184 + C17185 + C17186) * C50776) *
                C50885) *
               C50847 * C50975 -
           (((C16985 * C519 + C16980 * C525 + C16984 * C518 + C16979 * C524 +
              C16983 * C517 + C16978 * C523) *
                 C50776 +
             (C16985 * C510 + C16980 * C520 + C16984 * C509 + C16979 * C514 +
              C16983 * C508 + C16978 * C513) *
                 C121) *
                C50885 +
            ((C17186 + C17185 + C17184) * C50776 +
             (C17183 + C17182 + C17181) * C121) *
                C16981) *
               C50847 * C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C121 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50776) *
               C16981 +
           ((C17169 + C17170 + C17171) * C121 +
            (C17172 + C17173 + C17174) * C50776) *
               C50885) *
              C50847 * C592 -
          (((C17503 + C17504 + C17505) * C50776 +
            (C17506 + C17507 + C17508) * C121) *
               C50885 +
           ((C17174 + C17173 + C17172) * C50776 +
            (C17171 + C17170 + C17169) * C121) *
               C16981) *
              C50847 * C593 +
          (((C17508 + C17507 + C17506) * C121 +
            (C17505 + C17504 + C17503) * C50776) *
               C16981 +
           ((C17625 + C17626 + C17627) * C121 +
            (C17628 + C17629 + C17630) * C50776) *
               C50885) *
              C50847 * C594 -
          (((C16985 * C2695 + C16980 * C2699 + C16984 * C2694 + C16979 * C2698 +
             C16983 * C2693 + C16978 * C2697) *
                C50776 +
            (C16985 * C2690 + C16980 * C2696 + C16984 * C2689 + C16979 * C2692 +
             C16983 * C2688 + C16978 * C2691) *
                C121) *
               C50885 +
           ((C17630 + C17629 + C17628) * C50776 +
            (C17627 + C17626 + C17625) * C121) *
               C16981) *
              C50847 * C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C19763 +
            (C19921 + C19922) * C19764 + (C19923 + C19924) * C19765 +
            (C19925 + C19926) * C19766) *
               C50847 * C50975 -
           (((C19767 * C2693 + C50687 * C2697) * C50776 +
             (C19767 * C2688 + C50687 * C2691) * C121) *
                C19766 +
            (C19926 + C19925) * C19765 + (C19924 + C19923) * C19764 +
            (C19922 + C19921) * C19763) *
               C50847 * C50762) *
              C250 +
          (((C19927 + C19928) * C19763 + (C19929 + C19930) * C19764 +
            (C19931 + C19932) * C19765 +
            ((C19767 * C2689 + C50687 * C2692) * C121 +
             (C19767 * C2694 + C50687 * C2698) * C50776) *
                C19766) *
               C50847 * C50762 -
           ((C19932 + C19931) * C19766 + (C19930 + C19929) * C19765 +
            (C19928 + C19927) * C19764 +
            ((C19767 * C134 + C50687 * C144) * C50776 +
             (C19767 * C123 + C50687 * C130) * C121) *
                C19763) *
               C50847 * C50975) *
              C251 +
          ((((C19767 * C124 + C50687 * C131) * C121 +
             (C19767 * C135 + C50687 * C145) * C50776) *
                C19763 +
            (C19933 + C19934) * C19764 + (C19935 + C19936) * C19765 +
            (C19937 + C19938) * C19766) *
               C50847 * C50975 -
           (((C19767 * C2695 + C50687 * C2699) * C50776 +
             (C19767 * C2690 + C50687 * C2696) * C121) *
                C19766 +
            (C19938 + C19937) * C19765 + (C19936 + C19935) * C19764 +
            (C19934 + C19933) * C19763) *
               C50847 * C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C121 +
            (C19767 * C133 + C50687 * C143) * C50776) *
               C19763 +
           (C19921 + C19922) * C19764 + C20135 * C19765 + C20136 * C19766) *
              C50847 * C592 -
          (C20225 * C19766 + C20226 * C19765 + (C19924 + C19923) * C19764 +
           (C19922 + C19921) * C19763) *
              C50847 * C593 +
          (C20135 * C19763 + C20136 * C19764 + (C20152 + C20151) * C19765 +
           (C20233 + C20234) * C19766) *
              C50847 * C594 -
          (((C19767 * C20221 + C50687 * C20223) * C50776 +
            (C19767 * C20220 + C50687 * C20222) * C121) *
               C19766 +
           (C20234 + C20233) * C19765 + C20225 * C19764 + C20226 * C19763) *
              C50847 * C595) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[149] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                      C16979 * C130 + C16985 * C124 + C16980 * C131) *
                         C377 +
                     (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                      C16979 * C144 + C16985 * C135 + C16980 * C145) *
                         C50977 -
                     (C16985 * C380 + C16980 * C386 + C16984 * C381 +
                      C16979 * C387 + C16983 * C382 + C16978 * C388) *
                         C378 -
                     (C16985 * C390 + C16980 * C398 + C16984 * C391 +
                      C16979 * C399 + C16983 * C392 + C16978 * C400) *
                         C50788) *
                        C16981 +
                    ((C17169 + C17170 + C17171) * C377 +
                     (C17172 + C17173 + C17174) * C50977 -
                     (C16985 * C713 + C16980 * C721 + C16984 * C712 +
                      C16979 * C720 + C16983 * C711 + C16978 * C719) *
                         C378 -
                     (C16985 * C725 + C16980 * C737 + C16984 * C724 +
                      C16979 * C736 + C16983 * C723 + C16978 * C735) *
                         C50788) *
                        C50885) *
                       C50847 * C50746 * C250 +
                   (((C16983 * C381 + C16978 * C387 + C16984 * C380 +
                      C16979 * C386 + C16985 * C379 + C16980 * C385) *
                         C378 -
                     ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                       C16979 * C145 + C16983 * C134 + C16978 * C144) *
                          C50977 +
                      (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                       C16979 * C131 + C16983 * C123 + C16978 * C130) *
                          C377) +
                     (C16983 * C391 + C16978 * C399 + C16984 * C390 +
                      C16979 * C398 + C16985 * C389 + C16980 * C397) *
                         C50788) *
                        C16981 +
                    ((C16983 * C712 + C16978 * C720 + C16984 * C713 +
                      C16979 * C721 + C16985 * C714 + C16980 * C722) *
                         C378 -
                     ((C17180 + C17179 + C17178) * C50977 +
                      (C17177 + C17176 + C17175) * C377) +
                     (C16983 * C724 + C16978 * C736 + C16984 * C725 +
                      C16979 * C737 + C16985 * C726 + C16980 * C738) *
                         C50788) *
                        C50885) *
                       C50847 * C50746 * C251 +
                   (((C16983 * C124 + C16978 * C131 + C16984 * C125 +
                      C16979 * C132 + C16985 * C126 + C16980 * C138) *
                         C377 +
                     (C16983 * C135 + C16978 * C145 + C16984 * C136 +
                      C16979 * C146 + C16985 * C137 + C16980 * C147) *
                         C50977 -
                     (C16985 * C383 + C16980 * C393 + C16984 * C379 +
                      C16979 * C385 + C16983 * C380 + C16978 * C386) *
                         C378 -
                     (C16985 * C394 + C16980 * C401 + C16984 * C389 +
                      C16979 * C397 + C16983 * C390 + C16978 * C398) *
                         C50788) *
                        C16981 +
                    ((C17181 + C17182 + C17183) * C377 +
                     (C17184 + C17185 + C17186) * C50977 -
                     (C16985 * C1407 + C16980 * C1408 + C16984 * C714 +
                      C16979 * C722 + C16983 * C713 + C16978 * C721) *
                         C378 -
                     (C16985 * C1409 + C16980 * C1410 + C16984 * C726 +
                      C16979 * C738 + C16983 * C725 + C16978 * C737) *
                         C50788) *
                        C50885) *
                       C50847 * C50746 * C252)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                      C16979 * C130 + C16985 * C124 + C16980 * C131) *
                         C377 +
                     (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                      C16979 * C144 + C16985 * C135 + C16980 * C145) *
                         C50977 -
                     (C16985 * C380 + C16980 * C386 + C16984 * C381 +
                      C16979 * C387 + C16983 * C382 + C16978 * C388) *
                         C378 -
                     (C16985 * C390 + C16980 * C398 + C16984 * C391 +
                      C16979 * C399 + C16983 * C392 + C16978 * C400) *
                         C50788) *
                        C16981 +
                    ((C17169 + C17170 + C17171) * C377 +
                     (C17172 + C17173 + C17174) * C50977 -
                     (C17801 + C17802 + C17803) * C378 -
                     (C17804 + C17805 + C17806) * C50788) *
                        C50885) *
                       C50847 * C501 +
                   (((C17803 + C17802 + C17801) * C378 -
                     ((C17174 + C17173 + C17172) * C50977 +
                      (C17171 + C17170 + C17169) * C377) +
                     (C17806 + C17805 + C17804) * C50788) *
                        C16981 +
                    ((C17807 + C17808 + C17809) * C378 -
                     ((C17503 + C17504 + C17505) * C50977 +
                      (C17506 + C17507 + C17508) * C377) +
                     (C17810 + C17811 + C17812) * C50788) *
                        C50885) *
                       C50847 * C502 +
                   (((C17508 + C17507 + C17506) * C377 +
                     (C17505 + C17504 + C17503) * C50977 -
                     (C17809 + C17808 + C17807) * C378 -
                     (C17812 + C17811 + C17810) * C50788) *
                        C16981 +
                    ((C17625 + C17626 + C17627) * C377 +
                     (C17628 + C17629 + C17630) * C50977 -
                     (C16985 * C4000 + C16980 * C4001 + C16984 * C3004 +
                      C16979 * C3008 + C16983 * C3003 + C16978 * C3007) *
                         C378 -
                     (C16985 * C4002 + C16980 * C4003 + C16984 * C3010 +
                      C16979 * C3016 + C16983 * C3009 + C16978 * C3015) *
                         C50788) *
                        C50885) *
                       C50847 * C503) *
                  C50714) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C19767 * C122 + C50687 * C129) * C377 +
                     (C19767 * C133 + C50687 * C143) * C50977 -
                     (C19767 * C382 + C50687 * C388) * C378 -
                     (C19767 * C392 + C50687 * C400) * C50788) *
                        C19763 +
                    (C19903 * C377 + C19904 * C50977 -
                     (C19767 * C711 + C50687 * C719) * C378 -
                     (C19767 * C723 + C50687 * C735) * C50788) *
                        C19764 +
                    (C19905 * C377 + C19906 * C50977 -
                     (C19767 * C718 + C50687 * C730) * C378 -
                     (C19767 * C734 + C50687 * C742) * C50788) *
                        C19765 +
                    (C19907 * C377 + C19908 * C50977 -
                     (C19767 * C3003 + C50687 * C3007) * C378 -
                     (C19767 * C3009 + C50687 * C3015) * C50788) *
                        C19766) *
                       C50847 * C50746 * C250 +
                   (((C19767 * C381 + C50687 * C387) * C378 -
                     ((C19767 * C134 + C50687 * C144) * C50977 +
                      (C19767 * C123 + C50687 * C130) * C377) +
                     (C19767 * C391 + C50687 * C399) * C50788) *
                        C19763 +
                    ((C19767 * C712 + C50687 * C720) * C378 -
                     (C19910 * C50977 + C19909 * C377) +
                     (C19767 * C724 + C50687 * C736) * C50788) *
                        C19764 +
                    ((C19767 * C717 + C50687 * C729) * C378 -
                     (C19912 * C50977 + C19911 * C377) +
                     (C19767 * C733 + C50687 * C741) * C50788) *
                        C19765 +
                    ((C19767 * C3004 + C50687 * C3008) * C378 -
                     (C19914 * C50977 + C19913 * C377) +
                     (C19767 * C3010 + C50687 * C3016) * C50788) *
                        C19766) *
                       C50847 * C50746 * C251 +
                   (((C19767 * C124 + C50687 * C131) * C377 +
                     (C19767 * C135 + C50687 * C145) * C50977 -
                     (C19767 * C380 + C50687 * C386) * C378 -
                     (C19767 * C390 + C50687 * C398) * C50788) *
                        C19763 +
                    (C19915 * C377 + C19916 * C50977 -
                     (C19767 * C713 + C50687 * C721) * C378 -
                     (C19767 * C725 + C50687 * C737) * C50788) *
                        C19764 +
                    (C19917 * C377 + C19918 * C50977 -
                     (C19767 * C716 + C50687 * C728) * C378 -
                     (C19767 * C732 + C50687 * C740) * C50788) *
                        C19765 +
                    (C19919 * C377 + C19920 * C50977 -
                     (C19767 * C4000 + C50687 * C4001) * C378 -
                     (C19767 * C4002 + C50687 * C4003) * C50788) *
                        C19766) *
                       C50847 * C50746 * C252)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C19767 * C122 + C50687 * C129) * C377 +
                     (C19767 * C133 + C50687 * C143) * C50977 -
                     (C19767 * C382 + C50687 * C388) * C378 -
                     (C19767 * C392 + C50687 * C400) * C50788) *
                        C19763 +
                    (C20337 + C20338 - C20371 - C20372) * C19764 +
                    C20381 * C19765 + C20382 * C19766) *
                       C50847 * C501 +
                   ((C20371 - (C20338 + C20337) + C20372) * C19763 +
                    (C20373 - (C20344 + C20343) + C20374) * C19764 +
                    (C20375 - (C20350 + C20349) + C20376) * C19765 +
                    (C20377 - (C20357 + C20358) + C20378) * C19766) *
                       C50847 * C502 +
                   (C20381 * C19763 + C20382 * C19764 +
                    (C20358 + C20357 - C20377 - C20378) * C19765 +
                    (C20231 * C377 + C20232 * C50977 -
                     (C19767 * C20332 + C50687 * C20333) * C378 -
                     (C19767 * C20334 + C50687 * C20335) * C50788) *
                        C19766) *
                       C50847 * C503) *
                  C50714) /
                     (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                  C121 +
              (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                  C50776) *
                 C50991 +
             ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C50885) *
                C33829 +
            (((C27996 + C27995) * C121 + (C27998 + C27997) * C50776) * C50991 +
             (C28527 * C121 + C28528 * C50776) * C50885) *
                C50911) *
               C1169 -
           (((C25533 * C50776 + C25532 * C121) * C50885 +
             (C28526 * C50776 + C28525 * C121) * C50991) *
                C50911 +
            (((C24889 + C24888) * C50776 + (C24887 + C24886) * C121) * C50885 +
             ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C50991) *
                C33829) *
               C50762) *
              C51021 +
          (((((C24890 + C24891) * C121 + (C24892 + C24893) * C50776) * C50991 +
             ((C24894 + C24895) * C121 + (C24896 + C24897) * C50776) * C50885) *
                C33829 +
            ((C29759 * C121 + C29760 * C50776) * C50991 +
             ((C26458 + C26459) * C121 + (C26460 + C26461) * C50776) * C50885) *
                C50911) *
               C50762 -
           (((C29761 * C50776 + C29762 * C121) * C50885 +
             ((C28002 + C28001) * C50776 + (C28000 + C27999) * C121) * C50991) *
                C50911 +
            (((C24893 + C24892) * C50776 + (C24891 + C24890) * C121) * C50885 +
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C50776 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C121) *
                 C50991) *
                C33829) *
               C1169) *
              C51006 +
          (((((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                  C121 +
              (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                  C50776) *
                 C50991 +
             ((C24898 + C24899) * C121 + (C24900 + C24901) * C50776) * C50885) *
                C33829 +
            (((C28004 + C28003) * C121 + (C28006 + C28005) * C50776) * C50991 +
             ((C27773 + C27774) * C121 + (C27775 + C27776) * C50776) * C50885) *
                C50911) *
               C1169 -
           ((((C49711 * C731 + C50692 * C739 + C49718 * C732 + C50963 * C740) *
                  C50776 +
              (C49711 * C715 + C50692 * C727 + C49718 * C716 + C50963 * C728) *
                  C121) *
                 C50885 +
             ((C27776 + C27775) * C50776 + (C27774 + C27773) * C121) * C50991) *
                C50911 +
            (((C24905 + C24904) * C50776 + (C24903 + C24902) * C121) * C50885 +
             ((C24901 + C24900) * C50776 + (C24899 + C24898) * C121) * C50991) *
                C33829) *
               C50762) *
              C1173)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                  C121 +
              (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                  C50776) *
                 C50991 +
             ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C50885) *
                C33829 +
            (((C27996 + C27995) * C121 + (C27998 + C27997) * C50776) * C50991 +
             (C28527 * C121 + C28528 * C50776) * C50885) *
                C50911) *
               C51022 -
           (((C25533 * C50776 + C25532 * C121) * C50885 +
             (C28526 * C50776 + C28525 * C121) * C50991) *
                C50911 +
            (((C24889 + C24888) * C50776 + (C24887 + C24886) * C121) * C50885 +
             ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C50991) *
                C33829) *
               C51009 +
           ((C25230 * C50991 +
             ((C25223 + C25222) * C121 + (C25221 + C25220) * C50776) * C50885) *
                C33829 +
            ((C28529 * C121 + C28530 * C50776) * C50991 +
             ((C25528 + C25529) * C121 + (C25530 + C25531) * C50776) * C50885) *
                C50911) *
               C1274) *
              C1275 +
          (((((C24890 + C24891) * C121 + (C24892 + C24893) * C50776) * C50991 +
             ((C24894 + C24895) * C121 + (C24896 + C24897) * C50776) * C50885) *
                C33829 +
            ((C29759 * C121 + C29760 * C50776) * C50991 +
             ((C26458 + C26459) * C121 + (C26460 + C26461) * C50776) * C50885) *
                C50911) *
               C51009 -
           (((C29761 * C50776 + C29762 * C121) * C50885 +
             ((C28002 + C28001) * C50776 + (C28000 + C27999) * C121) * C50991) *
                C50911 +
            (((C24893 + C24892) * C50776 + (C24891 + C24890) * C121) * C50885 +
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C50776 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C121) *
                 C50991) *
                C33829) *
               C51022 -
           ((((C49711 * C4002 + C50692 * C4003 + C49718 * C3010 +
               C50963 * C3016) *
                  C50776 +
              (C49711 * C4000 + C50692 * C4001 + C49718 * C3004 +
               C50963 * C3008) *
                  C121) *
                 C50885 +
             ((C26461 + C26460) * C50776 + (C26459 + C26458) * C121) * C50991) *
                C50911 +
            (((C25227 + C25226) * C50776 + (C25225 + C25224) * C121) * C50885 +
             C25231 * C50991) *
                C33829) *
               C1274) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                  C377 +
              (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                  C50977 -
              (C27995 + C27996) * C378 - (C27997 + C27998) * C50788) *
                 C50991 +
             ((C24882 + C24883) * C377 + (C24884 + C24885) * C50977 -
              C28525 * C378 - C28526 * C50788) *
                 C50885) *
                C33829 +
            (((C27996 + C27995) * C377 + (C27998 + C27997) * C50977 -
              (C28750 + C28749) * C378 - (C28752 + C28751) * C50788) *
                 C50991 +
             (C28527 * C377 + C28528 * C50977 - C28957 * C378 -
              C28958 * C50788) *
                 C50885) *
                C50911) *
               C1169 +
           (((C28527 * C378 -
              ((C24885 + C24884) * C50977 + (C24883 + C24882) * C377) +
              C28528 * C50788) *
                 C50991 +
             (C28529 * C378 -
              ((C24889 + C24888) * C50977 + (C24887 + C24886) * C377) +
              C28530 * C50788) *
                 C50885) *
                C33829 +
            ((C28955 * C378 - (C28526 * C50977 + C28525 * C377) +
              C28956 * C50788) *
                 C50991 +
             ((C25850 + C25851) * C378 - (C25533 * C50977 + C25532 * C377) +
              (C25852 + C25853) * C50788) *
                 C50885) *
                C50911) *
               C50762) *
              C1275 +
          (((((C27999 + C28000) * C378 -
              ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                   C50977 +
               (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                   C377) +
              (C28001 + C28002) * C50788) *
                 C50991 +
             (C29759 * C378 -
              ((C24893 + C24892) * C50977 + (C24891 + C24890) * C377) +
              C29760 * C50788) *
                 C50885) *
                C33829 +
            (((C28754 + C28753) * C378 -
              ((C28002 + C28001) * C50977 + (C28000 + C27999) * C377) +
              (C28756 + C28755) * C50788) *
                 C50991 +
             ((C28758 + C28757) * C378 - (C29761 * C50977 + C29762 * C377) +
              (C28760 + C28759) * C50788) *
                 C50885) *
                C50911) *
               C1169 +
           ((((C24890 + C24891) * C377 + (C24892 + C24893) * C50977 -
              C29762 * C378 - C29761 * C50788) *
                 C50991 +
             ((C24894 + C24895) * C377 + (C24896 + C24897) * C50977 -
              (C26459 + C26458) * C378 - (C26461 + C26460) * C50788) *
                 C50885) *
                C33829 +
            ((C29759 * C377 + C29760 * C50977 - (C28757 + C28758) * C378 -
              (C28759 + C28760) * C50788) *
                 C50991 +
             ((C26458 + C26459) * C377 + (C26460 + C26461) * C50977 -
              (C49711 * C3212 + C50692 * C3217 + C49718 * C3211 +
               C50963 * C3214) *
                  C378 -
              (C49711 * C3218 + C50692 * C3221 + C49718 * C3216 +
               C50963 * C3220) *
                  C50788) *
                 C50885) *
                C50911) *
               C50762) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                  C1511 +
              (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                  C1509 -
              (C27995 + C27996) * C1512 - (C27997 + C27998) * C50788) *
                 C50991 +
             ((C24882 + C24883) * C1511 + (C24884 + C24885) * C1509 -
              C28525 * C1512 - C28526 * C50788) *
                 C50885) *
                C33829 +
            (((C27996 + C27995) * C1511 + (C27998 + C27997) * C1509 -
              (C28750 + C28749) * C1512 - (C28752 + C28751) * C50788) *
                 C50991 +
             (C28527 * C1511 + C28528 * C1509 - C28957 * C1512 -
              C28958 * C50788) *
                 C50885) *
                C50911) *
               C1169 +
           (((C28527 * C1512 -
              ((C24885 + C24884) * C1509 + (C24883 + C24882) * C1511) +
              C28528 * C50788) *
                 C50991 +
             (C28529 * C1512 -
              ((C24889 + C24888) * C1509 + (C24887 + C24886) * C1511) +
              C28530 * C50788) *
                 C50885) *
                C33829 +
            ((C28955 * C1512 - (C28526 * C1509 + C28525 * C1511) +
              C28956 * C50788) *
                 C50991 +
             ((C25850 + C25851) * C1512 - (C25533 * C1509 + C25532 * C1511) +
              (C25852 + C25853) * C50788) *
                 C50885) *
                C50911) *
               C50762) *
              C50968 +
          (((((C27999 + C28000) * C1512 -
              ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                   C1509 +
               (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                   C1511) +
              (C28001 + C28002) * C50788) *
                 C50991 +
             (C29759 * C1512 -
              ((C24893 + C24892) * C1509 + (C24891 + C24890) * C1511) +
              C29760 * C50788) *
                 C50885) *
                C33829 +
            (((C28754 + C28753) * C1512 -
              ((C28002 + C28001) * C1509 + (C28000 + C27999) * C1511) +
              (C28756 + C28755) * C50788) *
                 C50991 +
             ((C28758 + C28757) * C1512 - (C29761 * C1509 + C29762 * C1511) +
              (C28760 + C28759) * C50788) *
                 C50885) *
                C50911) *
               C1169 +
           ((((C24890 + C24891) * C1511 + (C24892 + C24893) * C1509 -
              C29762 * C1512 - C29761 * C50788) *
                 C50991 +
             ((C24894 + C24895) * C1511 + (C24896 + C24897) * C1509 -
              (C26459 + C26458) * C1512 - (C26461 + C26460) * C50788) *
                 C50885) *
                C33829 +
            ((C29759 * C1511 + C29760 * C1509 - (C28757 + C28758) * C1512 -
              (C28759 + C28760) * C50788) *
                 C50991 +
             ((C26458 + C26459) * C1511 + (C26460 + C26461) * C1509 -
              (C49711 * C3212 + C50692 * C3217 + C49718 * C3211 +
               C50963 * C3214) *
                  C1512 -
              (C49711 * C3218 + C50692 * C3221 + C49718 * C3216 +
               C50963 * C3220) *
                  C50788) *
                 C50885) *
                C50911) *
               C50762) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C1511 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C1509 -
             (C27995 + C27996) * C1512 - (C27997 + C27998) * C50788) *
                C50991 +
            ((C24882 + C24883) * C1511 + (C24884 + C24885) * C1509 -
             C28525 * C1512 - C28526 * C50788) *
                C50885) *
               C33829 +
           (((C27996 + C27995) * C1511 + (C27998 + C27997) * C1509 -
             (C28750 + C28749) * C1512 - (C28752 + C28751) * C50788) *
                C50991 +
            (C28527 * C1511 + C28528 * C1509 - C28957 * C1512 -
             C28958 * C50788) *
                C50885) *
               C50911) *
              C51022 +
          (((C28527 * C1512 -
             ((C24885 + C24884) * C1509 + (C24883 + C24882) * C1511) +
             C28528 * C50788) *
                C50991 +
            (C28529 * C1512 -
             ((C24889 + C24888) * C1509 + (C24887 + C24886) * C1511) +
             C28530 * C50788) *
                C50885) *
               C33829 +
           ((C28955 * C1512 - (C28526 * C1509 + C28525 * C1511) +
             C28956 * C50788) *
                C50991 +
            ((C25850 + C25851) * C1512 - (C25533 * C1509 + C25532 * C1511) +
             (C25852 + C25853) * C50788) *
                C50885) *
               C50911) *
              C51009 +
          ((C27294 * C50991 +
            ((C25223 + C25222) * C1511 + (C25221 + C25220) * C1509 -
             (C25529 + C25528) * C1512 - (C25531 + C25530) * C50788) *
                C50885) *
               C33829 +
           ((C28529 * C1511 + C28530 * C1509 - (C25851 + C25850) * C1512 -
             (C25853 + C25852) * C50788) *
                C50991 +
            ((C25528 + C25529) * C1511 + (C25530 + C25531) * C1509 -
             (C49711 * C3368 + C50692 * C3370 + C49718 * C3369 +
              C50963 * C3371) *
                 C1512 -
             (C49711 * C3372 + C50692 * C3374 + C49718 * C3373 +
              C50963 * C3375) *
                 C50788) *
                C50885) *
               C50911) *
              C1274) *
         C50714) /
        (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C1744 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C51023 -
             (C27995 + C27996) * C1745 - (C27997 + C27998) * C51012 +
             (C28749 + C28750) * C1746 + (C28751 + C28752) * C1743) *
                C50991 +
            ((C24882 + C24883) * C1744 + (C24884 + C24885) * C51023 -
             C28525 * C1745 - C28526 * C51012 + C28955 * C1746 +
             C28956 * C1743) *
                C50885) *
               C33829 +
           (((C27996 + C27995) * C1744 + (C27998 + C27997) * C51023 -
             (C28750 + C28749) * C1745 - (C28752 + C28751) * C51012 +
             (C29110 + C29109) * C1746 + (C29112 + C29111) * C1743) *
                C50991 +
            (C28527 * C1744 + C28528 * C51023 - C28957 * C1745 -
             C28958 * C51012 + (C28967 + C28968) * C1746 +
             (C28969 + C28970) * C1743) *
                C50885) *
               C50911) *
              C1169 +
          (((C28527 * C1745 -
             ((C24885 + C24884) * C51023 + (C24883 + C24882) * C1744) +
             C28528 * C51012 - C28957 * C1746 - C28958 * C1743) *
                C50991 +
            (C28529 * C1745 -
             ((C24889 + C24888) * C51023 + (C24887 + C24886) * C1744) +
             C28530 * C51012 - (C25851 + C25850) * C1746 -
             (C25853 + C25852) * C1743) *
                C50885) *
               C33829 +
           ((C28955 * C1745 - (C28526 * C51023 + C28525 * C1744) +
             C28956 * C51012 - (C28968 + C28967) * C1746 -
             (C28970 + C28969) * C1743) *
                C50991 +
            ((C25850 + C25851) * C1745 - (C25533 * C51023 + C25532 * C1744) +
             (C25852 + C25853) * C51012 -
             (C49711 * C3500 + C50692 * C3506 + C49718 * C3501 +
              C50963 * C3507) *
                 C1746 -
             (C49711 * C3508 + C50692 * C3512 + C49718 * C3509 +
              C50963 * C3513) *
                 C1743) *
                C50885) *
               C50911) *
              C50762) *
         C50714) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                  C121 +
              (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                  C50776) *
                 C50991 +
             ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C50885) *
                C33829 +
            (((C27996 + C27995) * C121 + (C27998 + C27997) * C50776) * C50991 +
             (C28527 * C121 + C28528 * C50776) * C50885) *
                C50911) *
               C501 -
           (((C25533 * C50776 + C25532 * C121) * C50885 +
             (C28526 * C50776 + C28525 * C121) * C50991) *
                C50911 +
            (((C24889 + C24888) * C50776 + (C24887 + C24886) * C121) * C50885 +
             ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C50991) *
                C33829) *
               C502 +
           ((C25230 * C50991 +
             ((C25223 + C25222) * C121 + (C25221 + C25220) * C50776) * C50885) *
                C33829 +
            ((C28529 * C121 + C28530 * C50776) * C50991 +
             ((C25528 + C25529) * C121 + (C25530 + C25531) * C50776) * C50885) *
                C50911) *
               C503) *
              C50968 +
          (((((C24890 + C24891) * C121 + (C24892 + C24893) * C50776) * C50991 +
             ((C24894 + C24895) * C121 + (C24896 + C24897) * C50776) * C50885) *
                C33829 +
            ((C29759 * C121 + C29760 * C50776) * C50991 +
             ((C26458 + C26459) * C121 + (C26460 + C26461) * C50776) * C50885) *
                C50911) *
               C502 -
           (((C29761 * C50776 + C29762 * C121) * C50885 +
             ((C28002 + C28001) * C50776 + (C28000 + C27999) * C121) * C50991) *
                C50911 +
            (((C24893 + C24892) * C50776 + (C24891 + C24890) * C121) * C50885 +
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C50776 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C121) *
                 C50991) *
                C33829) *
               C501 -
           ((((C49711 * C4002 + C50692 * C4003 + C49718 * C3010 +
               C50963 * C3016) *
                  C50776 +
              (C49711 * C4000 + C50692 * C4001 + C49718 * C3004 +
               C50963 * C3008) *
                  C121) *
                 C50885 +
             ((C26461 + C26460) * C50776 + (C26459 + C26458) * C121) * C50991) *
                C50911 +
            (((C25227 + C25226) * C50776 + (C25225 + C25224) * C121) * C50885 +
             C25231 * C50991) *
                C33829) *
               C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C121 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50776) *
                C50991 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C50885) *
               C33829 +
           (((C27996 + C27995) * C121 + (C27998 + C27997) * C50776) * C50991 +
            (C28527 * C121 + C28528 * C50776) * C50885) *
               C50911) *
              C50746 * C113 -
          (((C29761 * C50776 + C29762 * C121) * C50885 +
            ((C28002 + C28001) * C50776 + (C28000 + C27999) * C121) * C50991) *
               C50911 +
           (((C24893 + C24892) * C50776 + (C24891 + C24890) * C121) * C50885 +
            ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                 C50776 +
             (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                 C121) *
                C50991) *
               C33829) *
              C50746 * C114 +
          ((((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                 C121 +
             (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                 C50776) *
                C50991 +
            ((C24898 + C24899) * C121 + (C24900 + C24901) * C50776) * C50885) *
               C33829 +
           (((C28004 + C28003) * C121 + (C28006 + C28005) * C50776) * C50991 +
            ((C27773 + C27774) * C121 + (C27775 + C27776) * C50776) * C50885) *
               C50911) *
              C50746 * C115 -
          ((((C49711 * C1409 + C50692 * C1410 + C49718 * C726 + C50963 * C738) *
                 C50776 +
             (C49711 * C1407 + C50692 * C1408 + C49718 * C714 + C50963 * C722) *
                 C121) *
                C50885 +
            ((C49711 * C394 + C50692 * C401 + C49718 * C389 + C50963 * C397) *
                 C50776 +
             (C49711 * C383 + C50692 * C393 + C49718 * C379 + C50963 * C385) *
                 C121) *
                C50991) *
               C50911 +
           (((C49711 * C268 + C50692 * C275 + C49718 * C259 + C50963 * C271) *
                 C50776 +
             (C49711 * C257 + C50692 * C267 + C49718 * C253 + C50963 * C263) *
                 C121) *
                C50885 +
            ((C49711 * C137 + C50692 * C147 + C49718 * C136 + C50963 * C146) *
                 C50776 +
             (C49711 * C126 + C50692 * C138 + C49718 * C125 + C50963 * C132) *
                 C121) *
                C50991) *
               C33829) *
              C50746 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C844 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C841 -
             (C27995 + C27996) * C845 - (C27997 + C27998) * C842 +
             (C28749 + C28750) * C846 + (C28751 + C28752) * C843) *
                C50991 +
            ((C24882 + C24883) * C844 + (C24884 + C24885) * C841 -
             C28525 * C845 - C28526 * C842 + C28955 * C846 + C28956 * C843) *
                C50885) *
               C33829 +
           (((C27996 + C27995) * C844 + (C27998 + C27997) * C841 -
             (C28750 + C28749) * C845 - (C28752 + C28751) * C842 +
             (C29110 + C29109) * C846 + (C29112 + C29111) * C843) *
                C50991 +
            (C28527 * C844 + C28528 * C841 - C28957 * C845 - C28958 * C842 +
             (C28967 + C28968) * C846 + (C28969 + C28970) * C843) *
                C50885) *
               C50911) *
              C50746 * C50968 +
          ((((C27999 + C28000) * C845 -
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C841 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C844) +
             (C28001 + C28002) * C842 - (C28753 + C28754) * C846 -
             (C28755 + C28756) * C843) *
                C50991 +
            (C29759 * C845 -
             ((C24893 + C24892) * C841 + (C24891 + C24890) * C844) +
             C29760 * C842 - (C28757 + C28758) * C846 -
             (C28759 + C28760) * C843) *
                C50885) *
               C33829 +
           (((C28754 + C28753) * C845 -
             ((C28002 + C28001) * C841 + (C28000 + C27999) * C844) +
             (C28756 + C28755) * C842 -
             (C49711 * C1056 + C50692 * C1060 + C49718 * C1057 +
              C50963 * C1061) *
                 C846 -
             (C49711 * C1064 + C50692 * C1068 + C49718 * C1065 +
              C50963 * C1069) *
                 C843) *
                C50991 +
            ((C28758 + C28757) * C845 - (C29761 * C841 + C29762 * C844) +
             (C28760 + C28759) * C842 -
             (C49711 * C6822 + C50692 * C6823 + C49718 * C3498 +
              C50963 * C3502) *
                 C846 -
             (C49711 * C6824 + C50692 * C6825 + C49718 * C3504 +
              C50963 * C3510) *
                 C843) *
                C50885) *
               C50911) *
              C50746 * C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C121 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50776) *
                C50991 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C50885) *
               C33829 +
           (((C27996 + C27995) * C121 + (C27998 + C27997) * C50776) * C50991 +
            (C28527 * C121 + C28528 * C50776) * C50885) *
               C50911) *
              C592 -
          (((C25533 * C50776 + C25532 * C121) * C50885 +
            (C28526 * C50776 + C28525 * C121) * C50991) *
               C50911 +
           (((C24889 + C24888) * C50776 + (C24887 + C24886) * C121) * C50885 +
            ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C50991) *
               C33829) *
              C593 +
          ((C25230 * C50991 +
            ((C25223 + C25222) * C121 + (C25221 + C25220) * C50776) * C50885) *
               C33829 +
           ((C28529 * C121 + C28530 * C50776) * C50991 +
            ((C25528 + C25529) * C121 + (C25530 + C25531) * C50776) * C50885) *
               C50911) *
              C594 -
          ((((C49711 * C3013 + C50692 * C3017 + C49718 * C3014 +
              C50963 * C3018) *
                 C50776 +
             (C49711 * C3005 + C50692 * C3011 + C49718 * C3006 +
              C50963 * C3012) *
                 C121) *
                C50885 +
            ((C25531 + C25530) * C50776 + (C25529 + C25528) * C121) * C50991) *
               C50911 +
           (((C25345 + C25344) * C50776 + (C25343 + C25342) * C121) * C50885 +
            C25346 * C50991) *
               C33829) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                  C121 +
              (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                  C50776) *
                 C50991 +
             ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C50885) *
                C33829 +
            (((C27996 + C27995) * C121 + (C27998 + C27997) * C50776) * C50991 +
             (C28527 * C121 + C28528 * C50776) * C50885) *
                C50911) *
               C50975 -
           (((C25533 * C50776 + C25532 * C121) * C50885 +
             (C28526 * C50776 + C28525 * C121) * C50991) *
                C50911 +
            (((C24889 + C24888) * C50776 + (C24887 + C24886) * C121) * C50885 +
             ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C50991) *
                C33829) *
               C50762) *
              C250 +
          (((((C24890 + C24891) * C121 + (C24892 + C24893) * C50776) * C50991 +
             ((C24894 + C24895) * C121 + (C24896 + C24897) * C50776) * C50885) *
                C33829 +
            ((C29759 * C121 + C29760 * C50776) * C50991 +
             ((C26458 + C26459) * C121 + (C26460 + C26461) * C50776) * C50885) *
                C50911) *
               C50762 -
           (((C29761 * C50776 + C29762 * C121) * C50885 +
             ((C28002 + C28001) * C50776 + (C28000 + C27999) * C121) * C50991) *
                C50911 +
            (((C24893 + C24892) * C50776 + (C24891 + C24890) * C121) * C50885 +
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C50776 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C121) *
                 C50991) *
                C33829) *
               C50975) *
              C251 +
          (((((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                  C121 +
              (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                  C50776) *
                 C50991 +
             ((C24898 + C24899) * C121 + (C24900 + C24901) * C50776) * C50885) *
                C33829 +
            (((C28004 + C28003) * C121 + (C28006 + C28005) * C50776) * C50991 +
             ((C27773 + C27774) * C121 + (C27775 + C27776) * C50776) * C50885) *
                C50911) *
               C50975 -
           ((((C49711 * C731 + C50692 * C739 + C49718 * C732 + C50963 * C740) *
                  C50776 +
              (C49711 * C715 + C50692 * C727 + C49718 * C716 + C50963 * C728) *
                  C121) *
                 C50885 +
             ((C27776 + C27775) * C50776 + (C27774 + C27773) * C121) * C50991) *
                C50911 +
            (((C24905 + C24904) * C50776 + (C24903 + C24902) * C121) * C50885 +
             ((C24901 + C24900) * C50776 + (C24899 + C24898) * C121) * C50991) *
                C33829) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C844 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C841 -
             (C27995 + C27996) * C845 - (C27997 + C27998) * C842 +
             (C28749 + C28750) * C846 + (C28751 + C28752) * C843) *
                C50991 +
            ((C24882 + C24883) * C844 + (C24884 + C24885) * C841 -
             C28525 * C845 - C28526 * C842 + C28955 * C846 + C28956 * C843) *
                C50885) *
               C33829 +
           (((C27996 + C27995) * C844 + (C27998 + C27997) * C841 -
             (C28750 + C28749) * C845 - (C28752 + C28751) * C842 +
             (C29110 + C29109) * C846 + (C29112 + C29111) * C843) *
                C50991 +
            (C28527 * C844 + C28528 * C841 - C28957 * C845 - C28958 * C842 +
             (C28967 + C28968) * C846 + (C28969 + C28970) * C843) *
                C50885) *
               C50911) *
              C50975 +
          (((C28527 * C845 -
             ((C24885 + C24884) * C841 + (C24883 + C24882) * C844) +
             C28528 * C842 - C28957 * C846 - C28958 * C843) *
                C50991 +
            (C28529 * C845 -
             ((C24889 + C24888) * C841 + (C24887 + C24886) * C844) +
             C28530 * C842 - (C25851 + C25850) * C846 -
             (C25853 + C25852) * C843) *
                C50885) *
               C33829 +
           ((C28955 * C845 - (C28526 * C841 + C28525 * C844) + C28956 * C842 -
             (C28968 + C28967) * C846 - (C28970 + C28969) * C843) *
                C50991 +
            ((C25850 + C25851) * C845 - (C25533 * C841 + C25532 * C844) +
             (C25852 + C25853) * C842 -
             (C49711 * C3500 + C50692 * C3506 + C49718 * C3501 +
              C50963 * C3507) *
                 C846 -
             (C49711 * C3508 + C50692 * C3512 + C49718 * C3509 +
              C50963 * C3513) *
                 C843) *
                C50885) *
               C50911) *
              C50762) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C377 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50977 -
             (C27995 + C27996) * C378 - (C27997 + C27998) * C50788) *
                C50991 +
            ((C24882 + C24883) * C377 + (C24884 + C24885) * C50977 -
             C28525 * C378 - C28526 * C50788) *
                C50885) *
               C33829 +
           (((C27996 + C27995) * C377 + (C27998 + C27997) * C50977 -
             (C28750 + C28749) * C378 - (C28752 + C28751) * C50788) *
                C50991 +
            (C28527 * C377 + C28528 * C50977 - C28957 * C378 -
             C28958 * C50788) *
                C50885) *
               C50911) *
              C501 +
          (((C28527 * C378 -
             ((C24885 + C24884) * C50977 + (C24883 + C24882) * C377) +
             C28528 * C50788) *
                C50991 +
            (C28529 * C378 -
             ((C24889 + C24888) * C50977 + (C24887 + C24886) * C377) +
             C28530 * C50788) *
                C50885) *
               C33829 +
           ((C28955 * C378 - (C28526 * C50977 + C28525 * C377) +
             C28956 * C50788) *
                C50991 +
            ((C25850 + C25851) * C378 - (C25533 * C50977 + C25532 * C377) +
             (C25852 + C25853) * C50788) *
                C50885) *
               C50911) *
              C502 +
          ((C25537 * C50991 +
            ((C25223 + C25222) * C377 + (C25221 + C25220) * C50977 -
             (C25529 + C25528) * C378 - (C25531 + C25530) * C50788) *
                C50885) *
               C33829 +
           ((C28529 * C377 + C28530 * C50977 - (C25851 + C25850) * C378 -
             (C25853 + C25852) * C50788) *
                C50991 +
            ((C25528 + C25529) * C377 + (C25530 + C25531) * C50977 -
             (C49711 * C3368 + C50692 * C3370 + C49718 * C3369 +
              C50963 * C3371) *
                 C378 -
             (C49711 * C3372 + C50692 * C3374 + C49718 * C3373 +
              C50963 * C3375) *
                 C50788) *
                C50885) *
               C50911) *
              C503) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C377 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50977 -
             (C27995 + C27996) * C378 - (C27997 + C27998) * C50788) *
                C50991 +
            ((C24882 + C24883) * C377 + (C24884 + C24885) * C50977 -
             C28525 * C378 - C28526 * C50788) *
                C50885) *
               C33829 +
           (((C27996 + C27995) * C377 + (C27998 + C27997) * C50977 -
             (C28750 + C28749) * C378 - (C28752 + C28751) * C50788) *
                C50991 +
            (C28527 * C377 + C28528 * C50977 - C28957 * C378 -
             C28958 * C50788) *
                C50885) *
               C50911) *
              C50746 * C250 +
          ((((C27999 + C28000) * C378 -
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C50977 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C377) +
             (C28001 + C28002) * C50788) *
                C50991 +
            (C29759 * C378 -
             ((C24893 + C24892) * C50977 + (C24891 + C24890) * C377) +
             C29760 * C50788) *
                C50885) *
               C33829 +
           (((C28754 + C28753) * C378 -
             ((C28002 + C28001) * C50977 + (C28000 + C27999) * C377) +
             (C28756 + C28755) * C50788) *
                C50991 +
            ((C28758 + C28757) * C378 - (C29761 * C50977 + C29762 * C377) +
             (C28760 + C28759) * C50788) *
                C50885) *
               C50911) *
              C50746 * C251 +
          ((((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                 C377 +
             (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                 C50977 -
             (C28003 + C28004) * C378 - (C28005 + C28006) * C50788) *
                C50991 +
            ((C24898 + C24899) * C377 + (C24900 + C24901) * C50977 -
             (C27774 + C27773) * C378 - (C27776 + C27775) * C50788) *
                C50885) *
               C33829 +
           (((C28004 + C28003) * C377 + (C28006 + C28005) * C50977 -
             (C49711 * C850 + C50692 * C855 + C49718 * C849 + C50963 * C854) *
                 C378 -
             (C49711 * C859 + C50692 * C865 + C49718 * C858 + C50963 * C864) *
                 C50788) *
                C50991 +
            ((C27773 + C27774) * C377 + (C27775 + C27776) * C50977 -
             (C49711 * C965 + C50692 * C969 + C49718 * C966 + C50963 * C970) *
                 C378 -
             (C49711 * C973 + C50692 * C977 + C49718 * C974 + C50963 * C978) *
                 C50788) *
                C50885) *
               C50911) *
              C50746 * C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C1051 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C1047 -
            (C27995 + C27996) * C1052 - (C27997 + C27998) * C1048 +
            (C28749 + C28750) * C1053 + (C28751 + C28752) * C1049 -
            (C29109 + C29110) * C1054 - (C29111 + C29112) * C1050) *
               C50991 +
           ((C24882 + C24883) * C1051 + (C24884 + C24885) * C1047 -
            C28525 * C1052 - C28526 * C1048 + C28955 * C1053 + C28956 * C1049 -
            (C28968 + C28967) * C1054 - (C28970 + C28969) * C1050) *
               C50885) *
              C33829 +
          (((C27996 + C27995) * C1051 + (C27998 + C27997) * C1047 -
            (C28750 + C28749) * C1052 - (C28752 + C28751) * C1048 +
            (C29110 + C29109) * C1053 + (C29112 + C29111) * C1049 -
            (C49711 * C6009 + C50692 * C6012 + C49718 * C6008 +
             C50963 * C6011) *
                C1054 -
            (C49711 * C6014 + C50692 * C6018 + C49718 * C6013 +
             C50963 * C6017) *
                C1050) *
               C50991 +
           (C28527 * C1051 + C28528 * C1047 - C28957 * C1052 - C28958 * C1048 +
            (C28967 + C28968) * C1053 + (C28969 + C28970) * C1049 -
            (C49711 * C6194 + C50692 * C6196 + C49718 * C6195 +
             C50963 * C6197) *
                C1054 -
            (C49711 * C6198 + C50692 * C6200 + C49718 * C6199 +
             C50963 * C6201) *
                C1050) *
               C50885) *
              C50911) *
         C50746 * C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C1511 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C1509 -
             (C27995 + C27996) * C1512 - (C27997 + C27998) * C50788) *
                C50991 +
            ((C24882 + C24883) * C1511 + (C24884 + C24885) * C1509 -
             C28525 * C1512 - C28526 * C50788) *
                C50885) *
               C33829 +
           (((C27996 + C27995) * C1511 + (C27998 + C27997) * C1509 -
             (C28750 + C28749) * C1512 - (C28752 + C28751) * C50788) *
                C50991 +
            (C28527 * C1511 + C28528 * C1509 - C28957 * C1512 -
             C28958 * C50788) *
                C50885) *
               C50911) *
              C50746 * C51021 +
          ((((C27999 + C28000) * C1512 -
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C1509 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C1511) +
             (C28001 + C28002) * C50788) *
                C50991 +
            (C29759 * C1512 -
             ((C24893 + C24892) * C1509 + (C24891 + C24890) * C1511) +
             C29760 * C50788) *
                C50885) *
               C33829 +
           (((C28754 + C28753) * C1512 -
             ((C28002 + C28001) * C1509 + (C28000 + C27999) * C1511) +
             (C28756 + C28755) * C50788) *
                C50991 +
            ((C28758 + C28757) * C1512 - (C29761 * C1509 + C29762 * C1511) +
             (C28760 + C28759) * C50788) *
                C50885) *
               C50911) *
              C50746 * C51006 +
          ((((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                 C1511 +
             (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                 C1509 -
             (C28003 + C28004) * C1512 - (C28005 + C28006) * C50788) *
                C50991 +
            ((C24898 + C24899) * C1511 + (C24900 + C24901) * C1509 -
             (C27774 + C27773) * C1512 - (C27776 + C27775) * C50788) *
                C50885) *
               C33829 +
           (((C28004 + C28003) * C1511 + (C28006 + C28005) * C1509 -
             (C49711 * C850 + C50692 * C855 + C49718 * C849 + C50963 * C854) *
                 C1512 -
             (C49711 * C859 + C50692 * C865 + C49718 * C858 + C50963 * C864) *
                 C50788) *
                C50991 +
            ((C27773 + C27774) * C1511 + (C27775 + C27776) * C1509 -
             (C49711 * C965 + C50692 * C969 + C49718 * C966 + C50963 * C970) *
                 C1512 -
             (C49711 * C973 + C50692 * C977 + C49718 * C974 + C50963 * C978) *
                 C50788) *
                C50885) *
               C50911) *
              C50746 * C1173)) /
        (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                  C1511 +
              (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                  C1509 -
              (C27995 + C27996) * C1512 - (C27997 + C27998) * C50788) *
                 C50991 +
             ((C24882 + C24883) * C1511 + (C24884 + C24885) * C1509 -
              C28525 * C1512 - C28526 * C50788) *
                 C50885) *
                C33829 +
            (((C27996 + C27995) * C1511 + (C27998 + C27997) * C1509 -
              (C28750 + C28749) * C1512 - (C28752 + C28751) * C50788) *
                 C50991 +
             (C28527 * C1511 + C28528 * C1509 - C28957 * C1512 -
              C28958 * C50788) *
                 C50885) *
                C50911) *
               C50975 +
           (((C28527 * C1512 -
              ((C24885 + C24884) * C1509 + (C24883 + C24882) * C1511) +
              C28528 * C50788) *
                 C50991 +
             (C28529 * C1512 -
              ((C24889 + C24888) * C1509 + (C24887 + C24886) * C1511) +
              C28530 * C50788) *
                 C50885) *
                C33829 +
            ((C28955 * C1512 - (C28526 * C1509 + C28525 * C1511) +
              C28956 * C50788) *
                 C50991 +
             ((C25850 + C25851) * C1512 - (C25533 * C1509 + C25532 * C1511) +
              (C25852 + C25853) * C50788) *
                 C50885) *
                C50911) *
               C50762) *
              C1275 +
          (((((C27999 + C28000) * C1512 -
              ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                   C1509 +
               (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                   C1511) +
              (C28001 + C28002) * C50788) *
                 C50991 +
             (C29759 * C1512 -
              ((C24893 + C24892) * C1509 + (C24891 + C24890) * C1511) +
              C29760 * C50788) *
                 C50885) *
                C33829 +
            (((C28754 + C28753) * C1512 -
              ((C28002 + C28001) * C1509 + (C28000 + C27999) * C1511) +
              (C28756 + C28755) * C50788) *
                 C50991 +
             ((C28758 + C28757) * C1512 - (C29761 * C1509 + C29762 * C1511) +
              (C28760 + C28759) * C50788) *
                 C50885) *
                C50911) *
               C50975 +
           ((((C24890 + C24891) * C1511 + (C24892 + C24893) * C1509 -
              C29762 * C1512 - C29761 * C50788) *
                 C50991 +
             ((C24894 + C24895) * C1511 + (C24896 + C24897) * C1509 -
              (C26459 + C26458) * C1512 - (C26461 + C26460) * C50788) *
                 C50885) *
                C33829 +
            ((C29759 * C1511 + C29760 * C1509 - (C28757 + C28758) * C1512 -
              (C28759 + C28760) * C50788) *
                 C50991 +
             ((C26458 + C26459) * C1511 + (C26460 + C26461) * C1509 -
              (C49711 * C3212 + C50692 * C3217 + C49718 * C3211 +
               C50963 * C3214) *
                  C1512 -
              (C49711 * C3218 + C50692 * C3221 + C49718 * C3216 +
               C50963 * C3220) *
                  C50788) *
                 C50885) *
                C50911) *
               C50762) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C1744 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C51023 -
             (C27995 + C27996) * C1745 - (C27997 + C27998) * C51012 +
             (C28749 + C28750) * C1746 + (C28751 + C28752) * C1743) *
                C50991 +
            ((C24882 + C24883) * C1744 + (C24884 + C24885) * C51023 -
             C28525 * C1745 - C28526 * C51012 + C28955 * C1746 +
             C28956 * C1743) *
                C50885) *
               C33829 +
           (((C27996 + C27995) * C1744 + (C27998 + C27997) * C51023 -
             (C28750 + C28749) * C1745 - (C28752 + C28751) * C51012 +
             (C29110 + C29109) * C1746 + (C29112 + C29111) * C1743) *
                C50991 +
            (C28527 * C1744 + C28528 * C51023 - C28957 * C1745 -
             C28958 * C51012 + (C28967 + C28968) * C1746 +
             (C28969 + C28970) * C1743) *
                C50885) *
               C50911) *
              C50746 * C1275 +
          ((((C27999 + C28000) * C1745 -
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C51023 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C1744) +
             (C28001 + C28002) * C51012 - (C28753 + C28754) * C1746 -
             (C28755 + C28756) * C1743) *
                C50991 +
            (C29759 * C1745 -
             ((C24893 + C24892) * C51023 + (C24891 + C24890) * C1744) +
             C29760 * C51012 - (C28757 + C28758) * C1746 -
             (C28759 + C28760) * C1743) *
                C50885) *
               C33829 +
           (((C28754 + C28753) * C1745 -
             ((C28002 + C28001) * C51023 + (C28000 + C27999) * C1744) +
             (C28756 + C28755) * C51012 -
             (C49711 * C1056 + C50692 * C1060 + C49718 * C1057 +
              C50963 * C1061) *
                 C1746 -
             (C49711 * C1064 + C50692 * C1068 + C49718 * C1065 +
              C50963 * C1069) *
                 C1743) *
                C50991 +
            ((C28758 + C28757) * C1745 - (C29761 * C51023 + C29762 * C1744) +
             (C28760 + C28759) * C51012 -
             (C49711 * C6822 + C50692 * C6823 + C49718 * C3498 +
              C50963 * C3502) *
                 C1746 -
             (C49711 * C6824 + C50692 * C6825 + C49718 * C3504 +
              C50963 * C3510) *
                 C1743) *
                C50885) *
               C50911) *
              C50746 * C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C121 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50776) *
                C50991 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C50885) *
               C33829 +
           (((C27996 + C27995) * C121 + (C27998 + C27997) * C50776) * C50991 +
            (C28527 * C121 + C28528 * C50776) * C50885) *
               C50911) *
              C50746 * C113 -
          (((C29761 * C50776 + C29762 * C121) * C50885 +
            ((C28002 + C28001) * C50776 + (C28000 + C27999) * C121) * C50991) *
               C50911 +
           (((C24893 + C24892) * C50776 + (C24891 + C24890) * C121) * C50885 +
            ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                 C50776 +
             (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                 C121) *
                C50991) *
               C33829) *
              C50746 * C114 +
          ((((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                 C121 +
             (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                 C50776) *
                C50991 +
            ((C24898 + C24899) * C121 + (C24900 + C24901) * C50776) * C50885) *
               C33829 +
           (((C28004 + C28003) * C121 + (C28006 + C28005) * C50776) * C50991 +
            ((C27773 + C27774) * C121 + (C27775 + C27776) * C50776) * C50885) *
               C50911) *
              C50746 * C115 -
          ((((C49711 * C1409 + C50692 * C1410 + C49718 * C726 + C50963 * C738) *
                 C50776 +
             (C49711 * C1407 + C50692 * C1408 + C49718 * C714 + C50963 * C722) *
                 C121) *
                C50885 +
            ((C49711 * C394 + C50692 * C401 + C49718 * C389 + C50963 * C397) *
                 C50776 +
             (C49711 * C383 + C50692 * C393 + C49718 * C379 + C50963 * C385) *
                 C121) *
                C50991) *
               C50911 +
           (((C49711 * C268 + C50692 * C275 + C49718 * C259 + C50963 * C271) *
                 C50776 +
             (C49711 * C257 + C50692 * C267 + C49718 * C253 + C50963 * C263) *
                 C121) *
                C50885 +
            ((C49711 * C137 + C50692 * C147 + C49718 * C136 + C50963 * C146) *
                 C50776 +
             (C49711 * C126 + C50692 * C138 + C49718 * C125 + C50963 * C132) *
                 C121) *
                C50991) *
               C33829) *
              C50746 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                  C121 +
              (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                  C50776) *
                 C50991 +
             ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C50885) *
                C33829 +
            (((C27996 + C27995) * C121 + (C27998 + C27997) * C50776) * C50991 +
             (C28527 * C121 + C28528 * C50776) * C50885) *
                C50911) *
               C501 -
           (((C25533 * C50776 + C25532 * C121) * C50885 +
             (C28526 * C50776 + C28525 * C121) * C50991) *
                C50911 +
            (((C24889 + C24888) * C50776 + (C24887 + C24886) * C121) * C50885 +
             ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C50991) *
                C33829) *
               C502 +
           ((C25230 * C50991 +
             ((C25223 + C25222) * C121 + (C25221 + C25220) * C50776) * C50885) *
                C33829 +
            ((C28529 * C121 + C28530 * C50776) * C50991 +
             ((C25528 + C25529) * C121 + (C25530 + C25531) * C50776) * C50885) *
                C50911) *
               C503) *
              C50968 +
          (((((C24890 + C24891) * C121 + (C24892 + C24893) * C50776) * C50991 +
             ((C24894 + C24895) * C121 + (C24896 + C24897) * C50776) * C50885) *
                C33829 +
            ((C29759 * C121 + C29760 * C50776) * C50991 +
             ((C26458 + C26459) * C121 + (C26460 + C26461) * C50776) * C50885) *
                C50911) *
               C502 -
           (((C29761 * C50776 + C29762 * C121) * C50885 +
             ((C28002 + C28001) * C50776 + (C28000 + C27999) * C121) * C50991) *
                C50911 +
            (((C24893 + C24892) * C50776 + (C24891 + C24890) * C121) * C50885 +
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C50776 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C121) *
                 C50991) *
                C33829) *
               C501 -
           ((((C49711 * C4002 + C50692 * C4003 + C49718 * C3010 +
               C50963 * C3016) *
                  C50776 +
              (C49711 * C4000 + C50692 * C4001 + C49718 * C3004 +
               C50963 * C3008) *
                  C121) *
                 C50885 +
             ((C26461 + C26460) * C50776 + (C26459 + C26458) * C121) * C50991) *
                C50911 +
            (((C25227 + C25226) * C50776 + (C25225 + C25224) * C121) * C50885 +
             C25231 * C50991) *
                C33829) *
               C503) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                  C121 +
              (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                  C50776) *
                 C50991 +
             ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C50885) *
                C33829 +
            (((C27996 + C27995) * C121 + (C27998 + C27997) * C50776) * C50991 +
             (C28527 * C121 + C28528 * C50776) * C50885) *
                C50911) *
               C50975 -
           (((C25533 * C50776 + C25532 * C121) * C50885 +
             (C28526 * C50776 + C28525 * C121) * C50991) *
                C50911 +
            (((C24889 + C24888) * C50776 + (C24887 + C24886) * C121) * C50885 +
             ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C50991) *
                C33829) *
               C50762) *
              C250 +
          (((((C24890 + C24891) * C121 + (C24892 + C24893) * C50776) * C50991 +
             ((C24894 + C24895) * C121 + (C24896 + C24897) * C50776) * C50885) *
                C33829 +
            ((C29759 * C121 + C29760 * C50776) * C50991 +
             ((C26458 + C26459) * C121 + (C26460 + C26461) * C50776) * C50885) *
                C50911) *
               C50762 -
           (((C29761 * C50776 + C29762 * C121) * C50885 +
             ((C28002 + C28001) * C50776 + (C28000 + C27999) * C121) * C50991) *
                C50911 +
            (((C24893 + C24892) * C50776 + (C24891 + C24890) * C121) * C50885 +
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C50776 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C121) *
                 C50991) *
                C33829) *
               C50975) *
              C251 +
          (((((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                  C121 +
              (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                  C50776) *
                 C50991 +
             ((C24898 + C24899) * C121 + (C24900 + C24901) * C50776) * C50885) *
                C33829 +
            (((C28004 + C28003) * C121 + (C28006 + C28005) * C50776) * C50991 +
             ((C27773 + C27774) * C121 + (C27775 + C27776) * C50776) * C50885) *
                C50911) *
               C50975 -
           ((((C49711 * C731 + C50692 * C739 + C49718 * C732 + C50963 * C740) *
                  C50776 +
              (C49711 * C715 + C50692 * C727 + C49718 * C716 + C50963 * C728) *
                  C121) *
                 C50885 +
             ((C27776 + C27775) * C50776 + (C27774 + C27773) * C121) * C50991) *
                C50911 +
            (((C24905 + C24904) * C50776 + (C24903 + C24902) * C121) * C50885 +
             ((C24901 + C24900) * C50776 + (C24899 + C24898) * C121) * C50991) *
                C33829) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C121 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50776) *
                C50991 +
            ((C24882 + C24883) * C121 + (C24884 + C24885) * C50776) * C50885) *
               C33829 +
           (((C27996 + C27995) * C121 + (C27998 + C27997) * C50776) * C50991 +
            (C28527 * C121 + C28528 * C50776) * C50885) *
               C50911) *
              C592 -
          (((C25533 * C50776 + C25532 * C121) * C50885 +
            (C28526 * C50776 + C28525 * C121) * C50991) *
               C50911 +
           (((C24889 + C24888) * C50776 + (C24887 + C24886) * C121) * C50885 +
            ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C50991) *
               C33829) *
              C593 +
          ((C25230 * C50991 +
            ((C25223 + C25222) * C121 + (C25221 + C25220) * C50776) * C50885) *
               C33829 +
           ((C28529 * C121 + C28530 * C50776) * C50991 +
            ((C25528 + C25529) * C121 + (C25530 + C25531) * C50776) * C50885) *
               C50911) *
              C594 -
          ((((C49711 * C3013 + C50692 * C3017 + C49718 * C3014 +
              C50963 * C3018) *
                 C50776 +
             (C49711 * C3005 + C50692 * C3011 + C49718 * C3006 +
              C50963 * C3012) *
                 C121) *
                C50885 +
            ((C25531 + C25530) * C50776 + (C25529 + C25528) * C121) * C50991) *
               C50911 +
           (((C25345 + C25344) * C50776 + (C25343 + C25342) * C121) * C50885 +
            C25346 * C50991) *
               C33829) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C377 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50977 -
             (C27995 + C27996) * C378 - (C27997 + C27998) * C50788) *
                C50991 +
            ((C24882 + C24883) * C377 + (C24884 + C24885) * C50977 -
             C28525 * C378 - C28526 * C50788) *
                C50885) *
               C33829 +
           (((C27996 + C27995) * C377 + (C27998 + C27997) * C50977 -
             (C28750 + C28749) * C378 - (C28752 + C28751) * C50788) *
                C50991 +
            (C28527 * C377 + C28528 * C50977 - C28957 * C378 -
             C28958 * C50788) *
                C50885) *
               C50911) *
              C50746 * C250 +
          ((((C27999 + C28000) * C378 -
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C50977 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C377) +
             (C28001 + C28002) * C50788) *
                C50991 +
            (C29759 * C378 -
             ((C24893 + C24892) * C50977 + (C24891 + C24890) * C377) +
             C29760 * C50788) *
                C50885) *
               C33829 +
           (((C28754 + C28753) * C378 -
             ((C28002 + C28001) * C50977 + (C28000 + C27999) * C377) +
             (C28756 + C28755) * C50788) *
                C50991 +
            ((C28758 + C28757) * C378 - (C29761 * C50977 + C29762 * C377) +
             (C28760 + C28759) * C50788) *
                C50885) *
               C50911) *
              C50746 * C251 +
          ((((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                 C377 +
             (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                 C50977 -
             (C28003 + C28004) * C378 - (C28005 + C28006) * C50788) *
                C50991 +
            ((C24898 + C24899) * C377 + (C24900 + C24901) * C50977 -
             (C27774 + C27773) * C378 - (C27776 + C27775) * C50788) *
                C50885) *
               C33829 +
           (((C28004 + C28003) * C377 + (C28006 + C28005) * C50977 -
             (C49711 * C850 + C50692 * C855 + C49718 * C849 + C50963 * C854) *
                 C378 -
             (C49711 * C859 + C50692 * C865 + C49718 * C858 + C50963 * C864) *
                 C50788) *
                C50991 +
            ((C27773 + C27774) * C377 + (C27775 + C27776) * C50977 -
             (C49711 * C965 + C50692 * C969 + C49718 * C966 + C50963 * C970) *
                 C378 -
             (C49711 * C973 + C50692 * C977 + C49718 * C974 + C50963 * C978) *
                 C50788) *
                C50885) *
               C50911) *
              C50746 * C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C377 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50977 -
             (C27995 + C27996) * C378 - (C27997 + C27998) * C50788) *
                C50991 +
            ((C24882 + C24883) * C377 + (C24884 + C24885) * C50977 -
             C28525 * C378 - C28526 * C50788) *
                C50885) *
               C33829 +
           (((C27996 + C27995) * C377 + (C27998 + C27997) * C50977 -
             (C28750 + C28749) * C378 - (C28752 + C28751) * C50788) *
                C50991 +
            (C28527 * C377 + C28528 * C50977 - C28957 * C378 -
             C28958 * C50788) *
                C50885) *
               C50911) *
              C501 +
          (((C28527 * C378 -
             ((C24885 + C24884) * C50977 + (C24883 + C24882) * C377) +
             C28528 * C50788) *
                C50991 +
            (C28529 * C378 -
             ((C24889 + C24888) * C50977 + (C24887 + C24886) * C377) +
             C28530 * C50788) *
                C50885) *
               C33829 +
           ((C28955 * C378 - (C28526 * C50977 + C28525 * C377) +
             C28956 * C50788) *
                C50991 +
            ((C25850 + C25851) * C378 - (C25533 * C50977 + C25532 * C377) +
             (C25852 + C25853) * C50788) *
                C50885) *
               C50911) *
              C502 +
          ((C25537 * C50991 +
            ((C25223 + C25222) * C377 + (C25221 + C25220) * C50977 -
             (C25529 + C25528) * C378 - (C25531 + C25530) * C50788) *
                C50885) *
               C33829 +
           ((C28529 * C377 + C28530 * C50977 - (C25851 + C25850) * C378 -
             (C25853 + C25852) * C50788) *
                C50991 +
            ((C25528 + C25529) * C377 + (C25530 + C25531) * C50977 -
             (C49711 * C3368 + C50692 * C3370 + C49718 * C3369 +
              C50963 * C3371) *
                 C378 -
             (C49711 * C3372 + C50692 * C3374 + C49718 * C3373 +
              C50963 * C3375) *
                 C50788) *
                C50885) *
               C50911) *
              C503) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C50991 +
             (C19921 + C19922) * C50885) *
                C51026 +
            ((C22193 * C121 + C22194 * C50776) * C50991 +
             (C21993 + C21994) * C50885) *
                C51027 +
            ((C22195 * C121 + C22196 * C50776) * C50991 +
             (C21995 + C21996) * C50885) *
                C44479) *
               C1169 -
           (((C22351 + C22352) * C50885 + (C21996 + C21995) * C50991) * C44479 +
            ((C22353 + C22354) * C50885 + (C21994 + C21993) * C50991) * C51027 +
            ((C19924 + C19923) * C50885 + (C19922 + C19921) * C50991) *
                C51026) *
               C50762) *
              C51021 +
          ((((C19927 + C19928) * C50991 + (C19929 + C19930) * C50885) * C51026 +
            ((C21997 + C21998) * C50991 + (C22355 + C22356) * C50885) * C51027 +
            ((C22017 + C22018) * C50991 + (C22363 + C22364) * C50885) *
                C44479) *
               C50762 -
           (((C22018 + C22017) * C50885 +
             (C22200 * C50776 + C22199 * C121) * C50991) *
                C44479 +
            ((C21998 + C21997) * C50885 +
             (C22198 * C50776 + C22197 * C121) * C50991) *
                C51027 +
            ((C19928 + C19927) * C50885 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C50991) *
                C51026) *
               C1169) *
              C51006 +
          (((((C19767 * C124 + C50687 * C131) * C121 +
              (C19767 * C135 + C50687 * C145) * C50776) *
                 C50991 +
             (C19933 + C19934) * C50885) *
                C51026 +
            ((C22201 * C121 + C22202 * C50776) * C50991 +
             (C22019 + C22020) * C50885) *
                C51027 +
            ((C22203 * C121 + C22204 * C50776) * C50991 +
             (C22021 + C22022) * C50885) *
                C44479) *
               C1169 -
           ((((C19767 * C3218 + C50687 * C3221) * C50776 +
              (C19767 * C3212 + C50687 * C3217) * C121) *
                 C50885 +
             (C22022 + C22021) * C50991) *
                C44479 +
            ((C31306 + C31305) * C50885 + (C22020 + C22019) * C50991) * C51027 +
            ((C19936 + C19935) * C50885 + (C19934 + C19933) * C50991) *
                C51026) *
               C50762) *
              C1173)) /
        (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C50991 +
             (C19921 + C19922) * C50885) *
                C51026 +
            ((C22193 * C121 + C22194 * C50776) * C50991 +
             (C21993 + C21994) * C50885) *
                C51027 +
            ((C22195 * C121 + C22196 * C50776) * C50991 +
             (C21995 + C21996) * C50885) *
                C44479) *
               C51022 -
           (((C22351 + C22352) * C50885 + (C21996 + C21995) * C50991) * C44479 +
            ((C22353 + C22354) * C50885 + (C21994 + C21993) * C50991) * C51027 +
            ((C19924 + C19923) * C50885 + (C19922 + C19921) * C50991) *
                C51026) *
               C51009 +
           ((C20135 * C50991 + C20136 * C50885) * C51026 +
            (C31599 * C50991 + (C22463 + C22464) * C50885) * C51027 +
            ((C22352 + C22351) * C50991 + (C22465 + C22466) * C50885) *
                C44479) *
               C1274) *
              C1275 +
          ((((C19927 + C19928) * C50991 + (C19929 + C19930) * C50885) * C51026 +
            ((C21997 + C21998) * C50991 + (C22355 + C22356) * C50885) * C51027 +
            ((C22017 + C22018) * C50991 + (C22363 + C22364) * C50885) *
                C44479) *
               C51009 -
           (((C22018 + C22017) * C50885 +
             (C22200 * C50776 + C22199 * C121) * C50991) *
                C44479 +
            ((C21998 + C21997) * C50885 +
             (C22198 * C50776 + C22197 * C121) * C50991) *
                C51027 +
            ((C19928 + C19927) * C50885 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C50991) *
                C51026) *
               C51022 -
           ((((C19767 * C3372 + C50687 * C3374) * C50776 +
              (C19767 * C3368 + C50687 * C3370) * C121) *
                 C50885 +
             (C22364 + C22363) * C50991) *
                C44479 +
            ((C31601 + C31600) * C50885 + C31602 * C50991) * C51027 +
            (C20145 * C50885 + C20146 * C50991) * C51026) *
               C1274) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[167] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19767 * C122 + C50687 * C129) * C377 +
                       (C19767 * C133 + C50687 * C143) * C50977 -
                       C22193 * C378 - C22194 * C50788) *
                          C50991 +
                      (C20337 + C20338 - C20371 - C20372) * C50885) *
                         C51026 +
                     ((C22193 * C377 + C22194 * C50977 - C22195 * C378 -
                       C22196 * C50788) *
                          C50991 +
                      (C22613 + C22614 - C22615 - C22616) * C50885) *
                         C51027 +
                     ((C22195 * C377 + C22196 * C50977 - C22799 * C378 -
                       C22800 * C50788) *
                          C50991 +
                      (C22617 + C22618 - C22637 - C22638) * C50885) *
                         C44479) *
                        C1169 +
                    (((C20371 - (C20338 + C20337) + C20372) * C50991 +
                      (C20373 - (C20344 + C20343) + C20374) * C50885) *
                         C51026 +
                     ((C22615 - (C22614 + C22613) + C22616) * C50991 +
                      (C22623 - (C22624 + C22625) + C22626) * C50885) *
                         C51027 +
                     ((C22637 - (C22618 + C22617) + C22638) * C50991 +
                      (C22639 - (C22629 + C22630) + C22640) * C50885) *
                         C44479) *
                        C50762) *
                       C1275 +
                   ((((C22197 * C378 -
                       ((C19767 * C134 + C50687 * C144) * C50977 +
                        (C19767 * C123 + C50687 * C130) * C377) +
                       C22198 * C50788) *
                          C50991 +
                      (C21039 - (C21017 + C21018) + C21040) * C50885) *
                         C51026 +
                     ((C22199 * C378 - (C22198 * C50977 + C22197 * C377) +
                       C22200 * C50788) *
                          C50991 +
                      (C23567 - (C23568 + C23569) + C23570) * C50885) *
                         C51027 +
                     ((C22801 * C378 - (C22200 * C50977 + C22199 * C377) +
                       C22802 * C50788) *
                          C50991 +
                      (C23571 - (C23572 + C23573) + C23574) * C50885) *
                         C44479) *
                        C1169 +
                    (((C21018 + C21017 - C21039 - C21040) * C50991 +
                      (C21024 + C21023 - C21041 - C21042) * C50885) *
                         C51026 +
                     ((C23569 + C23568 - C23567 - C23570) * C50991 +
                      (C32741 + C32740 - C32739 - C32742) * C50885) *
                         C51027 +
                     ((C23573 + C23572 - C23571 - C23574) * C50991 +
                      (C22361 * C377 + C22362 * C50977 -
                       (C19767 * C3500 + C50687 * C3506) * C378 -
                       (C19767 * C3508 + C50687 * C3512) * C50788) *
                          C50885) *
                         C44479) *
                        C50762) *
                       C50719)) /
                 (p * q * std::sqrt(p + q));
    d2ee[168] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19767 * C122 + C50687 * C129) * C1511 +
                       (C19767 * C133 + C50687 * C143) * C1509 -
                       C22193 * C1512 - C22194 * C50788) *
                          C50991 +
                      (C21273 + C21274 - C21275 - C21276) * C50885) *
                         C51026 +
                     ((C22193 * C1511 + C22194 * C1509 - C22195 * C1512 -
                       C22196 * C50788) *
                          C50991 +
                      (C23915 + C23916 - C23917 - C23918) * C50885) *
                         C51027 +
                     ((C22195 * C1511 + C22196 * C1509 - C22799 * C1512 -
                       C22800 * C50788) *
                          C50991 +
                      (C23919 + C23920 - C23921 - C23922) * C50885) *
                         C44479) *
                        C1169 +
                    (((C21275 - (C21274 + C21273) + C21276) * C50991 +
                      (C21279 - (C21278 + C21277) + C21280) * C50885) *
                         C51026 +
                     ((C23917 - (C23916 + C23915) + C23918) * C50991 +
                      (C24417 - (C24418 + C24419) + C24420) * C50885) *
                         C51027 +
                     ((C23921 - (C23920 + C23919) + C23922) * C50991 +
                      (C24421 - (C24422 + C24423) + C24424) * C50885) *
                         C44479) *
                        C50762) *
                       C50968 +
                   ((((C22197 * C1512 -
                       ((C19767 * C134 + C50687 * C144) * C1509 +
                        (C19767 * C123 + C50687 * C130) * C1511) +
                       C22198 * C50788) *
                          C50991 +
                      (C21285 - (C21286 + C21287) + C21288) * C50885) *
                         C51026 +
                     ((C22199 * C1512 - (C22198 * C1509 + C22197 * C1511) +
                       C22200 * C50788) *
                          C50991 +
                      (C23923 - (C23924 + C23925) + C23926) * C50885) *
                         C51027 +
                     ((C22801 * C1512 - (C22200 * C1509 + C22199 * C1511) +
                       C22802 * C50788) *
                          C50991 +
                      (C23927 - (C23928 + C23929) + C23930) * C50885) *
                         C44479) *
                        C1169 +
                    (((C21287 + C21286 - C21285 - C21288) * C50991 +
                      (C21291 + C21290 - C21289 - C21292) * C50885) *
                         C51026 +
                     ((C23925 + C23924 - C23923 - C23926) * C50991 +
                      (C33085 + C33084 - C33083 - C33086) * C50885) *
                         C51027 +
                     ((C23929 + C23928 - C23927 - C23930) * C50991 +
                      (C22361 * C1511 + C22362 * C1509 -
                       (C19767 * C3500 + C50687 * C3506) * C1512 -
                       (C19767 * C3508 + C50687 * C3512) * C50788) *
                          C50885) *
                         C44479) *
                        C50762) *
                       C50719)) /
                 (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C1511 +
             (C19767 * C133 + C50687 * C143) * C1509 - C22193 * C1512 -
             C22194 * C50788) *
                C50991 +
            (C21273 + C21274 - C21275 - C21276) * C50885) *
               C51026 +
           ((C22193 * C1511 + C22194 * C1509 - C22195 * C1512 -
             C22196 * C50788) *
                C50991 +
            (C23915 + C23916 - C23917 - C23918) * C50885) *
               C51027 +
           ((C22195 * C1511 + C22196 * C1509 - C22799 * C1512 -
             C22800 * C50788) *
                C50991 +
            (C23919 + C23920 - C23921 - C23922) * C50885) *
               C44479) *
              C51022 +
          (((C21275 - (C21274 + C21273) + C21276) * C50991 +
            (C21279 - (C21278 + C21277) + C21280) * C50885) *
               C51026 +
           ((C23917 - (C23916 + C23915) + C23918) * C50991 +
            (C24417 - (C24418 + C24419) + C24420) * C50885) *
               C51027 +
           ((C23921 - (C23920 + C23919) + C23922) * C50991 +
            (C24421 - (C24422 + C24423) + C24424) * C50885) *
               C44479) *
              C51009 +
          ((C21631 * C50991 + C21632 * C50885) * C51026 +
           (C33579 * C50991 + (C33576 + C33575 - C33574 - C33577) * C50885) *
               C51027 +
           ((C24423 + C24422 - C24421 - C24424) * C50991 +
            (C20611 * C1511 + C20612 * C1509 -
             (C19767 * C20684 + C50687 * C20685) * C1512 -
             (C19767 * C20686 + C50687 * C20687) * C50788) *
                C50885) *
               C44479) *
              C1274) *
         C50714) /
        (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C1744 +
             (C19767 * C133 + C50687 * C143) * C51023 - C22193 * C1745 -
             C22194 * C51012 + C22195 * C1746 + C22196 * C1743) *
                C50991 +
            (C21731 + C21732 - C21733 - C21734 + C21735 + C21736) * C50885) *
               C51026 +
           ((C22193 * C1744 + C22194 * C51023 - C22195 * C1745 -
             C22196 * C51012 + C22799 * C1746 + C22800 * C1743) *
                C50991 +
            (C24571 + C24572 - C24573 - C24574 + C24575 + C24576) * C50885) *
               C51027 +
           ((C22195 * C1744 + C22196 * C51023 - C22799 * C1745 -
             C22800 * C51012 + C23079 * C1746 + C23080 * C1743) *
                C50991 +
            (C24577 + C24578 - C24579 - C24580 + C24581 + C24582) * C50885) *
               C44479) *
              C1169 +
          (((C21733 - (C21732 + C21731) + C21734 - C21735 - C21736) * C50991 +
            (C21739 - (C21738 + C21737) + C21740 - C21741 - C21742) * C50885) *
               C51026 +
           ((C24573 - (C24572 + C24571) + C24574 - C24575 - C24576) * C50991 +
            (C33728 - (C33727 + C33726) + C33729 - C33730 - C33731) * C50885) *
               C51027 +
           ((C24579 - (C24578 + C24577) + C24580 - C24581 - C24582) * C50991 +
            (C22635 * C1745 - (C20610 * C51023 + C20609 * C1744) +
             C22636 * C51012 - (C19767 * C22950 + C50687 * C22951) * C1746 -
             (C19767 * C22952 + C50687 * C22953) * C1743) *
                C50885) *
               C44479) *
              C50762) *
         C50714) /
        (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C50991 +
             (C19921 + C19922) * C50885) *
                C51026 +
            ((C22193 * C121 + C22194 * C50776) * C50991 +
             (C21993 + C21994) * C50885) *
                C51027 +
            ((C22195 * C121 + C22196 * C50776) * C50991 +
             (C21995 + C21996) * C50885) *
                C44479) *
               C501 -
           (((C22351 + C22352) * C50885 + (C21996 + C21995) * C50991) * C44479 +
            ((C22353 + C22354) * C50885 + (C21994 + C21993) * C50991) * C51027 +
            ((C19924 + C19923) * C50885 + (C19922 + C19921) * C50991) *
                C51026) *
               C502 +
           ((C20135 * C50991 + C20136 * C50885) * C51026 +
            (C31599 * C50991 + (C22463 + C22464) * C50885) * C51027 +
            ((C22352 + C22351) * C50991 + (C22465 + C22466) * C50885) *
                C44479) *
               C503) *
              C50968 +
          ((((C19927 + C19928) * C50991 + (C19929 + C19930) * C50885) * C51026 +
            ((C21997 + C21998) * C50991 + (C22355 + C22356) * C50885) * C51027 +
            ((C22017 + C22018) * C50991 + (C22363 + C22364) * C50885) *
                C44479) *
               C502 -
           (((C22018 + C22017) * C50885 +
             (C22200 * C50776 + C22199 * C121) * C50991) *
                C44479 +
            ((C21998 + C21997) * C50885 +
             (C22198 * C50776 + C22197 * C121) * C50991) *
                C51027 +
            ((C19928 + C19927) * C50885 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C50991) *
                C51026) *
               C501 -
           ((((C19767 * C3372 + C50687 * C3374) * C50776 +
              (C19767 * C3368 + C50687 * C3370) * C121) *
                 C50885 +
             (C22364 + C22363) * C50991) *
                C44479 +
            ((C31601 + C31600) * C50885 + C31602 * C50991) * C51027 +
            (C20145 * C50885 + C20146 * C50991) * C51026) *
               C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C50991 +
            (C19921 + C19922) * C50885) *
               C51026 +
           ((C22193 * C121 + C22194 * C50776) * C50991 +
            (C21993 + C21994) * C50885) *
               C51027 +
           ((C22195 * C121 + C22196 * C50776) * C50991 +
            (C21995 + C21996) * C50885) *
               C44479) *
              C50746 * C113 -
          (((C22018 + C22017) * C50885 +
            (C22200 * C50776 + C22199 * C121) * C50991) *
               C44479 +
           ((C21998 + C21997) * C50885 +
            (C22198 * C50776 + C22197 * C121) * C50991) *
               C51027 +
           ((C19928 + C19927) * C50885 +
            ((C19767 * C134 + C50687 * C144) * C50776 +
             (C19767 * C123 + C50687 * C130) * C121) *
                C50991) *
               C51026) *
              C50746 * C114 +
          ((((C19767 * C124 + C50687 * C131) * C121 +
             (C19767 * C135 + C50687 * C145) * C50776) *
                C50991 +
            (C19933 + C19934) * C50885) *
               C51026 +
           ((C22201 * C121 + C22202 * C50776) * C50991 +
            (C22019 + C22020) * C50885) *
               C51027 +
           ((C22203 * C121 + C22204 * C50776) * C50991 +
            (C22021 + C22022) * C50885) *
               C44479) *
              C50746 * C115 -
          ((((C19767 * C973 + C50687 * C977) * C50776 +
             (C19767 * C965 + C50687 * C969) * C121) *
                C50885 +
            ((C19767 * C859 + C50687 * C865) * C50776 +
             (C19767 * C850 + C50687 * C855) * C121) *
                C50991) *
               C44479 +
           (((C19767 * C726 + C50687 * C738) * C50776 +
             (C19767 * C714 + C50687 * C722) * C121) *
                C50885 +
            ((C19767 * C389 + C50687 * C397) * C50776 +
             (C19767 * C379 + C50687 * C385) * C121) *
                C50991) *
               C51027 +
           (((C19767 * C259 + C50687 * C271) * C50776 +
             (C19767 * C253 + C50687 * C263) * C121) *
                C50885 +
            ((C19767 * C136 + C50687 * C146) * C50776 +
             (C19767 * C125 + C50687 * C132) * C121) *
                C50991) *
               C51026) *
              C50746 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C844 +
             (C19767 * C133 + C50687 * C143) * C841 - C22193 * C845 -
             C22194 * C842 + C22195 * C846 + C22196 * C843) *
                C50991 +
            (C20583 + C20584 - C20585 - C20586 + C20613 + C20614) * C50885) *
               C51026 +
           ((C22193 * C844 + C22194 * C841 - C22195 * C845 - C22196 * C842 +
             C22799 * C846 + C22800 * C843) *
                C50991 +
            (C22955 + C22956 - C22957 - C22958 + C22959 + C22960) * C50885) *
               C51027 +
           ((C22195 * C844 + C22196 * C841 - C22799 * C845 - C22800 * C842 +
             C23079 * C846 + C23080 * C843) *
                C50991 +
            (C22961 + C22962 - C22963 - C22964 + C22971 + C22972) * C50885) *
               C44479) *
              C50746 * C50968 +
          (((C22197 * C845 -
             ((C19767 * C134 + C50687 * C144) * C841 +
              (C19767 * C123 + C50687 * C130) * C844) +
             C22198 * C842 - C22199 * C846 - C22200 * C843) *
                C50991 +
            (C21033 * C845 - (C19910 * C841 + C19909 * C844) + C21034 * C842 -
             C22011 * C846 - C22012 * C843) *
                C50885) *
               C51026 +
           ((C22199 * C845 - (C22198 * C841 + C22197 * C844) + C22200 * C842 -
             C22801 * C846 - C22802 * C843) *
                C50991 +
            (C22011 * C845 - (C21034 * C841 + C21033 * C844) + C22012 * C842 -
             C22803 * C846 - C22804 * C843) *
                C50885) *
               C51027 +
           ((C22801 * C845 - (C22200 * C841 + C22199 * C844) + C22802 * C842 -
             C39734 * C846 - C39735 * C843) *
                C50991 +
            (C22803 * C845 - (C22012 * C841 + C22011 * C844) + C22804 * C842 -
             (C19767 * C6194 + C50687 * C6196) * C846 -
             (C19767 * C6198 + C50687 * C6200) * C843) *
                C50885) *
               C44479) *
              C50746 * C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C50991 +
            (C19921 + C19922) * C50885) *
               C51026 +
           ((C22193 * C121 + C22194 * C50776) * C50991 +
            (C21993 + C21994) * C50885) *
               C51027 +
           ((C22195 * C121 + C22196 * C50776) * C50991 +
            (C21995 + C21996) * C50885) *
               C44479) *
              C592 -
          (((C22351 + C22352) * C50885 + (C21996 + C21995) * C50991) * C44479 +
           ((C22353 + C22354) * C50885 + (C21994 + C21993) * C50991) * C51027 +
           ((C19924 + C19923) * C50885 + (C19922 + C19921) * C50991) * C51026) *
              C593 +
          ((C20135 * C50991 + C20136 * C50885) * C51026 +
           (C31599 * C50991 + (C22463 + C22464) * C50885) * C51027 +
           ((C22352 + C22351) * C50991 + (C22465 + C22466) * C50885) * C44479) *
              C594 -
          ((((C19767 * C20580 + C50687 * C20581) * C50776 +
             (C19767 * C20578 + C50687 * C20579) * C121) *
                C50885 +
            (C22466 + C22465) * C50991) *
               C44479 +
           ((C31703 + C31702) * C50885 + C31701 * C50991) * C51027 +
           (C20225 * C50885 + C20226 * C50991) * C51026) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C50991 +
             (C19921 + C19922) * C50885) *
                C51026 +
            ((C22193 * C121 + C22194 * C50776) * C50991 +
             (C21993 + C21994) * C50885) *
                C51027 +
            ((C22195 * C121 + C22196 * C50776) * C50991 +
             (C21995 + C21996) * C50885) *
                C44479) *
               C50975 -
           (((C22351 + C22352) * C50885 + (C21996 + C21995) * C50991) * C44479 +
            ((C22353 + C22354) * C50885 + (C21994 + C21993) * C50991) * C51027 +
            ((C19924 + C19923) * C50885 + (C19922 + C19921) * C50991) *
                C51026) *
               C50762) *
              C250 +
          ((((C19927 + C19928) * C50991 + (C19929 + C19930) * C50885) * C51026 +
            ((C21997 + C21998) * C50991 + (C22355 + C22356) * C50885) * C51027 +
            ((C22017 + C22018) * C50991 + (C22363 + C22364) * C50885) *
                C44479) *
               C50762 -
           (((C22018 + C22017) * C50885 +
             (C22200 * C50776 + C22199 * C121) * C50991) *
                C44479 +
            ((C21998 + C21997) * C50885 +
             (C22198 * C50776 + C22197 * C121) * C50991) *
                C51027 +
            ((C19928 + C19927) * C50885 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C50991) *
                C51026) *
               C50975) *
              C251 +
          (((((C19767 * C124 + C50687 * C131) * C121 +
              (C19767 * C135 + C50687 * C145) * C50776) *
                 C50991 +
             (C19933 + C19934) * C50885) *
                C51026 +
            ((C22201 * C121 + C22202 * C50776) * C50991 +
             (C22019 + C22020) * C50885) *
                C51027 +
            ((C22203 * C121 + C22204 * C50776) * C50991 +
             (C22021 + C22022) * C50885) *
                C44479) *
               C50975 -
           ((((C19767 * C3218 + C50687 * C3221) * C50776 +
              (C19767 * C3212 + C50687 * C3217) * C121) *
                 C50885 +
             (C22022 + C22021) * C50991) *
                C44479 +
            ((C31306 + C31305) * C50885 + (C22020 + C22019) * C50991) * C51027 +
            ((C19936 + C19935) * C50885 + (C19934 + C19933) * C50991) *
                C51026) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C844 +
             (C19767 * C133 + C50687 * C143) * C841 - C22193 * C845 -
             C22194 * C842 + C22195 * C846 + C22196 * C843) *
                C50991 +
            (C20583 + C20584 - C20585 - C20586 + C20613 + C20614) * C50885) *
               C51026 +
           ((C22193 * C844 + C22194 * C841 - C22195 * C845 - C22196 * C842 +
             C22799 * C846 + C22800 * C843) *
                C50991 +
            (C22955 + C22956 - C22957 - C22958 + C22959 + C22960) * C50885) *
               C51027 +
           ((C22195 * C844 + C22196 * C841 - C22799 * C845 - C22800 * C842 +
             C23079 * C846 + C23080 * C843) *
                C50991 +
            (C22961 + C22962 - C22963 - C22964 + C22971 + C22972) * C50885) *
               C44479) *
              C50975 +
          (((C20585 - (C20584 + C20583) + C20586 - C20613 - C20614) * C50991 +
            (C20593 - (C20592 + C20591) + C20594 - C20615 - C20616) * C50885) *
               C51026 +
           ((C22957 - (C22956 + C22955) + C22958 - C22959 - C22960) * C50991 +
            (C32151 - (C32150 + C32149) + C32152 - C32153 - C32154) * C50885) *
               C51027 +
           ((C22963 - (C22962 + C22961) + C22964 - C22971 - C22972) * C50991 +
            (C22635 * C845 - (C20610 * C841 + C20609 * C844) + C22636 * C842 -
             (C19767 * C22950 + C50687 * C22951) * C846 -
             (C19767 * C22952 + C50687 * C22953) * C843) *
                C50885) *
               C44479) *
              C50762) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C377 +
             (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
             C22194 * C50788) *
                C50991 +
            (C20337 + C20338 - C20371 - C20372) * C50885) *
               C51026 +
           ((C22193 * C377 + C22194 * C50977 - C22195 * C378 -
             C22196 * C50788) *
                C50991 +
            (C22613 + C22614 - C22615 - C22616) * C50885) *
               C51027 +
           ((C22195 * C377 + C22196 * C50977 - C22799 * C378 -
             C22800 * C50788) *
                C50991 +
            (C22617 + C22618 - C22637 - C22638) * C50885) *
               C44479) *
              C501 +
          (((C20371 - (C20338 + C20337) + C20372) * C50991 +
            (C20373 - (C20344 + C20343) + C20374) * C50885) *
               C51026 +
           ((C22615 - (C22614 + C22613) + C22616) * C50991 +
            (C22623 - (C22624 + C22625) + C22626) * C50885) *
               C51027 +
           ((C22637 - (C22618 + C22617) + C22638) * C50991 +
            (C22639 - (C22629 + C22630) + C22640) * C50885) *
               C44479) *
              C502 +
          ((C20381 * C50991 + C20382 * C50885) * C51026 +
           (C31856 * C50991 + (C31853 + C31852 - C31851 - C31854) * C50885) *
               C51027 +
           ((C22630 + C22629 - C22639 - C22640) * C50991 +
            (C20611 * C377 + C20612 * C50977 -
             (C19767 * C20684 + C50687 * C20685) * C378 -
             (C19767 * C20686 + C50687 * C20687) * C50788) *
                C50885) *
               C44479) *
              C503) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C377 +
             (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
             C22194 * C50788) *
                C50991 +
            (C20337 + C20338 - C20371 - C20372) * C50885) *
               C51026 +
           ((C22193 * C377 + C22194 * C50977 - C22195 * C378 -
             C22196 * C50788) *
                C50991 +
            (C22613 + C22614 - C22615 - C22616) * C50885) *
               C51027 +
           ((C22195 * C377 + C22196 * C50977 - C22799 * C378 -
             C22800 * C50788) *
                C50991 +
            (C22617 + C22618 - C22637 - C22638) * C50885) *
               C44479) *
              C50746 * C250 +
          (((C22197 * C378 -
             ((C19767 * C134 + C50687 * C144) * C50977 +
              (C19767 * C123 + C50687 * C130) * C377) +
             C22198 * C50788) *
                C50991 +
            (C21039 - (C21017 + C21018) + C21040) * C50885) *
               C51026 +
           ((C22199 * C378 - (C22198 * C50977 + C22197 * C377) +
             C22200 * C50788) *
                C50991 +
            (C23567 - (C23568 + C23569) + C23570) * C50885) *
               C51027 +
           ((C22801 * C378 - (C22200 * C50977 + C22199 * C377) +
             C22802 * C50788) *
                C50991 +
            (C23571 - (C23572 + C23573) + C23574) * C50885) *
               C44479) *
              C50746 * C251 +
          ((((C19767 * C124 + C50687 * C131) * C377 +
             (C19767 * C135 + C50687 * C145) * C50977 - C22201 * C378 -
             C22202 * C50788) *
                C50991 +
            (C19915 * C377 + C19916 * C50977 - C22013 * C378 -
             C22014 * C50788) *
                C50885) *
               C51026 +
           ((C22201 * C377 + C22202 * C50977 - C22203 * C378 -
             C22204 * C50788) *
                C50991 +
            (C22013 * C377 + C22014 * C50977 - C22015 * C378 -
             C22016 * C50788) *
                C50885) *
               C51027 +
           ((C22203 * C377 + C22204 * C50977 - C39368 * C378 -
             C39369 * C50788) *
                C50991 +
            (C22015 * C377 + C22016 * C50977 -
             (C19767 * C6822 + C50687 * C6823) * C378 -
             (C19767 * C6824 + C50687 * C6825) * C50788) *
                C50885) *
               C44479) *
              C50746 * C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C1051 +
            (C19767 * C133 + C50687 * C143) * C1047 - C22193 * C1052 -
            C22194 * C1048 + C22195 * C1053 + C22196 * C1049 - C22799 * C1054 -
            C22800 * C1050) *
               C50991 +
           (C19903 * C1051 + C19904 * C1047 - C20361 * C1052 - C20362 * C1048 +
            C20607 * C1053 + C20608 * C1049 - C22633 * C1054 - C22634 * C1050) *
               C50885) *
              C51026 +
          ((C22193 * C1051 + C22194 * C1047 - C22195 * C1052 - C22196 * C1048 +
            C22799 * C1053 + C22800 * C1049 - C23079 * C1054 - C23080 * C1050) *
               C50991 +
           (C20361 * C1051 + C20362 * C1047 - C20607 * C1052 - C20608 * C1048 +
            C22633 * C1053 + C22634 * C1049 - C22969 * C1054 - C22970 * C1050) *
               C50885) *
              C51027 +
          ((C22195 * C1051 + C22196 * C1047 - C22799 * C1052 - C22800 * C1048 +
            C23079 * C1053 + C23080 * C1049 - C39908 * C1054 - C39909 * C1050) *
               C50991 +
           (C20607 * C1051 + C20608 * C1047 - C22633 * C1052 - C22634 * C1048 +
            C22969 * C1053 + C22970 * C1049 -
            (C19767 * C23070 + C50687 * C23071) * C1054 -
            (C19767 * C23072 + C50687 * C23073) * C1050) *
               C50885) *
              C44479) *
         C50746 * C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[174] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C19767 * C122 + C50687 * C129) * C1511 +
                      (C19767 * C133 + C50687 * C143) * C1509 - C22193 * C1512 -
                      C22194 * C50788) *
                         C50991 +
                     (C21273 + C21274 - C21275 - C21276) * C50885) *
                        C51026 +
                    ((C22193 * C1511 + C22194 * C1509 - C22195 * C1512 -
                      C22196 * C50788) *
                         C50991 +
                     (C23915 + C23916 - C23917 - C23918) * C50885) *
                        C51027 +
                    ((C22195 * C1511 + C22196 * C1509 - C22799 * C1512 -
                      C22800 * C50788) *
                         C50991 +
                     (C23919 + C23920 - C23921 - C23922) * C50885) *
                        C44479) *
                       C50746 * C51021 +
                   (((C22197 * C1512 -
                      ((C19767 * C134 + C50687 * C144) * C1509 +
                       (C19767 * C123 + C50687 * C130) * C1511) +
                      C22198 * C50788) *
                         C50991 +
                     (C21285 - (C21286 + C21287) + C21288) * C50885) *
                        C51026 +
                    ((C22199 * C1512 - (C22198 * C1509 + C22197 * C1511) +
                      C22200 * C50788) *
                         C50991 +
                     (C23923 - (C23924 + C23925) + C23926) * C50885) *
                        C51027 +
                    ((C22801 * C1512 - (C22200 * C1509 + C22199 * C1511) +
                      C22802 * C50788) *
                         C50991 +
                     (C23927 - (C23928 + C23929) + C23930) * C50885) *
                        C44479) *
                       C50746 * C51006 +
                   ((((C19767 * C124 + C50687 * C131) * C1511 +
                      (C19767 * C135 + C50687 * C145) * C1509 - C22201 * C1512 -
                      C22202 * C50788) *
                         C50991 +
                     (C19915 * C1511 + C19916 * C1509 - C22013 * C1512 -
                      C22014 * C50788) *
                         C50885) *
                        C51026 +
                    ((C22201 * C1511 + C22202 * C1509 - C22203 * C1512 -
                      C22204 * C50788) *
                         C50991 +
                     (C22013 * C1511 + C22014 * C1509 - C22015 * C1512 -
                      C22016 * C50788) *
                         C50885) *
                        C51027 +
                    ((C22203 * C1511 + C22204 * C1509 - C39368 * C1512 -
                      C39369 * C50788) *
                         C50991 +
                     (C22015 * C1511 + C22016 * C1509 -
                      (C19767 * C6822 + C50687 * C6823) * C1512 -
                      (C19767 * C6824 + C50687 * C6825) * C50788) *
                         C50885) *
                        C44479) *
                       C50746 * C1173)) /
                 (p * q * std::sqrt(p + q));
    d2ee[175] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19767 * C122 + C50687 * C129) * C1511 +
                       (C19767 * C133 + C50687 * C143) * C1509 -
                       C22193 * C1512 - C22194 * C50788) *
                          C50991 +
                      (C21273 + C21274 - C21275 - C21276) * C50885) *
                         C51026 +
                     ((C22193 * C1511 + C22194 * C1509 - C22195 * C1512 -
                       C22196 * C50788) *
                          C50991 +
                      (C23915 + C23916 - C23917 - C23918) * C50885) *
                         C51027 +
                     ((C22195 * C1511 + C22196 * C1509 - C22799 * C1512 -
                       C22800 * C50788) *
                          C50991 +
                      (C23919 + C23920 - C23921 - C23922) * C50885) *
                         C44479) *
                        C50975 +
                    (((C21275 - (C21274 + C21273) + C21276) * C50991 +
                      (C21279 - (C21278 + C21277) + C21280) * C50885) *
                         C51026 +
                     ((C23917 - (C23916 + C23915) + C23918) * C50991 +
                      (C24417 - (C24418 + C24419) + C24420) * C50885) *
                         C51027 +
                     ((C23921 - (C23920 + C23919) + C23922) * C50991 +
                      (C24421 - (C24422 + C24423) + C24424) * C50885) *
                         C44479) *
                        C50762) *
                       C1275 +
                   ((((C22197 * C1512 -
                       ((C19767 * C134 + C50687 * C144) * C1509 +
                        (C19767 * C123 + C50687 * C130) * C1511) +
                       C22198 * C50788) *
                          C50991 +
                      (C21285 - (C21286 + C21287) + C21288) * C50885) *
                         C51026 +
                     ((C22199 * C1512 - (C22198 * C1509 + C22197 * C1511) +
                       C22200 * C50788) *
                          C50991 +
                      (C23923 - (C23924 + C23925) + C23926) * C50885) *
                         C51027 +
                     ((C22801 * C1512 - (C22200 * C1509 + C22199 * C1511) +
                       C22802 * C50788) *
                          C50991 +
                      (C23927 - (C23928 + C23929) + C23930) * C50885) *
                         C44479) *
                        C50975 +
                    (((C21287 + C21286 - C21285 - C21288) * C50991 +
                      (C21291 + C21290 - C21289 - C21292) * C50885) *
                         C51026 +
                     ((C23925 + C23924 - C23923 - C23926) * C50991 +
                      (C33085 + C33084 - C33083 - C33086) * C50885) *
                         C51027 +
                     ((C23929 + C23928 - C23927 - C23930) * C50991 +
                      (C22361 * C1511 + C22362 * C1509 -
                       (C19767 * C3500 + C50687 * C3506) * C1512 -
                       (C19767 * C3508 + C50687 * C3512) * C50788) *
                          C50885) *
                         C44479) *
                        C50762) *
                       C50719)) /
                 (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C1744 +
             (C19767 * C133 + C50687 * C143) * C51023 - C22193 * C1745 -
             C22194 * C51012 + C22195 * C1746 + C22196 * C1743) *
                C50991 +
            (C21731 + C21732 - C21733 - C21734 + C21735 + C21736) * C50885) *
               C51026 +
           ((C22193 * C1744 + C22194 * C51023 - C22195 * C1745 -
             C22196 * C51012 + C22799 * C1746 + C22800 * C1743) *
                C50991 +
            (C24571 + C24572 - C24573 - C24574 + C24575 + C24576) * C50885) *
               C51027 +
           ((C22195 * C1744 + C22196 * C51023 - C22799 * C1745 -
             C22800 * C51012 + C23079 * C1746 + C23080 * C1743) *
                C50991 +
            (C24577 + C24578 - C24579 - C24580 + C24581 + C24582) * C50885) *
               C44479) *
              C50746 * C1275 +
          (((C22197 * C1745 -
             ((C19767 * C134 + C50687 * C144) * C51023 +
              (C19767 * C123 + C50687 * C130) * C1744) +
             C22198 * C51012 - C22199 * C1746 - C22200 * C1743) *
                C50991 +
            (C21033 * C1745 - (C19910 * C51023 + C19909 * C1744) +
             C21034 * C51012 - C22011 * C1746 - C22012 * C1743) *
                C50885) *
               C51026 +
           ((C22199 * C1745 - (C22198 * C51023 + C22197 * C1744) +
             C22200 * C51012 - C22801 * C1746 - C22802 * C1743) *
                C50991 +
            (C22011 * C1745 - (C21034 * C51023 + C21033 * C1744) +
             C22012 * C51012 - C22803 * C1746 - C22804 * C1743) *
                C50885) *
               C51027 +
           ((C22801 * C1745 - (C22200 * C51023 + C22199 * C1744) +
             C22802 * C51012 - C39734 * C1746 - C39735 * C1743) *
                C50991 +
            (C22803 * C1745 - (C22012 * C51023 + C22011 * C1744) +
             C22804 * C51012 - (C19767 * C6194 + C50687 * C6196) * C1746 -
             (C19767 * C6198 + C50687 * C6200) * C1743) *
                C50885) *
               C44479) *
              C50746 * C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C50991 +
            (C19921 + C19922) * C50885) *
               C51026 +
           ((C22193 * C121 + C22194 * C50776) * C50991 +
            (C21993 + C21994) * C50885) *
               C51027 +
           ((C22195 * C121 + C22196 * C50776) * C50991 +
            (C21995 + C21996) * C50885) *
               C44479) *
              C50746 * C113 -
          (((C22018 + C22017) * C50885 +
            (C22200 * C50776 + C22199 * C121) * C50991) *
               C44479 +
           ((C21998 + C21997) * C50885 +
            (C22198 * C50776 + C22197 * C121) * C50991) *
               C51027 +
           ((C19928 + C19927) * C50885 +
            ((C19767 * C134 + C50687 * C144) * C50776 +
             (C19767 * C123 + C50687 * C130) * C121) *
                C50991) *
               C51026) *
              C50746 * C114 +
          ((((C19767 * C124 + C50687 * C131) * C121 +
             (C19767 * C135 + C50687 * C145) * C50776) *
                C50991 +
            (C19933 + C19934) * C50885) *
               C51026 +
           ((C22201 * C121 + C22202 * C50776) * C50991 +
            (C22019 + C22020) * C50885) *
               C51027 +
           ((C22203 * C121 + C22204 * C50776) * C50991 +
            (C22021 + C22022) * C50885) *
               C44479) *
              C50746 * C115 -
          ((((C19767 * C973 + C50687 * C977) * C50776 +
             (C19767 * C965 + C50687 * C969) * C121) *
                C50885 +
            ((C19767 * C859 + C50687 * C865) * C50776 +
             (C19767 * C850 + C50687 * C855) * C121) *
                C50991) *
               C44479 +
           (((C19767 * C726 + C50687 * C738) * C50776 +
             (C19767 * C714 + C50687 * C722) * C121) *
                C50885 +
            ((C19767 * C389 + C50687 * C397) * C50776 +
             (C19767 * C379 + C50687 * C385) * C121) *
                C50991) *
               C51027 +
           (((C19767 * C259 + C50687 * C271) * C50776 +
             (C19767 * C253 + C50687 * C263) * C121) *
                C50885 +
            ((C19767 * C136 + C50687 * C146) * C50776 +
             (C19767 * C125 + C50687 * C132) * C121) *
                C50991) *
               C51026) *
              C50746 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C50991 +
             (C19921 + C19922) * C50885) *
                C51026 +
            ((C22193 * C121 + C22194 * C50776) * C50991 +
             (C21993 + C21994) * C50885) *
                C51027 +
            ((C22195 * C121 + C22196 * C50776) * C50991 +
             (C21995 + C21996) * C50885) *
                C44479) *
               C501 -
           (((C22351 + C22352) * C50885 + (C21996 + C21995) * C50991) * C44479 +
            ((C22353 + C22354) * C50885 + (C21994 + C21993) * C50991) * C51027 +
            ((C19924 + C19923) * C50885 + (C19922 + C19921) * C50991) *
                C51026) *
               C502 +
           ((C20135 * C50991 + C20136 * C50885) * C51026 +
            (C31599 * C50991 + (C22463 + C22464) * C50885) * C51027 +
            ((C22352 + C22351) * C50991 + (C22465 + C22466) * C50885) *
                C44479) *
               C503) *
              C50968 +
          ((((C19927 + C19928) * C50991 + (C19929 + C19930) * C50885) * C51026 +
            ((C21997 + C21998) * C50991 + (C22355 + C22356) * C50885) * C51027 +
            ((C22017 + C22018) * C50991 + (C22363 + C22364) * C50885) *
                C44479) *
               C502 -
           (((C22018 + C22017) * C50885 +
             (C22200 * C50776 + C22199 * C121) * C50991) *
                C44479 +
            ((C21998 + C21997) * C50885 +
             (C22198 * C50776 + C22197 * C121) * C50991) *
                C51027 +
            ((C19928 + C19927) * C50885 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C50991) *
                C51026) *
               C501 -
           ((((C19767 * C3372 + C50687 * C3374) * C50776 +
              (C19767 * C3368 + C50687 * C3370) * C121) *
                 C50885 +
             (C22364 + C22363) * C50991) *
                C44479 +
            ((C31601 + C31600) * C50885 + C31602 * C50991) * C51027 +
            (C20145 * C50885 + C20146 * C50991) * C51026) *
               C503) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C50991 +
             (C19921 + C19922) * C50885) *
                C51026 +
            ((C22193 * C121 + C22194 * C50776) * C50991 +
             (C21993 + C21994) * C50885) *
                C51027 +
            ((C22195 * C121 + C22196 * C50776) * C50991 +
             (C21995 + C21996) * C50885) *
                C44479) *
               C50975 -
           (((C22351 + C22352) * C50885 + (C21996 + C21995) * C50991) * C44479 +
            ((C22353 + C22354) * C50885 + (C21994 + C21993) * C50991) * C51027 +
            ((C19924 + C19923) * C50885 + (C19922 + C19921) * C50991) *
                C51026) *
               C50762) *
              C250 +
          ((((C19927 + C19928) * C50991 + (C19929 + C19930) * C50885) * C51026 +
            ((C21997 + C21998) * C50991 + (C22355 + C22356) * C50885) * C51027 +
            ((C22017 + C22018) * C50991 + (C22363 + C22364) * C50885) *
                C44479) *
               C50762 -
           (((C22018 + C22017) * C50885 +
             (C22200 * C50776 + C22199 * C121) * C50991) *
                C44479 +
            ((C21998 + C21997) * C50885 +
             (C22198 * C50776 + C22197 * C121) * C50991) *
                C51027 +
            ((C19928 + C19927) * C50885 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C50991) *
                C51026) *
               C50975) *
              C251 +
          (((((C19767 * C124 + C50687 * C131) * C121 +
              (C19767 * C135 + C50687 * C145) * C50776) *
                 C50991 +
             (C19933 + C19934) * C50885) *
                C51026 +
            ((C22201 * C121 + C22202 * C50776) * C50991 +
             (C22019 + C22020) * C50885) *
                C51027 +
            ((C22203 * C121 + C22204 * C50776) * C50991 +
             (C22021 + C22022) * C50885) *
                C44479) *
               C50975 -
           ((((C19767 * C3218 + C50687 * C3221) * C50776 +
              (C19767 * C3212 + C50687 * C3217) * C121) *
                 C50885 +
             (C22022 + C22021) * C50991) *
                C44479 +
            ((C31306 + C31305) * C50885 + (C22020 + C22019) * C50991) * C51027 +
            ((C19936 + C19935) * C50885 + (C19934 + C19933) * C50991) *
                C51026) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C50991 +
            (C19921 + C19922) * C50885) *
               C51026 +
           ((C22193 * C121 + C22194 * C50776) * C50991 +
            (C21993 + C21994) * C50885) *
               C51027 +
           ((C22195 * C121 + C22196 * C50776) * C50991 +
            (C21995 + C21996) * C50885) *
               C44479) *
              C592 -
          (((C22351 + C22352) * C50885 + (C21996 + C21995) * C50991) * C44479 +
           ((C22353 + C22354) * C50885 + (C21994 + C21993) * C50991) * C51027 +
           ((C19924 + C19923) * C50885 + (C19922 + C19921) * C50991) * C51026) *
              C593 +
          ((C20135 * C50991 + C20136 * C50885) * C51026 +
           (C31599 * C50991 + (C22463 + C22464) * C50885) * C51027 +
           ((C22352 + C22351) * C50991 + (C22465 + C22466) * C50885) * C44479) *
              C594 -
          ((((C19767 * C20580 + C50687 * C20581) * C50776 +
             (C19767 * C20578 + C50687 * C20579) * C121) *
                C50885 +
            (C22466 + C22465) * C50991) *
               C44479 +
           ((C31703 + C31702) * C50885 + C31701 * C50991) * C51027 +
           (C20225 * C50885 + C20226 * C50991) * C51026) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C377 +
             (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
             C22194 * C50788) *
                C50991 +
            (C20337 + C20338 - C20371 - C20372) * C50885) *
               C51026 +
           ((C22193 * C377 + C22194 * C50977 - C22195 * C378 -
             C22196 * C50788) *
                C50991 +
            (C22613 + C22614 - C22615 - C22616) * C50885) *
               C51027 +
           ((C22195 * C377 + C22196 * C50977 - C22799 * C378 -
             C22800 * C50788) *
                C50991 +
            (C22617 + C22618 - C22637 - C22638) * C50885) *
               C44479) *
              C50746 * C250 +
          (((C22197 * C378 -
             ((C19767 * C134 + C50687 * C144) * C50977 +
              (C19767 * C123 + C50687 * C130) * C377) +
             C22198 * C50788) *
                C50991 +
            (C21039 - (C21017 + C21018) + C21040) * C50885) *
               C51026 +
           ((C22199 * C378 - (C22198 * C50977 + C22197 * C377) +
             C22200 * C50788) *
                C50991 +
            (C23567 - (C23568 + C23569) + C23570) * C50885) *
               C51027 +
           ((C22801 * C378 - (C22200 * C50977 + C22199 * C377) +
             C22802 * C50788) *
                C50991 +
            (C23571 - (C23572 + C23573) + C23574) * C50885) *
               C44479) *
              C50746 * C251 +
          ((((C19767 * C124 + C50687 * C131) * C377 +
             (C19767 * C135 + C50687 * C145) * C50977 - C22201 * C378 -
             C22202 * C50788) *
                C50991 +
            (C19915 * C377 + C19916 * C50977 - C22013 * C378 -
             C22014 * C50788) *
                C50885) *
               C51026 +
           ((C22201 * C377 + C22202 * C50977 - C22203 * C378 -
             C22204 * C50788) *
                C50991 +
            (C22013 * C377 + C22014 * C50977 - C22015 * C378 -
             C22016 * C50788) *
                C50885) *
               C51027 +
           ((C22203 * C377 + C22204 * C50977 - C39368 * C378 -
             C39369 * C50788) *
                C50991 +
            (C22015 * C377 + C22016 * C50977 -
             (C19767 * C6822 + C50687 * C6823) * C378 -
             (C19767 * C6824 + C50687 * C6825) * C50788) *
                C50885) *
               C44479) *
              C50746 * C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C377 +
             (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
             C22194 * C50788) *
                C50991 +
            (C20337 + C20338 - C20371 - C20372) * C50885) *
               C51026 +
           ((C22193 * C377 + C22194 * C50977 - C22195 * C378 -
             C22196 * C50788) *
                C50991 +
            (C22613 + C22614 - C22615 - C22616) * C50885) *
               C51027 +
           ((C22195 * C377 + C22196 * C50977 - C22799 * C378 -
             C22800 * C50788) *
                C50991 +
            (C22617 + C22618 - C22637 - C22638) * C50885) *
               C44479) *
              C501 +
          (((C20371 - (C20338 + C20337) + C20372) * C50991 +
            (C20373 - (C20344 + C20343) + C20374) * C50885) *
               C51026 +
           ((C22615 - (C22614 + C22613) + C22616) * C50991 +
            (C22623 - (C22624 + C22625) + C22626) * C50885) *
               C51027 +
           ((C22637 - (C22618 + C22617) + C22638) * C50991 +
            (C22639 - (C22629 + C22630) + C22640) * C50885) *
               C44479) *
              C502 +
          ((C20381 * C50991 + C20382 * C50885) * C51026 +
           (C31856 * C50991 + (C31853 + C31852 - C31851 - C31854) * C50885) *
               C51027 +
           ((C22630 + C22629 - C22639 - C22640) * C50991 +
            (C20611 * C377 + C20612 * C50977 -
             (C19767 * C20684 + C50687 * C20685) * C378 -
             (C19767 * C20686 + C50687 * C20687) * C50788) *
                C50885) *
               C44479) *
              C503) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[180] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19767 * C122 + C50687 * C129) * C121 +
                       (C19767 * C133 + C50687 * C143) * C50776) *
                          C2173 +
                      (C19921 + C19922) * C2174 + C20135 * C2175) *
                         C33829 +
                     ((C22193 * C121 + C22194 * C50776) * C2173 +
                      (C21993 + C21994) * C2174 + C31599 * C2175) *
                         C50911) *
                        C1169 -
                    ((C31701 * C2175 + (C22353 + C22354) * C2174 +
                      (C21994 + C21993) * C2173) *
                         C50911 +
                     (C20226 * C2175 + (C19924 + C19923) * C2174 +
                      (C19922 + C19921) * C2173) *
                         C33829) *
                        C50762) *
                       C51021 +
                   ((((C19927 + C19928) * C2173 + (C19929 + C19930) * C2174 +
                      (C19931 + C19932) * C2175) *
                         C33829 +
                     ((C21997 + C21998) * C2173 + (C22355 + C22356) * C2174 +
                      (C31600 + C31601) * C2175) *
                         C50911) *
                        C50762 -
                    ((C31602 * C2175 + (C21998 + C21997) * C2174 +
                      (C22198 * C50776 + C22197 * C121) * C2173) *
                         C50911 +
                     (C20146 * C2175 + (C19928 + C19927) * C2174 +
                      ((C19767 * C134 + C50687 * C144) * C50776 +
                       (C19767 * C123 + C50687 * C130) * C121) *
                          C2173) *
                         C33829) *
                        C1169) *
                       C51006 +
                   (((((C19767 * C124 + C50687 * C131) * C121 +
                       (C19767 * C135 + C50687 * C145) * C50776) *
                          C2173 +
                      (C19933 + C19934) * C2174 + (C19935 + C19936) * C2175) *
                         C33829 +
                     ((C22201 * C121 + C22202 * C50776) * C2173 +
                      (C22019 + C22020) * C2174 + (C31305 + C31306) * C2175) *
                         C50911) *
                        C1169 -
                    ((((C19767 * C4002 + C50687 * C4003) * C50776 +
                       (C19767 * C4000 + C50687 * C4001) * C121) *
                          C2175 +
                      (C31306 + C31305) * C2174 + (C22020 + C22019) * C2173) *
                         C50911 +
                     ((C19938 + C19937) * C2175 + (C19936 + C19935) * C2174 +
                      (C19934 + C19933) * C2173) *
                         C33829) *
                        C50762) *
                       C1173)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                       C16979 * C130 + C16985 * C124 + C16980 * C131) *
                          C121 +
                      (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                       C16979 * C144 + C16985 * C135 + C16980 * C145) *
                          C50776) *
                         C50835 * C33829 +
                     ((C34162 + C34161 + C34160) * C121 +
                      (C34165 + C34164 + C34163) * C50776) *
                         C50835 * C50911) *
                        C1169 -
                    (((C17804 + C17805 + C17806) * C50776 +
                      (C17801 + C17802 + C17803) * C121) *
                         C50835 * C50911 +
                     ((C17174 + C17173 + C17172) * C50776 +
                      (C17171 + C17170 + C17169) * C121) *
                         C50835 * C33829) *
                        C50762) *
                       C51021 +
                   ((((C17175 + C17176 + C17177) * C121 +
                      (C17178 + C17179 + C17180) * C50776) *
                         C50835 * C33829 +
                     ((C18719 + C18720 + C18721) * C121 +
                      (C18722 + C18723 + C18724) * C50776) *
                         C50835 * C50911) *
                        C50762 -
                    (((C34171 + C34170 + C34169) * C50776 +
                      (C34168 + C34167 + C34166) * C121) *
                         C50835 * C50911 +
                     ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                       C16979 * C145 + C16983 * C134 + C16978 * C144) *
                          C50776 +
                      (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                       C16979 * C131 + C16983 * C123 + C16978 * C130) *
                          C121) *
                         C50835 * C33829) *
                        C1169) *
                       C51006 +
                   ((((C16983 * C124 + C16978 * C131 + C16984 * C125 +
                       C16979 * C132 + C16985 * C126 + C16980 * C138) *
                          C121 +
                      (C16983 * C135 + C16978 * C145 + C16984 * C136 +
                       C16979 * C146 + C16985 * C137 + C16980 * C147) *
                          C50776) *
                         C50835 * C33829 +
                     ((C34174 + C34173 + C34172) * C121 +
                      (C34177 + C34176 + C34175) * C50776) *
                         C50835 * C50911) *
                        C1169 -
                    (((C16985 * C1409 + C16980 * C1410 + C16984 * C726 +
                       C16979 * C738 + C16983 * C725 + C16978 * C737) *
                          C50776 +
                      (C16985 * C1407 + C16980 * C1408 + C16984 * C714 +
                       C16979 * C722 + C16983 * C713 + C16978 * C721) *
                          C121) *
                         C50835 * C50911 +
                     ((C17186 + C17185 + C17184) * C50776 +
                      (C17183 + C17182 + C17181) * C121) *
                         C50835 * C33829) *
                        C50762) *
                       C1173)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C19767 * C122 + C50687 * C129) * C121 +
                      (C19767 * C133 + C50687 * C143) * C50776) *
                         C50835 * C39163 +
                     (C22193 * C121 + C22194 * C50776) * C50835 * C39164 +
                     (C22195 * C121 + C22196 * C50776) * C50835 * C39165 +
                     (C22799 * C121 + C22800 * C50776) * C50835 * C39166) *
                        C1169 -
                    ((C22634 * C50776 + C22633 * C121) * C50835 * C39166 +
                     (C21996 + C21995) * C50835 * C39165 +
                     (C21994 + C21993) * C50835 * C39164 +
                     (C19922 + C19921) * C50835 * C39163) *
                        C50762) *
                       C51021 +
                   (((C19927 + C19928) * C50835 * C39163 +
                     (C21997 + C21998) * C50835 * C39164 +
                     (C22017 + C22018) * C50835 * C39165 +
                     (C22803 * C121 + C22804 * C50776) * C50835 * C39166) *
                        C50762 -
                    ((C22802 * C50776 + C22801 * C121) * C50835 * C39166 +
                     (C22200 * C50776 + C22199 * C121) * C50835 * C39165 +
                     (C22198 * C50776 + C22197 * C121) * C50835 * C39164 +
                     ((C19767 * C134 + C50687 * C144) * C50776 +
                      (C19767 * C123 + C50687 * C130) * C121) *
                         C50835 * C39163) *
                        C1169) *
                       C51006 +
                   ((((C19767 * C124 + C50687 * C131) * C121 +
                      (C19767 * C135 + C50687 * C145) * C50776) *
                         C50835 * C39163 +
                     (C22201 * C121 + C22202 * C50776) * C50835 * C39164 +
                     (C22203 * C121 + C22204 * C50776) * C50835 * C39165 +
                     (C39368 * C121 + C39369 * C50776) * C50835 * C39166) *
                        C1169 -
                    (((C19767 * C6824 + C50687 * C6825) * C50776 +
                      (C19767 * C6822 + C50687 * C6823) * C121) *
                         C50835 * C39166 +
                     (C22022 + C22021) * C50835 * C39165 +
                     (C22020 + C22019) * C50835 * C39164 +
                     (C19934 + C19933) * C50835 * C39163) *
                        C50762) *
                       C1173)) /
                     (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C2173 +
             (C19921 + C19922) * C2174 + C20135 * C2175) *
                C33829 +
            ((C22193 * C121 + C22194 * C50776) * C2173 +
             (C21993 + C21994) * C2174 + C31599 * C2175) *
                C50911) *
               C51022 -
           ((C31701 * C2175 + (C22353 + C22354) * C2174 +
             (C21994 + C21993) * C2173) *
                C50911 +
            (C20226 * C2175 + (C19924 + C19923) * C2174 +
             (C19922 + C19921) * C2173) *
                C33829) *
               C51009 +
           ((C20135 * C2173 + C20136 * C2174 + (C20152 + C20151) * C2175) *
                C33829 +
            (C31599 * C2173 + (C22463 + C22464) * C2174 +
             (C31702 + C31703) * C2175) *
                C50911) *
               C1274) *
              C1275 +
          ((((C19927 + C19928) * C2173 + (C19929 + C19930) * C2174 +
             (C19931 + C19932) * C2175) *
                C33829 +
            ((C21997 + C21998) * C2173 + (C22355 + C22356) * C2174 +
             (C31600 + C31601) * C2175) *
                C50911) *
               C51009 -
           ((C31602 * C2175 + (C21998 + C21997) * C2174 +
             (C22198 * C50776 + C22197 * C121) * C2173) *
                C50911 +
            (C20146 * C2175 + (C19928 + C19927) * C2174 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C2173) *
                C33829) *
               C51022 -
           ((((C19767 * C3013 + C50687 * C3017) * C50776 +
              (C19767 * C3005 + C50687 * C3011) * C121) *
                 C2175 +
             (C31601 + C31600) * C2174 + C31602 * C2173) *
                C50911 +
            ((C20154 + C20153) * C2175 + C20145 * C2174 + C20146 * C2173) *
                C33829) *
               C1274) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50776) *
                C50835 * C33829 +
            ((C34162 + C34161 + C34160) * C121 +
             (C34165 + C34164 + C34163) * C50776) *
                C50835 * C50911) *
               C51022 -
           (((C17804 + C17805 + C17806) * C50776 +
             (C17801 + C17802 + C17803) * C121) *
                C50835 * C50911 +
            ((C17174 + C17173 + C17172) * C50776 +
             (C17171 + C17170 + C17169) * C121) *
                C50835 * C33829) *
               C51009 +
           (((C17508 + C17507 + C17506) * C121 +
             (C17505 + C17504 + C17503) * C50776) *
                C50835 * C33829 +
            ((C17807 + C17808 + C17809) * C121 +
             (C17810 + C17811 + C17812) * C50776) *
                C50835 * C50911) *
               C1274) *
              C1275 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50776) *
                C50835 * C33829 +
            ((C18719 + C18720 + C18721) * C121 +
             (C18722 + C18723 + C18724) * C50776) *
                C50835 * C50911) *
               C51009 -
           (((C34171 + C34170 + C34169) * C50776 +
             (C34168 + C34167 + C34166) * C121) *
                C50835 * C50911 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50776 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C50835 * C33829) *
               C51022 -
           (((C16985 * C731 + C16980 * C739 + C16984 * C732 + C16979 * C740 +
              C16983 * C733 + C16978 * C741) *
                 C50776 +
             (C16985 * C715 + C16980 * C727 + C16984 * C716 + C16979 * C728 +
              C16983 * C717 + C16978 * C729) *
                 C121) *
                C50835 * C50911 +
            ((C17514 + C17513 + C17512) * C50776 +
             (C17511 + C17510 + C17509) * C121) *
                C50835 * C33829) *
               C1274) *
              C50719)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C50835 * C39163 +
            (C22193 * C121 + C22194 * C50776) * C50835 * C39164 +
            (C22195 * C121 + C22196 * C50776) * C50835 * C39165 +
            (C22799 * C121 + C22800 * C50776) * C50835 * C39166) *
               C51022 -
           ((C22634 * C50776 + C22633 * C121) * C50835 * C39166 +
            (C21996 + C21995) * C50835 * C39165 +
            (C21994 + C21993) * C50835 * C39164 +
            (C19922 + C19921) * C50835 * C39163) *
               C51009 +
           (C20135 * C50835 * C39163 + C31599 * C50835 * C39164 +
            (C22352 + C22351) * C50835 * C39165 +
            (C22635 * C121 + C22636 * C50776) * C50835 * C39166) *
               C1274) *
              C1275 +
          (((C19927 + C19928) * C50835 * C39163 +
            (C21997 + C21998) * C50835 * C39164 +
            (C22017 + C22018) * C50835 * C39165 +
            (C22803 * C121 + C22804 * C50776) * C50835 * C39166) *
               C51009 -
           ((C22802 * C50776 + C22801 * C121) * C50835 * C39166 +
            (C22200 * C50776 + C22199 * C121) * C50835 * C39165 +
            (C22198 * C50776 + C22197 * C121) * C50835 * C39164 +
            ((C19767 * C134 + C50687 * C144) * C50776 +
             (C19767 * C123 + C50687 * C130) * C121) *
                C50835 * C39163) *
               C51022 -
           (((C19767 * C3508 + C50687 * C3512) * C50776 +
             (C19767 * C3500 + C50687 * C3506) * C121) *
                C50835 * C39166 +
            (C22364 + C22363) * C50835 * C39165 + C31602 * C50835 * C39164 +
            C20146 * C50835 * C39163) *
               C1274) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C377 +
              (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
              C22194 * C50788) *
                 C2173 +
             (C20337 + C20338 - C20371 - C20372) * C2174 + C20381 * C2175) *
                C33829 +
            ((C22193 * C377 + C22194 * C50977 - C22195 * C378 -
              C22196 * C50788) *
                 C2173 +
             (C22613 + C22614 - C22615 - C22616) * C2174 + C31856 * C2175) *
                C50911) *
               C1169 +
           (((C20371 - (C20338 + C20337) + C20372) * C2173 +
             (C20373 - (C20344 + C20343) + C20374) * C2174 +
             (C20375 - (C20350 + C20349) + C20376) * C2175) *
                C33829 +
            ((C22615 - (C22614 + C22613) + C22616) * C2173 +
             (C22623 - (C22624 + C22625) + C22626) * C2174 +
             (C31851 - (C31852 + C31853) + C31854) * C2175) *
                C50911) *
               C50762) *
              C1275 +
          ((((C22197 * C378 -
              ((C19767 * C134 + C50687 * C144) * C50977 +
               (C19767 * C123 + C50687 * C130) * C377) +
              C22198 * C50788) *
                 C2173 +
             (C21039 - (C21017 + C21018) + C21040) * C2174 +
             (C21041 - (C21023 + C21024) + C21042) * C2175) *
                C33829 +
            ((C22199 * C378 - (C22198 * C50977 + C22197 * C377) +
              C22200 * C50788) *
                 C2173 +
             (C23567 - (C23568 + C23569) + C23570) * C2174 +
             (C32739 - (C32740 + C32741) + C32742) * C2175) *
                C50911) *
               C1169 +
           (((C21018 + C21017 - C21039 - C21040) * C2173 +
             (C21024 + C21023 - C21041 - C21042) * C2174 +
             (C21030 + C21029 - C21043 - C21044) * C2175) *
                C33829 +
            ((C23569 + C23568 - C23567 - C23570) * C2173 +
             (C32741 + C32740 - C32739 - C32742) * C2174 +
             (C21037 * C377 + C21038 * C50977 -
              (C19767 * C3368 + C50687 * C3370) * C378 -
              (C19767 * C3372 + C50687 * C3374) * C50788) *
                 C2175) *
                C50911) *
               C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C377 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50977 -
             (C34160 + C34161 + C34162) * C378 -
             (C34163 + C34164 + C34165) * C50788) *
                C50835 * C33829 +
            ((C34162 + C34161 + C34160) * C377 +
             (C34165 + C34164 + C34163) * C50977 -
             (C34740 + C34739 + C34738) * C378 -
             (C34743 + C34742 + C34741) * C50788) *
                C50835 * C50911) *
               C1169 +
           (((C17803 + C17802 + C17801) * C378 -
             ((C17174 + C17173 + C17172) * C50977 +
              (C17171 + C17170 + C17169) * C377) +
             (C17806 + C17805 + C17804) * C50788) *
                C50835 * C33829 +
            ((C18117 + C18118 + C18119) * C378 -
             ((C17804 + C17805 + C17806) * C50977 +
              (C17801 + C17802 + C17803) * C377) +
             (C18120 + C18121 + C18122) * C50788) *
                C50835 * C50911) *
               C50762) *
              C1275 +
          ((((C34166 + C34167 + C34168) * C378 -
             ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
               C16983 * C134 + C16978 * C144) *
                  C50977 +
              (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
               C16983 * C123 + C16978 * C130) *
                  C377) +
             (C34169 + C34170 + C34171) * C50788) *
                C50835 * C33829 +
            ((C34746 + C34745 + C34744) * C378 -
             ((C34171 + C34170 + C34169) * C50977 +
              (C34168 + C34167 + C34166) * C377) +
             (C34749 + C34748 + C34747) * C50788) *
                C50835 * C50911) *
               C1169 +
           (((C17175 + C17176 + C17177) * C377 +
             (C17178 + C17179 + C17180) * C50977 -
             (C18721 + C18720 + C18719) * C378 -
             (C18724 + C18723 + C18722) * C50788) *
                C50835 * C33829 +
            ((C18719 + C18720 + C18721) * C377 +
             (C18722 + C18723 + C18724) * C50977 -
             (C16985 * C965 + C16980 * C969 + C16984 * C966 + C16979 * C970 +
              C16983 * C967 + C16978 * C971) *
                 C378 -
             (C16985 * C973 + C16980 * C977 + C16984 * C974 + C16979 * C978 +
              C16983 * C975 + C16978 * C979) *
                 C50788) *
                C50835 * C50911) *
               C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C377 +
             (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
             C22194 * C50788) *
                C50835 * C39163 +
            (C22193 * C377 + C22194 * C50977 - C22195 * C378 -
             C22196 * C50788) *
                C50835 * C39164 +
            (C22195 * C377 + C22196 * C50977 - C22799 * C378 -
             C22800 * C50788) *
                C50835 * C39165 +
            (C22799 * C377 + C22800 * C50977 - C23079 * C378 -
             C23080 * C50788) *
                C50835 * C39166) *
               C1169 +
           ((C20371 - (C20338 + C20337) + C20372) * C50835 * C39163 +
            (C22615 - (C22614 + C22613) + C22616) * C50835 * C39164 +
            (C22637 - (C22618 + C22617) + C22638) * C50835 * C39165 +
            (C22969 * C378 - (C22634 * C50977 + C22633 * C377) +
             C22970 * C50788) *
                C50835 * C39166) *
               C50762) *
              C1275 +
          (((C22197 * C378 -
             ((C19767 * C134 + C50687 * C144) * C50977 +
              (C19767 * C123 + C50687 * C130) * C377) +
             C22198 * C50788) *
                C50835 * C39163 +
            (C22199 * C378 - (C22198 * C50977 + C22197 * C377) +
             C22200 * C50788) *
                C50835 * C39164 +
            (C22801 * C378 - (C22200 * C50977 + C22199 * C377) +
             C22802 * C50788) *
                C50835 * C39165 +
            (C39734 * C378 - (C22802 * C50977 + C22801 * C377) +
             C39735 * C50788) *
                C50835 * C39166) *
               C1169 +
           ((C21018 + C21017 - C21039 - C21040) * C50835 * C39163 +
            (C23569 + C23568 - C23567 - C23570) * C50835 * C39164 +
            (C23573 + C23572 - C23571 - C23574) * C50835 * C39165 +
            (C22803 * C377 + C22804 * C50977 -
             (C19767 * C6194 + C50687 * C6196) * C378 -
             (C19767 * C6198 + C50687 * C6200) * C50788) *
                C50835 * C39166) *
               C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C1511 +
              (C19767 * C133 + C50687 * C143) * C1509 - C22193 * C1512 -
              C22194 * C50788) *
                 C2173 +
             (C21273 + C21274 - C21275 - C21276) * C2174 + C21631 * C2175) *
                C33829 +
            ((C22193 * C1511 + C22194 * C1509 - C22195 * C1512 -
              C22196 * C50788) *
                 C2173 +
             (C23915 + C23916 - C23917 - C23918) * C2174 + C33579 * C2175) *
                C50911) *
               C1169 +
           (((C21275 - (C21274 + C21273) + C21276) * C2173 +
             (C21279 - (C21278 + C21277) + C21280) * C2174 +
             (C21283 - (C21282 + C21281) + C21284) * C2175) *
                C33829 +
            ((C23917 - (C23916 + C23915) + C23918) * C2173 +
             (C24417 - (C24418 + C24419) + C24420) * C2174 +
             (C33574 - (C33575 + C33576) + C33577) * C2175) *
                C50911) *
               C50762) *
              C50968 +
          ((((C22197 * C1512 -
              ((C19767 * C134 + C50687 * C144) * C1509 +
               (C19767 * C123 + C50687 * C130) * C1511) +
              C22198 * C50788) *
                 C2173 +
             (C21285 - (C21286 + C21287) + C21288) * C2174 +
             (C21289 - (C21290 + C21291) + C21292) * C2175) *
                C33829 +
            ((C22199 * C1512 - (C22198 * C1509 + C22197 * C1511) +
              C22200 * C50788) *
                 C2173 +
             (C23923 - (C23924 + C23925) + C23926) * C2174 +
             (C33083 - (C33084 + C33085) + C33086) * C2175) *
                C50911) *
               C1169 +
           (((C21287 + C21286 - C21285 - C21288) * C2173 +
             (C21291 + C21290 - C21289 - C21292) * C2174 +
             (C21295 + C21294 - C21293 - C21296) * C2175) *
                C33829 +
            ((C23925 + C23924 - C23923 - C23926) * C2173 +
             (C33085 + C33084 - C33083 - C33086) * C2174 +
             (C21037 * C1511 + C21038 * C1509 -
              (C19767 * C3368 + C50687 * C3370) * C1512 -
              (C19767 * C3372 + C50687 * C3374) * C50788) *
                 C2175) *
                C50911) *
               C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C1511 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C1509 -
             (C34160 + C34161 + C34162) * C1512 -
             (C34163 + C34164 + C34165) * C50788) *
                C50835 * C33829 +
            ((C34162 + C34161 + C34160) * C1511 +
             (C34165 + C34164 + C34163) * C1509 -
             (C34740 + C34739 + C34738) * C1512 -
             (C34743 + C34742 + C34741) * C50788) *
                C50835 * C50911) *
               C1169 +
           (((C17803 + C17802 + C17801) * C1512 -
             ((C17174 + C17173 + C17172) * C1509 +
              (C17171 + C17170 + C17169) * C1511) +
             (C17806 + C17805 + C17804) * C50788) *
                C50835 * C33829 +
            ((C18117 + C18118 + C18119) * C1512 -
             ((C17804 + C17805 + C17806) * C1509 +
              (C17801 + C17802 + C17803) * C1511) +
             (C18120 + C18121 + C18122) * C50788) *
                C50835 * C50911) *
               C50762) *
              C50968 +
          ((((C34166 + C34167 + C34168) * C1512 -
             ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
               C16983 * C134 + C16978 * C144) *
                  C1509 +
              (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
               C16983 * C123 + C16978 * C130) *
                  C1511) +
             (C34169 + C34170 + C34171) * C50788) *
                C50835 * C33829 +
            ((C34746 + C34745 + C34744) * C1512 -
             ((C34171 + C34170 + C34169) * C1509 +
              (C34168 + C34167 + C34166) * C1511) +
             (C34749 + C34748 + C34747) * C50788) *
                C50835 * C50911) *
               C1169 +
           (((C17175 + C17176 + C17177) * C1511 +
             (C17178 + C17179 + C17180) * C1509 -
             (C18721 + C18720 + C18719) * C1512 -
             (C18724 + C18723 + C18722) * C50788) *
                C50835 * C33829 +
            ((C18719 + C18720 + C18721) * C1511 +
             (C18722 + C18723 + C18724) * C1509 -
             (C16985 * C965 + C16980 * C969 + C16984 * C966 + C16979 * C970 +
              C16983 * C967 + C16978 * C971) *
                 C1512 -
             (C16985 * C973 + C16980 * C977 + C16984 * C974 + C16979 * C978 +
              C16983 * C975 + C16978 * C979) *
                 C50788) *
                C50835 * C50911) *
               C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C1511 +
             (C19767 * C133 + C50687 * C143) * C1509 - C22193 * C1512 -
             C22194 * C50788) *
                C50835 * C39163 +
            (C22193 * C1511 + C22194 * C1509 - C22195 * C1512 -
             C22196 * C50788) *
                C50835 * C39164 +
            (C22195 * C1511 + C22196 * C1509 - C22799 * C1512 -
             C22800 * C50788) *
                C50835 * C39165 +
            (C22799 * C1511 + C22800 * C1509 - C23079 * C1512 -
             C23080 * C50788) *
                C50835 * C39166) *
               C1169 +
           ((C21275 - (C21274 + C21273) + C21276) * C50835 * C39163 +
            (C23917 - (C23916 + C23915) + C23918) * C50835 * C39164 +
            (C23921 - (C23920 + C23919) + C23922) * C50835 * C39165 +
            (C22969 * C1512 - (C22634 * C1509 + C22633 * C1511) +
             C22970 * C50788) *
                C50835 * C39166) *
               C50762) *
              C50968 +
          (((C22197 * C1512 -
             ((C19767 * C134 + C50687 * C144) * C1509 +
              (C19767 * C123 + C50687 * C130) * C1511) +
             C22198 * C50788) *
                C50835 * C39163 +
            (C22199 * C1512 - (C22198 * C1509 + C22197 * C1511) +
             C22200 * C50788) *
                C50835 * C39164 +
            (C22801 * C1512 - (C22200 * C1509 + C22199 * C1511) +
             C22802 * C50788) *
                C50835 * C39165 +
            (C39734 * C1512 - (C22802 * C1509 + C22801 * C1511) +
             C39735 * C50788) *
                C50835 * C39166) *
               C1169 +
           ((C21287 + C21286 - C21285 - C21288) * C50835 * C39163 +
            (C23925 + C23924 - C23923 - C23926) * C50835 * C39164 +
            (C23929 + C23928 - C23927 - C23930) * C50835 * C39165 +
            (C22803 * C1511 + C22804 * C1509 -
             (C19767 * C6194 + C50687 * C6196) * C1512 -
             (C19767 * C6198 + C50687 * C6200) * C50788) *
                C50835 * C39166) *
               C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C1511 +
             (C19767 * C133 + C50687 * C143) * C1509 - C22193 * C1512 -
             C22194 * C50788) *
                C2173 +
            (C21273 + C21274 - C21275 - C21276) * C2174 + C21631 * C2175) *
               C33829 +
           ((C22193 * C1511 + C22194 * C1509 - C22195 * C1512 -
             C22196 * C50788) *
                C2173 +
            (C23915 + C23916 - C23917 - C23918) * C2174 + C33579 * C2175) *
               C50911) *
              C51022 +
          (((C21275 - (C21274 + C21273) + C21276) * C2173 +
            (C21279 - (C21278 + C21277) + C21280) * C2174 +
            (C21283 - (C21282 + C21281) + C21284) * C2175) *
               C33829 +
           ((C23917 - (C23916 + C23915) + C23918) * C2173 +
            (C24417 - (C24418 + C24419) + C24420) * C2174 +
            (C33574 - (C33575 + C33576) + C33577) * C2175) *
               C50911) *
              C51009 +
          ((C21631 * C2173 + C21632 * C2174 +
            (C21627 + C21626 - C21625 - C21628) * C2175) *
               C33829 +
           (C33579 * C2173 + (C33576 + C33575 - C33574 - C33577) * C2174 +
            (C20369 * C1511 + C20370 * C1509 -
             (C19767 * C20578 + C50687 * C20579) * C1512 -
             (C19767 * C20580 + C50687 * C20581) * C50788) *
                C2175) *
               C50911) *
              C1274) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C1511 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C1509 -
            (C34160 + C34161 + C34162) * C1512 -
            (C34163 + C34164 + C34165) * C50788) *
               C50835 * C33829 +
           ((C34162 + C34161 + C34160) * C1511 +
            (C34165 + C34164 + C34163) * C1509 -
            (C34740 + C34739 + C34738) * C1512 -
            (C34743 + C34742 + C34741) * C50788) *
               C50835 * C50911) *
              C51022 +
          (((C17803 + C17802 + C17801) * C1512 -
            ((C17174 + C17173 + C17172) * C1509 +
             (C17171 + C17170 + C17169) * C1511) +
            (C17806 + C17805 + C17804) * C50788) *
               C50835 * C33829 +
           ((C18117 + C18118 + C18119) * C1512 -
            ((C17804 + C17805 + C17806) * C1509 +
             (C17801 + C17802 + C17803) * C1511) +
            (C18120 + C18121 + C18122) * C50788) *
               C50835 * C50911) *
              C51009 +
          (((C17508 + C17507 + C17506) * C1511 +
            (C17505 + C17504 + C17503) * C1509 -
            (C17809 + C17808 + C17807) * C1512 -
            (C17812 + C17811 + C17810) * C50788) *
               C50835 * C33829 +
           ((C17807 + C17808 + C17809) * C1511 +
            (C17810 + C17811 + C17812) * C1509 -
            (C16985 * C3212 + C16980 * C3217 + C16984 * C3211 + C16979 * C3214 +
             C16983 * C3210 + C16978 * C3213) *
                C1512 -
            (C16985 * C3218 + C16980 * C3221 + C16984 * C3216 + C16979 * C3220 +
             C16983 * C3215 + C16978 * C3219) *
                C50788) *
               C50835 * C50911) *
              C1274) *
         C50714) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C1511 +
            (C19767 * C133 + C50687 * C143) * C1509 - C22193 * C1512 -
            C22194 * C50788) *
               C50835 * C39163 +
           (C22193 * C1511 + C22194 * C1509 - C22195 * C1512 -
            C22196 * C50788) *
               C50835 * C39164 +
           (C22195 * C1511 + C22196 * C1509 - C22799 * C1512 -
            C22800 * C50788) *
               C50835 * C39165 +
           (C22799 * C1511 + C22800 * C1509 - C23079 * C1512 -
            C23080 * C50788) *
               C50835 * C39166) *
              C51022 +
          ((C21275 - (C21274 + C21273) + C21276) * C50835 * C39163 +
           (C23917 - (C23916 + C23915) + C23918) * C50835 * C39164 +
           (C23921 - (C23920 + C23919) + C23922) * C50835 * C39165 +
           (C22969 * C1512 - (C22634 * C1509 + C22633 * C1511) +
            C22970 * C50788) *
               C50835 * C39166) *
              C51009 +
          (C21631 * C50835 * C39163 + C33579 * C50835 * C39164 +
           (C24423 + C24422 - C24421 - C24424) * C50835 * C39165 +
           (C22635 * C1511 + C22636 * C1509 -
            (C19767 * C22950 + C50687 * C22951) * C1512 -
            (C19767 * C22952 + C50687 * C22953) * C50788) *
               C50835 * C39166) *
              C1274) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C1744 +
             (C19767 * C133 + C50687 * C143) * C51023 - C22193 * C1745 -
             C22194 * C51012 + C22195 * C1746 + C22196 * C1743) *
                C2173 +
            (C21731 + C21732 - C21733 - C21734 + C21735 + C21736) * C2174 +
            (C21737 + C21738 - C21739 - C21740 + C21741 + C21742) * C2175) *
               C33829 +
           ((C22193 * C1744 + C22194 * C51023 - C22195 * C1745 -
             C22196 * C51012 + C22799 * C1746 + C22800 * C1743) *
                C2173 +
            (C24571 + C24572 - C24573 - C24574 + C24575 + C24576) * C2174 +
            (C33726 + C33727 - C33728 - C33729 + C33730 + C33731) * C2175) *
               C50911) *
              C1169 +
          (((C21733 - (C21732 + C21731) + C21734 - C21735 - C21736) * C2173 +
            (C21739 - (C21738 + C21737) + C21740 - C21741 - C21742) * C2174 +
            (C21745 - (C21744 + C21743) + C21746 - C21747 - C21748) * C2175) *
               C33829 +
           ((C24573 - (C24572 + C24571) + C24574 - C24575 - C24576) * C2173 +
            (C33728 - (C33727 + C33726) + C33729 - C33730 - C33731) * C2174 +
            (C20611 * C1745 - (C20368 * C51023 + C20367 * C1744) +
             C20612 * C51012 - (C19767 * C20684 + C50687 * C20685) * C1746 -
             (C19767 * C20686 + C50687 * C20687) * C1743) *
                C2175) *
               C50911) *
              C50762) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C1744 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C51023 -
            (C34160 + C34161 + C34162) * C1745 -
            (C34163 + C34164 + C34165) * C51012 +
            (C34738 + C34739 + C34740) * C1746 +
            (C34741 + C34742 + C34743) * C1743) *
               C50835 * C33829 +
           ((C34162 + C34161 + C34160) * C1744 +
            (C34165 + C34164 + C34163) * C51023 -
            (C34740 + C34739 + C34738) * C1745 -
            (C34743 + C34742 + C34741) * C51012 +
            (C35008 + C35007 + C35006) * C1746 +
            (C35011 + C35010 + C35009) * C1743) *
               C50835 * C50911) *
              C1169 +
          (((C17803 + C17802 + C17801) * C1745 -
            ((C17174 + C17173 + C17172) * C51023 +
             (C17171 + C17170 + C17169) * C1744) +
            (C17806 + C17805 + C17804) * C51012 -
            (C18119 + C18118 + C18117) * C1746 -
            (C18122 + C18121 + C18120) * C1743) *
               C50835 * C33829 +
           ((C18117 + C18118 + C18119) * C1745 -
            ((C17804 + C17805 + C17806) * C51023 +
             (C17801 + C17802 + C17803) * C1744) +
            (C18120 + C18121 + C18122) * C51012 -
            (C16985 * C6822 + C16980 * C6823 + C16984 * C3498 + C16979 * C3502 +
             C16983 * C3499 + C16978 * C3503) *
                C1746 -
            (C16985 * C6824 + C16980 * C6825 + C16984 * C3504 + C16979 * C3510 +
             C16983 * C3505 + C16978 * C3511) *
                C1743) *
               C50835 * C50911) *
              C50762) *
         C50714) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C1744 +
            (C19767 * C133 + C50687 * C143) * C51023 - C22193 * C1745 -
            C22194 * C51012 + C22195 * C1746 + C22196 * C1743) *
               C50835 * C39163 +
           (C22193 * C1744 + C22194 * C51023 - C22195 * C1745 -
            C22196 * C51012 + C22799 * C1746 + C22800 * C1743) *
               C50835 * C39164 +
           (C22195 * C1744 + C22196 * C51023 - C22799 * C1745 -
            C22800 * C51012 + C23079 * C1746 + C23080 * C1743) *
               C50835 * C39165 +
           (C22799 * C1744 + C22800 * C51023 - C23079 * C1745 -
            C23080 * C51012 + C39908 * C1746 + C39909 * C1743) *
               C50835 * C39166) *
              C1169 +
          ((C21733 - (C21732 + C21731) + C21734 - C21735 - C21736) * C50835 *
               C39163 +
           (C24573 - (C24572 + C24571) + C24574 - C24575 - C24576) * C50835 *
               C39164 +
           (C24579 - (C24578 + C24577) + C24580 - C24581 - C24582) * C50835 *
               C39165 +
           (C22969 * C1745 - (C22634 * C51023 + C22633 * C1744) +
            C22970 * C51012 - (C19767 * C23070 + C50687 * C23071) * C1746 -
            (C19767 * C23072 + C50687 * C23073) * C1743) *
               C50835 * C39166) *
              C50762) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
                 C16985 * C124 + C16980 * C131) *
                    C121 +
                (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
                 C16985 * C135 + C16980 * C145) *
                    C50776) *
                   C50835 * C33829 +
               ((C16983 * C382 + C16978 * C388 + C16984 * C381 + C16979 * C387 +
                 C16985 * C380 + C16980 * C386) *
                    C121 +
                (C16983 * C392 + C16978 * C400 + C16984 * C391 + C16979 * C399 +
                 C16985 * C390 + C16980 * C398) *
                    C50776) *
                   C50835 * C50911) *
                  C50746 * C113 -
              (((C16985 * C389 + C16980 * C397 + C16984 * C390 + C16979 * C398 +
                 C16983 * C391 + C16978 * C399) *
                    C50776 +
                (C16985 * C379 + C16980 * C385 + C16984 * C380 + C16979 * C386 +
                 C16983 * C381 + C16978 * C387) *
                    C121) *
                   C50835 * C50911 +
               ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
                 C16983 * C134 + C16978 * C144) *
                    C50776 +
                (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
                 C16983 * C123 + C16978 * C130) *
                    C121) *
                   C50835 * C33829) *
                  C50746 * C114 +
              (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
                 C16985 * C126 + C16980 * C138) *
                    C121 +
                (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
                 C16985 * C137 + C16980 * C147) *
                    C50776) *
                   C50835 * C33829 +
               ((C16983 * C380 + C16978 * C386 + C16984 * C379 + C16979 * C385 +
                 C16985 * C383 + C16980 * C393) *
                    C121 +
                (C16983 * C390 + C16978 * C398 + C16984 * C389 + C16979 * C397 +
                 C16985 * C394 + C16980 * C401) *
                    C50776) *
                   C50835 * C50911) *
                  C50746 * C115 -
              (((C16985 * C396 + C16980 * C402 + C16984 * C394 + C16979 * C401 +
                 C16983 * C389 + C16978 * C397) *
                    C50776 +
                (C16985 * C384 + C16980 * C395 + C16984 * C383 + C16979 * C393 +
                 C16983 * C379 + C16978 * C385) *
                    C121) *
                   C50835 * C50911 +
               ((C16985 * C140 + C16980 * C148 + C16984 * C137 + C16979 * C147 +
                 C16983 * C136 + C16978 * C146) *
                    C50776 +
                (C16985 * C127 + C16980 * C139 + C16984 * C126 + C16979 * C138 +
                 C16983 * C125 + C16978 * C132) *
                    C121) *
                   C50835 * C33829) *
                  C50746 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                  C16979 * C130 + C16985 * C124 + C16980 * C131) *
                     C121 +
                 (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                  C16979 * C144 + C16985 * C135 + C16980 * C145) *
                     C50776) *
                    C50835 * C33829 +
                ((C34162 + C34161 + C34160) * C121 +
                 (C34165 + C34164 + C34163) * C50776) *
                    C50835 * C50911) *
                   C501 -
               (((C17804 + C17805 + C17806) * C50776 +
                 (C17801 + C17802 + C17803) * C121) *
                    C50835 * C50911 +
                ((C17174 + C17173 + C17172) * C50776 +
                 (C17171 + C17170 + C17169) * C121) *
                    C50835 * C33829) *
                   C502 +
               (((C17508 + C17507 + C17506) * C121 +
                 (C17505 + C17504 + C17503) * C50776) *
                    C50835 * C33829 +
                ((C17807 + C17808 + C17809) * C121 +
                 (C17810 + C17811 + C17812) * C50776) *
                    C50835 * C50911) *
                   C503) *
                  C50968 +
              ((((C17175 + C17176 + C17177) * C121 +
                 (C17178 + C17179 + C17180) * C50776) *
                    C50835 * C33829 +
                ((C18719 + C18720 + C18721) * C121 +
                 (C18722 + C18723 + C18724) * C50776) *
                    C50835 * C50911) *
                   C502 -
               (((C34171 + C34170 + C34169) * C50776 +
                 (C34168 + C34167 + C34166) * C121) *
                    C50835 * C50911 +
                ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                  C16979 * C145 + C16983 * C134 + C16978 * C144) *
                     C50776 +
                 (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                  C16979 * C131 + C16983 * C123 + C16978 * C130) *
                     C121) *
                    C50835 * C33829) *
                   C501 -
               (((C16985 * C731 + C16980 * C739 + C16984 * C732 +
                  C16979 * C740 + C16983 * C733 + C16978 * C741) *
                     C50776 +
                 (C16985 * C715 + C16980 * C727 + C16984 * C716 +
                  C16979 * C728 + C16983 * C717 + C16978 * C729) *
                     C121) *
                    C50835 * C50911 +
                ((C17514 + C17513 + C17512) * C50776 +
                 (C17511 + C17510 + C17509) * C121) *
                    C50835 * C33829) *
                   C503) *
                  C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C844 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C841 -
            (C34160 + C34161 + C34162) * C845 -
            (C34163 + C34164 + C34165) * C842 +
            (C34738 + C34739 + C34740) * C846 +
            (C34741 + C34742 + C34743) * C843) *
               C50835 * C33829 +
           ((C34162 + C34161 + C34160) * C844 +
            (C34165 + C34164 + C34163) * C841 -
            (C34740 + C34739 + C34738) * C845 -
            (C34743 + C34742 + C34741) * C842 +
            (C16983 * C1058 + C16978 * C1062 + C16984 * C1057 + C16979 * C1061 +
             C16985 * C1056 + C16980 * C1060) *
                C846 +
            (C16983 * C1066 + C16978 * C1070 + C16984 * C1065 + C16979 * C1069 +
             C16985 * C1064 + C16980 * C1068) *
                C843) *
               C50835 * C50911) *
              C50746 * C50968 +
          (((C34166 + C34167 + C34168) * C845 -
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C841 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C844) +
            (C34169 + C34170 + C34171) * C842 -
            (C34744 + C34745 + C34746) * C846 -
            (C34747 + C34748 + C34749) * C843) *
               C50835 * C33829 +
           ((C34746 + C34745 + C34744) * C845 -
            ((C34171 + C34170 + C34169) * C841 +
             (C34168 + C34167 + C34166) * C844) +
            (C34749 + C34748 + C34747) * C842 -
            (C16985 * C1055 + C16980 * C1059 + C16984 * C1056 + C16979 * C1060 +
             C16983 * C1057 + C16978 * C1061) *
                C846 -
            (C16985 * C1063 + C16980 * C1067 + C16984 * C1064 + C16979 * C1068 +
             C16983 * C1065 + C16978 * C1069) *
                C843) *
               C50835 * C50911) *
              C50746 * C50719)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C2173 +
            (C19921 + C19922) * C2174 + C20135 * C2175) *
               C33829 +
           ((C22193 * C121 + C22194 * C50776) * C2173 +
            (C21993 + C21994) * C2174 + C31599 * C2175) *
               C50911) *
              C50746 * C113 -
          ((C31602 * C2175 + (C21998 + C21997) * C2174 +
            (C22198 * C50776 + C22197 * C121) * C2173) *
               C50911 +
           (C20146 * C2175 + (C19928 + C19927) * C2174 +
            ((C19767 * C134 + C50687 * C144) * C50776 +
             (C19767 * C123 + C50687 * C130) * C121) *
                C2173) *
               C33829) *
              C50746 * C114 +
          ((((C19767 * C124 + C50687 * C131) * C121 +
             (C19767 * C135 + C50687 * C145) * C50776) *
                C2173 +
            (C19933 + C19934) * C2174 + (C19935 + C19936) * C2175) *
               C33829 +
           ((C22201 * C121 + C22202 * C50776) * C2173 +
            (C22019 + C22020) * C2174 + (C31305 + C31306) * C2175) *
               C50911) *
              C50746 * C115 -
          ((((C19767 * C731 + C50687 * C739) * C50776 +
             (C19767 * C715 + C50687 * C727) * C121) *
                C2175 +
            ((C19767 * C726 + C50687 * C738) * C50776 +
             (C19767 * C714 + C50687 * C722) * C121) *
                C2174 +
            ((C19767 * C389 + C50687 * C397) * C50776 +
             (C19767 * C379 + C50687 * C385) * C121) *
                C2173) *
               C50911 +
           (((C19767 * C518 + C50687 * C524) * C50776 +
             (C19767 * C509 + C50687 * C514) * C121) *
                C2175 +
            ((C19767 * C259 + C50687 * C271) * C50776 +
             (C19767 * C253 + C50687 * C263) * C121) *
                C2174 +
            ((C19767 * C136 + C50687 * C146) * C50776 +
             (C19767 * C125 + C50687 * C132) * C121) *
                C2173) *
               C33829) *
              C50746 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C2173 +
             (C19921 + C19922) * C2174 + C20135 * C2175) *
                C33829 +
            ((C22193 * C121 + C22194 * C50776) * C2173 +
             (C21993 + C21994) * C2174 + C31599 * C2175) *
                C50911) *
               C501 -
           ((C31701 * C2175 + (C22353 + C22354) * C2174 +
             (C21994 + C21993) * C2173) *
                C50911 +
            (C20226 * C2175 + (C19924 + C19923) * C2174 +
             (C19922 + C19921) * C2173) *
                C33829) *
               C502 +
           ((C20135 * C2173 + C20136 * C2174 + (C20152 + C20151) * C2175) *
                C33829 +
            (C31599 * C2173 + (C22463 + C22464) * C2174 +
             (C31702 + C31703) * C2175) *
                C50911) *
               C503) *
              C50968 +
          ((((C19927 + C19928) * C2173 + (C19929 + C19930) * C2174 +
             (C19931 + C19932) * C2175) *
                C33829 +
            ((C21997 + C21998) * C2173 + (C22355 + C22356) * C2174 +
             (C31600 + C31601) * C2175) *
                C50911) *
               C502 -
           ((C31602 * C2175 + (C21998 + C21997) * C2174 +
             (C22198 * C50776 + C22197 * C121) * C2173) *
                C50911 +
            (C20146 * C2175 + (C19928 + C19927) * C2174 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C2173) *
                C33829) *
               C501 -
           ((((C19767 * C3013 + C50687 * C3017) * C50776 +
              (C19767 * C3005 + C50687 * C3011) * C121) *
                 C2175 +
             (C31601 + C31600) * C2174 + C31602 * C2173) *
                C50911 +
            ((C20154 + C20153) * C2175 + C20145 * C2174 + C20146 * C2173) *
                C33829) *
               C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C844 +
             (C19767 * C133 + C50687 * C143) * C841 - C22193 * C845 -
             C22194 * C842 + C22195 * C846 + C22196 * C843) *
                C2173 +
            (C20583 + C20584 - C20585 - C20586 + C20613 + C20614) * C2174 +
            (C20591 + C20592 - C20593 - C20594 + C20615 + C20616) * C2175) *
               C33829 +
           ((C22193 * C844 + C22194 * C841 - C22195 * C845 - C22196 * C842 +
             C22799 * C846 + C22800 * C843) *
                C2173 +
            (C22955 + C22956 - C22957 - C22958 + C22959 + C22960) * C2174 +
            (C32149 + C32150 - C32151 - C32152 + C32153 + C32154) * C2175) *
               C50911) *
              C50746 * C50968 +
          (((C22197 * C845 -
             ((C19767 * C134 + C50687 * C144) * C841 +
              (C19767 * C123 + C50687 * C130) * C844) +
             C22198 * C842 - C22199 * C846 - C22200 * C843) *
                C2173 +
            (C21033 * C845 - (C19910 * C841 + C19909 * C844) + C21034 * C842 -
             C22011 * C846 - C22012 * C843) *
                C2174 +
            (C21035 * C845 - (C19912 * C841 + C19911 * C844) + C21036 * C842 -
             C22361 * C846 - C22362 * C843) *
                C2175) *
               C33829 +
           ((C22199 * C845 - (C22198 * C841 + C22197 * C844) + C22200 * C842 -
             C22801 * C846 - C22802 * C843) *
                C2173 +
            (C22011 * C845 - (C21034 * C841 + C21033 * C844) + C22012 * C842 -
             C22803 * C846 - C22804 * C843) *
                C2174 +
            (C22361 * C845 - (C21036 * C841 + C21035 * C844) + C22362 * C842 -
             (C19767 * C3500 + C50687 * C3506) * C846 -
             (C19767 * C3508 + C50687 * C3512) * C843) *
                C2175) *
               C50911) *
              C50746 * C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C121 +
            (C19767 * C133 + C50687 * C143) * C50776) *
               C50835 * C39163 +
           (C22193 * C121 + C22194 * C50776) * C50835 * C39164 +
           (C22195 * C121 + C22196 * C50776) * C50835 * C39165 +
           (C22799 * C121 + C22800 * C50776) * C50835 * C39166) *
              C50746 * C113 -
          ((C22802 * C50776 + C22801 * C121) * C50835 * C39166 +
           (C22200 * C50776 + C22199 * C121) * C50835 * C39165 +
           (C22198 * C50776 + C22197 * C121) * C50835 * C39164 +
           ((C19767 * C134 + C50687 * C144) * C50776 +
            (C19767 * C123 + C50687 * C130) * C121) *
               C50835 * C39163) *
              C50746 * C114 +
          (((C19767 * C124 + C50687 * C131) * C121 +
            (C19767 * C135 + C50687 * C145) * C50776) *
               C50835 * C39163 +
           (C22201 * C121 + C22202 * C50776) * C50835 * C39164 +
           (C22203 * C121 + C22204 * C50776) * C50835 * C39165 +
           ((C19767 * C1056 + C50687 * C1060) * C121 +
            (C19767 * C1064 + C50687 * C1068) * C50776) *
               C50835 * C39166) *
              C50746 * C115 -
          (((C19767 * C1063 + C50687 * C1067) * C50776 +
            (C19767 * C1055 + C50687 * C1059) * C121) *
               C50835 * C39166 +
           ((C19767 * C859 + C50687 * C865) * C50776 +
            (C19767 * C850 + C50687 * C855) * C121) *
               C50835 * C39165 +
           ((C19767 * C389 + C50687 * C397) * C50776 +
            (C19767 * C379 + C50687 * C385) * C121) *
               C50835 * C39164 +
           ((C19767 * C136 + C50687 * C146) * C50776 +
            (C19767 * C125 + C50687 * C132) * C121) *
               C50835 * C39163) *
              C50746 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C50835 * C39163 +
            (C22193 * C121 + C22194 * C50776) * C50835 * C39164 +
            (C22195 * C121 + C22196 * C50776) * C50835 * C39165 +
            (C22799 * C121 + C22800 * C50776) * C50835 * C39166) *
               C501 -
           ((C22634 * C50776 + C22633 * C121) * C50835 * C39166 +
            (C21996 + C21995) * C50835 * C39165 +
            (C21994 + C21993) * C50835 * C39164 +
            (C19922 + C19921) * C50835 * C39163) *
               C502 +
           (C20135 * C50835 * C39163 + C31599 * C50835 * C39164 +
            (C22352 + C22351) * C50835 * C39165 +
            (C22635 * C121 + C22636 * C50776) * C50835 * C39166) *
               C503) *
              C50968 +
          (((C19927 + C19928) * C50835 * C39163 +
            (C21997 + C21998) * C50835 * C39164 +
            (C22017 + C22018) * C50835 * C39165 +
            (C22803 * C121 + C22804 * C50776) * C50835 * C39166) *
               C502 -
           ((C22802 * C50776 + C22801 * C121) * C50835 * C39166 +
            (C22200 * C50776 + C22199 * C121) * C50835 * C39165 +
            (C22198 * C50776 + C22197 * C121) * C50835 * C39164 +
            ((C19767 * C134 + C50687 * C144) * C50776 +
             (C19767 * C123 + C50687 * C130) * C121) *
                C50835 * C39163) *
               C501 -
           (((C19767 * C3508 + C50687 * C3512) * C50776 +
             (C19767 * C3500 + C50687 * C3506) * C121) *
                C50835 * C39166 +
            (C22364 + C22363) * C50835 * C39165 + C31602 * C50835 * C39164 +
            C20146 * C50835 * C39163) *
               C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C844 +
            (C19767 * C133 + C50687 * C143) * C841 - C22193 * C845 -
            C22194 * C842 + C22195 * C846 + C22196 * C843) *
               C50835 * C39163 +
           (C22193 * C844 + C22194 * C841 - C22195 * C845 - C22196 * C842 +
            C22799 * C846 + C22800 * C843) *
               C50835 * C39164 +
           (C22195 * C844 + C22196 * C841 - C22799 * C845 - C22800 * C842 +
            C23079 * C846 + C23080 * C843) *
               C50835 * C39165 +
           (C22799 * C844 + C22800 * C841 - C23079 * C845 - C23080 * C842 +
            (C19767 * C6315 + C50687 * C6317) * C846 +
            (C19767 * C6319 + C50687 * C6321) * C843) *
               C50835 * C39166) *
              C50746 * C50968 +
          ((C22197 * C845 -
            ((C19767 * C134 + C50687 * C144) * C841 +
             (C19767 * C123 + C50687 * C130) * C844) +
            C22198 * C842 - C22199 * C846 - C22200 * C843) *
               C50835 * C39163 +
           (C22199 * C845 - (C22198 * C841 + C22197 * C844) + C22200 * C842 -
            C22801 * C846 - C22802 * C843) *
               C50835 * C39164 +
           (C22801 * C845 - (C22200 * C841 + C22199 * C844) + C22802 * C842 -
            C39734 * C846 - C39735 * C843) *
               C50835 * C39165 +
           (C39734 * C845 - (C22802 * C841 + C22801 * C844) + C39735 * C842 -
            (C19767 * C6314 + C50687 * C6316) * C846 -
            (C19767 * C6318 + C50687 * C6320) * C843) *
               C50835 * C39166) *
              C50746 * C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                  C16979 * C130 + C16985 * C124 + C16980 * C131) *
                     C121 +
                 (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                  C16979 * C144 + C16985 * C135 + C16980 * C145) *
                     C50776) *
                    C50835 * C33829 +
                ((C16983 * C382 + C16978 * C388 + C16984 * C381 +
                  C16979 * C387 + C16985 * C380 + C16980 * C386) *
                     C121 +
                 (C16983 * C392 + C16978 * C400 + C16984 * C391 +
                  C16979 * C399 + C16985 * C390 + C16980 * C398) *
                     C50776) *
                    C50835 * C50911) *
                   C50975 -
               (((C17804 + C17805 + C17806) * C50776 +
                 (C17801 + C17802 + C17803) * C121) *
                    C50835 * C50911 +
                ((C17174 + C17173 + C17172) * C50776 +
                 (C17171 + C17170 + C17169) * C121) *
                    C50835 * C33829) *
                   C50762) *
                  C250 +
              ((((C17175 + C17176 + C17177) * C121 +
                 (C17178 + C17179 + C17180) * C50776) *
                    C50835 * C33829 +
                ((C18719 + C18720 + C18721) * C121 +
                 (C18722 + C18723 + C18724) * C50776) *
                    C50835 * C50911) *
                   C50762 -
               (((C16985 * C389 + C16980 * C397 + C16984 * C390 +
                  C16979 * C398 + C16983 * C391 + C16978 * C399) *
                     C50776 +
                 (C16985 * C379 + C16980 * C385 + C16984 * C380 +
                  C16979 * C386 + C16983 * C381 + C16978 * C387) *
                     C121) *
                    C50835 * C50911 +
                ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                  C16979 * C145 + C16983 * C134 + C16978 * C144) *
                     C50776 +
                 (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                  C16979 * C131 + C16983 * C123 + C16978 * C130) *
                     C121) *
                    C50835 * C33829) *
                   C50975) *
                  C251 +
              ((((C16983 * C124 + C16978 * C131 + C16984 * C125 +
                  C16979 * C132 + C16985 * C126 + C16980 * C138) *
                     C121 +
                 (C16983 * C135 + C16978 * C145 + C16984 * C136 +
                  C16979 * C146 + C16985 * C137 + C16980 * C147) *
                     C50776) *
                    C50835 * C33829 +
                ((C16983 * C380 + C16978 * C386 + C16984 * C379 +
                  C16979 * C385 + C16985 * C383 + C16980 * C393) *
                     C121 +
                 (C16983 * C390 + C16978 * C398 + C16984 * C389 +
                  C16979 * C397 + C16985 * C394 + C16980 * C401) *
                     C50776) *
                    C50835 * C50911) *
                   C50975 -
               (((C16985 * C1409 + C16980 * C1410 + C16984 * C726 +
                  C16979 * C738 + C16983 * C725 + C16978 * C737) *
                     C50776 +
                 (C16985 * C1407 + C16980 * C1408 + C16984 * C714 +
                  C16979 * C722 + C16983 * C713 + C16978 * C721) *
                     C121) *
                    C50835 * C50911 +
                ((C17186 + C17185 + C17184) * C50776 +
                 (C17183 + C17182 + C17181) * C121) *
                    C50835 * C33829) *
                   C50762) *
                  C252) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
                 C16985 * C124 + C16980 * C131) *
                    C121 +
                (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
                 C16985 * C135 + C16980 * C145) *
                    C50776) *
                   C50835 * C33829 +
               ((C34162 + C34161 + C34160) * C121 +
                (C34165 + C34164 + C34163) * C50776) *
                   C50835 * C50911) *
                  C592 -
              (((C17804 + C17805 + C17806) * C50776 +
                (C17801 + C17802 + C17803) * C121) *
                   C50835 * C50911 +
               ((C17174 + C17173 + C17172) * C50776 +
                (C17171 + C17170 + C17169) * C121) *
                   C50835 * C33829) *
                  C593 +
              (((C17508 + C17507 + C17506) * C121 +
                (C17505 + C17504 + C17503) * C50776) *
                   C50835 * C33829 +
               ((C17807 + C17808 + C17809) * C121 +
                (C17810 + C17811 + C17812) * C50776) *
                   C50835 * C50911) *
                  C594 -
              (((C16985 * C4002 + C16980 * C4003 + C16984 * C3010 +
                 C16979 * C3016 + C16983 * C3009 + C16978 * C3015) *
                    C50776 +
                (C16985 * C4000 + C16980 * C4001 + C16984 * C3004 +
                 C16979 * C3008 + C16983 * C3003 + C16978 * C3007) *
                    C121) *
                   C50835 * C50911 +
               ((C17630 + C17629 + C17628) * C50776 +
                (C17627 + C17626 + C17625) * C121) *
                   C50835 * C33829) *
                  C595) *
             C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C844 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C841 -
            (C34160 + C34161 + C34162) * C845 -
            (C34163 + C34164 + C34165) * C842 +
            (C34738 + C34739 + C34740) * C846 +
            (C34741 + C34742 + C34743) * C843) *
               C50835 * C33829 +
           ((C34162 + C34161 + C34160) * C844 +
            (C34165 + C34164 + C34163) * C841 -
            (C34740 + C34739 + C34738) * C845 -
            (C34743 + C34742 + C34741) * C842 +
            (C16983 * C1058 + C16978 * C1062 + C16984 * C1057 + C16979 * C1061 +
             C16985 * C1056 + C16980 * C1060) *
                C846 +
            (C16983 * C1066 + C16978 * C1070 + C16984 * C1065 + C16979 * C1069 +
             C16985 * C1064 + C16980 * C1068) *
                C843) *
               C50835 * C50911) *
              C50975 +
          (((C17803 + C17802 + C17801) * C845 -
            ((C17174 + C17173 + C17172) * C841 +
             (C17171 + C17170 + C17169) * C844) +
            (C17806 + C17805 + C17804) * C842 -
            (C18119 + C18118 + C18117) * C846 -
            (C18122 + C18121 + C18120) * C843) *
               C50835 * C33829 +
           ((C18117 + C18118 + C18119) * C845 -
            ((C17804 + C17805 + C17806) * C841 +
             (C17801 + C17802 + C17803) * C844) +
            (C18120 + C18121 + C18122) * C842 -
            (C16985 * C6822 + C16980 * C6823 + C16984 * C3498 + C16979 * C3502 +
             C16983 * C3499 + C16978 * C3503) *
                C846 -
            (C16985 * C6824 + C16980 * C6825 + C16984 * C3504 + C16979 * C3510 +
             C16983 * C3505 + C16978 * C3511) *
                C843) *
               C50835 * C50911) *
              C50762) *
         C50714) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C2173 +
             (C19921 + C19922) * C2174 + C20135 * C2175) *
                C33829 +
            ((C22193 * C121 + C22194 * C50776) * C2173 +
             (C21993 + C21994) * C2174 + C31599 * C2175) *
                C50911) *
               C50975 -
           ((C31701 * C2175 + (C22353 + C22354) * C2174 +
             (C21994 + C21993) * C2173) *
                C50911 +
            (C20226 * C2175 + (C19924 + C19923) * C2174 +
             (C19922 + C19921) * C2173) *
                C33829) *
               C50762) *
              C250 +
          ((((C19927 + C19928) * C2173 + (C19929 + C19930) * C2174 +
             (C19931 + C19932) * C2175) *
                C33829 +
            ((C21997 + C21998) * C2173 + (C22355 + C22356) * C2174 +
             (C31600 + C31601) * C2175) *
                C50911) *
               C50762 -
           ((C31602 * C2175 + (C21998 + C21997) * C2174 +
             (C22198 * C50776 + C22197 * C121) * C2173) *
                C50911 +
            (C20146 * C2175 + (C19928 + C19927) * C2174 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C2173) *
                C33829) *
               C50975) *
              C251 +
          (((((C19767 * C124 + C50687 * C131) * C121 +
              (C19767 * C135 + C50687 * C145) * C50776) *
                 C2173 +
             (C19933 + C19934) * C2174 + (C19935 + C19936) * C2175) *
                C33829 +
            ((C22201 * C121 + C22202 * C50776) * C2173 +
             (C22019 + C22020) * C2174 + (C31305 + C31306) * C2175) *
                C50911) *
               C50975 -
           ((((C19767 * C4002 + C50687 * C4003) * C50776 +
              (C19767 * C4000 + C50687 * C4001) * C121) *
                 C2175 +
             (C31306 + C31305) * C2174 + (C22020 + C22019) * C2173) *
                C50911 +
            ((C19938 + C19937) * C2175 + (C19936 + C19935) * C2174 +
             (C19934 + C19933) * C2173) *
                C33829) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C2173 +
            (C19921 + C19922) * C2174 + C20135 * C2175) *
               C33829 +
           ((C22193 * C121 + C22194 * C50776) * C2173 +
            (C21993 + C21994) * C2174 + C31599 * C2175) *
               C50911) *
              C592 -
          ((C31701 * C2175 + (C22353 + C22354) * C2174 +
            (C21994 + C21993) * C2173) *
               C50911 +
           (C20226 * C2175 + (C19924 + C19923) * C2174 +
            (C19922 + C19921) * C2173) *
               C33829) *
              C593 +
          ((C20135 * C2173 + C20136 * C2174 + (C20152 + C20151) * C2175) *
               C33829 +
           (C31599 * C2173 + (C22463 + C22464) * C2174 +
            (C31702 + C31703) * C2175) *
               C50911) *
              C594 -
          ((((C19767 * C20334 + C50687 * C20335) * C50776 +
             (C19767 * C20332 + C50687 * C20333) * C121) *
                C2175 +
            (C31703 + C31702) * C2174 + C31701 * C2173) *
               C50911 +
           ((C20234 + C20233) * C2175 + C20225 * C2174 + C20226 * C2173) *
               C33829) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C844 +
             (C19767 * C133 + C50687 * C143) * C841 - C22193 * C845 -
             C22194 * C842 + C22195 * C846 + C22196 * C843) *
                C2173 +
            (C20583 + C20584 - C20585 - C20586 + C20613 + C20614) * C2174 +
            (C20591 + C20592 - C20593 - C20594 + C20615 + C20616) * C2175) *
               C33829 +
           ((C22193 * C844 + C22194 * C841 - C22195 * C845 - C22196 * C842 +
             C22799 * C846 + C22800 * C843) *
                C2173 +
            (C22955 + C22956 - C22957 - C22958 + C22959 + C22960) * C2174 +
            (C32149 + C32150 - C32151 - C32152 + C32153 + C32154) * C2175) *
               C50911) *
              C50975 +
          (((C20585 - (C20584 + C20583) + C20586 - C20613 - C20614) * C2173 +
            (C20593 - (C20592 + C20591) + C20594 - C20615 - C20616) * C2174 +
            (C20601 - (C20600 + C20599) + C20602 - C20617 - C20618) * C2175) *
               C33829 +
           ((C22957 - (C22956 + C22955) + C22958 - C22959 - C22960) * C2173 +
            (C32151 - (C32150 + C32149) + C32152 - C32153 - C32154) * C2174 +
            (C20611 * C845 - (C20368 * C841 + C20367 * C844) + C20612 * C842 -
             (C19767 * C20684 + C50687 * C20685) * C846 -
             (C19767 * C20686 + C50687 * C20687) * C843) *
                C2175) *
               C50911) *
              C50762) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C50835 * C39163 +
            (C22193 * C121 + C22194 * C50776) * C50835 * C39164 +
            (C22195 * C121 + C22196 * C50776) * C50835 * C39165 +
            (C22799 * C121 + C22800 * C50776) * C50835 * C39166) *
               C50975 -
           ((C22634 * C50776 + C22633 * C121) * C50835 * C39166 +
            (C21996 + C21995) * C50835 * C39165 +
            (C21994 + C21993) * C50835 * C39164 +
            (C19922 + C19921) * C50835 * C39163) *
               C50762) *
              C250 +
          (((C19927 + C19928) * C50835 * C39163 +
            (C21997 + C21998) * C50835 * C39164 +
            (C22017 + C22018) * C50835 * C39165 +
            (C22803 * C121 + C22804 * C50776) * C50835 * C39166) *
               C50762 -
           ((C22802 * C50776 + C22801 * C121) * C50835 * C39166 +
            (C22200 * C50776 + C22199 * C121) * C50835 * C39165 +
            (C22198 * C50776 + C22197 * C121) * C50835 * C39164 +
            ((C19767 * C134 + C50687 * C144) * C50776 +
             (C19767 * C123 + C50687 * C130) * C121) *
                C50835 * C39163) *
               C50975) *
              C251 +
          ((((C19767 * C124 + C50687 * C131) * C121 +
             (C19767 * C135 + C50687 * C145) * C50776) *
                C50835 * C39163 +
            (C22201 * C121 + C22202 * C50776) * C50835 * C39164 +
            (C22203 * C121 + C22204 * C50776) * C50835 * C39165 +
            ((C19767 * C1056 + C50687 * C1060) * C121 +
             (C19767 * C1064 + C50687 * C1068) * C50776) *
                C50835 * C39166) *
               C50975 -
           (((C19767 * C6824 + C50687 * C6825) * C50776 +
             (C19767 * C6822 + C50687 * C6823) * C121) *
                C50835 * C39166 +
            (C22022 + C22021) * C50835 * C39165 +
            (C22020 + C22019) * C50835 * C39164 +
            (C19934 + C19933) * C50835 * C39163) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C121 +
            (C19767 * C133 + C50687 * C143) * C50776) *
               C50835 * C39163 +
           (C22193 * C121 + C22194 * C50776) * C50835 * C39164 +
           (C22195 * C121 + C22196 * C50776) * C50835 * C39165 +
           (C22799 * C121 + C22800 * C50776) * C50835 * C39166) *
              C592 -
          ((C22634 * C50776 + C22633 * C121) * C50835 * C39166 +
           (C21996 + C21995) * C50835 * C39165 +
           (C21994 + C21993) * C50835 * C39164 +
           (C19922 + C19921) * C50835 * C39163) *
              C593 +
          (C20135 * C50835 * C39163 + C31599 * C50835 * C39164 +
           (C22352 + C22351) * C50835 * C39165 +
           (C22635 * C121 + C22636 * C50776) * C50835 * C39166) *
              C594 -
          (((C19767 * C20686 + C50687 * C20687) * C50776 +
            (C19767 * C20684 + C50687 * C20685) * C121) *
               C50835 * C39166 +
           (C22466 + C22465) * C50835 * C39165 + C31701 * C50835 * C39164 +
           C20226 * C50835 * C39163) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C844 +
            (C19767 * C133 + C50687 * C143) * C841 - C22193 * C845 -
            C22194 * C842 + C22195 * C846 + C22196 * C843) *
               C50835 * C39163 +
           (C22193 * C844 + C22194 * C841 - C22195 * C845 - C22196 * C842 +
            C22799 * C846 + C22800 * C843) *
               C50835 * C39164 +
           (C22195 * C844 + C22196 * C841 - C22799 * C845 - C22800 * C842 +
            C23079 * C846 + C23080 * C843) *
               C50835 * C39165 +
           (C22799 * C844 + C22800 * C841 - C23079 * C845 - C23080 * C842 +
            (C19767 * C6315 + C50687 * C6317) * C846 +
            (C19767 * C6319 + C50687 * C6321) * C843) *
               C50835 * C39166) *
              C50975 +
          ((C20585 - (C20584 + C20583) + C20586 - C20613 - C20614) * C50835 *
               C39163 +
           (C22957 - (C22956 + C22955) + C22958 - C22959 - C22960) * C50835 *
               C39164 +
           (C22963 - (C22962 + C22961) + C22964 - C22971 - C22972) * C50835 *
               C39165 +
           (C22969 * C845 - (C22634 * C841 + C22633 * C844) + C22970 * C842 -
            (C19767 * C23070 + C50687 * C23071) * C846 -
            (C19767 * C23072 + C50687 * C23073) * C843) *
               C50835 * C39166) *
              C50762) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
                 C16985 * C124 + C16980 * C131) *
                    C377 +
                (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
                 C16985 * C135 + C16980 * C145) *
                    C50977 -
                (C34160 + C34161 + C34162) * C378 -
                (C34163 + C34164 + C34165) * C50788) *
                   C50835 * C33829 +
               ((C34162 + C34161 + C34160) * C377 +
                (C34165 + C34164 + C34163) * C50977 -
                (C16985 * C849 + C16980 * C854 + C16984 * C848 + C16979 * C853 +
                 C16983 * C847 + C16978 * C852) *
                    C378 -
                (C16985 * C858 + C16980 * C864 + C16984 * C857 + C16979 * C863 +
                 C16983 * C856 + C16978 * C862) *
                    C50788) *
                   C50835 * C50911) *
                  C50746 * C250 +
              (((C34166 + C34167 + C34168) * C378 -
                ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                  C16979 * C145 + C16983 * C134 + C16978 * C144) *
                     C50977 +
                 (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                  C16979 * C131 + C16983 * C123 + C16978 * C130) *
                     C377) +
                (C34169 + C34170 + C34171) * C50788) *
                   C50835 * C33829 +
               ((C16983 * C848 + C16978 * C853 + C16984 * C849 + C16979 * C854 +
                 C16985 * C850 + C16980 * C855) *
                    C378 -
                ((C34171 + C34170 + C34169) * C50977 +
                 (C34168 + C34167 + C34166) * C377) +
                (C16983 * C857 + C16978 * C863 + C16984 * C858 + C16979 * C864 +
                 C16985 * C859 + C16980 * C865) *
                    C50788) *
                   C50835 * C50911) *
                  C50746 * C251 +
              (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
                 C16985 * C126 + C16980 * C138) *
                    C377 +
                (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
                 C16985 * C137 + C16980 * C147) *
                    C50977 -
                (C34172 + C34173 + C34174) * C378 -
                (C34175 + C34176 + C34177) * C50788) *
                   C50835 * C33829 +
               ((C34174 + C34173 + C34172) * C377 +
                (C34177 + C34176 + C34175) * C50977 -
                (C16985 * C851 + C16980 * C860 + C16984 * C850 + C16979 * C855 +
                 C16983 * C849 + C16978 * C854) *
                    C378 -
                (C16985 * C861 + C16980 * C866 + C16984 * C859 + C16979 * C865 +
                 C16983 * C858 + C16978 * C864) *
                    C50788) *
                   C50835 * C50911) *
                  C50746 * C252) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
                 C16985 * C124 + C16980 * C131) *
                    C377 +
                (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
                 C16985 * C135 + C16980 * C145) *
                    C50977 -
                (C34160 + C34161 + C34162) * C378 -
                (C34163 + C34164 + C34165) * C50788) *
                   C50835 * C33829 +
               ((C34162 + C34161 + C34160) * C377 +
                (C34165 + C34164 + C34163) * C50977 -
                (C16985 * C849 + C16980 * C854 + C16984 * C848 + C16979 * C853 +
                 C16983 * C847 + C16978 * C852) *
                    C378 -
                (C16985 * C858 + C16980 * C864 + C16984 * C857 + C16979 * C863 +
                 C16983 * C856 + C16978 * C862) *
                    C50788) *
                   C50835 * C50911) *
                  C501 +
              (((C17803 + C17802 + C17801) * C378 -
                ((C17174 + C17173 + C17172) * C50977 +
                 (C17171 + C17170 + C17169) * C377) +
                (C17806 + C17805 + C17804) * C50788) *
                   C50835 * C33829 +
               ((C18117 + C18118 + C18119) * C378 -
                ((C17804 + C17805 + C17806) * C50977 +
                 (C17801 + C17802 + C17803) * C377) +
                (C18120 + C18121 + C18122) * C50788) *
                   C50835 * C50911) *
                  C502 +
              (((C17508 + C17507 + C17506) * C377 +
                (C17505 + C17504 + C17503) * C50977 -
                (C17809 + C17808 + C17807) * C378 -
                (C17812 + C17811 + C17810) * C50788) *
                   C50835 * C33829 +
               ((C17807 + C17808 + C17809) * C377 +
                (C17810 + C17811 + C17812) * C50977 -
                (C16985 * C3212 + C16980 * C3217 + C16984 * C3211 +
                 C16979 * C3214 + C16983 * C3210 + C16978 * C3213) *
                    C378 -
                (C16985 * C3218 + C16980 * C3221 + C16984 * C3216 +
                 C16979 * C3220 + C16983 * C3215 + C16978 * C3219) *
                    C50788) *
                   C50835 * C50911) *
                  C503) *
             C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
            C16985 * C124 + C16980 * C131) *
               C1051 +
           (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
            C16985 * C135 + C16980 * C145) *
               C1047 -
           (C34160 + C34161 + C34162) * C1052 -
           (C34163 + C34164 + C34165) * C1048 +
           (C34738 + C34739 + C34740) * C1053 +
           (C34741 + C34742 + C34743) * C1049 -
           (C35006 + C35007 + C35008) * C1054 -
           (C35009 + C35010 + C35011) * C1050) *
              C50835 * C33829 +
          ((C34162 + C34161 + C34160) * C1051 +
           (C34165 + C34164 + C34163) * C1047 -
           (C34740 + C34739 + C34738) * C1052 -
           (C34743 + C34742 + C34741) * C1048 +
           (C35008 + C35007 + C35006) * C1053 +
           (C35011 + C35010 + C35009) * C1049 -
           (C16985 * C6010 + C16980 * C6015 + C16984 * C6009 + C16979 * C6012 +
            C16983 * C6008 + C16978 * C6011) *
               C1054 -
           (C16985 * C6016 + C16980 * C6019 + C16984 * C6014 + C16979 * C6018 +
            C16983 * C6013 + C16978 * C6017) *
               C1050) *
              C50835 * C50911) *
         C50746 * C50714) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C377 +
             (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
             C22194 * C50788) *
                C2173 +
            (C20337 + C20338 - C20371 - C20372) * C2174 + C20381 * C2175) *
               C33829 +
           ((C22193 * C377 + C22194 * C50977 - C22195 * C378 -
             C22196 * C50788) *
                C2173 +
            (C22613 + C22614 - C22615 - C22616) * C2174 + C31856 * C2175) *
               C50911) *
              C50746 * C250 +
          (((C22197 * C378 -
             ((C19767 * C134 + C50687 * C144) * C50977 +
              (C19767 * C123 + C50687 * C130) * C377) +
             C22198 * C50788) *
                C2173 +
            (C21039 - (C21017 + C21018) + C21040) * C2174 +
            (C21041 - (C21023 + C21024) + C21042) * C2175) *
               C33829 +
           ((C22199 * C378 - (C22198 * C50977 + C22197 * C377) +
             C22200 * C50788) *
                C2173 +
            (C23567 - (C23568 + C23569) + C23570) * C2174 +
            (C32739 - (C32740 + C32741) + C32742) * C2175) *
               C50911) *
              C50746 * C251 +
          ((((C19767 * C124 + C50687 * C131) * C377 +
             (C19767 * C135 + C50687 * C145) * C50977 - C22201 * C378 -
             C22202 * C50788) *
                C2173 +
            (C19915 * C377 + C19916 * C50977 - C22013 * C378 -
             C22014 * C50788) *
                C2174 +
            (C19917 * C377 + C19918 * C50977 - C31303 * C378 -
             C31304 * C50788) *
                C2175) *
               C33829 +
           ((C22201 * C377 + C22202 * C50977 - C22203 * C378 -
             C22204 * C50788) *
                C2173 +
            (C22013 * C377 + C22014 * C50977 - C22015 * C378 -
             C22016 * C50788) *
                C2174 +
            (C31303 * C377 + C31304 * C50977 -
             (C19767 * C3212 + C50687 * C3217) * C378 -
             (C19767 * C3218 + C50687 * C3221) * C50788) *
                C2175) *
               C50911) *
              C50746 * C252)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C377 +
             (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
             C22194 * C50788) *
                C2173 +
            (C20337 + C20338 - C20371 - C20372) * C2174 + C20381 * C2175) *
               C33829 +
           ((C22193 * C377 + C22194 * C50977 - C22195 * C378 -
             C22196 * C50788) *
                C2173 +
            (C22613 + C22614 - C22615 - C22616) * C2174 + C31856 * C2175) *
               C50911) *
              C501 +
          (((C20371 - (C20338 + C20337) + C20372) * C2173 +
            (C20373 - (C20344 + C20343) + C20374) * C2174 +
            (C20375 - (C20350 + C20349) + C20376) * C2175) *
               C33829 +
           ((C22615 - (C22614 + C22613) + C22616) * C2173 +
            (C22623 - (C22624 + C22625) + C22626) * C2174 +
            (C31851 - (C31852 + C31853) + C31854) * C2175) *
               C50911) *
              C502 +
          ((C20381 * C2173 + C20382 * C2174 +
            (C20358 + C20357 - C20377 - C20378) * C2175) *
               C33829 +
           (C31856 * C2173 + (C31853 + C31852 - C31851 - C31854) * C2174 +
            (C20369 * C377 + C20370 * C50977 -
             (C19767 * C20578 + C50687 * C20579) * C378 -
             (C19767 * C20580 + C50687 * C20581) * C50788) *
                C2175) *
               C50911) *
              C503) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C1051 +
            (C19767 * C133 + C50687 * C143) * C1047 - C22193 * C1052 -
            C22194 * C1048 + C22195 * C1053 + C22196 * C1049 - C22799 * C1054 -
            C22800 * C1050) *
               C2173 +
           (C19903 * C1051 + C19904 * C1047 - C20361 * C1052 - C20362 * C1048 +
            C20607 * C1053 + C20608 * C1049 - C22633 * C1054 - C22634 * C1050) *
               C2174 +
           (C19905 * C1051 + C19906 * C1047 - C20364 * C1052 - C20365 * C1048 +
            C20609 * C1053 + C20610 * C1049 - C22635 * C1054 - C22636 * C1050) *
               C2175) *
              C33829 +
          ((C22193 * C1051 + C22194 * C1047 - C22195 * C1052 - C22196 * C1048 +
            C22799 * C1053 + C22800 * C1049 - C23079 * C1054 - C23080 * C1050) *
               C2173 +
           (C20361 * C1051 + C20362 * C1047 - C20607 * C1052 - C20608 * C1048 +
            C22633 * C1053 + C22634 * C1049 - C22969 * C1054 - C22970 * C1050) *
               C2174 +
           (C20364 * C1051 + C20365 * C1047 - C20609 * C1052 - C20610 * C1048 +
            C22635 * C1053 + C22636 * C1049 -
            (C19767 * C22950 + C50687 * C22951) * C1054 -
            (C19767 * C22952 + C50687 * C22953) * C1050) *
               C2175) *
              C50911) *
         C50746 * C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C377 +
            (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
            C22194 * C50788) *
               C50835 * C39163 +
           (C22193 * C377 + C22194 * C50977 - C22195 * C378 - C22196 * C50788) *
               C50835 * C39164 +
           (C22195 * C377 + C22196 * C50977 - C22799 * C378 - C22800 * C50788) *
               C50835 * C39165 +
           (C22799 * C377 + C22800 * C50977 - C23079 * C378 - C23080 * C50788) *
               C50835 * C39166) *
              C50746 * C250 +
          ((C22197 * C378 -
            ((C19767 * C134 + C50687 * C144) * C50977 +
             (C19767 * C123 + C50687 * C130) * C377) +
            C22198 * C50788) *
               C50835 * C39163 +
           (C22199 * C378 - (C22198 * C50977 + C22197 * C377) +
            C22200 * C50788) *
               C50835 * C39164 +
           (C22801 * C378 - (C22200 * C50977 + C22199 * C377) +
            C22802 * C50788) *
               C50835 * C39165 +
           ((C19767 * C6009 + C50687 * C6012) * C378 -
            (C22802 * C50977 + C22801 * C377) +
            (C19767 * C6014 + C50687 * C6018) * C50788) *
               C50835 * C39166) *
              C50746 * C251 +
          (((C19767 * C124 + C50687 * C131) * C377 +
            (C19767 * C135 + C50687 * C145) * C50977 - C22201 * C378 -
            C22202 * C50788) *
               C50835 * C39163 +
           (C22201 * C377 + C22202 * C50977 - C22203 * C378 - C22204 * C50788) *
               C50835 * C39164 +
           (C22203 * C377 + C22204 * C50977 - C39368 * C378 - C39369 * C50788) *
               C50835 * C39165 +
           (C39368 * C377 + C39369 * C50977 -
            (C19767 * C6010 + C50687 * C6015) * C378 -
            (C19767 * C6016 + C50687 * C6019) * C50788) *
               C50835 * C39166) *
              C50746 * C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C377 +
            (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
            C22194 * C50788) *
               C50835 * C39163 +
           (C22193 * C377 + C22194 * C50977 - C22195 * C378 - C22196 * C50788) *
               C50835 * C39164 +
           (C22195 * C377 + C22196 * C50977 - C22799 * C378 - C22800 * C50788) *
               C50835 * C39165 +
           (C22799 * C377 + C22800 * C50977 - C23079 * C378 - C23080 * C50788) *
               C50835 * C39166) *
              C501 +
          ((C20371 - (C20338 + C20337) + C20372) * C50835 * C39163 +
           (C22615 - (C22614 + C22613) + C22616) * C50835 * C39164 +
           (C22637 - (C22618 + C22617) + C22638) * C50835 * C39165 +
           (C22969 * C378 - (C22634 * C50977 + C22633 * C377) +
            C22970 * C50788) *
               C50835 * C39166) *
              C502 +
          (C20381 * C50835 * C39163 + C31856 * C50835 * C39164 +
           (C22630 + C22629 - C22639 - C22640) * C50835 * C39165 +
           (C22635 * C377 + C22636 * C50977 -
            (C19767 * C22950 + C50687 * C22951) * C378 -
            (C19767 * C22952 + C50687 * C22953) * C50788) *
               C50835 * C39166) *
              C503) *
         C50714) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C19767 * C122 + C50687 * C129) * C1051 +
           (C19767 * C133 + C50687 * C143) * C1047 - C22193 * C1052 -
           C22194 * C1048 + C22195 * C1053 + C22196 * C1049 - C22799 * C1054 -
           C22800 * C1050) *
              C50835 * C39163 +
          (C22193 * C1051 + C22194 * C1047 - C22195 * C1052 - C22196 * C1048 +
           C22799 * C1053 + C22800 * C1049 - C23079 * C1054 - C23080 * C1050) *
              C50835 * C39164 +
          (C22195 * C1051 + C22196 * C1047 - C22799 * C1052 - C22800 * C1048 +
           C23079 * C1053 + C23080 * C1049 - C39908 * C1054 - C39909 * C1050) *
              C50835 * C39165 +
          (C22799 * C1051 + C22800 * C1047 - C23079 * C1052 - C23080 * C1048 +
           C39908 * C1053 + C39909 * C1049 -
           (C19767 * C39899 + C50687 * C39900) * C1054 -
           (C19767 * C39901 + C50687 * C39902) * C1050) *
              C50835 * C39166) *
         C50746 * C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C1511 +
             (C19767 * C133 + C50687 * C143) * C1509 - C22193 * C1512 -
             C22194 * C50788) *
                C2173 +
            (C21273 + C21274 - C21275 - C21276) * C2174 + C21631 * C2175) *
               C33829 +
           ((C22193 * C1511 + C22194 * C1509 - C22195 * C1512 -
             C22196 * C50788) *
                C2173 +
            (C23915 + C23916 - C23917 - C23918) * C2174 + C33579 * C2175) *
               C50911) *
              C50746 * C51021 +
          (((C22197 * C1512 -
             ((C19767 * C134 + C50687 * C144) * C1509 +
              (C19767 * C123 + C50687 * C130) * C1511) +
             C22198 * C50788) *
                C2173 +
            (C21285 - (C21286 + C21287) + C21288) * C2174 +
            (C21289 - (C21290 + C21291) + C21292) * C2175) *
               C33829 +
           ((C22199 * C1512 - (C22198 * C1509 + C22197 * C1511) +
             C22200 * C50788) *
                C2173 +
            (C23923 - (C23924 + C23925) + C23926) * C2174 +
            (C33083 - (C33084 + C33085) + C33086) * C2175) *
               C50911) *
              C50746 * C51006 +
          ((((C19767 * C124 + C50687 * C131) * C1511 +
             (C19767 * C135 + C50687 * C145) * C1509 - C22201 * C1512 -
             C22202 * C50788) *
                C2173 +
            (C19915 * C1511 + C19916 * C1509 - C22013 * C1512 -
             C22014 * C50788) *
                C2174 +
            (C19917 * C1511 + C19918 * C1509 - C31303 * C1512 -
             C31304 * C50788) *
                C2175) *
               C33829 +
           ((C22201 * C1511 + C22202 * C1509 - C22203 * C1512 -
             C22204 * C50788) *
                C2173 +
            (C22013 * C1511 + C22014 * C1509 - C22015 * C1512 -
             C22016 * C50788) *
                C2174 +
            (C31303 * C1511 + C31304 * C1509 -
             (C19767 * C3212 + C50687 * C3217) * C1512 -
             (C19767 * C3218 + C50687 * C3221) * C50788) *
                C2175) *
               C50911) *
              C50746 * C1173)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C1511 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C1509 -
            (C34160 + C34161 + C34162) * C1512 -
            (C34163 + C34164 + C34165) * C50788) *
               C50835 * C33829 +
           ((C34162 + C34161 + C34160) * C1511 +
            (C34165 + C34164 + C34163) * C1509 -
            (C34740 + C34739 + C34738) * C1512 -
            (C34743 + C34742 + C34741) * C50788) *
               C50835 * C50911) *
              C50746 * C51021 +
          (((C34166 + C34167 + C34168) * C1512 -
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C1509 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C1511) +
            (C34169 + C34170 + C34171) * C50788) *
               C50835 * C33829 +
           ((C34746 + C34745 + C34744) * C1512 -
            ((C34171 + C34170 + C34169) * C1509 +
             (C34168 + C34167 + C34166) * C1511) +
            (C34749 + C34748 + C34747) * C50788) *
               C50835 * C50911) *
              C50746 * C51006 +
          (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
             C16985 * C126 + C16980 * C138) *
                C1511 +
            (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
             C16985 * C137 + C16980 * C147) *
                C1509 -
            (C34172 + C34173 + C34174) * C1512 -
            (C34175 + C34176 + C34177) * C50788) *
               C50835 * C33829 +
           ((C34174 + C34173 + C34172) * C1511 +
            (C34177 + C34176 + C34175) * C1509 -
            (C16985 * C851 + C16980 * C860 + C16984 * C850 + C16979 * C855 +
             C16983 * C849 + C16978 * C854) *
                C1512 -
            (C16985 * C861 + C16980 * C866 + C16984 * C859 + C16979 * C865 +
             C16983 * C858 + C16978 * C864) *
                C50788) *
               C50835 * C50911) *
              C50746 * C1173)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C1511 +
            (C19767 * C133 + C50687 * C143) * C1509 - C22193 * C1512 -
            C22194 * C50788) *
               C50835 * C39163 +
           (C22193 * C1511 + C22194 * C1509 - C22195 * C1512 -
            C22196 * C50788) *
               C50835 * C39164 +
           (C22195 * C1511 + C22196 * C1509 - C22799 * C1512 -
            C22800 * C50788) *
               C50835 * C39165 +
           (C22799 * C1511 + C22800 * C1509 - C23079 * C1512 -
            C23080 * C50788) *
               C50835 * C39166) *
              C50746 * C51021 +
          ((C22197 * C1512 -
            ((C19767 * C134 + C50687 * C144) * C1509 +
             (C19767 * C123 + C50687 * C130) * C1511) +
            C22198 * C50788) *
               C50835 * C39163 +
           (C22199 * C1512 - (C22198 * C1509 + C22197 * C1511) +
            C22200 * C50788) *
               C50835 * C39164 +
           (C22801 * C1512 - (C22200 * C1509 + C22199 * C1511) +
            C22802 * C50788) *
               C50835 * C39165 +
           (C39734 * C1512 - (C22802 * C1509 + C22801 * C1511) +
            C39735 * C50788) *
               C50835 * C39166) *
              C50746 * C51006 +
          (((C19767 * C124 + C50687 * C131) * C1511 +
            (C19767 * C135 + C50687 * C145) * C1509 - C22201 * C1512 -
            C22202 * C50788) *
               C50835 * C39163 +
           (C22201 * C1511 + C22202 * C1509 - C22203 * C1512 -
            C22204 * C50788) *
               C50835 * C39164 +
           (C22203 * C1511 + C22204 * C1509 - C39368 * C1512 -
            C39369 * C50788) *
               C50835 * C39165 +
           (C39368 * C1511 + C39369 * C1509 -
            (C19767 * C6010 + C50687 * C6015) * C1512 -
            (C19767 * C6016 + C50687 * C6019) * C50788) *
               C50835 * C39166) *
              C50746 * C1173)) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C1511 +
              (C19767 * C133 + C50687 * C143) * C1509 - C22193 * C1512 -
              C22194 * C50788) *
                 C2173 +
             (C21273 + C21274 - C21275 - C21276) * C2174 + C21631 * C2175) *
                C33829 +
            ((C22193 * C1511 + C22194 * C1509 - C22195 * C1512 -
              C22196 * C50788) *
                 C2173 +
             (C23915 + C23916 - C23917 - C23918) * C2174 + C33579 * C2175) *
                C50911) *
               C50975 +
           (((C21275 - (C21274 + C21273) + C21276) * C2173 +
             (C21279 - (C21278 + C21277) + C21280) * C2174 +
             (C21283 - (C21282 + C21281) + C21284) * C2175) *
                C33829 +
            ((C23917 - (C23916 + C23915) + C23918) * C2173 +
             (C24417 - (C24418 + C24419) + C24420) * C2174 +
             (C33574 - (C33575 + C33576) + C33577) * C2175) *
                C50911) *
               C50762) *
              C1275 +
          ((((C22197 * C1512 -
              ((C19767 * C134 + C50687 * C144) * C1509 +
               (C19767 * C123 + C50687 * C130) * C1511) +
              C22198 * C50788) *
                 C2173 +
             (C21285 - (C21286 + C21287) + C21288) * C2174 +
             (C21289 - (C21290 + C21291) + C21292) * C2175) *
                C33829 +
            ((C22199 * C1512 - (C22198 * C1509 + C22197 * C1511) +
              C22200 * C50788) *
                 C2173 +
             (C23923 - (C23924 + C23925) + C23926) * C2174 +
             (C33083 - (C33084 + C33085) + C33086) * C2175) *
                C50911) *
               C50975 +
           (((C21287 + C21286 - C21285 - C21288) * C2173 +
             (C21291 + C21290 - C21289 - C21292) * C2174 +
             (C21295 + C21294 - C21293 - C21296) * C2175) *
                C33829 +
            ((C23925 + C23924 - C23923 - C23926) * C2173 +
             (C33085 + C33084 - C33083 - C33086) * C2174 +
             (C21037 * C1511 + C21038 * C1509 -
              (C19767 * C3368 + C50687 * C3370) * C1512 -
              (C19767 * C3372 + C50687 * C3374) * C50788) *
                 C2175) *
                C50911) *
               C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C1511 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C1509 -
             (C34160 + C34161 + C34162) * C1512 -
             (C34163 + C34164 + C34165) * C50788) *
                C50835 * C33829 +
            ((C34162 + C34161 + C34160) * C1511 +
             (C34165 + C34164 + C34163) * C1509 -
             (C34740 + C34739 + C34738) * C1512 -
             (C34743 + C34742 + C34741) * C50788) *
                C50835 * C50911) *
               C50975 +
           (((C17803 + C17802 + C17801) * C1512 -
             ((C17174 + C17173 + C17172) * C1509 +
              (C17171 + C17170 + C17169) * C1511) +
             (C17806 + C17805 + C17804) * C50788) *
                C50835 * C33829 +
            ((C18117 + C18118 + C18119) * C1512 -
             ((C17804 + C17805 + C17806) * C1509 +
              (C17801 + C17802 + C17803) * C1511) +
             (C18120 + C18121 + C18122) * C50788) *
                C50835 * C50911) *
               C50762) *
              C1275 +
          ((((C34166 + C34167 + C34168) * C1512 -
             ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
               C16983 * C134 + C16978 * C144) *
                  C1509 +
              (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
               C16983 * C123 + C16978 * C130) *
                  C1511) +
             (C34169 + C34170 + C34171) * C50788) *
                C50835 * C33829 +
            ((C34746 + C34745 + C34744) * C1512 -
             ((C34171 + C34170 + C34169) * C1509 +
              (C34168 + C34167 + C34166) * C1511) +
             (C34749 + C34748 + C34747) * C50788) *
                C50835 * C50911) *
               C50975 +
           (((C17175 + C17176 + C17177) * C1511 +
             (C17178 + C17179 + C17180) * C1509 -
             (C18721 + C18720 + C18719) * C1512 -
             (C18724 + C18723 + C18722) * C50788) *
                C50835 * C33829 +
            ((C18719 + C18720 + C18721) * C1511 +
             (C18722 + C18723 + C18724) * C1509 -
             (C16985 * C965 + C16980 * C969 + C16984 * C966 + C16979 * C970 +
              C16983 * C967 + C16978 * C971) *
                 C1512 -
             (C16985 * C973 + C16980 * C977 + C16984 * C974 + C16979 * C978 +
              C16983 * C975 + C16978 * C979) *
                 C50788) *
                C50835 * C50911) *
               C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C1511 +
             (C19767 * C133 + C50687 * C143) * C1509 - C22193 * C1512 -
             C22194 * C50788) *
                C50835 * C39163 +
            (C22193 * C1511 + C22194 * C1509 - C22195 * C1512 -
             C22196 * C50788) *
                C50835 * C39164 +
            (C22195 * C1511 + C22196 * C1509 - C22799 * C1512 -
             C22800 * C50788) *
                C50835 * C39165 +
            (C22799 * C1511 + C22800 * C1509 - C23079 * C1512 -
             C23080 * C50788) *
                C50835 * C39166) *
               C50975 +
           ((C21275 - (C21274 + C21273) + C21276) * C50835 * C39163 +
            (C23917 - (C23916 + C23915) + C23918) * C50835 * C39164 +
            (C23921 - (C23920 + C23919) + C23922) * C50835 * C39165 +
            (C22969 * C1512 - (C22634 * C1509 + C22633 * C1511) +
             C22970 * C50788) *
                C50835 * C39166) *
               C50762) *
              C1275 +
          (((C22197 * C1512 -
             ((C19767 * C134 + C50687 * C144) * C1509 +
              (C19767 * C123 + C50687 * C130) * C1511) +
             C22198 * C50788) *
                C50835 * C39163 +
            (C22199 * C1512 - (C22198 * C1509 + C22197 * C1511) +
             C22200 * C50788) *
                C50835 * C39164 +
            (C22801 * C1512 - (C22200 * C1509 + C22199 * C1511) +
             C22802 * C50788) *
                C50835 * C39165 +
            (C39734 * C1512 - (C22802 * C1509 + C22801 * C1511) +
             C39735 * C50788) *
                C50835 * C39166) *
               C50975 +
           ((C21287 + C21286 - C21285 - C21288) * C50835 * C39163 +
            (C23925 + C23924 - C23923 - C23926) * C50835 * C39164 +
            (C23929 + C23928 - C23927 - C23930) * C50835 * C39165 +
            (C22803 * C1511 + C22804 * C1509 -
             (C19767 * C6194 + C50687 * C6196) * C1512 -
             (C19767 * C6198 + C50687 * C6200) * C50788) *
                C50835 * C39166) *
               C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C1744 +
             (C19767 * C133 + C50687 * C143) * C51023 - C22193 * C1745 -
             C22194 * C51012 + C22195 * C1746 + C22196 * C1743) *
                C2173 +
            (C21731 + C21732 - C21733 - C21734 + C21735 + C21736) * C2174 +
            (C21737 + C21738 - C21739 - C21740 + C21741 + C21742) * C2175) *
               C33829 +
           ((C22193 * C1744 + C22194 * C51023 - C22195 * C1745 -
             C22196 * C51012 + C22799 * C1746 + C22800 * C1743) *
                C2173 +
            (C24571 + C24572 - C24573 - C24574 + C24575 + C24576) * C2174 +
            (C33726 + C33727 - C33728 - C33729 + C33730 + C33731) * C2175) *
               C50911) *
              C50746 * C1275 +
          (((C22197 * C1745 -
             ((C19767 * C134 + C50687 * C144) * C51023 +
              (C19767 * C123 + C50687 * C130) * C1744) +
             C22198 * C51012 - C22199 * C1746 - C22200 * C1743) *
                C2173 +
            (C21033 * C1745 - (C19910 * C51023 + C19909 * C1744) +
             C21034 * C51012 - C22011 * C1746 - C22012 * C1743) *
                C2174 +
            (C21035 * C1745 - (C19912 * C51023 + C19911 * C1744) +
             C21036 * C51012 - C22361 * C1746 - C22362 * C1743) *
                C2175) *
               C33829 +
           ((C22199 * C1745 - (C22198 * C51023 + C22197 * C1744) +
             C22200 * C51012 - C22801 * C1746 - C22802 * C1743) *
                C2173 +
            (C22011 * C1745 - (C21034 * C51023 + C21033 * C1744) +
             C22012 * C51012 - C22803 * C1746 - C22804 * C1743) *
                C2174 +
            (C22361 * C1745 - (C21036 * C51023 + C21035 * C1744) +
             C22362 * C51012 - (C19767 * C3500 + C50687 * C3506) * C1746 -
             (C19767 * C3508 + C50687 * C3512) * C1743) *
                C2175) *
               C50911) *
              C50746 * C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C1744 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C51023 -
            (C34160 + C34161 + C34162) * C1745 -
            (C34163 + C34164 + C34165) * C51012 +
            (C34738 + C34739 + C34740) * C1746 +
            (C34741 + C34742 + C34743) * C1743) *
               C50835 * C33829 +
           ((C34162 + C34161 + C34160) * C1744 +
            (C34165 + C34164 + C34163) * C51023 -
            (C34740 + C34739 + C34738) * C1745 -
            (C34743 + C34742 + C34741) * C51012 +
            (C35008 + C35007 + C35006) * C1746 +
            (C35011 + C35010 + C35009) * C1743) *
               C50835 * C50911) *
              C50746 * C1275 +
          (((C34166 + C34167 + C34168) * C1745 -
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C51023 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C1744) +
            (C34169 + C34170 + C34171) * C51012 -
            (C34744 + C34745 + C34746) * C1746 -
            (C34747 + C34748 + C34749) * C1743) *
               C50835 * C33829 +
           ((C34746 + C34745 + C34744) * C1745 -
            ((C34171 + C34170 + C34169) * C51023 +
             (C34168 + C34167 + C34166) * C1744) +
            (C34749 + C34748 + C34747) * C51012 -
            (C16985 * C1055 + C16980 * C1059 + C16984 * C1056 + C16979 * C1060 +
             C16983 * C1057 + C16978 * C1061) *
                C1746 -
            (C16985 * C1063 + C16980 * C1067 + C16984 * C1064 + C16979 * C1068 +
             C16983 * C1065 + C16978 * C1069) *
                C1743) *
               C50835 * C50911) *
              C50746 * C50719)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C1744 +
            (C19767 * C133 + C50687 * C143) * C51023 - C22193 * C1745 -
            C22194 * C51012 + C22195 * C1746 + C22196 * C1743) *
               C50835 * C39163 +
           (C22193 * C1744 + C22194 * C51023 - C22195 * C1745 -
            C22196 * C51012 + C22799 * C1746 + C22800 * C1743) *
               C50835 * C39164 +
           (C22195 * C1744 + C22196 * C51023 - C22799 * C1745 -
            C22800 * C51012 + C23079 * C1746 + C23080 * C1743) *
               C50835 * C39165 +
           (C22799 * C1744 + C22800 * C51023 - C23079 * C1745 -
            C23080 * C51012 + C39908 * C1746 + C39909 * C1743) *
               C50835 * C39166) *
              C50746 * C1275 +
          ((C22197 * C1745 -
            ((C19767 * C134 + C50687 * C144) * C51023 +
             (C19767 * C123 + C50687 * C130) * C1744) +
            C22198 * C51012 - C22199 * C1746 - C22200 * C1743) *
               C50835 * C39163 +
           (C22199 * C1745 - (C22198 * C51023 + C22197 * C1744) +
            C22200 * C51012 - C22801 * C1746 - C22802 * C1743) *
               C50835 * C39164 +
           (C22801 * C1745 - (C22200 * C51023 + C22199 * C1744) +
            C22802 * C51012 - C39734 * C1746 - C39735 * C1743) *
               C50835 * C39165 +
           (C39734 * C1745 - (C22802 * C51023 + C22801 * C1744) +
            C39735 * C51012 - (C19767 * C6314 + C50687 * C6316) * C1746 -
            (C19767 * C6318 + C50687 * C6320) * C1743) *
               C50835 * C39166) *
              C50746 * C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50776) *
                C50835 * C33829 +
            ((C34162 + C34161 + C34160) * C121 +
             (C34165 + C34164 + C34163) * C50776) *
                C50835 * C50911) *
               C501 -
           (((C17804 + C17805 + C17806) * C50776 +
             (C17801 + C17802 + C17803) * C121) *
                C50835 * C50911 +
            ((C17174 + C17173 + C17172) * C50776 +
             (C17171 + C17170 + C17169) * C121) *
                C50835 * C33829) *
               C502 +
           (((C17508 + C17507 + C17506) * C121 +
             (C17505 + C17504 + C17503) * C50776) *
                C50835 * C33829 +
            ((C17807 + C17808 + C17809) * C121 +
             (C17810 + C17811 + C17812) * C50776) *
                C50835 * C50911) *
               C503) *
              C50968 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50776) *
                C50835 * C33829 +
            ((C18719 + C18720 + C18721) * C121 +
             (C18722 + C18723 + C18724) * C50776) *
                C50835 * C50911) *
               C502 -
           (((C34171 + C34170 + C34169) * C50776 +
             (C34168 + C34167 + C34166) * C121) *
                C50835 * C50911 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50776 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C50835 * C33829) *
               C501 -
           (((C16985 * C731 + C16980 * C739 + C16984 * C732 + C16979 * C740 +
              C16983 * C733 + C16978 * C741) *
                 C50776 +
             (C16985 * C715 + C16980 * C727 + C16984 * C716 + C16979 * C728 +
              C16983 * C717 + C16978 * C729) *
                 C121) *
                C50835 * C50911 +
            ((C17514 + C17513 + C17512) * C50776 +
             (C17511 + C17510 + C17509) * C121) *
                C50835 * C33829) *
               C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C121 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50776) *
               C50835 * C33829 +
           ((C16983 * C382 + C16978 * C388 + C16984 * C381 + C16979 * C387 +
             C16985 * C380 + C16980 * C386) *
                C121 +
            (C16983 * C392 + C16978 * C400 + C16984 * C391 + C16979 * C399 +
             C16985 * C390 + C16980 * C398) *
                C50776) *
               C50835 * C50911) *
              C50746 * C113 -
          (((C16985 * C389 + C16980 * C397 + C16984 * C390 + C16979 * C398 +
             C16983 * C391 + C16978 * C399) *
                C50776 +
            (C16985 * C379 + C16980 * C385 + C16984 * C380 + C16979 * C386 +
             C16983 * C381 + C16978 * C387) *
                C121) *
               C50835 * C50911 +
           ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
             C16983 * C134 + C16978 * C144) *
                C50776 +
            (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
             C16983 * C123 + C16978 * C130) *
                C121) *
               C50835 * C33829) *
              C50746 * C114 +
          (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
             C16985 * C126 + C16980 * C138) *
                C121 +
            (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
             C16985 * C137 + C16980 * C147) *
                C50776) *
               C50835 * C33829 +
           ((C16983 * C380 + C16978 * C386 + C16984 * C379 + C16979 * C385 +
             C16985 * C383 + C16980 * C393) *
                C121 +
            (C16983 * C390 + C16978 * C398 + C16984 * C389 + C16979 * C397 +
             C16985 * C394 + C16980 * C401) *
                C50776) *
               C50835 * C50911) *
              C50746 * C115 -
          (((C16985 * C396 + C16980 * C402 + C16984 * C394 + C16979 * C401 +
             C16983 * C389 + C16978 * C397) *
                C50776 +
            (C16985 * C384 + C16980 * C395 + C16984 * C383 + C16979 * C393 +
             C16983 * C379 + C16978 * C385) *
                C121) *
               C50835 * C50911 +
           ((C16985 * C140 + C16980 * C148 + C16984 * C137 + C16979 * C147 +
             C16983 * C136 + C16978 * C146) *
                C50776 +
            (C16985 * C127 + C16980 * C139 + C16984 * C126 + C16979 * C138 +
             C16983 * C125 + C16978 * C132) *
                C121) *
               C50835 * C33829) *
              C50746 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C2173 +
            (C19921 + C19922) * C2174 + C20135 * C2175) *
               C33829 +
           ((C22193 * C121 + C22194 * C50776) * C2173 +
            (C21993 + C21994) * C2174 + C31599 * C2175) *
               C50911) *
              C50746 * C113 -
          ((C31602 * C2175 + (C21998 + C21997) * C2174 +
            (C22198 * C50776 + C22197 * C121) * C2173) *
               C50911 +
           (C20146 * C2175 + (C19928 + C19927) * C2174 +
            ((C19767 * C134 + C50687 * C144) * C50776 +
             (C19767 * C123 + C50687 * C130) * C121) *
                C2173) *
               C33829) *
              C50746 * C114 +
          ((((C19767 * C124 + C50687 * C131) * C121 +
             (C19767 * C135 + C50687 * C145) * C50776) *
                C2173 +
            (C19933 + C19934) * C2174 + (C19935 + C19936) * C2175) *
               C33829 +
           ((C22201 * C121 + C22202 * C50776) * C2173 +
            (C22019 + C22020) * C2174 + (C31305 + C31306) * C2175) *
               C50911) *
              C50746 * C115 -
          ((((C19767 * C731 + C50687 * C739) * C50776 +
             (C19767 * C715 + C50687 * C727) * C121) *
                C2175 +
            ((C19767 * C726 + C50687 * C738) * C50776 +
             (C19767 * C714 + C50687 * C722) * C121) *
                C2174 +
            ((C19767 * C389 + C50687 * C397) * C50776 +
             (C19767 * C379 + C50687 * C385) * C121) *
                C2173) *
               C50911 +
           (((C19767 * C518 + C50687 * C524) * C50776 +
             (C19767 * C509 + C50687 * C514) * C121) *
                C2175 +
            ((C19767 * C259 + C50687 * C271) * C50776 +
             (C19767 * C253 + C50687 * C263) * C121) *
                C2174 +
            ((C19767 * C136 + C50687 * C146) * C50776 +
             (C19767 * C125 + C50687 * C132) * C121) *
                C2173) *
               C33829) *
              C50746 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C2173 +
             (C19921 + C19922) * C2174 + C20135 * C2175) *
                C33829 +
            ((C22193 * C121 + C22194 * C50776) * C2173 +
             (C21993 + C21994) * C2174 + C31599 * C2175) *
                C50911) *
               C501 -
           ((C31701 * C2175 + (C22353 + C22354) * C2174 +
             (C21994 + C21993) * C2173) *
                C50911 +
            (C20226 * C2175 + (C19924 + C19923) * C2174 +
             (C19922 + C19921) * C2173) *
                C33829) *
               C502 +
           ((C20135 * C2173 + C20136 * C2174 + (C20152 + C20151) * C2175) *
                C33829 +
            (C31599 * C2173 + (C22463 + C22464) * C2174 +
             (C31702 + C31703) * C2175) *
                C50911) *
               C503) *
              C50968 +
          ((((C19927 + C19928) * C2173 + (C19929 + C19930) * C2174 +
             (C19931 + C19932) * C2175) *
                C33829 +
            ((C21997 + C21998) * C2173 + (C22355 + C22356) * C2174 +
             (C31600 + C31601) * C2175) *
                C50911) *
               C502 -
           ((C31602 * C2175 + (C21998 + C21997) * C2174 +
             (C22198 * C50776 + C22197 * C121) * C2173) *
                C50911 +
            (C20146 * C2175 + (C19928 + C19927) * C2174 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C2173) *
                C33829) *
               C501 -
           ((((C19767 * C3013 + C50687 * C3017) * C50776 +
              (C19767 * C3005 + C50687 * C3011) * C121) *
                 C2175 +
             (C31601 + C31600) * C2174 + C31602 * C2173) *
                C50911 +
            ((C20154 + C20153) * C2175 + C20145 * C2174 + C20146 * C2173) *
                C33829) *
               C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C121 +
            (C19767 * C133 + C50687 * C143) * C50776) *
               C50835 * C39163 +
           (C22193 * C121 + C22194 * C50776) * C50835 * C39164 +
           (C22195 * C121 + C22196 * C50776) * C50835 * C39165 +
           (C22799 * C121 + C22800 * C50776) * C50835 * C39166) *
              C50746 * C113 -
          ((C22802 * C50776 + C22801 * C121) * C50835 * C39166 +
           (C22200 * C50776 + C22199 * C121) * C50835 * C39165 +
           (C22198 * C50776 + C22197 * C121) * C50835 * C39164 +
           ((C19767 * C134 + C50687 * C144) * C50776 +
            (C19767 * C123 + C50687 * C130) * C121) *
               C50835 * C39163) *
              C50746 * C114 +
          (((C19767 * C124 + C50687 * C131) * C121 +
            (C19767 * C135 + C50687 * C145) * C50776) *
               C50835 * C39163 +
           (C22201 * C121 + C22202 * C50776) * C50835 * C39164 +
           (C22203 * C121 + C22204 * C50776) * C50835 * C39165 +
           ((C19767 * C1056 + C50687 * C1060) * C121 +
            (C19767 * C1064 + C50687 * C1068) * C50776) *
               C50835 * C39166) *
              C50746 * C115 -
          (((C19767 * C1063 + C50687 * C1067) * C50776 +
            (C19767 * C1055 + C50687 * C1059) * C121) *
               C50835 * C39166 +
           ((C19767 * C859 + C50687 * C865) * C50776 +
            (C19767 * C850 + C50687 * C855) * C121) *
               C50835 * C39165 +
           ((C19767 * C389 + C50687 * C397) * C50776 +
            (C19767 * C379 + C50687 * C385) * C121) *
               C50835 * C39164 +
           ((C19767 * C136 + C50687 * C146) * C50776 +
            (C19767 * C125 + C50687 * C132) * C121) *
               C50835 * C39163) *
              C50746 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C50835 * C39163 +
            (C22193 * C121 + C22194 * C50776) * C50835 * C39164 +
            (C22195 * C121 + C22196 * C50776) * C50835 * C39165 +
            (C22799 * C121 + C22800 * C50776) * C50835 * C39166) *
               C501 -
           ((C22634 * C50776 + C22633 * C121) * C50835 * C39166 +
            (C21996 + C21995) * C50835 * C39165 +
            (C21994 + C21993) * C50835 * C39164 +
            (C19922 + C19921) * C50835 * C39163) *
               C502 +
           (C20135 * C50835 * C39163 + C31599 * C50835 * C39164 +
            (C22352 + C22351) * C50835 * C39165 +
            (C22635 * C121 + C22636 * C50776) * C50835 * C39166) *
               C503) *
              C50968 +
          (((C19927 + C19928) * C50835 * C39163 +
            (C21997 + C21998) * C50835 * C39164 +
            (C22017 + C22018) * C50835 * C39165 +
            (C22803 * C121 + C22804 * C50776) * C50835 * C39166) *
               C502 -
           ((C22802 * C50776 + C22801 * C121) * C50835 * C39166 +
            (C22200 * C50776 + C22199 * C121) * C50835 * C39165 +
            (C22198 * C50776 + C22197 * C121) * C50835 * C39164 +
            ((C19767 * C134 + C50687 * C144) * C50776 +
             (C19767 * C123 + C50687 * C130) * C121) *
                C50835 * C39163) *
               C501 -
           (((C19767 * C3508 + C50687 * C3512) * C50776 +
             (C19767 * C3500 + C50687 * C3506) * C121) *
                C50835 * C39166 +
            (C22364 + C22363) * C50835 * C39165 + C31602 * C50835 * C39164 +
            C20146 * C50835 * C39163) *
               C503) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C121 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50776) *
               C50835 * C33829 +
           ((C34162 + C34161 + C34160) * C121 +
            (C34165 + C34164 + C34163) * C50776) *
               C50835 * C50911) *
              C592 -
          (((C17804 + C17805 + C17806) * C50776 +
            (C17801 + C17802 + C17803) * C121) *
               C50835 * C50911 +
           ((C17174 + C17173 + C17172) * C50776 +
            (C17171 + C17170 + C17169) * C121) *
               C50835 * C33829) *
              C593 +
          (((C17508 + C17507 + C17506) * C121 +
            (C17505 + C17504 + C17503) * C50776) *
               C50835 * C33829 +
           ((C17807 + C17808 + C17809) * C121 +
            (C17810 + C17811 + C17812) * C50776) *
               C50835 * C50911) *
              C594 -
          (((C16985 * C4002 + C16980 * C4003 + C16984 * C3010 + C16979 * C3016 +
             C16983 * C3009 + C16978 * C3015) *
                C50776 +
            (C16985 * C4000 + C16980 * C4001 + C16984 * C3004 + C16979 * C3008 +
             C16983 * C3003 + C16978 * C3007) *
                C121) *
               C50835 * C50911 +
           ((C17630 + C17629 + C17628) * C50776 +
            (C17627 + C17626 + C17625) * C121) *
               C50835 * C33829) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50776) *
                C50835 * C33829 +
            ((C16983 * C382 + C16978 * C388 + C16984 * C381 + C16979 * C387 +
              C16985 * C380 + C16980 * C386) *
                 C121 +
             (C16983 * C392 + C16978 * C400 + C16984 * C391 + C16979 * C399 +
              C16985 * C390 + C16980 * C398) *
                 C50776) *
                C50835 * C50911) *
               C50975 -
           (((C17804 + C17805 + C17806) * C50776 +
             (C17801 + C17802 + C17803) * C121) *
                C50835 * C50911 +
            ((C17174 + C17173 + C17172) * C50776 +
             (C17171 + C17170 + C17169) * C121) *
                C50835 * C33829) *
               C50762) *
              C250 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50776) *
                C50835 * C33829 +
            ((C18719 + C18720 + C18721) * C121 +
             (C18722 + C18723 + C18724) * C50776) *
                C50835 * C50911) *
               C50762 -
           (((C16985 * C389 + C16980 * C397 + C16984 * C390 + C16979 * C398 +
              C16983 * C391 + C16978 * C399) *
                 C50776 +
             (C16985 * C379 + C16980 * C385 + C16984 * C380 + C16979 * C386 +
              C16983 * C381 + C16978 * C387) *
                 C121) *
                C50835 * C50911 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50776 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C50835 * C33829) *
               C50975) *
              C251 +
          ((((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
              C16985 * C126 + C16980 * C138) *
                 C121 +
             (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
              C16985 * C137 + C16980 * C147) *
                 C50776) *
                C50835 * C33829 +
            ((C16983 * C380 + C16978 * C386 + C16984 * C379 + C16979 * C385 +
              C16985 * C383 + C16980 * C393) *
                 C121 +
             (C16983 * C390 + C16978 * C398 + C16984 * C389 + C16979 * C397 +
              C16985 * C394 + C16980 * C401) *
                 C50776) *
                C50835 * C50911) *
               C50975 -
           (((C16985 * C1409 + C16980 * C1410 + C16984 * C726 + C16979 * C738 +
              C16983 * C725 + C16978 * C737) *
                 C50776 +
             (C16985 * C1407 + C16980 * C1408 + C16984 * C714 + C16979 * C722 +
              C16983 * C713 + C16978 * C721) *
                 C121) *
                C50835 * C50911 +
            ((C17186 + C17185 + C17184) * C50776 +
             (C17183 + C17182 + C17181) * C121) *
                C50835 * C33829) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C2173 +
             (C19921 + C19922) * C2174 + C20135 * C2175) *
                C33829 +
            ((C22193 * C121 + C22194 * C50776) * C2173 +
             (C21993 + C21994) * C2174 + C31599 * C2175) *
                C50911) *
               C50975 -
           ((C31701 * C2175 + (C22353 + C22354) * C2174 +
             (C21994 + C21993) * C2173) *
                C50911 +
            (C20226 * C2175 + (C19924 + C19923) * C2174 +
             (C19922 + C19921) * C2173) *
                C33829) *
               C50762) *
              C250 +
          ((((C19927 + C19928) * C2173 + (C19929 + C19930) * C2174 +
             (C19931 + C19932) * C2175) *
                C33829 +
            ((C21997 + C21998) * C2173 + (C22355 + C22356) * C2174 +
             (C31600 + C31601) * C2175) *
                C50911) *
               C50762 -
           ((C31602 * C2175 + (C21998 + C21997) * C2174 +
             (C22198 * C50776 + C22197 * C121) * C2173) *
                C50911 +
            (C20146 * C2175 + (C19928 + C19927) * C2174 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C2173) *
                C33829) *
               C50975) *
              C251 +
          (((((C19767 * C124 + C50687 * C131) * C121 +
              (C19767 * C135 + C50687 * C145) * C50776) *
                 C2173 +
             (C19933 + C19934) * C2174 + (C19935 + C19936) * C2175) *
                C33829 +
            ((C22201 * C121 + C22202 * C50776) * C2173 +
             (C22019 + C22020) * C2174 + (C31305 + C31306) * C2175) *
                C50911) *
               C50975 -
           ((((C19767 * C4002 + C50687 * C4003) * C50776 +
              (C19767 * C4000 + C50687 * C4001) * C121) *
                 C2175 +
             (C31306 + C31305) * C2174 + (C22020 + C22019) * C2173) *
                C50911 +
            ((C19938 + C19937) * C2175 + (C19936 + C19935) * C2174 +
             (C19934 + C19933) * C2173) *
                C33829) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C2173 +
            (C19921 + C19922) * C2174 + C20135 * C2175) *
               C33829 +
           ((C22193 * C121 + C22194 * C50776) * C2173 +
            (C21993 + C21994) * C2174 + C31599 * C2175) *
               C50911) *
              C592 -
          ((C31701 * C2175 + (C22353 + C22354) * C2174 +
            (C21994 + C21993) * C2173) *
               C50911 +
           (C20226 * C2175 + (C19924 + C19923) * C2174 +
            (C19922 + C19921) * C2173) *
               C33829) *
              C593 +
          ((C20135 * C2173 + C20136 * C2174 + (C20152 + C20151) * C2175) *
               C33829 +
           (C31599 * C2173 + (C22463 + C22464) * C2174 +
            (C31702 + C31703) * C2175) *
               C50911) *
              C594 -
          ((((C19767 * C20334 + C50687 * C20335) * C50776 +
             (C19767 * C20332 + C50687 * C20333) * C121) *
                C2175 +
            (C31703 + C31702) * C2174 + C31701 * C2173) *
               C50911 +
           ((C20234 + C20233) * C2175 + C20225 * C2174 + C20226 * C2173) *
               C33829) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C50835 * C39163 +
            (C22193 * C121 + C22194 * C50776) * C50835 * C39164 +
            (C22195 * C121 + C22196 * C50776) * C50835 * C39165 +
            (C22799 * C121 + C22800 * C50776) * C50835 * C39166) *
               C50975 -
           ((C22634 * C50776 + C22633 * C121) * C50835 * C39166 +
            (C21996 + C21995) * C50835 * C39165 +
            (C21994 + C21993) * C50835 * C39164 +
            (C19922 + C19921) * C50835 * C39163) *
               C50762) *
              C250 +
          (((C19927 + C19928) * C50835 * C39163 +
            (C21997 + C21998) * C50835 * C39164 +
            (C22017 + C22018) * C50835 * C39165 +
            (C22803 * C121 + C22804 * C50776) * C50835 * C39166) *
               C50762 -
           ((C22802 * C50776 + C22801 * C121) * C50835 * C39166 +
            (C22200 * C50776 + C22199 * C121) * C50835 * C39165 +
            (C22198 * C50776 + C22197 * C121) * C50835 * C39164 +
            ((C19767 * C134 + C50687 * C144) * C50776 +
             (C19767 * C123 + C50687 * C130) * C121) *
                C50835 * C39163) *
               C50975) *
              C251 +
          ((((C19767 * C124 + C50687 * C131) * C121 +
             (C19767 * C135 + C50687 * C145) * C50776) *
                C50835 * C39163 +
            (C22201 * C121 + C22202 * C50776) * C50835 * C39164 +
            (C22203 * C121 + C22204 * C50776) * C50835 * C39165 +
            ((C19767 * C1056 + C50687 * C1060) * C121 +
             (C19767 * C1064 + C50687 * C1068) * C50776) *
                C50835 * C39166) *
               C50975 -
           (((C19767 * C6824 + C50687 * C6825) * C50776 +
             (C19767 * C6822 + C50687 * C6823) * C121) *
                C50835 * C39166 +
            (C22022 + C22021) * C50835 * C39165 +
            (C22020 + C22019) * C50835 * C39164 +
            (C19934 + C19933) * C50835 * C39163) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C121 +
            (C19767 * C133 + C50687 * C143) * C50776) *
               C50835 * C39163 +
           (C22193 * C121 + C22194 * C50776) * C50835 * C39164 +
           (C22195 * C121 + C22196 * C50776) * C50835 * C39165 +
           (C22799 * C121 + C22800 * C50776) * C50835 * C39166) *
              C592 -
          ((C22634 * C50776 + C22633 * C121) * C50835 * C39166 +
           (C21996 + C21995) * C50835 * C39165 +
           (C21994 + C21993) * C50835 * C39164 +
           (C19922 + C19921) * C50835 * C39163) *
              C593 +
          (C20135 * C50835 * C39163 + C31599 * C50835 * C39164 +
           (C22352 + C22351) * C50835 * C39165 +
           (C22635 * C121 + C22636 * C50776) * C50835 * C39166) *
              C594 -
          (((C19767 * C20686 + C50687 * C20687) * C50776 +
            (C19767 * C20684 + C50687 * C20685) * C121) *
               C50835 * C39166 +
           (C22466 + C22465) * C50835 * C39165 + C31701 * C50835 * C39164 +
           C20226 * C50835 * C39163) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C377 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50977 -
            (C34160 + C34161 + C34162) * C378 -
            (C34163 + C34164 + C34165) * C50788) *
               C50835 * C33829 +
           ((C34162 + C34161 + C34160) * C377 +
            (C34165 + C34164 + C34163) * C50977 -
            (C16985 * C849 + C16980 * C854 + C16984 * C848 + C16979 * C853 +
             C16983 * C847 + C16978 * C852) *
                C378 -
            (C16985 * C858 + C16980 * C864 + C16984 * C857 + C16979 * C863 +
             C16983 * C856 + C16978 * C862) *
                C50788) *
               C50835 * C50911) *
              C501 +
          (((C17803 + C17802 + C17801) * C378 -
            ((C17174 + C17173 + C17172) * C50977 +
             (C17171 + C17170 + C17169) * C377) +
            (C17806 + C17805 + C17804) * C50788) *
               C50835 * C33829 +
           ((C18117 + C18118 + C18119) * C378 -
            ((C17804 + C17805 + C17806) * C50977 +
             (C17801 + C17802 + C17803) * C377) +
            (C18120 + C18121 + C18122) * C50788) *
               C50835 * C50911) *
              C502 +
          (((C17508 + C17507 + C17506) * C377 +
            (C17505 + C17504 + C17503) * C50977 -
            (C17809 + C17808 + C17807) * C378 -
            (C17812 + C17811 + C17810) * C50788) *
               C50835 * C33829 +
           ((C17807 + C17808 + C17809) * C377 +
            (C17810 + C17811 + C17812) * C50977 -
            (C16985 * C3212 + C16980 * C3217 + C16984 * C3211 + C16979 * C3214 +
             C16983 * C3210 + C16978 * C3213) *
                C378 -
            (C16985 * C3218 + C16980 * C3221 + C16984 * C3216 + C16979 * C3220 +
             C16983 * C3215 + C16978 * C3219) *
                C50788) *
               C50835 * C50911) *
              C503) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C377 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50977 -
            (C34160 + C34161 + C34162) * C378 -
            (C34163 + C34164 + C34165) * C50788) *
               C50835 * C33829 +
           ((C34162 + C34161 + C34160) * C377 +
            (C34165 + C34164 + C34163) * C50977 -
            (C16985 * C849 + C16980 * C854 + C16984 * C848 + C16979 * C853 +
             C16983 * C847 + C16978 * C852) *
                C378 -
            (C16985 * C858 + C16980 * C864 + C16984 * C857 + C16979 * C863 +
             C16983 * C856 + C16978 * C862) *
                C50788) *
               C50835 * C50911) *
              C50746 * C250 +
          (((C34166 + C34167 + C34168) * C378 -
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50977 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C377) +
            (C34169 + C34170 + C34171) * C50788) *
               C50835 * C33829 +
           ((C16983 * C848 + C16978 * C853 + C16984 * C849 + C16979 * C854 +
             C16985 * C850 + C16980 * C855) *
                C378 -
            ((C34171 + C34170 + C34169) * C50977 +
             (C34168 + C34167 + C34166) * C377) +
            (C16983 * C857 + C16978 * C863 + C16984 * C858 + C16979 * C864 +
             C16985 * C859 + C16980 * C865) *
                C50788) *
               C50835 * C50911) *
              C50746 * C251 +
          (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
             C16985 * C126 + C16980 * C138) *
                C377 +
            (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
             C16985 * C137 + C16980 * C147) *
                C50977 -
            (C34172 + C34173 + C34174) * C378 -
            (C34175 + C34176 + C34177) * C50788) *
               C50835 * C33829 +
           ((C34174 + C34173 + C34172) * C377 +
            (C34177 + C34176 + C34175) * C50977 -
            (C16985 * C851 + C16980 * C860 + C16984 * C850 + C16979 * C855 +
             C16983 * C849 + C16978 * C854) *
                C378 -
            (C16985 * C861 + C16980 * C866 + C16984 * C859 + C16979 * C865 +
             C16983 * C858 + C16978 * C864) *
                C50788) *
               C50835 * C50911) *
              C50746 * C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C377 +
             (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
             C22194 * C50788) *
                C2173 +
            (C20337 + C20338 - C20371 - C20372) * C2174 + C20381 * C2175) *
               C33829 +
           ((C22193 * C377 + C22194 * C50977 - C22195 * C378 -
             C22196 * C50788) *
                C2173 +
            (C22613 + C22614 - C22615 - C22616) * C2174 + C31856 * C2175) *
               C50911) *
              C50746 * C250 +
          (((C22197 * C378 -
             ((C19767 * C134 + C50687 * C144) * C50977 +
              (C19767 * C123 + C50687 * C130) * C377) +
             C22198 * C50788) *
                C2173 +
            (C21039 - (C21017 + C21018) + C21040) * C2174 +
            (C21041 - (C21023 + C21024) + C21042) * C2175) *
               C33829 +
           ((C22199 * C378 - (C22198 * C50977 + C22197 * C377) +
             C22200 * C50788) *
                C2173 +
            (C23567 - (C23568 + C23569) + C23570) * C2174 +
            (C32739 - (C32740 + C32741) + C32742) * C2175) *
               C50911) *
              C50746 * C251 +
          ((((C19767 * C124 + C50687 * C131) * C377 +
             (C19767 * C135 + C50687 * C145) * C50977 - C22201 * C378 -
             C22202 * C50788) *
                C2173 +
            (C19915 * C377 + C19916 * C50977 - C22013 * C378 -
             C22014 * C50788) *
                C2174 +
            (C19917 * C377 + C19918 * C50977 - C31303 * C378 -
             C31304 * C50788) *
                C2175) *
               C33829 +
           ((C22201 * C377 + C22202 * C50977 - C22203 * C378 -
             C22204 * C50788) *
                C2173 +
            (C22013 * C377 + C22014 * C50977 - C22015 * C378 -
             C22016 * C50788) *
                C2174 +
            (C31303 * C377 + C31304 * C50977 -
             (C19767 * C3212 + C50687 * C3217) * C378 -
             (C19767 * C3218 + C50687 * C3221) * C50788) *
                C2175) *
               C50911) *
              C50746 * C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C377 +
             (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
             C22194 * C50788) *
                C2173 +
            (C20337 + C20338 - C20371 - C20372) * C2174 + C20381 * C2175) *
               C33829 +
           ((C22193 * C377 + C22194 * C50977 - C22195 * C378 -
             C22196 * C50788) *
                C2173 +
            (C22613 + C22614 - C22615 - C22616) * C2174 + C31856 * C2175) *
               C50911) *
              C501 +
          (((C20371 - (C20338 + C20337) + C20372) * C2173 +
            (C20373 - (C20344 + C20343) + C20374) * C2174 +
            (C20375 - (C20350 + C20349) + C20376) * C2175) *
               C33829 +
           ((C22615 - (C22614 + C22613) + C22616) * C2173 +
            (C22623 - (C22624 + C22625) + C22626) * C2174 +
            (C31851 - (C31852 + C31853) + C31854) * C2175) *
               C50911) *
              C502 +
          ((C20381 * C2173 + C20382 * C2174 +
            (C20358 + C20357 - C20377 - C20378) * C2175) *
               C33829 +
           (C31856 * C2173 + (C31853 + C31852 - C31851 - C31854) * C2174 +
            (C20369 * C377 + C20370 * C50977 -
             (C19767 * C20578 + C50687 * C20579) * C378 -
             (C19767 * C20580 + C50687 * C20581) * C50788) *
                C2175) *
               C50911) *
              C503) *
         C50714) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C377 +
            (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
            C22194 * C50788) *
               C50835 * C39163 +
           (C22193 * C377 + C22194 * C50977 - C22195 * C378 - C22196 * C50788) *
               C50835 * C39164 +
           (C22195 * C377 + C22196 * C50977 - C22799 * C378 - C22800 * C50788) *
               C50835 * C39165 +
           (C22799 * C377 + C22800 * C50977 - C23079 * C378 - C23080 * C50788) *
               C50835 * C39166) *
              C50746 * C250 +
          ((C22197 * C378 -
            ((C19767 * C134 + C50687 * C144) * C50977 +
             (C19767 * C123 + C50687 * C130) * C377) +
            C22198 * C50788) *
               C50835 * C39163 +
           (C22199 * C378 - (C22198 * C50977 + C22197 * C377) +
            C22200 * C50788) *
               C50835 * C39164 +
           (C22801 * C378 - (C22200 * C50977 + C22199 * C377) +
            C22802 * C50788) *
               C50835 * C39165 +
           ((C19767 * C6009 + C50687 * C6012) * C378 -
            (C22802 * C50977 + C22801 * C377) +
            (C19767 * C6014 + C50687 * C6018) * C50788) *
               C50835 * C39166) *
              C50746 * C251 +
          (((C19767 * C124 + C50687 * C131) * C377 +
            (C19767 * C135 + C50687 * C145) * C50977 - C22201 * C378 -
            C22202 * C50788) *
               C50835 * C39163 +
           (C22201 * C377 + C22202 * C50977 - C22203 * C378 - C22204 * C50788) *
               C50835 * C39164 +
           (C22203 * C377 + C22204 * C50977 - C39368 * C378 - C39369 * C50788) *
               C50835 * C39165 +
           (C39368 * C377 + C39369 * C50977 -
            (C19767 * C6010 + C50687 * C6015) * C378 -
            (C19767 * C6016 + C50687 * C6019) * C50788) *
               C50835 * C39166) *
              C50746 * C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C377 +
            (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
            C22194 * C50788) *
               C50835 * C39163 +
           (C22193 * C377 + C22194 * C50977 - C22195 * C378 - C22196 * C50788) *
               C50835 * C39164 +
           (C22195 * C377 + C22196 * C50977 - C22799 * C378 - C22800 * C50788) *
               C50835 * C39165 +
           (C22799 * C377 + C22800 * C50977 - C23079 * C378 - C23080 * C50788) *
               C50835 * C39166) *
              C501 +
          ((C20371 - (C20338 + C20337) + C20372) * C50835 * C39163 +
           (C22615 - (C22614 + C22613) + C22616) * C50835 * C39164 +
           (C22637 - (C22618 + C22617) + C22638) * C50835 * C39165 +
           (C22969 * C378 - (C22634 * C50977 + C22633 * C377) +
            C22970 * C50788) *
               C50835 * C39166) *
              C502 +
          (C20381 * C50835 * C39163 + C31856 * C50835 * C39164 +
           (C22630 + C22629 - C22639 - C22640) * C50835 * C39165 +
           (C22635 * C377 + C22636 * C50977 -
            (C19767 * C22950 + C50687 * C22951) * C378 -
            (C19767 * C22952 + C50687 * C22953) * C50788) *
               C50835 * C39166) *
              C503) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C121 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50776) *
                C50835 * C51026 +
            ((C27996 + C27995) * C121 + (C27998 + C27997) * C50776) * C50835 *
                C51027 +
            (C45321 * C121 + C45322 * C50776) * C50835 * C44479) *
               C1169 -
           ((C28958 * C50776 + C28957 * C121) * C50835 * C44479 +
            (C28526 * C50776 + C28525 * C121) * C50835 * C51027 +
            ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C50835 *
                C51026) *
               C50762) *
              C51021 +
          ((((C24890 + C24891) * C121 + (C24892 + C24893) * C50776) * C50835 *
                C51026 +
            (C29759 * C121 + C29760 * C50776) * C50835 * C51027 +
            ((C28758 + C28757) * C121 + (C28760 + C28759) * C50776) * C50835 *
                C44479) *
               C50762 -
           ((C45324 * C50776 + C45323 * C121) * C50835 * C44479 +
            ((C28002 + C28001) * C50776 + (C28000 + C27999) * C121) * C50835 *
                C51027 +
            ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                 C50776 +
             (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                 C121) *
                C50835 * C51026) *
               C1169) *
              C51006 +
          ((((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                 C121 +
             (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                 C50776) *
                C50835 * C51026 +
            ((C28004 + C28003) * C121 + (C28006 + C28005) * C50776) * C50835 *
                C51027 +
            ((C44782 + C44781) * C121 + (C44784 + C44783) * C50776) * C50835 *
                C44479) *
               C1169 -
           (((C49711 * C973 + C50692 * C977 + C49718 * C974 + C50963 * C978) *
                 C50776 +
             (C49711 * C965 + C50692 * C969 + C49718 * C966 + C50963 * C970) *
                 C121) *
                C50835 * C44479 +
            ((C27776 + C27775) * C50776 + (C27774 + C27773) * C121) * C50835 *
                C51027 +
            ((C24901 + C24900) * C50776 + (C24899 + C24898) * C121) * C50835 *
                C51026) *
               C50762) *
              C1173)) /
        (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C121 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50776) *
                C50835 * C51026 +
            ((C27996 + C27995) * C121 + (C27998 + C27997) * C50776) * C50835 *
                C51027 +
            (C45321 * C121 + C45322 * C50776) * C50835 * C44479) *
               C51022 -
           ((C28958 * C50776 + C28957 * C121) * C50835 * C44479 +
            (C28526 * C50776 + C28525 * C121) * C50835 * C51027 +
            ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C50835 *
                C51026) *
               C51009 +
           (C25230 * C50835 * C51026 +
            (C28529 * C121 + C28530 * C50776) * C50835 * C51027 +
            ((C25850 + C25851) * C121 + (C25852 + C25853) * C50776) * C50835 *
                C44479) *
               C1274) *
              C1275 +
          ((((C24890 + C24891) * C121 + (C24892 + C24893) * C50776) * C50835 *
                C51026 +
            (C29759 * C121 + C29760 * C50776) * C50835 * C51027 +
            ((C28758 + C28757) * C121 + (C28760 + C28759) * C50776) * C50835 *
                C44479) *
               C51009 -
           ((C45324 * C50776 + C45323 * C121) * C50835 * C44479 +
            ((C28002 + C28001) * C50776 + (C28000 + C27999) * C121) * C50835 *
                C51027 +
            ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                 C50776 +
             (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                 C121) *
                C50835 * C51026) *
               C51022 -
           (((C49711 * C3218 + C50692 * C3221 + C49718 * C3216 +
              C50963 * C3220) *
                 C50776 +
             (C49711 * C3212 + C50692 * C3217 + C49718 * C3211 +
              C50963 * C3214) *
                 C121) *
                C50835 * C44479 +
            ((C26461 + C26460) * C50776 + (C26459 + C26458) * C121) * C50835 *
                C51027 +
            C25231 * C50835 * C51026) *
               C1274) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C377 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50977 -
             (C27995 + C27996) * C378 - (C27997 + C27998) * C50788) *
                C50835 * C51026 +
            ((C27996 + C27995) * C377 + (C27998 + C27997) * C50977 -
             (C28750 + C28749) * C378 - (C28752 + C28751) * C50788) *
                C50835 * C51027 +
            (C45321 * C377 + C45322 * C50977 - C45581 * C378 -
             C45582 * C50788) *
                C50835 * C44479) *
               C1169 +
           ((C28527 * C378 -
             ((C24885 + C24884) * C50977 + (C24883 + C24882) * C377) +
             C28528 * C50788) *
                C50835 * C51026 +
            (C28955 * C378 - (C28526 * C50977 + C28525 * C377) +
             C28956 * C50788) *
                C50835 * C51027 +
            ((C28967 + C28968) * C378 - (C28958 * C50977 + C28957 * C377) +
             (C28969 + C28970) * C50788) *
                C50835 * C44479) *
               C50762) *
              C1275 +
          ((((C27999 + C28000) * C378 -
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C50977 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C377) +
             (C28001 + C28002) * C50788) *
                C50835 * C51026 +
            ((C28754 + C28753) * C378 -
             ((C28002 + C28001) * C50977 + (C28000 + C27999) * C377) +
             (C28756 + C28755) * C50788) *
                C50835 * C51027 +
            ((C45334 + C45333) * C378 - (C45324 * C50977 + C45323 * C377) +
             (C45336 + C45335) * C50788) *
                C50835 * C44479) *
               C1169 +
           (((C24890 + C24891) * C377 + (C24892 + C24893) * C50977 -
             C29762 * C378 - C29761 * C50788) *
                C50835 * C51026 +
            (C29759 * C377 + C29760 * C50977 - (C28757 + C28758) * C378 -
             (C28759 + C28760) * C50788) *
                C50835 * C51027 +
            ((C28758 + C28757) * C377 + (C28760 + C28759) * C50977 -
             (C49711 * C6822 + C50692 * C6823 + C49718 * C3498 +
              C50963 * C3502) *
                 C378 -
             (C49711 * C6824 + C50692 * C6825 + C49718 * C3504 +
              C50963 * C3510) *
                 C50788) *
                C50835 * C44479) *
               C50762) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C1511 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C1509 -
             (C27995 + C27996) * C1512 - (C27997 + C27998) * C50788) *
                C50835 * C51026 +
            ((C27996 + C27995) * C1511 + (C27998 + C27997) * C1509 -
             (C28750 + C28749) * C1512 - (C28752 + C28751) * C50788) *
                C50835 * C51027 +
            (C45321 * C1511 + C45322 * C1509 - C45581 * C1512 -
             C45582 * C50788) *
                C50835 * C44479) *
               C1169 +
           ((C28527 * C1512 -
             ((C24885 + C24884) * C1509 + (C24883 + C24882) * C1511) +
             C28528 * C50788) *
                C50835 * C51026 +
            (C28955 * C1512 - (C28526 * C1509 + C28525 * C1511) +
             C28956 * C50788) *
                C50835 * C51027 +
            ((C28967 + C28968) * C1512 - (C28958 * C1509 + C28957 * C1511) +
             (C28969 + C28970) * C50788) *
                C50835 * C44479) *
               C50762) *
              C50968 +
          ((((C27999 + C28000) * C1512 -
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C1509 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C1511) +
             (C28001 + C28002) * C50788) *
                C50835 * C51026 +
            ((C28754 + C28753) * C1512 -
             ((C28002 + C28001) * C1509 + (C28000 + C27999) * C1511) +
             (C28756 + C28755) * C50788) *
                C50835 * C51027 +
            ((C45334 + C45333) * C1512 - (C45324 * C1509 + C45323 * C1511) +
             (C45336 + C45335) * C50788) *
                C50835 * C44479) *
               C1169 +
           (((C24890 + C24891) * C1511 + (C24892 + C24893) * C1509 -
             C29762 * C1512 - C29761 * C50788) *
                C50835 * C51026 +
            (C29759 * C1511 + C29760 * C1509 - (C28757 + C28758) * C1512 -
             (C28759 + C28760) * C50788) *
                C50835 * C51027 +
            ((C28758 + C28757) * C1511 + (C28760 + C28759) * C1509 -
             (C49711 * C6822 + C50692 * C6823 + C49718 * C3498 +
              C50963 * C3502) *
                 C1512 -
             (C49711 * C6824 + C50692 * C6825 + C49718 * C3504 +
              C50963 * C3510) *
                 C50788) *
                C50835 * C44479) *
               C50762) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C1511 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C1509 -
            (C27995 + C27996) * C1512 - (C27997 + C27998) * C50788) *
               C50835 * C51026 +
           ((C27996 + C27995) * C1511 + (C27998 + C27997) * C1509 -
            (C28750 + C28749) * C1512 - (C28752 + C28751) * C50788) *
               C50835 * C51027 +
           (C45321 * C1511 + C45322 * C1509 - C45581 * C1512 -
            C45582 * C50788) *
               C50835 * C44479) *
              C51022 +
          ((C28527 * C1512 -
            ((C24885 + C24884) * C1509 + (C24883 + C24882) * C1511) +
            C28528 * C50788) *
               C50835 * C51026 +
           (C28955 * C1512 - (C28526 * C1509 + C28525 * C1511) +
            C28956 * C50788) *
               C50835 * C51027 +
           ((C28967 + C28968) * C1512 - (C28958 * C1509 + C28957 * C1511) +
            (C28969 + C28970) * C50788) *
               C50835 * C44479) *
              C51009 +
          (C27294 * C50835 * C51026 +
           (C28529 * C1511 + C28530 * C1509 - (C25851 + C25850) * C1512 -
            (C25853 + C25852) * C50788) *
               C50835 * C51027 +
           ((C25850 + C25851) * C1511 + (C25852 + C25853) * C1509 -
            (C49711 * C3500 + C50692 * C3506 + C49718 * C3501 +
             C50963 * C3507) *
                C1512 -
            (C49711 * C3508 + C50692 * C3512 + C49718 * C3509 +
             C50963 * C3513) *
                C50788) *
               C50835 * C44479) *
              C1274) *
         C50714) /
        (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C1744 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C51023 -
            (C27995 + C27996) * C1745 - (C27997 + C27998) * C51012 +
            C45321 * C1746 + C45322 * C1743) *
               C50835 * C51026 +
           ((C27996 + C27995) * C1744 + (C27998 + C27997) * C51023 -
            (C28750 + C28749) * C1745 - (C28752 + C28751) * C51012 +
            (C29110 + C29109) * C1746 + (C29112 + C29111) * C1743) *
               C50835 * C51027 +
           (C45321 * C1744 + C45322 * C51023 - C45581 * C1745 -
            C45582 * C51012 + (C45592 + C45591) * C1746 +
            (C45594 + C45593) * C1743) *
               C50835 * C44479) *
              C1169 +
          ((C28527 * C1745 -
            ((C24885 + C24884) * C51023 + (C24883 + C24882) * C1744) +
            C28528 * C51012 - C28957 * C1746 - C28958 * C1743) *
               C50835 * C51026 +
           (C28955 * C1745 - (C28526 * C51023 + C28525 * C1744) +
            C28956 * C51012 - (C28968 + C28967) * C1746 -
            (C28970 + C28969) * C1743) *
               C50835 * C51027 +
           ((C28967 + C28968) * C1745 - (C28958 * C51023 + C28957 * C1744) +
            (C28969 + C28970) * C51012 -
            (C49711 * C6194 + C50692 * C6196 + C49718 * C6195 +
             C50963 * C6197) *
                C1746 -
            (C49711 * C6198 + C50692 * C6200 + C49718 * C6199 +
             C50963 * C6201) *
                C1743) *
               C50835 * C44479) *
              C50762) *
         C50714) /
        (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C121 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50776) *
                C50835 * C51026 +
            ((C27996 + C27995) * C121 + (C27998 + C27997) * C50776) * C50835 *
                C51027 +
            ((C28749 + C28750) * C121 + (C28751 + C28752) * C50776) * C50835 *
                C44479) *
               C501 -
           ((C28958 * C50776 + C28957 * C121) * C50835 * C44479 +
            (C28526 * C50776 + C28525 * C121) * C50835 * C51027 +
            ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C50835 *
                C51026) *
               C502 +
           (C25230 * C50835 * C51026 +
            (C28529 * C121 + C28530 * C50776) * C50835 * C51027 +
            ((C25850 + C25851) * C121 + (C25852 + C25853) * C50776) * C50835 *
                C44479) *
               C503) *
              C50968 +
          ((((C24890 + C24891) * C121 + (C24892 + C24893) * C50776) * C50835 *
                C51026 +
            (C29759 * C121 + C29760 * C50776) * C50835 * C51027 +
            ((C28758 + C28757) * C121 + (C28760 + C28759) * C50776) * C50835 *
                C44479) *
               C502 -
           (((C28755 + C28756) * C50776 + (C28753 + C28754) * C121) * C50835 *
                C44479 +
            ((C28002 + C28001) * C50776 + (C28000 + C27999) * C121) * C50835 *
                C51027 +
            ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                 C50776 +
             (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                 C121) *
                C50835 * C51026) *
               C501 -
           (((C49711 * C3218 + C50692 * C3221 + C49718 * C3216 +
              C50963 * C3220) *
                 C50776 +
             (C49711 * C3212 + C50692 * C3217 + C49718 * C3211 +
              C50963 * C3214) *
                 C121) *
                C50835 * C44479 +
            ((C26461 + C26460) * C50776 + (C26459 + C26458) * C121) * C50835 *
                C51027 +
            C25231 * C50835 * C51026) *
               C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C121 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C50776) *
               C50835 * C51026 +
           ((C27996 + C27995) * C121 + (C27998 + C27997) * C50776) * C50835 *
               C51027 +
           ((C28749 + C28750) * C121 + (C28751 + C28752) * C50776) * C50835 *
               C44479) *
              C50746 * C113 -
          (((C28755 + C28756) * C50776 + (C28753 + C28754) * C121) * C50835 *
               C44479 +
           ((C28002 + C28001) * C50776 + (C28000 + C27999) * C121) * C50835 *
               C51027 +
           ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                C50776 +
            (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                C121) *
               C50835 * C51026) *
              C50746 * C114 +
          (((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                C121 +
            (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                C50776) *
               C50835 * C51026 +
           ((C28004 + C28003) * C121 + (C28006 + C28005) * C50776) * C50835 *
               C51027 +
           ((C49718 * C849 + C50963 * C854 + C49711 * C850 + C50692 * C855) *
                C121 +
            (C49718 * C858 + C50963 * C864 + C49711 * C859 + C50692 * C865) *
                C50776) *
               C50835 * C44479) *
              C50746 * C115 -
          (((C49711 * C861 + C50692 * C866 + C49718 * C859 + C50963 * C865) *
                C50776 +
            (C49711 * C851 + C50692 * C860 + C49718 * C850 + C50963 * C855) *
                C121) *
               C50835 * C44479 +
           ((C49711 * C394 + C50692 * C401 + C49718 * C389 + C50963 * C397) *
                C50776 +
            (C49711 * C383 + C50692 * C393 + C49718 * C379 + C50963 * C385) *
                C121) *
               C50835 * C51027 +
           ((C49711 * C137 + C50692 * C147 + C49718 * C136 + C50963 * C146) *
                C50776 +
            (C49711 * C126 + C50692 * C138 + C49718 * C125 + C50963 * C132) *
                C121) *
               C50835 * C51026) *
              C50746 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C844 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C841 -
            (C27995 + C27996) * C845 - (C27997 + C27998) * C842 +
            C45321 * C846 + C45322 * C843) *
               C50835 * C51026 +
           ((C27996 + C27995) * C844 + (C27998 + C27997) * C841 -
            (C28750 + C28749) * C845 - (C28752 + C28751) * C842 +
            (C29110 + C29109) * C846 + (C29112 + C29111) * C843) *
               C50835 * C51027 +
           (C45321 * C844 + C45322 * C841 - (C29109 + C29110) * C845 -
            (C29111 + C29112) * C842 +
            (C49718 * C6008 + C50963 * C6011 + C49711 * C6009 +
             C50692 * C6012) *
                C846 +
            (C49718 * C6013 + C50963 * C6017 + C49711 * C6014 +
             C50692 * C6018) *
                C843) *
               C50835 * C44479) *
              C50746 * C50968 +
          (((C27999 + C28000) * C845 -
            ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                 C841 +
             (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                 C844) +
            (C28001 + C28002) * C842 - C45323 * C846 - C45324 * C843) *
               C50835 * C51026 +
           ((C28754 + C28753) * C845 -
            ((C28002 + C28001) * C841 + (C28000 + C27999) * C844) +
            (C28756 + C28755) * C842 - (C45333 + C45334) * C846 -
            (C45335 + C45336) * C843) *
               C50835 * C51027 +
           ((C45334 + C45333) * C845 - (C45324 * C841 + C45323 * C844) +
            (C45336 + C45335) * C842 -
            (C49711 * C6010 + C50692 * C6015 + C49718 * C6009 +
             C50963 * C6012) *
                C846 -
            (C49711 * C6016 + C50692 * C6019 + C49718 * C6014 +
             C50963 * C6018) *
                C843) *
               C50835 * C44479) *
              C50746 * C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C121 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C50776) *
               C50835 * C51026 +
           ((C27996 + C27995) * C121 + (C27998 + C27997) * C50776) * C50835 *
               C51027 +
           ((C28749 + C28750) * C121 + (C28751 + C28752) * C50776) * C50835 *
               C44479) *
              C592 -
          ((C28958 * C50776 + C28957 * C121) * C50835 * C44479 +
           (C28526 * C50776 + C28525 * C121) * C50835 * C51027 +
           ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C50835 *
               C51026) *
              C593 +
          (C25230 * C50835 * C51026 +
           (C28529 * C121 + C28530 * C50776) * C50835 * C51027 +
           ((C25850 + C25851) * C121 + (C25852 + C25853) * C50776) * C50835 *
               C44479) *
              C594 -
          (((C49711 * C3372 + C50692 * C3374 + C49718 * C3373 +
             C50963 * C3375) *
                C50776 +
            (C49711 * C3368 + C50692 * C3370 + C49718 * C3369 +
             C50963 * C3371) *
                C121) *
               C50835 * C44479 +
           ((C25531 + C25530) * C50776 + (C25529 + C25528) * C121) * C50835 *
               C51027 +
           C25346 * C50835 * C51026) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C121 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50776) *
                C50835 * C51026 +
            ((C27996 + C27995) * C121 + (C27998 + C27997) * C50776) * C50835 *
                C51027 +
            ((C28749 + C28750) * C121 + (C28751 + C28752) * C50776) * C50835 *
                C44479) *
               C50975 -
           ((C28958 * C50776 + C28957 * C121) * C50835 * C44479 +
            (C28526 * C50776 + C28525 * C121) * C50835 * C51027 +
            ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C50835 *
                C51026) *
               C50762) *
              C250 +
          ((((C24890 + C24891) * C121 + (C24892 + C24893) * C50776) * C50835 *
                C51026 +
            (C29759 * C121 + C29760 * C50776) * C50835 * C51027 +
            ((C28758 + C28757) * C121 + (C28760 + C28759) * C50776) * C50835 *
                C44479) *
               C50762 -
           (((C28755 + C28756) * C50776 + (C28753 + C28754) * C121) * C50835 *
                C44479 +
            ((C28002 + C28001) * C50776 + (C28000 + C27999) * C121) * C50835 *
                C51027 +
            ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                 C50776 +
             (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                 C121) *
                C50835 * C51026) *
               C50975) *
              C251 +
          ((((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                 C121 +
             (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                 C50776) *
                C50835 * C51026 +
            ((C28004 + C28003) * C121 + (C28006 + C28005) * C50776) * C50835 *
                C51027 +
            ((C49718 * C849 + C50963 * C854 + C49711 * C850 + C50692 * C855) *
                 C121 +
             (C49718 * C858 + C50963 * C864 + C49711 * C859 + C50692 * C865) *
                 C50776) *
                C50835 * C44479) *
               C50975 -
           (((C49711 * C973 + C50692 * C977 + C49718 * C974 + C50963 * C978) *
                 C50776 +
             (C49711 * C965 + C50692 * C969 + C49718 * C966 + C50963 * C970) *
                 C121) *
                C50835 * C44479 +
            ((C27776 + C27775) * C50776 + (C27774 + C27773) * C121) * C50835 *
                C51027 +
            ((C24901 + C24900) * C50776 + (C24899 + C24898) * C121) * C50835 *
                C51026) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C844 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C841 -
            (C27995 + C27996) * C845 - (C27997 + C27998) * C842 +
            C45321 * C846 + C45322 * C843) *
               C50835 * C51026 +
           ((C27996 + C27995) * C844 + (C27998 + C27997) * C841 -
            (C28750 + C28749) * C845 - (C28752 + C28751) * C842 +
            (C29110 + C29109) * C846 + (C29112 + C29111) * C843) *
               C50835 * C51027 +
           (C45321 * C844 + C45322 * C841 - (C29109 + C29110) * C845 -
            (C29111 + C29112) * C842 +
            (C49718 * C6008 + C50963 * C6011 + C49711 * C6009 +
             C50692 * C6012) *
                C846 +
            (C49718 * C6013 + C50963 * C6017 + C49711 * C6014 +
             C50692 * C6018) *
                C843) *
               C50835 * C44479) *
              C50975 +
          ((C28527 * C845 -
            ((C24885 + C24884) * C841 + (C24883 + C24882) * C844) +
            C28528 * C842 - C28957 * C846 - C28958 * C843) *
               C50835 * C51026 +
           (C28955 * C845 - (C28526 * C841 + C28525 * C844) + C28956 * C842 -
            (C28968 + C28967) * C846 - (C28970 + C28969) * C843) *
               C50835 * C51027 +
           ((C28967 + C28968) * C845 - (C28958 * C841 + C28957 * C844) +
            (C28969 + C28970) * C842 -
            (C49711 * C6194 + C50692 * C6196 + C49718 * C6195 +
             C50963 * C6197) *
                C846 -
            (C49711 * C6198 + C50692 * C6200 + C49718 * C6199 +
             C50963 * C6201) *
                C843) *
               C50835 * C44479) *
              C50762) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C377 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C50977 -
            (C27995 + C27996) * C378 - (C27997 + C27998) * C50788) *
               C50835 * C51026 +
           ((C27996 + C27995) * C377 + (C27998 + C27997) * C50977 -
            (C28750 + C28749) * C378 - (C28752 + C28751) * C50788) *
               C50835 * C51027 +
           ((C28749 + C28750) * C377 + (C28751 + C28752) * C50977 -
            (C29109 + C29110) * C378 - (C29111 + C29112) * C50788) *
               C50835 * C44479) *
              C501 +
          ((C28527 * C378 -
            ((C24885 + C24884) * C50977 + (C24883 + C24882) * C377) +
            C28528 * C50788) *
               C50835 * C51026 +
           (C28955 * C378 - (C28526 * C50977 + C28525 * C377) +
            C28956 * C50788) *
               C50835 * C51027 +
           ((C28967 + C28968) * C378 - (C28958 * C50977 + C28957 * C377) +
            (C28969 + C28970) * C50788) *
               C50835 * C44479) *
              C502 +
          (C25537 * C50835 * C51026 +
           (C28529 * C377 + C28530 * C50977 - (C25851 + C25850) * C378 -
            (C25853 + C25852) * C50788) *
               C50835 * C51027 +
           ((C25850 + C25851) * C377 + (C25852 + C25853) * C50977 -
            (C49711 * C3500 + C50692 * C3506 + C49718 * C3501 +
             C50963 * C3507) *
                C378 -
            (C49711 * C3508 + C50692 * C3512 + C49718 * C3509 +
             C50963 * C3513) *
                C50788) *
               C50835 * C44479) *
              C503) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C377 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C50977 -
            (C27995 + C27996) * C378 - (C27997 + C27998) * C50788) *
               C50835 * C51026 +
           ((C27996 + C27995) * C377 + (C27998 + C27997) * C50977 -
            (C28750 + C28749) * C378 - (C28752 + C28751) * C50788) *
               C50835 * C51027 +
           ((C28749 + C28750) * C377 + (C28751 + C28752) * C50977 -
            (C29109 + C29110) * C378 - (C29111 + C29112) * C50788) *
               C50835 * C44479) *
              C50746 * C250 +
          (((C27999 + C28000) * C378 -
            ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                 C50977 +
             (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                 C377) +
            (C28001 + C28002) * C50788) *
               C50835 * C51026 +
           ((C28754 + C28753) * C378 -
            ((C28002 + C28001) * C50977 + (C28000 + C27999) * C377) +
            (C28756 + C28755) * C50788) *
               C50835 * C51027 +
           ((C49718 * C1057 + C50963 * C1061 + C49711 * C1056 +
             C50692 * C1060) *
                C378 -
            ((C28755 + C28756) * C50977 + (C28753 + C28754) * C377) +
            (C49718 * C1065 + C50963 * C1069 + C49711 * C1064 +
             C50692 * C1068) *
                C50788) *
               C50835 * C44479) *
              C50746 * C251 +
          (((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                C377 +
            (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                C50977 -
            (C28003 + C28004) * C378 - (C28005 + C28006) * C50788) *
               C50835 * C51026 +
           ((C28004 + C28003) * C377 + (C28006 + C28005) * C50977 -
            (C44781 + C44782) * C378 - (C44783 + C44784) * C50788) *
               C50835 * C51027 +
           ((C44782 + C44781) * C377 + (C44784 + C44783) * C50977 -
            (C49711 * C1055 + C50692 * C1059 + C49718 * C1056 +
             C50963 * C1060) *
                C378 -
            (C49711 * C1063 + C50692 * C1067 + C49718 * C1064 +
             C50963 * C1068) *
                C50788) *
               C50835 * C44479) *
              C50746 * C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
               C1051 +
           (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
               C1047 -
           (C27995 + C27996) * C1052 - (C27997 + C27998) * C1048 +
           C45321 * C1053 + C45322 * C1049 - C45581 * C1054 - C45582 * C1050) *
              C50835 * C51026 +
          ((C27996 + C27995) * C1051 + (C27998 + C27997) * C1047 -
           (C28750 + C28749) * C1052 - (C28752 + C28751) * C1048 +
           (C29110 + C29109) * C1053 + (C29112 + C29111) * C1049 -
           (C45591 + C45592) * C1054 - (C45593 + C45594) * C1050) *
              C50835 * C51027 +
          (C45321 * C1051 + C45322 * C1047 - C45581 * C1052 - C45582 * C1048 +
           (C45592 + C45591) * C1053 + (C45594 + C45593) * C1049 -
           (C49711 * C6314 + C50692 * C6316 + C49718 * C6315 + C50963 * C6317) *
               C1054 -
           (C49711 * C6318 + C50692 * C6320 + C49718 * C6319 + C50963 * C6321) *
               C1050) *
              C50835 * C44479) *
         C50746 * C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C1511 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C1509 -
            (C27995 + C27996) * C1512 - (C27997 + C27998) * C50788) *
               C50835 * C51026 +
           ((C27996 + C27995) * C1511 + (C27998 + C27997) * C1509 -
            (C28750 + C28749) * C1512 - (C28752 + C28751) * C50788) *
               C50835 * C51027 +
           (C45321 * C1511 + C45322 * C1509 - C45581 * C1512 -
            C45582 * C50788) *
               C50835 * C44479) *
              C50746 * C51021 +
          (((C27999 + C28000) * C1512 -
            ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                 C1509 +
             (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                 C1511) +
            (C28001 + C28002) * C50788) *
               C50835 * C51026 +
           ((C28754 + C28753) * C1512 -
            ((C28002 + C28001) * C1509 + (C28000 + C27999) * C1511) +
            (C28756 + C28755) * C50788) *
               C50835 * C51027 +
           ((C45334 + C45333) * C1512 - (C45324 * C1509 + C45323 * C1511) +
            (C45336 + C45335) * C50788) *
               C50835 * C44479) *
              C50746 * C51006 +
          (((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                C1511 +
            (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                C1509 -
            (C28003 + C28004) * C1512 - (C28005 + C28006) * C50788) *
               C50835 * C51026 +
           ((C28004 + C28003) * C1511 + (C28006 + C28005) * C1509 -
            (C44781 + C44782) * C1512 - (C44783 + C44784) * C50788) *
               C50835 * C51027 +
           ((C44782 + C44781) * C1511 + (C44784 + C44783) * C1509 -
            (C49711 * C1055 + C50692 * C1059 + C49718 * C1056 +
             C50963 * C1060) *
                C1512 -
            (C49711 * C1063 + C50692 * C1067 + C49718 * C1064 +
             C50963 * C1068) *
                C50788) *
               C50835 * C44479) *
              C50746 * C1173)) /
        (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C1511 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C1509 -
             (C27995 + C27996) * C1512 - (C27997 + C27998) * C50788) *
                C50835 * C51026 +
            ((C27996 + C27995) * C1511 + (C27998 + C27997) * C1509 -
             (C28750 + C28749) * C1512 - (C28752 + C28751) * C50788) *
                C50835 * C51027 +
            (C45321 * C1511 + C45322 * C1509 - C45581 * C1512 -
             C45582 * C50788) *
                C50835 * C44479) *
               C50975 +
           ((C28527 * C1512 -
             ((C24885 + C24884) * C1509 + (C24883 + C24882) * C1511) +
             C28528 * C50788) *
                C50835 * C51026 +
            (C28955 * C1512 - (C28526 * C1509 + C28525 * C1511) +
             C28956 * C50788) *
                C50835 * C51027 +
            ((C28967 + C28968) * C1512 - (C28958 * C1509 + C28957 * C1511) +
             (C28969 + C28970) * C50788) *
                C50835 * C44479) *
               C50762) *
              C1275 +
          ((((C27999 + C28000) * C1512 -
             ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                  C1509 +
              (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                  C1511) +
             (C28001 + C28002) * C50788) *
                C50835 * C51026 +
            ((C28754 + C28753) * C1512 -
             ((C28002 + C28001) * C1509 + (C28000 + C27999) * C1511) +
             (C28756 + C28755) * C50788) *
                C50835 * C51027 +
            ((C45334 + C45333) * C1512 - (C45324 * C1509 + C45323 * C1511) +
             (C45336 + C45335) * C50788) *
                C50835 * C44479) *
               C50975 +
           (((C24890 + C24891) * C1511 + (C24892 + C24893) * C1509 -
             C29762 * C1512 - C29761 * C50788) *
                C50835 * C51026 +
            (C29759 * C1511 + C29760 * C1509 - (C28757 + C28758) * C1512 -
             (C28759 + C28760) * C50788) *
                C50835 * C51027 +
            ((C28758 + C28757) * C1511 + (C28760 + C28759) * C1509 -
             (C49711 * C6822 + C50692 * C6823 + C49718 * C3498 +
              C50963 * C3502) *
                 C1512 -
             (C49711 * C6824 + C50692 * C6825 + C49718 * C3504 +
              C50963 * C3510) *
                 C50788) *
                C50835 * C44479) *
               C50762) *
              C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C1744 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C51023 -
            (C27995 + C27996) * C1745 - (C27997 + C27998) * C51012 +
            C45321 * C1746 + C45322 * C1743) *
               C50835 * C51026 +
           ((C27996 + C27995) * C1744 + (C27998 + C27997) * C51023 -
            (C28750 + C28749) * C1745 - (C28752 + C28751) * C51012 +
            (C29110 + C29109) * C1746 + (C29112 + C29111) * C1743) *
               C50835 * C51027 +
           (C45321 * C1744 + C45322 * C51023 - C45581 * C1745 -
            C45582 * C51012 + (C45592 + C45591) * C1746 +
            (C45594 + C45593) * C1743) *
               C50835 * C44479) *
              C50746 * C1275 +
          (((C27999 + C28000) * C1745 -
            ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                 C51023 +
             (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                 C1744) +
            (C28001 + C28002) * C51012 - C45323 * C1746 - C45324 * C1743) *
               C50835 * C51026 +
           ((C28754 + C28753) * C1745 -
            ((C28002 + C28001) * C51023 + (C28000 + C27999) * C1744) +
            (C28756 + C28755) * C51012 - (C45333 + C45334) * C1746 -
            (C45335 + C45336) * C1743) *
               C50835 * C51027 +
           ((C45334 + C45333) * C1745 - (C45324 * C51023 + C45323 * C1744) +
            (C45336 + C45335) * C51012 -
            (C49711 * C6010 + C50692 * C6015 + C49718 * C6009 +
             C50963 * C6012) *
                C1746 -
            (C49711 * C6016 + C50692 * C6019 + C49718 * C6014 +
             C50963 * C6018) *
                C1743) *
               C50835 * C44479) *
              C50746 * C50719)) /
        (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C121 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C50776) *
               C50835 * C51026 +
           ((C27996 + C27995) * C121 + (C27998 + C27997) * C50776) * C50835 *
               C51027 +
           ((C28749 + C28750) * C121 + (C28751 + C28752) * C50776) * C50835 *
               C44479) *
              C50746 * C113 -
          (((C28755 + C28756) * C50776 + (C28753 + C28754) * C121) * C50835 *
               C44479 +
           ((C28002 + C28001) * C50776 + (C28000 + C27999) * C121) * C50835 *
               C51027 +
           ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                C50776 +
            (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                C121) *
               C50835 * C51026) *
              C50746 * C114 +
          (((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                C121 +
            (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                C50776) *
               C50835 * C51026 +
           ((C28004 + C28003) * C121 + (C28006 + C28005) * C50776) * C50835 *
               C51027 +
           ((C49718 * C849 + C50963 * C854 + C49711 * C850 + C50692 * C855) *
                C121 +
            (C49718 * C858 + C50963 * C864 + C49711 * C859 + C50692 * C865) *
                C50776) *
               C50835 * C44479) *
              C50746 * C115 -
          (((C49711 * C861 + C50692 * C866 + C49718 * C859 + C50963 * C865) *
                C50776 +
            (C49711 * C851 + C50692 * C860 + C49718 * C850 + C50963 * C855) *
                C121) *
               C50835 * C44479 +
           ((C49711 * C394 + C50692 * C401 + C49718 * C389 + C50963 * C397) *
                C50776 +
            (C49711 * C383 + C50692 * C393 + C49718 * C379 + C50963 * C385) *
                C121) *
               C50835 * C51027 +
           ((C49711 * C137 + C50692 * C147 + C49718 * C136 + C50963 * C146) *
                C50776 +
            (C49711 * C126 + C50692 * C138 + C49718 * C125 + C50963 * C132) *
                C121) *
               C50835 * C51026) *
              C50746 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C121 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50776) *
                C50835 * C51026 +
            ((C27996 + C27995) * C121 + (C27998 + C27997) * C50776) * C50835 *
                C51027 +
            ((C28749 + C28750) * C121 + (C28751 + C28752) * C50776) * C50835 *
                C44479) *
               C501 -
           ((C28958 * C50776 + C28957 * C121) * C50835 * C44479 +
            (C28526 * C50776 + C28525 * C121) * C50835 * C51027 +
            ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C50835 *
                C51026) *
               C502 +
           (C25230 * C50835 * C51026 +
            (C28529 * C121 + C28530 * C50776) * C50835 * C51027 +
            ((C25850 + C25851) * C121 + (C25852 + C25853) * C50776) * C50835 *
                C44479) *
               C503) *
              C50968 +
          ((((C24890 + C24891) * C121 + (C24892 + C24893) * C50776) * C50835 *
                C51026 +
            (C29759 * C121 + C29760 * C50776) * C50835 * C51027 +
            ((C28758 + C28757) * C121 + (C28760 + C28759) * C50776) * C50835 *
                C44479) *
               C502 -
           (((C28755 + C28756) * C50776 + (C28753 + C28754) * C121) * C50835 *
                C44479 +
            ((C28002 + C28001) * C50776 + (C28000 + C27999) * C121) * C50835 *
                C51027 +
            ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                 C50776 +
             (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                 C121) *
                C50835 * C51026) *
               C501 -
           (((C49711 * C3218 + C50692 * C3221 + C49718 * C3216 +
              C50963 * C3220) *
                 C50776 +
             (C49711 * C3212 + C50692 * C3217 + C49718 * C3211 +
              C50963 * C3214) *
                 C121) *
                C50835 * C44479 +
            ((C26461 + C26460) * C50776 + (C26459 + C26458) * C121) * C50835 *
                C51027 +
            C25231 * C50835 * C51026) *
               C503) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                 C121 +
             (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                 C50776) *
                C50835 * C51026 +
            ((C27996 + C27995) * C121 + (C27998 + C27997) * C50776) * C50835 *
                C51027 +
            ((C28749 + C28750) * C121 + (C28751 + C28752) * C50776) * C50835 *
                C44479) *
               C50975 -
           ((C28958 * C50776 + C28957 * C121) * C50835 * C44479 +
            (C28526 * C50776 + C28525 * C121) * C50835 * C51027 +
            ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C50835 *
                C51026) *
               C50762) *
              C250 +
          ((((C24890 + C24891) * C121 + (C24892 + C24893) * C50776) * C50835 *
                C51026 +
            (C29759 * C121 + C29760 * C50776) * C50835 * C51027 +
            ((C28758 + C28757) * C121 + (C28760 + C28759) * C50776) * C50835 *
                C44479) *
               C50762 -
           (((C28755 + C28756) * C50776 + (C28753 + C28754) * C121) * C50835 *
                C44479 +
            ((C28002 + C28001) * C50776 + (C28000 + C27999) * C121) * C50835 *
                C51027 +
            ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                 C50776 +
             (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                 C121) *
                C50835 * C51026) *
               C50975) *
              C251 +
          ((((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                 C121 +
             (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                 C50776) *
                C50835 * C51026 +
            ((C28004 + C28003) * C121 + (C28006 + C28005) * C50776) * C50835 *
                C51027 +
            ((C49718 * C849 + C50963 * C854 + C49711 * C850 + C50692 * C855) *
                 C121 +
             (C49718 * C858 + C50963 * C864 + C49711 * C859 + C50692 * C865) *
                 C50776) *
                C50835 * C44479) *
               C50975 -
           (((C49711 * C973 + C50692 * C977 + C49718 * C974 + C50963 * C978) *
                 C50776 +
             (C49711 * C965 + C50692 * C969 + C49718 * C966 + C50963 * C970) *
                 C121) *
                C50835 * C44479 +
            ((C27776 + C27775) * C50776 + (C27774 + C27773) * C121) * C50835 *
                C51027 +
            ((C24901 + C24900) * C50776 + (C24899 + C24898) * C121) * C50835 *
                C51026) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C121 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C50776) *
               C50835 * C51026 +
           ((C27996 + C27995) * C121 + (C27998 + C27997) * C50776) * C50835 *
               C51027 +
           ((C28749 + C28750) * C121 + (C28751 + C28752) * C50776) * C50835 *
               C44479) *
              C592 -
          ((C28958 * C50776 + C28957 * C121) * C50835 * C44479 +
           (C28526 * C50776 + C28525 * C121) * C50835 * C51027 +
           ((C24885 + C24884) * C50776 + (C24883 + C24882) * C121) * C50835 *
               C51026) *
              C593 +
          (C25230 * C50835 * C51026 +
           (C28529 * C121 + C28530 * C50776) * C50835 * C51027 +
           ((C25850 + C25851) * C121 + (C25852 + C25853) * C50776) * C50835 *
               C44479) *
              C594 -
          (((C49711 * C3372 + C50692 * C3374 + C49718 * C3373 +
             C50963 * C3375) *
                C50776 +
            (C49711 * C3368 + C50692 * C3370 + C49718 * C3369 +
             C50963 * C3371) *
                C121) *
               C50835 * C44479 +
           ((C25531 + C25530) * C50776 + (C25529 + C25528) * C121) * C50835 *
               C51027 +
           C25346 * C50835 * C51026) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C377 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C50977 -
            (C27995 + C27996) * C378 - (C27997 + C27998) * C50788) *
               C50835 * C51026 +
           ((C27996 + C27995) * C377 + (C27998 + C27997) * C50977 -
            (C28750 + C28749) * C378 - (C28752 + C28751) * C50788) *
               C50835 * C51027 +
           ((C28749 + C28750) * C377 + (C28751 + C28752) * C50977 -
            (C29109 + C29110) * C378 - (C29111 + C29112) * C50788) *
               C50835 * C44479) *
              C50746 * C250 +
          (((C27999 + C28000) * C378 -
            ((C49711 * C135 + C50692 * C145 + C49718 * C134 + C50963 * C144) *
                 C50977 +
             (C49711 * C124 + C50692 * C131 + C49718 * C123 + C50963 * C130) *
                 C377) +
            (C28001 + C28002) * C50788) *
               C50835 * C51026 +
           ((C28754 + C28753) * C378 -
            ((C28002 + C28001) * C50977 + (C28000 + C27999) * C377) +
            (C28756 + C28755) * C50788) *
               C50835 * C51027 +
           ((C49718 * C1057 + C50963 * C1061 + C49711 * C1056 +
             C50692 * C1060) *
                C378 -
            ((C28755 + C28756) * C50977 + (C28753 + C28754) * C377) +
            (C49718 * C1065 + C50963 * C1069 + C49711 * C1064 +
             C50692 * C1068) *
                C50788) *
               C50835 * C44479) *
              C50746 * C251 +
          (((C49718 * C124 + C50963 * C131 + C49711 * C125 + C50692 * C132) *
                C377 +
            (C49718 * C135 + C50963 * C145 + C49711 * C136 + C50692 * C146) *
                C50977 -
            (C28003 + C28004) * C378 - (C28005 + C28006) * C50788) *
               C50835 * C51026 +
           ((C28004 + C28003) * C377 + (C28006 + C28005) * C50977 -
            (C44781 + C44782) * C378 - (C44783 + C44784) * C50788) *
               C50835 * C51027 +
           ((C44782 + C44781) * C377 + (C44784 + C44783) * C50977 -
            (C49711 * C1055 + C50692 * C1059 + C49718 * C1056 +
             C50963 * C1060) *
                C378 -
            (C49711 * C1063 + C50692 * C1067 + C49718 * C1064 +
             C50963 * C1068) *
                C50788) *
               C50835 * C44479) *
              C50746 * C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49718 * C122 + C50963 * C129 + C49711 * C123 + C50692 * C130) *
                C377 +
            (C49718 * C133 + C50963 * C143 + C49711 * C134 + C50692 * C144) *
                C50977 -
            (C27995 + C27996) * C378 - (C27997 + C27998) * C50788) *
               C50835 * C51026 +
           ((C27996 + C27995) * C377 + (C27998 + C27997) * C50977 -
            (C28750 + C28749) * C378 - (C28752 + C28751) * C50788) *
               C50835 * C51027 +
           ((C28749 + C28750) * C377 + (C28751 + C28752) * C50977 -
            (C29109 + C29110) * C378 - (C29111 + C29112) * C50788) *
               C50835 * C44479) *
              C501 +
          ((C28527 * C378 -
            ((C24885 + C24884) * C50977 + (C24883 + C24882) * C377) +
            C28528 * C50788) *
               C50835 * C51026 +
           (C28955 * C378 - (C28526 * C50977 + C28525 * C377) +
            C28956 * C50788) *
               C50835 * C51027 +
           ((C28967 + C28968) * C378 - (C28958 * C50977 + C28957 * C377) +
            (C28969 + C28970) * C50788) *
               C50835 * C44479) *
              C502 +
          (C25537 * C50835 * C51026 +
           (C28529 * C377 + C28530 * C50977 - (C25851 + C25850) * C378 -
            (C25853 + C25852) * C50788) *
               C50835 * C51027 +
           ((C25850 + C25851) * C377 + (C25852 + C25853) * C50977 -
            (C49711 * C3500 + C50692 * C3506 + C49718 * C3501 +
             C50963 * C3507) *
                C378 -
            (C49711 * C3508 + C50692 * C3512 + C49718 * C3509 +
             C50963 * C3513) *
                C50788) *
               C50835 * C44479) *
              C503) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[210] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C16983 * C122 + C16978 * C129 + C16984 * C123 +
                       C16979 * C130 + C16985 * C124 + C16980 * C131) *
                          C121 +
                      (C16983 * C133 + C16978 * C143 + C16984 * C134 +
                       C16979 * C144 + C16985 * C135 + C16980 * C145) *
                          C50776) *
                         C50835 * C33829 +
                     ((C34162 + C34161 + C34160) * C121 +
                      (C34165 + C34164 + C34163) * C50776) *
                         C50835 * C50911) *
                        C1169 -
                    (((C17804 + C17805 + C17806) * C50776 +
                      (C17801 + C17802 + C17803) * C121) *
                         C50835 * C50911 +
                     ((C17174 + C17173 + C17172) * C50776 +
                      (C17171 + C17170 + C17169) * C121) *
                         C50835 * C33829) *
                        C50762) *
                       C51021 +
                   ((((C17175 + C17176 + C17177) * C121 +
                      (C17178 + C17179 + C17180) * C50776) *
                         C50835 * C33829 +
                     ((C18719 + C18720 + C18721) * C121 +
                      (C18722 + C18723 + C18724) * C50776) *
                         C50835 * C50911) *
                        C50762 -
                    (((C34171 + C34170 + C34169) * C50776 +
                      (C34168 + C34167 + C34166) * C121) *
                         C50835 * C50911 +
                     ((C16985 * C136 + C16980 * C146 + C16984 * C135 +
                       C16979 * C145 + C16983 * C134 + C16978 * C144) *
                          C50776 +
                      (C16985 * C125 + C16980 * C132 + C16984 * C124 +
                       C16979 * C131 + C16983 * C123 + C16978 * C130) *
                          C121) *
                         C50835 * C33829) *
                        C1169) *
                       C51006 +
                   ((((C16983 * C124 + C16978 * C131 + C16984 * C125 +
                       C16979 * C132 + C16985 * C126 + C16980 * C138) *
                          C121 +
                      (C16983 * C135 + C16978 * C145 + C16984 * C136 +
                       C16979 * C146 + C16985 * C137 + C16980 * C147) *
                          C50776) *
                         C50835 * C33829 +
                     ((C34174 + C34173 + C34172) * C121 +
                      (C34177 + C34176 + C34175) * C50776) *
                         C50835 * C50911) *
                        C1169 -
                    (((C16985 * C1409 + C16980 * C1410 + C16984 * C726 +
                       C16979 * C738 + C16983 * C725 + C16978 * C737) *
                          C50776 +
                      (C16985 * C1407 + C16980 * C1408 + C16984 * C714 +
                       C16979 * C722 + C16983 * C713 + C16978 * C721) *
                          C121) *
                         C50835 * C50911 +
                     ((C17186 + C17185 + C17184) * C50776 +
                      (C17183 + C17182 + C17181) * C121) *
                         C50835 * C33829) *
                        C50762) *
                       C1173)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((((C19767 * C122 + C50687 * C129) * C121 +
                       (C19767 * C133 + C50687 * C143) * C50776) *
                          C2173 +
                      (C19921 + C19922) * C2174 + C20135 * C2175) *
                         C33829 +
                     ((C22193 * C121 + C22194 * C50776) * C2173 +
                      (C21993 + C21994) * C2174 + C31599 * C2175) *
                         C50911) *
                        C1169 -
                    ((C31701 * C2175 + (C22353 + C22354) * C2174 +
                      (C21994 + C21993) * C2173) *
                         C50911 +
                     (C20226 * C2175 + (C19924 + C19923) * C2174 +
                      (C19922 + C19921) * C2173) *
                         C33829) *
                        C50762) *
                       C51021 +
                   ((((C19927 + C19928) * C2173 + (C19929 + C19930) * C2174 +
                      (C19931 + C19932) * C2175) *
                         C33829 +
                     ((C21997 + C21998) * C2173 + (C22355 + C22356) * C2174 +
                      (C31600 + C31601) * C2175) *
                         C50911) *
                        C50762 -
                    ((C31602 * C2175 + (C21998 + C21997) * C2174 +
                      (C22198 * C50776 + C22197 * C121) * C2173) *
                         C50911 +
                     (C20146 * C2175 + (C19928 + C19927) * C2174 +
                      ((C19767 * C134 + C50687 * C144) * C50776 +
                       (C19767 * C123 + C50687 * C130) * C121) *
                          C2173) *
                         C33829) *
                        C1169) *
                       C51006 +
                   (((((C19767 * C124 + C50687 * C131) * C121 +
                       (C19767 * C135 + C50687 * C145) * C50776) *
                          C2173 +
                      (C19933 + C19934) * C2174 + (C19935 + C19936) * C2175) *
                         C33829 +
                     ((C22201 * C121 + C22202 * C50776) * C2173 +
                      (C22019 + C22020) * C2174 + (C31305 + C31306) * C2175) *
                         C50911) *
                        C1169 -
                    ((((C19767 * C4002 + C50687 * C4003) * C50776 +
                       (C19767 * C4000 + C50687 * C4001) * C121) *
                          C2175 +
                      (C31306 + C31305) * C2174 + (C22020 + C22019) * C2173) *
                         C50911 +
                     ((C19938 + C19937) * C2175 + (C19936 + C19935) * C2174 +
                      (C19934 + C19933) * C2173) *
                         C33829) *
                        C50762) *
                       C1173)) /
                     (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50776) *
                C50835 * C33829 +
            ((C34162 + C34161 + C34160) * C121 +
             (C34165 + C34164 + C34163) * C50776) *
                C50835 * C50911) *
               C51022 -
           (((C17804 + C17805 + C17806) * C50776 +
             (C17801 + C17802 + C17803) * C121) *
                C50835 * C50911 +
            ((C17174 + C17173 + C17172) * C50776 +
             (C17171 + C17170 + C17169) * C121) *
                C50835 * C33829) *
               C51009 +
           (((C17508 + C17507 + C17506) * C121 +
             (C17505 + C17504 + C17503) * C50776) *
                C50835 * C33829 +
            ((C17807 + C17808 + C17809) * C121 +
             (C17810 + C17811 + C17812) * C50776) *
                C50835 * C50911) *
               C1274) *
              C1275 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50776) *
                C50835 * C33829 +
            ((C18719 + C18720 + C18721) * C121 +
             (C18722 + C18723 + C18724) * C50776) *
                C50835 * C50911) *
               C51009 -
           (((C34171 + C34170 + C34169) * C50776 +
             (C34168 + C34167 + C34166) * C121) *
                C50835 * C50911 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50776 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C50835 * C33829) *
               C51022 -
           (((C16985 * C731 + C16980 * C739 + C16984 * C732 + C16979 * C740 +
              C16983 * C733 + C16978 * C741) *
                 C50776 +
             (C16985 * C715 + C16980 * C727 + C16984 * C716 + C16979 * C728 +
              C16983 * C717 + C16978 * C729) *
                 C121) *
                C50835 * C50911 +
            ((C17514 + C17513 + C17512) * C50776 +
             (C17511 + C17510 + C17509) * C121) *
                C50835 * C33829) *
               C1274) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C2173 +
             (C19921 + C19922) * C2174 + C20135 * C2175) *
                C33829 +
            ((C22193 * C121 + C22194 * C50776) * C2173 +
             (C21993 + C21994) * C2174 + C31599 * C2175) *
                C50911) *
               C51022 -
           ((C31701 * C2175 + (C22353 + C22354) * C2174 +
             (C21994 + C21993) * C2173) *
                C50911 +
            (C20226 * C2175 + (C19924 + C19923) * C2174 +
             (C19922 + C19921) * C2173) *
                C33829) *
               C51009 +
           ((C20135 * C2173 + C20136 * C2174 + (C20152 + C20151) * C2175) *
                C33829 +
            (C31599 * C2173 + (C22463 + C22464) * C2174 +
             (C31702 + C31703) * C2175) *
                C50911) *
               C1274) *
              C1275 +
          ((((C19927 + C19928) * C2173 + (C19929 + C19930) * C2174 +
             (C19931 + C19932) * C2175) *
                C33829 +
            ((C21997 + C21998) * C2173 + (C22355 + C22356) * C2174 +
             (C31600 + C31601) * C2175) *
                C50911) *
               C51009 -
           ((C31602 * C2175 + (C21998 + C21997) * C2174 +
             (C22198 * C50776 + C22197 * C121) * C2173) *
                C50911 +
            (C20146 * C2175 + (C19928 + C19927) * C2174 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C2173) *
                C33829) *
               C51022 -
           ((((C19767 * C3013 + C50687 * C3017) * C50776 +
              (C19767 * C3005 + C50687 * C3011) * C121) *
                 C2175 +
             (C31601 + C31600) * C2174 + C31602 * C2173) *
                C50911 +
            ((C20154 + C20153) * C2175 + C20145 * C2174 + C20146 * C2173) *
                C33829) *
               C1274) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C377 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50977 -
             (C34160 + C34161 + C34162) * C378 -
             (C34163 + C34164 + C34165) * C50788) *
                C50835 * C33829 +
            ((C34162 + C34161 + C34160) * C377 +
             (C34165 + C34164 + C34163) * C50977 -
             (C34740 + C34739 + C34738) * C378 -
             (C34743 + C34742 + C34741) * C50788) *
                C50835 * C50911) *
               C1169 +
           (((C17803 + C17802 + C17801) * C378 -
             ((C17174 + C17173 + C17172) * C50977 +
              (C17171 + C17170 + C17169) * C377) +
             (C17806 + C17805 + C17804) * C50788) *
                C50835 * C33829 +
            ((C18117 + C18118 + C18119) * C378 -
             ((C17804 + C17805 + C17806) * C50977 +
              (C17801 + C17802 + C17803) * C377) +
             (C18120 + C18121 + C18122) * C50788) *
                C50835 * C50911) *
               C50762) *
              C1275 +
          ((((C34166 + C34167 + C34168) * C378 -
             ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
               C16983 * C134 + C16978 * C144) *
                  C50977 +
              (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
               C16983 * C123 + C16978 * C130) *
                  C377) +
             (C34169 + C34170 + C34171) * C50788) *
                C50835 * C33829 +
            ((C34746 + C34745 + C34744) * C378 -
             ((C34171 + C34170 + C34169) * C50977 +
              (C34168 + C34167 + C34166) * C377) +
             (C34749 + C34748 + C34747) * C50788) *
                C50835 * C50911) *
               C1169 +
           (((C17175 + C17176 + C17177) * C377 +
             (C17178 + C17179 + C17180) * C50977 -
             (C18721 + C18720 + C18719) * C378 -
             (C18724 + C18723 + C18722) * C50788) *
                C50835 * C33829 +
            ((C18719 + C18720 + C18721) * C377 +
             (C18722 + C18723 + C18724) * C50977 -
             (C16985 * C965 + C16980 * C969 + C16984 * C966 + C16979 * C970 +
              C16983 * C967 + C16978 * C971) *
                 C378 -
             (C16985 * C973 + C16980 * C977 + C16984 * C974 + C16979 * C978 +
              C16983 * C975 + C16978 * C979) *
                 C50788) *
                C50835 * C50911) *
               C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C377 +
              (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
              C22194 * C50788) *
                 C2173 +
             (C20337 + C20338 - C20371 - C20372) * C2174 + C20381 * C2175) *
                C33829 +
            ((C22193 * C377 + C22194 * C50977 - C22195 * C378 -
              C22196 * C50788) *
                 C2173 +
             (C22613 + C22614 - C22615 - C22616) * C2174 + C31856 * C2175) *
                C50911) *
               C1169 +
           (((C20371 - (C20338 + C20337) + C20372) * C2173 +
             (C20373 - (C20344 + C20343) + C20374) * C2174 +
             (C20375 - (C20350 + C20349) + C20376) * C2175) *
                C33829 +
            ((C22615 - (C22614 + C22613) + C22616) * C2173 +
             (C22623 - (C22624 + C22625) + C22626) * C2174 +
             (C31851 - (C31852 + C31853) + C31854) * C2175) *
                C50911) *
               C50762) *
              C1275 +
          ((((C22197 * C378 -
              ((C19767 * C134 + C50687 * C144) * C50977 +
               (C19767 * C123 + C50687 * C130) * C377) +
              C22198 * C50788) *
                 C2173 +
             (C21039 - (C21017 + C21018) + C21040) * C2174 +
             (C21041 - (C21023 + C21024) + C21042) * C2175) *
                C33829 +
            ((C22199 * C378 - (C22198 * C50977 + C22197 * C377) +
              C22200 * C50788) *
                 C2173 +
             (C23567 - (C23568 + C23569) + C23570) * C2174 +
             (C32739 - (C32740 + C32741) + C32742) * C2175) *
                C50911) *
               C1169 +
           (((C21018 + C21017 - C21039 - C21040) * C2173 +
             (C21024 + C21023 - C21041 - C21042) * C2174 +
             (C21030 + C21029 - C21043 - C21044) * C2175) *
                C33829 +
            ((C23569 + C23568 - C23567 - C23570) * C2173 +
             (C32741 + C32740 - C32739 - C32742) * C2174 +
             (C21037 * C377 + C21038 * C50977 -
              (C19767 * C3368 + C50687 * C3370) * C378 -
              (C19767 * C3372 + C50687 * C3374) * C50788) *
                 C2175) *
                C50911) *
               C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C1511 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C1509 -
             (C34160 + C34161 + C34162) * C1512 -
             (C34163 + C34164 + C34165) * C50788) *
                C50835 * C33829 +
            ((C34162 + C34161 + C34160) * C1511 +
             (C34165 + C34164 + C34163) * C1509 -
             (C34740 + C34739 + C34738) * C1512 -
             (C34743 + C34742 + C34741) * C50788) *
                C50835 * C50911) *
               C1169 +
           (((C17803 + C17802 + C17801) * C1512 -
             ((C17174 + C17173 + C17172) * C1509 +
              (C17171 + C17170 + C17169) * C1511) +
             (C17806 + C17805 + C17804) * C50788) *
                C50835 * C33829 +
            ((C18117 + C18118 + C18119) * C1512 -
             ((C17804 + C17805 + C17806) * C1509 +
              (C17801 + C17802 + C17803) * C1511) +
             (C18120 + C18121 + C18122) * C50788) *
                C50835 * C50911) *
               C50762) *
              C50968 +
          ((((C34166 + C34167 + C34168) * C1512 -
             ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
               C16983 * C134 + C16978 * C144) *
                  C1509 +
              (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
               C16983 * C123 + C16978 * C130) *
                  C1511) +
             (C34169 + C34170 + C34171) * C50788) *
                C50835 * C33829 +
            ((C34746 + C34745 + C34744) * C1512 -
             ((C34171 + C34170 + C34169) * C1509 +
              (C34168 + C34167 + C34166) * C1511) +
             (C34749 + C34748 + C34747) * C50788) *
                C50835 * C50911) *
               C1169 +
           (((C17175 + C17176 + C17177) * C1511 +
             (C17178 + C17179 + C17180) * C1509 -
             (C18721 + C18720 + C18719) * C1512 -
             (C18724 + C18723 + C18722) * C50788) *
                C50835 * C33829 +
            ((C18719 + C18720 + C18721) * C1511 +
             (C18722 + C18723 + C18724) * C1509 -
             (C16985 * C965 + C16980 * C969 + C16984 * C966 + C16979 * C970 +
              C16983 * C967 + C16978 * C971) *
                 C1512 -
             (C16985 * C973 + C16980 * C977 + C16984 * C974 + C16979 * C978 +
              C16983 * C975 + C16978 * C979) *
                 C50788) *
                C50835 * C50911) *
               C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C1511 +
              (C19767 * C133 + C50687 * C143) * C1509 - C22193 * C1512 -
              C22194 * C50788) *
                 C2173 +
             (C21273 + C21274 - C21275 - C21276) * C2174 + C21631 * C2175) *
                C33829 +
            ((C22193 * C1511 + C22194 * C1509 - C22195 * C1512 -
              C22196 * C50788) *
                 C2173 +
             (C23915 + C23916 - C23917 - C23918) * C2174 + C33579 * C2175) *
                C50911) *
               C1169 +
           (((C21275 - (C21274 + C21273) + C21276) * C2173 +
             (C21279 - (C21278 + C21277) + C21280) * C2174 +
             (C21283 - (C21282 + C21281) + C21284) * C2175) *
                C33829 +
            ((C23917 - (C23916 + C23915) + C23918) * C2173 +
             (C24417 - (C24418 + C24419) + C24420) * C2174 +
             (C33574 - (C33575 + C33576) + C33577) * C2175) *
                C50911) *
               C50762) *
              C50968 +
          ((((C22197 * C1512 -
              ((C19767 * C134 + C50687 * C144) * C1509 +
               (C19767 * C123 + C50687 * C130) * C1511) +
              C22198 * C50788) *
                 C2173 +
             (C21285 - (C21286 + C21287) + C21288) * C2174 +
             (C21289 - (C21290 + C21291) + C21292) * C2175) *
                C33829 +
            ((C22199 * C1512 - (C22198 * C1509 + C22197 * C1511) +
              C22200 * C50788) *
                 C2173 +
             (C23923 - (C23924 + C23925) + C23926) * C2174 +
             (C33083 - (C33084 + C33085) + C33086) * C2175) *
                C50911) *
               C1169 +
           (((C21287 + C21286 - C21285 - C21288) * C2173 +
             (C21291 + C21290 - C21289 - C21292) * C2174 +
             (C21295 + C21294 - C21293 - C21296) * C2175) *
                C33829 +
            ((C23925 + C23924 - C23923 - C23926) * C2173 +
             (C33085 + C33084 - C33083 - C33086) * C2174 +
             (C21037 * C1511 + C21038 * C1509 -
              (C19767 * C3368 + C50687 * C3370) * C1512 -
              (C19767 * C3372 + C50687 * C3374) * C50788) *
                 C2175) *
                C50911) *
               C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C1511 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C1509 -
            (C34160 + C34161 + C34162) * C1512 -
            (C34163 + C34164 + C34165) * C50788) *
               C50835 * C33829 +
           ((C34162 + C34161 + C34160) * C1511 +
            (C34165 + C34164 + C34163) * C1509 -
            (C34740 + C34739 + C34738) * C1512 -
            (C34743 + C34742 + C34741) * C50788) *
               C50835 * C50911) *
              C51022 +
          (((C17803 + C17802 + C17801) * C1512 -
            ((C17174 + C17173 + C17172) * C1509 +
             (C17171 + C17170 + C17169) * C1511) +
            (C17806 + C17805 + C17804) * C50788) *
               C50835 * C33829 +
           ((C18117 + C18118 + C18119) * C1512 -
            ((C17804 + C17805 + C17806) * C1509 +
             (C17801 + C17802 + C17803) * C1511) +
            (C18120 + C18121 + C18122) * C50788) *
               C50835 * C50911) *
              C51009 +
          (((C17508 + C17507 + C17506) * C1511 +
            (C17505 + C17504 + C17503) * C1509 -
            (C17809 + C17808 + C17807) * C1512 -
            (C17812 + C17811 + C17810) * C50788) *
               C50835 * C33829 +
           ((C17807 + C17808 + C17809) * C1511 +
            (C17810 + C17811 + C17812) * C1509 -
            (C16985 * C3212 + C16980 * C3217 + C16984 * C3211 + C16979 * C3214 +
             C16983 * C3210 + C16978 * C3213) *
                C1512 -
            (C16985 * C3218 + C16980 * C3221 + C16984 * C3216 + C16979 * C3220 +
             C16983 * C3215 + C16978 * C3219) *
                C50788) *
               C50835 * C50911) *
              C1274) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C1511 +
             (C19767 * C133 + C50687 * C143) * C1509 - C22193 * C1512 -
             C22194 * C50788) *
                C2173 +
            (C21273 + C21274 - C21275 - C21276) * C2174 + C21631 * C2175) *
               C33829 +
           ((C22193 * C1511 + C22194 * C1509 - C22195 * C1512 -
             C22196 * C50788) *
                C2173 +
            (C23915 + C23916 - C23917 - C23918) * C2174 + C33579 * C2175) *
               C50911) *
              C51022 +
          (((C21275 - (C21274 + C21273) + C21276) * C2173 +
            (C21279 - (C21278 + C21277) + C21280) * C2174 +
            (C21283 - (C21282 + C21281) + C21284) * C2175) *
               C33829 +
           ((C23917 - (C23916 + C23915) + C23918) * C2173 +
            (C24417 - (C24418 + C24419) + C24420) * C2174 +
            (C33574 - (C33575 + C33576) + C33577) * C2175) *
               C50911) *
              C51009 +
          ((C21631 * C2173 + C21632 * C2174 +
            (C21627 + C21626 - C21625 - C21628) * C2175) *
               C33829 +
           (C33579 * C2173 + (C33576 + C33575 - C33574 - C33577) * C2174 +
            (C20369 * C1511 + C20370 * C1509 -
             (C19767 * C20578 + C50687 * C20579) * C1512 -
             (C19767 * C20580 + C50687 * C20581) * C50788) *
                C2175) *
               C50911) *
              C1274) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C1744 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C51023 -
            (C34160 + C34161 + C34162) * C1745 -
            (C34163 + C34164 + C34165) * C51012 +
            (C34738 + C34739 + C34740) * C1746 +
            (C34741 + C34742 + C34743) * C1743) *
               C50835 * C33829 +
           ((C34162 + C34161 + C34160) * C1744 +
            (C34165 + C34164 + C34163) * C51023 -
            (C34740 + C34739 + C34738) * C1745 -
            (C34743 + C34742 + C34741) * C51012 +
            (C35008 + C35007 + C35006) * C1746 +
            (C35011 + C35010 + C35009) * C1743) *
               C50835 * C50911) *
              C1169 +
          (((C17803 + C17802 + C17801) * C1745 -
            ((C17174 + C17173 + C17172) * C51023 +
             (C17171 + C17170 + C17169) * C1744) +
            (C17806 + C17805 + C17804) * C51012 -
            (C18119 + C18118 + C18117) * C1746 -
            (C18122 + C18121 + C18120) * C1743) *
               C50835 * C33829 +
           ((C18117 + C18118 + C18119) * C1745 -
            ((C17804 + C17805 + C17806) * C51023 +
             (C17801 + C17802 + C17803) * C1744) +
            (C18120 + C18121 + C18122) * C51012 -
            (C16985 * C6822 + C16980 * C6823 + C16984 * C3498 + C16979 * C3502 +
             C16983 * C3499 + C16978 * C3503) *
                C1746 -
            (C16985 * C6824 + C16980 * C6825 + C16984 * C3504 + C16979 * C3510 +
             C16983 * C3505 + C16978 * C3511) *
                C1743) *
               C50835 * C50911) *
              C50762) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C1744 +
             (C19767 * C133 + C50687 * C143) * C51023 - C22193 * C1745 -
             C22194 * C51012 + C22195 * C1746 + C22196 * C1743) *
                C2173 +
            (C21731 + C21732 - C21733 - C21734 + C21735 + C21736) * C2174 +
            (C21737 + C21738 - C21739 - C21740 + C21741 + C21742) * C2175) *
               C33829 +
           ((C22193 * C1744 + C22194 * C51023 - C22195 * C1745 -
             C22196 * C51012 + C22799 * C1746 + C22800 * C1743) *
                C2173 +
            (C24571 + C24572 - C24573 - C24574 + C24575 + C24576) * C2174 +
            (C33726 + C33727 - C33728 - C33729 + C33730 + C33731) * C2175) *
               C50911) *
              C1169 +
          (((C21733 - (C21732 + C21731) + C21734 - C21735 - C21736) * C2173 +
            (C21739 - (C21738 + C21737) + C21740 - C21741 - C21742) * C2174 +
            (C21745 - (C21744 + C21743) + C21746 - C21747 - C21748) * C2175) *
               C33829 +
           ((C24573 - (C24572 + C24571) + C24574 - C24575 - C24576) * C2173 +
            (C33728 - (C33727 + C33726) + C33729 - C33730 - C33731) * C2174 +
            (C20611 * C1745 - (C20368 * C51023 + C20367 * C1744) +
             C20612 * C51012 - (C19767 * C20684 + C50687 * C20685) * C1746 -
             (C19767 * C20686 + C50687 * C20687) * C1743) *
                C2175) *
               C50911) *
              C50762) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50776) *
                C50835 * C33829 +
            ((C34162 + C34161 + C34160) * C121 +
             (C34165 + C34164 + C34163) * C50776) *
                C50835 * C50911) *
               C501 -
           (((C17804 + C17805 + C17806) * C50776 +
             (C17801 + C17802 + C17803) * C121) *
                C50835 * C50911 +
            ((C17174 + C17173 + C17172) * C50776 +
             (C17171 + C17170 + C17169) * C121) *
                C50835 * C33829) *
               C502 +
           (((C17508 + C17507 + C17506) * C121 +
             (C17505 + C17504 + C17503) * C50776) *
                C50835 * C33829 +
            ((C17807 + C17808 + C17809) * C121 +
             (C17810 + C17811 + C17812) * C50776) *
                C50835 * C50911) *
               C503) *
              C50968 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50776) *
                C50835 * C33829 +
            ((C18719 + C18720 + C18721) * C121 +
             (C18722 + C18723 + C18724) * C50776) *
                C50835 * C50911) *
               C502 -
           (((C34171 + C34170 + C34169) * C50776 +
             (C34168 + C34167 + C34166) * C121) *
                C50835 * C50911 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50776 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C50835 * C33829) *
               C501 -
           (((C16985 * C731 + C16980 * C739 + C16984 * C732 + C16979 * C740 +
              C16983 * C733 + C16978 * C741) *
                 C50776 +
             (C16985 * C715 + C16980 * C727 + C16984 * C716 + C16979 * C728 +
              C16983 * C717 + C16978 * C729) *
                 C121) *
                C50835 * C50911 +
            ((C17514 + C17513 + C17512) * C50776 +
             (C17511 + C17510 + C17509) * C121) *
                C50835 * C33829) *
               C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C121 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50776) *
               C50835 * C33829 +
           ((C16983 * C382 + C16978 * C388 + C16984 * C381 + C16979 * C387 +
             C16985 * C380 + C16980 * C386) *
                C121 +
            (C16983 * C392 + C16978 * C400 + C16984 * C391 + C16979 * C399 +
             C16985 * C390 + C16980 * C398) *
                C50776) *
               C50835 * C50911) *
              C50746 * C113 -
          (((C16985 * C389 + C16980 * C397 + C16984 * C390 + C16979 * C398 +
             C16983 * C391 + C16978 * C399) *
                C50776 +
            (C16985 * C379 + C16980 * C385 + C16984 * C380 + C16979 * C386 +
             C16983 * C381 + C16978 * C387) *
                C121) *
               C50835 * C50911 +
           ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
             C16983 * C134 + C16978 * C144) *
                C50776 +
            (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
             C16983 * C123 + C16978 * C130) *
                C121) *
               C50835 * C33829) *
              C50746 * C114 +
          (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
             C16985 * C126 + C16980 * C138) *
                C121 +
            (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
             C16985 * C137 + C16980 * C147) *
                C50776) *
               C50835 * C33829 +
           ((C16983 * C380 + C16978 * C386 + C16984 * C379 + C16979 * C385 +
             C16985 * C383 + C16980 * C393) *
                C121 +
            (C16983 * C390 + C16978 * C398 + C16984 * C389 + C16979 * C397 +
             C16985 * C394 + C16980 * C401) *
                C50776) *
               C50835 * C50911) *
              C50746 * C115 -
          (((C16985 * C396 + C16980 * C402 + C16984 * C394 + C16979 * C401 +
             C16983 * C389 + C16978 * C397) *
                C50776 +
            (C16985 * C384 + C16980 * C395 + C16984 * C383 + C16979 * C393 +
             C16983 * C379 + C16978 * C385) *
                C121) *
               C50835 * C50911 +
           ((C16985 * C140 + C16980 * C148 + C16984 * C137 + C16979 * C147 +
             C16983 * C136 + C16978 * C146) *
                C50776 +
            (C16985 * C127 + C16980 * C139 + C16984 * C126 + C16979 * C138 +
             C16983 * C125 + C16978 * C132) *
                C121) *
               C50835 * C33829) *
              C50746 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C844 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C841 -
            (C34160 + C34161 + C34162) * C845 -
            (C34163 + C34164 + C34165) * C842 +
            (C34738 + C34739 + C34740) * C846 +
            (C34741 + C34742 + C34743) * C843) *
               C50835 * C33829 +
           ((C34162 + C34161 + C34160) * C844 +
            (C34165 + C34164 + C34163) * C841 -
            (C34740 + C34739 + C34738) * C845 -
            (C34743 + C34742 + C34741) * C842 +
            (C16983 * C1058 + C16978 * C1062 + C16984 * C1057 + C16979 * C1061 +
             C16985 * C1056 + C16980 * C1060) *
                C846 +
            (C16983 * C1066 + C16978 * C1070 + C16984 * C1065 + C16979 * C1069 +
             C16985 * C1064 + C16980 * C1068) *
                C843) *
               C50835 * C50911) *
              C50746 * C50968 +
          (((C34166 + C34167 + C34168) * C845 -
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C841 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C844) +
            (C34169 + C34170 + C34171) * C842 -
            (C34744 + C34745 + C34746) * C846 -
            (C34747 + C34748 + C34749) * C843) *
               C50835 * C33829 +
           ((C34746 + C34745 + C34744) * C845 -
            ((C34171 + C34170 + C34169) * C841 +
             (C34168 + C34167 + C34166) * C844) +
            (C34749 + C34748 + C34747) * C842 -
            (C16985 * C1055 + C16980 * C1059 + C16984 * C1056 + C16979 * C1060 +
             C16983 * C1057 + C16978 * C1061) *
                C846 -
            (C16985 * C1063 + C16980 * C1067 + C16984 * C1064 + C16979 * C1068 +
             C16983 * C1065 + C16978 * C1069) *
                C843) *
               C50835 * C50911) *
              C50746 * C50719)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C2173 +
            (C19921 + C19922) * C2174 + C20135 * C2175) *
               C33829 +
           ((C22193 * C121 + C22194 * C50776) * C2173 +
            (C21993 + C21994) * C2174 + C31599 * C2175) *
               C50911) *
              C50746 * C113 -
          ((C31602 * C2175 + (C21998 + C21997) * C2174 +
            (C22198 * C50776 + C22197 * C121) * C2173) *
               C50911 +
           (C20146 * C2175 + (C19928 + C19927) * C2174 +
            ((C19767 * C134 + C50687 * C144) * C50776 +
             (C19767 * C123 + C50687 * C130) * C121) *
                C2173) *
               C33829) *
              C50746 * C114 +
          ((((C19767 * C124 + C50687 * C131) * C121 +
             (C19767 * C135 + C50687 * C145) * C50776) *
                C2173 +
            (C19933 + C19934) * C2174 + (C19935 + C19936) * C2175) *
               C33829 +
           ((C22201 * C121 + C22202 * C50776) * C2173 +
            (C22019 + C22020) * C2174 + (C31305 + C31306) * C2175) *
               C50911) *
              C50746 * C115 -
          ((((C19767 * C731 + C50687 * C739) * C50776 +
             (C19767 * C715 + C50687 * C727) * C121) *
                C2175 +
            ((C19767 * C726 + C50687 * C738) * C50776 +
             (C19767 * C714 + C50687 * C722) * C121) *
                C2174 +
            ((C19767 * C389 + C50687 * C397) * C50776 +
             (C19767 * C379 + C50687 * C385) * C121) *
                C2173) *
               C50911 +
           (((C19767 * C518 + C50687 * C524) * C50776 +
             (C19767 * C509 + C50687 * C514) * C121) *
                C2175 +
            ((C19767 * C259 + C50687 * C271) * C50776 +
             (C19767 * C253 + C50687 * C263) * C121) *
                C2174 +
            ((C19767 * C136 + C50687 * C146) * C50776 +
             (C19767 * C125 + C50687 * C132) * C121) *
                C2173) *
               C33829) *
              C50746 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C2173 +
             (C19921 + C19922) * C2174 + C20135 * C2175) *
                C33829 +
            ((C22193 * C121 + C22194 * C50776) * C2173 +
             (C21993 + C21994) * C2174 + C31599 * C2175) *
                C50911) *
               C501 -
           ((C31701 * C2175 + (C22353 + C22354) * C2174 +
             (C21994 + C21993) * C2173) *
                C50911 +
            (C20226 * C2175 + (C19924 + C19923) * C2174 +
             (C19922 + C19921) * C2173) *
                C33829) *
               C502 +
           ((C20135 * C2173 + C20136 * C2174 + (C20152 + C20151) * C2175) *
                C33829 +
            (C31599 * C2173 + (C22463 + C22464) * C2174 +
             (C31702 + C31703) * C2175) *
                C50911) *
               C503) *
              C50968 +
          ((((C19927 + C19928) * C2173 + (C19929 + C19930) * C2174 +
             (C19931 + C19932) * C2175) *
                C33829 +
            ((C21997 + C21998) * C2173 + (C22355 + C22356) * C2174 +
             (C31600 + C31601) * C2175) *
                C50911) *
               C502 -
           ((C31602 * C2175 + (C21998 + C21997) * C2174 +
             (C22198 * C50776 + C22197 * C121) * C2173) *
                C50911 +
            (C20146 * C2175 + (C19928 + C19927) * C2174 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C2173) *
                C33829) *
               C501 -
           ((((C19767 * C3013 + C50687 * C3017) * C50776 +
              (C19767 * C3005 + C50687 * C3011) * C121) *
                 C2175 +
             (C31601 + C31600) * C2174 + C31602 * C2173) *
                C50911 +
            ((C20154 + C20153) * C2175 + C20145 * C2174 + C20146 * C2173) *
                C33829) *
               C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C844 +
             (C19767 * C133 + C50687 * C143) * C841 - C22193 * C845 -
             C22194 * C842 + C22195 * C846 + C22196 * C843) *
                C2173 +
            (C20583 + C20584 - C20585 - C20586 + C20613 + C20614) * C2174 +
            (C20591 + C20592 - C20593 - C20594 + C20615 + C20616) * C2175) *
               C33829 +
           ((C22193 * C844 + C22194 * C841 - C22195 * C845 - C22196 * C842 +
             C22799 * C846 + C22800 * C843) *
                C2173 +
            (C22955 + C22956 - C22957 - C22958 + C22959 + C22960) * C2174 +
            (C32149 + C32150 - C32151 - C32152 + C32153 + C32154) * C2175) *
               C50911) *
              C50746 * C50968 +
          (((C22197 * C845 -
             ((C19767 * C134 + C50687 * C144) * C841 +
              (C19767 * C123 + C50687 * C130) * C844) +
             C22198 * C842 - C22199 * C846 - C22200 * C843) *
                C2173 +
            (C21033 * C845 - (C19910 * C841 + C19909 * C844) + C21034 * C842 -
             C22011 * C846 - C22012 * C843) *
                C2174 +
            (C21035 * C845 - (C19912 * C841 + C19911 * C844) + C21036 * C842 -
             C22361 * C846 - C22362 * C843) *
                C2175) *
               C33829 +
           ((C22199 * C845 - (C22198 * C841 + C22197 * C844) + C22200 * C842 -
             C22801 * C846 - C22802 * C843) *
                C2173 +
            (C22011 * C845 - (C21034 * C841 + C21033 * C844) + C22012 * C842 -
             C22803 * C846 - C22804 * C843) *
                C2174 +
            (C22361 * C845 - (C21036 * C841 + C21035 * C844) + C22362 * C842 -
             (C19767 * C3500 + C50687 * C3506) * C846 -
             (C19767 * C3508 + C50687 * C3512) * C843) *
                C2175) *
               C50911) *
              C50746 * C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C121 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50776) *
               C50835 * C33829 +
           ((C34162 + C34161 + C34160) * C121 +
            (C34165 + C34164 + C34163) * C50776) *
               C50835 * C50911) *
              C592 -
          (((C17804 + C17805 + C17806) * C50776 +
            (C17801 + C17802 + C17803) * C121) *
               C50835 * C50911 +
           ((C17174 + C17173 + C17172) * C50776 +
            (C17171 + C17170 + C17169) * C121) *
               C50835 * C33829) *
              C593 +
          (((C17508 + C17507 + C17506) * C121 +
            (C17505 + C17504 + C17503) * C50776) *
               C50835 * C33829 +
           ((C17807 + C17808 + C17809) * C121 +
            (C17810 + C17811 + C17812) * C50776) *
               C50835 * C50911) *
              C594 -
          (((C16985 * C4002 + C16980 * C4003 + C16984 * C3010 + C16979 * C3016 +
             C16983 * C3009 + C16978 * C3015) *
                C50776 +
            (C16985 * C4000 + C16980 * C4001 + C16984 * C3004 + C16979 * C3008 +
             C16983 * C3003 + C16978 * C3007) *
                C121) *
               C50835 * C50911 +
           ((C17630 + C17629 + C17628) * C50776 +
            (C17627 + C17626 + C17625) * C121) *
               C50835 * C33829) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50776) *
                C50835 * C33829 +
            ((C16983 * C382 + C16978 * C388 + C16984 * C381 + C16979 * C387 +
              C16985 * C380 + C16980 * C386) *
                 C121 +
             (C16983 * C392 + C16978 * C400 + C16984 * C391 + C16979 * C399 +
              C16985 * C390 + C16980 * C398) *
                 C50776) *
                C50835 * C50911) *
               C50975 -
           (((C17804 + C17805 + C17806) * C50776 +
             (C17801 + C17802 + C17803) * C121) *
                C50835 * C50911 +
            ((C17174 + C17173 + C17172) * C50776 +
             (C17171 + C17170 + C17169) * C121) *
                C50835 * C33829) *
               C50762) *
              C250 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50776) *
                C50835 * C33829 +
            ((C18719 + C18720 + C18721) * C121 +
             (C18722 + C18723 + C18724) * C50776) *
                C50835 * C50911) *
               C50762 -
           (((C16985 * C389 + C16980 * C397 + C16984 * C390 + C16979 * C398 +
              C16983 * C391 + C16978 * C399) *
                 C50776 +
             (C16985 * C379 + C16980 * C385 + C16984 * C380 + C16979 * C386 +
              C16983 * C381 + C16978 * C387) *
                 C121) *
                C50835 * C50911 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50776 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C50835 * C33829) *
               C50975) *
              C251 +
          ((((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
              C16985 * C126 + C16980 * C138) *
                 C121 +
             (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
              C16985 * C137 + C16980 * C147) *
                 C50776) *
                C50835 * C33829 +
            ((C16983 * C380 + C16978 * C386 + C16984 * C379 + C16979 * C385 +
              C16985 * C383 + C16980 * C393) *
                 C121 +
             (C16983 * C390 + C16978 * C398 + C16984 * C389 + C16979 * C397 +
              C16985 * C394 + C16980 * C401) *
                 C50776) *
                C50835 * C50911) *
               C50975 -
           (((C16985 * C1409 + C16980 * C1410 + C16984 * C726 + C16979 * C738 +
              C16983 * C725 + C16978 * C737) *
                 C50776 +
             (C16985 * C1407 + C16980 * C1408 + C16984 * C714 + C16979 * C722 +
              C16983 * C713 + C16978 * C721) *
                 C121) *
                C50835 * C50911 +
            ((C17186 + C17185 + C17184) * C50776 +
             (C17183 + C17182 + C17181) * C121) *
                C50835 * C33829) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C844 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C841 -
            (C34160 + C34161 + C34162) * C845 -
            (C34163 + C34164 + C34165) * C842 +
            (C34738 + C34739 + C34740) * C846 +
            (C34741 + C34742 + C34743) * C843) *
               C50835 * C33829 +
           ((C34162 + C34161 + C34160) * C844 +
            (C34165 + C34164 + C34163) * C841 -
            (C34740 + C34739 + C34738) * C845 -
            (C34743 + C34742 + C34741) * C842 +
            (C16983 * C1058 + C16978 * C1062 + C16984 * C1057 + C16979 * C1061 +
             C16985 * C1056 + C16980 * C1060) *
                C846 +
            (C16983 * C1066 + C16978 * C1070 + C16984 * C1065 + C16979 * C1069 +
             C16985 * C1064 + C16980 * C1068) *
                C843) *
               C50835 * C50911) *
              C50975 +
          (((C17803 + C17802 + C17801) * C845 -
            ((C17174 + C17173 + C17172) * C841 +
             (C17171 + C17170 + C17169) * C844) +
            (C17806 + C17805 + C17804) * C842 -
            (C18119 + C18118 + C18117) * C846 -
            (C18122 + C18121 + C18120) * C843) *
               C50835 * C33829 +
           ((C18117 + C18118 + C18119) * C845 -
            ((C17804 + C17805 + C17806) * C841 +
             (C17801 + C17802 + C17803) * C844) +
            (C18120 + C18121 + C18122) * C842 -
            (C16985 * C6822 + C16980 * C6823 + C16984 * C3498 + C16979 * C3502 +
             C16983 * C3499 + C16978 * C3503) *
                C846 -
            (C16985 * C6824 + C16980 * C6825 + C16984 * C3504 + C16979 * C3510 +
             C16983 * C3505 + C16978 * C3511) *
                C843) *
               C50835 * C50911) *
              C50762) *
         C50714) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C2173 +
             (C19921 + C19922) * C2174 + C20135 * C2175) *
                C33829 +
            ((C22193 * C121 + C22194 * C50776) * C2173 +
             (C21993 + C21994) * C2174 + C31599 * C2175) *
                C50911) *
               C50975 -
           ((C31701 * C2175 + (C22353 + C22354) * C2174 +
             (C21994 + C21993) * C2173) *
                C50911 +
            (C20226 * C2175 + (C19924 + C19923) * C2174 +
             (C19922 + C19921) * C2173) *
                C33829) *
               C50762) *
              C250 +
          ((((C19927 + C19928) * C2173 + (C19929 + C19930) * C2174 +
             (C19931 + C19932) * C2175) *
                C33829 +
            ((C21997 + C21998) * C2173 + (C22355 + C22356) * C2174 +
             (C31600 + C31601) * C2175) *
                C50911) *
               C50762 -
           ((C31602 * C2175 + (C21998 + C21997) * C2174 +
             (C22198 * C50776 + C22197 * C121) * C2173) *
                C50911 +
            (C20146 * C2175 + (C19928 + C19927) * C2174 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C2173) *
                C33829) *
               C50975) *
              C251 +
          (((((C19767 * C124 + C50687 * C131) * C121 +
              (C19767 * C135 + C50687 * C145) * C50776) *
                 C2173 +
             (C19933 + C19934) * C2174 + (C19935 + C19936) * C2175) *
                C33829 +
            ((C22201 * C121 + C22202 * C50776) * C2173 +
             (C22019 + C22020) * C2174 + (C31305 + C31306) * C2175) *
                C50911) *
               C50975 -
           ((((C19767 * C4002 + C50687 * C4003) * C50776 +
              (C19767 * C4000 + C50687 * C4001) * C121) *
                 C2175 +
             (C31306 + C31305) * C2174 + (C22020 + C22019) * C2173) *
                C50911 +
            ((C19938 + C19937) * C2175 + (C19936 + C19935) * C2174 +
             (C19934 + C19933) * C2173) *
                C33829) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C2173 +
            (C19921 + C19922) * C2174 + C20135 * C2175) *
               C33829 +
           ((C22193 * C121 + C22194 * C50776) * C2173 +
            (C21993 + C21994) * C2174 + C31599 * C2175) *
               C50911) *
              C592 -
          ((C31701 * C2175 + (C22353 + C22354) * C2174 +
            (C21994 + C21993) * C2173) *
               C50911 +
           (C20226 * C2175 + (C19924 + C19923) * C2174 +
            (C19922 + C19921) * C2173) *
               C33829) *
              C593 +
          ((C20135 * C2173 + C20136 * C2174 + (C20152 + C20151) * C2175) *
               C33829 +
           (C31599 * C2173 + (C22463 + C22464) * C2174 +
            (C31702 + C31703) * C2175) *
               C50911) *
              C594 -
          ((((C19767 * C20334 + C50687 * C20335) * C50776 +
             (C19767 * C20332 + C50687 * C20333) * C121) *
                C2175 +
            (C31703 + C31702) * C2174 + C31701 * C2173) *
               C50911 +
           ((C20234 + C20233) * C2175 + C20225 * C2174 + C20226 * C2173) *
               C33829) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C844 +
             (C19767 * C133 + C50687 * C143) * C841 - C22193 * C845 -
             C22194 * C842 + C22195 * C846 + C22196 * C843) *
                C2173 +
            (C20583 + C20584 - C20585 - C20586 + C20613 + C20614) * C2174 +
            (C20591 + C20592 - C20593 - C20594 + C20615 + C20616) * C2175) *
               C33829 +
           ((C22193 * C844 + C22194 * C841 - C22195 * C845 - C22196 * C842 +
             C22799 * C846 + C22800 * C843) *
                C2173 +
            (C22955 + C22956 - C22957 - C22958 + C22959 + C22960) * C2174 +
            (C32149 + C32150 - C32151 - C32152 + C32153 + C32154) * C2175) *
               C50911) *
              C50975 +
          (((C20585 - (C20584 + C20583) + C20586 - C20613 - C20614) * C2173 +
            (C20593 - (C20592 + C20591) + C20594 - C20615 - C20616) * C2174 +
            (C20601 - (C20600 + C20599) + C20602 - C20617 - C20618) * C2175) *
               C33829 +
           ((C22957 - (C22956 + C22955) + C22958 - C22959 - C22960) * C2173 +
            (C32151 - (C32150 + C32149) + C32152 - C32153 - C32154) * C2174 +
            (C20611 * C845 - (C20368 * C841 + C20367 * C844) + C20612 * C842 -
             (C19767 * C20684 + C50687 * C20685) * C846 -
             (C19767 * C20686 + C50687 * C20687) * C843) *
                C2175) *
               C50911) *
              C50762) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C377 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50977 -
            (C34160 + C34161 + C34162) * C378 -
            (C34163 + C34164 + C34165) * C50788) *
               C50835 * C33829 +
           ((C34162 + C34161 + C34160) * C377 +
            (C34165 + C34164 + C34163) * C50977 -
            (C16985 * C849 + C16980 * C854 + C16984 * C848 + C16979 * C853 +
             C16983 * C847 + C16978 * C852) *
                C378 -
            (C16985 * C858 + C16980 * C864 + C16984 * C857 + C16979 * C863 +
             C16983 * C856 + C16978 * C862) *
                C50788) *
               C50835 * C50911) *
              C501 +
          (((C17803 + C17802 + C17801) * C378 -
            ((C17174 + C17173 + C17172) * C50977 +
             (C17171 + C17170 + C17169) * C377) +
            (C17806 + C17805 + C17804) * C50788) *
               C50835 * C33829 +
           ((C18117 + C18118 + C18119) * C378 -
            ((C17804 + C17805 + C17806) * C50977 +
             (C17801 + C17802 + C17803) * C377) +
            (C18120 + C18121 + C18122) * C50788) *
               C50835 * C50911) *
              C502 +
          (((C17508 + C17507 + C17506) * C377 +
            (C17505 + C17504 + C17503) * C50977 -
            (C17809 + C17808 + C17807) * C378 -
            (C17812 + C17811 + C17810) * C50788) *
               C50835 * C33829 +
           ((C17807 + C17808 + C17809) * C377 +
            (C17810 + C17811 + C17812) * C50977 -
            (C16985 * C3212 + C16980 * C3217 + C16984 * C3211 + C16979 * C3214 +
             C16983 * C3210 + C16978 * C3213) *
                C378 -
            (C16985 * C3218 + C16980 * C3221 + C16984 * C3216 + C16979 * C3220 +
             C16983 * C3215 + C16978 * C3219) *
                C50788) *
               C50835 * C50911) *
              C503) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C377 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50977 -
            (C34160 + C34161 + C34162) * C378 -
            (C34163 + C34164 + C34165) * C50788) *
               C50835 * C33829 +
           ((C34162 + C34161 + C34160) * C377 +
            (C34165 + C34164 + C34163) * C50977 -
            (C16985 * C849 + C16980 * C854 + C16984 * C848 + C16979 * C853 +
             C16983 * C847 + C16978 * C852) *
                C378 -
            (C16985 * C858 + C16980 * C864 + C16984 * C857 + C16979 * C863 +
             C16983 * C856 + C16978 * C862) *
                C50788) *
               C50835 * C50911) *
              C50746 * C250 +
          (((C34166 + C34167 + C34168) * C378 -
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50977 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C377) +
            (C34169 + C34170 + C34171) * C50788) *
               C50835 * C33829 +
           ((C16983 * C848 + C16978 * C853 + C16984 * C849 + C16979 * C854 +
             C16985 * C850 + C16980 * C855) *
                C378 -
            ((C34171 + C34170 + C34169) * C50977 +
             (C34168 + C34167 + C34166) * C377) +
            (C16983 * C857 + C16978 * C863 + C16984 * C858 + C16979 * C864 +
             C16985 * C859 + C16980 * C865) *
                C50788) *
               C50835 * C50911) *
              C50746 * C251 +
          (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
             C16985 * C126 + C16980 * C138) *
                C377 +
            (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
             C16985 * C137 + C16980 * C147) *
                C50977 -
            (C34172 + C34173 + C34174) * C378 -
            (C34175 + C34176 + C34177) * C50788) *
               C50835 * C33829 +
           ((C34174 + C34173 + C34172) * C377 +
            (C34177 + C34176 + C34175) * C50977 -
            (C16985 * C851 + C16980 * C860 + C16984 * C850 + C16979 * C855 +
             C16983 * C849 + C16978 * C854) *
                C378 -
            (C16985 * C861 + C16980 * C866 + C16984 * C859 + C16979 * C865 +
             C16983 * C858 + C16978 * C864) *
                C50788) *
               C50835 * C50911) *
              C50746 * C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
            C16985 * C124 + C16980 * C131) *
               C1051 +
           (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
            C16985 * C135 + C16980 * C145) *
               C1047 -
           (C34160 + C34161 + C34162) * C1052 -
           (C34163 + C34164 + C34165) * C1048 +
           (C34738 + C34739 + C34740) * C1053 +
           (C34741 + C34742 + C34743) * C1049 -
           (C35006 + C35007 + C35008) * C1054 -
           (C35009 + C35010 + C35011) * C1050) *
              C50835 * C33829 +
          ((C34162 + C34161 + C34160) * C1051 +
           (C34165 + C34164 + C34163) * C1047 -
           (C34740 + C34739 + C34738) * C1052 -
           (C34743 + C34742 + C34741) * C1048 +
           (C35008 + C35007 + C35006) * C1053 +
           (C35011 + C35010 + C35009) * C1049 -
           (C16985 * C6010 + C16980 * C6015 + C16984 * C6009 + C16979 * C6012 +
            C16983 * C6008 + C16978 * C6011) *
               C1054 -
           (C16985 * C6016 + C16980 * C6019 + C16984 * C6014 + C16979 * C6018 +
            C16983 * C6013 + C16978 * C6017) *
               C1050) *
              C50835 * C50911) *
         C50746 * C50714) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C377 +
             (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
             C22194 * C50788) *
                C2173 +
            (C20337 + C20338 - C20371 - C20372) * C2174 + C20381 * C2175) *
               C33829 +
           ((C22193 * C377 + C22194 * C50977 - C22195 * C378 -
             C22196 * C50788) *
                C2173 +
            (C22613 + C22614 - C22615 - C22616) * C2174 + C31856 * C2175) *
               C50911) *
              C50746 * C250 +
          (((C22197 * C378 -
             ((C19767 * C134 + C50687 * C144) * C50977 +
              (C19767 * C123 + C50687 * C130) * C377) +
             C22198 * C50788) *
                C2173 +
            (C21039 - (C21017 + C21018) + C21040) * C2174 +
            (C21041 - (C21023 + C21024) + C21042) * C2175) *
               C33829 +
           ((C22199 * C378 - (C22198 * C50977 + C22197 * C377) +
             C22200 * C50788) *
                C2173 +
            (C23567 - (C23568 + C23569) + C23570) * C2174 +
            (C32739 - (C32740 + C32741) + C32742) * C2175) *
               C50911) *
              C50746 * C251 +
          ((((C19767 * C124 + C50687 * C131) * C377 +
             (C19767 * C135 + C50687 * C145) * C50977 - C22201 * C378 -
             C22202 * C50788) *
                C2173 +
            (C19915 * C377 + C19916 * C50977 - C22013 * C378 -
             C22014 * C50788) *
                C2174 +
            (C19917 * C377 + C19918 * C50977 - C31303 * C378 -
             C31304 * C50788) *
                C2175) *
               C33829 +
           ((C22201 * C377 + C22202 * C50977 - C22203 * C378 -
             C22204 * C50788) *
                C2173 +
            (C22013 * C377 + C22014 * C50977 - C22015 * C378 -
             C22016 * C50788) *
                C2174 +
            (C31303 * C377 + C31304 * C50977 -
             (C19767 * C3212 + C50687 * C3217) * C378 -
             (C19767 * C3218 + C50687 * C3221) * C50788) *
                C2175) *
               C50911) *
              C50746 * C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C377 +
             (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
             C22194 * C50788) *
                C2173 +
            (C20337 + C20338 - C20371 - C20372) * C2174 + C20381 * C2175) *
               C33829 +
           ((C22193 * C377 + C22194 * C50977 - C22195 * C378 -
             C22196 * C50788) *
                C2173 +
            (C22613 + C22614 - C22615 - C22616) * C2174 + C31856 * C2175) *
               C50911) *
              C501 +
          (((C20371 - (C20338 + C20337) + C20372) * C2173 +
            (C20373 - (C20344 + C20343) + C20374) * C2174 +
            (C20375 - (C20350 + C20349) + C20376) * C2175) *
               C33829 +
           ((C22615 - (C22614 + C22613) + C22616) * C2173 +
            (C22623 - (C22624 + C22625) + C22626) * C2174 +
            (C31851 - (C31852 + C31853) + C31854) * C2175) *
               C50911) *
              C502 +
          ((C20381 * C2173 + C20382 * C2174 +
            (C20358 + C20357 - C20377 - C20378) * C2175) *
               C33829 +
           (C31856 * C2173 + (C31853 + C31852 - C31851 - C31854) * C2174 +
            (C20369 * C377 + C20370 * C50977 -
             (C19767 * C20578 + C50687 * C20579) * C378 -
             (C19767 * C20580 + C50687 * C20581) * C50788) *
                C2175) *
               C50911) *
              C503) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19767 * C122 + C50687 * C129) * C1051 +
            (C19767 * C133 + C50687 * C143) * C1047 - C22193 * C1052 -
            C22194 * C1048 + C22195 * C1053 + C22196 * C1049 - C22799 * C1054 -
            C22800 * C1050) *
               C2173 +
           (C19903 * C1051 + C19904 * C1047 - C20361 * C1052 - C20362 * C1048 +
            C20607 * C1053 + C20608 * C1049 - C22633 * C1054 - C22634 * C1050) *
               C2174 +
           (C19905 * C1051 + C19906 * C1047 - C20364 * C1052 - C20365 * C1048 +
            C20609 * C1053 + C20610 * C1049 - C22635 * C1054 - C22636 * C1050) *
               C2175) *
              C33829 +
          ((C22193 * C1051 + C22194 * C1047 - C22195 * C1052 - C22196 * C1048 +
            C22799 * C1053 + C22800 * C1049 - C23079 * C1054 - C23080 * C1050) *
               C2173 +
           (C20361 * C1051 + C20362 * C1047 - C20607 * C1052 - C20608 * C1048 +
            C22633 * C1053 + C22634 * C1049 - C22969 * C1054 - C22970 * C1050) *
               C2174 +
           (C20364 * C1051 + C20365 * C1047 - C20609 * C1052 - C20610 * C1048 +
            C22635 * C1053 + C22636 * C1049 -
            (C19767 * C22950 + C50687 * C22951) * C1054 -
            (C19767 * C22952 + C50687 * C22953) * C1050) *
               C2175) *
              C50911) *
         C50746 * C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C1511 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C1509 -
            (C34160 + C34161 + C34162) * C1512 -
            (C34163 + C34164 + C34165) * C50788) *
               C50835 * C33829 +
           ((C34162 + C34161 + C34160) * C1511 +
            (C34165 + C34164 + C34163) * C1509 -
            (C34740 + C34739 + C34738) * C1512 -
            (C34743 + C34742 + C34741) * C50788) *
               C50835 * C50911) *
              C50746 * C51021 +
          (((C34166 + C34167 + C34168) * C1512 -
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C1509 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C1511) +
            (C34169 + C34170 + C34171) * C50788) *
               C50835 * C33829 +
           ((C34746 + C34745 + C34744) * C1512 -
            ((C34171 + C34170 + C34169) * C1509 +
             (C34168 + C34167 + C34166) * C1511) +
            (C34749 + C34748 + C34747) * C50788) *
               C50835 * C50911) *
              C50746 * C51006 +
          (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
             C16985 * C126 + C16980 * C138) *
                C1511 +
            (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
             C16985 * C137 + C16980 * C147) *
                C1509 -
            (C34172 + C34173 + C34174) * C1512 -
            (C34175 + C34176 + C34177) * C50788) *
               C50835 * C33829 +
           ((C34174 + C34173 + C34172) * C1511 +
            (C34177 + C34176 + C34175) * C1509 -
            (C16985 * C851 + C16980 * C860 + C16984 * C850 + C16979 * C855 +
             C16983 * C849 + C16978 * C854) *
                C1512 -
            (C16985 * C861 + C16980 * C866 + C16984 * C859 + C16979 * C865 +
             C16983 * C858 + C16978 * C864) *
                C50788) *
               C50835 * C50911) *
              C50746 * C1173)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C1511 +
             (C19767 * C133 + C50687 * C143) * C1509 - C22193 * C1512 -
             C22194 * C50788) *
                C2173 +
            (C21273 + C21274 - C21275 - C21276) * C2174 + C21631 * C2175) *
               C33829 +
           ((C22193 * C1511 + C22194 * C1509 - C22195 * C1512 -
             C22196 * C50788) *
                C2173 +
            (C23915 + C23916 - C23917 - C23918) * C2174 + C33579 * C2175) *
               C50911) *
              C50746 * C51021 +
          (((C22197 * C1512 -
             ((C19767 * C134 + C50687 * C144) * C1509 +
              (C19767 * C123 + C50687 * C130) * C1511) +
             C22198 * C50788) *
                C2173 +
            (C21285 - (C21286 + C21287) + C21288) * C2174 +
            (C21289 - (C21290 + C21291) + C21292) * C2175) *
               C33829 +
           ((C22199 * C1512 - (C22198 * C1509 + C22197 * C1511) +
             C22200 * C50788) *
                C2173 +
            (C23923 - (C23924 + C23925) + C23926) * C2174 +
            (C33083 - (C33084 + C33085) + C33086) * C2175) *
               C50911) *
              C50746 * C51006 +
          ((((C19767 * C124 + C50687 * C131) * C1511 +
             (C19767 * C135 + C50687 * C145) * C1509 - C22201 * C1512 -
             C22202 * C50788) *
                C2173 +
            (C19915 * C1511 + C19916 * C1509 - C22013 * C1512 -
             C22014 * C50788) *
                C2174 +
            (C19917 * C1511 + C19918 * C1509 - C31303 * C1512 -
             C31304 * C50788) *
                C2175) *
               C33829 +
           ((C22201 * C1511 + C22202 * C1509 - C22203 * C1512 -
             C22204 * C50788) *
                C2173 +
            (C22013 * C1511 + C22014 * C1509 - C22015 * C1512 -
             C22016 * C50788) *
                C2174 +
            (C31303 * C1511 + C31304 * C1509 -
             (C19767 * C3212 + C50687 * C3217) * C1512 -
             (C19767 * C3218 + C50687 * C3221) * C50788) *
                C2175) *
               C50911) *
              C50746 * C1173)) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C1511 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C1509 -
             (C34160 + C34161 + C34162) * C1512 -
             (C34163 + C34164 + C34165) * C50788) *
                C50835 * C33829 +
            ((C34162 + C34161 + C34160) * C1511 +
             (C34165 + C34164 + C34163) * C1509 -
             (C34740 + C34739 + C34738) * C1512 -
             (C34743 + C34742 + C34741) * C50788) *
                C50835 * C50911) *
               C50975 +
           (((C17803 + C17802 + C17801) * C1512 -
             ((C17174 + C17173 + C17172) * C1509 +
              (C17171 + C17170 + C17169) * C1511) +
             (C17806 + C17805 + C17804) * C50788) *
                C50835 * C33829 +
            ((C18117 + C18118 + C18119) * C1512 -
             ((C17804 + C17805 + C17806) * C1509 +
              (C17801 + C17802 + C17803) * C1511) +
             (C18120 + C18121 + C18122) * C50788) *
                C50835 * C50911) *
               C50762) *
              C1275 +
          ((((C34166 + C34167 + C34168) * C1512 -
             ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
               C16983 * C134 + C16978 * C144) *
                  C1509 +
              (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
               C16983 * C123 + C16978 * C130) *
                  C1511) +
             (C34169 + C34170 + C34171) * C50788) *
                C50835 * C33829 +
            ((C34746 + C34745 + C34744) * C1512 -
             ((C34171 + C34170 + C34169) * C1509 +
              (C34168 + C34167 + C34166) * C1511) +
             (C34749 + C34748 + C34747) * C50788) *
                C50835 * C50911) *
               C50975 +
           (((C17175 + C17176 + C17177) * C1511 +
             (C17178 + C17179 + C17180) * C1509 -
             (C18721 + C18720 + C18719) * C1512 -
             (C18724 + C18723 + C18722) * C50788) *
                C50835 * C33829 +
            ((C18719 + C18720 + C18721) * C1511 +
             (C18722 + C18723 + C18724) * C1509 -
             (C16985 * C965 + C16980 * C969 + C16984 * C966 + C16979 * C970 +
              C16983 * C967 + C16978 * C971) *
                 C1512 -
             (C16985 * C973 + C16980 * C977 + C16984 * C974 + C16979 * C978 +
              C16983 * C975 + C16978 * C979) *
                 C50788) *
                C50835 * C50911) *
               C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C1511 +
              (C19767 * C133 + C50687 * C143) * C1509 - C22193 * C1512 -
              C22194 * C50788) *
                 C2173 +
             (C21273 + C21274 - C21275 - C21276) * C2174 + C21631 * C2175) *
                C33829 +
            ((C22193 * C1511 + C22194 * C1509 - C22195 * C1512 -
              C22196 * C50788) *
                 C2173 +
             (C23915 + C23916 - C23917 - C23918) * C2174 + C33579 * C2175) *
                C50911) *
               C50975 +
           (((C21275 - (C21274 + C21273) + C21276) * C2173 +
             (C21279 - (C21278 + C21277) + C21280) * C2174 +
             (C21283 - (C21282 + C21281) + C21284) * C2175) *
                C33829 +
            ((C23917 - (C23916 + C23915) + C23918) * C2173 +
             (C24417 - (C24418 + C24419) + C24420) * C2174 +
             (C33574 - (C33575 + C33576) + C33577) * C2175) *
                C50911) *
               C50762) *
              C1275 +
          ((((C22197 * C1512 -
              ((C19767 * C134 + C50687 * C144) * C1509 +
               (C19767 * C123 + C50687 * C130) * C1511) +
              C22198 * C50788) *
                 C2173 +
             (C21285 - (C21286 + C21287) + C21288) * C2174 +
             (C21289 - (C21290 + C21291) + C21292) * C2175) *
                C33829 +
            ((C22199 * C1512 - (C22198 * C1509 + C22197 * C1511) +
              C22200 * C50788) *
                 C2173 +
             (C23923 - (C23924 + C23925) + C23926) * C2174 +
             (C33083 - (C33084 + C33085) + C33086) * C2175) *
                C50911) *
               C50975 +
           (((C21287 + C21286 - C21285 - C21288) * C2173 +
             (C21291 + C21290 - C21289 - C21292) * C2174 +
             (C21295 + C21294 - C21293 - C21296) * C2175) *
                C33829 +
            ((C23925 + C23924 - C23923 - C23926) * C2173 +
             (C33085 + C33084 - C33083 - C33086) * C2174 +
             (C21037 * C1511 + C21038 * C1509 -
              (C19767 * C3368 + C50687 * C3370) * C1512 -
              (C19767 * C3372 + C50687 * C3374) * C50788) *
                 C2175) *
                C50911) *
               C50762) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C1744 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C51023 -
            (C34160 + C34161 + C34162) * C1745 -
            (C34163 + C34164 + C34165) * C51012 +
            (C34738 + C34739 + C34740) * C1746 +
            (C34741 + C34742 + C34743) * C1743) *
               C50835 * C33829 +
           ((C34162 + C34161 + C34160) * C1744 +
            (C34165 + C34164 + C34163) * C51023 -
            (C34740 + C34739 + C34738) * C1745 -
            (C34743 + C34742 + C34741) * C51012 +
            (C35008 + C35007 + C35006) * C1746 +
            (C35011 + C35010 + C35009) * C1743) *
               C50835 * C50911) *
              C50746 * C1275 +
          (((C34166 + C34167 + C34168) * C1745 -
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C51023 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C1744) +
            (C34169 + C34170 + C34171) * C51012 -
            (C34744 + C34745 + C34746) * C1746 -
            (C34747 + C34748 + C34749) * C1743) *
               C50835 * C33829 +
           ((C34746 + C34745 + C34744) * C1745 -
            ((C34171 + C34170 + C34169) * C51023 +
             (C34168 + C34167 + C34166) * C1744) +
            (C34749 + C34748 + C34747) * C51012 -
            (C16985 * C1055 + C16980 * C1059 + C16984 * C1056 + C16979 * C1060 +
             C16983 * C1057 + C16978 * C1061) *
                C1746 -
            (C16985 * C1063 + C16980 * C1067 + C16984 * C1064 + C16979 * C1068 +
             C16983 * C1065 + C16978 * C1069) *
                C1743) *
               C50835 * C50911) *
              C50746 * C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C1744 +
             (C19767 * C133 + C50687 * C143) * C51023 - C22193 * C1745 -
             C22194 * C51012 + C22195 * C1746 + C22196 * C1743) *
                C2173 +
            (C21731 + C21732 - C21733 - C21734 + C21735 + C21736) * C2174 +
            (C21737 + C21738 - C21739 - C21740 + C21741 + C21742) * C2175) *
               C33829 +
           ((C22193 * C1744 + C22194 * C51023 - C22195 * C1745 -
             C22196 * C51012 + C22799 * C1746 + C22800 * C1743) *
                C2173 +
            (C24571 + C24572 - C24573 - C24574 + C24575 + C24576) * C2174 +
            (C33726 + C33727 - C33728 - C33729 + C33730 + C33731) * C2175) *
               C50911) *
              C50746 * C1275 +
          (((C22197 * C1745 -
             ((C19767 * C134 + C50687 * C144) * C51023 +
              (C19767 * C123 + C50687 * C130) * C1744) +
             C22198 * C51012 - C22199 * C1746 - C22200 * C1743) *
                C2173 +
            (C21033 * C1745 - (C19910 * C51023 + C19909 * C1744) +
             C21034 * C51012 - C22011 * C1746 - C22012 * C1743) *
                C2174 +
            (C21035 * C1745 - (C19912 * C51023 + C19911 * C1744) +
             C21036 * C51012 - C22361 * C1746 - C22362 * C1743) *
                C2175) *
               C33829 +
           ((C22199 * C1745 - (C22198 * C51023 + C22197 * C1744) +
             C22200 * C51012 - C22801 * C1746 - C22802 * C1743) *
                C2173 +
            (C22011 * C1745 - (C21034 * C51023 + C21033 * C1744) +
             C22012 * C51012 - C22803 * C1746 - C22804 * C1743) *
                C2174 +
            (C22361 * C1745 - (C21036 * C51023 + C21035 * C1744) +
             C22362 * C51012 - (C19767 * C3500 + C50687 * C3506) * C1746 -
             (C19767 * C3508 + C50687 * C3512) * C1743) *
                C2175) *
               C50911) *
              C50746 * C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C121 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50776) *
               C50835 * C33829 +
           ((C16983 * C382 + C16978 * C388 + C16984 * C381 + C16979 * C387 +
             C16985 * C380 + C16980 * C386) *
                C121 +
            (C16983 * C392 + C16978 * C400 + C16984 * C391 + C16979 * C399 +
             C16985 * C390 + C16980 * C398) *
                C50776) *
               C50835 * C50911) *
              C50746 * C113 -
          (((C16985 * C389 + C16980 * C397 + C16984 * C390 + C16979 * C398 +
             C16983 * C391 + C16978 * C399) *
                C50776 +
            (C16985 * C379 + C16980 * C385 + C16984 * C380 + C16979 * C386 +
             C16983 * C381 + C16978 * C387) *
                C121) *
               C50835 * C50911 +
           ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
             C16983 * C134 + C16978 * C144) *
                C50776 +
            (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
             C16983 * C123 + C16978 * C130) *
                C121) *
               C50835 * C33829) *
              C50746 * C114 +
          (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
             C16985 * C126 + C16980 * C138) *
                C121 +
            (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
             C16985 * C137 + C16980 * C147) *
                C50776) *
               C50835 * C33829 +
           ((C16983 * C380 + C16978 * C386 + C16984 * C379 + C16979 * C385 +
             C16985 * C383 + C16980 * C393) *
                C121 +
            (C16983 * C390 + C16978 * C398 + C16984 * C389 + C16979 * C397 +
             C16985 * C394 + C16980 * C401) *
                C50776) *
               C50835 * C50911) *
              C50746 * C115 -
          (((C16985 * C396 + C16980 * C402 + C16984 * C394 + C16979 * C401 +
             C16983 * C389 + C16978 * C397) *
                C50776 +
            (C16985 * C384 + C16980 * C395 + C16984 * C383 + C16979 * C393 +
             C16983 * C379 + C16978 * C385) *
                C121) *
               C50835 * C50911 +
           ((C16985 * C140 + C16980 * C148 + C16984 * C137 + C16979 * C147 +
             C16983 * C136 + C16978 * C146) *
                C50776 +
            (C16985 * C127 + C16980 * C139 + C16984 * C126 + C16979 * C138 +
             C16983 * C125 + C16978 * C132) *
                C121) *
               C50835 * C33829) *
              C50746 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50776) *
                C50835 * C33829 +
            ((C34162 + C34161 + C34160) * C121 +
             (C34165 + C34164 + C34163) * C50776) *
                C50835 * C50911) *
               C501 -
           (((C17804 + C17805 + C17806) * C50776 +
             (C17801 + C17802 + C17803) * C121) *
                C50835 * C50911 +
            ((C17174 + C17173 + C17172) * C50776 +
             (C17171 + C17170 + C17169) * C121) *
                C50835 * C33829) *
               C502 +
           (((C17508 + C17507 + C17506) * C121 +
             (C17505 + C17504 + C17503) * C50776) *
                C50835 * C33829 +
            ((C17807 + C17808 + C17809) * C121 +
             (C17810 + C17811 + C17812) * C50776) *
                C50835 * C50911) *
               C503) *
              C50968 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50776) *
                C50835 * C33829 +
            ((C18719 + C18720 + C18721) * C121 +
             (C18722 + C18723 + C18724) * C50776) *
                C50835 * C50911) *
               C502 -
           (((C34171 + C34170 + C34169) * C50776 +
             (C34168 + C34167 + C34166) * C121) *
                C50835 * C50911 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50776 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C50835 * C33829) *
               C501 -
           (((C16985 * C731 + C16980 * C739 + C16984 * C732 + C16979 * C740 +
              C16983 * C733 + C16978 * C741) *
                 C50776 +
             (C16985 * C715 + C16980 * C727 + C16984 * C716 + C16979 * C728 +
              C16983 * C717 + C16978 * C729) *
                 C121) *
                C50835 * C50911 +
            ((C17514 + C17513 + C17512) * C50776 +
             (C17511 + C17510 + C17509) * C121) *
                C50835 * C33829) *
               C503) *
              C50719)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C2173 +
            (C19921 + C19922) * C2174 + C20135 * C2175) *
               C33829 +
           ((C22193 * C121 + C22194 * C50776) * C2173 +
            (C21993 + C21994) * C2174 + C31599 * C2175) *
               C50911) *
              C50746 * C113 -
          ((C31602 * C2175 + (C21998 + C21997) * C2174 +
            (C22198 * C50776 + C22197 * C121) * C2173) *
               C50911 +
           (C20146 * C2175 + (C19928 + C19927) * C2174 +
            ((C19767 * C134 + C50687 * C144) * C50776 +
             (C19767 * C123 + C50687 * C130) * C121) *
                C2173) *
               C33829) *
              C50746 * C114 +
          ((((C19767 * C124 + C50687 * C131) * C121 +
             (C19767 * C135 + C50687 * C145) * C50776) *
                C2173 +
            (C19933 + C19934) * C2174 + (C19935 + C19936) * C2175) *
               C33829 +
           ((C22201 * C121 + C22202 * C50776) * C2173 +
            (C22019 + C22020) * C2174 + (C31305 + C31306) * C2175) *
               C50911) *
              C50746 * C115 -
          ((((C19767 * C731 + C50687 * C739) * C50776 +
             (C19767 * C715 + C50687 * C727) * C121) *
                C2175 +
            ((C19767 * C726 + C50687 * C738) * C50776 +
             (C19767 * C714 + C50687 * C722) * C121) *
                C2174 +
            ((C19767 * C389 + C50687 * C397) * C50776 +
             (C19767 * C379 + C50687 * C385) * C121) *
                C2173) *
               C50911 +
           (((C19767 * C518 + C50687 * C524) * C50776 +
             (C19767 * C509 + C50687 * C514) * C121) *
                C2175 +
            ((C19767 * C259 + C50687 * C271) * C50776 +
             (C19767 * C253 + C50687 * C263) * C121) *
                C2174 +
            ((C19767 * C136 + C50687 * C146) * C50776 +
             (C19767 * C125 + C50687 * C132) * C121) *
                C2173) *
               C33829) *
              C50746 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C2173 +
             (C19921 + C19922) * C2174 + C20135 * C2175) *
                C33829 +
            ((C22193 * C121 + C22194 * C50776) * C2173 +
             (C21993 + C21994) * C2174 + C31599 * C2175) *
                C50911) *
               C501 -
           ((C31701 * C2175 + (C22353 + C22354) * C2174 +
             (C21994 + C21993) * C2173) *
                C50911 +
            (C20226 * C2175 + (C19924 + C19923) * C2174 +
             (C19922 + C19921) * C2173) *
                C33829) *
               C502 +
           ((C20135 * C2173 + C20136 * C2174 + (C20152 + C20151) * C2175) *
                C33829 +
            (C31599 * C2173 + (C22463 + C22464) * C2174 +
             (C31702 + C31703) * C2175) *
                C50911) *
               C503) *
              C50968 +
          ((((C19927 + C19928) * C2173 + (C19929 + C19930) * C2174 +
             (C19931 + C19932) * C2175) *
                C33829 +
            ((C21997 + C21998) * C2173 + (C22355 + C22356) * C2174 +
             (C31600 + C31601) * C2175) *
                C50911) *
               C502 -
           ((C31602 * C2175 + (C21998 + C21997) * C2174 +
             (C22198 * C50776 + C22197 * C121) * C2173) *
                C50911 +
            (C20146 * C2175 + (C19928 + C19927) * C2174 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C2173) *
                C33829) *
               C501 -
           ((((C19767 * C3013 + C50687 * C3017) * C50776 +
              (C19767 * C3005 + C50687 * C3011) * C121) *
                 C2175 +
             (C31601 + C31600) * C2174 + C31602 * C2173) *
                C50911 +
            ((C20154 + C20153) * C2175 + C20145 * C2174 + C20146 * C2173) *
                C33829) *
               C503) *
              C50719)) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
              C16985 * C124 + C16980 * C131) *
                 C121 +
             (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
              C16985 * C135 + C16980 * C145) *
                 C50776) *
                C50835 * C33829 +
            ((C16983 * C382 + C16978 * C388 + C16984 * C381 + C16979 * C387 +
              C16985 * C380 + C16980 * C386) *
                 C121 +
             (C16983 * C392 + C16978 * C400 + C16984 * C391 + C16979 * C399 +
              C16985 * C390 + C16980 * C398) *
                 C50776) *
                C50835 * C50911) *
               C50975 -
           (((C17804 + C17805 + C17806) * C50776 +
             (C17801 + C17802 + C17803) * C121) *
                C50835 * C50911 +
            ((C17174 + C17173 + C17172) * C50776 +
             (C17171 + C17170 + C17169) * C121) *
                C50835 * C33829) *
               C50762) *
              C250 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50776) *
                C50835 * C33829 +
            ((C18719 + C18720 + C18721) * C121 +
             (C18722 + C18723 + C18724) * C50776) *
                C50835 * C50911) *
               C50762 -
           (((C16985 * C389 + C16980 * C397 + C16984 * C390 + C16979 * C398 +
              C16983 * C391 + C16978 * C399) *
                 C50776 +
             (C16985 * C379 + C16980 * C385 + C16984 * C380 + C16979 * C386 +
              C16983 * C381 + C16978 * C387) *
                 C121) *
                C50835 * C50911 +
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50776 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C121) *
                C50835 * C33829) *
               C50975) *
              C251 +
          ((((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
              C16985 * C126 + C16980 * C138) *
                 C121 +
             (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
              C16985 * C137 + C16980 * C147) *
                 C50776) *
                C50835 * C33829 +
            ((C16983 * C380 + C16978 * C386 + C16984 * C379 + C16979 * C385 +
              C16985 * C383 + C16980 * C393) *
                 C121 +
             (C16983 * C390 + C16978 * C398 + C16984 * C389 + C16979 * C397 +
              C16985 * C394 + C16980 * C401) *
                 C50776) *
                C50835 * C50911) *
               C50975 -
           (((C16985 * C1409 + C16980 * C1410 + C16984 * C726 + C16979 * C738 +
              C16983 * C725 + C16978 * C737) *
                 C50776 +
             (C16985 * C1407 + C16980 * C1408 + C16984 * C714 + C16979 * C722 +
              C16983 * C713 + C16978 * C721) *
                 C121) *
                C50835 * C50911 +
            ((C17186 + C17185 + C17184) * C50776 +
             (C17183 + C17182 + C17181) * C121) *
                C50835 * C33829) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C121 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50776) *
               C50835 * C33829 +
           ((C34162 + C34161 + C34160) * C121 +
            (C34165 + C34164 + C34163) * C50776) *
               C50835 * C50911) *
              C592 -
          (((C17804 + C17805 + C17806) * C50776 +
            (C17801 + C17802 + C17803) * C121) *
               C50835 * C50911 +
           ((C17174 + C17173 + C17172) * C50776 +
            (C17171 + C17170 + C17169) * C121) *
               C50835 * C33829) *
              C593 +
          (((C17508 + C17507 + C17506) * C121 +
            (C17505 + C17504 + C17503) * C50776) *
               C50835 * C33829 +
           ((C17807 + C17808 + C17809) * C121 +
            (C17810 + C17811 + C17812) * C50776) *
               C50835 * C50911) *
              C594 -
          (((C16985 * C4002 + C16980 * C4003 + C16984 * C3010 + C16979 * C3016 +
             C16983 * C3009 + C16978 * C3015) *
                C50776 +
            (C16985 * C4000 + C16980 * C4001 + C16984 * C3004 + C16979 * C3008 +
             C16983 * C3003 + C16978 * C3007) *
                C121) *
               C50835 * C50911 +
           ((C17630 + C17629 + C17628) * C50776 +
            (C17627 + C17626 + C17625) * C121) *
               C50835 * C33829) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C19767 * C122 + C50687 * C129) * C121 +
              (C19767 * C133 + C50687 * C143) * C50776) *
                 C2173 +
             (C19921 + C19922) * C2174 + C20135 * C2175) *
                C33829 +
            ((C22193 * C121 + C22194 * C50776) * C2173 +
             (C21993 + C21994) * C2174 + C31599 * C2175) *
                C50911) *
               C50975 -
           ((C31701 * C2175 + (C22353 + C22354) * C2174 +
             (C21994 + C21993) * C2173) *
                C50911 +
            (C20226 * C2175 + (C19924 + C19923) * C2174 +
             (C19922 + C19921) * C2173) *
                C33829) *
               C50762) *
              C250 +
          ((((C19927 + C19928) * C2173 + (C19929 + C19930) * C2174 +
             (C19931 + C19932) * C2175) *
                C33829 +
            ((C21997 + C21998) * C2173 + (C22355 + C22356) * C2174 +
             (C31600 + C31601) * C2175) *
                C50911) *
               C50762 -
           ((C31602 * C2175 + (C21998 + C21997) * C2174 +
             (C22198 * C50776 + C22197 * C121) * C2173) *
                C50911 +
            (C20146 * C2175 + (C19928 + C19927) * C2174 +
             ((C19767 * C134 + C50687 * C144) * C50776 +
              (C19767 * C123 + C50687 * C130) * C121) *
                 C2173) *
                C33829) *
               C50975) *
              C251 +
          (((((C19767 * C124 + C50687 * C131) * C121 +
              (C19767 * C135 + C50687 * C145) * C50776) *
                 C2173 +
             (C19933 + C19934) * C2174 + (C19935 + C19936) * C2175) *
                C33829 +
            ((C22201 * C121 + C22202 * C50776) * C2173 +
             (C22019 + C22020) * C2174 + (C31305 + C31306) * C2175) *
                C50911) *
               C50975 -
           ((((C19767 * C4002 + C50687 * C4003) * C50776 +
              (C19767 * C4000 + C50687 * C4001) * C121) *
                 C2175 +
             (C31306 + C31305) * C2174 + (C22020 + C22019) * C2173) *
                C50911 +
            ((C19938 + C19937) * C2175 + (C19936 + C19935) * C2174 +
             (C19934 + C19933) * C2173) *
                C33829) *
               C50762) *
              C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C121 +
             (C19767 * C133 + C50687 * C143) * C50776) *
                C2173 +
            (C19921 + C19922) * C2174 + C20135 * C2175) *
               C33829 +
           ((C22193 * C121 + C22194 * C50776) * C2173 +
            (C21993 + C21994) * C2174 + C31599 * C2175) *
               C50911) *
              C592 -
          ((C31701 * C2175 + (C22353 + C22354) * C2174 +
            (C21994 + C21993) * C2173) *
               C50911 +
           (C20226 * C2175 + (C19924 + C19923) * C2174 +
            (C19922 + C19921) * C2173) *
               C33829) *
              C593 +
          ((C20135 * C2173 + C20136 * C2174 + (C20152 + C20151) * C2175) *
               C33829 +
           (C31599 * C2173 + (C22463 + C22464) * C2174 +
            (C31702 + C31703) * C2175) *
               C50911) *
              C594 -
          ((((C19767 * C20334 + C50687 * C20335) * C50776 +
             (C19767 * C20332 + C50687 * C20333) * C121) *
                C2175 +
            (C31703 + C31702) * C2174 + C31701 * C2173) *
               C50911 +
           ((C20234 + C20233) * C2175 + C20225 * C2174 + C20226 * C2173) *
               C33829) *
              C595) *
         C50714) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C377 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50977 -
            (C34160 + C34161 + C34162) * C378 -
            (C34163 + C34164 + C34165) * C50788) *
               C50835 * C33829 +
           ((C34162 + C34161 + C34160) * C377 +
            (C34165 + C34164 + C34163) * C50977 -
            (C16985 * C849 + C16980 * C854 + C16984 * C848 + C16979 * C853 +
             C16983 * C847 + C16978 * C852) *
                C378 -
            (C16985 * C858 + C16980 * C864 + C16984 * C857 + C16979 * C863 +
             C16983 * C856 + C16978 * C862) *
                C50788) *
               C50835 * C50911) *
              C50746 * C250 +
          (((C34166 + C34167 + C34168) * C378 -
            ((C16985 * C136 + C16980 * C146 + C16984 * C135 + C16979 * C145 +
              C16983 * C134 + C16978 * C144) *
                 C50977 +
             (C16985 * C125 + C16980 * C132 + C16984 * C124 + C16979 * C131 +
              C16983 * C123 + C16978 * C130) *
                 C377) +
            (C34169 + C34170 + C34171) * C50788) *
               C50835 * C33829 +
           ((C16983 * C848 + C16978 * C853 + C16984 * C849 + C16979 * C854 +
             C16985 * C850 + C16980 * C855) *
                C378 -
            ((C34171 + C34170 + C34169) * C50977 +
             (C34168 + C34167 + C34166) * C377) +
            (C16983 * C857 + C16978 * C863 + C16984 * C858 + C16979 * C864 +
             C16985 * C859 + C16980 * C865) *
                C50788) *
               C50835 * C50911) *
              C50746 * C251 +
          (((C16983 * C124 + C16978 * C131 + C16984 * C125 + C16979 * C132 +
             C16985 * C126 + C16980 * C138) *
                C377 +
            (C16983 * C135 + C16978 * C145 + C16984 * C136 + C16979 * C146 +
             C16985 * C137 + C16980 * C147) *
                C50977 -
            (C34172 + C34173 + C34174) * C378 -
            (C34175 + C34176 + C34177) * C50788) *
               C50835 * C33829 +
           ((C34174 + C34173 + C34172) * C377 +
            (C34177 + C34176 + C34175) * C50977 -
            (C16985 * C851 + C16980 * C860 + C16984 * C850 + C16979 * C855 +
             C16983 * C849 + C16978 * C854) *
                C378 -
            (C16985 * C861 + C16980 * C866 + C16984 * C859 + C16979 * C865 +
             C16983 * C858 + C16978 * C864) *
                C50788) *
               C50835 * C50911) *
              C50746 * C252)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16983 * C122 + C16978 * C129 + C16984 * C123 + C16979 * C130 +
             C16985 * C124 + C16980 * C131) *
                C377 +
            (C16983 * C133 + C16978 * C143 + C16984 * C134 + C16979 * C144 +
             C16985 * C135 + C16980 * C145) *
                C50977 -
            (C34160 + C34161 + C34162) * C378 -
            (C34163 + C34164 + C34165) * C50788) *
               C50835 * C33829 +
           ((C34162 + C34161 + C34160) * C377 +
            (C34165 + C34164 + C34163) * C50977 -
            (C16985 * C849 + C16980 * C854 + C16984 * C848 + C16979 * C853 +
             C16983 * C847 + C16978 * C852) *
                C378 -
            (C16985 * C858 + C16980 * C864 + C16984 * C857 + C16979 * C863 +
             C16983 * C856 + C16978 * C862) *
                C50788) *
               C50835 * C50911) *
              C501 +
          (((C17803 + C17802 + C17801) * C378 -
            ((C17174 + C17173 + C17172) * C50977 +
             (C17171 + C17170 + C17169) * C377) +
            (C17806 + C17805 + C17804) * C50788) *
               C50835 * C33829 +
           ((C18117 + C18118 + C18119) * C378 -
            ((C17804 + C17805 + C17806) * C50977 +
             (C17801 + C17802 + C17803) * C377) +
            (C18120 + C18121 + C18122) * C50788) *
               C50835 * C50911) *
              C502 +
          (((C17508 + C17507 + C17506) * C377 +
            (C17505 + C17504 + C17503) * C50977 -
            (C17809 + C17808 + C17807) * C378 -
            (C17812 + C17811 + C17810) * C50788) *
               C50835 * C33829 +
           ((C17807 + C17808 + C17809) * C377 +
            (C17810 + C17811 + C17812) * C50977 -
            (C16985 * C3212 + C16980 * C3217 + C16984 * C3211 + C16979 * C3214 +
             C16983 * C3210 + C16978 * C3213) *
                C378 -
            (C16985 * C3218 + C16980 * C3221 + C16984 * C3216 + C16979 * C3220 +
             C16983 * C3215 + C16978 * C3219) *
                C50788) *
               C50835 * C50911) *
              C503) *
         C50714) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C377 +
             (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
             C22194 * C50788) *
                C2173 +
            (C20337 + C20338 - C20371 - C20372) * C2174 + C20381 * C2175) *
               C33829 +
           ((C22193 * C377 + C22194 * C50977 - C22195 * C378 -
             C22196 * C50788) *
                C2173 +
            (C22613 + C22614 - C22615 - C22616) * C2174 + C31856 * C2175) *
               C50911) *
              C50746 * C250 +
          (((C22197 * C378 -
             ((C19767 * C134 + C50687 * C144) * C50977 +
              (C19767 * C123 + C50687 * C130) * C377) +
             C22198 * C50788) *
                C2173 +
            (C21039 - (C21017 + C21018) + C21040) * C2174 +
            (C21041 - (C21023 + C21024) + C21042) * C2175) *
               C33829 +
           ((C22199 * C378 - (C22198 * C50977 + C22197 * C377) +
             C22200 * C50788) *
                C2173 +
            (C23567 - (C23568 + C23569) + C23570) * C2174 +
            (C32739 - (C32740 + C32741) + C32742) * C2175) *
               C50911) *
              C50746 * C251 +
          ((((C19767 * C124 + C50687 * C131) * C377 +
             (C19767 * C135 + C50687 * C145) * C50977 - C22201 * C378 -
             C22202 * C50788) *
                C2173 +
            (C19915 * C377 + C19916 * C50977 - C22013 * C378 -
             C22014 * C50788) *
                C2174 +
            (C19917 * C377 + C19918 * C50977 - C31303 * C378 -
             C31304 * C50788) *
                C2175) *
               C33829 +
           ((C22201 * C377 + C22202 * C50977 - C22203 * C378 -
             C22204 * C50788) *
                C2173 +
            (C22013 * C377 + C22014 * C50977 - C22015 * C378 -
             C22016 * C50788) *
                C2174 +
            (C31303 * C377 + C31304 * C50977 -
             (C19767 * C3212 + C50687 * C3217) * C378 -
             (C19767 * C3218 + C50687 * C3221) * C50788) *
                C2175) *
               C50911) *
              C50746 * C252)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19767 * C122 + C50687 * C129) * C377 +
             (C19767 * C133 + C50687 * C143) * C50977 - C22193 * C378 -
             C22194 * C50788) *
                C2173 +
            (C20337 + C20338 - C20371 - C20372) * C2174 + C20381 * C2175) *
               C33829 +
           ((C22193 * C377 + C22194 * C50977 - C22195 * C378 -
             C22196 * C50788) *
                C2173 +
            (C22613 + C22614 - C22615 - C22616) * C2174 + C31856 * C2175) *
               C50911) *
              C501 +
          (((C20371 - (C20338 + C20337) + C20372) * C2173 +
            (C20373 - (C20344 + C20343) + C20374) * C2174 +
            (C20375 - (C20350 + C20349) + C20376) * C2175) *
               C33829 +
           ((C22615 - (C22614 + C22613) + C22616) * C2173 +
            (C22623 - (C22624 + C22625) + C22626) * C2174 +
            (C31851 - (C31852 + C31853) + C31854) * C2175) *
               C50911) *
              C502 +
          ((C20381 * C2173 + C20382 * C2174 +
            (C20358 + C20357 - C20377 - C20378) * C2175) *
               C33829 +
           (C31856 * C2173 + (C31853 + C31852 - C31851 - C31854) * C2174 +
            (C20369 * C377 + C20370 * C50977 -
             (C19767 * C20578 + C50687 * C20579) * C378 -
             (C19767 * C20580 + C50687 * C20581) * C50788) *
                C2175) *
               C50911) *
              C503) *
         C50714) /
            (p * q * std::sqrt(p + q));
}
