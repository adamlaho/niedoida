/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pddp_AC_yz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1221_13_23(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49739 = ce + de;
    const double C49738 = zC - zD;
    const double C49749 = ce * de;
    const double C49748 = 0 * de;
    const double C49767 = 0 * ce;
    const double C49763 = 0 * de;
    const double C49811 = ae * be;
    const double C49810 = ae + be;
    const double C49809 = 0 * be;
    const double C49808 = yA - yB;
    const double C49839 = 0 * ae;
    const double C49834 = 0 * be;
    const double C49874 = zP - zQ;
    const double C49873 = yP - yQ;
    const double C49872 = p + q;
    const double C49871 = p * q;
    const double C49883 = bs[4];
    const double C49881 = xP - xQ;
    const double C49889 = bs[5];
    const double C49896 = bs[6];
    const double C49908 = bs[7];
    const double C49953 = bs[3];
    const double C50390 = bs[2];
    const double C119 = bs[0];
    const double C50746 = xA - xB;
    const double C50767 = xC - xD;
    const double C50787 = yC - yD;
    const double C50901 = zA - zB;
    const double C49747 = 2 * C49739;
    const double C49764 = std::pow(C49739, 2);
    const double C50832 = std::pow(C49738, 2);
    const double C50844 = C49738 * de;
    const double C50843 = C49738 * ce;
    const double C49750 = C49749 * C49738;
    const double C49765 = C49738 * C49748;
    const double C49771 = C49767 / C49739;
    const double C49812 = std::pow(C49810, 2);
    const double C49835 = 2 * C49810;
    const double C49884 = C49739 * C49810;
    const double C140 = (-(std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                           (yP - yQ) * (zP - zQ) * ae * ce) /
                         C49739) /
                        C49810;
    const double C141 = (-((xP - xQ) * std::pow(-(2 * p * q) / (p + q), 3) *
                           bs[3] * (yP - yQ) * (zP - zQ) * ae * ce) /
                         C49739) /
                        C49810;
    const double C49813 = C49811 * C49808;
    const double C49836 = C49808 * C49809;
    const double C50886 = std::pow(C49808, 2);
    const double C50938 = C49808 * be;
    const double C50937 = C49808 * ae;
    const double C49844 = C49839 / C49810;
    const double C49922 = C49874 * ce;
    const double C50202 = std::pow(C49874, 2);
    const double C49876 = C49873 * C49874;
    const double C49939 = C49873 * ae;
    const double C50047 = std::pow(C49873, 2);
    const double C49875 = 2 * C49871;
    const double C49890 = std::pow(C49881, 2);
    const double C50749 = C50746 * be;
    const double C50748 = C50746 * ae;
    const double C50747 = std::pow(C50746, 2);
    const double C50770 = C50767 * de;
    const double C50769 = C50767 * ce;
    const double C50768 = std::pow(C50767, 2);
    const double C50802 = std::pow(C50787, 2);
    const double C50818 = C50787 * de;
    const double C50817 = C50787 * ce;
    const double C50902 = std::pow(C50901, 2);
    const double C50966 = C50901 * be;
    const double C50965 = C50901 * ae;
    const double C50778 = std::pow(C49747, -1);
    const double C51035 = std::pow(C49747, -2);
    const double C49768 = 2 * C49764;
    const double C51033 = 4 * C49764;
    const double C50833 = C50832 * C49749;
    const double C49769 = C49765 / C49739;
    const double C49814 = 2 * C49812;
    const double C51026 = 4 * C49812;
    const double C50757 = std::pow(C49835, -1);
    const double C51048 = std::pow(C49835, -2);
    const double C49841 = C49836 / C49810;
    const double C50887 = C50886 * C49811;
    const double C49923 = C49883 * C49922;
    const double C49929 = C49889 * C49922;
    const double C49932 = C49896 * C49922;
    const double C49954 = C49953 * C49922;
    const double C49971 = C49908 * C49922;
    const double C49878 = C49876 * ae;
    const double C49941 = C49883 * C49939;
    const double C49944 = C49889 * C49939;
    const double C49947 = C49896 * C49939;
    const double C50010 = C49953 * C49939;
    const double C50025 = C49908 * C49939;
    const double C49877 = C49875 / C49872;
    const double C126 = (-(bs[1] * C49939 * C49875) / C49872) / C49810;
    const double C127 = (bs[1] * C49922 * C49875) / (C49872 * C49739);
    const double C120 = -(C49881 * bs[1] * C49875) / C49872;
    const double C301 = -(C49873 * bs[1] * C49875) / C49872;
    const double C460 = -(C49874 * bs[1] * C49875) / C49872;
    const double C50750 = C50747 * C49811;
    const double C50771 = C50768 * C49749;
    const double C50803 = C50802 * C49749;
    const double C50903 = C50902 * C49811;
    const double C49776 = C49748 / C49768;
    const double C49774 = C49763 / C49768;
    const double C50834 = C50833 / C49739;
    const double C49773 = 0 - C49769;
    const double C49838 = C49809 / C49814;
    const double C49842 = C49834 / C49814;
    const double C49845 = 0 - C49841;
    const double C50888 = C50887 / C49810;
    const double C49879 = C49878 * ce;
    const double C49882 = std::pow(C49877, 4);
    const double C49888 = -C49877;
    const double C49895 = std::pow(C49877, 6);
    const double C50389 = std::pow(C49877, 2);
    const double C128 =
        (C49881 * std::pow(C49877, 2) * bs[2] * C49939) / C49810;
    const double C129 =
        -(C49881 * std::pow(C49877, 2) * bs[2] * C49922) / C49739;
    const double C310 =
        -(C49873 * std::pow(C49877, 2) * bs[2] * C49922) / C49739;
    const double C311 =
        (C49873 * std::pow(C49877, 2) * bs[2] * C49939) / C49810 -
        (ae * bs[1] * C49875) / (C49872 * C49810);
    const double C466 =
        (C49874 * std::pow(C49877, 2) * bs[2] * C49939) / C49810;
    const double C467 =
        (ce * bs[1] * C49875) / (C49872 * C49739) -
        (C49874 * std::pow(C49877, 2) * bs[2] * C49922) / C49739;
    const double C50751 = C50750 / C49810;
    const double C50772 = C50771 / C49739;
    const double C50804 = C50803 / C49739;
    const double C50904 = C50903 / C49810;
    const double C50835 = -C50834;
    const double C49778 = C49773 * ce;
    const double C49848 = C49845 * ae;
    const double C50889 = -C50888;
    const double C49885 = C49883 * C49879;
    const double C49892 = C49889 * C49879;
    const double C49898 = C49896 * C49879;
    const double C49911 = C49908 * C49879;
    const double C142 =
        (-(std::pow(C49877, 4) * bs[4] * C49879 * std::pow(xP - xQ, 2)) /
         C49739) /
            C49810 -
        (std::pow(-C49877, 3) * bs[3] * C49879) / (C49739 * C49810);
    const double C49924 = C49882 * C49923;
    const double C49942 = C49882 * C49941;
    const double C49992 = C49883 * C49882;
    const double C49891 = std::pow(C49888, 5);
    const double C49907 = std::pow(C49888, 7);
    const double C49952 = std::pow(C49888, 3);
    const double C319 =
        (-(C49873 * std::pow(C49888, 3) * bs[3] * C49879) / C49739) / C49810 -
        (ae * std::pow(C49877, 2) * bs[2] * C49922) / C49884;
    const double C478 =
        (-(C49874 * std::pow(C49888, 3) * bs[3] * C49879) / C49739) / C49810 -
        (std::pow(C49877, 2) * bs[2] * C49873 * ae * ce) / C49884;
    const double C49933 = C49895 * C49932;
    const double C49948 = C49895 * C49947;
    const double C50003 = C49896 * C49895;
    const double C50391 = C50390 * C50389;
    const double C50752 = -C50751;
    const double C50773 = -C50772;
    const double C50805 = -C50804;
    const double C50905 = -C50904;
    const double C50836 = std::exp(C50835);
    const double C49780 = C49778 / C49739;
    const double C49850 = C49848 / C49810;
    const double C50890 = std::exp(C50889);
    const double C49886 = C49882 * C49885;
    const double C49899 = C49895 * C49898;
    const double C49957 = C49881 * C49924;
    const double C50046 = ae * C49924;
    const double C50044 = C49873 * C49924;
    const double C50541 = C49874 * C49924;
    const double C50013 = C49881 * C49942;
    const double C50125 = C49942 * ce;
    const double C50212 = C49874 * C49942;
    const double C50467 = C49873 * C49942;
    const double C49996 = C49881 * C49992;
    const double C50144 = C49992 * ce;
    const double C50140 = C49873 * C49992;
    const double C50224 = C49874 * C49992;
    const double C50397 = C49992 * C49890;
    const double C50469 = C49992 * C50047;
    const double C50502 = C49992 * ae;
    const double C50544 = C49992 * C50202;
    const double C49893 = C49891 * C49892;
    const double C49930 = C49891 * C49929;
    const double C49945 = C49891 * C49944;
    const double C49998 = C49889 * C49891;
    const double C49913 = C49907 * C49911;
    const double C49974 = C49907 * C49971;
    const double C50027 = C49907 * C50025;
    const double C49955 = C49952 * C49954;
    const double C49994 = C49953 * C49952;
    const double C50011 = C49952 * C50010;
    const double C49934 = C49933 * C49890;
    const double C49970 = C49881 * C49933;
    const double C50104 = C49933 * C50047;
    const double C50249 = ae * C49933;
    const double C50247 = C49873 * C49933;
    const double C50282 = C49874 * C49933;
    const double C49949 = C49948 * C49890;
    const double C50024 = C49881 * C49948;
    const double C50226 = C49948 * C50202;
    const double C50281 = C49948 * ce;
    const double C50306 = C49874 * C49948;
    const double C50602 = C49873 * C49948;
    const double C50005 = C50003 * C49890;
    const double C50163 = C49881 * C50003;
    const double C50285 = C50003 * C50047;
    const double C50310 = C49873 * C50003;
    const double C50334 = C50003 * C50202;
    const double C121 = C50391 * C49890 - (bs[1] * C49875) / C49872;
    const double C300 = C49873 * C49881 * C50391;
    const double C461 = C49874 * C49881 * C50391;
    const double C635 = C50391 * C50047 - (bs[1] * C49875) / C49872;
    const double C864 = C49874 * C49873 * C50391;
    const double C1000 = C50391 * C50202 - (bs[1] * C49875) / C49872;
    const double C50753 = std::exp(C50752);
    const double C50774 = std::exp(C50773);
    const double C50806 = std::exp(C50805);
    const double C50906 = std::exp(C50905);
    const double C49751 = C49750 * C50836;
    const double C118 = -(2 * ce * de * (zC - zD) * C50836) / (ce + de);
    const double C458 =
        ((C50836 - (C49738 * 2 * ce * de * C49738 * C50836) / C49739) * ce) /
            C49739 -
        (0 * de) / (2 * std::pow(C49739, 2));
    const double C459 =
        (0 * ce) / C49739 - (ce * de * C49738 * C50836) / std::pow(C49739, 2);
    const double C50845 = C50836 * C50843;
    const double C50848 = C50778 * C50836;
    const double C51043 = C50836 * C50844;
    const double C51042 = C50836 / C49747;
    const double C996 = C51035 * C50836;
    const double C49782 = C49780 - C49774;
    const double C49852 = C49850 - C49842;
    const double C155 = C50890 * C142;
    const double C151 = C50890 * C141;
    const double C149 = C50890 * C128;
    const double C5667 = C50890 * C478;
    const double C5665 = C50890 * C466;
    const double C49815 = C49813 * C50890;
    const double C117 = -(2 * ae * be * (yA - yB) * C50890) / (ae + be);
    const double C50939 = C50890 * C50937;
    const double C50942 = C50757 * C50890;
    const double C51052 = C50890 * C50938;
    const double C51047 = C50890 / C49835;
    const double C2446 = C51048 * C50890;
    const double C143 =
        (-2 * C49881 * C49886) / C49884 +
        C49881 *
            ((-(std::pow(-C49877, 5) * bs[5] * C49879 * std::pow(C49881, 2)) /
              C49739) /
                 C49810 -
             C49886 / C49884);
    const double C318 =
        (-(C49873 * C49881 * C49886) / C49739) / C49810 -
        (ae * C49881 * std::pow(C49888, 3) * bs[3] * C49922) / C49884;
    const double C479 =
        (-(C49874 * C49881 * C49886) / C49739) / C49810 -
        (C49881 * std::pow(C49888, 3) * bs[3] * C49873 * ae * ce) / C49884;
    const double C49900 = C49899 * C49890;
    const double C49909 = C49899 / C49884;
    const double C49906 = C49881 * C49899;
    const double C50102 = C49873 * C49899;
    const double C50141 = C49874 * C49899;
    const double C50049 = C50046 / C49884;
    const double C50127 = C50125 / C49884;
    const double C50401 = 2 * C49996;
    const double C50449 = C49873 * C49996;
    const double C50475 = C49996 * ae;
    const double C50551 = C49874 * C49996;
    const double C50550 = C49996 * ce;
    const double C50504 = 2 * C50140;
    const double C50503 = C50140 * ae;
    const double C50567 = C49874 * C50140;
    const double C50566 = C50140 * ce;
    const double C50583 = 2 * C50224;
    const double C50582 = C50224 * ce;
    const double C49897 = C49893 / C49884;
    const double C49986 = C49881 * C49893;
    const double C50045 = C49873 * C49893;
    const double C50124 = C49874 * C49893;
    const double C144 =
        3 * ((-(C49893 * C49890) / C49739) / C49810 - C49886 / C49884) +
        C49881 * ((-2 * C49881 * C49893) / C49884 +
                  C49881 * ((-(std::pow(C49877, 6) * bs[6] * C49879 * C49890) /
                             C49739) /
                                C49810 -
                            C49893 / C49884));
    const double C317 =
        C49873 * ((-(C49893 * C49890) / C49739) / C49810 - C49886 / C49884) -
        (ae * (C49924 * C49890 + std::pow(C49888, 3) * bs[3] * C49922)) /
            C49884;
    const double C480 =
        C49874 * ((-(C49893 * C49890) / C49739) / C49810 - C49886 / C49884) -
        ((std::pow(C49888, 3) * bs[3] * C49939 +
          C49882 * C49883 * C49939 * C49890) *
         ce) /
            C49884;
    const double C651 =
        (-(ae * C49873 * C49957) / C49739) / C49810 -
        (C49881 * C49886) / C49884 +
        C49873 * ((-(C49873 * C49881 * C49893) / C49739) / C49810 -
                  (ae * C49957) / C49884);
    const double C49959 = C49930 * C49890;
    const double C49962 = C49881 * C49930;
    const double C50050 = C49930 * C50047;
    const double C50103 = ae * C49930;
    const double C50101 = C49873 * C49930;
    const double C50143 = C49874 * C49930;
    const double C50015 = C49945 * C49890;
    const double C50018 = C49881 * C49945;
    const double C50142 = C49945 * ce;
    const double C50181 = C49874 * C49945;
    const double C50213 = C49945 * C50202;
    const double C50501 = C49873 * C49945;
    const double C49999 = C49998 * C49890;
    const double C50002 = C49881 * C49998;
    const double C50145 = C49998 * C50047;
    const double C50183 = C49873 * C49998;
    const double C50225 = C49998 * C50202;
    const double C50283 = C49998 * ce;
    const double C50309 = C49874 * C49998;
    const double C50603 = C49998 * ae;
    const double C49914 = C49913 * C49890;
    const double C50077 = C49881 * C49913;
    const double C50248 = C49873 * C49913;
    const double C50280 = C49874 * C49913;
    const double C49976 = C49974 * C49890;
    const double C50079 = C49881 * C49974;
    const double C50251 = C49974 * C50047;
    const double C50028 = C50027 * C49890;
    const double C50194 = C49881 * C50027;
    const double C50335 = C50027 * C50202;
    const double C650 = (-(ae * C49873 * C49955) / C49739) / C49810 -
                        (C49952 * C49953 * C49879) / C49884 +
                        C49873 * ((-(C49873 * C49886) / C49739) / C49810 -
                                  (ae * C49955) / C49884);
    const double C765 =
        2 * ((-(C49873 * C49886) / C49739) / C49810 - (ae * C49955) / C49884) -
        (ae * (C49924 * std::pow(C49873, 2) + C49955)) / C49884 +
        C49873 *
            ((-(ae * C49873 * C49924) / C49739) / C49810 - C49886 / C49884 +
             C49873 * ((-(C49873 * C49893) / C49739) / C49810 -
                       (ae * C49924) / C49884));
    const double C888 =
        C49873 * ((-(C49874 * C49886) / C49739) / C49810 -
                  (C49952 * C49953 * C49939 * ce) / C49884) -
        (ae * (C49874 * C49955 + bs[2] * std::pow(C49877, 2) * ce)) / C49884;
    const double C131 =
        -(C49955 * C49890 + std::pow(C49877, 2) * bs[2] * C49922) / C49739;
    const double C133 = (-2 * C49881 * C49955) / C49739 -
                        (C49881 * (C49924 * C49890 + C49955)) / C49739;
    const double C306 = -(C49873 * (C49924 * C49890 + C49955)) / C49739;
    const double C308 = -(C49873 * C49881 * C49955) / C49739;
    const double C469 = -(C49874 * C49881 * C49955 +
                          C49881 * bs[2] * std::pow(C49877, 2) * ce) /
                        C49739;
    const double C641 = -(C49955 * C50047 + C50389 * C50390 * C49922) / C49739;
    const double C643 = -(C49957 * C50047 + C49881 * C49955) / C49739;
    const double C760 = (-2 * C49873 * C49955) / C49739 -
                        (C49873 * (C49924 * C50047 + C49955)) / C49739;
    const double C873 =
        -(C49874 * C49873 * C49955 + C49873 * C50391 * ce) / C49739;
    const double C1006 = -(C49874 * (C49874 * C49955 + C50391 * ce) +
                           C50389 * C50390 * C49922 + C49874 * C50391 * ce) /
                         C49739;
    const double C892 =
        (-(C49874 * C49886) / C49739) / C49810 -
        (C49952 * C49953 * C49939 * ce) / C49884 -
        (ae * (C49874 * C49873 * C49924 + C49873 * C49994 * ce)) / C49884 +
        C49873 * (C49873 * ((-(C49874 * C49893) / C49739) / C49810 -
                            (C49942 * ce) / C49884) -
                  (ae * (C49874 * C49924 + C49994 * ce)) / C49884);
    const double C1166 =
        C49873 *
            ((-(C49874 * C49942 * ce) / C49739) / C49810 - C49886 / C49884 +
             C49874 * ((-(C49874 * C49893) / C49739) / C49810 -
                       (C49942 * ce) / C49884)) -
        (ae * (C49874 * (C49874 * C49924 + C49994 * ce) + C49955 +
               C49874 * C49994 * ce)) /
            C49884;
    const double C50394 = C49881 * C49994;
    const double C50398 = C49994 + C50397;
    const double C50446 = C49873 * C49994;
    const double C50468 = C49994 * ae;
    const double C50471 = C49994 + C50469;
    const double C50543 = C49874 * C49994;
    const double C50542 = C49994 * ce;
    const double C50546 = C49994 + C50544;
    const double C471 =
        -(C49874 * (C49924 * C49890 + C49955) +
          (bs[2] * std::pow(C49877, 2) + C49994 * C49890) * ce) /
        C49739;
    const double C881 = -(C49874 * (C49924 * C50047 + C49955) +
                          (C50391 + C49994 * C50047) * ce) /
                        C49739;
    const double C1249 = (-2 * (C49874 * C49955 + C50391 * ce)) / C49739 -
                         (C49874 * (C49874 * (C49874 * C49924 + C49994 * ce) +
                                    C49955 + C49874 * C49994 * ce)) /
                             C49739 -
                         ((C50391 + C49994 * C50202) * ce) / C49739;
    const double C122 =
        2 * C49881 * C50391 + C49881 * (C50391 + C49994 * C49890);
    const double C299 = C49873 * (C50391 + C49994 * C49890);
    const double C462 = C49874 * (C50391 + C49994 * C49890);
    const double C753 =
        2 * C49873 * C50391 + C49873 * (C50391 + C49994 * C50047);
    const double C868 = C49874 * (C50391 + C49994 * C50047);
    const double C1244 =
        2 * C49874 * C50391 + C49874 * (C50391 + C49994 * C50202);
    const double C1015 = (-(C49874 * C50011 * ce) / C49739) / C49810 -
                         (C49952 * C49953 * C49879) / C49884 +
                         C49874 * ((-(C49874 * C49886) / C49739) / C49810 -
                                   (C50011 * ce) / C49884);
    const double C1256 =
        2 * ((-(C49874 * C49886) / C49739) / C49810 - (C50011 * ce) / C49884) -
        ((C50011 + C49942 * std::pow(C49874, 2)) * ce) / C49884 +
        C49874 *
            ((-(C49874 * C49942 * ce) / C49739) / C49810 - C49886 / C49884 +
             C49874 * ((-(C49874 * C49893) / C49739) / C49810 -
                       (C49942 * ce) / C49884));
    const double C130 =
        (std::pow(C49877, 2) * bs[2] * C49939 + C50011 * C49890) / C49810;
    const double C132 =
        (2 * C49881 * C50011 + C49881 * (C50011 + C49942 * C49890)) / C49810;
    const double C307 = (C49873 * (C50011 + C49942 * C49890) +
                         (bs[2] * std::pow(C49877, 2) + C49994 * C49890) * ae) /
                        C49810;
    const double C309 =
        (C49873 * C49881 * C50011 + C49881 * bs[2] * std::pow(C49877, 2) * ae) /
        C49810;
    const double C468 = (C49874 * C49881 * C50011) / C49810;
    const double C470 = (C49874 * (C50011 + C49942 * C49890)) / C49810;
    const double C640 =
        (C50389 * C50390 * C49939 + C49873 * (C49873 * C50011 + C50391 * ae) +
         C49873 * C50391 * ae) /
        C49810;
    const double C761 =
        (2 * (C49873 * C50011 + C50391 * ae) +
         C49873 * (C50011 + C49873 * (C49873 * C49942 + C49994 * ae) +
                   C49873 * C49994 * ae) +
         (C50391 + C49994 * C50047) * ae) /
        C49810;
    const double C872 = (C49874 * (C49873 * C50011 + C50391 * ae)) / C49810;
    const double C880 =
        (C49874 * (C50011 + C49873 * (C49873 * C49942 + C49994 * ae) +
                   C49873 * C49994 * ae)) /
        C49810;
    const double C1005 = (C50389 * C50390 * C49939 + C50011 * C50202) / C49810;
    const double C1007 = (C49881 * C50011 + C50013 * C50202) / C49810;
    const double C1158 = (C49873 * C50011 + C50391 * ae +
                          (C49873 * C49942 + C49994 * ae) * C50202) /
                         C49810;
    const double C1248 =
        (2 * C49874 * C50011 + C49874 * (C50011 + C49942 * C50202)) / C49810;
    const double C49935 = C49934 + C49930;
    const double C49973 = -2 * C49970;
    const double C50059 = C49970 * C50047;
    const double C50078 = ae * C49970;
    const double C50075 = C49873 * C49970;
    const double C50161 = C49874 * C49970;
    const double C50109 = C50104 + C49930;
    const double C50255 = C50249 / C49884;
    const double C50257 = -2 * C50247;
    const double C50253 = ae * C50247;
    const double C50278 = C49874 * C50247;
    const double C49950 = C49945 + C49949;
    const double C50026 = 2 * C50024;
    const double C50160 = C50024 * ce;
    const double C50191 = C49874 * C50024;
    const double C50217 = C50024 * C50202;
    const double C50489 = C49873 * C50024;
    const double C50228 = C49945 + C50226;
    const double C50288 = C50281 / C49884;
    const double C50311 = C50306 * ce;
    const double C50342 = 2 * C50306;
    const double C50006 = C49998 + C50005;
    const double C50167 = C50163 * C50047;
    const double C50193 = C49873 * C50163;
    const double C50231 = C50163 * C50202;
    const double C50290 = C49998 + C50285;
    const double C50333 = C50310 * C50202;
    const double C50337 = C49998 + C50334;
    const double C50754 = C50753 * C50748;
    const double C50758 = C50757 * C50753;
    const double C51023 = C50753 * C50749;
    const double C51020 = C50753 / C49835;
    const double C17372 = C51048 * C50753;
    const double C50775 = C50774 * C50769;
    const double C50779 = C50778 * C50774;
    const double C51029 = C50774 / C49747;
    const double C51028 = C50774 * C50770;
    const double C297 = C51035 * C50774;
    const double C50819 = C50806 * C50817;
    const double C50822 = C50778 * C50806;
    const double C51038 = C50806 * C50818;
    const double C51037 = C50806 / C49747;
    const double C632 = C51035 * C50806;
    const double C50967 = C50906 * C50965;
    const double C50970 = C50757 * C50906;
    const double C51056 = C50906 * C50966;
    const double C51049 = C50906 / C49835;
    const double C5338 = C51048 * C50906;
    const double C49752 = 2 * C49751;
    const double C49772 = C49751 / C49764;
    const double C51045 = C50845 / C49768;
    const double C51044 = C50845 * C50844;
    const double C51036 = C50845 / C49739;
    const double C50851 = C50848 * C50844;
    const double C1239 = C50848 / C51033;
    const double C1998 = C50848 / C49747;
    const double C51069 = C51043 / C49739;
    const double C995 = (-2 * C50778 * C51043) / C49739;
    const double C994 = (C50836 * std::pow(C50844, 2)) / C49764 + C51042;
    const double C49840 = C49815 / C49812;
    const double C49837 = 2 * C49815;
    const double C2451 = ((0 * ae) / C49810 - C49815 / C49812) / (2 * C49810) +
                         (0 * ae) / C49810;
    const double C8202 =
        ((C50890 - (C49808 * 2 * C49815) / C49810) * ae) / C49810 -
        C49809 / C49814;
    const double C8203 = (0 * ae) / C49810 - C49815 / C49812;
    const double C17373 =
        (-C49809 / C49810) / (2 * C49810) -
        ((C50890 - (C49808 * 2 * C49815) / C49810) * be) / C49810;
    const double C17374 =
        (-(2 * C49815) / C49810) / (2 * C49810) - (0 * be) / C49810;
    const double C152 = C117 * C121;
    const double C150 = C117 * C129;
    const double C148 = C117 * C120;
    const double C333 = C117 * C300;
    const double C487 = C117 * C461;
    const double C5668 = C117 * C1000;
    const double C5666 = C117 * C467;
    const double C5664 = C117 * C460;
    const double C6110 = C117 * C864;
    const double C51054 = C50939 / C49814;
    const double C51053 = C50939 * C50938;
    const double C51050 = C50939 / C49810;
    const double C2445 = (2 * C50757 * C50939) / C49810;
    const double C2450 =
        (((C50890 - (C49808 * 2 * C49815) / C49810) * ae) / C49810 -
         C49809 / C49814) /
            (2 * C49810) +
        ((C49808 * ((0 * ae) / C49810 - C49815 / C49812) + C50942) * ae) /
            C49810;
    const double C51055 = C50942 * C50938;
    const double C20202 = C50942 / C51026;
    const double C24798 = C50942 / C49835;
    const double C51072 = C51052 / C49810;
    const double C2444 = (C50890 * std::pow(C50937, 2)) / C49812 + C51047;
    const double C159 = C50890 * C143;
    const double C332 = C50890 * C318;
    const double C8212 = C50942 * C318;
    const double C17383 = C50942 * C318;
    const double C490 = C50890 * C479;
    const double C49901 = C49900 / C49739;
    const double C49910 = -2 * C49906;
    const double C50057 = C49873 * C49906;
    const double C50076 = C49906 / C49884;
    const double C50132 = C49874 * C49906;
    const double C50106 = C50102 / C49739;
    const double C50146 = C50141 / C49739;
    const double C889 =
        C49873 * ((-(C49874 * C49986) / C49739) / C49810 -
                  (C49881 * C49942 * ce) / C49884) -
        (ae * (C49874 * C49957 + C49881 * C49953 * C49952 * ce)) / C49884;
    const double C1016 = (-(C49874 * C50013 * ce) / C49739) / C49810 -
                         (C49881 * C49886) / C49884 +
                         C49874 * ((-(C49874 * C49986) / C49739) / C49810 -
                                   (C50013 * ce) / C49884);
    const double C50048 = C50045 / C49739;
    const double C50126 = C50124 / C49739;
    const double C161 = C50890 * C144;
    const double C328 = C50890 * C317;
    const double C8220 = C50942 * C317;
    const double C17391 = C50942 * C317;
    const double C496 = C50890 * C480;
    const double C659 = C50890 * C651;
    const double C2464 = C2446 * C651;
    const double C8420 = C50942 * C651;
    const double C17591 = C50942 * C651;
    const double C49960 = C49959 + C49924;
    const double C49964 = -2 * C49962;
    const double C50058 = ae * C49962;
    const double C50056 = C49873 * C49962;
    const double C764 =
        2 * ((-(C49873 * C49986) / C49739) / C49810 - (ae * C49957) / C49884) -
        (ae * (C49962 * std::pow(C49873, 2) + C49957)) / C49884 +
        C49873 *
            ((-(ae * C49873 * C49962) / C49739) / C49810 - C49986 / C49884 +
             C49873 * ((-(C49873 * C49906) / C49739) / C49810 -
                       (ae * C49962) / C49884));
    const double C893 =
        (-(C49874 * C49986) / C49739) / C49810 -
        (C49881 * C49942 * ce) / C49884 -
        (ae * (C49874 * C49873 * C49962 + C49873 * C49996 * ce)) / C49884 +
        C49873 * (C49873 * ((-(C49874 * C49906) / C49739) / C49810 -
                            (C49881 * C49945 * ce) / C49884) -
                  (ae * (C49874 * C49962 + C49996 * ce)) / C49884);
    const double C50549 = C49874 * C49962;
    const double C758 = (-2 * C49873 * C49957) / C49739 -
                        (C49873 * (C49962 * C50047 + C49957)) / C49739;
    const double C50052 = C50050 + C49924;
    const double C50107 = C50103 / C49884;
    const double C50108 = -2 * C50101;
    const double C50105 = ae * C50101;
    const double C50565 = C49874 * C50101;
    const double C50148 = C50143 + C50144;
    const double C50016 = C49942 + C50015;
    const double C50020 = 2 * C50018;
    const double C50133 = C50018 * ce;
    const double C50216 = C49874 * C50018;
    const double C1167 =
        C49873 *
            ((-(C49874 * C50018 * ce) / C49739) / C49810 - C49986 / C49884 +
             C49874 * ((-(C49874 * C49906) / C49739) / C49810 -
                       (C50018 * ce) / C49884)) -
        (ae * (C49874 * (C49874 * C49962 + C49996 * ce) + C49957 +
               C49874 * C49996 * ce)) /
            C49884;
    const double C1257 =
        2 * ((-(C49874 * C49986) / C49739) / C49810 - (C50013 * ce) / C49884) -
        ((C50013 + C50018 * std::pow(C49874, 2)) * ce) / C49884 +
        C49874 *
            ((-(C49874 * C50018 * ce) / C49739) / C49810 - C49986 / C49884 +
             C49874 * ((-(C49874 * C49906) / C49739) / C49810 -
                       (C50018 * ce) / C49884));
    const double C50474 = C49873 * C50018;
    const double C882 =
        (C49874 * (C50013 + C49873 * (C49873 * C50018 + C49996 * ae) +
                   C49873 * C49996 * ae)) /
        C49810;
    const double C1250 =
        (2 * C49874 * C50013 + C49874 * (C50013 + C50018 * C50202)) / C49810;
    const double C50147 = C50142 / C49884;
    const double C50184 = C50181 * ce;
    const double C50236 = 2 * C50181;
    const double C50214 = C49942 + C50213;
    const double C50506 = C50501 + C50502;
    const double C50000 = C49992 + C49999;
    const double C50004 = 2 * C50002;
    const double C50162 = C50002 * ce;
    const double C50158 = C49873 * C50002;
    const double C50230 = C49874 * C50002;
    const double C50476 = C50002 * C50047;
    const double C50490 = C50002 * ae;
    const double C50552 = C50002 * C50202;
    const double C50149 = C49992 + C50145;
    const double C50284 = 2 * C50183;
    const double C50279 = C50183 * ce;
    const double C50332 = C49874 * C50183;
    const double C50568 = C50183 * C50202;
    const double C50604 = C50183 * ae;
    const double C50227 = C49992 + C50225;
    const double C50289 = C50282 + C50283;
    const double C50313 = C50309 * ce;
    const double C50340 = 2 * C50309;
    const double C50608 = C50602 + C50603;
    const double C49915 = C49914 / C49739;
    const double C50081 = C49873 * C50077;
    const double C50159 = C49874 * C50077;
    const double C50254 = C50248 / C49739;
    const double C50287 = C50280 / C49739;
    const double C49977 = C49976 + C49933;
    const double C50084 = C50079 * C50047;
    const double C50258 = C50251 + C49933;
    const double C50029 = C49948 + C50028;
    const double C50232 = C50194 * C50202;
    const double C50338 = C49948 + C50335;
    const double C6113 = C50890 * C888;
    const double C14180 = C50942 * C888;
    const double C22318 = C50942 * C888;
    const double C154 = C117 * C131;
    const double C158 = C117 * C133;
    const double C327 = C117 * C306;
    const double C331 = C117 * C308;
    const double C489 = C117 * C469;
    const double C658 = C117 * C643;
    const double C6112 = C117 * C873;
    const double C5670 = C117 * C1006;
    const double C6121 = C50890 * C892;
    const double C14730 = C50942 * C892;
    const double C22734 = C50942 * C892;
    const double C36809 = C2446 * C892;
    const double C6117 = C50890 * C1166;
    const double C14948 = C50942 * C1166;
    const double C22326 = C50942 * C1166;
    const double C642 =
        (C49881 * C50011 + C49873 * (C49873 * C50013 + C50394 * ae) +
         C49873 * C50394 * ae) /
        C49810;
    const double C759 =
        (2 * (C49873 * C50013 + C50394 * ae) +
         C49873 * (C50013 + C49873 * (C49873 * C50018 + C49996 * ae) +
                   C49873 * C49996 * ae) +
         (C50394 + C49996 * C50047) * ae) /
        C49810;
    const double C874 = (C49874 * (C49873 * C50013 + C50394 * ae)) / C49810;
    const double C875 =
        -(C49874 * C49873 * C49957 + C49873 * C50394 * ce) / C49739;
    const double C883 = -(C49874 * (C49962 * C50047 + C49957) +
                          (C50394 + C49996 * C50047) * ce) /
                        C49739;
    const double C1008 = -(C49874 * (C49874 * C49957 + C50394 * ce) +
                           C49881 * C49955 + C49874 * C50394 * ce) /
                         C49739;
    const double C1160 = (C49873 * C50013 + C50394 * ae +
                          (C49873 * C50018 + C49996 * ae) * C50202) /
                         C49810;
    const double C1251 = (-2 * (C49874 * C49957 + C50394 * ce)) / C49739 -
                         (C49874 * (C49874 * (C49874 * C49962 + C49996 * ce) +
                                    C49957 + C49874 * C49996 * ce)) /
                             C49739 -
                         ((C50394 + C49996 * C50202) * ce) / C49739;
    const double C636 = C49881 * C50391 + C50394 * C50047;
    const double C752 =
        2 * C49873 * C50394 + C49873 * (C50394 + C49996 * C50047);
    const double C865 = C49874 * C49873 * C50394;
    const double C869 = C49874 * (C50394 + C49996 * C50047);
    const double C1001 = C49881 * C50391 + C50394 * C50202;
    const double C1155 = C49873 * C50394 + C50449 * C50202;
    const double C1245 =
        2 * C49874 * C50394 + C49874 * (C50394 + C49996 * C50202);
    const double C123 = 3 * (C50391 + C49994 * C49890) +
                        C49881 * (2 * C50394 + C49881 * C50398);
    const double C298 = C49873 * (2 * C50394 + C49881 * C50398);
    const double C463 = C49874 * (2 * C50394 + C49881 * C50398);
    const double C637 = C50391 + C49994 * C49890 + C50398 * C50047;
    const double C866 = C49874 * C49873 * C50398;
    const double C1002 = C50391 + C49994 * C49890 + C50398 * C50202;
    const double C1159 = -(C49874 * (C49874 * C50044 + C50446 * ce) +
                           C49873 * C49955 + C49874 * C50446 * ce) /
                         C49739;
    const double C3749 = (-2 * (C49874 * C50044 + C50446 * ce)) / C49739 -
                         (C49874 * (C49874 * (C49874 * C50101 + C50140 * ce) +
                                    C50044 + C49874 * C50140 * ce)) /
                             C49739 -
                         ((C50446 + C50140 * C50202) * ce) / C49739;
    const double C1154 = C49873 * C50391 + C50446 * C50202;
    const double C3743 =
        2 * C49874 * C50446 + C49874 * (C50446 + C50140 * C50202);
    const double C50470 = C50467 + C50468;
    const double C3016 = 3 * (C50391 + C49994 * C50047) +
                         C49873 * (2 * C50446 + C49873 * C50471);
    const double C3298 = C49874 * (2 * C50446 + C49873 * C50471);
    const double C3460 = C50391 + C49994 * C50047 + C50471 * C50202;
    const double C50545 = C50541 + C50542;
    const double C6279 = 3 * (C50391 + C49994 * C50202) +
                         C49874 * (2 * C50543 + C49874 * C50546);
    const double C495 = C117 * C471;
    const double C6120 = C117 * C881;
    const double C6294 = C117 * C1249;
    const double C156 = C117 * C122;
    const double C329 = C117 * C299;
    const double C493 = C117 * C462;
    const double C6118 = C117 * C868;
    const double C6292 = C117 * C1244;
    const double C5671 = C50890 * C1015;
    const double C6295 = C50890 * C1256;
    const double C153 = C50890 * C130;
    const double C157 = C50890 * C132;
    const double C330 = C50890 * C307;
    const double C8216 = C50942 * C307;
    const double C17387 = C50942 * C307;
    const double C334 = C50890 * C309;
    const double C8208 = C50942 * C309;
    const double C17379 = C50942 * C309;
    const double C488 = C50890 * C468;
    const double C494 = C50890 * C470;
    const double C6111 = C50890 * C872;
    const double C14176 = C50942 * C872;
    const double C22314 = C50942 * C872;
    const double C6119 = C50890 * C880;
    const double C14726 = C50942 * C880;
    const double C22730 = C50942 * C880;
    const double C36803 = C2446 * C880;
    const double C5669 = C50890 * C1005;
    const double C1026 = C50890 * C1007;
    const double C6115 = C50890 * C1158;
    const double C14944 = C50942 * C1158;
    const double C22322 = C50942 * C1158;
    const double C6293 = C50890 * C1248;
    const double C49963 = C49881 * C49935;
    const double C49969 = -3 * C49935;
    const double C50069 = ae * C49935;
    const double C50067 = C49873 * C49935;
    const double C50557 = C49874 * C49935;
    const double C49975 = C49973 / C49739;
    const double C50062 = C50059 + C49962;
    const double C50082 = C50078 / C49884;
    const double C50083 = -2 * C50075;
    const double C50080 = ae * C50075;
    const double C50573 = C49874 * C50075;
    const double C50113 = C49873 * C50109;
    const double C50250 = -3 * C50109;
    const double C50246 = ae * C50109;
    const double C50624 = C49874 * C50109;
    const double C50262 = C50257 / C49739;
    const double C50260 = C50253 / C49739;
    const double C50019 = C49881 * C49950;
    const double C50023 = 3 * C49950;
    const double C50208 = C49950 * ce;
    const double C50220 = C49874 * C49950;
    const double C50482 = C49873 * C49950;
    const double C50165 = C50160 / C49884;
    const double C50195 = C50191 * ce;
    const double C50240 = 2 * C50191;
    const double C50218 = C50018 + C50217;
    const double C50237 = C49874 * C50228;
    const double C50326 = C50228 * ce;
    const double C50347 = 3 * C50228;
    const double C50314 = C50311 / C49739;
    const double C50007 = C49881 * C50006;
    const double C50179 = C49873 * C50006;
    const double C50484 = C50006 * C50047;
    const double C50560 = C50006 * C50202;
    const double C50170 = C50002 + C50167;
    const double C50576 = C50193 * C50202;
    const double C50233 = C50002 + C50231;
    const double C50294 = C49873 * C50290;
    const double C50627 = C50290 * C50202;
    const double C50336 = C50183 + C50333;
    const double C50341 = C49874 * C50337;
    const double C51024 = C50754 / C49814;
    const double C51022 = C50754 / C49810;
    const double C51021 = C50754 * C50749;
    const double C17371 = (2 * C50757 * C50754) / C49810;
    const double C51025 = C50758 * C50749;
    const double C111 = C50758 / C51026;
    const double C8201 = C50758 / C49835;
    const double C51061 = C51023 / C49810;
    const double C17370 = (C50753 * std::pow(C50748, 2)) / C49812 + C51020;
    const double C51031 = C50775 / C49768;
    const double C51030 = C50775 * C50770;
    const double C51027 = C50775 / C49739;
    const double C50782 = C50779 * C50770;
    const double C116 = C50779 / C51033;
    const double C1362 = C50779 / C49747;
    const double C295 = (C50774 * std::pow(C50770, 2)) / C49764 + C51029;
    const double C51063 = C51028 / C49739;
    const double C296 = (-2 * C50778 * C51028) / C49739;
    const double C51040 = C50819 / C49768;
    const double C51039 = C50819 * C50818;
    const double C51034 = C50819 / C49739;
    const double C50825 = C50822 * C50818;
    const double C748 = C50822 / C51033;
    const double C1463 = C50822 / C49747;
    const double C51066 = C51038 / C49739;
    const double C631 = (-2 * C50778 * C51038) / C49739;
    const double C630 = (C50806 * std::pow(C50818, 2)) / C49764 + C51037;
    const double C51058 = C50967 / C49814;
    const double C51057 = C50967 * C50966;
    const double C51051 = C50967 / C49810;
    const double C5337 = (2 * C50757 * C50967) / C49810;
    const double C51059 = C50970 * C50966;
    const double C39216 = C50970 / C51026;
    const double C44529 = C50970 / C49835;
    const double C51075 = C51056 / C49810;
    const double C5336 = (C50906 * std::pow(C50965, 2)) / C49812 + C51049;
    const double C49766 = C49738 * C49752;
    const double C998 =
        ((-C49748 / C49739) / C49747 -
         ((C50836 - (C49738 * C49752) / C49739) * de) / C49739) /
            C49747 -
        ((C49738 * ((-C49752 / C49739) / C49747 - (0 * de) / C49739) + C50848) *
         de) /
            C49739;
    const double C999 =
        ((-C49752 / C49739) / C49747 - (0 * de) / C49739) / C49747 -
        (0 * de) / C49739;
    const double C1731 = (-C49752 / C49739) / C49747 - (0 * de) / C49739;
    const double C49777 = C49771 - C49772;
    const double C51070 = C51044 / C49764;
    const double C51046 = C50851 / C49739;
    const double C1728 = -C51069;
    const double C49847 = C49844 - C49840;
    const double C49843 = C49808 * C49837;
    const double C2463 = C2451 * C643;
    const double C36808 = C2451 * C881;
    const double C36802 = C2451 * C868;
    const double C8227 = C8202 * C122;
    const double C8223 = C8202 * C133;
    const double C8217 = C8202 * C131;
    const double C8213 = C8202 * C121;
    const double C8209 = C8202 * C129;
    const double C8205 = C8202 * C120;
    const double C8425 = C8202 * C300;
    const double C8421 = C8202 * C308;
    const double C8417 = C8202 * C299;
    const double C8413 = C8202 * C306;
    const double C8615 = C8202 * C471;
    const double C8611 = C8202 * C462;
    const double C8605 = C8202 * C469;
    const double C8601 = C8202 * C461;
    const double C8795 = C8202 * C643;
    const double C14181 = C8202 * C467;
    const double C14177 = C8202 * C460;
    const double C14737 = C8202 * C881;
    const double C14733 = C8202 * C868;
    const double C14727 = C8202 * C873;
    const double C14723 = C8202 * C864;
    const double C14945 = C8202 * C1006;
    const double C14941 = C8202 * C1000;
    const double C15323 = C8202 * C1249;
    const double C15319 = C8202 * C1244;
    const double C8219 = C8203 * C306;
    const double C8215 = C8203 * C299;
    const double C8211 = C8203 * C308;
    const double C8207 = C8203 * C300;
    const double C8419 = C8203 * C643;
    const double C14179 = C8203 * C873;
    const double C14175 = C8203 * C864;
    const double C14729 = C8203 * C881;
    const double C14725 = C8203 * C868;
    const double C17398 = C17373 * C122;
    const double C17394 = C17373 * C133;
    const double C17388 = C17373 * C131;
    const double C17384 = C17373 * C121;
    const double C17380 = C17373 * C129;
    const double C17376 = C17373 * C120;
    const double C17596 = C17373 * C300;
    const double C17592 = C17373 * C308;
    const double C17588 = C17373 * C299;
    const double C17584 = C17373 * C306;
    const double C17786 = C17373 * C471;
    const double C17782 = C17373 * C462;
    const double C17776 = C17373 * C469;
    const double C17772 = C17373 * C461;
    const double C17966 = C17373 * C643;
    const double C22327 = C17373 * C1006;
    const double C22323 = C17373 * C1000;
    const double C22319 = C17373 * C467;
    const double C22315 = C17373 * C460;
    const double C22749 = C17373 * C881;
    const double C22745 = C17373 * C868;
    const double C22731 = C17373 * C873;
    const double C22727 = C17373 * C864;
    const double C22927 = C17373 * C1249;
    const double C22923 = C17373 * C1244;
    const double C17390 = C17374 * C306;
    const double C17386 = C17374 * C299;
    const double C17382 = C17374 * C308;
    const double C17378 = C17374 * C300;
    const double C17590 = C17374 * C643;
    const double C22317 = C17374 * C873;
    const double C22313 = C17374 * C864;
    const double C22733 = C17374 * C881;
    const double C22729 = C17374 * C868;
    const double C169 = C150 + C151;
    const double C168 = C148 + C149;
    const double C5693 = C5666 + C5667;
    const double C5692 = C5664 + C5665;
    const double C51073 = C51053 / C49812;
    const double C8234 = C51050 * C144;
    const double C8228 = C51050 * C132;
    const double C8224 = C51050 * C143;
    const double C8218 = C51050 * C142;
    const double C8214 = C51050 * C130;
    const double C8210 = C51050 * C141;
    const double C8206 = C51050 * C128;
    const double C8426 = C51050 * C309;
    const double C8422 = C51050 * C318;
    const double C8418 = C51050 * C307;
    const double C8414 = C51050 * C317;
    const double C8616 = C51050 * C480;
    const double C8612 = C51050 * C470;
    const double C8606 = C51050 * C479;
    const double C8602 = C51050 * C468;
    const double C8796 = C51050 * C651;
    const double C9206 = C51050 * C1007;
    const double C14182 = C51050 * C478;
    const double C14178 = C51050 * C466;
    const double C14738 = C51050 * C892;
    const double C14734 = C51050 * C880;
    const double C14728 = C51050 * C888;
    const double C14724 = C51050 * C872;
    const double C14946 = C51050 * C1015;
    const double C14942 = C51050 * C1005;
    const double C15170 = C51050 * C1166;
    const double C15166 = C51050 * C1158;
    const double C15324 = C51050 * C1256;
    const double C15320 = C51050 * C1248;
    const double C2449 =
        (((0 - (C49808 * C49809) / C49810) * ae) / C49810 - (0 * be) / C49814) /
            (2 * C49810) +
        ((C49808 * (((C50890 - (C49808 * 2 * C49815) / C49810) * ae) / C49810 -
                    C49809 / C49814) +
          C51050) *
         ae) /
            C49810 +
        (0 * ae) / C49810 - C49815 / C49812;
    const double C2474 = C2445 * C307;
    const double C2468 = C2445 * C317;
    const double C2462 = C2445 * C318;
    const double C2456 = C2445 * C309;
    const double C2656 = C2445 * C651;
    const double C36811 = C2445 * C888;
    const double C36805 = C2445 * C872;
    const double C37219 = C2445 * C892;
    const double C37213 = C2445 * C880;
    const double C37401 = C2445 * C1166;
    const double C37395 = C2445 * C1158;
    const double C2473 = C2450 * C299;
    const double C2467 = C2450 * C306;
    const double C2461 = C2450 * C308;
    const double C2455 = C2450 * C300;
    const double C2655 = C2450 * C643;
    const double C36810 = C2450 * C873;
    const double C36804 = C2450 * C864;
    const double C37218 = C2450 * C881;
    const double C37212 = C2450 * C868;
    const double C51074 = C51055 / C49810;
    const double C24816 = C24798 * C651;
    const double C31428 = C24798 * C892;
    const double C31422 = C24798 * C880;
    const double C17368 = -C51072;
    const double C2484 = C2444 * C143;
    const double C2478 = C2444 * C132;
    const double C2476 = C2444 * C130;
    const double C2470 = C2444 * C142;
    const double C2460 = C2444 * C141;
    const double C2454 = C2444 * C128;
    const double C2672 = C2444 * C317;
    const double C2666 = C2444 * C307;
    const double C2664 = C2444 * C309;
    const double C2658 = C2444 * C318;
    const double C2854 = C2444 * C480;
    const double C2848 = C2444 * C470;
    const double C2846 = C2444 * C479;
    const double C2840 = C2444 * C468;
    const double C3036 = C2444 * C651;
    const double C3474 = C2444 * C1007;
    const double C36813 = C2444 * C478;
    const double C36807 = C2444 * C466;
    const double C37233 = C2444 * C892;
    const double C37227 = C2444 * C880;
    const double C37217 = C2444 * C888;
    const double C37211 = C2444 * C872;
    const double C37399 = C2444 * C1015;
    const double C37393 = C2444 * C1005;
    const double C37567 = C2444 * C1166;
    const double C37561 = C2444 * C1158;
    const double C37683 = C2444 * C1256;
    const double C37677 = C2444 * C1248;
    const double C49902 = -C49901;
    const double C49912 = C49910 / C49884;
    const double C50060 = C50057 / C49739;
    const double C50134 = C50132 / C49739;
    const double C50111 = -C50106;
    const double C50150 = -C50146;
    const double C1606 = C50890 * C889;
    const double C2844 = C2445 * C889;
    const double C4256 = C2444 * C889;
    const double C8604 = C50942 * C889;
    const double C9964 = C51050 * C889;
    const double C17775 = C50942 * C889;
    const double C1028 = C50890 * C1016;
    const double C3480 = C2444 * C1016;
    const double C9210 = C51050 * C1016;
    const double C50051 = -C50048;
    const double C50128 = -C50126;
    const double C134 =
        (-3 * (C49924 * C49890 + C49955)) / C49739 +
        C49881 * ((-2 * C49957) / C49739 - (C49881 * C49960) / C49739);
    const double C304 =
        C49873 * ((-2 * C49957) / C49739 - (C49881 * C49960) / C49739);
    const double C473 =
        C49874 * ((-2 * C49957) / C49739 - (C49881 * C49960) / C49739) -
        ((2 * C49881 * C49994 + C49881 * (C49994 + C49992 * C49890)) * ce) /
            C49739;
    const double C645 = -(C49960 * C50047 + C49924 * C49890 + C49955) / C49739;
    const double C756 = (-2 * C49873 * C49960) / C49739 -
                        (C49873 * (C49935 * C50047 + C49960)) / C49739;
    const double C877 =
        -(C49874 * C49873 * C49960 + C49873 * C50398 * ce) / C49739;
    const double C1010 = -(C49874 * (C49874 * C49960 + C50398 * ce) +
                           C49924 * C49890 + C49955 + C49874 * C50398 * ce) /
                         C49739;
    const double C49966 = C49964 / C49739;
    const double C50061 = C50058 / C49884;
    const double C1161 = -(C49874 * (C49874 * C50056 + C50449 * ce) +
                           C49873 * C49957 + C49874 * C50449 * ce) /
                         C49739;
    const double C2654 = C2446 * C764;
    const double C3038 = C2445 * C764;
    const double C8798 = C50942 * C764;
    const double C17969 = C50942 * C764;
    const double C25006 = C24798 * C764;
    const double C2842 = C2446 * C893;
    const double C4258 = C2445 * C893;
    const double C5853 = C50890 * C893;
    const double C9966 = C50942 * C893;
    const double C14392 = C51050 * C893;
    const double C19137 = C50942 * C893;
    const double C25194 = C24798 * C893;
    const double C50553 = C50549 + C50550;
    const double C2653 = C2451 * C758;
    const double C3037 = C2450 * C758;
    const double C8797 = C8203 * C758;
    const double C17968 = C17374 * C758;
    const double C3020 =
        (-3 * (C49924 * C50047 + C49955)) / C49739 +
        C49873 * ((-2 * C50044) / C49739 - (C49873 * C50052) / C49739);
    const double C3303 =
        C49874 * ((-2 * C50044) / C49739 - (C49873 * C50052) / C49739) -
        ((2 * C50446 + C49873 * C50471) * ce) / C49739;
    const double C3464 = -(C49874 * (C49874 * C50052 + C50471 * ce) +
                           C49924 * C50047 + C49955 + C49874 * C50471 * ce) /
                         C49739;
    const double C50112 = C50108 / C49739;
    const double C50110 = C50105 / C49739;
    const double C50569 = C50565 + C50566;
    const double C50151 = ae * C50148;
    const double C50581 = C49874 * C50148;
    const double C50643 = -2 * C50148;
    const double C135 = (3 * (C50011 + C49942 * C49890) +
                         C49881 * (2 * C50013 + C49881 * C50016)) /
                        C49810;
    const double C305 =
        (C49873 * (2 * C50013 + C49881 * C50016) +
         (2 * C49881 * C49994 + C49881 * (C49994 + C49992 * C49890)) * ae) /
        C49810;
    const double C472 = (C49874 * (2 * C50013 + C49881 * C50016)) / C49810;
    const double C644 =
        (C50011 + C49942 * C49890 + C49873 * (C49873 * C50016 + C50398 * ae) +
         C49873 * C50398 * ae) /
        C49810;
    const double C876 = (C49874 * (C49873 * C50016 + C50398 * ae)) / C49810;
    const double C1009 = (C50011 + C49942 * C49890 + C50016 * C50202) / C49810;
    const double C1252 =
        (2 * C49874 * C50016 + C49874 * (C50016 + C49950 * C50202)) / C49810;
    const double C50135 = C50133 / C49884;
    const double C3482 = C2445 * C1167;
    const double C5499 = C50890 * C1167;
    const double C9212 = C50942 * C1167;
    const double C15178 = C51050 * C1167;
    const double C18383 = C50942 * C1167;
    const double C5681 = C50890 * C1257;
    const double C14958 = C51050 * C1257;
    const double C50477 = C50474 + C50475;
    const double C2836 = C2446 * C882;
    const double C4252 = C2445 * C882;
    const double C5851 = C50890 * C882;
    const double C9962 = C50942 * C882;
    const double C14388 = C51050 * C882;
    const double C19133 = C50942 * C882;
    const double C25188 = C24798 * C882;
    const double C5679 = C50890 * C1250;
    const double C14954 = C51050 * C1250;
    const double C50185 = C50184 / C49739;
    const double C6282 = (3 * (C50011 + C49942 * C50202) +
                          C49874 * (2 * C50212 + C49874 * C50214)) /
                         C49810;
    const double C50508 = C49873 * C50506;
    const double C50601 = 2 * C50506;
    const double C50402 = C49881 * C50000;
    const double C50407 = 3 * C50000;
    const double C50452 = C49873 * C50000;
    const double C50483 = C50000 * ae;
    const double C50559 = C49874 * C50000;
    const double C50558 = C50000 * ce;
    const double C757 =
        (2 * (C49873 * C50016 + C50398 * ae) +
         C49873 * (C50016 + C49873 * (C49873 * C49950 + C50000 * ae) +
                   C49873 * C50000 * ae) +
         (C50398 + C50000 * C50047) * ae) /
        C49810;
    const double C884 =
        (C49874 * (C50016 + C49873 * (C49873 * C49950 + C50000 * ae) +
                   C49873 * C50000 * ae)) /
        C49810;
    const double C885 = -(C49874 * (C49935 * C50047 + C49960) +
                          (C50398 + C50000 * C50047) * ce) /
                        C49739;
    const double C1162 = (C49873 * C50016 + C50398 * ae +
                          (C49873 * C49950 + C50000 * ae) * C50202) /
                         C49810;
    const double C1253 = (-2 * (C49874 * C49960 + C50398 * ce)) / C49739 -
                         (C49874 * (C49874 * (C49874 * C49935 + C50000 * ce) +
                                    C49960 + C49874 * C50000 * ce)) /
                             C49739 -
                         ((C50398 + C50000 * C50202) * ce) / C49739;
    const double C751 =
        2 * C49873 * C50398 + C49873 * (C50398 + C50000 * C50047);
    const double C870 = C49874 * (C50398 + C50000 * C50047);
    const double C1246 =
        2 * C49874 * C50398 + C49874 * (C50398 + C50000 * C50202);
    const double C50166 = C50161 + C50162;
    const double C50492 = 2 * C50158;
    const double C50491 = C50158 * ae;
    const double C50575 = C49874 * C50158;
    const double C50574 = C50158 * ce;
    const double C3753 = (-2 * (C49874 * C50056 + C50449 * ce)) / C49739 -
                         (C49874 * (C49874 * (C49874 * C50075 + C50158 * ce) +
                                    C50056 + C49874 * C50158 * ce)) /
                             C49739 -
                         ((C50449 + C50158 * C50202) * ce) / C49739;
    const double C3745 =
        2 * C49874 * C50449 + C49874 * (C50449 + C50158 * C50202);
    const double C50592 = 2 * C50230;
    const double C50591 = C50230 * ce;
    const double C50478 = C49996 + C50476;
    const double C50494 = C50489 + C50490;
    const double C50554 = C49996 + C50552;
    const double C50505 = C49873 * C50149;
    const double C50606 = 3 * C50149;
    const double C50605 = C50149 * ae;
    const double C50626 = C49874 * C50149;
    const double C50625 = C50149 * ce;
    const double C3748 = (-2 * (C49874 * C50052 + C50471 * ce)) / C49739 -
                         (C49874 * (C49874 * (C49874 * C50109 + C50149 * ce) +
                                    C50052 + C49874 * C50149 * ce)) /
                             C49739 -
                         ((C50471 + C50149 * C50202) * ce) / C49739;
    const double C3742 =
        2 * C49874 * C50471 + C49874 * (C50471 + C50149 * C50202);
    const double C50286 = C50278 + C50279;
    const double C50636 = 2 * C50332;
    const double C50635 = C50332 * ce;
    const double C50570 = C50140 + C50568;
    const double C50584 = C49874 * C50227;
    const double C50646 = 3 * C50227;
    const double C50645 = C50227 * ce;
    const double C50293 = ae * C50289;
    const double C50308 = C49874 * C50289;
    const double C50610 = C49873 * C50608;
    const double C50631 = C50608 * C50202;
    const double C49916 = -C49915;
    const double C50086 = C50081 / C49739;
    const double C50164 = C50159 / C49739;
    const double C50261 = -C50254;
    const double C50292 = -C50287;
    const double C49978 = C49881 * C49977;
    const double C50070 = C49977 * C50047;
    const double C50088 = C50084 + C49970;
    const double C50263 = C49873 * C50258;
    const double C50030 = C49881 * C50029;
    const double C50221 = C50029 * C50202;
    const double C50234 = C50024 + C50232;
    const double C50343 = C49874 * C50338;
    const double C171 = C154 + C155;
    const double C173 = C158 + C159;
    const double C341 = C327 + C328;
    const double C343 = C331 + C332;
    const double C510 = C489 + C490;
    const double C669 = C658 + C659;
    const double C6127 = C6112 + C6113;
    const double C657 = C50890 * C642;
    const double C2458 = C2446 * C642;
    const double C2662 = C2445 * C642;
    const double C3030 = C2444 * C642;
    const double C8424 = C50942 * C642;
    const double C8792 = C51050 * C642;
    const double C17595 = C50942 * C642;
    const double C24810 = C24798 * C642;
    const double C2660 = C2446 * C759;
    const double C3032 = C2445 * C759;
    const double C8794 = C50942 * C759;
    const double C17965 = C50942 * C759;
    const double C25012 = C24798 * C759;
    const double C1602 = C50890 * C874;
    const double C2838 = C2445 * C874;
    const double C4250 = C2444 * C874;
    const double C8600 = C50942 * C874;
    const double C9960 = C51050 * C874;
    const double C17771 = C50942 * C874;
    const double C1605 = C117 * C875;
    const double C2843 = C2450 * C875;
    const double C8603 = C8203 * C875;
    const double C9963 = C8202 * C875;
    const double C17774 = C17374 * C875;
    const double C19134 = C17373 * C875;
    const double C2841 = C2451 * C883;
    const double C4257 = C2450 * C883;
    const double C5852 = C117 * C883;
    const double C9965 = C8203 * C883;
    const double C14391 = C8202 * C883;
    const double C19136 = C17374 * C883;
    const double C28237 = C17373 * C883;
    const double C1027 = C117 * C1008;
    const double C9209 = C8202 * C1008;
    const double C18380 = C17373 * C1008;
    const double C3476 = C2445 * C1160;
    const double C5501 = C50890 * C1160;
    const double C9208 = C50942 * C1160;
    const double C15174 = C51050 * C1160;
    const double C18379 = C50942 * C1160;
    const double C5680 = C117 * C1251;
    const double C14957 = C8202 * C1251;
    const double C22939 = C17373 * C1251;
    const double C656 = C117 * C636;
    const double C2457 = C2451 * C636;
    const double C2661 = C2450 * C636;
    const double C8423 = C8203 * C636;
    const double C8791 = C8202 * C636;
    const double C17594 = C17374 * C636;
    const double C17962 = C17373 * C636;
    const double C2659 = C2451 * C752;
    const double C3031 = C2450 * C752;
    const double C8793 = C8203 * C752;
    const double C17964 = C17374 * C752;
    const double C1601 = C117 * C865;
    const double C2837 = C2450 * C865;
    const double C8599 = C8203 * C865;
    const double C9959 = C8202 * C865;
    const double C17770 = C17374 * C865;
    const double C19130 = C17373 * C865;
    const double C2835 = C2451 * C869;
    const double C4251 = C2450 * C869;
    const double C5850 = C117 * C869;
    const double C9961 = C8203 * C869;
    const double C14387 = C8202 * C869;
    const double C19132 = C17374 * C869;
    const double C28233 = C17373 * C869;
    const double C1025 = C117 * C1001;
    const double C9205 = C8202 * C1001;
    const double C18376 = C17373 * C1001;
    const double C3475 = C2450 * C1155;
    const double C5500 = C117 * C1155;
    const double C9207 = C8203 * C1155;
    const double C15173 = C8202 * C1155;
    const double C18378 = C17374 * C1155;
    const double C23717 = C17373 * C1155;
    const double C5678 = C117 * C1245;
    const double C14953 = C8202 * C1245;
    const double C22935 = C17373 * C1245;
    const double C162 = C117 * C123;
    const double C8229 = C8202 * C123;
    const double C17400 = C17373 * C123;
    const double C325 = C117 * C298;
    const double C2479 = C2450 * C298;
    const double C8225 = C8203 * C298;
    const double C8427 = C8202 * C298;
    const double C17396 = C17374 * C298;
    const double C17598 = C17373 * C298;
    const double C499 = C117 * C463;
    const double C8617 = C8202 * C463;
    const double C17788 = C17373 * C463;
    const double C660 = C117 * C637;
    const double C2471 = C2451 * C637;
    const double C2667 = C2450 * C637;
    const double C8415 = C8203 * C637;
    const double C8799 = C8202 * C637;
    const double C17586 = C17374 * C637;
    const double C17970 = C17373 * C637;
    const double C1607 = C117 * C866;
    const double C2849 = C2450 * C866;
    const double C8609 = C8203 * C866;
    const double C9967 = C8202 * C866;
    const double C17780 = C17374 * C866;
    const double C19138 = C17373 * C866;
    const double C1033 = C117 * C1002;
    const double C9213 = C8202 * C1002;
    const double C18384 = C17373 * C1002;
    const double C6116 = C117 * C1159;
    const double C14947 = C8203 * C1159;
    const double C15169 = C8202 * C1159;
    const double C22325 = C17374 * C1159;
    const double C22739 = C17373 * C1159;
    const double C37400 = C2450 * C1159;
    const double C6472 = C117 * C3749;
    const double C15321 = C8203 * C3749;
    const double C22929 = C17374 * C3749;
    const double C23107 = C17373 * C3749;
    const double C37680 = C2450 * C3749;
    const double C48155 = C8202 * C3749;
    const double C6114 = C117 * C1154;
    const double C14943 = C8203 * C1154;
    const double C15165 = C8202 * C1154;
    const double C22321 = C17374 * C1154;
    const double C22735 = C17373 * C1154;
    const double C37394 = C2450 * C1154;
    const double C6470 = C117 * C3743;
    const double C15317 = C8203 * C3743;
    const double C22925 = C17374 * C3743;
    const double C23103 = C17373 * C3743;
    const double C37674 = C2450 * C3743;
    const double C48151 = C8202 * C3743;
    const double C3019 =
        (3 * (C50011 + C49873 * C50470 + C50446 * ae) +
         C49873 * (2 * C50470 +
                   C49873 * (C49942 + C49873 * (C49873 * C49945 + C49992 * ae) +
                             C50140 * ae) +
                   C50471 * ae) +
         (2 * C50446 + C49873 * C50471) * ae) /
        C49810;
    const double C3747 =
        (2 * C49874 * C50470 + C49874 * (C50470 + C50506 * C50202)) / C49810;
    const double C6463 =
        (3 * (C50470 + C50506 * C50202) +
         C49874 *
             (2 * C49874 * C50506 +
              C49874 * (C50506 + (C49873 * C49948 + C49998 * ae) * C50202))) /
        C49810;
    const double C14731 = C8203 * C3298;
    const double C22743 = C17374 * C3298;
    const double C37224 = C2450 * C3298;
    const double C37214 = C2451 * C3298;
    const double C6122 = C117 * C3460;
    const double C15163 = C8203 * C3460;
    const double C22753 = C17373 * C3460;
    const double C22737 = C17374 * C3460;
    const double C37396 = C2451 * C3460;
    const double C37558 = C2450 * C3460;
    const double C47843 = C8202 * C3460;
    const double C6283 =
        (-3 * (C49874 * C50545 + C49955 + C50543 * ce)) / C49739 +
        C49874 * ((-2 * C50545) / C49739 -
                  (C49874 * (C49874 * C50148 + C49924 + C50224 * ce)) / C49739 -
                  (C50546 * ce) / C49739) -
        ((2 * C50543 + C49874 * C50546) * ce) / C49739;
    const double C6588 = C117 * C6279;
    const double C23219 = C17373 * C6279;
    const double C48263 = C8202 * C6279;
    const double C513 = C495 + C496;
    const double C6131 = C6120 + C6121;
    const double C5695 = C5670 + C5671;
    const double C6311 = C6294 + C6295;
    const double C170 = C152 + C153;
    const double C172 = C156 + C157;
    const double C342 = C329 + C330;
    const double C344 = C333 + C334;
    const double C509 = C487 + C488;
    const double C512 = C493 + C494;
    const double C6126 = C6110 + C6111;
    const double C6130 = C6118 + C6119;
    const double C5694 = C5668 + C5669;
    const double C6310 = C6292 + C6293;
    const double C49965 = C49963 / C49739;
    const double C49972 = C49969 / C49739;
    const double C50071 = C50069 / C49884;
    const double C3022 =
        (-3 * (C49962 * C50047 + C49957)) / C49739 +
        C49873 * ((-2 * C50056) / C49739 - (C49873 * C50062) / C49739);
    const double C50087 = C50083 / C49739;
    const double C50085 = C50080 / C49739;
    const double C50116 = C50113 / C49739;
    const double C50256 = C50250 / C49739;
    const double C50252 = C50246 / C49884;
    const double C50264 = -C50260;
    const double C50021 = C50020 + C50019;
    const double C50209 = C50208 / C49884;
    const double C50196 = C50195 / C49739;
    const double C6284 = (3 * (C50013 + C50018 * C50202) +
                          C49874 * (2 * C50216 + C49874 * C50218)) /
                         C49810;
    const double C50238 = C50236 + C50237;
    const double C50328 = C50326 / C49884;
    const double C50316 = -C50314;
    const double C50008 = C50004 + C50007;
    const double C50486 = C50000 + C50484;
    const double C50562 = C50000 + C50560;
    const double C50493 = C49873 * C50170;
    const double C50578 = C50158 + C50576;
    const double C50593 = C49874 * C50233;
    const double C50298 = C50284 + C50294;
    const double C50629 = C50149 + C50627;
    const double C50637 = C49874 * C50336;
    const double C50344 = C50340 + C50341;
    const double C51060 = C51021 / C49812;
    const double C51062 = C51025 / C49810;
    const double C2447 = -C51061;
    const double C51064 = C51030 / C49764;
    const double C51032 = C50782 / C49739;
    const double C1464 = -C51063;
    const double C51067 = C51039 / C49764;
    const double C51041 = C50825 / C49739;
    const double C1358 = -C51066;
    const double C51076 = C51057 / C49812;
    const double C51077 = C51059 / C49810;
    const double C33864 = -C51075;
    const double C49770 = C49766 / C49739;
    const double C1243 =
        (C49777 / C49747 - (0 * de) / C49739) / C49747 - (0 * de) / C49739;
    const double C2001 = C49777 / C49747 - (0 * de) / C49739;
    const double C51082 = C51042 - C51070;
    const double C51071 = C51045 - C51046;
    const double C997 =
        ((-(0 * de) / C49739) / C49747 -
         ((0 - (C49738 * C49748) / C49739) * de) / C49739) /
            C49747 -
        ((C49738 * ((-C49748 / C49739) / C49747 -
                    ((C50836 - (C49738 * C49752) / C49739) * de) / C49739) +
          C1728) *
         de) /
            C49739 +
        (-C49752 / C49739) / C49747 - (0 * de) / C49739;
    const double C20207 =
        (C49847 / C49835 - (0 * be) / C49810) / C49835 + (0 * ae) / C49810;
    const double C24803 = C49847 / C49835 - (0 * be) / C49810;
    const double C49846 = C49843 / C49810;
    const double C2494 = C2463 + C2464;
    const double C36817 = C36808 + C36809;
    const double C36814 = C36802 + C36803;
    const double C8244 = C8219 + C8220;
    const double C8242 = C8215 + C8216;
    const double C8240 = C8211 + C8212;
    const double C8238 = C8207 + C8208;
    const double C8439 = C8419 + C8420;
    const double C14191 = C14179 + C14180;
    const double C14189 = C14175 + C14176;
    const double C14742 = C14729 + C14730;
    const double C14740 = C14725 + C14726;
    const double C17415 = C17390 + C17391;
    const double C17413 = C17386 + C17387;
    const double C17411 = C17382 + C17383;
    const double C17409 = C17378 + C17379;
    const double C17610 = C17590 + C17591;
    const double C22331 = C22317 + C22318;
    const double C22329 = C22313 + C22314;
    const double C22762 = C22733 + C22734;
    const double C22760 = C22729 + C22730;
    const double C179 = C169 * C50836;
    const double C486 = C169 * C51036;
    const double C1022 = C169 * C994;
    const double C1734 = C169 * C1728;
    const double C178 = C168 * C118;
    const double C485 = C168 * C458;
    const double C51083 = C51047 - C51073;
    const double C8248 = C8227 + C8228;
    const double C8246 = C8223 + C8224;
    const double C8243 = C8217 + C8218;
    const double C8241 = C8213 + C8214;
    const double C8239 = C8209 + C8210;
    const double C8237 = C8205 + C8206;
    const double C8442 = C8425 + C8426;
    const double C8440 = C8421 + C8422;
    const double C8438 = C8417 + C8418;
    const double C8436 = C8413 + C8414;
    const double C8633 = C8615 + C8616;
    const double C8631 = C8611 + C8612;
    const double C8628 = C8605 + C8606;
    const double C8626 = C8601 + C8602;
    const double C8809 = C8795 + C8796;
    const double C14192 = C14181 + C14182;
    const double C14190 = C14177 + C14178;
    const double C14746 = C14737 + C14738;
    const double C14744 = C14733 + C14734;
    const double C14741 = C14727 + C14728;
    const double C14739 = C14723 + C14724;
    const double C14963 = C14945 + C14946;
    const double C14961 = C14941 + C14942;
    const double C15328 = C15323 + C15324;
    const double C15326 = C15319 + C15320;
    const double C2483 = C2449 * C133;
    const double C2477 = C2449 * C122;
    const double C2475 = C2449 * C121;
    const double C2469 = C2449 * C131;
    const double C2459 = C2449 * C129;
    const double C2453 = C2449 * C120;
    const double C2671 = C2449 * C306;
    const double C2665 = C2449 * C299;
    const double C2663 = C2449 * C300;
    const double C2657 = C2449 * C308;
    const double C2853 = C2449 * C471;
    const double C2847 = C2449 * C462;
    const double C2845 = C2449 * C469;
    const double C2839 = C2449 * C461;
    const double C3035 = C2449 * C643;
    const double C3029 = C2449 * C636;
    const double C3479 = C2449 * C1008;
    const double C3473 = C2449 * C1001;
    const double C4255 = C2449 * C875;
    const double C4249 = C2449 * C865;
    const double C36812 = C2449 * C467;
    const double C36806 = C2449 * C460;
    const double C37232 = C2449 * C881;
    const double C37226 = C2449 * C868;
    const double C37216 = C2449 * C873;
    const double C37210 = C2449 * C864;
    const double C37398 = C2449 * C1006;
    const double C37392 = C2449 * C1000;
    const double C37566 = C2449 * C1159;
    const double C37560 = C2449 * C1154;
    const double C37682 = C2449 * C1249;
    const double C37676 = C2449 * C1244;
    const double C2499 = C2473 + C2474;
    const double C2496 = C2467 + C2468;
    const double C2493 = C2461 + C2462;
    const double C2490 = C2455 + C2456;
    const double C2678 = C2655 + C2656;
    const double C36818 = C36810 + C36811;
    const double C36815 = C36804 + C36805;
    const double C37238 = C37218 + C37219;
    const double C37235 = C37212 + C37213;
    const double C51084 = C51054 - C51074;
    const double C17405 = C17368 * C144;
    const double C17399 = C17368 * C132;
    const double C17395 = C17368 * C143;
    const double C17389 = C17368 * C142;
    const double C17385 = C17368 * C130;
    const double C17381 = C17368 * C141;
    const double C17377 = C17368 * C128;
    const double C17597 = C17368 * C309;
    const double C17593 = C17368 * C318;
    const double C17589 = C17368 * C307;
    const double C17585 = C17368 * C317;
    const double C17787 = C17368 * C480;
    const double C17783 = C17368 * C470;
    const double C17777 = C17368 * C479;
    const double C17773 = C17368 * C468;
    const double C17967 = C17368 * C651;
    const double C17963 = C17368 * C642;
    const double C18381 = C17368 * C1016;
    const double C18377 = C17368 * C1007;
    const double C19135 = C17368 * C889;
    const double C19131 = C17368 * C874;
    const double C22328 = C17368 * C1015;
    const double C22324 = C17368 * C1005;
    const double C22320 = C17368 * C478;
    const double C22316 = C17368 * C466;
    const double C22750 = C17368 * C892;
    const double C22746 = C17368 * C880;
    const double C22740 = C17368 * C1166;
    const double C22736 = C17368 * C1158;
    const double C22732 = C17368 * C888;
    const double C22728 = C17368 * C872;
    const double C22940 = C17368 * C1257;
    const double C22936 = C17368 * C1250;
    const double C22928 = C17368 * C1256;
    const double C22924 = C17368 * C1248;
    const double C23722 = C17368 * C1167;
    const double C23718 = C17368 * C1160;
    const double C28238 = C17368 * C893;
    const double C28234 = C17368 * C882;
    const double C49903 = C49902 / C49810;
    const double C50063 = -C50060;
    const double C50136 = -C50134;
    const double C50115 = C50111 / C49810;
    const double C50152 = C50150 / C49810;
    const double C50053 = C50051 / C49810;
    const double C50129 = C50128 / C49810;
    const double C160 = C117 * C134;
    const double C8233 = C8202 * C134;
    const double C17404 = C17373 * C134;
    const double C323 = C117 * C304;
    const double C2485 = C2450 * C304;
    const double C8221 = C8203 * C304;
    const double C8431 = C8202 * C304;
    const double C17392 = C17374 * C304;
    const double C17602 = C17373 * C304;
    const double C501 = C117 * C473;
    const double C8621 = C8202 * C473;
    const double C17792 = C17373 * C473;
    const double C662 = C117 * C645;
    const double C2465 = C2451 * C645;
    const double C2673 = C2450 * C645;
    const double C8411 = C8203 * C645;
    const double C8803 = C8202 * C645;
    const double C17582 = C17374 * C645;
    const double C17974 = C17373 * C645;
    const double C2675 = C2451 * C756;
    const double C8805 = C8203 * C756;
    const double C17976 = C17374 * C756;
    const double C1611 = C117 * C877;
    const double C2855 = C2450 * C877;
    const double C8613 = C8203 * C877;
    const double C9971 = C8202 * C877;
    const double C17784 = C17374 * C877;
    const double C19142 = C17373 * C877;
    const double C1035 = C117 * C1010;
    const double C9217 = C8202 * C1010;
    const double C18388 = C17373 * C1010;
    const double C3481 = C2450 * C1161;
    const double C5498 = C117 * C1161;
    const double C9211 = C8203 * C1161;
    const double C15177 = C8202 * C1161;
    const double C18382 = C17374 * C1161;
    const double C23721 = C17373 * C1161;
    const double C2677 = C2653 + C2654;
    const double C3045 = C3037 + C3038;
    const double C8810 = C8797 + C8798;
    const double C17981 = C17968 + C17969;
    const double C14735 = C8203 * C3303;
    const double C22747 = C17374 * C3303;
    const double C37230 = C2450 * C3303;
    const double C37220 = C2451 * C3303;
    const double C6124 = C117 * C3464;
    const double C15167 = C8203 * C3464;
    const double C22757 = C17373 * C3464;
    const double C22741 = C17374 * C3464;
    const double C37402 = C2451 * C3464;
    const double C37564 = C2450 * C3464;
    const double C47847 = C8202 * C3464;
    const double C50114 = -C50110;
    const double C50153 = C50151 / C49884;
    const double C50585 = C50581 + C49924;
    const double C50648 = C50643 / C49739;
    const double C163 = C50890 * C135;
    const double C8230 = C51050 * C135;
    const double C17401 = C17368 * C135;
    const double C326 = C50890 * C305;
    const double C2480 = C2445 * C305;
    const double C8226 = C50942 * C305;
    const double C8428 = C51050 * C305;
    const double C17397 = C50942 * C305;
    const double C17599 = C17368 * C305;
    const double C500 = C50890 * C472;
    const double C8618 = C51050 * C472;
    const double C17789 = C17368 * C472;
    const double C661 = C50890 * C644;
    const double C2472 = C2446 * C644;
    const double C2668 = C2445 * C644;
    const double C8416 = C50942 * C644;
    const double C8800 = C51050 * C644;
    const double C17587 = C50942 * C644;
    const double C17971 = C17368 * C644;
    const double C24824 = C24798 * C644;
    const double C1608 = C50890 * C876;
    const double C2850 = C2445 * C876;
    const double C8610 = C50942 * C876;
    const double C9968 = C51050 * C876;
    const double C17781 = C50942 * C876;
    const double C19139 = C17368 * C876;
    const double C1034 = C50890 * C1009;
    const double C9214 = C51050 * C1009;
    const double C18385 = C17368 * C1009;
    const double C5687 = C50890 * C1252;
    const double C50186 = -C50185;
    const double C6589 = C50890 * C6282;
    const double C23220 = C17368 * C6282;
    const double C48264 = C51050 * C6282;
    const double C50509 = C49942 + C50508;
    const double C50403 = C50401 + C50402;
    const double C1163 = -(C49874 * (C49874 * C50067 + C50452 * ce) +
                           C49873 * C49960 + C49874 * C50452 * ce) /
                         C49739;
    const double C7081 =
        (-2 * (C49874 * C50067 + C50452 * ce)) / C49739 -
        (C49874 * (C49874 * (C49874 * C49873 * C49977 + C50179 * ce) + C50067 +
                   C49874 * C50179 * ce)) /
            C49739 -
        ((C50452 + C50179 * C50202) * ce) / C49739;
    const double C1156 = C49873 * C50398 + C50452 * C50202;
    const double C7079 =
        2 * C49874 * C50452 + C49874 * (C50452 + C50179 * C50202);
    const double C50485 = C50482 + C50483;
    const double C50561 = C50557 + C50558;
    const double C2670 = C2446 * C757;
    const double C8802 = C50942 * C757;
    const double C17973 = C50942 * C757;
    const double C25022 = C24798 * C757;
    const double C2852 = C2446 * C884;
    const double C9970 = C50942 * C884;
    const double C11528 = C50890 * C884;
    const double C19141 = C50942 * C884;
    const double C25204 = C24798 * C884;
    const double C2857 = C2451 * C885;
    const double C9973 = C8203 * C885;
    const double C11529 = C117 * C885;
    const double C19144 = C17374 * C885;
    const double C5507 = C50890 * C1162;
    const double C9216 = C50942 * C1162;
    const double C18387 = C50942 * C1162;
    const double C5690 = C117 * C1253;
    const double C2669 = C2451 * C751;
    const double C8801 = C8203 * C751;
    const double C17972 = C17374 * C751;
    const double C2851 = C2451 * C870;
    const double C9969 = C8203 * C870;
    const double C11527 = C117 * C870;
    const double C19140 = C17374 * C870;
    const double C5686 = C117 * C1246;
    const double C50169 = ae * C50166;
    const double C50590 = C49874 * C50166;
    const double C50577 = C50573 + C50574;
    const double C6476 = C117 * C3753;
    const double C14959 = C8203 * C3753;
    const double C22937 = C17374 * C3753;
    const double C6474 = C117 * C3745;
    const double C14955 = C8203 * C3745;
    const double C22933 = C17374 * C3745;
    const double C3021 =
        (3 * (C50013 + C49873 * C50477 + C50449 * ae) +
         C49873 * (2 * C50477 +
                   C49873 * (C50018 + C49873 * (C49873 * C50024 + C50002 * ae) +
                             C50158 * ae) +
                   C50478 * ae) +
         (2 * C50449 + C49873 * C50478) * ae) /
        C49810;
    const double C3305 =
        C49874 * ((-2 * C50056) / C49739 - (C49873 * C50062) / C49739) -
        ((2 * C50449 + C49873 * C50478) * ce) / C49739;
    const double C3466 = -(C49874 * (C49874 * C50062 + C50478 * ce) +
                           C49962 * C50047 + C49957 + C49874 * C50478 * ce) /
                         C49739;
    const double C3017 = 3 * (C50394 + C49996 * C50047) +
                         C49873 * (2 * C50449 + C49873 * C50478);
    const double C3299 = C49874 * (2 * C50449 + C49873 * C50478);
    const double C3461 = C50394 + C49996 * C50047 + C50478 * C50202;
    const double C3744 =
        2 * C49874 * C50478 + C49874 * (C50478 + C50170 * C50202);
    const double C50496 = C49873 * C50494;
    const double C3751 =
        (2 * C49874 * C50477 + C49874 * (C50477 + C50494 * C50202)) / C49810;
    const double C6465 =
        (3 * (C50477 + C50494 * C50202) +
         C49874 *
             (2 * C49874 * C50494 +
              C49874 * (C50494 + (C49873 * C50194 + C50163 * ae) * C50202))) /
        C49810;
    const double C6285 =
        (-3 * (C49874 * C50553 + C49957 + C50551 * ce)) / C49739 +
        C49874 * ((-2 * C50553) / C49739 -
                  (C49874 * (C49874 * C50166 + C49962 + C50230 * ce)) / C49739 -
                  (C50554 * ce) / C49739) -
        ((2 * C50551 + C49874 * C50554) * ce) / C49739;
    const double C6280 = 3 * (C50394 + C49996 * C50202) +
                         C49874 * (2 * C50551 + C49874 * C50554);
    const double C50507 = C50504 + C50505;
    const double C50628 = C50624 + C50625;
    const double C23105 = C17374 * C3748;
    const double C37678 = C2451 * C3748;
    const double C39678 = C117 * C3748;
    const double C48153 = C8203 * C3748;
    const double C23101 = C17374 * C3742;
    const double C37672 = C2451 * C3742;
    const double C39676 = C117 * C3742;
    const double C48149 = C8203 * C3742;
    const double C50291 = ae * C50286;
    const double C50634 = C49874 * C50286;
    const double C6464 =
        (-3 * (C49874 * C50569 + C50044 + C50567 * ce)) / C49739 +
        C49874 * ((-2 * C50569) / C49739 -
                  (C49874 * (C49874 * C50286 + C50101 + C50332 * ce)) / C49739 -
                  (C50570 * ce) / C49739) -
        ((2 * C50567 + C49874 * C50570) * ce) / C49739;
    const double C6461 = 3 * (C50446 + C50140 * C50202) +
                         C49874 * (2 * C50567 + C49874 * C50570);
    const double C50586 = C50583 + C50584;
    const double C50650 = C50645 / C49739;
    const double C50297 = C50293 / C49884;
    const double C50312 = C50308 + C49930;
    const double C50611 = C49945 + C50610;
    const double C50632 = C50506 + C50631;
    const double C49917 = C49916 / C49810;
    const double C50090 = -C50086;
    const double C50168 = -C50164;
    const double C50265 = C50261 / C49810;
    const double C50296 = C50292 / C49810;
    const double C49979 = C49978 / C49739;
    const double C50072 = C50070 + C49935;
    const double C50091 = C49873 * C50088;
    const double C3752 = (-2 * (C49874 * C50062 + C50478 * ce)) / C49739 -
                         (C49874 * (C49874 * (C49874 * C50088 + C50170 * ce) +
                                    C50062 + C49874 * C50170 * ce)) /
                             C49739 -
                         ((C50478 + C50170 * C50202) * ce) / C49739;
    const double C50266 = C50263 / C49739;
    const double C50031 = C50026 + C50030;
    const double C50222 = C49950 + C50221;
    const double C50241 = C49874 * C50234;
    const double C50345 = C50342 + C50343;
    const double C181 = C171 * C50836;
    const double C492 = C171 * C51036;
    const double C1030 = C171 * C994;
    const double C1738 = C171 * C1728;
    const double C183 = C173 * C50836;
    const double C498 = C173 * C51036;
    const double C1038 = C173 * C994;
    const double C1742 = C173 * C1728;
    const double C349 = C341 * C50836;
    const double C1609 = C341 * C51036;
    const double C1892 = C341 * C1728;
    const double C351 = C343 * C50836;
    const double C1603 = C343 * C51036;
    const double C1888 = C343 * C1728;
    const double C520 = C510 * C50848;
    const double C1024 = C510 * C995;
    const double C1736 = C510 * C50848;
    const double C5341 = C510 * C50836;
    const double C5673 = C510 * C51036;
    const double C6297 = C510 * C994;
    const double C7239 = C510 * C1728;
    const double C675 = C669 * C50836;
    const double C1620 = C1605 + C1606;
    const double C2863 = C2843 + C2844;
    const double C8627 = C8603 + C8604;
    const double C9977 = C9963 + C9964;
    const double C17798 = C17774 + C17775;
    const double C2862 = C2841 + C2842;
    const double C4265 = C4257 + C4258;
    const double C5859 = C5852 + C5853;
    const double C9978 = C9965 + C9966;
    const double C14397 = C14391 + C14392;
    const double C19149 = C19136 + C19137;
    const double C1046 = C1027 + C1028;
    const double C9223 = C9209 + C9210;
    const double C5697 = C5680 + C5681;
    const double C14967 = C14957 + C14958;
    const double C668 = C656 + C657;
    const double C2491 = C2457 + C2458;
    const double C2681 = C2661 + C2662;
    const double C8441 = C8423 + C8424;
    const double C8807 = C8791 + C8792;
    const double C17612 = C17594 + C17595;
    const double C2680 = C2659 + C2660;
    const double C3042 = C3031 + C3032;
    const double C8808 = C8793 + C8794;
    const double C17979 = C17964 + C17965;
    const double C1619 = C1601 + C1602;
    const double C2860 = C2837 + C2838;
    const double C8625 = C8599 + C8600;
    const double C9975 = C9959 + C9960;
    const double C17796 = C17770 + C17771;
    const double C2859 = C2835 + C2836;
    const double C4262 = C4251 + C4252;
    const double C5858 = C5850 + C5851;
    const double C9976 = C9961 + C9962;
    const double C14395 = C14387 + C14388;
    const double C19147 = C19132 + C19133;
    const double C1045 = C1025 + C1026;
    const double C9221 = C9205 + C9206;
    const double C3486 = C3475 + C3476;
    const double C5511 = C5500 + C5501;
    const double C9222 = C9207 + C9208;
    const double C15184 = C15173 + C15174;
    const double C18393 = C18378 + C18379;
    const double C5696 = C5678 + C5679;
    const double C14965 = C14953 + C14954;
    const double C6129 = C6116 + C6117;
    const double C14964 = C14947 + C14948;
    const double C15182 = C15169 + C15170;
    const double C22335 = C22325 + C22326;
    const double C37408 = C37400 + C37401;
    const double C6128 = C6114 + C6115;
    const double C14962 = C14943 + C14944;
    const double C15180 = C15165 + C15166;
    const double C22333 = C22321 + C22322;
    const double C37405 = C37394 + C37395;
    const double C6471 = C50890 * C3747;
    const double C15318 = C50942 * C3747;
    const double C22926 = C50942 * C3747;
    const double C23104 = C17368 * C3747;
    const double C37675 = C2445 * C3747;
    const double C48152 = C51050 * C3747;
    const double C23218 = C50942 * C6463;
    const double C39879 = C50890 * C6463;
    const double C48262 = C50942 * C6463;
    const double C6590 = C117 * C6283;
    const double C23223 = C17373 * C6283;
    const double C48267 = C8202 * C6283;
    const double C522 = C513 * C50848;
    const double C1032 = C513 * C995;
    const double C1740 = C513 * C50848;
    const double C5346 = C513 * C50836;
    const double C5683 = C513 * C51036;
    const double C7247 = C513 * C1728;
    const double C11926 = C513 * C994;
    const double C180 = C170 * C118;
    const double C491 = C170 * C458;
    const double C182 = C172 * C118;
    const double C497 = C172 * C458;
    const double C350 = C342 * C118;
    const double C1610 = C342 * C458;
    const double C352 = C344 * C118;
    const double C1604 = C344 * C458;
    const double C519 = C509 * C459;
    const double C1023 = C509 * C998;
    const double C1735 = C509 * C1731;
    const double C5340 = C509 * C118;
    const double C5672 = C509 * C458;
    const double C521 = C512 * C459;
    const double C1031 = C512 * C998;
    const double C1739 = C512 * C1731;
    const double C5347 = C512 * C118;
    const double C5684 = C512 * C458;
    const double C49967 = C49966 - C49965;
    const double C3039 = C2451 * C3022;
    const double C50089 = -C50085;
    const double C50119 = C50112 - C50116;
    const double C50267 = C50264 / C49810;
    const double C136 = (4 * (2 * C50013 + C49881 * C50016) +
                         C49881 * (3 * C50016 + C49881 * C50021)) /
                        C49810;
    const double C312 = (C49873 * (3 * C50016 + C49881 * C50021) +
                         (3 * (C49994 + C49992 * C49890) +
                          C49881 * (2 * C49996 + C49881 * C50000)) *
                             ae) /
                        C49810;
    const double C474 = (C49874 * (3 * C50016 + C49881 * C50021)) / C49810;
    const double C1011 =
        (2 * C50013 + C49881 * C50016 + C50021 * C50202) / C49810;
    const double C50197 = -C50196;
    const double C6307 = C50890 * C6284;
    const double C6581 = (4 * (2 * C50212 + C49874 * C50214) +
                          C49874 * (3 * C50214 + C49874 * C50238)) /
                         C49810;
    const double C50318 = C50316 / C49810;
    const double C50408 = C49881 * C50008;
    const double C50455 = C49873 * C50008;
    const double C3018 = 3 * (C50398 + C50000 * C50047) +
                         C49873 * (2 * C50452 + C49873 * C50486);
    const double C3462 = C50398 + C50000 * C50047 + C50486 * C50202;
    const double C4244 = C49874 * (2 * C50452 + C49873 * C50486);
    const double C6281 = 3 * (C50398 + C50000 * C50202) +
                         C49874 * (2 * C50559 + C49874 * C50562);
    const double C50495 = C50492 + C50493;
    const double C6462 = 3 * (C50449 + C50158 * C50202) +
                         C49874 * (2 * C50575 + C49874 * C50578);
    const double C50595 = C50592 + C50593;
    const double C50607 = C49873 * C50298;
    const double C23094 = 3 * (C50471 + C50149 * C50202) +
                          C49874 * (2 * C50626 + C49874 * C50629);
    const double C50639 = C50636 + C50637;
    const double C50647 = C49874 * C50344;
    const double C51078 = C51020 - C51060;
    const double C51079 = C51024 - C51062;
    const double C51080 = C51029 - C51064;
    const double C51065 = C51031 - C51032;
    const double C51081 = C51037 - C51067;
    const double C51068 = C51040 - C51041;
    const double C51085 = C51049 - C51076;
    const double C51086 = C51058 - C51077;
    const double C49775 = C50836 - C49770;
    const double C2016 = C173 * C51082;
    const double C2010 = C171 * C51082;
    const double C2004 = C169 * C51082;
    const double C7603 = C510 * C51082;
    const double C13166 = C513 * C51082;
    const double C1236 =
        (C51036 - C51069) / C49747 - (C51082 * C50844) / C49739;
    const double C2012 = C513 * C51071;
    const double C2006 = C510 * C51071;
    const double C1237 =
        (2 * C50848 + C51082) / C49747 - (C51071 * C50844) / C49739;
    const double C1238 = C51071 / C49747 - C50851 / C49768;
    const double C1037 = C172 * C997;
    const double C1029 = C170 * C997;
    const double C1021 = C168 * C997;
    const double C6296 = C509 * C997;
    const double C11925 = C512 * C997;
    const double C24823 = C24803 * C637;
    const double C24817 = C24803 * C645;
    const double C24815 = C24803 * C643;
    const double C24809 = C24803 * C636;
    const double C25027 = C24803 * C756;
    const double C25021 = C24803 * C751;
    const double C25011 = C24803 * C752;
    const double C25005 = C24803 * C758;
    const double C25209 = C24803 * C885;
    const double C25203 = C24803 * C870;
    const double C25193 = C24803 * C883;
    const double C25187 = C24803 * C869;
    const double C25379 = C24803 * C3022;
    const double C31427 = C24803 * C881;
    const double C31421 = C24803 * C868;
    const double C31839 = C24803 * C3303;
    const double C31833 = C24803 * C3298;
    const double C32021 = C24803 * C3464;
    const double C32015 = C24803 * C3460;
    const double C32297 = C24803 * C3748;
    const double C32291 = C24803 * C3742;
    const double C49849 = C50890 - C49846;
    const double C24836 = C51083 * C143;
    const double C24830 = C51083 * C132;
    const double C24828 = C51083 * C130;
    const double C24822 = C51083 * C142;
    const double C24812 = C51083 * C141;
    const double C24806 = C51083 * C128;
    const double C25024 = C51083 * C317;
    const double C25018 = C51083 * C307;
    const double C25016 = C51083 * C309;
    const double C25010 = C51083 * C318;
    const double C25206 = C51083 * C480;
    const double C25200 = C51083 * C470;
    const double C25198 = C51083 * C479;
    const double C25192 = C51083 * C468;
    const double C25376 = C51083 * C651;
    const double C25370 = C51083 * C642;
    const double C25784 = C51083 * C1016;
    const double C25778 = C51083 * C1007;
    const double C26532 = C51083 * C889;
    const double C26526 = C51083 * C874;
    const double C31432 = C51083 * C478;
    const double C31426 = C51083 * C466;
    const double C31852 = C51083 * C892;
    const double C31846 = C51083 * C880;
    const double C31836 = C51083 * C888;
    const double C31830 = C51083 * C872;
    const double C32018 = C51083 * C1015;
    const double C32012 = C51083 * C1005;
    const double C32186 = C51083 * C1166;
    const double C32180 = C51083 * C1158;
    const double C32302 = C51083 * C1256;
    const double C32296 = C51083 * C1248;
    const double C20199 =
        (C51083 * C50937) / C49810 + (C51050 - C51072) / C49835;
    const double C8254 = C8243 + C8244;
    const double C8253 = C8241 + C8242;
    const double C2504 = C2483 + C2484;
    const double C2501 = C2477 + C2478;
    const double C2500 = C2475 + C2476;
    const double C2497 = C2469 + C2470;
    const double C2492 = C2459 + C2460;
    const double C2489 = C2453 + C2454;
    const double C2686 = C2671 + C2672;
    const double C2683 = C2665 + C2666;
    const double C2682 = C2663 + C2664;
    const double C2679 = C2657 + C2658;
    const double C2868 = C2853 + C2854;
    const double C2865 = C2847 + C2848;
    const double C2864 = C2845 + C2846;
    const double C2861 = C2839 + C2840;
    const double C3044 = C3035 + C3036;
    const double C3041 = C3029 + C3030;
    const double C3488 = C3479 + C3480;
    const double C3485 = C3473 + C3474;
    const double C4264 = C4255 + C4256;
    const double C4261 = C4249 + C4250;
    const double C36819 = C36812 + C36813;
    const double C36816 = C36806 + C36807;
    const double C37245 = C37232 + C37233;
    const double C37242 = C37226 + C37227;
    const double C37237 = C37216 + C37217;
    const double C37234 = C37210 + C37211;
    const double C37407 = C37398 + C37399;
    const double C37404 = C37392 + C37393;
    const double C37573 = C37566 + C37567;
    const double C37570 = C37560 + C37561;
    const double C37689 = C37682 + C37683;
    const double C37686 = C37676 + C37677;
    const double C24832 = C51084 * C305;
    const double C24826 = C51084 * C307;
    const double C24820 = C51084 * C317;
    const double C24814 = C51084 * C318;
    const double C24808 = C51084 * C309;
    const double C25020 = C51084 * C644;
    const double C25014 = C51084 * C642;
    const double C25008 = C51084 * C651;
    const double C25202 = C51084 * C876;
    const double C25196 = C51084 * C889;
    const double C25190 = C51084 * C874;
    const double C25378 = C51084 * C764;
    const double C25372 = C51084 * C759;
    const double C25786 = C51084 * C1167;
    const double C25780 = C51084 * C1160;
    const double C26534 = C51084 * C893;
    const double C26528 = C51084 * C882;
    const double C31430 = C51084 * C888;
    const double C31424 = C51084 * C872;
    const double C31838 = C51084 * C892;
    const double C31832 = C51084 * C880;
    const double C32020 = C51084 * C1166;
    const double C32014 = C51084 * C1158;
    const double C32294 = C51084 * C3747;
    const double C20200 =
        (C51084 * C50937) / C49810 + (2 * C50942 + C51083) / C49835;
    const double C20201 = (C50937 * C50942) / C49814 + C51084 / C49835;
    const double C17419 = C17398 + C17399;
    const double C17417 = C17394 + C17395;
    const double C17414 = C17388 + C17389;
    const double C17412 = C17384 + C17385;
    const double C17410 = C17380 + C17381;
    const double C17408 = C17376 + C17377;
    const double C17613 = C17596 + C17597;
    const double C17611 = C17592 + C17593;
    const double C17609 = C17588 + C17589;
    const double C17607 = C17584 + C17585;
    const double C17804 = C17786 + C17787;
    const double C17802 = C17782 + C17783;
    const double C17799 = C17776 + C17777;
    const double C17797 = C17772 + C17773;
    const double C17980 = C17966 + C17967;
    const double C17978 = C17962 + C17963;
    const double C18394 = C18380 + C18381;
    const double C18392 = C18376 + C18377;
    const double C19148 = C19134 + C19135;
    const double C19146 = C19130 + C19131;
    const double C22336 = C22327 + C22328;
    const double C22334 = C22323 + C22324;
    const double C22332 = C22319 + C22320;
    const double C22330 = C22315 + C22316;
    const double C22770 = C22749 + C22750;
    const double C22768 = C22745 + C22746;
    const double C22765 = C22739 + C22740;
    const double C22763 = C22735 + C22736;
    const double C22761 = C22731 + C22732;
    const double C22759 = C22727 + C22728;
    const double C22948 = C22939 + C22940;
    const double C22946 = C22935 + C22936;
    const double C22943 = C22927 + C22928;
    const double C22941 = C22923 + C22924;
    const double C23724 = C23717 + C23718;
    const double C28243 = C28237 + C28238;
    const double C28241 = C28233 + C28234;
    const double C49904 = C49903 - C49897;
    const double C50064 = C50063 / C49810;
    const double C50137 = C50136 / C49810;
    const double C50118 = C50115 - C50107;
    const double C50154 = C50152 - C50147;
    const double C50054 = C50053 - C50049;
    const double C50130 = C50129 - C50127;
    const double C174 = C160 + C161;
    const double C8251 = C8233 + C8234;
    const double C17422 = C17404 + C17405;
    const double C3489 = C3481 + C3482;
    const double C5510 = C5498 + C5499;
    const double C9224 = C9211 + C9212;
    const double C15186 = C15177 + C15178;
    const double C18395 = C18382 + C18383;
    const double C23726 = C23721 + C23722;
    const double C50117 = C50114 / C49810;
    const double C50587 = C50585 + C50582;
    const double C175 = C162 + C163;
    const double C8249 = C8229 + C8230;
    const double C17420 = C17400 + C17401;
    const double C340 = C325 + C326;
    const double C2502 = C2479 + C2480;
    const double C8247 = C8225 + C8226;
    const double C8443 = C8427 + C8428;
    const double C17418 = C17396 + C17397;
    const double C17614 = C17598 + C17599;
    const double C515 = C499 + C500;
    const double C8634 = C8617 + C8618;
    const double C17805 = C17788 + C17789;
    const double C670 = C660 + C661;
    const double C2498 = C2471 + C2472;
    const double C2684 = C2667 + C2668;
    const double C8437 = C8415 + C8416;
    const double C8811 = C8799 + C8800;
    const double C17608 = C17586 + C17587;
    const double C17982 = C17970 + C17971;
    const double C1621 = C1607 + C1608;
    const double C2866 = C2849 + C2850;
    const double C8630 = C8609 + C8610;
    const double C9979 = C9967 + C9968;
    const double C17801 = C17780 + C17781;
    const double C19150 = C19138 + C19139;
    const double C1047 = C1033 + C1034;
    const double C9225 = C9213 + C9214;
    const double C18396 = C18384 + C18385;
    const double C50187 = C50186 / C49810;
    const double C6592 = C6588 + C6589;
    const double C23226 = C23219 + C23220;
    const double C48270 = C48263 + C48264;
    const double C50510 = C50509 + C50503;
    const double C646 =
        (2 * C50013 + C49881 * C50016 +
         C49873 * (C49873 * C50021 + C50403 * ae) + C49873 * C50403 * ae) /
        C49810;
    const double C878 = (C49874 * (C49873 * C50021 + C50403 * ae)) / C49810;
    const double C124 = 4 * (2 * C50394 + C49881 * C50398) +
                        C49881 * (3 * C50398 + C49881 * C50403);
    const double C302 = C49873 * (3 * C50398 + C49881 * C50403);
    const double C464 = C49874 * (3 * C50398 + C49881 * C50403);
    const double C638 = 2 * C50394 + C49881 * C50398 + C50403 * C50047;
    const double C750 =
        2 * C49873 * C50403 + C49873 * (C50403 + C50008 * C50047);
    const double C867 = C49874 * C49873 * C50403;
    const double C871 = C49874 * (C50403 + C50008 * C50047);
    const double C1003 = 2 * C50394 + C49881 * C50398 + C50403 * C50202;
    const double C1247 =
        2 * C49874 * C50403 + C49874 * (C50403 + C50008 * C50202);
    const double C5508 = C117 * C1163;
    const double C9219 = C8203 * C1163;
    const double C18390 = C17374 * C1163;
    const double C5506 = C117 * C1156;
    const double C9215 = C8203 * C1156;
    const double C18386 = C17374 * C1156;
    const double C3024 =
        (3 * (C50016 + C49873 * C50485 + C50452 * ae) +
         C49873 * (2 * C50485 +
                   C49873 * (C49950 + C49873 * (C49873 * C50029 + C50006 * ae) +
                             C50179 * ae) +
                   C50486 * ae) +
         (2 * C50452 + C49873 * C50486) * ae) /
        C49810;
    const double C3467 =
        (C50016 + C49873 * C50485 + C50452 * ae +
         (C49950 + C49873 * (C49873 * C50029 + C50006 * ae) + C50179 * ae) *
             C50202) /
        C49810;
    const double C4245 =
        (C49874 * (2 * C50485 +
                   C49873 * (C49950 + C49873 * (C49873 * C50029 + C50006 * ae) +
                             C50179 * ae) +
                   C50486 * ae)) /
        C49810;
    const double C7080 =
        (2 * C49874 * C50485 +
         C49874 * (C50485 + (C49873 * C50029 + C50006 * ae) * C50202)) /
        C49810;
    const double C6287 =
        (-3 * (C49874 * C50561 + C49960 + C50559 * ce)) / C49739 +
        C49874 * ((-2 * C50561) / C49739 -
                  (C49874 * (C49874 * (C49874 * C49977 + C50006 * ce) + C49935 +
                             C49874 * C50006 * ce)) /
                      C49739 -
                  (C50562 * ce) / C49739) -
        ((2 * C50559 + C49874 * C50562) * ce) / C49739;
    const double C2685 = C2669 + C2670;
    const double C8812 = C8801 + C8802;
    const double C17983 = C17972 + C17973;
    const double C2867 = C2851 + C2852;
    const double C9980 = C9969 + C9970;
    const double C11531 = C11527 + C11528;
    const double C19151 = C19140 + C19141;
    const double C5698 = C5686 + C5687;
    const double C50172 = C50169 / C49884;
    const double C50594 = C50590 + C49962;
    const double C6466 =
        (-3 * (C49874 * C50577 + C50056 + C50575 * ce)) / C49739 +
        C49874 * ((-2 * C50577) / C49739 -
                  (C49874 * (C49874 * (C49874 * C49873 * C50079 + C50193 * ce) +
                             C50075 + C49874 * C50193 * ce)) /
                      C49739 -
                  (C50578 * ce) / C49739) -
        ((2 * C50575 + C49874 * C50578) * ce) / C49739;
    const double C3034 = C2446 * C3021;
    const double C25374 = C24798 * C3021;
    const double C4259 = C2451 * C3305;
    const double C14393 = C8203 * C3305;
    const double C26535 = C24803 * C3305;
    const double C28239 = C17374 * C3305;
    const double C3483 = C2451 * C3466;
    const double C5856 = C117 * C3466;
    const double C15175 = C8203 * C3466;
    const double C23719 = C17374 * C3466;
    const double C25787 = C24803 * C3466;
    const double C3033 = C2451 * C3017;
    const double C25373 = C24803 * C3017;
    const double C4253 = C2451 * C3299;
    const double C14389 = C8203 * C3299;
    const double C26529 = C24803 * C3299;
    const double C28235 = C17374 * C3299;
    const double C3477 = C2451 * C3461;
    const double C5854 = C117 * C3461;
    const double C15171 = C8203 * C3461;
    const double C23715 = C17374 * C3461;
    const double C25781 = C24803 * C3461;
    const double C50497 = C50018 + C50496;
    const double C6475 = C50890 * C3751;
    const double C14956 = C50942 * C3751;
    const double C22934 = C50942 * C3751;
    const double C6308 = C117 * C6285;
    const double C6306 = C117 * C6280;
    const double C3145 = 4 * (2 * C50446 + C49873 * C50471) +
                         C49873 * (3 * C50471 + C49873 * C50507);
    const double C3300 = C49874 * (3 * C50471 + C49873 * C50507);
    const double C3636 = 2 * C50446 + C49873 * C50471 + C50507 * C50202;
    const double C20940 =
        2 * C49874 * C50507 + C49874 * (C50507 + C50298 * C50202);
    const double C23096 =
        (-3 * (C49874 * C50628 + C50052 + C50626 * ce)) / C49739 +
        C49874 * ((-2 * C50628) / C49739 -
                  (C49874 * (C49874 * (C49874 * C50258 + C50290 * ce) + C50109 +
                             C49874 * C50290 * ce)) /
                      C49739 -
                  (C50629 * ce) / C49739) -
        ((2 * C50626 + C49874 * C50629) * ce) / C49739;
    const double C50295 = C50291 / C49884;
    const double C50638 = C50634 + C50101;
    const double C23221 = C17374 * C6464;
    const double C39880 = C117 * C6464;
    const double C48265 = C8203 * C6464;
    const double C23217 = C17374 * C6461;
    const double C39878 = C117 * C6461;
    const double C48261 = C8203 * C6461;
    const double C6579 = 4 * (2 * C50543 + C49874 * C50546) +
                         C49874 * (3 * C50546 + C49874 * C50586);
    const double C50315 = C50312 + C50313;
    const double C50612 = C50611 + C50604;
    const double C23211 =
        (4 * (2 * C49874 * C50506 + C49874 * C50632) +
         C49874 * (3 * C50632 + C49874 * (2 * C49874 * C50608 +
                                          C49874 * (C50608 + (C49873 * C50027 +
                                                              C50003 * ae) *
                                                                 C50202)))) /
        C49810;
    const double C49918 = C49917 - C49909;
    const double C50093 = C50090 / C49810;
    const double C50171 = C50168 / C49810;
    const double C50268 = C50265 - C50255;
    const double C50300 = C50296 - C50288;
    const double C49980 = C49975 - C49979;
    const double C3023 =
        (-3 * (C49935 * C50047 + C49960)) / C49739 +
        C49873 * ((-2 * C50067) / C49739 - (C49873 * C50072) / C49739);
    const double C3468 = -(C49874 * (C49874 * C50072 + C50486 * ce) +
                           C49935 * C50047 + C49960 + C49874 * C50486 * ce) /
                         C49739;
    const double C4246 =
        C49874 * ((-2 * C50067) / C49739 - (C49873 * C50072) / C49739) -
        ((2 * C50452 + C49873 * C50486) * ce) / C49739;
    const double C50094 = C50091 / C49739;
    const double C50269 = C50262 - C50266;
    const double C50032 = C49881 * C50031;
    const double C755 =
        (2 * (C49873 * C50021 + C50403 * ae) +
         C49873 * (C50021 + C49873 * (C49873 * C50031 + C50008 * ae) +
                   C49873 * C50008 * ae) +
         (C50403 + C50008 * C50047) * ae) /
        C49810;
    const double C886 =
        (C49874 * (C50021 + C49873 * (C49873 * C50031 + C50008 * ae) +
                   C49873 * C50008 * ae)) /
        C49810;
    const double C1164 = (C49873 * C50021 + C50403 * ae +
                          (C49873 * C50031 + C50008 * ae) * C50202) /
                         C49810;
    const double C1254 =
        (2 * C49874 * C50021 + C49874 * (C50021 + C50031 * C50202)) / C49810;
    const double C6286 = (3 * (C50016 + C49950 * C50202) +
                          C49874 * (2 * C50220 + C49874 * C50222)) /
                         C49810;
    const double C50242 = C50240 + C50241;
    const double C50348 = C49874 * C50345;
    const double C1626 = C1620 * C50848;
    const double C1890 = C1620 * C50848;
    const double C5502 = C1620 * C50836;
    const double C7085 = C1620 * C51036;
    const double C7449 = C1620 * C1728;
    const double C14186 = C8628 + C8627;
    const double C14184 = C8627 + C8628;
    const double C5863 = C5859 * C50836;
    const double C15977 = C9978 + C9977;
    const double C15976 = C9977 + C9978;
    const double C1052 = C1046 * C996;
    const double C2008 = C1046 * C1998;
    const double C5343 = C1046 * C50836;
    const double C5677 = C1046 * C51036;
    const double C5675 = C1046 * C50848;
    const double C6303 = C1046 * C994;
    const double C6299 = C1046 * C995;
    const double C7243 = C1046 * C1728;
    const double C7241 = C1046 * C50848;
    const double C7609 = C1046 * C51082;
    const double C7605 = C1046 * C51071;
    const double C5701 = C5697 * C50848;
    const double C6305 = C5697 * C995;
    const double C6301 = C5697 * C996;
    const double C7245 = C5697 * C50848;
    const double C7611 = C5697 * C51071;
    const double C7607 = C5697 * C1998;
    const double C674 = C668 * C118;
    const double C1625 = C1619 * C459;
    const double C1887 = C1619 * C1731;
    const double C5503 = C1619 * C118;
    const double C7086 = C1619 * C458;
    const double C14185 = C8626 + C8625;
    const double C14183 = C8625 + C8626;
    const double C5862 = C5858 * C118;
    const double C15978 = C9976 + C9975;
    const double C15975 = C9975 + C9976;
    const double C1051 = C1045 * C999;
    const double C2007 = C1045 * C2001;
    const double C5342 = C1045 * C118;
    const double C5676 = C1045 * C458;
    const double C5674 = C1045 * C459;
    const double C6302 = C1045 * C997;
    const double C6298 = C1045 * C998;
    const double C7240 = C1045 * C1731;
    const double C5515 = C5511 * C118;
    const double C7090 = C5511 * C458;
    const double C7084 = C5511 * C459;
    const double C7448 = C5511 * C1731;
    const double C14951 = C9222 + C9221;
    const double C14949 = C9221 + C9222;
    const double C5700 = C5696 * C459;
    const double C6304 = C5696 * C998;
    const double C6300 = C5696 * C999;
    const double C7244 = C5696 * C1731;
    const double C7606 = C5696 * C2001;
    const double C48000 = C14963 + C14964;
    const double C47999 = C14961 + C14962;
    const double C6478 = C6470 + C6471;
    const double C15325 = C15317 + C15318;
    const double C22942 = C22925 + C22926;
    const double C23110 = C23103 + C23104;
    const double C37685 = C37674 + C37675;
    const double C48158 = C48151 + C48152;
    const double C188 = C180 + C181;
    const double C511 = C491 + C492;
    const double C191 = C183 + C182;
    const double C189 = C182 + C183;
    const double C514 = C497 + C498;
    const double C356 = C349 + C350;
    const double C11064 = C5347 + C5346;
    const double C11372 = C5684 + C5683;
    const double C137 =
        4 * ((-2 * C49957) / C49739 - (C49881 * C49960) / C49739) +
        C49881 * ((-3 * C49960) / C49739 + C49881 * C49967);
    const double C313 = C49873 * ((-3 * C49960) / C49739 + C49881 * C49967);
    const double C475 = C49874 * ((-3 * C49960) / C49739 + C49881 * C49967) -
                        ((3 * (C49994 + C49992 * C49890) +
                          C49881 * (2 * C49996 + C49881 * C50000)) *
                         ce) /
                            C49739;
    const double C647 =
        (-2 * C49957) / C49739 - (C49881 * C49960) / C49739 + C49967 * C50047;
    const double C879 =
        C49874 * C49873 * C49967 - (C49873 * C50403 * ce) / C49739;
    const double C1012 = (-2 * C49957) / C49739 - (C49881 * C49960) / C49739 +
                         C49874 * (C49874 * C49967 - (C50403 * ce) / C49739) -
                         (C49874 * C50403 * ce) / C49739;
    const double C50092 = C50089 / C49810;
    const double C3148 =
        4 * ((-2 * C50044) / C49739 - (C49873 * C50052) / C49739) +
        C49873 * ((-3 * C50052) / C49739 + C49873 * C50119);
    const double C3307 = C49874 * ((-3 * C50052) / C49739 + C49873 * C50119) -
                         ((3 * C50471 + C49873 * C50507) * ce) / C49739;
    const double C3639 = (-2 * C50044) / C49739 - (C49873 * C50052) / C49739 +
                         C49874 * (C49874 * C50119 - (C50507 * ce) / C49739) -
                         (C49874 * C50507 * ce) / C49739;
    const double C50270 = C50267 - C49909;
    const double C165 = C50890 * C136;
    const double C336 = C50890 * C312;
    const double C8232 = C50942 * C312;
    const double C17403 = C50942 * C312;
    const double C504 = C50890 * C474;
    const double C1042 = C50890 * C1011;
    const double C50198 = C50197 / C49810;
    const double C39955 = C50890 * C6581;
    const double C50320 = C50318 - C49909;
    const double C50409 = C50407 + C50408;
    const double C1157 = C49873 * C50403 + C50455 * C50202;
    const double C3144 = 4 * (2 * C50449 + C49873 * C50478) +
                         C49873 * (3 * C50478 + C49873 * C50495);
    const double C3301 = C49874 * (3 * C50478 + C49873 * C50495);
    const double C3637 = 2 * C50449 + C49873 * C50478 + C50495 * C50202;
    const double C6580 = 4 * (2 * C50551 + C49874 * C50554) +
                         C49874 * (3 * C50554 + C49874 * C50595);
    const double C50609 = C50606 + C50607;
    const double C23210 = 4 * (2 * C50567 + C49874 * C50570) +
                          C49874 * (3 * C50570 + C49874 * C50639);
    const double C50651 = C50646 + C50647;
    const double C108 = (C51078 * C50748) / C49810 + (C51022 - C51061) / C49835;
    const double C109 =
        (C51079 * C50748) / C49810 + (2 * C50758 + C51078) / C49835;
    const double C110 = (C50748 * C50758) / C49814 + C51079 / C49835;
    const double C113 = (C51027 - C51063) / C49747 - (C51080 * C50770) / C49739;
    const double C114 =
        (2 * C50779 + C51080) / C49747 - (C51065 * C50770) / C49739;
    const double C115 = C51065 / C49747 - C50782 / C49768;
    const double C745 = (C51034 - C51066) / C49747 - (C51081 * C50818) / C49739;
    const double C746 =
        (2 * C50822 + C51081) / C49747 - (C51068 * C50818) / C49739;
    const double C747 = C51068 / C49747 - C50825 / C49768;
    const double C39213 =
        (C51085 * C50965) / C49810 + (C51051 - C51075) / C49835;
    const double C39214 =
        (C51086 * C50965) / C49810 + (2 * C50970 + C51085) / C49835;
    const double C39215 = (C50965 * C50970) / C49814 + C51086 / C49835;
    const double C49779 = C49775 * ce;
    const double C1730 = (-C49748 / C49739) / C49747 - (C49775 * de) / C49739;
    const double C24850 = C24823 + C24824;
    const double C24846 = C24815 + C24816;
    const double C24843 = C24809 + C24810;
    const double C25037 = C25021 + C25022;
    const double C25032 = C25011 + C25012;
    const double C25029 = C25005 + C25006;
    const double C25219 = C25203 + C25204;
    const double C25214 = C25193 + C25194;
    const double C25211 = C25187 + C25188;
    const double C31436 = C31427 + C31428;
    const double C31433 = C31421 + C31422;
    const double C49851 = C49849 * ae;
    const double C8258 = C8254 * C50836;
    const double C8608 = C8254 * C51036;
    const double C10130 = C8254 * C1728;
    const double C8257 = C8253 * C118;
    const double C8607 = C8253 * C458;
    const double C17425 = C17414 + C17415;
    const double C17424 = C17412 + C17413;
    const double C28036 = C17799 + C17798;
    const double C28034 = C17798 + C17799;
    const double C28035 = C17797 + C17796;
    const double C28033 = C17796 + C17797;
    const double C22931 = C18393 + C18392;
    const double C28763 = C18392 + C18393;
    const double C29737 = C19149 + C19148;
    const double C29736 = C19148 + C19149;
    const double C29738 = C19147 + C19146;
    const double C29735 = C19146 + C19147;
    const double C22922 = C22336 + C22335;
    const double C22921 = C22334 + C22333;
    const double C145 =
        4 * ((-2 * C49881 * C49893) / C49884 + C49881 * C49904) +
        C49881 * (3 * C49904 + C49881 * ((-2 * C49881 * C49899) / C49884 +
                                         C49881 * ((-(std::pow(C49888, 7) *
                                                      bs[7] * C49879 * C49890) /
                                                    C49739) /
                                                       C49810 -
                                                   C49899 / C49884)));
    const double C316 =
        (((-2 * C49881 * C49924) / C49739 -
          (C49881 * (C49891 * C49889 * C49922 * C49890 + C49924)) / C49739) *
         ae) /
            C49810 +
        C49873 * ((-2 * C49881 * C49893) / C49884 + C49881 * C49904);
    const double C481 =
        C49874 * ((-2 * C49881 * C49893) / C49884 + C49881 * C49904) -
        ((2 * C49881 * C49942 +
          C49881 * (C49942 + C49891 * C49889 * C49939 * C49890)) *
         ce) /
            C49884;
    const double C652 = (-(C49893 * C49890) / C49739) / C49810 -
                        C49886 / C49884 - (ae * C49873 * C49960) / C49884 +
                        C49873 * (C49873 * C49904 - (ae * C49960) / C49884);
    const double C890 =
        C49873 *
            (C49874 * C49904 - ((C49942 + C49945 * C49890) * ce) / C49884) -
        (ae * (C49874 * C49960 +
               (C49953 * C49952 + C49883 * C49882 * C49890) * ce)) /
            C49884;
    const double C1017 = (-(C49893 * C49890) / C49739) / C49810 -
                         C49886 / C49884 - (C49874 * C50016 * ce) / C49884 +
                         C49874 * (C49874 * C49904 - (C50016 * ce) / C49884);
    const double C50065 = C50064 - C50061;
    const double C50138 = C50137 - C50135;
    const double C50121 = C49873 * C50118;
    const double C50245 = 2 * C50118;
    const double C50155 = C49873 * C50154;
    const double C50182 = C49874 * C50154;
    const double C50325 = 2 * C50154;
    const double C3025 =
        3 * ((-(ae * C50044) / C49739) / C49810 - C49886 / C49884 +
             C49873 * C50054) +
        (((-2 * C50044) / C49739 - (C49873 * C50052) / C49739) * ae) / C49810 +
        C49873 *
            (2 * C50054 - (ae * C50052) / C49884 +
             C49873 * ((-(ae * C49873 * C49930) / C49739) / C49810 - C49897 +
                       C49873 * ((-(C49873 * C49899) / C49739) / C49810 -
                                 (ae * C49930) / C49884)));
    const double C3310 =
        2 * (C49873 * C50130 -
             (ae * (C49874 * C49924 + C49994 * ce)) / C49884) -
        (ae * (C49874 * C50052 + (C49994 + C49992 * C50047) * ce)) / C49884 +
        C49873 *
            (C50130 - (ae * (C49874 * C50101 + C49873 * C49992 * ce)) / C49884 +
             C49873 * (C49873 * ((-(C49874 * C49899) / C49739) / C49810 -
                                 (C49945 * ce) / C49884) -
                       (ae * (C49874 * C49930 + C49992 * ce)) / C49884));
    const double C3469 =
        (-(C49874 * C49942 * ce) / C49739) / C49810 - C49886 / C49884 +
        C49874 * C50130 -
        (ae * (C49874 * (C49874 * C50101 + C50140 * ce) + C50044 +
               C49874 * C50140 * ce)) /
            C49884 +
        C49873 *
            (C49873 * ((-(C49874 * C49945 * ce) / C49739) / C49810 - C49897 +
                       C49874 * C50154) -
             (ae * (C49874 * C50148 + C49924 + C49874 * C49992 * ce)) / C49884);
    const double C184 = C174 * C50836;
    const double C505 = C174 * C51036;
    const double C1746 = C174 * C1728;
    const double C5514 = C5510 * C50836;
    const double C7089 = C5510 * C51036;
    const double C7087 = C5510 * C50848;
    const double C7453 = C5510 * C1728;
    const double C7451 = C5510 * C50848;
    const double C14952 = C9224 + C9223;
    const double C14950 = C9223 + C9224;
    const double C22932 = C18395 + C18394;
    const double C28764 = C18394 + C18395;
    const double C50120 = C50117 - C49897;
    const double C185 = C175 * C118;
    const double C506 = C175 * C458;
    const double C348 = C340 * C118;
    const double C1616 = C340 * C458;
    const double C8256 = C8247 + C8248;
    const double C17427 = C17418 + C17419;
    const double C523 = C515 * C459;
    const double C1039 = C515 * C998;
    const double C1743 = C515 * C1731;
    const double C5348 = C515 * C118;
    const double C11375 = C515 * C458;
    const double C676 = C670 * C118;
    const double C8448 = C8437 + C8438;
    const double C17619 = C17608 + C17609;
    const double C1627 = C1621 * C459;
    const double C1891 = C1621 * C1731;
    const double C5504 = C1621 * C118;
    const double C12663 = C1621 * C458;
    const double C8638 = C8630 + C8631;
    const double C14187 = C8631 + C8630;
    const double C17809 = C17801 + C17802;
    const double C28037 = C17802 + C17801;
    const double C1053 = C1047 * C999;
    const double C2013 = C1047 * C2001;
    const double C5345 = C1047 * C118;
    const double C5689 = C1047 * C458;
    const double C5682 = C1047 * C459;
    const double C7246 = C1047 * C1731;
    const double C11927 = C1047 * C998;
    const double C50188 = C50187 - C49897;
    const double C3149 =
        (4 * (2 * C50470 + C49873 * C50510 + C50471 * ae) +
         C49873 *
             (3 * C50510 +
              C49873 *
                  (2 * C50506 +
                   C49873 * (C49945 + C49873 * (C49873 * C49948 + C49998 * ae) +
                             C50183 * ae) +
                   C50149 * ae) +
              C50507 * ae) +
         (3 * C50471 + C49873 * C50507) * ae) /
        C49810;
    const double C3302 =
        (C49874 * (2 * C50470 + C49873 * C50510 + C50471 * ae)) / C49810;
    const double C3306 =
        (C49874 *
         (3 * C50510 +
          C49873 *
              (2 * C50506 +
               C49873 * (C49945 + C49873 * (C49873 * C49948 + C49998 * ae) +
                         C50183 * ae) +
               C50149 * ae) +
          C50507 * ae)) /
        C49810;
    const double C3463 =
        (C50011 + C49873 * C50470 + C50446 * ae + C50510 * C50202) / C49810;
    const double C3638 =
        (2 * C50470 + C49873 * C50510 + C50471 * ae +
         (2 * C50506 +
          C49873 * (C49945 + C49873 * (C49873 * C49948 + C49998 * ae) +
                    C50183 * ae) +
          C50149 * ae) *
             C50202) /
        C49810;
    const double C3746 =
        (2 * C49874 * C50510 +
         C49874 * (C50510 + (C49945 + C49873 * (C49873 * C49948 + C49998 * ae) +
                             C50183 * ae) *
                                C50202)) /
        C49810;
    const double C665 = C50890 * C646;
    const double C2482 = C2446 * C646;
    const double C8430 = C50942 * C646;
    const double C17601 = C50942 * C646;
    const double C24834 = C24798 * C646;
    const double C1614 = C50890 * C878;
    const double C8620 = C50942 * C878;
    const double C17791 = C50942 * C878;
    const double C164 = C117 * C124;
    const double C335 = C117 * C302;
    const double C8231 = C8203 * C302;
    const double C17402 = C17374 * C302;
    const double C503 = C117 * C464;
    const double C664 = C117 * C638;
    const double C2481 = C2451 * C638;
    const double C8429 = C8203 * C638;
    const double C17600 = C17374 * C638;
    const double C24833 = C24803 * C638;
    const double C1613 = C117 * C867;
    const double C8619 = C8203 * C867;
    const double C17790 = C17374 * C867;
    const double C1041 = C117 * C1003;
    const double C5512 = C5506 + C5507;
    const double C9226 = C9215 + C9216;
    const double C18397 = C18386 + C18387;
    const double C11533 = C11531 * C118;
    const double C5702 = C5698 * C459;
    const double C7250 = C5698 * C1731;
    const double C11929 = C5698 * C999;
    const double C13169 = C5698 * C2001;
    const double C50596 = C50594 + C50591;
    const double C3043 = C3033 + C3034;
    const double C25383 = C25373 + C25374;
    const double C50498 = C50497 + C50491;
    const double C6480 = C6474 + C6475;
    const double C14966 = C14955 + C14956;
    const double C22945 = C22933 + C22934;
    const double C6312 = C6306 + C6307;
    const double C31841 = C24803 * C3300;
    const double C37222 = C2451 * C3300;
    const double C22751 = C17374 * C3636;
    const double C32175 = C24803 * C3636;
    const double C37556 = C2451 * C3636;
    const double C47841 = C8203 * C3636;
    const double C50299 = C50154 - C50295;
    const double C50640 = C50638 + C50635;
    const double C23225 = C23217 + C23218;
    const double C39882 = C39878 + C39879;
    const double C48269 = C48261 + C48262;
    const double C39954 = C117 * C6579;
    const double C50317 = ae * C50315;
    const double C50644 = C49874 * C50315;
    const double C6582 =
        4 * ((-2 * C50545) / C49739 - (C49874 * C50587) / C49739 -
             (C50546 * ce) / C49739) +
        C49874 *
            ((-3 * C50587) / C49739 +
             C49874 * ((-2 * C50148) / C49739 - (C49874 * C50315) / C49739 -
                       (C50227 * ce) / C49739) -
             (C50586 * ce) / C49739) -
        ((3 * C50546 + C49874 * C50586) * ce) / C49739;
    const double C50613 = C49873 * C50612;
    const double C23095 =
        (3 * (C50510 + C50612 * C50202) +
         C49874 *
             (2 * C49874 * C50612 +
              C49874 *
                  (C50612 + (C49948 + C49873 * (C49873 * C50027 + C50003 * ae) +
                             C50310 * ae) *
                                C50202))) /
        C49810;
    const double C49919 = C49881 * C49918;
    const double C50068 = C49873 * C49918;
    const double C50207 = C49874 * C49918;
    const double C763 =
        2 * (C49873 * C49904 - (ae * C49960) / C49884) -
        (ae * (C49935 * std::pow(C49873, 2) + C49960)) / C49884 +
        C49873 * (C49904 - (ae * C49873 * C49935) / C49884 +
                  C49873 * (C49873 * C49918 - (ae * C49935) / C49884));
    const double C894 =
        C49874 * C49904 - ((C49942 + C49945 * C49890) * ce) / C49884 -
        (ae * (C49874 * C49873 * C49935 + C49873 * C50000 * ce)) / C49884 +
        C49873 * (C49873 * (C49874 * C49918 - (C49950 * ce) / C49884) -
                  (ae * (C49874 * C49935 + C50000 * ce)) / C49884);
    const double C1168 =
        C49873 * (C49904 - (C49874 * C49950 * ce) / C49884 +
                  C49874 * (C49874 * C49918 - (C49950 * ce) / C49884)) -
        (ae * (C49874 * (C49874 * C49935 + C50000 * ce) + C49960 +
               C49874 * C50000 * ce)) /
            C49884;
    const double C1258 =
        2 * (C49874 * C49904 - (C50016 * ce) / C49884) -
        ((C50016 + C49950 * std::pow(C49874, 2)) * ce) / C49884 +
        C49874 * (C49904 - (C49874 * C49950 * ce) / C49884 +
                  C49874 * (C49874 * C49918 - (C49950 * ce) / C49884));
    const double C3471 =
        C49904 - (C49874 * C49950 * ce) / C49884 +
        C49874 * (C49874 * C49918 - (C49950 * ce) / C49884) -
        (ae * (C49874 * (C49874 * C49873 * C49977 + C50179 * ce) + C50067 +
               C49874 * C50179 * ce)) /
            C49884 +
        C49873 * (C49873 * (C49918 - (C49874 * C50029 * ce) / C49884 +
                            C49874 * (C49874 * ((-(std::pow(C49877, 8) * bs[8] *
                                                   C49879 * C49890) /
                                                 C49739) /
                                                    C49810 -
                                                C49913 / C49884) -
                                      (C50029 * ce) / C49884)) -
                  (ae * (C49874 * (C49874 * C49977 + C50006 * ce) + C49935 +
                         C49874 * C50006 * ce)) /
                      C49884);
    const double C50096 = C50093 - C50082;
    const double C50173 = C50171 - C50165;
    const double C50271 = C49873 * C50268;
    const double C50301 = C49873 * C50300;
    const double C50307 = C49874 * C50300;
    const double C49981 = C49881 * C49980;
    const double C754 =
        2 * C49873 * C49967 + C49873 * (C49967 + C49980 * C50047);
    const double C887 = C49874 * (C49967 + C49980 * C50047) -
                        ((C50403 + C50008 * C50047) * ce) / C49739;
    const double C1165 =
        C49873 * C49967 +
        C49874 * (C49874 * C49873 * C49980 - (C50455 * ce) / C49739) -
        (C49874 * C50455 * ce) / C49739;
    const double C1255 =
        2 * (C49874 * C49967 - (C50403 * ce) / C49739) +
        C49874 * (C49967 + C49874 * (C49874 * C49980 - (C50008 * ce) / C49739) -
                  (C49874 * C50008 * ce) / C49739) -
        ((C50403 + C50008 * C50202) * ce) / C49739;
    const double C50097 = C50087 - C50094;
    const double C50272 = C49873 * C50269;
    const double C20942 =
        2 * (C49874 * C50119 - (C50507 * ce) / C49739) +
        C49874 * (C50119 + C49874 * (C49874 * C50269 - (C50298 * ce) / C49739) -
                  (C49874 * C50298 * ce) / C49739) -
        ((C50507 + C50298 * C50202) * ce) / C49739;
    const double C50033 = C50023 + C50032;
    const double C6583 = (4 * (2 * C50216 + C49874 * C50218) +
                          C49874 * (3 * C50218 + C49874 * C50242)) /
                         C49810;
    const double C50349 = C50347 + C50348;
    const double C48259 = C15325 + C15326;
    const double C23215 = C22942 + C22941;
    const double C192 = C188 * C50906;
    const double C11063 = C188 * C51051;
    const double C33867 = C188 * C33864;
    const double C527 = C511 - C521;
    const double C195 = C191 * C50906;
    const double C11066 = C191 * C51051;
    const double C33870 = C191 * C33864;
    const double C193 = C189 * C50906;
    const double C358 = C356 * C50906;
    const double C11220 = C356 * C51051;
    const double C34020 = C356 * C33864;
    const double C11069 = C11064 * C50970;
    const double C33868 = C11064 * C50970;
    const double C166 = C117 * C137;
    const double C337 = C117 * C313;
    const double C8235 = C8203 * C313;
    const double C17406 = C17374 * C313;
    const double C507 = C117 * C475;
    const double C666 = C117 * C647;
    const double C2487 = C2451 * C647;
    const double C8433 = C8203 * C647;
    const double C17604 = C17374 * C647;
    const double C24839 = C24803 * C647;
    const double C1617 = C117 * C879;
    const double C8623 = C8203 * C879;
    const double C17794 = C17374 * C879;
    const double C1043 = C117 * C1012;
    const double C50095 = C50092 - C50076;
    const double C31847 = C24803 * C3307;
    const double C37228 = C2451 * C3307;
    const double C22755 = C17374 * C3639;
    const double C32181 = C24803 * C3639;
    const double C37562 = C2451 * C3639;
    const double C47845 = C8203 * C3639;
    const double C50199 = C50198 - C50076;
    const double C125 = 5 * (3 * C50398 + C49881 * C50403) +
                        C49881 * (4 * C50403 + C49881 * C50409);
    const double C303 = C49873 * (4 * C50403 + C49881 * C50409);
    const double C465 = C49874 * (4 * C50403 + C49881 * C50409);
    const double C639 = 3 * C50398 + C49881 * C50403 + C50409 * C50047;
    const double C1004 = 3 * C50398 + C49881 * C50403 + C50409 * C50202;
    const double C1596 = C49874 * C49873 * C50409;
    const double C20568 = 5 * (3 * C50471 + C49873 * C50507) +
                          C49873 * (4 * C50507 + C49873 * C50609);
    const double C20670 = C49874 * (4 * C50507 + C49873 * C50609);
    const double C20870 = 3 * C50471 + C49873 * C50507 + C50609 * C50202;
    const double C39949 = 5 * (3 * C50546 + C49874 * C50586) +
                          C49874 * (4 * C50586 + C49874 * C50651);
    const double C49781 = C49779 / C49739;
    const double C1747 = C175 * C1730;
    const double C1741 = C172 * C1730;
    const double C1737 = C170 * C1730;
    const double C1733 = C168 * C1730;
    const double C1897 = C340 * C1730;
    const double C1893 = C342 * C1730;
    const double C1889 = C344 * C1730;
    const double C7252 = C1047 * C1730;
    const double C7248 = C512 * C1730;
    const double C7242 = C1045 * C1730;
    const double C7238 = C509 * C1730;
    const double C7454 = C5511 * C1730;
    const double C7450 = C1619 * C1730;
    const double C10129 = C8253 * C1730;
    const double C12815 = C515 * C1730;
    const double C13017 = C1621 * C1730;
    const double C49853 = C49851 / C49810;
    const double C8261 = C8257 + C8258;
    const double C8629 = C8607 + C8608;
    const double C17429 = C17425 * C50836;
    const double C17779 = C17425 * C51036;
    const double C19301 = C17425 * C1728;
    const double C17428 = C17424 * C118;
    const double C17778 = C17424 * C458;
    const double C19300 = C17424 * C1730;
    const double C167 = C50890 * C145;
    const double C324 = C50890 * C316;
    const double C2486 = C2445 * C316;
    const double C8222 = C50942 * C316;
    const double C8432 = C51050 * C316;
    const double C17393 = C50942 * C316;
    const double C17603 = C17368 * C316;
    const double C24838 = C51084 * C316;
    const double C502 = C50890 * C481;
    const double C8622 = C51050 * C481;
    const double C17793 = C17368 * C481;
    const double C663 = C50890 * C652;
    const double C2466 = C2446 * C652;
    const double C2674 = C2445 * C652;
    const double C8412 = C50942 * C652;
    const double C8804 = C51050 * C652;
    const double C17583 = C50942 * C652;
    const double C17975 = C17368 * C652;
    const double C24818 = C24798 * C652;
    const double C25026 = C51084 * C652;
    const double C1612 = C50890 * C890;
    const double C2856 = C2445 * C890;
    const double C8614 = C50942 * C890;
    const double C9972 = C51050 * C890;
    const double C17785 = C50942 * C890;
    const double C19143 = C17368 * C890;
    const double C25208 = C51084 * C890;
    const double C1036 = C50890 * C1017;
    const double C9218 = C51050 * C1017;
    const double C18389 = C17368 * C1017;
    const double C3026 =
        3 * ((-(ae * C50056) / C49739) / C49810 - C49986 / C49884 +
             C49873 * C50065) +
        (((-2 * C50056) / C49739 - (C49873 * C50062) / C49739) * ae) / C49810 +
        C49873 * (2 * C50065 - (ae * C50062) / C49884 +
                  C49873 * ((-(ae * C49873 * C49970) / C49739) / C49810 -
                            C49906 / C49884 +
                            C49873 * ((-(C49873 * C49881 * C49913) / C49739) /
                                          C49810 -
                                      (ae * C49970) / C49884)));
    const double C3311 =
        2 * (C49873 * C50138 -
             (ae * (C49874 * C49962 + C49996 * ce)) / C49884) -
        (ae * (C49874 * C50062 + (C49996 + C50002 * C50047) * ce)) / C49884 +
        C49873 *
            (C50138 - (ae * (C49874 * C50075 + C49873 * C50002 * ce)) / C49884 +
             C49873 * (C49873 * ((-(C49874 * C50077) / C49739) / C49810 -
                                 (C50024 * ce) / C49884) -
                       (ae * (C49874 * C49970 + C50002 * ce)) / C49884));
    const double C50259 = C50245 - C50252;
    const double C50156 = C50155 - C50153;
    const double C50329 = C50325 - C50328;
    const double C14736 = C50942 * C3310;
    const double C22748 = C50942 * C3310;
    const double C31850 = C51084 * C3310;
    const double C31840 = C24798 * C3310;
    const double C37231 = C2445 * C3310;
    const double C37221 = C2446 * C3310;
    const double C6125 = C50890 * C3469;
    const double C15168 = C50942 * C3469;
    const double C22758 = C17368 * C3469;
    const double C22742 = C50942 * C3469;
    const double C32022 = C24798 * C3469;
    const double C32184 = C51084 * C3469;
    const double C37403 = C2446 * C3469;
    const double C37565 = C2445 * C3469;
    const double C47848 = C51050 * C3469;
    const double C50122 = C50120 + C50121;
    const double C190 = C184 + C185;
    const double C8260 = C8256 * C118;
    const double C17431 = C17427 * C118;
    const double C528 = C514 - C523;
    const double C8450 = C8448 * C118;
    const double C17621 = C17619 * C118;
    const double C8640 = C8638 * C459;
    const double C10131 = C8638 * C1731;
    const double C17811 = C17809 * C459;
    const double C19302 = C17809 * C1731;
    const double C11377 = C11372 - C5682;
    const double C50189 = C50188 + C50182;
    const double C14732 = C50942 * C3302;
    const double C22744 = C50942 * C3302;
    const double C31844 = C51084 * C3302;
    const double C31834 = C24798 * C3302;
    const double C37225 = C2445 * C3302;
    const double C37215 = C2446 * C3302;
    const double C31842 = C24798 * C3306;
    const double C37223 = C2446 * C3306;
    const double C6123 = C50890 * C3463;
    const double C15164 = C50942 * C3463;
    const double C22754 = C17368 * C3463;
    const double C22738 = C50942 * C3463;
    const double C32016 = C24798 * C3463;
    const double C32178 = C51084 * C3463;
    const double C37397 = C2446 * C3463;
    const double C37559 = C2445 * C3463;
    const double C47844 = C51050 * C3463;
    const double C22752 = C50942 * C3638;
    const double C32176 = C24798 * C3638;
    const double C37557 = C2446 * C3638;
    const double C47842 = C50942 * C3638;
    const double C23102 = C50942 * C3746;
    const double C32292 = C24798 * C3746;
    const double C37673 = C2446 * C3746;
    const double C39677 = C50890 * C3746;
    const double C48150 = C50942 * C3746;
    const double C176 = C164 + C165;
    const double C345 = C335 + C336;
    const double C8250 = C8231 + C8232;
    const double C17421 = C17402 + C17403;
    const double C517 = C503 + C504;
    const double C672 = C664 + C665;
    const double C2503 = C2481 + C2482;
    const double C8444 = C8429 + C8430;
    const double C17615 = C17600 + C17601;
    const double C24855 = C24833 + C24834;
    const double C1623 = C1613 + C1614;
    const double C8635 = C8619 + C8620;
    const double C17806 = C17790 + C17791;
    const double C1049 = C1041 + C1042;
    const double C5516 = C5512 * C118;
    const double C12661 = C5512 * C459;
    const double C13015 = C5512 * C1731;
    const double C6584 =
        4 * ((-2 * C50553) / C49739 - (C49874 * C50596) / C49739 -
             (C50554 * ce) / C49739) +
        C49874 *
            ((-3 * C50596) / C49739 +
             C49874 * ((-2 * C50166) / C49739 -
                       (C49874 * (C49874 * (C49874 * C50079 + C50163 * ce) +
                                  C49970 + C49874 * C50163 * ce)) /
                           C49739 -
                       (C50233 * ce) / C49739) -
             (C50595 * ce) / C49739) -
        ((3 * C50554 + C49874 * C50595) * ce) / C49739;
    const double C3147 =
        (4 * (2 * C50477 + C49873 * C50498 + C50478 * ae) +
         C49873 *
             (3 * C50498 +
              C49873 *
                  (2 * C50494 +
                   C49873 * (C50024 + C49873 * (C49873 * C50194 + C50163 * ae) +
                             C50193 * ae) +
                   C50170 * ae) +
              C50495 * ae) +
         (3 * C50478 + C49873 * C50495) * ae) /
        C49810;
    const double C3304 =
        (C49874 * (2 * C50477 + C49873 * C50498 + C50478 * ae)) / C49810;
    const double C3308 =
        (C49874 *
         (3 * C50498 +
          C49873 *
              (2 * C50494 +
               C49873 * (C50024 + C49873 * (C49873 * C50194 + C50163 * ae) +
                         C50193 * ae) +
               C50170 * ae) +
          C50495 * ae)) /
        C49810;
    const double C3465 =
        (C50013 + C49873 * C50477 + C50449 * ae + C50498 * C50202) / C49810;
    const double C3640 =
        (2 * C50477 + C49873 * C50498 + C50478 * ae +
         (2 * C50494 +
          C49873 * (C50024 + C49873 * (C49873 * C50194 + C50163 * ae) +
                    C50193 * ae) +
          C50170 * ae) *
             C50202) /
        C49810;
    const double C3750 =
        (2 * C49874 * C50498 +
         C49874 * (C50498 + (C50024 + C49873 * (C49873 * C50194 + C50163 * ae) +
                             C50193 * ae) *
                                C50202)) /
        C49810;
    const double C7088 = C6480 * C459;
    const double C7452 = C6480 * C1731;
    const double C6314 = C6312 * C999;
    const double C7612 = C6312 * C2001;
    const double C23212 =
        4 * ((-2 * C50569) / C49739 - (C49874 * C50640) / C49739 -
             (C50570 * ce) / C49739) +
        C49874 *
            ((-3 * C50640) / C49739 +
             C49874 *
                 ((-2 * C50286) / C49739 -
                  (C49874 * (C49874 * (C49874 * C49873 * C49974 + C50310 * ce) +
                             C50247 + C49874 * C50310 * ce)) /
                      C49739 -
                  (C50336 * ce) / C49739) -
             (C50639 * ce) / C49739) -
        ((3 * C50570 + C49874 * C50639) * ce) / C49739;
    const double C39958 = C39954 + C39955;
    const double C50319 = C50317 / C49884;
    const double C50649 = C50644 / C49739;
    const double C39956 = C117 * C6582;
    const double C50614 = C50601 + C50613;
    const double C49920 = C49912 + C49919;
    const double C50073 = C50068 - C50071;
    const double C50210 = C50207 - C50209;
    const double C2676 = C2446 * C763;
    const double C8806 = C50942 * C763;
    const double C17977 = C50942 * C763;
    const double C25028 = C24798 * C763;
    const double C2858 = C2446 * C894;
    const double C9974 = C50942 * C894;
    const double C11530 = C50890 * C894;
    const double C19145 = C50942 * C894;
    const double C25210 = C24798 * C894;
    const double C5509 = C50890 * C1168;
    const double C9220 = C50942 * C1168;
    const double C18391 = C50942 * C1168;
    const double C5691 = C50890 * C1258;
    const double C50098 = C49873 * C50096;
    const double C50174 = C49873 * C50173;
    const double C50192 = C49874 * C50173;
    const double C3470 =
        (-(C49874 * C50018 * ce) / C49739) / C49810 - C49986 / C49884 +
        C49874 * C50138 -
        (ae * (C49874 * (C49874 * C50075 + C50158 * ce) + C50056 +
               C49874 * C50158 * ce)) /
            C49884 +
        C49873 *
            (C49873 * ((-(C49874 * C50024 * ce) / C49739) / C49810 - C50076 +
                       C49874 * C50173) -
             (ae * (C49874 * C50166 + C49962 + C49874 * C50002 * ce)) / C49884);
    const double C50273 = C50270 + C50271;
    const double C50302 = C50301 - C50297;
    const double C50321 = C50320 + C50307;
    const double C49982 = C49972 + C49981;
    const double C3146 =
        4 * ((-2 * C50056) / C49739 - (C49873 * C50062) / C49739) +
        C49873 * ((-3 * C50062) / C49739 + C49873 * C50097);
    const double C3309 = C49874 * ((-3 * C50062) / C49739 + C49873 * C50097) -
                         ((3 * C50478 + C49873 * C50495) * ce) / C49739;
    const double C3641 = (-2 * C50056) / C49739 - (C49873 * C50062) / C49739 +
                         C49874 * (C49874 * C50097 - (C50495 * ce) / C49739) -
                         (C49874 * C50495 * ce) / C49739;
    const double C50274 = C50256 + C50272;
    const double C139 = (5 * (3 * C50016 + C49881 * C50021) +
                         C49881 * (4 * C50021 + C49881 * C50033)) /
                        C49810;
    const double C315 = (C49873 * (4 * C50021 + C49881 * C50033) +
                         (4 * (2 * C49996 + C49881 * C50000) +
                          C49881 * (3 * C50000 + C49881 * C50008)) *
                             ae) /
                        C49810;
    const double C476 = (C49874 * (4 * C50021 + C49881 * C50033)) / C49810;
    const double C649 =
        (3 * C50016 + C49881 * C50021 +
         C49873 * (C49873 * C50033 + C50409 * ae) + C49873 * C50409 * ae) /
        C49810;
    const double C1013 =
        (3 * C50016 + C49881 * C50021 + C50033 * C50202) / C49810;
    const double C1597 = (C49874 * (C49873 * C50033 + C50409 * ae)) / C49810;
    const double C39950 = (5 * (3 * C50214 + C49874 * C50238) +
                           C49874 * (4 * C50238 + C49874 * C50349)) /
                          C49810;
    const double C529 = C527 - C522;
    const double C11071 = C11063 + C11069;
    const double C33871 = C33867 + C33868;
    const double C49783 = C49781 - C49776;
    const double C1750 = C1741 + C1742;
    const double C1749 = C1737 + C1738;
    const double C12812 = C7248 + C7247;
    const double C10133 = C10129 + C10130;
    const double C49854 = C49853 - C49838;
    const double C8263 = C8261 * C50906;
    const double C17432 = C17428 + C17429;
    const double C17800 = C17778 + C17779;
    const double C19304 = C19300 + C19301;
    const double C177 = C166 + C167;
    const double C339 = C323 + C324;
    const double C2505 = C2485 + C2486;
    const double C8245 = C8221 + C8222;
    const double C8445 = C8431 + C8432;
    const double C17416 = C17392 + C17393;
    const double C17616 = C17602 + C17603;
    const double C516 = C501 + C502;
    const double C8636 = C8621 + C8622;
    const double C17807 = C17792 + C17793;
    const double C671 = C662 + C663;
    const double C2495 = C2465 + C2466;
    const double C2687 = C2673 + C2674;
    const double C8435 = C8411 + C8412;
    const double C8813 = C8803 + C8804;
    const double C17606 = C17582 + C17583;
    const double C17984 = C17974 + C17975;
    const double C24847 = C24817 + C24818;
    const double C1622 = C1611 + C1612;
    const double C2869 = C2855 + C2856;
    const double C8632 = C8613 + C8614;
    const double C9981 = C9971 + C9972;
    const double C17803 = C17784 + C17785;
    const double C19152 = C19142 + C19143;
    const double C1048 = C1035 + C1036;
    const double C9227 = C9217 + C9218;
    const double C18398 = C18388 + C18389;
    const double C3040 = C2446 * C3026;
    const double C25380 = C24798 * C3026;
    const double C4260 = C2446 * C3311;
    const double C14394 = C50942 * C3311;
    const double C26536 = C24798 * C3311;
    const double C28240 = C50942 * C3311;
    const double C3312 =
        3 * (C50130 - (ae * (C49874 * C50101 + C50140 * ce)) / C49884 +
             C49873 * C50156) +
        ((C49874 * C50119 - ((2 * C50140 + C49873 * C50149) * ce) / C49739) *
         ae) /
            C49810 +
        C49873 *
            (2 * C50156 - (ae * (C49874 * C50109 + C50149 * ce)) / C49884 +
             C49873 *
                 (C50154 -
                  (ae * (C49874 * C49873 * C49933 + C49873 * C49998 * ce)) /
                      C49884 +
                  C49873 * (C49873 * ((-(C49874 * C49913) / C49739) / C49810 -
                                      (C49948 * ce) / C49884) -
                            (ae * (C49874 * C49933 + C49998 * ce)) / C49884)));
    const double C14745 = C14735 + C14736;
    const double C22769 = C22747 + C22748;
    const double C31858 = C31839 + C31840;
    const double C37244 = C37230 + C37231;
    const double C37239 = C37220 + C37221;
    const double C6133 = C6124 + C6125;
    const double C15181 = C15167 + C15168;
    const double C22774 = C22757 + C22758;
    const double C22766 = C22741 + C22742;
    const double C32028 = C32021 + C32022;
    const double C37409 = C37402 + C37403;
    const double C37572 = C37564 + C37565;
    const double C47852 = C47847 + C47848;
    const double C3151 =
        4 * (2 * C50054 - (ae * C50052) / C49884 + C49873 * C50122) +
        (((-3 * C50052) / C49739 + C49873 * C50119) * ae) / C49810 +
        C49873 *
            (3 * C50122 + (C50119 * ae) / C49810 +
             C49873 *
                 (2 * C50118 - (ae * C50109) / C49884 +
                  C49873 *
                      ((-(ae * C49873 * C49933) / C49739) / C49810 - C49909 +
                       C49873 * ((-(C49873 * C49913) / C49739) / C49810 -
                                 (ae * C49933) / C49884))));
    const double C194 = C190 * C50906;
    const double C8642 = C8629 - C8640;
    const double C3642 =
        2 * (C49873 * C50189 -
             (ae * (C49874 * C50148 + C49924 + C49874 * C49992 * ce)) /
                 C49884) -
        (ae * (C49874 * (C49874 * C50109 + C50149 * ce) + C50052 +
               C49874 * C50149 * ce)) /
            C49884 +
        C49873 *
            (C50189 -
             (ae * (C49874 * (C49874 * C49873 * C49933 + C50183 * ce) + C50101 +
                    C49874 * C50183 * ce)) /
                 C49884 +
             C49873 *
                 (C49873 *
                      ((-(C49874 * C49948 * ce) / C49739) / C49810 - C49909 +
                       C49874 * ((-(C49874 * C49913) / C49739) / C49810 -
                                 (C49948 * ce) / C49884)) -
                  (ae * (C49874 * (C49874 * C49933 + C49998 * ce) + C49930 +
                         C49874 * C49998 * ce)) /
                      C49884));
    const double C3754 =
        2 * C50130 - ((C49942 + C49945 * C50202) * ce) / C49884 +
        C49874 * C50189 +
        (((-2 * (C49874 * C50101 + C50140 * ce)) / C49739 -
          (C49874 * (C49874 * (C49874 * C49873 * C49933 + C50183 * ce) +
                     C50101 + C49874 * C50183 * ce)) /
              C49739 -
          ((C50140 + C50183 * C50202) * ce) / C49739) *
         ae) /
            C49810 +
        C49873 *
            ((((-2 * C50148) / C49739 -
               (C49874 * (C49874 * (C49874 * C49933 + C49998 * ce) + C49930 +
                          C49874 * C49998 * ce)) /
                   C49739 -
               ((C49992 + C49998 * C50202) * ce) / C49739) *
              ae) /
                 C49810 +
             C49873 *
                 (2 * C50154 - ((C49945 + C49948 * C50202) * ce) / C49884 +
                  C49874 *
                      ((-(C49874 * C49948 * ce) / C49739) / C49810 - C49909 +
                       C49874 * ((-(C49874 * C49913) / C49739) / C49810 -
                                 (C49948 * ce) / C49884))));
    const double C3755 =
        (((-2 * (C49874 * C49924 + C49994 * ce)) / C49739 -
          (C49874 * (C49874 * C50148 + C49924 + C49874 * C49992 * ce)) /
              C49739 -
          ((C49994 + C49992 * C50202) * ce) / C49739) *
         ae) /
            C49810 +
        C49873 * (2 * C50130 - ((C49942 + C49945 * C50202) * ce) / C49884 +
                  C49874 * C50189);
    const double C6288 =
        3 * ((-(C50212 * ce) / C49739) / C49810 - C49886 / C49884 +
             C49874 * C50130) -
        ((2 * C50212 + C49874 * C50214) * ce) / C49884 +
        C49874 * (2 * C50130 - (C50214 * ce) / C49884 + C49874 * C50189);
    const double C6467 =
        (((-3 * (C49874 * C50148 + C49924 + C50224 * ce)) / C49739 +
          C49874 * ((-2 * C50148) / C49739 -
                    (C49874 * (C49874 * (C49874 * C49933 + C49998 * ce) +
                               C49930 + C49874 * C49998 * ce)) /
                        C49739 -
                    (C50227 * ce) / C49739) -
          ((2 * C50224 + C49874 * C50227) * ce) / C49739) *
         ae) /
            C49810 +
        C49873 *
            (3 * C50189 - ((2 * C50181 + C49874 * C50228) * ce) / C49884 +
             C49874 *
                 (2 * C50154 - (C50228 * ce) / C49884 +
                  C49874 *
                      ((-(C49874 * C49948 * ce) / C49739) / C49810 - C49909 +
                       C49874 * ((-(C49874 * C49913) / C49739) / C49810 -
                                 (C49948 * ce) / C49884))));
    const double C6585 =
        4 * (2 * C50130 - (C50214 * ce) / C49884 + C49874 * C50189) -
        ((3 * C50214 + C49874 * C50238) * ce) / C49884 +
        C49874 *
            (3 * C50189 - (C50238 * ce) / C49884 +
             C49874 *
                 (2 * C50154 - (C50228 * ce) / C49884 +
                  C49874 *
                      ((-(C49874 * C49948 * ce) / C49739) / C49810 - C49909 +
                       C49874 * ((-(C49874 * C49913) / C49739) / C49810 -
                                 (C49948 * ce) / C49884))));
    const double C14743 = C14731 + C14732;
    const double C22767 = C22743 + C22744;
    const double C31855 = C31833 + C31834;
    const double C37241 = C37224 + C37225;
    const double C37236 = C37214 + C37215;
    const double C31859 = C31841 + C31842;
    const double C37240 = C37222 + C37223;
    const double C6132 = C6122 + C6123;
    const double C15179 = C15163 + C15164;
    const double C22772 = C22753 + C22754;
    const double C22764 = C22737 + C22738;
    const double C32025 = C32015 + C32016;
    const double C37406 = C37396 + C37397;
    const double C37569 = C37558 + C37559;
    const double C47850 = C47843 + C47844;
    const double C22771 = C22751 + C22752;
    const double C32187 = C32175 + C32176;
    const double C37568 = C37556 + C37557;
    const double C47849 = C47841 + C47842;
    const double C23109 = C23101 + C23102;
    const double C32303 = C32291 + C32292;
    const double C37684 = C37672 + C37673;
    const double C39680 = C39676 + C39677;
    const double C48157 = C48149 + C48150;
    const double C186 = C176 * C118;
    const double C353 = C345 * C118;
    const double C525 = C517 * C459;
    const double C1745 = C517 * C1731;
    const double C11067 = C517 * C118;
    const double C678 = C672 * C118;
    const double C1629 = C1623 * C459;
    const double C1895 = C1623 * C1731;
    const double C11221 = C1623 * C118;
    const double C1055 = C1049 * C999;
    const double C2019 = C1049 * C2001;
    const double C5350 = C1049 * C118;
    const double C11373 = C1049 * C459;
    const double C12813 = C1049 * C1731;
    const double C4254 = C2446 * C3304;
    const double C14390 = C50942 * C3304;
    const double C26530 = C24798 * C3304;
    const double C28236 = C50942 * C3304;
    const double C3478 = C2446 * C3465;
    const double C5855 = C50890 * C3465;
    const double C15172 = C50942 * C3465;
    const double C23716 = C50942 * C3465;
    const double C25782 = C24798 * C3465;
    const double C50652 = C50648 - C50649;
    const double C50615 = C50614 + C50605;
    const double C146 =
        5 * (3 * C49904 + C49881 * C49920) +
        C49881 * (4 * C49920 +
                  C49881 * (3 * C49918 +
                            C49881 * ((-2 * C49881 * C49913) / C49884 +
                                      C49881 * ((-(std::pow(C49877, 8) * bs[8] *
                                                   C49879 * C49890) /
                                                 C49739) /
                                                    C49810 -
                                                C49913 / C49884))));
    const double C320 =
        (((-3 * (C49930 * C49890 + C49924)) / C49739 +
          C49881 * ((-2 * C49881 * C49930) / C49739 -
                    (C49881 * (C49895 * C49896 * C49922 * C49890 + C49930)) /
                        C49739)) *
         ae) /
            C49810 +
        C49873 * (3 * C49904 + C49881 * C49920);
    const double C321 =
        ((4 * ((-2 * C49881 * C49930) / C49739 - (C49881 * C49935) / C49739) +
          C49881 * ((-3 * C49935) / C49739 +
                    C49881 * ((-2 * C49881 * C49933) / C49739 -
                              (C49881 *
                               (C49907 * C49908 * C49922 * C49890 + C49933)) /
                                  C49739))) *
         ae) /
            C49810 +
        C49873 * (4 * C49920 +
                  C49881 * (3 * C49918 +
                            C49881 * ((-2 * C49881 * C49913) / C49884 +
                                      C49881 * ((-(std::pow(C49877, 8) * bs[8] *
                                                   C49879 * C49890) /
                                                 C49739) /
                                                    C49810 -
                                                C49913 / C49884))));
    const double C482 =
        C49874 * (3 * C49904 + C49881 * C49920) -
        ((3 * (C49942 + C49945 * C49890) +
          C49881 * (2 * C49881 * C49945 +
                    C49881 * (C49945 + C49895 * C49896 * C49939 * C49890))) *
         ce) /
            C49884;
    const double C483 =
        C49874 * (4 * C49920 +
                  C49881 * (3 * C49918 +
                            C49881 * ((-2 * C49881 * C49913) / C49884 +
                                      C49881 * ((-(std::pow(C49877, 8) * bs[8] *
                                                   C49879 * C49890) /
                                                 C49739) /
                                                    C49810 -
                                                C49913 / C49884)))) -
        ((4 * (2 * C49881 * C49945 + C49881 * C49950) +
          C49881 * (3 * C49950 +
                    C49881 * (2 * C49881 * C49948 +
                              C49881 * (C49948 +
                                        C49907 * C49908 * C49939 * C49890)))) *
         ce) /
            C49884;
    const double C653 = (-2 * C49881 * C49893) / C49884 + C49881 * C49904 +
                        (C49873 * C49967 * ae) / C49810 +
                        C49873 * ((C49967 * ae) / C49810 + C49873 * C49920);
    const double C762 =
        2 * ((C49967 * ae) / C49810 + C49873 * C49920) +
        ((C49967 + C49980 * std::pow(C49873, 2)) * ae) / C49810 +
        C49873 * (C49920 + (C49873 * C49980 * ae) / C49810 +
                  C49873 * ((C49980 * ae) / C49810 +
                            C49873 * ((-2 * C49881 * C49913) / C49884 +
                                      C49881 * ((-(std::pow(C49877, 8) * bs[8] *
                                                   C49879 * C49890) /
                                                 C49739) /
                                                    C49810 -
                                                C49913 / C49884))));
    const double C891 =
        ((C49874 * C49967 - ((2 * C49881 * C49992 +
                              C49881 * (C49992 + C49889 * C49891 * C49890)) *
                             ce) /
                                C49739) *
         ae) /
            C49810 +
        C49873 * (C49874 * C49920 -
                  ((2 * C49881 * C49945 + C49881 * C49950) * ce) / C49884);
    const double C895 =
        C49874 * C49920 -
        ((2 * C49881 * C49945 + C49881 * C49950) * ce) / C49884 +
        ((C49874 * C49873 * C49980 - (C49873 * C50008 * ce) / C49739) * ae) /
            C49810 +
        C49873 *
            (((C49874 * C49980 - (C50008 * ce) / C49739) * ae) / C49810 +
             C49873 *
                 (C49874 * ((-2 * C49881 * C49913) / C49884 +
                            C49881 * ((-(std::pow(C49877, 8) * bs[8] * C49879 *
                                         C49890) /
                                       C49739) /
                                          C49810 -
                                      C49913 / C49884)) -
                  ((2 * C49881 * C49948 +
                    C49881 * (C49948 + C49907 * C49908 * C49939 * C49890)) *
                   ce) /
                      C49884));
    const double C1018 = (-2 * C49986) / C49884 + C49881 * C49904 -
                         (C49874 * C50021 * ce) / C49884 +
                         C49874 * (C49874 * C49920 - (C50021 * ce) / C49884);
    const double C1019 =
        3 * C49904 + C49881 * C49920 - (C49874 * C50033 * ce) / C49884 +
        C49874 * (C49874 * (3 * C49918 +
                            C49881 * ((-2 * C49881 * C49913) / C49884 +
                                      C49881 * ((-(std::pow(C49877, 8) * bs[8] *
                                                   C49879 * C49890) /
                                                 C49739) /
                                                    C49810 -
                                                C49913 / C49884))) -
                  (C50033 * ce) / C49884);
    const double C1169 =
        ((C49967 + C49874 * (C49874 * C49980 - (C50008 * ce) / C49739) -
          (C49874 * C50008 * ce) / C49739) *
         ae) /
            C49810 +
        C49873 * (C49920 - (C49874 * C50031 * ce) / C49884 +
                  C49874 * (C49874 * ((-2 * C49881 * C49913) / C49884 +
                                      C49881 * ((-(std::pow(C49877, 8) * bs[8] *
                                                   C49879 * C49890) /
                                                 C49739) /
                                                    C49810 -
                                                C49913 / C49884)) -
                            (C50031 * ce) / C49884));
    const double C1259 =
        2 * (C49874 * C49920 - (C50021 * ce) / C49884) -
        ((C50021 + C50031 * std::pow(C49874, 2)) * ce) / C49884 +
        C49874 * (C49920 - (C49874 * C50031 * ce) / C49884 +
                  C49874 * (C49874 * ((-2 * C49881 * C49913) / C49884 +
                                      C49881 * ((-(std::pow(C49877, 8) * bs[8] *
                                                   C49879 * C49890) /
                                                 C49739) /
                                                    C49810 -
                                                C49913 / C49884)) -
                            (C50031 * ce) / C49884));
    const double C3027 =
        3 * (C49904 - (ae * C50067) / C49884 + C49873 * C50073) +
        (((-2 * C50067) / C49739 - (C49873 * C50072) / C49739) * ae) / C49810 +
        C49873 * (2 * C50073 - (ae * C50072) / C49884 +
                  C49873 * (C49918 - (ae * C49873 * C49977) / C49884 +
                            C49873 * (C49873 * ((-(std::pow(C49877, 8) * bs[8] *
                                                   C49879 * C49890) /
                                                 C49739) /
                                                    C49810 -
                                                C49913 / C49884) -
                                      (ae * C49977) / C49884)));
    const double C4247 =
        2 * (C49873 * C50210 -
             (ae * (C49874 * C49935 + C50000 * ce)) / C49884) -
        (ae * (C49874 * C50072 + (C50000 + C50006 * C50047) * ce)) / C49884 +
        C49873 *
            (C50210 - (ae * (C49874 * C49873 * C49977 + C50179 * ce)) / C49884 +
             C49873 * (C49873 * (C49874 * ((-(std::pow(C49877, 8) * bs[8] *
                                              C49879 * C49890) /
                                            C49739) /
                                               C49810 -
                                           C49913 / C49884) -
                                 (C50029 * ce) / C49884) -
                       (ae * (C49874 * C49977 + C50006 * ce)) / C49884));
    const double C6290 =
        3 * (C49904 - (C50220 * ce) / C49884 + C49874 * C50210) -
        ((2 * C50220 + C49874 * C50222) * ce) / C49884 +
        C49874 * (2 * C50210 - (C50222 * ce) / C49884 +
                  C49874 * (C49918 - (C49874 * C50029 * ce) / C49884 +
                            C49874 * (C49874 * ((-(std::pow(C49877, 8) * bs[8] *
                                                   C49879 * C49890) /
                                                 C49739) /
                                                    C49810 -
                                                C49913 / C49884) -
                                      (C50029 * ce) / C49884)));
    const double C7082 =
        (((-2 * (C49874 * C49935 + C50000 * ce)) / C49739 -
          (C49874 * (C49874 * (C49874 * C49977 + C50006 * ce) + C49935 +
                     C49874 * C50006 * ce)) /
              C49739 -
          ((C50000 + C50006 * C50202) * ce) / C49739) *
         ae) /
            C49810 +
        C49873 * (2 * C50210 - (C50222 * ce) / C49884 +
                  C49874 * (C49918 - (C49874 * C50029 * ce) / C49884 +
                            C49874 * (C49874 * ((-(std::pow(C49877, 8) * bs[8] *
                                                   C49879 * C49890) /
                                                 C49739) /
                                                    C49810 -
                                                C49913 / C49884) -
                                      (C50029 * ce) / C49884)));
    const double C2688 = C2675 + C2676;
    const double C8814 = C8805 + C8806;
    const double C17985 = C17976 + C17977;
    const double C25040 = C25027 + C25028;
    const double C2870 = C2857 + C2858;
    const double C9982 = C9973 + C9974;
    const double C11532 = C11529 + C11530;
    const double C19153 = C19144 + C19145;
    const double C25222 = C25209 + C25210;
    const double C5513 = C5508 + C5509;
    const double C9228 = C9219 + C9220;
    const double C18399 = C18390 + C18391;
    const double C5699 = C5690 + C5691;
    const double C50099 = C50095 + C50098;
    const double C50175 = C50174 - C50172;
    const double C50200 = C50199 + C50192;
    const double C3484 = C2446 * C3470;
    const double C5857 = C50890 * C3470;
    const double C15176 = C50942 * C3470;
    const double C23720 = C50942 * C3470;
    const double C25788 = C24798 * C3470;
    const double C50275 = C49873 * C50273;
    const double C50303 = C49873 * C50302;
    const double C50322 = C49873 * C50321;
    const double C50327 = C49874 * C50321;
    const double C654 =
        3 * C49904 + C49881 * C49920 + (C49873 * C49982 * ae) / C49810 +
        C49873 * ((C49982 * ae) / C49810 +
                  C49873 * (3 * C49918 +
                            C49881 * ((-2 * C49881 * C49913) / C49884 +
                                      C49881 * ((-(std::pow(C49877, 8) * bs[8] *
                                                   C49879 * C49890) /
                                                 C49739) /
                                                    C49810 -
                                                C49913 / C49884))));
    const double C1599 =
        ((C49874 * C49982 - ((3 * C50000 + C49881 * C50008) * ce) / C49739) *
         ae) /
            C49810 +
        C49873 * (C49874 * (3 * C49918 +
                            C49881 * ((-2 * C49881 * C49913) / C49884 +
                                      C49881 * ((-(std::pow(C49877, 8) * bs[8] *
                                                   C49879 * C49890) /
                                                 C49739) /
                                                    C49810 -
                                                C49913 / C49884))) -
                  (C50033 * ce) / C49884);
    const double C138 = 5 * ((-3 * C49960) / C49739 + C49881 * C49967) +
                        C49881 * (4 * C49967 + C49881 * C49982);
    const double C314 = C49873 * (4 * C49967 + C49881 * C49982);
    const double C477 = C49874 * (4 * C49967 + C49881 * C49982) -
                        ((4 * (2 * C49996 + C49881 * C50000) +
                          C49881 * (3 * C50000 + C49881 * C50008)) *
                         ce) /
                            C49739;
    const double C648 =
        (-3 * C49960) / C49739 + C49881 * C49967 + C49982 * C50047;
    const double C1014 = (-3 * C49960) / C49739 + C49881 * C49967 +
                         C49874 * (C49874 * C49982 - (C50409 * ce) / C49739) -
                         (C49874 * C50409 * ce) / C49739;
    const double C1598 =
        C49874 * C49873 * C49982 - (C49873 * C50409 * ce) / C49739;
    const double C20569 = 5 * ((-3 * C50052) / C49739 + C49873 * C50119) +
                          C49873 * (4 * C50119 + C49873 * C50274);
    const double C20672 = C49874 * (4 * C50119 + C49873 * C50274) -
                          ((4 * C50507 + C49873 * C50609) * ce) / C49739;
    const double C20872 = (-3 * C50052) / C49739 + C49873 * C50119 +
                          C49874 * (C49874 * C50274 - (C50609 * ce) / C49739) -
                          (C49874 * C50609 * ce) / C49739;
    const double C531 = C529 * C50906;
    const double C11371 = C529 * C51051;
    const double C34168 = C529 * C33864;
    const double C1240 =
        ((((0 - (C49738 * C49763) / C49739) * ce) / C49739 - (0 * de) / C49768 +
          C49748 / C49739) /
             C49747 -
         ((C49738 * C49782 + 0) * de) / C49739) /
            C49747 -
        ((C49738 * (C49782 / C49747 -
                    ((C49738 * C49783 + C51036) * de) / C49739 + C49777) +
          C51082) *
         de) /
            C49739 +
        C49783 / C49747 - ((C49738 * C49777 + C50848) * de) / C49739;
    const double C1241 =
        (C49782 / C49747 - ((C49738 * C49783 + C51036) * de) / C49739 +
         C49777) /
            C49747 -
        ((C49738 *
              (C49783 / C49747 - ((C49738 * C49777 + C50848) * de) / C49739) +
          C51071) *
         de) /
            C49739 +
        2 * (C49777 / C49747 - (0 * de) / C49739);
    const double C1242 =
        (C49783 / C49747 - ((C49738 * C49777 + C50848) * de) / C49739) /
            C49747 -
        ((C49738 * (C49777 / C49747 - (0 * de) / C49739) + C1998) * de) /
            C49739;
    const double C1999 =
        C49782 / C49747 - ((C49738 * C49783 + C51036) * de) / C49739 + C49777;
    const double C2000 =
        C49783 / C49747 - ((C49738 * C49777 + C50848) * de) / C49739;
    const double C1752 = C1750 - C1743;
    const double C1751 = C1749 - C1739;
    const double C12817 = C12812 - C7246;
    const double C10134 = C10133 - C10131;
    const double C20204 =
        ((((0 - (C49808 * C49834) / C49810) * ae) / C49810 - (0 * be) / C49814 +
          C49809 / C49810) /
             C49835 -
         ((C49808 * C49852 + 0) * be) / C49810) /
            C49835 +
        ((C49808 * (C49852 / C49835 -
                    ((C49808 * C49854 + C51050) * be) / C49810 + C49847) +
          C51083) *
         ae) /
            C49810 +
        C49854 / C49835 - ((C49808 * C49847 + C50942) * be) / C49810;
    const double C20205 =
        (C49852 / C49835 - ((C49808 * C49854 + C51050) * be) / C49810 +
         C49847) /
            C49835 +
        ((C49808 *
              (C49854 / C49835 - ((C49808 * C49847 + C50942) * be) / C49810) +
          C51084) *
         ae) /
            C49810 +
        2 * (C49847 / C49835 - (0 * be) / C49810);
    const double C20206 =
        (C49854 / C49835 - ((C49808 * C49847 + C50942) * be) / C49810) /
            C49835 +
        ((C49808 * (C49847 / C49835 - (0 * be) / C49810) + C24798) * ae) /
            C49810;
    const double C24801 =
        C49852 / C49835 - ((C49808 * C49854 + C51050) * be) / C49810 + C49847;
    const double C24802 =
        C49854 / C49835 - ((C49808 * C49847 + C50942) * be) / C49810;
    const double C17434 = C17432 * C50906;
    const double C17813 = C17800 - C17811;
    const double C19305 = C19304 - C19302;
    const double C187 = C177 * C50836;
    const double C347 = C339 * C50836;
    const double C1615 = C339 * C51036;
    const double C1896 = C339 * C1728;
    const double C8255 = C8245 + C8246;
    const double C17426 = C17416 + C17417;
    const double C524 = C516 * C50848;
    const double C1040 = C516 * C995;
    const double C1744 = C516 * C50848;
    const double C2018 = C516 * C51071;
    const double C5349 = C516 * C50836;
    const double C11374 = C516 * C51036;
    const double C12814 = C516 * C1728;
    const double C677 = C671 * C50836;
    const double C8447 = C8435 + C8436;
    const double C17618 = C17606 + C17607;
    const double C1628 = C1622 * C50848;
    const double C1894 = C1622 * C50848;
    const double C5505 = C1622 * C50836;
    const double C12662 = C1622 * C51036;
    const double C13016 = C1622 * C1728;
    const double C8639 = C8632 + C8633;
    const double C14188 = C8633 + C8632;
    const double C17810 = C17803 + C17804;
    const double C28038 = C17804 + C17803;
    const double C1054 = C1048 * C996;
    const double C2014 = C1048 * C1998;
    const double C5344 = C1048 * C50836;
    const double C5688 = C1048 * C51036;
    const double C5685 = C1048 * C50848;
    const double C7251 = C1048 * C1728;
    const double C7249 = C1048 * C50848;
    const double C11928 = C1048 * C995;
    const double C13168 = C1048 * C51071;
    const double C3046 = C3039 + C3040;
    const double C25386 = C25379 + C25380;
    const double C4266 = C4259 + C4260;
    const double C14398 = C14393 + C14394;
    const double C26542 = C26535 + C26536;
    const double C28244 = C28239 + C28240;
    const double C31848 = C24798 * C3312;
    const double C37229 = C2446 * C3312;
    const double C48148 = C15181 + C15182;
    const double C23100 = C22766 + C22765;
    const double C22756 = C50942 * C3642;
    const double C32182 = C24798 * C3642;
    const double C37563 = C2446 * C3642;
    const double C47846 = C50942 * C3642;
    const double C23106 = C50942 * C3754;
    const double C32298 = C24798 * C3754;
    const double C37679 = C2446 * C3754;
    const double C39679 = C50890 * C3754;
    const double C48154 = C50942 * C3754;
    const double C6473 = C50890 * C3755;
    const double C15322 = C50942 * C3755;
    const double C22930 = C50942 * C3755;
    const double C23108 = C17368 * C3755;
    const double C32300 = C51084 * C3755;
    const double C37681 = C2445 * C3755;
    const double C48156 = C51050 * C3755;
    const double C6591 = C50890 * C6288;
    const double C23224 = C17368 * C6288;
    const double C48268 = C51050 * C6288;
    const double C23222 = C50942 * C6467;
    const double C39881 = C50890 * C6467;
    const double C48266 = C50942 * C6467;
    const double C39957 = C50890 * C6585;
    const double C48147 = C15179 + C15180;
    const double C23099 = C22764 + C22763;
    const double C4263 = C4253 + C4254;
    const double C14396 = C14389 + C14390;
    const double C26539 = C26529 + C26530;
    const double C28242 = C28235 + C28236;
    const double C3487 = C3477 + C3478;
    const double C5860 = C5854 + C5855;
    const double C15183 = C15171 + C15172;
    const double C23723 = C23715 + C23716;
    const double C25791 = C25781 + C25782;
    const double C50653 = C50652 - C50650;
    const double C20570 =
        (5 * (3 * C50510 + C49873 * C50615 + C50507 * ae) +
         C49873 * (4 * C50615 +
                   C49873 * (3 * C50612 +
                             C49873 * (2 * C50608 +
                                       C49873 * (C49948 +
                                                 C49873 * (C49873 * C50027 +
                                                           C50003 * ae) +
                                                 C50310 * ae) +
                                       C50290 * ae) +
                             C50298 * ae) +
                   C50609 * ae) +
         (4 * C50507 + C49873 * C50609) * ae) /
        C49810;
    const double C20671 =
        (C49874 *
         (4 * C50615 +
          C49873 *
              (3 * C50612 +
               C49873 * (2 * C50608 +
                         C49873 * (C49948 +
                                   C49873 * (C49873 * C50027 + C50003 * ae) +
                                   C50310 * ae) +
                         C50290 * ae) +
               C50298 * ae) +
          C50609 * ae)) /
        C49810;
    const double C20871 =
        (3 * C50510 + C49873 * C50615 + C50507 * ae +
         (3 * C50612 +
          C49873 *
              (2 * C50608 +
               C49873 * (C49948 + C49873 * (C49873 * C50027 + C50003 * ae) +
                         C50310 * ae) +
               C50290 * ae) +
          C50298 * ae) *
             C50202) /
        C49810;
    const double C20941 =
        (2 * C49874 * C50615 +
         C49874 *
             (C50615 +
              (2 * C50608 +
               C49873 * (C49948 + C49873 * (C49873 * C50027 + C50003 * ae) +
                         C50310 * ae) +
               C50290 * ae) *
                  C50202)) /
        C49810;
    const double C338 = C50890 * C320;
    const double C8236 = C50942 * C320;
    const double C17407 = C50942 * C320;
    const double C508 = C50890 * C482;
    const double C667 = C50890 * C653;
    const double C2488 = C2446 * C653;
    const double C8434 = C50942 * C653;
    const double C17605 = C50942 * C653;
    const double C24840 = C24798 * C653;
    const double C1618 = C50890 * C891;
    const double C8624 = C50942 * C891;
    const double C17795 = C50942 * C891;
    const double C1044 = C50890 * C1018;
    const double C11534 = C11532 * C50836;
    const double C5517 = C5513 * C50836;
    const double C12664 = C5513 * C50848;
    const double C13018 = C5513 * C50848;
    const double C5703 = C5699 * C50848;
    const double C7253 = C5699 * C50848;
    const double C11930 = C5699 * C996;
    const double C13170 = C5699 * C1998;
    const double C3150 =
        4 * (2 * C50065 - (ae * C50062) / C49884 + C49873 * C50099) +
        (((-3 * C50062) / C49739 + C49873 * C50097) * ae) / C49810 +
        C49873 *
            (3 * C50099 + (C50097 * ae) / C49810 +
             C49873 *
                 (2 * C50096 - (ae * C50088) / C49884 +
                  C49873 * ((-(ae * C49873 * C50079) / C49739) / C49810 -
                            C50077 / C49884 +
                            C49873 * ((-(C49873 * C49881 * std::pow(C49877, 8) *
                                         bs[8] * C49879) /
                                       C49739) /
                                          C49810 -
                                      (ae * C50079) / C49884))));
    const double C3313 =
        3 * (C50138 - (ae * (C49874 * C50075 + C50158 * ce)) / C49884 +
             C49873 * C50175) +
        ((C49874 * C50097 - ((2 * C50158 + C49873 * C50170) * ce) / C49739) *
         ae) /
            C49810 +
        C49873 *
            (2 * C50175 - (ae * (C49874 * C50088 + C50170 * ce)) / C49884 +
             C49873 *
                 (C50173 -
                  (ae * (C49874 * C49873 * C50079 + C49873 * C50163 * ce)) /
                      C49884 +
                  C49873 * (C49873 * ((-(C49874 * C49881 * std::pow(C49877, 8) *
                                         bs[8] * C49879) /
                                       C49739) /
                                          C49810 -
                                      (C49881 * C50027 * ce) / C49884) -
                            (ae * (C49874 * C50079 + C50163 * ce)) / C49884)));
    const double C3643 =
        2 * (C49873 * C50200 -
             (ae * (C49874 * C50166 + C49962 + C49874 * C50002 * ce)) /
                 C49884) -
        (ae * (C49874 * (C49874 * C50088 + C50170 * ce) + C50062 +
               C49874 * C50170 * ce)) /
            C49884 +
        C49873 *
            (C50200 -
             (ae * (C49874 * (C49874 * C49873 * C50079 + C50193 * ce) + C50075 +
                    C49874 * C50193 * ce)) /
                 C49884 +
             C49873 *
                 (C49873 * ((-(C49874 * C50194 * ce) / C49739) / C49810 -
                            C50077 / C49884 +
                            C49874 * ((-(C49874 * C49881 * std::pow(C49877, 8) *
                                         bs[8] * C49879) /
                                       C49739) /
                                          C49810 -
                                      (C50194 * ce) / C49884)) -
                  (ae * (C49874 * (C49874 * C50079 + C50163 * ce) + C49970 +
                         C49874 * C50163 * ce)) /
                      C49884));
    const double C3756 =
        2 * C50138 - ((C50018 + C50024 * C50202) * ce) / C49884 +
        C49874 * C50200 +
        (((-2 * (C49874 * C50075 + C50158 * ce)) / C49739 -
          (C49874 * (C49874 * (C49874 * C49873 * C50079 + C50193 * ce) +
                     C50075 + C49874 * C50193 * ce)) /
              C49739 -
          ((C50158 + C50193 * C50202) * ce) / C49739) *
         ae) /
            C49810 +
        C49873 *
            ((((-2 * C50166) / C49739 -
               (C49874 * (C49874 * (C49874 * C50079 + C50163 * ce) + C49970 +
                          C49874 * C50163 * ce)) /
                   C49739 -
               ((C50002 + C50163 * C50202) * ce) / C49739) *
              ae) /
                 C49810 +
             C49873 *
                 (2 * C50173 - ((C50024 + C50194 * C50202) * ce) / C49884 +
                  C49874 * ((-(C49874 * C50194 * ce) / C49739) / C49810 -
                            C50077 / C49884 +
                            C49874 * ((-(C49874 * C49881 * std::pow(C49877, 8) *
                                         bs[8] * C49879) /
                                       C49739) /
                                          C49810 -
                                      (C50194 * ce) / C49884))));
    const double C3757 =
        (((-2 * (C49874 * C49962 + C49996 * ce)) / C49739 -
          (C49874 * (C49874 * C50166 + C49962 + C49874 * C50002 * ce)) /
              C49739 -
          ((C49996 + C50002 * C50202) * ce) / C49739) *
         ae) /
            C49810 +
        C49873 * (2 * C50138 - ((C50018 + C50024 * C50202) * ce) / C49884 +
                  C49874 * C50200);
    const double C6289 =
        3 * ((-(C50216 * ce) / C49739) / C49810 - C49986 / C49884 +
             C49874 * C50138) -
        ((2 * C50216 + C49874 * C50218) * ce) / C49884 +
        C49874 * (2 * C50138 - (C50218 * ce) / C49884 + C49874 * C50200);
    const double C6468 =
        (((-3 * (C49874 * C50166 + C49962 + C50230 * ce)) / C49739 +
          C49874 * ((-2 * C50166) / C49739 -
                    (C49874 * (C49874 * (C49874 * C50079 + C50163 * ce) +
                               C49970 + C49874 * C50163 * ce)) /
                        C49739 -
                    (C50233 * ce) / C49739) -
          ((2 * C50230 + C49874 * C50233) * ce) / C49739) *
         ae) /
            C49810 +
        C49873 *
            (3 * C50200 - ((2 * C50191 + C49874 * C50234) * ce) / C49884 +
             C49874 *
                 (2 * C50173 - (C50234 * ce) / C49884 +
                  C49874 * ((-(C49874 * C50194 * ce) / C49739) / C49810 -
                            C50077 / C49884 +
                            C49874 * ((-(C49874 * C49881 * std::pow(C49877, 8) *
                                         bs[8] * C49879) /
                                       C49739) /
                                          C49810 -
                                      (C50194 * ce) / C49884))));
    const double C6586 =
        4 * (2 * C50138 - (C50218 * ce) / C49884 + C49874 * C50200) -
        ((3 * C50218 + C49874 * C50242) * ce) / C49884 +
        C49874 *
            (3 * C50200 - (C50242 * ce) / C49884 +
             C49874 *
                 (2 * C50173 - (C50234 * ce) / C49884 +
                  C49874 * ((-(C49874 * C50194 * ce) / C49739) / C49810 -
                            C50077 / C49884 +
                            C49874 * ((-(C49874 * C49881 * std::pow(C49877, 8) *
                                         bs[8] * C49879) /
                                       C49739) /
                                          C49810 -
                                      (C50194 * ce) / C49884))));
    const double C3490 = C3483 + C3484;
    const double C5861 = C5856 + C5857;
    const double C15185 = C15175 + C15176;
    const double C23725 = C23719 + C23720;
    const double C25794 = C25787 + C25788;
    const double C50276 = C50259 + C50275;
    const double C50304 = C50299 + C50303;
    const double C50323 = C50322 - C50319;
    const double C50330 = C50329 + C50327;
    const double C2015 = C172 * C1999;
    const double C2009 = C170 * C1999;
    const double C2003 = C168 * C1999;
    const double C7608 = C1045 * C1999;
    const double C7602 = C509 * C1999;
    const double C13165 = C512 * C1999;
    const double C2017 = C515 * C2000;
    const double C2011 = C512 * C2000;
    const double C2005 = C509 * C2000;
    const double C7610 = C5696 * C2000;
    const double C7604 = C1045 * C2000;
    const double C13167 = C1047 * C2000;
    const double C1753 = C1751 - C1740;
    const double C24835 = C24801 * C133;
    const double C24829 = C24801 * C122;
    const double C24827 = C24801 * C121;
    const double C24821 = C24801 * C131;
    const double C24811 = C24801 * C129;
    const double C24805 = C24801 * C120;
    const double C25023 = C24801 * C306;
    const double C25017 = C24801 * C299;
    const double C25015 = C24801 * C300;
    const double C25009 = C24801 * C308;
    const double C25205 = C24801 * C471;
    const double C25199 = C24801 * C462;
    const double C25197 = C24801 * C469;
    const double C25191 = C24801 * C461;
    const double C25375 = C24801 * C643;
    const double C25369 = C24801 * C636;
    const double C25783 = C24801 * C1008;
    const double C25777 = C24801 * C1001;
    const double C26531 = C24801 * C875;
    const double C26525 = C24801 * C865;
    const double C31431 = C24801 * C467;
    const double C31425 = C24801 * C460;
    const double C31851 = C24801 * C881;
    const double C31845 = C24801 * C868;
    const double C31835 = C24801 * C873;
    const double C31829 = C24801 * C864;
    const double C32017 = C24801 * C1006;
    const double C32011 = C24801 * C1000;
    const double C32185 = C24801 * C1159;
    const double C32179 = C24801 * C1154;
    const double C32301 = C24801 * C1249;
    const double C32295 = C24801 * C1244;
    const double C24837 = C24802 * C304;
    const double C24831 = C24802 * C298;
    const double C24825 = C24802 * C299;
    const double C24819 = C24802 * C306;
    const double C24813 = C24802 * C308;
    const double C24807 = C24802 * C300;
    const double C25025 = C24802 * C645;
    const double C25019 = C24802 * C637;
    const double C25013 = C24802 * C636;
    const double C25007 = C24802 * C643;
    const double C25207 = C24802 * C877;
    const double C25201 = C24802 * C866;
    const double C25195 = C24802 * C875;
    const double C25189 = C24802 * C865;
    const double C25377 = C24802 * C758;
    const double C25371 = C24802 * C752;
    const double C25785 = C24802 * C1161;
    const double C25779 = C24802 * C1155;
    const double C26533 = C24802 * C883;
    const double C26527 = C24802 * C869;
    const double C31429 = C24802 * C873;
    const double C31423 = C24802 * C864;
    const double C31849 = C24802 * C3303;
    const double C31843 = C24802 * C3298;
    const double C31837 = C24802 * C881;
    const double C31831 = C24802 * C868;
    const double C32019 = C24802 * C1159;
    const double C32013 = C24802 * C1154;
    const double C32183 = C24802 * C3464;
    const double C32177 = C24802 * C3460;
    const double C32299 = C24802 * C3749;
    const double C32293 = C24802 * C3743;
    const double C355 = C347 + C348;
    const double C8259 = C8255 * C50836;
    const double C17430 = C17426 * C50836;
    const double C530 = C528 - C524;
    const double C1754 = C1752 - C1744;
    const double C11065 = C5349 + C5348;
    const double C8449 = C8447 * C50836;
    const double C17620 = C17618 * C50836;
    const double C11219 = C5505 + C5504;
    const double C8641 = C8639 * C50848;
    const double C10132 = C8639 * C50848;
    const double C17812 = C17810 * C50848;
    const double C19303 = C17810 * C50848;
    const double C11378 = C11377 - C5685;
    const double C12818 = C12817 - C7249;
    const double C31862 = C31847 + C31848;
    const double C37243 = C37228 + C37229;
    const double C22773 = C22755 + C22756;
    const double C32190 = C32181 + C32182;
    const double C37571 = C37562 + C37563;
    const double C47851 = C47845 + C47846;
    const double C23111 = C23105 + C23106;
    const double C32306 = C32297 + C32298;
    const double C37687 = C37678 + C37679;
    const double C39681 = C39678 + C39679;
    const double C48159 = C48153 + C48154;
    const double C6479 = C6472 + C6473;
    const double C15327 = C15321 + C15322;
    const double C22944 = C22929 + C22930;
    const double C23112 = C23107 + C23108;
    const double C37688 = C37680 + C37681;
    const double C48160 = C48155 + C48156;
    const double C6593 = C6590 + C6591;
    const double C23228 = C23223 + C23224;
    const double C48272 = C48267 + C48268;
    const double C23227 = C23221 + C23222;
    const double C39883 = C39880 + C39881;
    const double C48271 = C48265 + C48266;
    const double C39959 = C39956 + C39957;
    const double C5864 = C5860 * C118;
    const double C39951 =
        5 * ((-3 * C50587) / C49739 + C49874 * C50653 -
             (C50586 * ce) / C49739) +
        C49874 *
            (4 * C50653 +
             C49874 * ((-3 * C50315) / C49739 +
                       C49874 * ((-2 * C50289) / C49739 -
                                 (C49874 *
                                  (C49874 * (C49874 * C49974 + C50003 * ce) +
                                   C49933 + C49874 * C50003 * ce)) /
                                     C49739 -
                                 (C50337 * ce) / C49739) -
                       (C50344 * ce) / C49739) -
             (C50651 * ce) / C49739) -
        ((4 * C50586 + C49874 * C50651) * ce) / C49739;
    const double C346 = C337 + C338;
    const double C8252 = C8235 + C8236;
    const double C17423 = C17406 + C17407;
    const double C518 = C507 + C508;
    const double C673 = C666 + C667;
    const double C2506 = C2487 + C2488;
    const double C8446 = C8433 + C8434;
    const double C17617 = C17604 + C17605;
    const double C24858 = C24839 + C24840;
    const double C1624 = C1617 + C1618;
    const double C8637 = C8623 + C8624;
    const double C17808 = C17794 + C17795;
    const double C1050 = C1043 + C1044;
    const double C6477 = C50890 * C3757;
    const double C14960 = C50942 * C3757;
    const double C22938 = C50942 * C3757;
    const double C6309 = C50890 * C6289;
    const double C5865 = C5861 * C50836;
    const double C20571 =
        5 * (3 * C50122 + (C50119 * ae) / C49810 + C49873 * C50276) +
        ((4 * C50119 + C49873 * C50274) * ae) / C49810 +
        C49873 *
            (4 * C50276 + (C50274 * ae) / C49810 +
             C49873 *
                 (3 * C50273 + (C50269 * ae) / C49810 +
                  C49873 *
                      (2 * C50268 - (ae * C50258) / C49884 +
                       C49873 * ((-(ae * C49873 * C49974) / C49739) / C49810 -
                                 C49913 / C49884 +
                                 C49873 * ((-(C49873 * std::pow(C49877, 8) *
                                              bs[8] * C49879) /
                                            C49739) /
                                               C49810 -
                                           (ae * C49974) / C49884)))));
    const double C20673 =
        4 * (2 * C50156 - (ae * (C49874 * C50109 + C50149 * ce)) / C49884 +
             C49873 * C50304) +
        ((C49874 * C50274 - ((3 * C50149 + C49873 * C50298) * ce) / C49739) *
         ae) /
            C49810 +
        C49873 *
            (3 * C50304 +
             ((C49874 * C50269 - (C50298 * ce) / C49739) * ae) / C49810 +
             C49873 *
                 (2 * C50302 - (ae * (C49874 * C50258 + C50290 * ce)) / C49884 +
                  C49873 *
                      (C50300 -
                       (ae *
                        (C49874 * C49873 * C49974 + C49873 * C50003 * ce)) /
                           C49884 +
                       C49873 *
                           (C49873 * ((-(C49874 * std::pow(C49877, 8) * bs[8] *
                                         C49879) /
                                       C49739) /
                                          C49810 -
                                      (C50027 * ce) / C49884) -
                            (ae * (C49874 * C49974 + C50003 * ce)) / C49884))));
    const double C20873 =
        3 * (C50189 -
             (ae * (C49874 * C50286 + C50101 + C49874 * C50183 * ce)) / C49884 +
             C49873 * C50323) +
        ((C50119 + C49874 * (C49874 * C50269 - (C50298 * ce) / C49739) -
          (C49874 * C50298 * ce) / C49739) *
         ae) /
            C49810 +
        C49873 *
            (2 * C50323 -
             (ae * (C49874 * (C49874 * C50258 + C50290 * ce) + C50109 +
                    C49874 * C50290 * ce)) /
                 C49884 +
             C49873 *
                 (C50321 -
                  (ae * (C49874 * (C49874 * C49873 * C49974 + C50310 * ce) +
                         C50247 + C49874 * C50310 * ce)) /
                      C49884 +
                  C49873 *
                      (C49873 * ((-(C49874 * C50027 * ce) / C49739) / C49810 -
                                 C49913 / C49884 +
                                 C49874 * ((-(C49874 * std::pow(C49877, 8) *
                                              bs[8] * C49879) /
                                            C49739) /
                                               C49810 -
                                           (C50027 * ce) / C49884)) -
                       (ae * (C49874 * (C49874 * C49974 + C50003 * ce) +
                              C49933 + C49874 * C50003 * ce)) /
                           C49884)));
    const double C20943 =
        2 * ((((-2 * C50148) / C49739 - (C49874 * C50315) / C49739 -
               (C50227 * ce) / C49739) *
              ae) /
                 C49810 +
             C49873 * C50330) +
        (((-2 * (C49874 * C50109 + C50149 * ce)) / C49739 -
          (C49874 * (C49874 * (C49874 * C50258 + C50290 * ce) + C50109 +
                     C49874 * C50290 * ce)) /
              C49739 -
          ((C50149 + C50290 * C50202) * ce) / C49739) *
         ae) /
            C49810 +
        C49873 *
            (C50330 +
             (((-2 * C50286) / C49739 -
               (C49874 * (C49874 * (C49874 * C49873 * C49974 + C50310 * ce) +
                          C50247 + C49874 * C50310 * ce)) /
                   C49739 -
               ((C50183 + C50310 * C50202) * ce) / C49739) *
              ae) /
                 C49810 +
             C49873 *
                 ((((-2 * C50289) / C49739 -
                    (C49874 * (C49874 * (C49874 * C49974 + C50003 * ce) +
                               C49933 + C49874 * C50003 * ce)) /
                        C49739 -
                    ((C49998 + C50003 * C50202) * ce) / C49739) *
                   ae) /
                      C49810 +
                  C49873 *
                      (2 * C50300 - ((C49948 + C50027 * C50202) * ce) / C49884 +
                       C49874 * ((-(C49874 * C50027 * ce) / C49739) / C49810 -
                                 C49913 / C49884 +
                                 C49874 * ((-(C49874 * std::pow(C49877, 8) *
                                              bs[8] * C49879) /
                                            C49739) /
                                               C49810 -
                                           (C50027 * ce) / C49884)))));
    const double C23097 =
        3 * C50189 - (C50238 * ce) / C49884 + C49874 * C50330 +
        (((-3 * (C49874 * C50286 + C50101 + C50332 * ce)) / C49739 +
          C49874 *
              ((-2 * C50286) / C49739 -
               (C49874 * (C49874 * (C49874 * C49873 * C49974 + C50310 * ce) +
                          C50247 + C49874 * C50310 * ce)) /
                   C49739 -
               (C50336 * ce) / C49739) -
          ((2 * C50332 + C49874 * C50336) * ce) / C49739) *
         ae) /
            C49810 +
        C49873 *
            ((((-3 * C50315) / C49739 +
               C49874 * ((-2 * C50289) / C49739 -
                         (C49874 * (C49874 * (C49874 * C49974 + C50003 * ce) +
                                    C49933 + C49874 * C50003 * ce)) /
                             C49739 -
                         (C50337 * ce) / C49739) -
               ((2 * C50309 + C49874 * C50337) * ce) / C49739) *
              ae) /
                 C49810 +
             C49873 *
                 (3 * C50321 - ((2 * C50306 + C49874 * C50338) * ce) / C49884 +
                  C49874 *
                      (2 * C50300 - (C50338 * ce) / C49884 +
                       C49874 * ((-(C49874 * C50027 * ce) / C49739) / C49810 -
                                 C49913 / C49884 +
                                 C49874 * ((-(C49874 * std::pow(C49877, 8) *
                                              bs[8] * C49879) /
                                            C49739) /
                                               C49810 -
                                           (C50027 * ce) / C49884)))));
    const double C23213 =
        ((4 * ((-2 * C50148) / C49739 - (C49874 * C50315) / C49739 -
               (C50227 * ce) / C49739) +
          C49874 *
              ((-3 * C50315) / C49739 +
               C49874 * ((-2 * C50289) / C49739 -
                         (C49874 * (C49874 * (C49874 * C49974 + C50003 * ce) +
                                    C49933 + C49874 * C50003 * ce)) /
                             C49739 -
                         (C50337 * ce) / C49739) -
               (C50344 * ce) / C49739) -
          ((3 * C50227 + C49874 * C50344) * ce) / C49739) *
         ae) /
            C49810 +
        C49873 *
            (4 * C50330 - ((3 * C50228 + C49874 * C50345) * ce) / C49884 +
             C49874 *
                 (3 * C50321 - (C50345 * ce) / C49884 +
                  C49874 *
                      (2 * C50300 - (C50338 * ce) / C49884 +
                       C49874 * ((-(C49874 * C50027 * ce) / C49739) / C49810 -
                                 C49913 / C49884 +
                                 C49874 * ((-(C49874 * std::pow(C49877, 8) *
                                              bs[8] * C49879) /
                                            C49739) /
                                               C49810 -
                                           (C50027 * ce) / C49884)))));
    const double C39952 =
        5 * (3 * C50189 - (C50238 * ce) / C49884 + C49874 * C50330) -
        ((4 * C50238 + C49874 * C50349) * ce) / C49884 +
        C49874 *
            (4 * C50330 - (C50349 * ce) / C49884 +
             C49874 *
                 (3 * C50321 - (C50345 * ce) / C49884 +
                  C49874 *
                      (2 * C50300 - (C50338 * ce) / C49884 +
                       C49874 * ((-(C49874 * C50027 * ce) / C49739) / C49810 -
                                 C49913 / C49884 +
                                 C49874 * ((-(C49874 * std::pow(C49877, 8) *
                                              bs[8] * C49879) /
                                            C49739) /
                                               C49810 -
                                           (C50027 * ce) / C49884)))));
    const double C1755 = C1753 * C50906;
    const double C12811 = C1753 * C51051;
    const double C35583 = C1753 * C33864;
    const double C24856 = C24835 + C24836;
    const double C24853 = C24829 + C24830;
    const double C24852 = C24827 + C24828;
    const double C24849 = C24821 + C24822;
    const double C24844 = C24811 + C24812;
    const double C24841 = C24805 + C24806;
    const double C25038 = C25023 + C25024;
    const double C25035 = C25017 + C25018;
    const double C25034 = C25015 + C25016;
    const double C25031 = C25009 + C25010;
    const double C25220 = C25205 + C25206;
    const double C25217 = C25199 + C25200;
    const double C25216 = C25197 + C25198;
    const double C25213 = C25191 + C25192;
    const double C25384 = C25375 + C25376;
    const double C25381 = C25369 + C25370;
    const double C25792 = C25783 + C25784;
    const double C25789 = C25777 + C25778;
    const double C26540 = C26531 + C26532;
    const double C26537 = C26525 + C26526;
    const double C31438 = C31431 + C31432;
    const double C31435 = C31425 + C31426;
    const double C31864 = C31851 + C31852;
    const double C31861 = C31845 + C31846;
    const double C31856 = C31835 + C31836;
    const double C31853 = C31829 + C31830;
    const double C32026 = C32017 + C32018;
    const double C32023 = C32011 + C32012;
    const double C32192 = C32185 + C32186;
    const double C32189 = C32179 + C32180;
    const double C32308 = C32301 + C32302;
    const double C32305 = C32295 + C32296;
    const double C24857 = C24837 + C24838;
    const double C24854 = C24831 + C24832;
    const double C24851 = C24825 + C24826;
    const double C24848 = C24819 + C24820;
    const double C24845 = C24813 + C24814;
    const double C24842 = C24807 + C24808;
    const double C25039 = C25025 + C25026;
    const double C25036 = C25019 + C25020;
    const double C25033 = C25013 + C25014;
    const double C25030 = C25007 + C25008;
    const double C25221 = C25207 + C25208;
    const double C25218 = C25201 + C25202;
    const double C25215 = C25195 + C25196;
    const double C25212 = C25189 + C25190;
    const double C25385 = C25377 + C25378;
    const double C25382 = C25371 + C25372;
    const double C25793 = C25785 + C25786;
    const double C25790 = C25779 + C25780;
    const double C26541 = C26533 + C26534;
    const double C26538 = C26527 + C26528;
    const double C31437 = C31429 + C31430;
    const double C31434 = C31423 + C31424;
    const double C31863 = C31849 + C31850;
    const double C31860 = C31843 + C31844;
    const double C31857 = C31837 + C31838;
    const double C31854 = C31831 + C31832;
    const double C32027 = C32019 + C32020;
    const double C32024 = C32013 + C32014;
    const double C32191 = C32183 + C32184;
    const double C32188 = C32177 + C32178;
    const double C32307 = C32299 + C32300;
    const double C32304 = C32293 + C32294;
    const double C357 = C355 * C50906;
    const double C8262 = C8259 + C8260;
    const double C17433 = C17430 + C17431;
    const double C532 = C530 * C50906;
    const double C1756 = C1754 * C50906;
    const double C11070 = C11065 * C50970;
    const double C33869 = C11065 * C50970;
    const double C8451 = C8449 + C8450;
    const double C17622 = C17620 + C17621;
    const double C11223 = C11219 * C50970;
    const double C34019 = C11219 * C50970;
    const double C8643 = C8642 - C8641;
    const double C10135 = C10134 - C10132;
    const double C17814 = C17813 - C17812;
    const double C19306 = C19305 - C19303;
    const double C11379 = C11378 * C50970;
    const double C34169 = C11378 * C50970;
    const double C12819 = C12818 * C50970;
    const double C35584 = C12818 * C50970;
    const double C48260 = C15327 + C15328;
    const double C23216 = C22944 + C22943;
    const double C354 = C346 * C50836;
    const double C526 = C518 * C50848;
    const double C1748 = C518 * C50848;
    const double C11068 = C518 * C50836;
    const double C679 = C673 * C50836;
    const double C1630 = C1624 * C50848;
    const double C1898 = C1624 * C50848;
    const double C11222 = C1624 * C50836;
    const double C1056 = C1050 * C996;
    const double C2020 = C1050 * C1998;
    const double C5351 = C1050 * C50836;
    const double C11376 = C1050 * C50848;
    const double C12816 = C1050 * C50848;
    const double C6481 = C6476 + C6477;
    const double C14968 = C14959 + C14960;
    const double C22947 = C22937 + C22938;
    const double C6313 = C6308 + C6309;
    const double C8264 = C8262 * C50906;
    const double C17435 = C17433 * C50906;
    const double C11072 = C11070 + C11066;
    const double C33872 = C33869 + C33870;
    const double C8452 = C8451 * C50906;
    const double C17623 = C17622 * C50906;
    const double C11224 = C11223 + C11220;
    const double C34021 = C34019 + C34020;
    const double C8644 = C8643 * C50906;
    const double C10136 = C10135 * C50906;
    const double C17815 = C17814 * C50906;
    const double C19307 = C19306 * C50906;
    const double C11380 = C11371 + C11379;
    const double C34170 = C34168 + C34169;
    const double C12820 = C12811 + C12819;
    const double C35585 = C35583 + C35584;
    const double C7091 = C6481 * C50848;
    const double C7455 = C6481 * C50848;
    const double C6315 = C6313 * C996;
    const double C7613 = C6313 * C1998;
    d2ee[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C118 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C50836) *
                C50906 * C51078 +
            ((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C50906 *
                C51079 +
            C8263 * C8201) *
               C1358 -
           (C8452 * C8201 +
            ((C8439 + C8440) * C50836 + (C8441 + C8442) * C118) * C50906 *
                C51079 +
            ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                 C50836 +
             (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                 C118) *
                C50906 * C51078) *
               C50822) *
              C51080 +
          ((((C8442 + C8441) * C118 + (C8440 + C8439) * C50836) * C50906 *
                C51078 +
            ((C8438 + C8437) * C118 + (C8436 + C8435) * C50836) * C50906 *
                C51079 +
            ((C8443 + C8444) * C118 + (C8445 + C8446) * C50836) * C50906 *
                C8201) *
               C50822 -
           (C8264 * C8201 +
            ((C8244 + C8243) * C50836 + (C8242 + C8241) * C118) * C50906 *
                C51079 +
            ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C50906 *
                C51078) *
               C1358) *
              C51065 +
          ((C8263 * C51078 +
            ((C8248 + C8247) * C118 + (C8246 + C8245) * C50836) * C50906 *
                C51079 +
            ((C8249 + C8250) * C118 + (C8251 + C8252) * C50836) * C50906 *
                C8201) *
               C1358 -
           (((C8203 * C648 + C50942 * C654 + C8202 * C313 + C51050 * C320) *
                 C50836 +
             (C8203 * C639 + C50942 * C649 + C8202 * C302 + C51050 * C312) *
                 C118) *
                C50906 * C8201 +
            ((C8446 + C8445) * C50836 + (C8444 + C8443) * C118) * C50906 *
                C51079 +
            C8452 * C51078) *
               C50822) *
              C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C118 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C50836) *
                C50906 * C51078 +
            ((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C50906 *
                C51079 +
            C8263 * C8201) *
               C51081 -
           (C8452 * C8201 +
            ((C8439 + C8440) * C50836 + (C8441 + C8442) * C118) * C50906 *
                C51079 +
            ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                 C50836 +
             (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                 C118) *
                C50906 * C51078) *
               C51068 +
           (((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                 C118 +
             (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                 C50836) *
                C50906 * C51078 +
            ((C8807 + C8808) * C118 + (C8809 + C8810) * C50836) * C50906 *
                C51079 +
            ((C8811 + C8812) * C118 + (C8813 + C8814) * C50836) * C50906 *
                C8201) *
               C1463) *
              C1464 +
          ((((C8442 + C8441) * C118 + (C8440 + C8439) * C50836) * C50906 *
                C51078 +
            ((C8438 + C8437) * C118 + (C8436 + C8435) * C50836) * C50906 *
                C51079 +
            ((C8443 + C8444) * C118 + (C8445 + C8446) * C50836) * C50906 *
                C8201) *
               C51068 -
           (C8264 * C8201 +
            ((C8244 + C8243) * C50836 + (C8242 + C8241) * C118) * C50906 *
                C51079 +
            ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C50906 *
                C51078) *
               C51081 -
           (((C8203 * C754 + C50942 * C762 + C8202 * C647 + C51050 * C653) *
                 C50836 +
             (C8203 * C750 + C50942 * C755 + C8202 * C638 + C51050 * C646) *
                 C118) *
                C50906 * C8201 +
            ((C8814 + C8813) * C50836 + (C8812 + C8811) * C118) * C50906 *
                C51079 +
            ((C8810 + C8809) * C50836 + (C8808 + C8807) * C118) * C50906 *
                C51078) *
               C1463) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C458 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C51036 -
             (C8203 * C864 + C50942 * C872 + C8202 * C460 + C51050 * C466) *
                 C459 -
             (C8203 * C873 + C50942 * C888 + C8202 * C467 + C51050 * C478) *
                 C50848) *
                C50906 * C51078 +
            ((C8237 + C8238) * C458 + (C8239 + C8240) * C51036 -
             (C8625 + C8626) * C459 - (C8627 + C8628) * C50848) *
                C50906 * C51079 +
            C8644 * C8201) *
               C1358 +
           (((C8202 * C864 + C51050 * C872 + C8203 * C868 + C50942 * C880) *
                 C459 -
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C51036 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C458) +
             (C8202 * C873 + C51050 * C888 + C8203 * C881 + C50942 * C892) *
                 C50848) *
                C50906 * C51078 +
            ((C9975 + C9976) * C459 -
             ((C8439 + C8440) * C51036 + (C8441 + C8442) * C458) +
             (C9977 + C9978) * C50848) *
                C50906 * C51079 +
            ((C9979 + C9980) * C459 - (C8447 * C51036 + C8448 * C458) +
             (C9981 + C9982) * C50848) *
                C50906 * C8201) *
               C50822) *
              C1464 +
          ((((C8626 + C8625) * C459 -
             ((C8240 + C8239) * C51036 + (C8238 + C8237) * C458) +
             (C8628 + C8627) * C50848) *
                C50906 * C51078 +
            ((C8631 + C8630) * C459 -
             ((C8244 + C8243) * C51036 + (C8242 + C8241) * C458) +
             (C8633 + C8632) * C50848) *
                C50906 * C51079 +
            ((C8634 + C8635) * C459 - (C8255 * C51036 + C8256 * C458) +
             (C8636 + C8637) * C50848) *
                C50906 * C8201) *
               C1358 +
           (((C8442 + C8441) * C458 + (C8440 + C8439) * C51036 -
             (C9976 + C9975) * C459 - (C9978 + C9977) * C50848) *
                C50906 * C51078 +
            ((C8438 + C8437) * C458 + (C8436 + C8435) * C51036 -
             (C9980 + C9979) * C459 - (C9982 + C9981) * C50848) *
                C50906 * C51079 +
            ((C8443 + C8444) * C458 + (C8445 + C8446) * C51036 -
             (C8203 * C871 + C50942 * C886 + C8202 * C867 + C51050 * C878) *
                 C459 -
             (C8203 * C887 + C50942 * C895 + C8202 * C879 + C51050 * C891) *
                 C50848) *
                C50906 * C8201) *
               C50822) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C1730 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C1728 -
             (C8203 * C864 + C50942 * C872 + C8202 * C460 + C51050 * C466) *
                 C1731 -
             (C8203 * C873 + C50942 * C888 + C8202 * C467 + C51050 * C478) *
                 C50848) *
                C50906 * C51078 +
            ((C8237 + C8238) * C1730 + (C8239 + C8240) * C1728 -
             (C8625 + C8626) * C1731 - (C8627 + C8628) * C50848) *
                C50906 * C51079 +
            C10136 * C8201) *
               C1358 +
           (((C8202 * C864 + C51050 * C872 + C8203 * C868 + C50942 * C880) *
                 C1731 -
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C1728 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C1730) +
             (C8202 * C873 + C51050 * C888 + C8203 * C881 + C50942 * C892) *
                 C50848) *
                C50906 * C51078 +
            ((C9975 + C9976) * C1731 -
             ((C8439 + C8440) * C1728 + (C8441 + C8442) * C1730) +
             (C9977 + C9978) * C50848) *
                C50906 * C51079 +
            ((C9979 + C9980) * C1731 - (C8447 * C1728 + C8448 * C1730) +
             (C9981 + C9982) * C50848) *
                C50906 * C8201) *
               C50822) *
              C51027 +
          ((((C8626 + C8625) * C1731 -
             ((C8240 + C8239) * C1728 + (C8238 + C8237) * C1730) +
             (C8628 + C8627) * C50848) *
                C50906 * C51078 +
            ((C8631 + C8630) * C1731 -
             ((C8244 + C8243) * C1728 + (C8242 + C8241) * C1730) +
             (C8633 + C8632) * C50848) *
                C50906 * C51079 +
            ((C8634 + C8635) * C1731 - (C8255 * C1728 + C8256 * C1730) +
             (C8636 + C8637) * C50848) *
                C50906 * C8201) *
               C1358 +
           (((C8442 + C8441) * C1730 + (C8440 + C8439) * C1728 -
             (C9976 + C9975) * C1731 - (C9978 + C9977) * C50848) *
                C50906 * C51078 +
            ((C8438 + C8437) * C1730 + (C8436 + C8435) * C1728 -
             (C9980 + C9979) * C1731 - (C9982 + C9981) * C50848) *
                C50906 * C51079 +
            ((C8443 + C8444) * C1730 + (C8445 + C8446) * C1728 -
             (C8203 * C871 + C50942 * C886 + C8202 * C867 + C51050 * C878) *
                 C1731 -
             (C8203 * C887 + C50942 * C895 + C8202 * C879 + C51050 * C891) *
                 C50848) *
                C50906 * C8201) *
               C50822) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C1730 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C1728 -
            (C8203 * C864 + C50942 * C872 + C8202 * C460 + C51050 * C466) *
                C1731 -
            (C8203 * C873 + C50942 * C888 + C8202 * C467 + C51050 * C478) *
                C50848) *
               C50906 * C51078 +
           ((C8237 + C8238) * C1730 + (C8239 + C8240) * C1728 -
            (C8625 + C8626) * C1731 - (C8627 + C8628) * C50848) *
               C50906 * C51079 +
           C10136 * C8201) *
              C51081 +
          (((C8202 * C864 + C51050 * C872 + C8203 * C868 + C50942 * C880) *
                C1731 -
            ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                 C1728 +
             (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                 C1730) +
            (C8202 * C873 + C51050 * C888 + C8203 * C881 + C50942 * C892) *
                C50848) *
               C50906 * C51078 +
           ((C9975 + C9976) * C1731 -
            ((C8439 + C8440) * C1728 + (C8441 + C8442) * C1730) +
            (C9977 + C9978) * C50848) *
               C50906 * C51079 +
           ((C9979 + C9980) * C1731 - (C8447 * C1728 + C8448 * C1730) +
            (C9981 + C9982) * C50848) *
               C50906 * C8201) *
              C51068 +
          (((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                C1730 +
            (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                C1728 -
            (C8203 * C3298 + C50942 * C3302 + C8202 * C868 + C51050 * C880) *
                C1731 -
            (C8203 * C3303 + C50942 * C3310 + C8202 * C881 + C51050 * C892) *
                C50848) *
               C50906 * C51078 +
           ((C8807 + C8808) * C1730 + (C8809 + C8810) * C1728 -
            (C8203 * C3299 + C50942 * C3304 + C8202 * C869 + C51050 * C882) *
                C1731 -
            (C8203 * C3305 + C50942 * C3311 + C8202 * C883 + C51050 * C893) *
                C50848) *
               C50906 * C51079 +
           ((C8811 + C8812) * C1730 + (C8813 + C8814) * C1728 -
            (C8203 * C4244 + C50942 * C4245 + C8202 * C870 + C51050 * C884) *
                C1731 -
            (C8203 * C4246 + C50942 * C4247 + C8202 * C885 + C51050 * C894) *
                C50848) *
               C50906 * C8201) *
              C1463) *
         C50774) /
        (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C1999 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C51082 -
            (C8203 * C864 + C50942 * C872 + C8202 * C460 + C51050 * C466) *
                C2000 -
            (C8203 * C873 + C50942 * C888 + C8202 * C467 + C51050 * C478) *
                C51071 +
            (C8202 * C1000 + C51050 * C1005 + C8203 * C1154 + C50942 * C1158) *
                C2001 +
            (C8202 * C1006 + C51050 * C1015 + C8203 * C1159 + C50942 * C1166) *
                C1998) *
               C50906 * C51078 +
           ((C8237 + C8238) * C1999 + (C8239 + C8240) * C51082 -
            (C8625 + C8626) * C2000 - (C8627 + C8628) * C51071 +
            (C9221 + C9222) * C2001 + (C9223 + C9224) * C1998) *
               C50906 * C51079 +
           (C8253 * C1999 + C8254 * C51082 - C8638 * C2000 - C8639 * C51071 +
            (C9225 + C9226) * C2001 + (C9227 + C9228) * C1998) *
               C50906 * C8201) *
              C1358 +
          (((C8202 * C864 + C51050 * C872 + C8203 * C868 + C50942 * C880) *
                C2000 -
            ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                 C51082 +
             (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                 C1999) +
            (C8202 * C873 + C51050 * C888 + C8203 * C881 + C50942 * C892) *
                C51071 -
            (C8203 * C3460 + C50942 * C3463 + C8202 * C1154 + C51050 * C1158) *
                C2001 -
            (C8203 * C3464 + C50942 * C3469 + C8202 * C1159 + C51050 * C1166) *
                C1998) *
               C50906 * C51078 +
           ((C9975 + C9976) * C2000 -
            ((C8439 + C8440) * C51082 + (C8441 + C8442) * C1999) +
            (C9977 + C9978) * C51071 -
            (C8203 * C3461 + C50942 * C3465 + C8202 * C1155 + C51050 * C1160) *
                C2001 -
            (C8203 * C3466 + C50942 * C3470 + C8202 * C1161 + C51050 * C1167) *
                C1998) *
               C50906 * C51079 +
           ((C9979 + C9980) * C2000 - (C8447 * C51082 + C8448 * C1999) +
            (C9981 + C9982) * C51071 -
            (C8203 * C3462 + C50942 * C3467 + C8202 * C1156 + C51050 * C1162) *
                C2001 -
            (C8203 * C3468 + C50942 * C3471 + C8202 * C1163 + C51050 * C1168) *
                C1998) *
               C50906 * C8201) *
              C50822) *
         C50774) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C118 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C50836) *
                C50906 * C51078 +
            ((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C50906 *
                C51079 +
            C8263 * C8201) *
               C630 -
           (C8452 * C8201 +
            ((C8439 + C8440) * C50836 + (C8441 + C8442) * C118) * C50906 *
                C51079 +
            ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                 C50836 +
             (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                 C118) *
                C50906 * C51078) *
               C631 +
           (((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                 C118 +
             (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                 C50836) *
                C50906 * C51078 +
            ((C8807 + C8808) * C118 + (C8809 + C8810) * C50836) * C50906 *
                C51079 +
            ((C8811 + C8812) * C118 + (C8813 + C8814) * C50836) * C50906 *
                C8201) *
               C632) *
              C51027 +
          ((((C8442 + C8441) * C118 + (C8440 + C8439) * C50836) * C50906 *
                C51078 +
            ((C8438 + C8437) * C118 + (C8436 + C8435) * C50836) * C50906 *
                C51079 +
            ((C8443 + C8444) * C118 + (C8445 + C8446) * C50836) * C50906 *
                C8201) *
               C631 -
           (C8264 * C8201 +
            ((C8244 + C8243) * C50836 + (C8242 + C8241) * C118) * C50906 *
                C51079 +
            ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C50906 *
                C51078) *
               C630 -
           (((C8203 * C754 + C50942 * C762 + C8202 * C647 + C51050 * C653) *
                 C50836 +
             (C8203 * C750 + C50942 * C755 + C8202 * C638 + C51050 * C646) *
                 C118) *
                C50906 * C8201 +
            ((C8814 + C8813) * C50836 + (C8812 + C8811) * C118) * C50906 *
                C51079 +
            ((C8810 + C8809) * C50836 + (C8808 + C8807) * C118) * C50906 *
                C51078) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C118 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C50836) *
               C50906 * C51078 +
           ((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C50906 *
               C51079 +
           C8263 * C8201) *
              C50806 * C113 -
          (C8264 * C8201 +
           ((C8244 + C8243) * C50836 + (C8242 + C8241) * C118) * C50906 *
               C51079 +
           ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C50906 *
               C51078) *
              C50806 * C114 +
          (C8263 * C51078 +
           ((C8248 + C8247) * C118 + (C8246 + C8245) * C50836) * C50906 *
               C51079 +
           ((C8249 + C8250) * C118 + (C8251 + C8252) * C50836) * C50906 *
               C8201) *
              C50806 * C115 -
          (((C8203 * C314 + C50942 * C321 + C8202 * C137 + C51050 * C145) *
                C50836 +
            (C8203 * C303 + C50942 * C315 + C8202 * C124 + C51050 * C136) *
                C118) *
               C50906 * C8201 +
           ((C8252 + C8251) * C50836 + (C8250 + C8249) * C118) * C50906 *
               C51079 +
           C8264 * C51078) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C997 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C994 -
            (C8203 * C864 + C50942 * C872 + C8202 * C460 + C51050 * C466) *
                C998 -
            (C8203 * C873 + C50942 * C888 + C8202 * C467 + C51050 * C478) *
                C995 +
            (C8202 * C1000 + C51050 * C1005 + C8203 * C1154 + C50942 * C1158) *
                C999 +
            (C8202 * C1006 + C51050 * C1015 + C8203 * C1159 + C50942 * C1166) *
                C996) *
               C50906 * C51078 +
           ((C8237 + C8238) * C997 + (C8239 + C8240) * C994 -
            (C8625 + C8626) * C998 - (C8627 + C8628) * C995 +
            (C9221 + C9222) * C999 + (C9223 + C9224) * C996) *
               C50906 * C51079 +
           (C8253 * C997 + C8254 * C994 - C8638 * C998 - C8639 * C995 +
            (C9225 + C9226) * C999 + (C9227 + C9228) * C996) *
               C50906 * C8201) *
              C50806 * C51027 +
          (((C8626 + C8625) * C998 -
            ((C8240 + C8239) * C994 + (C8238 + C8237) * C997) +
            (C8628 + C8627) * C995 - (C9222 + C9221) * C999 -
            (C9224 + C9223) * C996) *
               C50906 * C51078 +
           ((C8631 + C8630) * C998 -
            ((C8244 + C8243) * C994 + (C8242 + C8241) * C997) +
            (C8633 + C8632) * C995 - (C9226 + C9225) * C999 -
            (C9228 + C9227) * C996) *
               C50906 * C51079 +
           ((C8634 + C8635) * C998 - (C8255 * C994 + C8256 * C997) +
            (C8636 + C8637) * C995 -
            (C8203 * C1157 + C50942 * C1164 + C8202 * C1003 + C51050 * C1011) *
                C999 -
            (C8203 * C1165 + C50942 * C1169 + C8202 * C1012 + C51050 * C1018) *
                C996) *
               C50906 * C8201) *
              C50806 * C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C118 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C50836) *
               C50906 * C51078 +
           ((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C50906 *
               C51079 +
           C8263 * C8201) *
              C745 -
          (C8452 * C8201 +
           ((C8439 + C8440) * C50836 + (C8441 + C8442) * C118) * C50906 *
               C51079 +
           ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                C50836 +
            (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                C118) *
               C50906 * C51078) *
              C746 +
          (((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                C118 +
            (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                C50836) *
               C50906 * C51078 +
           ((C8807 + C8808) * C118 + (C8809 + C8810) * C50836) * C50906 *
               C51079 +
           ((C8811 + C8812) * C118 + (C8813 + C8814) * C50836) * C50906 *
               C8201) *
              C747 -
          (((C8203 * C3023 + C50942 * C3027 + C8202 * C756 + C51050 * C763) *
                C50836 +
            (C8203 * C3018 + C50942 * C3024 + C8202 * C751 + C51050 * C757) *
                C118) *
               C50906 * C8201 +
           ((C8203 * C3022 + C50942 * C3026 + C8202 * C758 + C51050 * C764) *
                C50836 +
            (C8203 * C3017 + C50942 * C3021 + C8202 * C752 + C51050 * C759) *
                C118) *
               C50906 * C51079 +
           ((C8203 * C3020 + C50942 * C3025 + C8202 * C760 + C51050 * C765) *
                C50836 +
            (C8203 * C3016 + C50942 * C3019 + C8202 * C753 + C51050 * C761) *
                C118) *
               C50906 * C51078) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C118 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C50836) *
                C50906 * C51078 +
            ((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C50906 *
                C51079 +
            C8263 * C8201) *
               C51034 -
           (C8452 * C8201 +
            ((C8439 + C8440) * C50836 + (C8441 + C8442) * C118) * C50906 *
                C51079 +
            ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                 C50836 +
             (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                 C118) *
                C50906 * C51078) *
               C50822) *
              C295 +
          ((((C8442 + C8441) * C118 + (C8440 + C8439) * C50836) * C50906 *
                C51078 +
            ((C8438 + C8437) * C118 + (C8436 + C8435) * C50836) * C50906 *
                C51079 +
            ((C8443 + C8444) * C118 + (C8445 + C8446) * C50836) * C50906 *
                C8201) *
               C50822 -
           (C8264 * C8201 +
            ((C8244 + C8243) * C50836 + (C8242 + C8241) * C118) * C50906 *
                C51079 +
            ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C50906 *
                C51078) *
               C51034) *
              C296 +
          ((C8263 * C51078 +
            ((C8248 + C8247) * C118 + (C8246 + C8245) * C50836) * C50906 *
                C51079 +
            ((C8249 + C8250) * C118 + (C8251 + C8252) * C50836) * C50906 *
                C8201) *
               C51034 -
           (((C8203 * C648 + C50942 * C654 + C8202 * C313 + C51050 * C320) *
                 C50836 +
             (C8203 * C639 + C50942 * C649 + C8202 * C302 + C51050 * C312) *
                 C118) *
                C50906 * C8201 +
            ((C8446 + C8445) * C50836 + (C8444 + C8443) * C118) * C50906 *
                C51079 +
            C8452 * C51078) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C997 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C994 -
            (C8203 * C864 + C50942 * C872 + C8202 * C460 + C51050 * C466) *
                C998 -
            (C8203 * C873 + C50942 * C888 + C8202 * C467 + C51050 * C478) *
                C995 +
            (C8202 * C1000 + C51050 * C1005 + C8203 * C1154 + C50942 * C1158) *
                C999 +
            (C8202 * C1006 + C51050 * C1015 + C8203 * C1159 + C50942 * C1166) *
                C996) *
               C50906 * C51078 +
           ((C8237 + C8238) * C997 + (C8239 + C8240) * C994 -
            (C8625 + C8626) * C998 - (C8627 + C8628) * C995 +
            (C9221 + C9222) * C999 + (C9223 + C9224) * C996) *
               C50906 * C51079 +
           (C8253 * C997 + C8254 * C994 - C8638 * C998 - C8639 * C995 +
            (C9225 + C9226) * C999 + (C9227 + C9228) * C996) *
               C50906 * C8201) *
              C51034 +
          (((C8202 * C864 + C51050 * C872 + C8203 * C868 + C50942 * C880) *
                C998 -
            ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                 C994 +
             (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                 C997) +
            (C8202 * C873 + C51050 * C888 + C8203 * C881 + C50942 * C892) *
                C995 -
            (C8203 * C3460 + C50942 * C3463 + C8202 * C1154 + C51050 * C1158) *
                C999 -
            (C8203 * C3464 + C50942 * C3469 + C8202 * C1159 + C51050 * C1166) *
                C996) *
               C50906 * C51078 +
           ((C8202 * C865 + C51050 * C874 + C8203 * C869 + C50942 * C882) *
                C998 -
            ((C8439 + C8440) * C994 + (C8441 + C8442) * C997) +
            (C8202 * C875 + C51050 * C889 + C8203 * C883 + C50942 * C893) *
                C995 -
            (C8203 * C3461 + C50942 * C3465 + C8202 * C1155 + C51050 * C1160) *
                C999 -
            (C8203 * C3466 + C50942 * C3470 + C8202 * C1161 + C51050 * C1167) *
                C996) *
               C50906 * C51079 +
           ((C8202 * C866 + C51050 * C876 + C8203 * C870 + C50942 * C884) *
                C998 -
            (C8447 * C994 + C8448 * C997) +
            (C8202 * C877 + C51050 * C890 + C8203 * C885 + C50942 * C894) *
                C995 -
            (C8203 * C3462 + C50942 * C3467 + C8202 * C1156 + C51050 * C1162) *
                C999 -
            (C8203 * C3468 + C50942 * C3471 + C8202 * C1163 + C51050 * C1168) *
                C996) *
               C50906 * C8201) *
              C50822) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C458 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C51036 -
            (C8203 * C864 + C50942 * C872 + C8202 * C460 + C51050 * C466) *
                C459 -
            (C8203 * C873 + C50942 * C888 + C8202 * C467 + C51050 * C478) *
                C50848) *
               C50906 * C51078 +
           ((C8237 + C8238) * C458 + (C8239 + C8240) * C51036 -
            (C8625 + C8626) * C459 - (C8627 + C8628) * C50848) *
               C50906 * C51079 +
           C8644 * C8201) *
              C630 +
          (((C8202 * C864 + C51050 * C872 + C8203 * C868 + C50942 * C880) *
                C459 -
            ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                 C51036 +
             (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                 C458) +
            (C8202 * C873 + C51050 * C888 + C8203 * C881 + C50942 * C892) *
                C50848) *
               C50906 * C51078 +
           ((C8202 * C865 + C51050 * C874 + C8203 * C869 + C50942 * C882) *
                C459 -
            ((C8439 + C8440) * C51036 + (C8441 + C8442) * C458) +
            (C8202 * C875 + C51050 * C889 + C8203 * C883 + C50942 * C893) *
                C50848) *
               C50906 * C51079 +
           ((C8202 * C866 + C51050 * C876 + C8203 * C870 + C50942 * C884) *
                C459 -
            (C8447 * C51036 + C8448 * C458) +
            (C8202 * C877 + C51050 * C890 + C8203 * C885 + C50942 * C894) *
                C50848) *
               C50906 * C8201) *
              C631 +
          (((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                C458 +
            (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                C51036 -
            (C8203 * C3298 + C50942 * C3302 + C8202 * C868 + C51050 * C880) *
                C459 -
            (C8203 * C3303 + C50942 * C3310 + C8202 * C881 + C51050 * C892) *
                C50848) *
               C50906 * C51078 +
           ((C8807 + C8808) * C458 + (C8809 + C8810) * C51036 -
            (C8203 * C3299 + C50942 * C3304 + C8202 * C869 + C51050 * C882) *
                C459 -
            (C8203 * C3305 + C50942 * C3311 + C8202 * C883 + C51050 * C893) *
                C50848) *
               C50906 * C51079 +
           ((C8811 + C8812) * C458 + (C8813 + C8814) * C51036 -
            (C8203 * C4244 + C50942 * C4245 + C8202 * C870 + C51050 * C884) *
                C459 -
            (C8203 * C4246 + C50942 * C4247 + C8202 * C885 + C51050 * C894) *
                C50848) *
               C50906 * C8201) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C458 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C51036 -
            (C8203 * C864 + C50942 * C872 + C8202 * C460 + C51050 * C466) *
                C459 -
            (C8203 * C873 + C50942 * C888 + C8202 * C467 + C51050 * C478) *
                C50848) *
               C50906 * C51078 +
           ((C8237 + C8238) * C458 + (C8239 + C8240) * C51036 -
            (C8625 + C8626) * C459 - (C8627 + C8628) * C50848) *
               C50906 * C51079 +
           C8644 * C8201) *
              C50806 * C295 +
          (((C8626 + C8625) * C459 -
            ((C8240 + C8239) * C51036 + (C8238 + C8237) * C458) +
            (C8628 + C8627) * C50848) *
               C50906 * C51078 +
           ((C8631 + C8630) * C459 -
            ((C8244 + C8243) * C51036 + (C8242 + C8241) * C458) +
            (C8633 + C8632) * C50848) *
               C50906 * C51079 +
           ((C8634 + C8635) * C459 - (C8255 * C51036 + C8256 * C458) +
            (C8636 + C8637) * C50848) *
               C50906 * C8201) *
              C50806 * C296 +
          (C8644 * C51078 +
           ((C8248 + C8247) * C458 + (C8246 + C8245) * C51036 -
            (C8635 + C8634) * C459 - (C8637 + C8636) * C50848) *
               C50906 * C51079 +
           ((C8249 + C8250) * C458 + (C8251 + C8252) * C51036 -
            (C8203 * C1596 + C50942 * C1597 + C8202 * C464 + C51050 * C474) *
                C459 -
            (C8203 * C1598 + C50942 * C1599 + C8202 * C475 + C51050 * C482) *
                C50848) *
               C50906 * C8201) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
               C1240 +
           (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
               C1236 -
           (C8203 * C864 + C50942 * C872 + C8202 * C460 + C51050 * C466) *
               C1241 -
           (C8203 * C873 + C50942 * C888 + C8202 * C467 + C51050 * C478) *
               C1237 +
           (C8202 * C1000 + C51050 * C1005 + C8203 * C1154 + C50942 * C1158) *
               C1242 +
           (C8202 * C1006 + C51050 * C1015 + C8203 * C1159 + C50942 * C1166) *
               C1238 -
           (C8203 * C3743 + C50942 * C3747 + C8202 * C1244 + C51050 * C1248) *
               C1243 -
           (C8203 * C3749 + C50942 * C3755 + C8202 * C1249 + C51050 * C1256) *
               C1239) *
              C50906 * C51078 +
          ((C8237 + C8238) * C1240 + (C8239 + C8240) * C1236 -
           (C8625 + C8626) * C1241 - (C8627 + C8628) * C1237 +
           (C9221 + C9222) * C1242 + (C9223 + C9224) * C1238 -
           (C8203 * C3745 + C50942 * C3751 + C8202 * C1245 + C51050 * C1250) *
               C1243 -
           (C8203 * C3753 + C50942 * C3757 + C8202 * C1251 + C51050 * C1257) *
               C1239) *
              C50906 * C51079 +
          (C8253 * C1240 + C8254 * C1236 - C8638 * C1241 - C8639 * C1237 +
           (C9225 + C9226) * C1242 + (C9227 + C9228) * C1238 -
           (C8203 * C7079 + C50942 * C7080 + C8202 * C1246 + C51050 * C1252) *
               C1243 -
           (C8203 * C7081 + C50942 * C7082 + C8202 * C1253 + C51050 * C1258) *
               C1239) *
              C50906 * C8201) *
         C50806 * C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C1730 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C1728 -
            (C8203 * C864 + C50942 * C872 + C8202 * C460 + C51050 * C466) *
                C1731 -
            (C8203 * C873 + C50942 * C888 + C8202 * C467 + C51050 * C478) *
                C50848) *
               C50906 * C51078 +
           ((C8237 + C8238) * C1730 + (C8239 + C8240) * C1728 -
            (C8625 + C8626) * C1731 - (C8627 + C8628) * C50848) *
               C50906 * C51079 +
           C10136 * C8201) *
              C50806 * C51080 +
          (((C8626 + C8625) * C1731 -
            ((C8240 + C8239) * C1728 + (C8238 + C8237) * C1730) +
            (C8628 + C8627) * C50848) *
               C50906 * C51078 +
           ((C8631 + C8630) * C1731 -
            ((C8244 + C8243) * C1728 + (C8242 + C8241) * C1730) +
            (C8633 + C8632) * C50848) *
               C50906 * C51079 +
           ((C8634 + C8635) * C1731 - (C8255 * C1728 + C8256 * C1730) +
            (C8636 + C8637) * C50848) *
               C50906 * C8201) *
              C50806 * C51065 +
          (C10136 * C51078 +
           ((C8248 + C8247) * C1730 + (C8246 + C8245) * C1728 -
            (C8635 + C8634) * C1731 - (C8637 + C8636) * C50848) *
               C50906 * C51079 +
           ((C8249 + C8250) * C1730 + (C8251 + C8252) * C1728 -
            (C8203 * C1596 + C50942 * C1597 + C8202 * C464 + C51050 * C474) *
                C1731 -
            (C8203 * C1598 + C50942 * C1599 + C8202 * C475 + C51050 * C482) *
                C50848) *
               C50906 * C8201) *
              C50806 * C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C1730 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C1728 -
             (C8203 * C864 + C50942 * C872 + C8202 * C460 + C51050 * C466) *
                 C1731 -
             (C8203 * C873 + C50942 * C888 + C8202 * C467 + C51050 * C478) *
                 C50848) *
                C50906 * C51078 +
            ((C8237 + C8238) * C1730 + (C8239 + C8240) * C1728 -
             (C8625 + C8626) * C1731 - (C8627 + C8628) * C50848) *
                C50906 * C51079 +
            C10136 * C8201) *
               C51034 +
           (((C8202 * C864 + C51050 * C872 + C8203 * C868 + C50942 * C880) *
                 C1731 -
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C1728 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C1730) +
             (C8202 * C873 + C51050 * C888 + C8203 * C881 + C50942 * C892) *
                 C50848) *
                C50906 * C51078 +
            ((C9975 + C9976) * C1731 -
             ((C8439 + C8440) * C1728 + (C8441 + C8442) * C1730) +
             (C9977 + C9978) * C50848) *
                C50906 * C51079 +
            ((C9979 + C9980) * C1731 - (C8447 * C1728 + C8448 * C1730) +
             (C9981 + C9982) * C50848) *
                C50906 * C8201) *
               C50822) *
              C1464 +
          ((((C8626 + C8625) * C1731 -
             ((C8240 + C8239) * C1728 + (C8238 + C8237) * C1730) +
             (C8628 + C8627) * C50848) *
                C50906 * C51078 +
            ((C8631 + C8630) * C1731 -
             ((C8244 + C8243) * C1728 + (C8242 + C8241) * C1730) +
             (C8633 + C8632) * C50848) *
                C50906 * C51079 +
            ((C8634 + C8635) * C1731 - (C8255 * C1728 + C8256 * C1730) +
             (C8636 + C8637) * C50848) *
                C50906 * C8201) *
               C51034 +
           (((C8442 + C8441) * C1730 + (C8440 + C8439) * C1728 -
             (C9976 + C9975) * C1731 - (C9978 + C9977) * C50848) *
                C50906 * C51078 +
            ((C8438 + C8437) * C1730 + (C8436 + C8435) * C1728 -
             (C9980 + C9979) * C1731 - (C9982 + C9981) * C50848) *
                C50906 * C51079 +
            ((C8443 + C8444) * C1730 + (C8445 + C8446) * C1728 -
             (C8203 * C871 + C50942 * C886 + C8202 * C867 + C51050 * C878) *
                 C1731 -
             (C8203 * C887 + C50942 * C895 + C8202 * C879 + C51050 * C891) *
                 C50848) *
                C50906 * C8201) *
               C50822) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C1999 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C51082 -
            (C8203 * C864 + C50942 * C872 + C8202 * C460 + C51050 * C466) *
                C2000 -
            (C8203 * C873 + C50942 * C888 + C8202 * C467 + C51050 * C478) *
                C51071 +
            (C8202 * C1000 + C51050 * C1005 + C8203 * C1154 + C50942 * C1158) *
                C2001 +
            (C8202 * C1006 + C51050 * C1015 + C8203 * C1159 + C50942 * C1166) *
                C1998) *
               C50906 * C51078 +
           ((C8237 + C8238) * C1999 + (C8239 + C8240) * C51082 -
            (C8625 + C8626) * C2000 - (C8627 + C8628) * C51071 +
            (C9221 + C9222) * C2001 + (C9223 + C9224) * C1998) *
               C50906 * C51079 +
           (C8253 * C1999 + C8254 * C51082 - C8638 * C2000 - C8639 * C51071 +
            (C9225 + C9226) * C2001 + (C9227 + C9228) * C1998) *
               C50906 * C8201) *
              C50806 * C1464 +
          (((C8626 + C8625) * C2000 -
            ((C8240 + C8239) * C51082 + (C8238 + C8237) * C1999) +
            (C8628 + C8627) * C51071 - (C9222 + C9221) * C2001 -
            (C9224 + C9223) * C1998) *
               C50906 * C51078 +
           ((C8631 + C8630) * C2000 -
            ((C8244 + C8243) * C51082 + (C8242 + C8241) * C1999) +
            (C8633 + C8632) * C51071 - (C9226 + C9225) * C2001 -
            (C9228 + C9227) * C1998) *
               C50906 * C51079 +
           ((C8634 + C8635) * C2000 - (C8255 * C51082 + C8256 * C1999) +
            (C8636 + C8637) * C51071 -
            (C8203 * C1157 + C50942 * C1164 + C8202 * C1003 + C51050 * C1011) *
                C2001 -
            (C8203 * C1165 + C50942 * C1169 + C8202 * C1012 + C51050 * C1018) *
                C1998) *
               C50906 * C8201) *
              C50806 * C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C118 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C50836) *
               C50906 * C51078 +
           ((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C50906 *
               C51079 +
           C8263 * C8201) *
              C50806 * C113 -
          (C8264 * C8201 +
           ((C8244 + C8243) * C50836 + (C8242 + C8241) * C118) * C50906 *
               C51079 +
           ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C50906 *
               C51078) *
              C50806 * C114 +
          (C8263 * C51078 +
           ((C8248 + C8247) * C118 + (C8246 + C8245) * C50836) * C50906 *
               C51079 +
           ((C8249 + C8250) * C118 + (C8251 + C8252) * C50836) * C50906 *
               C8201) *
              C50806 * C115 -
          (((C8203 * C314 + C50942 * C321 + C8202 * C137 + C51050 * C145) *
                C50836 +
            (C8203 * C303 + C50942 * C315 + C8202 * C124 + C51050 * C136) *
                C118) *
               C50906 * C8201 +
           ((C8252 + C8251) * C50836 + (C8250 + C8249) * C118) * C50906 *
               C51079 +
           C8264 * C51078) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C118 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C50836) *
                C50906 * C51078 +
            ((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C50906 *
                C51079 +
            C8263 * C8201) *
               C630 -
           (C8452 * C8201 +
            ((C8439 + C8440) * C50836 + (C8441 + C8442) * C118) * C50906 *
                C51079 +
            ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                 C50836 +
             (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                 C118) *
                C50906 * C51078) *
               C631 +
           (((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                 C118 +
             (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                 C50836) *
                C50906 * C51078 +
            ((C8807 + C8808) * C118 + (C8809 + C8810) * C50836) * C50906 *
                C51079 +
            ((C8811 + C8812) * C118 + (C8813 + C8814) * C50836) * C50906 *
                C8201) *
               C632) *
              C51027 +
          ((((C8442 + C8441) * C118 + (C8440 + C8439) * C50836) * C50906 *
                C51078 +
            ((C8438 + C8437) * C118 + (C8436 + C8435) * C50836) * C50906 *
                C51079 +
            ((C8443 + C8444) * C118 + (C8445 + C8446) * C50836) * C50906 *
                C8201) *
               C631 -
           (C8264 * C8201 +
            ((C8244 + C8243) * C50836 + (C8242 + C8241) * C118) * C50906 *
                C51079 +
            ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C50906 *
                C51078) *
               C630 -
           (((C8203 * C754 + C50942 * C762 + C8202 * C647 + C51050 * C653) *
                 C50836 +
             (C8203 * C750 + C50942 * C755 + C8202 * C638 + C51050 * C646) *
                 C118) *
                C50906 * C8201 +
            ((C8814 + C8813) * C50836 + (C8812 + C8811) * C118) * C50906 *
                C51079 +
            ((C8810 + C8809) * C50836 + (C8808 + C8807) * C118) * C50906 *
                C51078) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C118 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C50836) *
                C50906 * C51078 +
            ((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C50906 *
                C51079 +
            C8263 * C8201) *
               C51034 -
           (C8452 * C8201 +
            ((C8439 + C8440) * C50836 + (C8441 + C8442) * C118) * C50906 *
                C51079 +
            ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                 C50836 +
             (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                 C118) *
                C50906 * C51078) *
               C50822) *
              C295 +
          ((((C8442 + C8441) * C118 + (C8440 + C8439) * C50836) * C50906 *
                C51078 +
            ((C8438 + C8437) * C118 + (C8436 + C8435) * C50836) * C50906 *
                C51079 +
            ((C8443 + C8444) * C118 + (C8445 + C8446) * C50836) * C50906 *
                C8201) *
               C50822 -
           (C8264 * C8201 +
            ((C8244 + C8243) * C50836 + (C8242 + C8241) * C118) * C50906 *
                C51079 +
            ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C50906 *
                C51078) *
               C51034) *
              C296 +
          ((C8263 * C51078 +
            ((C8248 + C8247) * C118 + (C8246 + C8245) * C50836) * C50906 *
                C51079 +
            ((C8249 + C8250) * C118 + (C8251 + C8252) * C50836) * C50906 *
                C8201) *
               C51034 -
           (((C8203 * C648 + C50942 * C654 + C8202 * C313 + C51050 * C320) *
                 C50836 +
             (C8203 * C639 + C50942 * C649 + C8202 * C302 + C51050 * C312) *
                 C118) *
                C50906 * C8201 +
            ((C8446 + C8445) * C50836 + (C8444 + C8443) * C118) * C50906 *
                C51079 +
            C8452 * C51078) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C118 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C50836) *
               C50906 * C51078 +
           ((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C50906 *
               C51079 +
           C8263 * C8201) *
              C745 -
          (C8452 * C8201 +
           ((C8439 + C8440) * C50836 + (C8441 + C8442) * C118) * C50906 *
               C51079 +
           ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                C50836 +
            (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                C118) *
               C50906 * C51078) *
              C746 +
          (((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                C118 +
            (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                C50836) *
               C50906 * C51078 +
           ((C8807 + C8808) * C118 + (C8809 + C8810) * C50836) * C50906 *
               C51079 +
           ((C8811 + C8812) * C118 + (C8813 + C8814) * C50836) * C50906 *
               C8201) *
              C747 -
          (((C8203 * C3023 + C50942 * C3027 + C8202 * C756 + C51050 * C763) *
                C50836 +
            (C8203 * C3018 + C50942 * C3024 + C8202 * C751 + C51050 * C757) *
                C118) *
               C50906 * C8201 +
           ((C8203 * C3022 + C50942 * C3026 + C8202 * C758 + C51050 * C764) *
                C50836 +
            (C8203 * C3017 + C50942 * C3021 + C8202 * C752 + C51050 * C759) *
                C118) *
               C50906 * C51079 +
           ((C8203 * C3020 + C50942 * C3025 + C8202 * C760 + C51050 * C765) *
                C50836 +
            (C8203 * C3016 + C50942 * C3019 + C8202 * C753 + C51050 * C761) *
                C118) *
               C50906 * C51078) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C458 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C51036 -
            (C8203 * C864 + C50942 * C872 + C8202 * C460 + C51050 * C466) *
                C459 -
            (C8203 * C873 + C50942 * C888 + C8202 * C467 + C51050 * C478) *
                C50848) *
               C50906 * C51078 +
           ((C8237 + C8238) * C458 + (C8239 + C8240) * C51036 -
            (C8625 + C8626) * C459 - (C8627 + C8628) * C50848) *
               C50906 * C51079 +
           C8644 * C8201) *
              C50806 * C295 +
          (((C8626 + C8625) * C459 -
            ((C8240 + C8239) * C51036 + (C8238 + C8237) * C458) +
            (C8628 + C8627) * C50848) *
               C50906 * C51078 +
           ((C8631 + C8630) * C459 -
            ((C8244 + C8243) * C51036 + (C8242 + C8241) * C458) +
            (C8633 + C8632) * C50848) *
               C50906 * C51079 +
           ((C8634 + C8635) * C459 - (C8255 * C51036 + C8256 * C458) +
            (C8636 + C8637) * C50848) *
               C50906 * C8201) *
              C50806 * C296 +
          (C8644 * C51078 +
           ((C8248 + C8247) * C458 + (C8246 + C8245) * C51036 -
            (C8635 + C8634) * C459 - (C8637 + C8636) * C50848) *
               C50906 * C51079 +
           ((C8249 + C8250) * C458 + (C8251 + C8252) * C51036 -
            (C8203 * C1596 + C50942 * C1597 + C8202 * C464 + C51050 * C474) *
                C459 -
            (C8203 * C1598 + C50942 * C1599 + C8202 * C475 + C51050 * C482) *
                C50848) *
               C50906 * C8201) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C458 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C51036 -
            (C8203 * C864 + C50942 * C872 + C8202 * C460 + C51050 * C466) *
                C459 -
            (C8203 * C873 + C50942 * C888 + C8202 * C467 + C51050 * C478) *
                C50848) *
               C50906 * C51078 +
           ((C8237 + C8238) * C458 + (C8239 + C8240) * C51036 -
            (C8625 + C8626) * C459 - (C8627 + C8628) * C50848) *
               C50906 * C51079 +
           C8644 * C8201) *
              C630 +
          (((C8202 * C864 + C51050 * C872 + C8203 * C868 + C50942 * C880) *
                C459 -
            ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                 C51036 +
             (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                 C458) +
            (C8202 * C873 + C51050 * C888 + C8203 * C881 + C50942 * C892) *
                C50848) *
               C50906 * C51078 +
           ((C8202 * C865 + C51050 * C874 + C8203 * C869 + C50942 * C882) *
                C459 -
            ((C8439 + C8440) * C51036 + (C8441 + C8442) * C458) +
            (C8202 * C875 + C51050 * C889 + C8203 * C883 + C50942 * C893) *
                C50848) *
               C50906 * C51079 +
           ((C8202 * C866 + C51050 * C876 + C8203 * C870 + C50942 * C884) *
                C459 -
            (C8447 * C51036 + C8448 * C458) +
            (C8202 * C877 + C51050 * C890 + C8203 * C885 + C50942 * C894) *
                C50848) *
               C50906 * C8201) *
              C631 +
          (((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                C458 +
            (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                C51036 -
            (C8203 * C3298 + C50942 * C3302 + C8202 * C868 + C51050 * C880) *
                C459 -
            (C8203 * C3303 + C50942 * C3310 + C8202 * C881 + C51050 * C892) *
                C50848) *
               C50906 * C51078 +
           ((C8807 + C8808) * C458 + (C8809 + C8810) * C51036 -
            (C8203 * C3299 + C50942 * C3304 + C8202 * C869 + C51050 * C882) *
                C459 -
            (C8203 * C3305 + C50942 * C3311 + C8202 * C883 + C51050 * C893) *
                C50848) *
               C50906 * C51079 +
           ((C8811 + C8812) * C458 + (C8813 + C8814) * C51036 -
            (C8203 * C4244 + C50942 * C4245 + C8202 * C870 + C51050 * C884) *
                C459 -
            (C8203 * C4246 + C50942 * C4247 + C8202 * C885 + C51050 * C894) *
                C50848) *
               C50906 * C8201) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                  C118 +
              (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                  C50836) *
                 C51051 +
             ((C14190 + C14189) * C118 + (C14192 + C14191) * C50836) * C50970) *
                C2447 +
            (((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C51051 +
             (C14185 * C118 + C14186 * C50836) * C50970) *
                C50758) *
               C1358 -
           ((((C9978 + C9977) * C50836 + (C9976 + C9975) * C118) * C50970 +
             ((C8439 + C8440) * C50836 + (C8441 + C8442) * C118) * C51051) *
                C50758 +
            (((C14742 + C14741) * C50836 + (C14740 + C14739) * C118) * C50970 +
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C50836 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C118) *
                 C51051) *
                C2447) *
               C50822) *
              C51080 +
          (((((C8442 + C8441) * C118 + (C8440 + C8439) * C50836) * C51051 +
             ((C9975 + C9976) * C118 + (C9977 + C9978) * C50836) * C50970) *
                C2447 +
            (((C8438 + C8437) * C118 + (C8436 + C8435) * C50836) * C51051 +
             ((C9979 + C9980) * C118 + (C9981 + C9982) * C50836) * C50970) *
                C50758) *
               C50822 -
           (((C8639 * C50836 + C8638 * C118) * C50970 +
             ((C8244 + C8243) * C50836 + (C8242 + C8241) * C118) * C51051) *
                C50758 +
            ((C14184 * C50836 + C14183 * C118) * C50970 +
             ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C51051) *
                C2447) *
               C1358) *
              C51065 +
          (((C8261 * C51051 + (C14187 * C118 + C14188 * C50836) * C50970) *
                C2447 +
            (((C8248 + C8247) * C118 + (C8246 + C8245) * C50836) * C51051 +
             ((C8634 + C8635) * C118 + (C8636 + C8637) * C50836) * C50970) *
                C50758) *
               C1358 -
           ((((C8203 * C887 + C50942 * C895 + C8202 * C879 + C51050 * C891) *
                  C50836 +
              (C8203 * C871 + C50942 * C886 + C8202 * C867 + C51050 * C878) *
                  C118) *
                 C50970 +
             ((C8446 + C8445) * C50836 + (C8444 + C8443) * C118) * C51051) *
                C50758 +
            (((C9982 + C9981) * C50836 + (C9980 + C9979) * C118) * C50970 +
             C8451 * C51051) *
                C2447) *
               C50822) *
              C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                  C118 +
              (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                  C50836) *
                 C51051 +
             ((C14190 + C14189) * C118 + (C14192 + C14191) * C50836) * C50970) *
                C2447 +
            (((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C51051 +
             (C14185 * C118 + C14186 * C50836) * C50970) *
                C50758) *
               C51081 -
           ((((C9978 + C9977) * C50836 + (C9976 + C9975) * C118) * C50970 +
             ((C8439 + C8440) * C50836 + (C8441 + C8442) * C118) * C51051) *
                C50758 +
            (((C14742 + C14741) * C50836 + (C14740 + C14739) * C118) * C50970 +
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C50836 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C118) *
                 C51051) *
                C2447) *
               C51068 +
           ((((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                  C118 +
              (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                  C50836) *
                 C51051 +
             ((C14744 + C14743) * C118 + (C14746 + C14745) * C50836) * C50970) *
                C2447 +
            (((C8807 + C8808) * C118 + (C8809 + C8810) * C50836) * C51051 +
             ((C14395 + C14396) * C118 + (C14397 + C14398) * C50836) * C50970) *
                C50758) *
               C1463) *
              C1464 +
          (((((C8442 + C8441) * C118 + (C8440 + C8439) * C50836) * C51051 +
             ((C9975 + C9976) * C118 + (C9977 + C9978) * C50836) * C50970) *
                C2447 +
            (((C8438 + C8437) * C118 + (C8436 + C8435) * C50836) * C51051 +
             ((C9979 + C9980) * C118 + (C9981 + C9982) * C50836) * C50970) *
                C50758) *
               C51068 -
           (((C8639 * C50836 + C8638 * C118) * C50970 +
             ((C8244 + C8243) * C50836 + (C8242 + C8241) * C118) * C51051) *
                C50758 +
            ((C14184 * C50836 + C14183 * C118) * C50970 +
             ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C51051) *
                C2447) *
               C51081 -
           ((((C8203 * C4246 + C50942 * C4247 + C8202 * C885 + C51050 * C894) *
                  C50836 +
              (C8203 * C4244 + C50942 * C4245 + C8202 * C870 + C51050 * C884) *
                  C118) *
                 C50970 +
             ((C8814 + C8813) * C50836 + (C8812 + C8811) * C118) * C51051) *
                C50758 +
            (((C14398 + C14397) * C50836 + (C14396 + C14395) * C118) * C50970 +
             ((C8810 + C8809) * C50836 + (C8808 + C8807) * C118) * C51051) *
                C2447) *
               C1463) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                  C458 +
              (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                  C51036 -
              (C14189 + C14190) * C459 - (C14191 + C14192) * C50848) *
                 C51051 +
             ((C14190 + C14189) * C458 + (C14192 + C14191) * C51036 -
              (C14962 + C14961) * C459 - (C14964 + C14963) * C50848) *
                 C50970) *
                C2447 +
            (((C8237 + C8238) * C458 + (C8239 + C8240) * C51036 -
              C14183 * C459 - C14184 * C50848) *
                 C51051 +
             (C14185 * C458 + C14186 * C51036 - C14951 * C459 -
              C14952 * C50848) *
                 C50970) *
                C50758) *
               C1358 +
           ((((C14739 + C14740) * C459 -
              ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                   C51036 +
               (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                   C458) +
              (C14741 + C14742) * C50848) *
                 C51051 +
             ((C15180 + C15179) * C459 -
              ((C14742 + C14741) * C51036 + (C14740 + C14739) * C458) +
              (C15182 + C15181) * C50848) *
                 C50970) *
                C2447 +
            ((C15975 * C459 -
              ((C8439 + C8440) * C51036 + (C8441 + C8442) * C458) +
              C15976 * C50848) *
                 C51051 +
             ((C15184 + C15183) * C459 - (C15977 * C51036 + C15978 * C458) +
              (C15186 + C15185) * C50848) *
                 C50970) *
                C50758) *
               C50822) *
              C1464 +
          ((((C14185 * C459 -
              ((C8240 + C8239) * C51036 + (C8238 + C8237) * C458) +
              C14186 * C50848) *
                 C51051 +
             (C14949 * C459 - (C14184 * C51036 + C14183 * C458) +
              C14950 * C50848) *
                 C50970) *
                C2447 +
            ((C14187 * C459 -
              ((C8244 + C8243) * C51036 + (C8242 + C8241) * C458) +
              C14188 * C50848) *
                 C51051 +
             ((C9225 + C9226) * C459 - (C8639 * C51036 + C8638 * C458) +
              (C9227 + C9228) * C50848) *
                 C50970) *
                C50758) *
               C1358 +
           ((((C8442 + C8441) * C458 + (C8440 + C8439) * C51036 -
              C15978 * C459 - C15977 * C50848) *
                 C51051 +
             (C15975 * C458 + C15976 * C51036 - (C15183 + C15184) * C459 -
              (C15185 + C15186) * C50848) *
                 C50970) *
                C2447 +
            (((C8438 + C8437) * C458 + (C8436 + C8435) * C51036 -
              (C9980 + C9979) * C459 - (C9982 + C9981) * C50848) *
                 C51051 +
             ((C9979 + C9980) * C458 + (C9981 + C9982) * C51036 -
              (C8203 * C3462 + C50942 * C3467 + C8202 * C1156 +
               C51050 * C1162) *
                  C459 -
              (C8203 * C3468 + C50942 * C3471 + C8202 * C1163 +
               C51050 * C1168) *
                  C50848) *
                 C50970) *
                C50758) *
               C50822) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                  C1730 +
              (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                  C1728 -
              (C14189 + C14190) * C1731 - (C14191 + C14192) * C50848) *
                 C51051 +
             ((C14190 + C14189) * C1730 + (C14192 + C14191) * C1728 -
              (C14962 + C14961) * C1731 - (C14964 + C14963) * C50848) *
                 C50970) *
                C2447 +
            (((C8237 + C8238) * C1730 + (C8239 + C8240) * C1728 -
              C14183 * C1731 - C14184 * C50848) *
                 C51051 +
             (C14185 * C1730 + C14186 * C1728 - C14951 * C1731 -
              C14952 * C50848) *
                 C50970) *
                C50758) *
               C1358 +
           ((((C14739 + C14740) * C1731 -
              ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                   C1728 +
               (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                   C1730) +
              (C14741 + C14742) * C50848) *
                 C51051 +
             ((C15180 + C15179) * C1731 -
              ((C14742 + C14741) * C1728 + (C14740 + C14739) * C1730) +
              (C15182 + C15181) * C50848) *
                 C50970) *
                C2447 +
            ((C15975 * C1731 -
              ((C8439 + C8440) * C1728 + (C8441 + C8442) * C1730) +
              C15976 * C50848) *
                 C51051 +
             ((C15184 + C15183) * C1731 - (C15977 * C1728 + C15978 * C1730) +
              (C15186 + C15185) * C50848) *
                 C50970) *
                C50758) *
               C50822) *
              C51027 +
          ((((C14185 * C1731 -
              ((C8240 + C8239) * C1728 + (C8238 + C8237) * C1730) +
              C14186 * C50848) *
                 C51051 +
             (C14949 * C1731 - (C14184 * C1728 + C14183 * C1730) +
              C14950 * C50848) *
                 C50970) *
                C2447 +
            ((C14187 * C1731 -
              ((C8244 + C8243) * C1728 + (C8242 + C8241) * C1730) +
              C14188 * C50848) *
                 C51051 +
             ((C9225 + C9226) * C1731 - (C8639 * C1728 + C8638 * C1730) +
              (C9227 + C9228) * C50848) *
                 C50970) *
                C50758) *
               C1358 +
           ((((C8442 + C8441) * C1730 + (C8440 + C8439) * C1728 -
              C15978 * C1731 - C15977 * C50848) *
                 C51051 +
             (C15975 * C1730 + C15976 * C1728 - (C15183 + C15184) * C1731 -
              (C15185 + C15186) * C50848) *
                 C50970) *
                C2447 +
            (((C8438 + C8437) * C1730 + (C8436 + C8435) * C1728 -
              (C9980 + C9979) * C1731 - (C9982 + C9981) * C50848) *
                 C51051 +
             ((C9979 + C9980) * C1730 + (C9981 + C9982) * C1728 -
              (C8203 * C3462 + C50942 * C3467 + C8202 * C1156 +
               C51050 * C1162) *
                  C1731 -
              (C8203 * C3468 + C50942 * C3471 + C8202 * C1163 +
               C51050 * C1168) *
                  C50848) *
                 C50970) *
                C50758) *
               C50822) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C1730 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C1728 -
             (C14189 + C14190) * C1731 - (C14191 + C14192) * C50848) *
                C51051 +
            ((C14190 + C14189) * C1730 + (C14192 + C14191) * C1728 -
             (C14962 + C14961) * C1731 - (C14964 + C14963) * C50848) *
                C50970) *
               C2447 +
           (((C8237 + C8238) * C1730 + (C8239 + C8240) * C1728 -
             C14183 * C1731 - C14184 * C50848) *
                C51051 +
            (C14185 * C1730 + C14186 * C1728 - C14951 * C1731 -
             C14952 * C50848) *
                C50970) *
               C50758) *
              C51081 +
          ((((C14739 + C14740) * C1731 -
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C1728 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C1730) +
             (C14741 + C14742) * C50848) *
                C51051 +
            ((C15180 + C15179) * C1731 -
             ((C14742 + C14741) * C1728 + (C14740 + C14739) * C1730) +
             (C15182 + C15181) * C50848) *
                C50970) *
               C2447 +
           ((C15975 * C1731 -
             ((C8439 + C8440) * C1728 + (C8441 + C8442) * C1730) +
             C15976 * C50848) *
                C51051 +
            ((C15184 + C15183) * C1731 - (C15977 * C1728 + C15978 * C1730) +
             (C15186 + C15185) * C50848) *
                C50970) *
               C50758) *
              C51068 +
          ((((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                 C1730 +
             (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                 C1728 -
             (C14743 + C14744) * C1731 - (C14745 + C14746) * C50848) *
                C51051 +
            ((C14744 + C14743) * C1730 + (C14746 + C14745) * C1728 -
             (C8203 * C3636 + C50942 * C3638 + C8202 * C3460 + C51050 * C3463) *
                 C1731 -
             (C8203 * C3639 + C50942 * C3642 + C8202 * C3464 + C51050 * C3469) *
                 C50848) *
                C50970) *
               C2447 +
           (((C8807 + C8808) * C1730 + (C8809 + C8810) * C1728 -
             (C14396 + C14395) * C1731 - (C14398 + C14397) * C50848) *
                C51051 +
            ((C14395 + C14396) * C1730 + (C14397 + C14398) * C1728 -
             (C8203 * C3637 + C50942 * C3640 + C8202 * C3461 + C51050 * C3465) *
                 C1731 -
             (C8203 * C3641 + C50942 * C3643 + C8202 * C3466 + C51050 * C3470) *
                 C50848) *
                C50970) *
               C50758) *
              C1463) *
         C50774) /
        (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C1999 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C51082 -
             (C14189 + C14190) * C2000 - (C14191 + C14192) * C51071 +
             (C14961 + C14962) * C2001 + (C14963 + C14964) * C1998) *
                C51051 +
            ((C14190 + C14189) * C1999 + (C14192 + C14191) * C51082 -
             (C14962 + C14961) * C2000 - (C14964 + C14963) * C51071 +
             (C15326 + C15325) * C2001 + (C15328 + C15327) * C1998) *
                C50970) *
               C2447 +
           (((C8237 + C8238) * C1999 + (C8239 + C8240) * C51082 -
             C14183 * C2000 - C14184 * C51071 + C14949 * C2001 +
             C14950 * C1998) *
                C51051 +
            (C14185 * C1999 + C14186 * C51082 - C14951 * C2000 -
             C14952 * C51071 + (C14965 + C14966) * C2001 +
             (C14967 + C14968) * C1998) *
                C50970) *
               C50758) *
              C1358 +
          ((((C14739 + C14740) * C2000 -
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C51082 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C1999) +
             (C14741 + C14742) * C51071 - (C15179 + C15180) * C2001 -
             (C15181 + C15182) * C1998) *
                C51051 +
            ((C15180 + C15179) * C2000 -
             ((C14742 + C14741) * C51082 + (C14740 + C14739) * C1999) +
             (C15182 + C15181) * C51071 -
             (C8203 * C3742 + C50942 * C3746 + C8202 * C3743 + C51050 * C3747) *
                 C2001 -
             (C8203 * C3748 + C50942 * C3754 + C8202 * C3749 + C51050 * C3755) *
                 C1998) *
                C50970) *
               C2447 +
           ((C15975 * C2000 -
             ((C8439 + C8440) * C51082 + (C8441 + C8442) * C1999) +
             C15976 * C51071 - (C15183 + C15184) * C2001 -
             (C15185 + C15186) * C1998) *
                C51051 +
            ((C15184 + C15183) * C2000 - (C15977 * C51082 + C15978 * C1999) +
             (C15186 + C15185) * C51071 -
             (C8203 * C3744 + C50942 * C3750 + C8202 * C3745 + C51050 * C3751) *
                 C2001 -
             (C8203 * C3752 + C50942 * C3756 + C8202 * C3753 + C51050 * C3757) *
                 C1998) *
                C50970) *
               C50758) *
              C50822) *
         C50774) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                  C118 +
              (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                  C50836) *
                 C51051 +
             ((C14190 + C14189) * C118 + (C14192 + C14191) * C50836) * C50970) *
                C2447 +
            (((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C51051 +
             (C14185 * C118 + C14186 * C50836) * C50970) *
                C50758) *
               C630 -
           ((((C9978 + C9977) * C50836 + (C9976 + C9975) * C118) * C50970 +
             ((C8439 + C8440) * C50836 + (C8441 + C8442) * C118) * C51051) *
                C50758 +
            (((C8203 * C881 + C50942 * C892 + C8202 * C873 + C51050 * C888) *
                  C50836 +
              (C8203 * C868 + C50942 * C880 + C8202 * C864 + C51050 * C872) *
                  C118) *
                 C50970 +
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C50836 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C118) *
                 C51051) *
                C2447) *
               C631 +
           ((((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                  C118 +
              (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                  C50836) *
                 C51051 +
             ((C8202 * C868 + C51050 * C880 + C8203 * C3298 + C50942 * C3302) *
                  C118 +
              (C8202 * C881 + C51050 * C892 + C8203 * C3303 + C50942 * C3310) *
                  C50836) *
                 C50970) *
                C2447 +
            (((C8807 + C8808) * C118 + (C8809 + C8810) * C50836) * C51051 +
             ((C14395 + C14396) * C118 + (C14397 + C14398) * C50836) * C50970) *
                C50758) *
               C632) *
              C51027 +
          (((((C8442 + C8441) * C118 + (C8440 + C8439) * C50836) * C51051 +
             ((C9975 + C9976) * C118 + (C9977 + C9978) * C50836) * C50970) *
                C2447 +
            (((C8438 + C8437) * C118 + (C8436 + C8435) * C50836) * C51051 +
             ((C9979 + C9980) * C118 + (C9981 + C9982) * C50836) * C50970) *
                C50758) *
               C631 -
           (((C8639 * C50836 + C8638 * C118) * C50970 +
             ((C8244 + C8243) * C50836 + (C8242 + C8241) * C118) * C51051) *
                C50758 +
            ((C14184 * C50836 + C14183 * C118) * C50970 +
             ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C51051) *
                C2447) *
               C630 -
           ((((C8203 * C4246 + C50942 * C4247 + C8202 * C885 + C51050 * C894) *
                  C50836 +
              (C8203 * C4244 + C50942 * C4245 + C8202 * C870 + C51050 * C884) *
                  C118) *
                 C50970 +
             ((C8814 + C8813) * C50836 + (C8812 + C8811) * C118) * C51051) *
                C50758 +
            (((C14398 + C14397) * C50836 + (C14396 + C14395) * C118) * C50970 +
             ((C8810 + C8809) * C50836 + (C8808 + C8807) * C118) * C51051) *
                C2447) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C118 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C50836) *
                C51051 +
            ((C8202 * C460 + C51050 * C466 + C8203 * C864 + C50942 * C872) *
                 C118 +
             (C8202 * C467 + C51050 * C478 + C8203 * C873 + C50942 * C888) *
                 C50836) *
                C50970) *
               C2447 +
           (((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C51051 +
            ((C8626 + C8625) * C118 + (C8628 + C8627) * C50836) * C50970) *
               C50758) *
              C50806 * C113 -
          (((C8639 * C50836 + C8638 * C118) * C50970 +
            ((C8244 + C8243) * C50836 + (C8242 + C8241) * C118) * C51051) *
               C50758 +
           (((C8627 + C8628) * C50836 + (C8625 + C8626) * C118) * C50970 +
            ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C51051) *
               C2447) *
              C50806 * C114 +
          ((C8261 * C51051 +
            ((C8631 + C8630) * C118 + (C8633 + C8632) * C50836) * C50970) *
               C2447 +
           (((C8248 + C8247) * C118 + (C8246 + C8245) * C50836) * C51051 +
            ((C8634 + C8635) * C118 + (C8636 + C8637) * C50836) * C50970) *
               C50758) *
              C50806 * C115 -
          ((((C8203 * C1598 + C50942 * C1599 + C8202 * C475 + C51050 * C482) *
                 C50836 +
             (C8203 * C1596 + C50942 * C1597 + C8202 * C464 + C51050 * C474) *
                 C118) *
                C50970 +
            ((C8252 + C8251) * C50836 + (C8250 + C8249) * C118) * C51051) *
               C50758 +
           (((C8637 + C8636) * C50836 + (C8635 + C8634) * C118) * C50970 +
            C8262 * C51051) *
               C2447) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C997 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C994 -
             (C14189 + C14190) * C998 - (C14191 + C14192) * C995 +
             (C14961 + C14962) * C999 + (C14963 + C14964) * C996) *
                C51051 +
            ((C14190 + C14189) * C997 + (C14192 + C14191) * C994 -
             (C14962 + C14961) * C998 - (C14964 + C14963) * C995 +
             (C8202 * C1244 + C51050 * C1248 + C8203 * C3743 + C50942 * C3747) *
                 C999 +
             (C8202 * C1249 + C51050 * C1256 + C8203 * C3749 + C50942 * C3755) *
                 C996) *
                C50970) *
               C2447 +
           (((C8237 + C8238) * C997 + (C8239 + C8240) * C994 - C14183 * C998 -
             C14184 * C995 + C14949 * C999 + C14950 * C996) *
                C51051 +
            (C14185 * C997 + C14186 * C994 - C14951 * C998 - C14952 * C995 +
             (C14965 + C14966) * C999 + (C14967 + C14968) * C996) *
                C50970) *
               C50758) *
              C50806 * C51027 +
          (((C14185 * C998 - ((C8240 + C8239) * C994 + (C8238 + C8237) * C997) +
             C14186 * C995 - C14951 * C999 - C14952 * C996) *
                C51051 +
            (C14949 * C998 - (C14184 * C994 + C14183 * C997) + C14950 * C995 -
             (C14966 + C14965) * C999 - (C14968 + C14967) * C996) *
                C50970) *
               C2447 +
           ((C14187 * C998 - ((C8244 + C8243) * C994 + (C8242 + C8241) * C997) +
             C14188 * C995 - (C9226 + C9225) * C999 - (C9228 + C9227) * C996) *
                C51051 +
            ((C9225 + C9226) * C998 - (C8639 * C994 + C8638 * C997) +
             (C9227 + C9228) * C995 -
             (C8203 * C7079 + C50942 * C7080 + C8202 * C1246 + C51050 * C1252) *
                 C999 -
             (C8203 * C7081 + C50942 * C7082 + C8202 * C1253 + C51050 * C1258) *
                 C996) *
                C50970) *
               C50758) *
              C50806 * C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C118 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C50836) *
                C51051 +
            ((C14190 + C14189) * C118 + (C14192 + C14191) * C50836) * C50970) *
               C2447 +
           (((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C51051 +
            (C14185 * C118 + C14186 * C50836) * C50970) *
               C50758) *
              C745 -
          ((((C9978 + C9977) * C50836 + (C9976 + C9975) * C118) * C50970 +
            ((C8439 + C8440) * C50836 + (C8441 + C8442) * C118) * C51051) *
               C50758 +
           (((C8203 * C881 + C50942 * C892 + C8202 * C873 + C51050 * C888) *
                 C50836 +
             (C8203 * C868 + C50942 * C880 + C8202 * C864 + C51050 * C872) *
                 C118) *
                C50970 +
            ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                 C50836 +
             (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                 C118) *
                C51051) *
               C2447) *
              C746 +
          ((((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                 C118 +
             (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                 C50836) *
                C51051 +
            ((C8202 * C868 + C51050 * C880 + C8203 * C3298 + C50942 * C3302) *
                 C118 +
             (C8202 * C881 + C51050 * C892 + C8203 * C3303 + C50942 * C3310) *
                 C50836) *
                C50970) *
               C2447 +
           (((C8807 + C8808) * C118 + (C8809 + C8810) * C50836) * C51051 +
            ((C14395 + C14396) * C118 + (C14397 + C14398) * C50836) * C50970) *
               C50758) *
              C747 -
          ((((C8203 * C3309 + C50942 * C3313 + C8202 * C3305 + C51050 * C3311) *
                 C50836 +
             (C8203 * C3301 + C50942 * C3308 + C8202 * C3299 + C51050 * C3304) *
                 C118) *
                C50970 +
            ((C8203 * C3022 + C50942 * C3026 + C8202 * C758 + C51050 * C764) *
                 C50836 +
             (C8203 * C3017 + C50942 * C3021 + C8202 * C752 + C51050 * C759) *
                 C118) *
                C51051) *
               C50758 +
           (((C8203 * C3307 + C50942 * C3312 + C8202 * C3303 + C51050 * C3310) *
                 C50836 +
             (C8203 * C3300 + C50942 * C3306 + C8202 * C3298 + C51050 * C3302) *
                 C118) *
                C50970 +
            ((C8203 * C3020 + C50942 * C3025 + C8202 * C760 + C51050 * C765) *
                 C50836 +
             (C8203 * C3016 + C50942 * C3019 + C8202 * C753 + C51050 * C761) *
                 C118) *
                C51051) *
               C2447) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                  C118 +
              (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                  C50836) *
                 C51051 +
             ((C8202 * C460 + C51050 * C466 + C8203 * C864 + C50942 * C872) *
                  C118 +
              (C8202 * C467 + C51050 * C478 + C8203 * C873 + C50942 * C888) *
                  C50836) *
                 C50970) *
                C2447 +
            (((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C51051 +
             ((C8626 + C8625) * C118 + (C8628 + C8627) * C50836) * C50970) *
                C50758) *
               C51034 -
           ((((C9978 + C9977) * C50836 + (C9976 + C9975) * C118) * C50970 +
             ((C8439 + C8440) * C50836 + (C8441 + C8442) * C118) * C51051) *
                C50758 +
            (((C8203 * C881 + C50942 * C892 + C8202 * C873 + C51050 * C888) *
                  C50836 +
              (C8203 * C868 + C50942 * C880 + C8202 * C864 + C51050 * C872) *
                  C118) *
                 C50970 +
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C50836 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C118) *
                 C51051) *
                C2447) *
               C50822) *
              C295 +
          (((((C8442 + C8441) * C118 + (C8440 + C8439) * C50836) * C51051 +
             ((C9975 + C9976) * C118 + (C9977 + C9978) * C50836) * C50970) *
                C2447 +
            (((C8438 + C8437) * C118 + (C8436 + C8435) * C50836) * C51051 +
             ((C9979 + C9980) * C118 + (C9981 + C9982) * C50836) * C50970) *
                C50758) *
               C50822 -
           (((C8639 * C50836 + C8638 * C118) * C50970 +
             ((C8244 + C8243) * C50836 + (C8242 + C8241) * C118) * C51051) *
                C50758 +
            (((C8627 + C8628) * C50836 + (C8625 + C8626) * C118) * C50970 +
             ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C51051) *
                C2447) *
               C51034) *
              C296 +
          (((C8261 * C51051 +
             ((C8631 + C8630) * C118 + (C8633 + C8632) * C50836) * C50970) *
                C2447 +
            (((C8248 + C8247) * C118 + (C8246 + C8245) * C50836) * C51051 +
             ((C8634 + C8635) * C118 + (C8636 + C8637) * C50836) * C50970) *
                C50758) *
               C51034 -
           ((((C8203 * C887 + C50942 * C895 + C8202 * C879 + C51050 * C891) *
                  C50836 +
              (C8203 * C871 + C50942 * C886 + C8202 * C867 + C51050 * C878) *
                  C118) *
                 C50970 +
             ((C8446 + C8445) * C50836 + (C8444 + C8443) * C118) * C51051) *
                C50758 +
            (((C9982 + C9981) * C50836 + (C9980 + C9979) * C118) * C50970 +
             C8451 * C51051) *
                C2447) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C997 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C994 -
             (C14189 + C14190) * C998 - (C14191 + C14192) * C995 +
             (C14961 + C14962) * C999 + (C14963 + C14964) * C996) *
                C51051 +
            ((C14190 + C14189) * C997 + (C14192 + C14191) * C994 -
             (C14962 + C14961) * C998 - (C14964 + C14963) * C995 +
             (C8202 * C1244 + C51050 * C1248 + C8203 * C3743 + C50942 * C3747) *
                 C999 +
             (C8202 * C1249 + C51050 * C1256 + C8203 * C3749 + C50942 * C3755) *
                 C996) *
                C50970) *
               C2447 +
           (((C8237 + C8238) * C997 + (C8239 + C8240) * C994 - C14183 * C998 -
             C14184 * C995 + C14949 * C999 + C14950 * C996) *
                C51051 +
            (C14185 * C997 + C14186 * C994 - C14951 * C998 - C14952 * C995 +
             (C14965 + C14966) * C999 + (C14967 + C14968) * C996) *
                C50970) *
               C50758) *
              C51034 +
          ((((C14739 + C14740) * C998 -
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C994 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C997) +
             (C14741 + C14742) * C995 - (C15179 + C15180) * C999 -
             (C15181 + C15182) * C996) *
                C51051 +
            ((C15180 + C15179) * C998 -
             ((C14742 + C14741) * C994 + (C14740 + C14739) * C997) +
             (C15182 + C15181) * C995 -
             (C8203 * C3742 + C50942 * C3746 + C8202 * C3743 + C51050 * C3747) *
                 C999 -
             (C8203 * C3748 + C50942 * C3754 + C8202 * C3749 + C51050 * C3755) *
                 C996) *
                C50970) *
               C2447 +
           (((C9975 + C9976) * C998 -
             ((C8439 + C8440) * C994 + (C8441 + C8442) * C997) +
             (C9977 + C9978) * C995 - (C15183 + C15184) * C999 -
             (C15185 + C15186) * C996) *
                C51051 +
            ((C15184 + C15183) * C998 -
             ((C9978 + C9977) * C994 + (C9976 + C9975) * C997) +
             (C15186 + C15185) * C995 -
             (C8203 * C3744 + C50942 * C3750 + C8202 * C3745 + C51050 * C3751) *
                 C999 -
             (C8203 * C3752 + C50942 * C3756 + C8202 * C3753 + C51050 * C3757) *
                 C996) *
                C50970) *
               C50758) *
              C50822) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C458 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C51036 -
             (C14189 + C14190) * C459 - (C14191 + C14192) * C50848) *
                C51051 +
            ((C14190 + C14189) * C458 + (C14192 + C14191) * C51036 -
             (C8203 * C1154 + C50942 * C1158 + C8202 * C1000 + C51050 * C1005) *
                 C459 -
             (C8203 * C1159 + C50942 * C1166 + C8202 * C1006 + C51050 * C1015) *
                 C50848) *
                C50970) *
               C2447 +
           (((C8237 + C8238) * C458 + (C8239 + C8240) * C51036 - C14183 * C459 -
             C14184 * C50848) *
                C51051 +
            (C14185 * C458 + C14186 * C51036 - (C9222 + C9221) * C459 -
             (C9224 + C9223) * C50848) *
                C50970) *
               C50758) *
              C630 +
          ((((C14739 + C14740) * C459 -
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C51036 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C458) +
             (C14741 + C14742) * C50848) *
                C51051 +
            ((C8202 * C1154 + C51050 * C1158 + C8203 * C3460 + C50942 * C3463) *
                 C459 -
             ((C14742 + C14741) * C51036 + (C14740 + C14739) * C458) +
             (C8202 * C1159 + C51050 * C1166 + C8203 * C3464 + C50942 * C3469) *
                 C50848) *
                C50970) *
               C2447 +
           (((C9975 + C9976) * C459 -
             ((C8439 + C8440) * C51036 + (C8441 + C8442) * C458) +
             (C9977 + C9978) * C50848) *
                C51051 +
            ((C8202 * C1155 + C51050 * C1160 + C8203 * C3461 + C50942 * C3465) *
                 C459 -
             ((C9978 + C9977) * C51036 + (C9976 + C9975) * C458) +
             (C8202 * C1161 + C51050 * C1167 + C8203 * C3466 + C50942 * C3470) *
                 C50848) *
                C50970) *
               C50758) *
              C631 +
          ((((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                 C458 +
             (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                 C51036 -
             (C14743 + C14744) * C459 - (C14745 + C14746) * C50848) *
                C51051 +
            ((C14744 + C14743) * C458 + (C14746 + C14745) * C51036 -
             (C8203 * C3636 + C50942 * C3638 + C8202 * C3460 + C51050 * C3463) *
                 C459 -
             (C8203 * C3639 + C50942 * C3642 + C8202 * C3464 + C51050 * C3469) *
                 C50848) *
                C50970) *
               C2447 +
           (((C8807 + C8808) * C458 + (C8809 + C8810) * C51036 -
             (C14396 + C14395) * C459 - (C14398 + C14397) * C50848) *
                C51051 +
            ((C14395 + C14396) * C458 + (C14397 + C14398) * C51036 -
             (C8203 * C3637 + C50942 * C3640 + C8202 * C3461 + C51050 * C3465) *
                 C459 -
             (C8203 * C3641 + C50942 * C3643 + C8202 * C3466 + C51050 * C3470) *
                 C50848) *
                C50970) *
               C50758) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C458 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C51036 -
             (C14189 + C14190) * C459 - (C14191 + C14192) * C50848) *
                C51051 +
            ((C14190 + C14189) * C458 + (C14192 + C14191) * C51036 -
             (C8203 * C1154 + C50942 * C1158 + C8202 * C1000 + C51050 * C1005) *
                 C459 -
             (C8203 * C1159 + C50942 * C1166 + C8202 * C1006 + C51050 * C1015) *
                 C50848) *
                C50970) *
               C2447 +
           (((C8237 + C8238) * C458 + (C8239 + C8240) * C51036 - C14183 * C459 -
             C14184 * C50848) *
                C51051 +
            (C14185 * C458 + C14186 * C51036 - (C9222 + C9221) * C459 -
             (C9224 + C9223) * C50848) *
                C50970) *
               C50758) *
              C50806 * C295 +
          (((C14185 * C459 -
             ((C8240 + C8239) * C51036 + (C8238 + C8237) * C458) +
             C14186 * C50848) *
                C51051 +
            ((C9221 + C9222) * C459 - (C14184 * C51036 + C14183 * C458) +
             (C9223 + C9224) * C50848) *
                C50970) *
               C2447 +
           ((C14187 * C459 -
             ((C8244 + C8243) * C51036 + (C8242 + C8241) * C458) +
             C14188 * C50848) *
                C51051 +
            ((C9225 + C9226) * C459 - (C8639 * C51036 + C8638 * C458) +
             (C9227 + C9228) * C50848) *
                C50970) *
               C50758) *
              C50806 * C296 +
          ((C8643 * C51051 +
            (C14187 * C458 + C14188 * C51036 - (C9226 + C9225) * C459 -
             (C9228 + C9227) * C50848) *
                C50970) *
               C2447 +
           (((C8248 + C8247) * C458 + (C8246 + C8245) * C51036 -
             (C8635 + C8634) * C459 - (C8637 + C8636) * C50848) *
                C51051 +
            ((C8634 + C8635) * C458 + (C8636 + C8637) * C51036 -
             (C8203 * C1157 + C50942 * C1164 + C8202 * C1003 + C51050 * C1011) *
                 C459 -
             (C8203 * C1165 + C50942 * C1169 + C8202 * C1012 + C51050 * C1018) *
                 C50848) *
                C50970) *
               C50758) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C1240 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C1236 -
            (C14189 + C14190) * C1241 - (C14191 + C14192) * C1237 +
            (C14961 + C14962) * C1242 + (C14963 + C14964) * C1238 -
            (C15325 + C15326) * C1243 - (C15327 + C15328) * C1239) *
               C51051 +
           ((C14190 + C14189) * C1240 + (C14192 + C14191) * C1236 -
            (C14962 + C14961) * C1241 - (C14964 + C14963) * C1237 +
            (C15326 + C15325) * C1242 + (C15328 + C15327) * C1238 -
            (C8203 * C6461 + C50942 * C6463 + C8202 * C6279 + C51050 * C6282) *
                C1243 -
            (C8203 * C6464 + C50942 * C6467 + C8202 * C6283 + C51050 * C6288) *
                C1239) *
               C50970) *
              C2447 +
          (((C8237 + C8238) * C1240 + (C8239 + C8240) * C1236 - C14183 * C1241 -
            C14184 * C1237 + C14949 * C1242 + C14950 * C1238 -
            (C14966 + C14965) * C1243 - (C14968 + C14967) * C1239) *
               C51051 +
           (C14185 * C1240 + C14186 * C1236 - C14951 * C1241 - C14952 * C1237 +
            (C14965 + C14966) * C1242 + (C14967 + C14968) * C1238 -
            (C8203 * C6462 + C50942 * C6465 + C8202 * C6280 + C51050 * C6284) *
                C1243 -
            (C8203 * C6466 + C50942 * C6468 + C8202 * C6285 + C51050 * C6289) *
                C1239) *
               C50970) *
              C50758) *
         C50806 * C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C1730 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C1728 -
             (C14189 + C14190) * C1731 - (C14191 + C14192) * C50848) *
                C51051 +
            ((C14190 + C14189) * C1730 + (C14192 + C14191) * C1728 -
             (C14962 + C14961) * C1731 - (C14964 + C14963) * C50848) *
                C50970) *
               C2447 +
           (((C8237 + C8238) * C1730 + (C8239 + C8240) * C1728 -
             C14183 * C1731 - C14184 * C50848) *
                C51051 +
            (C14185 * C1730 + C14186 * C1728 - C14951 * C1731 -
             C14952 * C50848) *
                C50970) *
               C50758) *
              C50806 * C51080 +
          (((C14185 * C1731 -
             ((C8240 + C8239) * C1728 + (C8238 + C8237) * C1730) +
             C14186 * C50848) *
                C51051 +
            (C14949 * C1731 - (C14184 * C1728 + C14183 * C1730) +
             C14950 * C50848) *
                C50970) *
               C2447 +
           ((C14187 * C1731 -
             ((C8244 + C8243) * C1728 + (C8242 + C8241) * C1730) +
             C14188 * C50848) *
                C51051 +
            ((C9225 + C9226) * C1731 - (C8639 * C1728 + C8638 * C1730) +
             (C9227 + C9228) * C50848) *
                C50970) *
               C50758) *
              C50806 * C51065 +
          ((C10135 * C51051 +
            (C14187 * C1730 + C14188 * C1728 - (C9226 + C9225) * C1731 -
             (C9228 + C9227) * C50848) *
                C50970) *
               C2447 +
           (((C8248 + C8247) * C1730 + (C8246 + C8245) * C1728 -
             (C8635 + C8634) * C1731 - (C8637 + C8636) * C50848) *
                C51051 +
            ((C8634 + C8635) * C1730 + (C8636 + C8637) * C1728 -
             (C8203 * C1157 + C50942 * C1164 + C8202 * C1003 + C51050 * C1011) *
                 C1731 -
             (C8203 * C1165 + C50942 * C1169 + C8202 * C1012 + C51050 * C1018) *
                 C50848) *
                C50970) *
               C50758) *
              C50806 * C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                  C1730 +
              (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                  C1728 -
              (C14189 + C14190) * C1731 - (C14191 + C14192) * C50848) *
                 C51051 +
             ((C14190 + C14189) * C1730 + (C14192 + C14191) * C1728 -
              (C14962 + C14961) * C1731 - (C14964 + C14963) * C50848) *
                 C50970) *
                C2447 +
            (((C8237 + C8238) * C1730 + (C8239 + C8240) * C1728 -
              C14183 * C1731 - C14184 * C50848) *
                 C51051 +
             (C14185 * C1730 + C14186 * C1728 - C14951 * C1731 -
              C14952 * C50848) *
                 C50970) *
                C50758) *
               C51034 +
           ((((C14739 + C14740) * C1731 -
              ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                   C1728 +
               (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                   C1730) +
              (C14741 + C14742) * C50848) *
                 C51051 +
             ((C15180 + C15179) * C1731 -
              ((C14742 + C14741) * C1728 + (C14740 + C14739) * C1730) +
              (C15182 + C15181) * C50848) *
                 C50970) *
                C2447 +
            ((C15975 * C1731 -
              ((C8439 + C8440) * C1728 + (C8441 + C8442) * C1730) +
              C15976 * C50848) *
                 C51051 +
             ((C15184 + C15183) * C1731 - (C15977 * C1728 + C15978 * C1730) +
              (C15186 + C15185) * C50848) *
                 C50970) *
                C50758) *
               C50822) *
              C1464 +
          ((((C14185 * C1731 -
              ((C8240 + C8239) * C1728 + (C8238 + C8237) * C1730) +
              C14186 * C50848) *
                 C51051 +
             (C14949 * C1731 - (C14184 * C1728 + C14183 * C1730) +
              C14950 * C50848) *
                 C50970) *
                C2447 +
            ((C14187 * C1731 -
              ((C8244 + C8243) * C1728 + (C8242 + C8241) * C1730) +
              C14188 * C50848) *
                 C51051 +
             ((C9225 + C9226) * C1731 - (C8639 * C1728 + C8638 * C1730) +
              (C9227 + C9228) * C50848) *
                 C50970) *
                C50758) *
               C51034 +
           ((((C8442 + C8441) * C1730 + (C8440 + C8439) * C1728 -
              C15978 * C1731 - C15977 * C50848) *
                 C51051 +
             (C15975 * C1730 + C15976 * C1728 - (C15183 + C15184) * C1731 -
              (C15185 + C15186) * C50848) *
                 C50970) *
                C2447 +
            (((C8438 + C8437) * C1730 + (C8436 + C8435) * C1728 -
              (C9980 + C9979) * C1731 - (C9982 + C9981) * C50848) *
                 C51051 +
             ((C9979 + C9980) * C1730 + (C9981 + C9982) * C1728 -
              (C8203 * C3462 + C50942 * C3467 + C8202 * C1156 +
               C51050 * C1162) *
                  C1731 -
              (C8203 * C3468 + C50942 * C3471 + C8202 * C1163 +
               C51050 * C1168) *
                  C50848) *
                 C50970) *
                C50758) *
               C50822) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C1999 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C51082 -
             (C14189 + C14190) * C2000 - (C14191 + C14192) * C51071 +
             (C14961 + C14962) * C2001 + (C14963 + C14964) * C1998) *
                C51051 +
            ((C14190 + C14189) * C1999 + (C14192 + C14191) * C51082 -
             (C14962 + C14961) * C2000 - (C14964 + C14963) * C51071 +
             (C15326 + C15325) * C2001 + (C15328 + C15327) * C1998) *
                C50970) *
               C2447 +
           (((C8237 + C8238) * C1999 + (C8239 + C8240) * C51082 -
             C14183 * C2000 - C14184 * C51071 + C14949 * C2001 +
             C14950 * C1998) *
                C51051 +
            (C14185 * C1999 + C14186 * C51082 - C14951 * C2000 -
             C14952 * C51071 + (C14965 + C14966) * C2001 +
             (C14967 + C14968) * C1998) *
                C50970) *
               C50758) *
              C50806 * C1464 +
          (((C14185 * C2000 -
             ((C8240 + C8239) * C51082 + (C8238 + C8237) * C1999) +
             C14186 * C51071 - C14951 * C2001 - C14952 * C1998) *
                C51051 +
            (C14949 * C2000 - (C14184 * C51082 + C14183 * C1999) +
             C14950 * C51071 - (C14966 + C14965) * C2001 -
             (C14968 + C14967) * C1998) *
                C50970) *
               C2447 +
           ((C14187 * C2000 -
             ((C8244 + C8243) * C51082 + (C8242 + C8241) * C1999) +
             C14188 * C51071 - (C9226 + C9225) * C2001 -
             (C9228 + C9227) * C1998) *
                C51051 +
            ((C9225 + C9226) * C2000 - (C8639 * C51082 + C8638 * C1999) +
             (C9227 + C9228) * C51071 -
             (C8203 * C7079 + C50942 * C7080 + C8202 * C1246 + C51050 * C1252) *
                 C2001 -
             (C8203 * C7081 + C50942 * C7082 + C8202 * C1253 + C51050 * C1258) *
                 C1998) *
                C50970) *
               C50758) *
              C50806 * C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C118 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C50836) *
                C51051 +
            ((C8202 * C460 + C51050 * C466 + C8203 * C864 + C50942 * C872) *
                 C118 +
             (C8202 * C467 + C51050 * C478 + C8203 * C873 + C50942 * C888) *
                 C50836) *
                C50970) *
               C2447 +
           (((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C51051 +
            ((C8626 + C8625) * C118 + (C8628 + C8627) * C50836) * C50970) *
               C50758) *
              C50806 * C113 -
          (((C8639 * C50836 + C8638 * C118) * C50970 +
            ((C8244 + C8243) * C50836 + (C8242 + C8241) * C118) * C51051) *
               C50758 +
           (((C8627 + C8628) * C50836 + (C8625 + C8626) * C118) * C50970 +
            ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C51051) *
               C2447) *
              C50806 * C114 +
          ((C8261 * C51051 +
            ((C8631 + C8630) * C118 + (C8633 + C8632) * C50836) * C50970) *
               C2447 +
           (((C8248 + C8247) * C118 + (C8246 + C8245) * C50836) * C51051 +
            ((C8634 + C8635) * C118 + (C8636 + C8637) * C50836) * C50970) *
               C50758) *
              C50806 * C115 -
          ((((C8203 * C1598 + C50942 * C1599 + C8202 * C475 + C51050 * C482) *
                 C50836 +
             (C8203 * C1596 + C50942 * C1597 + C8202 * C464 + C51050 * C474) *
                 C118) *
                C50970 +
            ((C8252 + C8251) * C50836 + (C8250 + C8249) * C118) * C51051) *
               C50758 +
           (((C8637 + C8636) * C50836 + (C8635 + C8634) * C118) * C50970 +
            C8262 * C51051) *
               C2447) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                  C118 +
              (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                  C50836) *
                 C51051 +
             ((C14190 + C14189) * C118 + (C14192 + C14191) * C50836) * C50970) *
                C2447 +
            (((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C51051 +
             (C14185 * C118 + C14186 * C50836) * C50970) *
                C50758) *
               C630 -
           ((((C9978 + C9977) * C50836 + (C9976 + C9975) * C118) * C50970 +
             ((C8439 + C8440) * C50836 + (C8441 + C8442) * C118) * C51051) *
                C50758 +
            (((C8203 * C881 + C50942 * C892 + C8202 * C873 + C51050 * C888) *
                  C50836 +
              (C8203 * C868 + C50942 * C880 + C8202 * C864 + C51050 * C872) *
                  C118) *
                 C50970 +
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C50836 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C118) *
                 C51051) *
                C2447) *
               C631 +
           ((((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                  C118 +
              (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                  C50836) *
                 C51051 +
             ((C8202 * C868 + C51050 * C880 + C8203 * C3298 + C50942 * C3302) *
                  C118 +
              (C8202 * C881 + C51050 * C892 + C8203 * C3303 + C50942 * C3310) *
                  C50836) *
                 C50970) *
                C2447 +
            (((C8807 + C8808) * C118 + (C8809 + C8810) * C50836) * C51051 +
             ((C14395 + C14396) * C118 + (C14397 + C14398) * C50836) * C50970) *
                C50758) *
               C632) *
              C51027 +
          (((((C8442 + C8441) * C118 + (C8440 + C8439) * C50836) * C51051 +
             ((C9975 + C9976) * C118 + (C9977 + C9978) * C50836) * C50970) *
                C2447 +
            (((C8438 + C8437) * C118 + (C8436 + C8435) * C50836) * C51051 +
             ((C9979 + C9980) * C118 + (C9981 + C9982) * C50836) * C50970) *
                C50758) *
               C631 -
           (((C8639 * C50836 + C8638 * C118) * C50970 +
             ((C8244 + C8243) * C50836 + (C8242 + C8241) * C118) * C51051) *
                C50758 +
            ((C14184 * C50836 + C14183 * C118) * C50970 +
             ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C51051) *
                C2447) *
               C630 -
           ((((C8203 * C4246 + C50942 * C4247 + C8202 * C885 + C51050 * C894) *
                  C50836 +
              (C8203 * C4244 + C50942 * C4245 + C8202 * C870 + C51050 * C884) *
                  C118) *
                 C50970 +
             ((C8814 + C8813) * C50836 + (C8812 + C8811) * C118) * C51051) *
                C50758 +
            (((C14398 + C14397) * C50836 + (C14396 + C14395) * C118) * C50970 +
             ((C8810 + C8809) * C50836 + (C8808 + C8807) * C118) * C51051) *
                C2447) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                  C118 +
              (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                  C50836) *
                 C51051 +
             ((C8202 * C460 + C51050 * C466 + C8203 * C864 + C50942 * C872) *
                  C118 +
              (C8202 * C467 + C51050 * C478 + C8203 * C873 + C50942 * C888) *
                  C50836) *
                 C50970) *
                C2447 +
            (((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C51051 +
             ((C8626 + C8625) * C118 + (C8628 + C8627) * C50836) * C50970) *
                C50758) *
               C51034 -
           ((((C9978 + C9977) * C50836 + (C9976 + C9975) * C118) * C50970 +
             ((C8439 + C8440) * C50836 + (C8441 + C8442) * C118) * C51051) *
                C50758 +
            (((C8203 * C881 + C50942 * C892 + C8202 * C873 + C51050 * C888) *
                  C50836 +
              (C8203 * C868 + C50942 * C880 + C8202 * C864 + C51050 * C872) *
                  C118) *
                 C50970 +
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C50836 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C118) *
                 C51051) *
                C2447) *
               C50822) *
              C295 +
          (((((C8442 + C8441) * C118 + (C8440 + C8439) * C50836) * C51051 +
             ((C9975 + C9976) * C118 + (C9977 + C9978) * C50836) * C50970) *
                C2447 +
            (((C8438 + C8437) * C118 + (C8436 + C8435) * C50836) * C51051 +
             ((C9979 + C9980) * C118 + (C9981 + C9982) * C50836) * C50970) *
                C50758) *
               C50822 -
           (((C8639 * C50836 + C8638 * C118) * C50970 +
             ((C8244 + C8243) * C50836 + (C8242 + C8241) * C118) * C51051) *
                C50758 +
            (((C8627 + C8628) * C50836 + (C8625 + C8626) * C118) * C50970 +
             ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C51051) *
                C2447) *
               C51034) *
              C296 +
          (((C8261 * C51051 +
             ((C8631 + C8630) * C118 + (C8633 + C8632) * C50836) * C50970) *
                C2447 +
            (((C8248 + C8247) * C118 + (C8246 + C8245) * C50836) * C51051 +
             ((C8634 + C8635) * C118 + (C8636 + C8637) * C50836) * C50970) *
                C50758) *
               C51034 -
           ((((C8203 * C887 + C50942 * C895 + C8202 * C879 + C51050 * C891) *
                  C50836 +
              (C8203 * C871 + C50942 * C886 + C8202 * C867 + C51050 * C878) *
                  C118) *
                 C50970 +
             ((C8446 + C8445) * C50836 + (C8444 + C8443) * C118) * C51051) *
                C50758 +
            (((C9982 + C9981) * C50836 + (C9980 + C9979) * C118) * C50970 +
             C8451 * C51051) *
                C2447) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C118 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C50836) *
                C51051 +
            ((C14190 + C14189) * C118 + (C14192 + C14191) * C50836) * C50970) *
               C2447 +
           (((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C51051 +
            (C14185 * C118 + C14186 * C50836) * C50970) *
               C50758) *
              C745 -
          ((((C9978 + C9977) * C50836 + (C9976 + C9975) * C118) * C50970 +
            ((C8439 + C8440) * C50836 + (C8441 + C8442) * C118) * C51051) *
               C50758 +
           (((C8203 * C881 + C50942 * C892 + C8202 * C873 + C51050 * C888) *
                 C50836 +
             (C8203 * C868 + C50942 * C880 + C8202 * C864 + C51050 * C872) *
                 C118) *
                C50970 +
            ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                 C50836 +
             (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                 C118) *
                C51051) *
               C2447) *
              C746 +
          ((((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                 C118 +
             (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                 C50836) *
                C51051 +
            ((C8202 * C868 + C51050 * C880 + C8203 * C3298 + C50942 * C3302) *
                 C118 +
             (C8202 * C881 + C51050 * C892 + C8203 * C3303 + C50942 * C3310) *
                 C50836) *
                C50970) *
               C2447 +
           (((C8807 + C8808) * C118 + (C8809 + C8810) * C50836) * C51051 +
            ((C14395 + C14396) * C118 + (C14397 + C14398) * C50836) * C50970) *
               C50758) *
              C747 -
          ((((C8203 * C3309 + C50942 * C3313 + C8202 * C3305 + C51050 * C3311) *
                 C50836 +
             (C8203 * C3301 + C50942 * C3308 + C8202 * C3299 + C51050 * C3304) *
                 C118) *
                C50970 +
            ((C8203 * C3022 + C50942 * C3026 + C8202 * C758 + C51050 * C764) *
                 C50836 +
             (C8203 * C3017 + C50942 * C3021 + C8202 * C752 + C51050 * C759) *
                 C118) *
                C51051) *
               C50758 +
           (((C8203 * C3307 + C50942 * C3312 + C8202 * C3303 + C51050 * C3310) *
                 C50836 +
             (C8203 * C3300 + C50942 * C3306 + C8202 * C3298 + C51050 * C3302) *
                 C118) *
                C50970 +
            ((C8203 * C3020 + C50942 * C3025 + C8202 * C760 + C51050 * C765) *
                 C50836 +
             (C8203 * C3016 + C50942 * C3019 + C8202 * C753 + C51050 * C761) *
                 C118) *
                C51051) *
               C2447) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C458 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C51036 -
             (C14189 + C14190) * C459 - (C14191 + C14192) * C50848) *
                C51051 +
            ((C14190 + C14189) * C458 + (C14192 + C14191) * C51036 -
             (C8203 * C1154 + C50942 * C1158 + C8202 * C1000 + C51050 * C1005) *
                 C459 -
             (C8203 * C1159 + C50942 * C1166 + C8202 * C1006 + C51050 * C1015) *
                 C50848) *
                C50970) *
               C2447 +
           (((C8237 + C8238) * C458 + (C8239 + C8240) * C51036 - C14183 * C459 -
             C14184 * C50848) *
                C51051 +
            (C14185 * C458 + C14186 * C51036 - (C9222 + C9221) * C459 -
             (C9224 + C9223) * C50848) *
                C50970) *
               C50758) *
              C50806 * C295 +
          (((C14185 * C459 -
             ((C8240 + C8239) * C51036 + (C8238 + C8237) * C458) +
             C14186 * C50848) *
                C51051 +
            ((C9221 + C9222) * C459 - (C14184 * C51036 + C14183 * C458) +
             (C9223 + C9224) * C50848) *
                C50970) *
               C2447 +
           ((C14187 * C459 -
             ((C8244 + C8243) * C51036 + (C8242 + C8241) * C458) +
             C14188 * C50848) *
                C51051 +
            ((C9225 + C9226) * C459 - (C8639 * C51036 + C8638 * C458) +
             (C9227 + C9228) * C50848) *
                C50970) *
               C50758) *
              C50806 * C296 +
          ((C8643 * C51051 +
            (C14187 * C458 + C14188 * C51036 - (C9226 + C9225) * C459 -
             (C9228 + C9227) * C50848) *
                C50970) *
               C2447 +
           (((C8248 + C8247) * C458 + (C8246 + C8245) * C51036 -
             (C8635 + C8634) * C459 - (C8637 + C8636) * C50848) *
                C51051 +
            ((C8634 + C8635) * C458 + (C8636 + C8637) * C51036 -
             (C8203 * C1157 + C50942 * C1164 + C8202 * C1003 + C51050 * C1011) *
                 C459 -
             (C8203 * C1165 + C50942 * C1169 + C8202 * C1012 + C51050 * C1018) *
                 C50848) *
                C50970) *
               C50758) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C458 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C51036 -
             (C14189 + C14190) * C459 - (C14191 + C14192) * C50848) *
                C51051 +
            ((C14190 + C14189) * C458 + (C14192 + C14191) * C51036 -
             (C8203 * C1154 + C50942 * C1158 + C8202 * C1000 + C51050 * C1005) *
                 C459 -
             (C8203 * C1159 + C50942 * C1166 + C8202 * C1006 + C51050 * C1015) *
                 C50848) *
                C50970) *
               C2447 +
           (((C8237 + C8238) * C458 + (C8239 + C8240) * C51036 - C14183 * C459 -
             C14184 * C50848) *
                C51051 +
            (C14185 * C458 + C14186 * C51036 - (C9222 + C9221) * C459 -
             (C9224 + C9223) * C50848) *
                C50970) *
               C50758) *
              C630 +
          ((((C14739 + C14740) * C459 -
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C51036 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C458) +
             (C14741 + C14742) * C50848) *
                C51051 +
            ((C8202 * C1154 + C51050 * C1158 + C8203 * C3460 + C50942 * C3463) *
                 C459 -
             ((C14742 + C14741) * C51036 + (C14740 + C14739) * C458) +
             (C8202 * C1159 + C51050 * C1166 + C8203 * C3464 + C50942 * C3469) *
                 C50848) *
                C50970) *
               C2447 +
           (((C9975 + C9976) * C459 -
             ((C8439 + C8440) * C51036 + (C8441 + C8442) * C458) +
             (C9977 + C9978) * C50848) *
                C51051 +
            ((C8202 * C1155 + C51050 * C1160 + C8203 * C3461 + C50942 * C3465) *
                 C459 -
             ((C9978 + C9977) * C51036 + (C9976 + C9975) * C458) +
             (C8202 * C1161 + C51050 * C1167 + C8203 * C3466 + C50942 * C3470) *
                 C50848) *
                C50970) *
               C50758) *
              C631 +
          ((((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                 C458 +
             (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                 C51036 -
             (C14743 + C14744) * C459 - (C14745 + C14746) * C50848) *
                C51051 +
            ((C14744 + C14743) * C458 + (C14746 + C14745) * C51036 -
             (C8203 * C3636 + C50942 * C3638 + C8202 * C3460 + C51050 * C3463) *
                 C459 -
             (C8203 * C3639 + C50942 * C3642 + C8202 * C3464 + C51050 * C3469) *
                 C50848) *
                C50970) *
               C2447 +
           (((C8807 + C8808) * C458 + (C8809 + C8810) * C51036 -
             (C14396 + C14395) * C459 - (C14398 + C14397) * C50848) *
                C51051 +
            ((C14395 + C14396) * C458 + (C14397 + C14398) * C51036 -
             (C8203 * C3637 + C50942 * C3640 + C8202 * C3461 + C51050 * C3465) *
                 C459 -
             (C8203 * C3641 + C50942 * C3643 + C8202 * C3466 + C51050 * C3470) *
                 C50848) *
                C50970) *
               C50758) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C50836) *
                C50906 * C2447 +
            ((C2489 + C2490 + C2491) * C118 +
             (C2492 + C2493 + C2494) * C50836) *
                C50906 * C50758) *
               C1358 -
           (((C2677 + C2678 + C2679) * C50836 +
             (C2680 + C2681 + C2682) * C118) *
                C50906 * C50758 +
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C50836 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C118) *
                C50906 * C2447) *
               C50822) *
              C51080 +
          ((((C2682 + C2681 + C2680) * C118 +
             (C2679 + C2678 + C2677) * C50836) *
                C50906 * C2447 +
            ((C2683 + C2684 + C2685) * C118 +
             (C2686 + C2687 + C2688) * C50836) *
                C50906 * C50758) *
               C50822 -
           (((C2495 + C2496 + C2497) * C50836 +
             (C2498 + C2499 + C2500) * C118) *
                C50906 * C50758 +
            ((C2494 + C2493 + C2492) * C50836 +
             (C2491 + C2490 + C2489) * C118) *
                C50906 * C2447) *
               C1358) *
              C51065 +
          ((((C2500 + C2499 + C2498) * C118 +
             (C2497 + C2496 + C2495) * C50836) *
                C50906 * C2447 +
            ((C2501 + C2502 + C2503) * C118 +
             (C2504 + C2505 + C2506) * C50836) *
                C50906 * C50758) *
               C1358 -
           (((C2451 * C754 + C2446 * C762 + C2450 * C647 + C2445 * C653 +
              C2449 * C304 + C2444 * C316) *
                 C50836 +
             (C2451 * C750 + C2446 * C755 + C2450 * C638 + C2445 * C646 +
              C2449 * C298 + C2444 * C305) *
                 C118) *
                C50906 * C50758 +
            ((C2688 + C2687 + C2686) * C50836 +
             (C2685 + C2684 + C2683) * C118) *
                C50906 * C2447) *
               C50822) *
              C1362)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C50906 * C108 +
            (C178 + C179) * C50906 * C109 + C192 * C110 + C193 * C111) *
               C1358 -
           (C357 * C111 + C358 * C110 + (C351 + C352) * C50906 * C109 +
            ((C117 * C310 + C50890 * C319) * C50836 +
             (C117 * C301 + C50890 * C311) * C118) *
                C50906 * C108) *
               C50822) *
              C51080 +
          (((C352 + C351) * C50906 * C108 + (C350 + C349) * C50906 * C109 +
            (C348 + C347) * C50906 * C110 + (C353 + C354) * C50906 * C111) *
               C50822 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50906 * C109 +
            (C179 + C178) * C50906 * C108) *
               C1358) *
              C51065 +
          ((C192 * C108 + C193 * C109 + (C185 + C184) * C50906 * C110 +
            (C186 + C187) * C50906 * C111) *
               C1358 -
           (((C117 * C314 + C50890 * C321) * C50836 +
             (C117 * C303 + C50890 * C315) * C118) *
                C50906 * C111 +
            (C354 + C353) * C50906 * C110 + C357 * C109 + C358 * C108) *
               C50822) *
              C1362)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C5336 +
             (C5692 * C118 + C5693 * C50836) * C5337 +
             (C5694 * C118 + C5695 * C50836) * C5338) *
                C2447 +
            ((C178 + C179) * C5336 + (C5340 + C5341) * C5337 +
             (C5342 + C5343) * C5338) *
                C50758) *
               C1358 -
           (((C5514 + C5515) * C5338 + (C5502 + C5503) * C5337 +
             (C351 + C352) * C5336) *
                C50758 +
            ((C6129 * C50836 + C6128 * C118) * C5338 +
             (C6127 * C50836 + C6126 * C118) * C5337 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C5336) *
                C2447) *
               C50822) *
              C51080 +
          ((((C352 + C351) * C5336 + (C5503 + C5502) * C5337 +
             (C5515 + C5514) * C5338) *
                C2447 +
            ((C350 + C349) * C5336 + (C5504 + C5505) * C5337 +
             (C5516 + C5517) * C5338) *
                C50758) *
               C50822 -
           (((C5344 + C5345) * C5338 + (C5346 + C5347) * C5337 +
             (C181 + C180) * C5336) *
                C50758 +
            ((C5343 + C5342) * C5338 + (C5341 + C5340) * C5337 +
             (C179 + C178) * C5336) *
                C2447) *
               C1358) *
              C51065 +
          (((C188 * C5336 + (C5347 + C5346) * C5337 + (C5345 + C5344) * C5338) *
                C2447 +
            (C189 * C5336 + (C5348 + C5349) * C5337 + (C5350 + C5351) * C5338) *
                C50758) *
               C1358 -
           ((((C117 * C1165 + C50890 * C1169) * C50836 +
              (C117 * C1157 + C50890 * C1164) * C118) *
                 C5338 +
             (C1624 * C50836 + C1623 * C118) * C5337 + C355 * C5336) *
                C50758 +
            ((C5517 + C5516) * C5338 + (C5505 + C5504) * C5337 + C356 * C5336) *
                C2447) *
               C50822) *
              C1362)) /
            (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C50836) *
                C50906 * C2447 +
            ((C2489 + C2490 + C2491) * C118 +
             (C2492 + C2493 + C2494) * C50836) *
                C50906 * C50758) *
               C51081 -
           (((C2677 + C2678 + C2679) * C50836 +
             (C2680 + C2681 + C2682) * C118) *
                C50906 * C50758 +
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C50836 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C118) *
                C50906 * C2447) *
               C51068 +
           (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
              C2451 * C3016 + C2446 * C3019) *
                 C118 +
             (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
              C2451 * C3020 + C2446 * C3025) *
                 C50836) *
                C50906 * C2447 +
            ((C3041 + C3042 + C3043) * C118 +
             (C3044 + C3045 + C3046) * C50836) *
                C50906 * C50758) *
               C1463) *
              C1464 +
          ((((C2682 + C2681 + C2680) * C118 +
             (C2679 + C2678 + C2677) * C50836) *
                C50906 * C2447 +
            ((C2683 + C2684 + C2685) * C118 +
             (C2686 + C2687 + C2688) * C50836) *
                C50906 * C50758) *
               C51068 -
           (((C2495 + C2496 + C2497) * C50836 +
             (C2498 + C2499 + C2500) * C118) *
                C50906 * C50758 +
            ((C2494 + C2493 + C2492) * C50836 +
             (C2491 + C2490 + C2489) * C118) *
                C50906 * C2447) *
               C51081 -
           (((C2451 * C3023 + C2446 * C3027 + C2450 * C756 + C2445 * C763 +
              C2449 * C645 + C2444 * C652) *
                 C50836 +
             (C2451 * C3018 + C2446 * C3024 + C2450 * C751 + C2445 * C757 +
              C2449 * C637 + C2444 * C644) *
                 C118) *
                C50906 * C50758 +
            ((C3046 + C3045 + C3044) * C50836 +
             (C3043 + C3042 + C3041) * C118) *
                C50906 * C2447) *
               C1463) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C50906 * C108 +
            (C178 + C179) * C50906 * C109 + C192 * C110 + C193 * C111) *
               C51081 -
           (C357 * C111 + C358 * C110 + (C351 + C352) * C50906 * C109 +
            ((C117 * C310 + C50890 * C319) * C50836 +
             (C117 * C301 + C50890 * C311) * C118) *
                C50906 * C108) *
               C51068 +
           (((C117 * C635 + C50890 * C640) * C118 +
             (C117 * C641 + C50890 * C650) * C50836) *
                C50906 * C108 +
            (C674 + C675) * C50906 * C109 + (C676 + C677) * C50906 * C110 +
            (C678 + C679) * C50906 * C111) *
               C1463) *
              C1464 +
          (((C352 + C351) * C50906 * C108 + (C350 + C349) * C50906 * C109 +
            (C348 + C347) * C50906 * C110 + (C353 + C354) * C50906 * C111) *
               C51068 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50906 * C109 +
            (C179 + C178) * C50906 * C108) *
               C51081 -
           (((C117 * C648 + C50890 * C654) * C50836 +
             (C117 * C639 + C50890 * C649) * C118) *
                C50906 * C111 +
            (C679 + C678) * C50906 * C110 + (C677 + C676) * C50906 * C109 +
            (C675 + C674) * C50906 * C108) *
               C1463) *
              C50779)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C5336 +
             (C5692 * C118 + C5693 * C50836) * C5337 +
             (C5694 * C118 + C5695 * C50836) * C5338) *
                C2447 +
            ((C178 + C179) * C5336 + (C5340 + C5341) * C5337 +
             (C5342 + C5343) * C5338) *
                C50758) *
               C51081 -
           (((C5514 + C5515) * C5338 + (C5502 + C5503) * C5337 +
             (C351 + C352) * C5336) *
                C50758 +
            ((C6129 * C50836 + C6128 * C118) * C5338 +
             (C6127 * C50836 + C6126 * C118) * C5337 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C5336) *
                C2447) *
               C51068 +
           ((((C117 * C635 + C50890 * C640) * C118 +
              (C117 * C641 + C50890 * C650) * C50836) *
                 C5336 +
             (C6130 * C118 + C6131 * C50836) * C5337 +
             (C6132 * C118 + C6133 * C50836) * C5338) *
                C2447 +
            ((C674 + C675) * C5336 + (C5862 + C5863) * C5337 +
             (C5864 + C5865) * C5338) *
                C50758) *
               C1463) *
              C1464 +
          ((((C352 + C351) * C5336 + (C5503 + C5502) * C5337 +
             (C5515 + C5514) * C5338) *
                C2447 +
            ((C350 + C349) * C5336 + (C5504 + C5505) * C5337 +
             (C5516 + C5517) * C5338) *
                C50758) *
               C51068 -
           (((C5344 + C5345) * C5338 + (C5346 + C5347) * C5337 +
             (C181 + C180) * C5336) *
                C50758 +
            ((C5343 + C5342) * C5338 + (C5341 + C5340) * C5337 +
             (C179 + C178) * C5336) *
                C2447) *
               C51081 -
           ((((C117 * C3468 + C50890 * C3471) * C50836 +
              (C117 * C3462 + C50890 * C3467) * C118) *
                 C5338 +
             ((C117 * C885 + C50890 * C894) * C50836 +
              (C117 * C870 + C50890 * C884) * C118) *
                 C5337 +
             (C677 + C676) * C5336) *
                C50758 +
            ((C5865 + C5864) * C5338 + (C5863 + C5862) * C5337 +
             (C675 + C674) * C5336) *
                C2447) *
               C1463) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C458 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C51036 -
             (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
              C2449 * C460 + C2444 * C466) *
                 C459 -
             (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
              C2449 * C467 + C2444 * C478) *
                 C50848) *
                C50906 * C2447 +
            ((C2489 + C2490 + C2491) * C458 + (C2492 + C2493 + C2494) * C51036 -
             (C2859 + C2860 + C2861) * C459 -
             (C2862 + C2863 + C2864) * C50848) *
                C50906 * C50758) *
               C1358 +
           (((C2449 * C864 + C2444 * C872 + C2450 * C868 + C2445 * C880 +
              C2451 * C3298 + C2446 * C3302) *
                 C459 -
             ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
               C2449 * C310 + C2444 * C319) *
                  C51036 +
              (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
               C2449 * C301 + C2444 * C311) *
                  C458) +
             (C2449 * C873 + C2444 * C888 + C2450 * C881 + C2445 * C892 +
              C2451 * C3303 + C2446 * C3310) *
                 C50848) *
                C50906 * C2447 +
            ((C4261 + C4262 + C4263) * C459 -
             ((C2677 + C2678 + C2679) * C51036 +
              (C2680 + C2681 + C2682) * C458) +
             (C4264 + C4265 + C4266) * C50848) *
                C50906 * C50758) *
               C50822) *
              C1464 +
          ((((C2861 + C2860 + C2859) * C459 -
             ((C2494 + C2493 + C2492) * C51036 +
              (C2491 + C2490 + C2489) * C458) +
             (C2864 + C2863 + C2862) * C50848) *
                C50906 * C2447 +
            ((C2865 + C2866 + C2867) * C459 -
             ((C2495 + C2496 + C2497) * C51036 +
              (C2498 + C2499 + C2500) * C458) +
             (C2868 + C2869 + C2870) * C50848) *
                C50906 * C50758) *
               C1358 +
           (((C2682 + C2681 + C2680) * C458 + (C2679 + C2678 + C2677) * C51036 -
             (C4263 + C4262 + C4261) * C459 -
             (C4266 + C4265 + C4264) * C50848) *
                C50906 * C2447 +
            ((C2683 + C2684 + C2685) * C458 + (C2686 + C2687 + C2688) * C51036 -
             (C2451 * C4244 + C2446 * C4245 + C2450 * C870 + C2445 * C884 +
              C2449 * C866 + C2444 * C876) *
                 C459 -
             (C2451 * C4246 + C2446 * C4247 + C2450 * C885 + C2445 * C894 +
              C2449 * C877 + C2444 * C890) *
                 C50848) *
                C50906 * C50758) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C458 +
             (C117 * C127 + C50890 * C140) * C51036 -
             (C117 * C460 + C50890 * C466) * C459 -
             (C117 * C467 + C50890 * C478) * C50848) *
                C50906 * C108 +
            (C485 + C486 - C519 - C520) * C50906 * C109 + C531 * C110 +
            C532 * C111) *
               C1358 +
           (((C117 * C864 + C50890 * C872) * C459 -
             ((C117 * C310 + C50890 * C319) * C51036 +
              (C117 * C301 + C50890 * C311) * C458) +
             (C117 * C873 + C50890 * C888) * C50848) *
                C50906 * C108 +
            (C1625 - (C1603 + C1604) + C1626) * C50906 * C109 +
            (C1627 - (C1609 + C1610) + C1628) * C50906 * C110 +
            (C1629 - (C1615 + C1616) + C1630) * C50906 * C111) *
               C50822) *
              C1464 +
          (((C519 - (C486 + C485) + C520) * C50906 * C108 +
            (C521 - (C492 + C491) + C522) * C50906 * C109 +
            (C523 - (C498 + C497) + C524) * C50906 * C110 +
            (C525 - (C505 + C506) + C526) * C50906 * C111) *
               C1358 +
           ((C1604 + C1603 - C1625 - C1626) * C50906 * C108 +
            (C1610 + C1609 - C1627 - C1628) * C50906 * C109 +
            (C1616 + C1615 - C1629 - C1630) * C50906 * C110 +
            (C345 * C458 + C346 * C51036 -
             (C117 * C1596 + C50890 * C1597) * C459 -
             (C117 * C1598 + C50890 * C1599) * C50848) *
                C50906 * C111) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C458 +
              (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
              C5693 * C50848) *
                 C5336 +
             (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
                 C5337 +
             (C5694 * C458 + C5695 * C51036 - C6310 * C459 - C6311 * C50848) *
                 C5338) *
                C2447 +
            ((C485 + C486 - C519 - C520) * C5336 +
             (C5672 + C5673 - C5674 - C5675) * C5337 +
             (C5676 + C5677 - C5700 - C5701) * C5338) *
                C50758) *
               C1358 +
           (((C6126 * C459 -
              ((C117 * C310 + C50890 * C319) * C51036 +
               (C117 * C301 + C50890 * C311) * C458) +
              C6127 * C50848) *
                 C5336 +
             (C6128 * C459 - (C6127 * C51036 + C6126 * C458) + C6129 * C50848) *
                 C5337 +
             (C6478 * C459 - (C6129 * C51036 + C6128 * C458) + C6479 * C50848) *
                 C5338) *
                C2447 +
            ((C1625 - (C1603 + C1604) + C1626) * C5336 +
             (C7084 - (C7085 + C7086) + C7087) * C5337 +
             (C7088 - (C7089 + C7090) + C7091) * C5338) *
                C50758) *
               C50822) *
              C1464 +
          ((((C519 - (C486 + C485) + C520) * C5336 +
             (C5674 - (C5673 + C5672) + C5675) * C5337 +
             (C5700 - (C5677 + C5676) + C5701) * C5338) *
                C2447 +
            ((C521 - (C492 + C491) + C522) * C5336 +
             (C5682 - (C5683 + C5684) + C5685) * C5337 +
             (C5702 - (C5688 + C5689) + C5703) * C5338) *
                C50758) *
               C1358 +
           (((C1604 + C1603 - C1625 - C1626) * C5336 +
             (C7086 + C7085 - C7084 - C7087) * C5337 +
             (C7090 + C7089 - C7088 - C7091) * C5338) *
                C2447 +
            ((C1610 + C1609 - C1627 - C1628) * C5336 +
             (C1621 * C458 + C1622 * C51036 - C5512 * C459 - C5513 * C50848) *
                 C5337 +
             (C5512 * C458 + C5513 * C51036 -
              (C117 * C7079 + C50890 * C7080) * C459 -
              (C117 * C7081 + C50890 * C7082) * C50848) *
                 C5338) *
                C50758) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C1730 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C1728 -
             (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
              C2449 * C460 + C2444 * C466) *
                 C1731 -
             (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
              C2449 * C467 + C2444 * C478) *
                 C50848) *
                C50906 * C2447 +
            ((C2489 + C2490 + C2491) * C1730 + (C2492 + C2493 + C2494) * C1728 -
             (C2859 + C2860 + C2861) * C1731 -
             (C2862 + C2863 + C2864) * C50848) *
                C50906 * C50758) *
               C1358 +
           (((C2449 * C864 + C2444 * C872 + C2450 * C868 + C2445 * C880 +
              C2451 * C3298 + C2446 * C3302) *
                 C1731 -
             ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
               C2449 * C310 + C2444 * C319) *
                  C1728 +
              (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
               C2449 * C301 + C2444 * C311) *
                  C1730) +
             (C2449 * C873 + C2444 * C888 + C2450 * C881 + C2445 * C892 +
              C2451 * C3303 + C2446 * C3310) *
                 C50848) *
                C50906 * C2447 +
            ((C4261 + C4262 + C4263) * C1731 -
             ((C2677 + C2678 + C2679) * C1728 +
              (C2680 + C2681 + C2682) * C1730) +
             (C4264 + C4265 + C4266) * C50848) *
                C50906 * C50758) *
               C50822) *
              C51027 +
          ((((C2861 + C2860 + C2859) * C1731 -
             ((C2494 + C2493 + C2492) * C1728 +
              (C2491 + C2490 + C2489) * C1730) +
             (C2864 + C2863 + C2862) * C50848) *
                C50906 * C2447 +
            ((C2865 + C2866 + C2867) * C1731 -
             ((C2495 + C2496 + C2497) * C1728 +
              (C2498 + C2499 + C2500) * C1730) +
             (C2868 + C2869 + C2870) * C50848) *
                C50906 * C50758) *
               C1358 +
           (((C2682 + C2681 + C2680) * C1730 + (C2679 + C2678 + C2677) * C1728 -
             (C4263 + C4262 + C4261) * C1731 -
             (C4266 + C4265 + C4264) * C50848) *
                C50906 * C2447 +
            ((C2683 + C2684 + C2685) * C1730 + (C2686 + C2687 + C2688) * C1728 -
             (C2451 * C4244 + C2446 * C4245 + C2450 * C870 + C2445 * C884 +
              C2449 * C866 + C2444 * C876) *
                 C1731 -
             (C2451 * C4246 + C2446 * C4247 + C2450 * C885 + C2445 * C894 +
              C2449 * C877 + C2444 * C890) *
                 C50848) *
                C50906 * C50758) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C1730 +
             (C117 * C127 + C50890 * C140) * C1728 -
             (C117 * C460 + C50890 * C466) * C1731 -
             (C117 * C467 + C50890 * C478) * C50848) *
                C50906 * C108 +
            (C1733 + C1734 - C1735 - C1736) * C50906 * C109 + C1755 * C110 +
            C1756 * C111) *
               C1358 +
           (((C117 * C864 + C50890 * C872) * C1731 -
             ((C117 * C310 + C50890 * C319) * C1728 +
              (C117 * C301 + C50890 * C311) * C1730) +
             (C117 * C873 + C50890 * C888) * C50848) *
                C50906 * C108 +
            (C1887 - (C1888 + C1889) + C1890) * C50906 * C109 +
            (C1891 - (C1892 + C1893) + C1894) * C50906 * C110 +
            (C1895 - (C1896 + C1897) + C1898) * C50906 * C111) *
               C50822) *
              C51027 +
          (((C1735 - (C1734 + C1733) + C1736) * C50906 * C108 +
            (C1739 - (C1738 + C1737) + C1740) * C50906 * C109 +
            (C1743 - (C1742 + C1741) + C1744) * C50906 * C110 +
            (C1745 - (C1746 + C1747) + C1748) * C50906 * C111) *
               C1358 +
           ((C1889 + C1888 - C1887 - C1890) * C50906 * C108 +
            (C1893 + C1892 - C1891 - C1894) * C50906 * C109 +
            (C1897 + C1896 - C1895 - C1898) * C50906 * C110 +
            (C345 * C1730 + C346 * C1728 -
             (C117 * C1596 + C50890 * C1597) * C1731 -
             (C117 * C1598 + C50890 * C1599) * C50848) *
                C50906 * C111) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C1730 +
              (C117 * C127 + C50890 * C140) * C1728 - C5692 * C1731 -
              C5693 * C50848) *
                 C5336 +
             (C5692 * C1730 + C5693 * C1728 - C5694 * C1731 - C5695 * C50848) *
                 C5337 +
             (C5694 * C1730 + C5695 * C1728 - C6310 * C1731 - C6311 * C50848) *
                 C5338) *
                C2447 +
            ((C1733 + C1734 - C1735 - C1736) * C5336 +
             (C7238 + C7239 - C7240 - C7241) * C5337 +
             (C7242 + C7243 - C7244 - C7245) * C5338) *
                C50758) *
               C1358 +
           (((C6126 * C1731 -
              ((C117 * C310 + C50890 * C319) * C1728 +
               (C117 * C301 + C50890 * C311) * C1730) +
              C6127 * C50848) *
                 C5336 +
             (C6128 * C1731 - (C6127 * C1728 + C6126 * C1730) +
              C6129 * C50848) *
                 C5337 +
             (C6478 * C1731 - (C6129 * C1728 + C6128 * C1730) +
              C6479 * C50848) *
                 C5338) *
                C2447 +
            ((C1887 - (C1888 + C1889) + C1890) * C5336 +
             (C7448 - (C7449 + C7450) + C7451) * C5337 +
             (C7452 - (C7453 + C7454) + C7455) * C5338) *
                C50758) *
               C50822) *
              C51027 +
          ((((C1735 - (C1734 + C1733) + C1736) * C5336 +
             (C7240 - (C7239 + C7238) + C7241) * C5337 +
             (C7244 - (C7243 + C7242) + C7245) * C5338) *
                C2447 +
            ((C1739 - (C1738 + C1737) + C1740) * C5336 +
             (C7246 - (C7247 + C7248) + C7249) * C5337 +
             (C7250 - (C7251 + C7252) + C7253) * C5338) *
                C50758) *
               C1358 +
           (((C1889 + C1888 - C1887 - C1890) * C5336 +
             (C7450 + C7449 - C7448 - C7451) * C5337 +
             (C7454 + C7453 - C7452 - C7455) * C5338) *
                C2447 +
            ((C1893 + C1892 - C1891 - C1894) * C5336 +
             (C1621 * C1730 + C1622 * C1728 - C5512 * C1731 - C5513 * C50848) *
                 C5337 +
             (C5512 * C1730 + C5513 * C1728 -
              (C117 * C7079 + C50890 * C7080) * C1731 -
              (C117 * C7081 + C50890 * C7082) * C50848) *
                 C5338) *
                C50758) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C1730 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C1728 -
            (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
             C2449 * C460 + C2444 * C466) *
                C1731 -
            (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
             C2449 * C467 + C2444 * C478) *
                C50848) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C1730 + (C2492 + C2493 + C2494) * C1728 -
            (C2859 + C2860 + C2861) * C1731 -
            (C2862 + C2863 + C2864) * C50848) *
               C50906 * C50758) *
              C51081 +
          (((C2449 * C864 + C2444 * C872 + C2450 * C868 + C2445 * C880 +
             C2451 * C3298 + C2446 * C3302) *
                C1731 -
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C1728 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C1730) +
            (C2449 * C873 + C2444 * C888 + C2450 * C881 + C2445 * C892 +
             C2451 * C3303 + C2446 * C3310) *
                C50848) *
               C50906 * C2447 +
           ((C4261 + C4262 + C4263) * C1731 -
            ((C2677 + C2678 + C2679) * C1728 +
             (C2680 + C2681 + C2682) * C1730) +
            (C4264 + C4265 + C4266) * C50848) *
               C50906 * C50758) *
              C51068 +
          (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
             C2451 * C3016 + C2446 * C3019) *
                C1730 +
            (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
             C2451 * C3020 + C2446 * C3025) *
                C1728 -
            (C2451 * C3300 + C2446 * C3306 + C2450 * C3298 + C2445 * C3302 +
             C2449 * C868 + C2444 * C880) *
                C1731 -
            (C2451 * C3307 + C2446 * C3312 + C2450 * C3303 + C2445 * C3310 +
             C2449 * C881 + C2444 * C892) *
                C50848) *
               C50906 * C2447 +
           ((C3041 + C3042 + C3043) * C1730 + (C3044 + C3045 + C3046) * C1728 -
            (C2451 * C3301 + C2446 * C3308 + C2450 * C3299 + C2445 * C3304 +
             C2449 * C869 + C2444 * C882) *
                C1731 -
            (C2451 * C3309 + C2446 * C3313 + C2450 * C3305 + C2445 * C3311 +
             C2449 * C883 + C2444 * C893) *
                C50848) *
               C50906 * C50758) *
              C1463) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C1730 +
            (C117 * C127 + C50890 * C140) * C1728 -
            (C117 * C460 + C50890 * C466) * C1731 -
            (C117 * C467 + C50890 * C478) * C50848) *
               C50906 * C108 +
           (C1733 + C1734 - C1735 - C1736) * C50906 * C109 + C1755 * C110 +
           C1756 * C111) *
              C51081 +
          (((C117 * C864 + C50890 * C872) * C1731 -
            ((C117 * C310 + C50890 * C319) * C1728 +
             (C117 * C301 + C50890 * C311) * C1730) +
            (C117 * C873 + C50890 * C888) * C50848) *
               C50906 * C108 +
           (C1887 - (C1888 + C1889) + C1890) * C50906 * C109 +
           (C1891 - (C1892 + C1893) + C1894) * C50906 * C110 +
           (C1895 - (C1896 + C1897) + C1898) * C50906 * C111) *
              C51068 +
          (((C117 * C635 + C50890 * C640) * C1730 +
            (C117 * C641 + C50890 * C650) * C1728 -
            (C117 * C868 + C50890 * C880) * C1731 -
            (C117 * C881 + C50890 * C892) * C50848) *
               C50906 * C108 +
           (C668 * C1730 + C669 * C1728 -
            (C117 * C869 + C50890 * C882) * C1731 -
            (C117 * C883 + C50890 * C893) * C50848) *
               C50906 * C109 +
           (C670 * C1730 + C671 * C1728 -
            (C117 * C870 + C50890 * C884) * C1731 -
            (C117 * C885 + C50890 * C894) * C50848) *
               C50906 * C110 +
           (C672 * C1730 + C673 * C1728 -
            (C117 * C871 + C50890 * C886) * C1731 -
            (C117 * C887 + C50890 * C895) * C50848) *
               C50906 * C111) *
              C1463) *
         C50774) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C1730 +
             (C117 * C127 + C50890 * C140) * C1728 - C5692 * C1731 -
             C5693 * C50848) *
                C5336 +
            (C5692 * C1730 + C5693 * C1728 - C5694 * C1731 - C5695 * C50848) *
                C5337 +
            (C5694 * C1730 + C5695 * C1728 - C6310 * C1731 - C6311 * C50848) *
                C5338) *
               C2447 +
           ((C1733 + C1734 - C1735 - C1736) * C5336 +
            (C7238 + C7239 - C7240 - C7241) * C5337 +
            (C7242 + C7243 - C7244 - C7245) * C5338) *
               C50758) *
              C51081 +
          (((C6126 * C1731 -
             ((C117 * C310 + C50890 * C319) * C1728 +
              (C117 * C301 + C50890 * C311) * C1730) +
             C6127 * C50848) *
                C5336 +
            (C6128 * C1731 - (C6127 * C1728 + C6126 * C1730) + C6129 * C50848) *
                C5337 +
            (C6478 * C1731 - (C6129 * C1728 + C6128 * C1730) + C6479 * C50848) *
                C5338) *
               C2447 +
           ((C1887 - (C1888 + C1889) + C1890) * C5336 +
            (C7448 - (C7449 + C7450) + C7451) * C5337 +
            (C7452 - (C7453 + C7454) + C7455) * C5338) *
               C50758) *
              C51068 +
          ((((C117 * C635 + C50890 * C640) * C1730 +
             (C117 * C641 + C50890 * C650) * C1728 - C6130 * C1731 -
             C6131 * C50848) *
                C5336 +
            (C6130 * C1730 + C6131 * C1728 - C6132 * C1731 - C6133 * C50848) *
                C5337 +
            (C6132 * C1730 + C6133 * C1728 -
             (C117 * C3742 + C50890 * C3746) * C1731 -
             (C117 * C3748 + C50890 * C3754) * C50848) *
                C5338) *
               C2447 +
           ((C668 * C1730 + C669 * C1728 - C5858 * C1731 - C5859 * C50848) *
                C5336 +
            (C5858 * C1730 + C5859 * C1728 - C5860 * C1731 - C5861 * C50848) *
                C5337 +
            (C5860 * C1730 + C5861 * C1728 -
             (C117 * C3744 + C50890 * C3750) * C1731 -
             (C117 * C3752 + C50890 * C3756) * C50848) *
                C5338) *
               C50758) *
              C1463) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C1999 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C51082 -
            (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
             C2449 * C460 + C2444 * C466) *
                C2000 -
            (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
             C2449 * C467 + C2444 * C478) *
                C51071 +
            (C2449 * C1000 + C2444 * C1005 + C2450 * C1154 + C2445 * C1158 +
             C2451 * C3460 + C2446 * C3463) *
                C2001 +
            (C2449 * C1006 + C2444 * C1015 + C2450 * C1159 + C2445 * C1166 +
             C2451 * C3464 + C2446 * C3469) *
                C1998) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C1999 + (C2492 + C2493 + C2494) * C51082 -
            (C2859 + C2860 + C2861) * C2000 - (C2862 + C2863 + C2864) * C51071 +
            (C3485 + C3486 + C3487) * C2001 + (C3488 + C3489 + C3490) * C1998) *
               C50906 * C50758) *
              C1358 +
          (((C2449 * C864 + C2444 * C872 + C2450 * C868 + C2445 * C880 +
             C2451 * C3298 + C2446 * C3302) *
                C2000 -
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C51082 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C1999) +
            (C2449 * C873 + C2444 * C888 + C2450 * C881 + C2445 * C892 +
             C2451 * C3303 + C2446 * C3310) *
                C51071 -
            (C2451 * C3636 + C2446 * C3638 + C2450 * C3460 + C2445 * C3463 +
             C2449 * C1154 + C2444 * C1158) *
                C2001 -
            (C2451 * C3639 + C2446 * C3642 + C2450 * C3464 + C2445 * C3469 +
             C2449 * C1159 + C2444 * C1166) *
                C1998) *
               C50906 * C2447 +
           ((C4261 + C4262 + C4263) * C2000 -
            ((C2677 + C2678 + C2679) * C51082 +
             (C2680 + C2681 + C2682) * C1999) +
            (C4264 + C4265 + C4266) * C51071 -
            (C2451 * C3637 + C2446 * C3640 + C2450 * C3461 + C2445 * C3465 +
             C2449 * C1155 + C2444 * C1160) *
                C2001 -
            (C2451 * C3641 + C2446 * C3643 + C2450 * C3466 + C2445 * C3470 +
             C2449 * C1161 + C2444 * C1167) *
                C1998) *
               C50906 * C50758) *
              C50822) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C1999 +
            (C117 * C127 + C50890 * C140) * C51082 -
            (C117 * C460 + C50890 * C466) * C2000 -
            (C117 * C467 + C50890 * C478) * C51071 +
            (C117 * C1000 + C50890 * C1005) * C2001 +
            (C117 * C1006 + C50890 * C1015) * C1998) *
               C50906 * C108 +
           (C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C50906 * C109 +
           (C2009 + C2010 - C2011 - C2012 + C2013 + C2014) * C50906 * C110 +
           (C2015 + C2016 - C2017 - C2018 + C2019 + C2020) * C50906 * C111) *
              C1358 +
          (((C117 * C864 + C50890 * C872) * C2000 -
            ((C117 * C310 + C50890 * C319) * C51082 +
             (C117 * C301 + C50890 * C311) * C1999) +
            (C117 * C873 + C50890 * C888) * C51071 -
            (C117 * C1154 + C50890 * C1158) * C2001 -
            (C117 * C1159 + C50890 * C1166) * C1998) *
               C50906 * C108 +
           (C1619 * C2000 - (C343 * C51082 + C344 * C1999) + C1620 * C51071 -
            (C117 * C1155 + C50890 * C1160) * C2001 -
            (C117 * C1161 + C50890 * C1167) * C1998) *
               C50906 * C109 +
           (C1621 * C2000 - (C341 * C51082 + C342 * C1999) + C1622 * C51071 -
            (C117 * C1156 + C50890 * C1162) * C2001 -
            (C117 * C1163 + C50890 * C1168) * C1998) *
               C50906 * C110 +
           (C1623 * C2000 - (C339 * C51082 + C340 * C1999) + C1624 * C51071 -
            (C117 * C1157 + C50890 * C1164) * C2001 -
            (C117 * C1165 + C50890 * C1169) * C1998) *
               C50906 * C111) *
              C50822) *
         C50774) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C1999 +
             (C117 * C127 + C50890 * C140) * C51082 - C5692 * C2000 -
             C5693 * C51071 + C5694 * C2001 + C5695 * C1998) *
                C5336 +
            (C5692 * C1999 + C5693 * C51082 - C5694 * C2000 - C5695 * C51071 +
             C6310 * C2001 + C6311 * C1998) *
                C5337 +
            (C5694 * C1999 + C5695 * C51082 - C6310 * C2000 - C6311 * C51071 +
             C6592 * C2001 + C6593 * C1998) *
                C5338) *
               C2447 +
           ((C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C5336 +
            (C7602 + C7603 - C7604 - C7605 + C7606 + C7607) * C5337 +
            (C7608 + C7609 - C7610 - C7611 + C7612 + C7613) * C5338) *
               C50758) *
              C1358 +
          (((C6126 * C2000 -
             ((C117 * C310 + C50890 * C319) * C51082 +
              (C117 * C301 + C50890 * C311) * C1999) +
             C6127 * C51071 - C6128 * C2001 - C6129 * C1998) *
                C5336 +
            (C6128 * C2000 - (C6127 * C51082 + C6126 * C1999) + C6129 * C51071 -
             C6478 * C2001 - C6479 * C1998) *
                C5337 +
            (C6478 * C2000 - (C6129 * C51082 + C6128 * C1999) + C6479 * C51071 -
             (C117 * C6461 + C50890 * C6463) * C2001 -
             (C117 * C6464 + C50890 * C6467) * C1998) *
                C5338) *
               C2447 +
           ((C1619 * C2000 - (C343 * C51082 + C344 * C1999) + C1620 * C51071 -
             C5511 * C2001 - C5510 * C1998) *
                C5336 +
            (C5511 * C2000 - (C1620 * C51082 + C1619 * C1999) + C5510 * C51071 -
             C6480 * C2001 - C6481 * C1998) *
                C5337 +
            (C6480 * C2000 - (C5510 * C51082 + C5511 * C1999) + C6481 * C51071 -
             (C117 * C6462 + C50890 * C6465) * C2001 -
             (C117 * C6466 + C50890 * C6468) * C1998) *
                C5338) *
               C50758) *
              C50822) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50890 * C126) * C118 +
                (C117 * C127 + C50890 * C140) * C50836) *
                   C50906 * C108 +
               (C178 + C179) * C50906 * C109 + C192 * C110 + C193 * C111) *
                  C50806 * C113 -
              (C194 * C111 + C195 * C110 + (C181 + C180) * C50906 * C109 +
               (C179 + C178) * C50906 * C108) *
                  C50806 * C114 +
              (C192 * C108 + C193 * C109 + (C185 + C184) * C50906 * C110 +
               (C186 + C187) * C50906 * C111) *
                  C50806 * C115 -
              (((C117 * C138 + C50890 * C146) * C50836 +
                (C117 * C125 + C50890 * C139) * C118) *
                   C50906 * C111 +
               (C187 + C186) * C50906 * C110 + C194 * C109 + C195 * C108) *
                  C50806 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50890 * C126) * C118 +
                 (C117 * C127 + C50890 * C140) * C50836) *
                    C50906 * C108 +
                (C178 + C179) * C50906 * C109 + C192 * C110 + C193 * C111) *
                   C630 -
               (C357 * C111 + C358 * C110 + (C351 + C352) * C50906 * C109 +
                ((C117 * C310 + C50890 * C319) * C50836 +
                 (C117 * C301 + C50890 * C311) * C118) *
                    C50906 * C108) *
                   C631 +
               (((C117 * C635 + C50890 * C640) * C118 +
                 (C117 * C641 + C50890 * C650) * C50836) *
                    C50906 * C108 +
                (C674 + C675) * C50906 * C109 + (C676 + C677) * C50906 * C110 +
                (C678 + C679) * C50906 * C111) *
                   C632) *
                  C51027 +
              (((C352 + C351) * C50906 * C108 + (C350 + C349) * C50906 * C109 +
                (C348 + C347) * C50906 * C110 + (C353 + C354) * C50906 * C111) *
                   C631 -
               (C194 * C111 + C195 * C110 + (C181 + C180) * C50906 * C109 +
                (C179 + C178) * C50906 * C108) *
                   C630 -
               (((C117 * C648 + C50890 * C654) * C50836 +
                 (C117 * C639 + C50890 * C649) * C118) *
                    C50906 * C111 +
                (C679 + C678) * C50906 * C110 + (C677 + C676) * C50906 * C109 +
                (C675 + C674) * C50906 * C108) *
                   C632) *
                  C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C997 +
            (C117 * C127 + C50890 * C140) * C994 -
            (C117 * C460 + C50890 * C466) * C998 -
            (C117 * C467 + C50890 * C478) * C995 +
            (C117 * C1000 + C50890 * C1005) * C999 +
            (C117 * C1006 + C50890 * C1015) * C996) *
               C50906 * C108 +
           (C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C50906 * C109 +
           (C1029 + C1030 - C1031 - C1032 + C1053 + C1054) * C50906 * C110 +
           (C1037 + C1038 - C1039 - C1040 + C1055 + C1056) * C50906 * C111) *
              C50806 * C51027 +
          ((C1023 - (C1022 + C1021) + C1024 - C1051 - C1052) * C50906 * C108 +
           (C1031 - (C1030 + C1029) + C1032 - C1053 - C1054) * C50906 * C109 +
           (C1039 - (C1038 + C1037) + C1040 - C1055 - C1056) * C50906 * C110 +
           (C517 * C998 - (C174 * C994 + C175 * C997) + C518 * C995 -
            (C117 * C1004 + C50890 * C1013) * C999 -
            (C117 * C1014 + C50890 * C1019) * C996) *
               C50906 * C111) *
              C50806 * C50779)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C50836) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C118 + (C2492 + C2493 + C2494) * C50836) *
               C50906 * C50758) *
              C50806 * C113 -
          (((C2495 + C2496 + C2497) * C50836 + (C2498 + C2499 + C2500) * C118) *
               C50906 * C50758 +
           ((C2494 + C2493 + C2492) * C50836 + (C2491 + C2490 + C2489) * C118) *
               C50906 * C2447) *
              C50806 * C114 +
          (((C2500 + C2499 + C2498) * C118 + (C2497 + C2496 + C2495) * C50836) *
               C50906 * C2447 +
           ((C2501 + C2502 + C2503) * C118 + (C2504 + C2505 + C2506) * C50836) *
               C50906 * C50758) *
              C50806 * C115 -
          (((C2451 * C648 + C2446 * C654 + C2450 * C313 + C2445 * C320 +
             C2449 * C134 + C2444 * C144) *
                C50836 +
            (C2451 * C639 + C2446 * C649 + C2450 * C302 + C2445 * C312 +
             C2449 * C123 + C2444 * C135) *
                C118) *
               C50906 * C50758 +
           ((C2506 + C2505 + C2504) * C50836 + (C2503 + C2502 + C2501) * C118) *
               C50906 * C2447) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C50836) *
                C50906 * C2447 +
            ((C2489 + C2490 + C2491) * C118 +
             (C2492 + C2493 + C2494) * C50836) *
                C50906 * C50758) *
               C630 -
           (((C2677 + C2678 + C2679) * C50836 +
             (C2680 + C2681 + C2682) * C118) *
                C50906 * C50758 +
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C50836 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C118) *
                C50906 * C2447) *
               C631 +
           (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
              C2451 * C3016 + C2446 * C3019) *
                 C118 +
             (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
              C2451 * C3020 + C2446 * C3025) *
                 C50836) *
                C50906 * C2447 +
            ((C3041 + C3042 + C3043) * C118 +
             (C3044 + C3045 + C3046) * C50836) *
                C50906 * C50758) *
               C632) *
              C51027 +
          ((((C2682 + C2681 + C2680) * C118 +
             (C2679 + C2678 + C2677) * C50836) *
                C50906 * C2447 +
            ((C2683 + C2684 + C2685) * C118 +
             (C2686 + C2687 + C2688) * C50836) *
                C50906 * C50758) *
               C631 -
           (((C2495 + C2496 + C2497) * C50836 +
             (C2498 + C2499 + C2500) * C118) *
                C50906 * C50758 +
            ((C2494 + C2493 + C2492) * C50836 +
             (C2491 + C2490 + C2489) * C118) *
                C50906 * C2447) *
               C630 -
           (((C2451 * C3023 + C2446 * C3027 + C2450 * C756 + C2445 * C763 +
              C2449 * C645 + C2444 * C652) *
                 C50836 +
             (C2451 * C3018 + C2446 * C3024 + C2450 * C751 + C2445 * C757 +
              C2449 * C637 + C2444 * C644) *
                 C118) *
                C50906 * C50758 +
            ((C3046 + C3045 + C3044) * C50836 +
             (C3043 + C3042 + C3041) * C118) *
                C50906 * C2447) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C997 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C994 -
            (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
             C2449 * C460 + C2444 * C466) *
                C998 -
            (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
             C2449 * C467 + C2444 * C478) *
                C995 +
            (C2449 * C1000 + C2444 * C1005 + C2450 * C1154 + C2445 * C1158 +
             C2451 * C3460 + C2446 * C3463) *
                C999 +
            (C2449 * C1006 + C2444 * C1015 + C2450 * C1159 + C2445 * C1166 +
             C2451 * C3464 + C2446 * C3469) *
                C996) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C997 + (C2492 + C2493 + C2494) * C994 -
            (C2859 + C2860 + C2861) * C998 - (C2862 + C2863 + C2864) * C995 +
            (C3485 + C3486 + C3487) * C999 + (C3488 + C3489 + C3490) * C996) *
               C50906 * C50758) *
              C50806 * C51027 +
          (((C2861 + C2860 + C2859) * C998 -
            ((C2494 + C2493 + C2492) * C994 + (C2491 + C2490 + C2489) * C997) +
            (C2864 + C2863 + C2862) * C995 - (C3487 + C3486 + C3485) * C999 -
            (C3490 + C3489 + C3488) * C996) *
               C50906 * C2447 +
           ((C2865 + C2866 + C2867) * C998 -
            ((C2495 + C2496 + C2497) * C994 + (C2498 + C2499 + C2500) * C997) +
            (C2868 + C2869 + C2870) * C995 -
            (C2451 * C3462 + C2446 * C3467 + C2450 * C1156 + C2445 * C1162 +
             C2449 * C1002 + C2444 * C1009) *
                C999 -
            (C2451 * C3468 + C2446 * C3471 + C2450 * C1163 + C2445 * C1168 +
             C2449 * C1010 + C2444 * C1017) *
                C996) *
               C50906 * C50758) *
              C50806 * C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C5336 +
            ((C117 * C460 + C50890 * C466) * C118 +
             (C117 * C467 + C50890 * C478) * C50836) *
                C5337 +
            ((C117 * C1000 + C50890 * C1005) * C118 +
             (C117 * C1006 + C50890 * C1015) * C50836) *
                C5338) *
               C2447 +
           ((C178 + C179) * C5336 + (C5340 + C5341) * C5337 +
            (C5342 + C5343) * C5338) *
               C50758) *
              C50806 * C113 -
          (((C5344 + C5345) * C5338 + (C5346 + C5347) * C5337 +
            (C181 + C180) * C5336) *
               C50758 +
           ((C5343 + C5342) * C5338 + (C5341 + C5340) * C5337 +
            (C179 + C178) * C5336) *
               C2447) *
              C50806 * C114 +
          ((C188 * C5336 + (C5347 + C5346) * C5337 + (C5345 + C5344) * C5338) *
               C2447 +
           (C189 * C5336 + (C5348 + C5349) * C5337 + (C5350 + C5351) * C5338) *
               C50758) *
              C50806 * C115 -
          ((((C117 * C1014 + C50890 * C1019) * C50836 +
             (C117 * C1004 + C50890 * C1013) * C118) *
                C5338 +
            (C518 * C50836 + C517 * C118) * C5337 + C190 * C5336) *
               C50758 +
           ((C5351 + C5350) * C5338 + (C5349 + C5348) * C5337 + C191 * C5336) *
               C2447) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C5336 +
             (C5692 * C118 + C5693 * C50836) * C5337 +
             (C5694 * C118 + C5695 * C50836) * C5338) *
                C2447 +
            ((C178 + C179) * C5336 + (C5340 + C5341) * C5337 +
             (C5342 + C5343) * C5338) *
                C50758) *
               C630 -
           (((C5514 + C5515) * C5338 + (C5502 + C5503) * C5337 +
             (C351 + C352) * C5336) *
                C50758 +
            (((C117 * C1159 + C50890 * C1166) * C50836 +
              (C117 * C1154 + C50890 * C1158) * C118) *
                 C5338 +
             ((C117 * C873 + C50890 * C888) * C50836 +
              (C117 * C864 + C50890 * C872) * C118) *
                 C5337 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C5336) *
                C2447) *
               C631 +
           ((((C117 * C635 + C50890 * C640) * C118 +
              (C117 * C641 + C50890 * C650) * C50836) *
                 C5336 +
             ((C117 * C868 + C50890 * C880) * C118 +
              (C117 * C881 + C50890 * C892) * C50836) *
                 C5337 +
             ((C117 * C3460 + C50890 * C3463) * C118 +
              (C117 * C3464 + C50890 * C3469) * C50836) *
                 C5338) *
                C2447 +
            ((C674 + C675) * C5336 + (C5862 + C5863) * C5337 +
             (C5864 + C5865) * C5338) *
                C50758) *
               C632) *
              C51027 +
          ((((C352 + C351) * C5336 + (C5503 + C5502) * C5337 +
             (C5515 + C5514) * C5338) *
                C2447 +
            ((C350 + C349) * C5336 + (C5504 + C5505) * C5337 +
             (C5516 + C5517) * C5338) *
                C50758) *
               C631 -
           (((C5344 + C5345) * C5338 + (C5346 + C5347) * C5337 +
             (C181 + C180) * C5336) *
                C50758 +
            ((C5343 + C5342) * C5338 + (C5341 + C5340) * C5337 +
             (C179 + C178) * C5336) *
                C2447) *
               C630 -
           ((((C117 * C3468 + C50890 * C3471) * C50836 +
              (C117 * C3462 + C50890 * C3467) * C118) *
                 C5338 +
             ((C117 * C885 + C50890 * C894) * C50836 +
              (C117 * C870 + C50890 * C884) * C118) *
                 C5337 +
             (C677 + C676) * C5336) *
                C50758 +
            ((C5865 + C5864) * C5338 + (C5863 + C5862) * C5337 +
             (C675 + C674) * C5336) *
                C2447) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C997 +
             (C117 * C127 + C50890 * C140) * C994 - C5692 * C998 -
             C5693 * C995 + C5694 * C999 + C5695 * C996) *
                C5336 +
            (C5692 * C997 + C5693 * C994 - C5694 * C998 - C5695 * C995 +
             C6310 * C999 + C6311 * C996) *
                C5337 +
            (C5694 * C997 + C5695 * C994 - C6310 * C998 - C6311 * C995 +
             (C117 * C6279 + C50890 * C6282) * C999 +
             (C117 * C6283 + C50890 * C6288) * C996) *
                C5338) *
               C2447 +
           ((C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C5336 +
            (C6296 + C6297 - C6298 - C6299 + C6300 + C6301) * C5337 +
            (C6302 + C6303 - C6304 - C6305 + C6314 + C6315) * C5338) *
               C50758) *
              C50806 * C51027 +
          (((C1023 - (C1022 + C1021) + C1024 - C1051 - C1052) * C5336 +
            (C6298 - (C6297 + C6296) + C6299 - C6300 - C6301) * C5337 +
            (C6304 - (C6303 + C6302) + C6305 - C6314 - C6315) * C5338) *
               C2447 +
           ((C1031 - (C1030 + C1029) + C1032 - C1053 - C1054) * C5336 +
            (C1047 * C998 - (C513 * C994 + C512 * C997) + C1048 * C995 -
             C5698 * C999 - C5699 * C996) *
                C5337 +
            (C5698 * C998 - (C1048 * C994 + C1047 * C997) + C5699 * C995 -
             (C117 * C6281 + C50890 * C6286) * C999 -
             (C117 * C6287 + C50890 * C6290) * C996) *
                C5338) *
               C50758) *
              C50806 * C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50890 * C126) * C118 +
                 (C117 * C127 + C50890 * C140) * C50836) *
                    C50906 * C108 +
                (C178 + C179) * C50906 * C109 + C192 * C110 + C193 * C111) *
                   C51034 -
               (C357 * C111 + C358 * C110 + (C351 + C352) * C50906 * C109 +
                ((C117 * C310 + C50890 * C319) * C50836 +
                 (C117 * C301 + C50890 * C311) * C118) *
                    C50906 * C108) *
                   C50822) *
                  C295 +
              (((C352 + C351) * C50906 * C108 + (C350 + C349) * C50906 * C109 +
                (C348 + C347) * C50906 * C110 + (C353 + C354) * C50906 * C111) *
                   C50822 -
               (C194 * C111 + C195 * C110 + (C181 + C180) * C50906 * C109 +
                (C179 + C178) * C50906 * C108) *
                   C51034) *
                  C296 +
              ((C192 * C108 + C193 * C109 + (C185 + C184) * C50906 * C110 +
                (C186 + C187) * C50906 * C111) *
                   C51034 -
               (((C117 * C314 + C50890 * C321) * C50836 +
                 (C117 * C303 + C50890 * C315) * C118) *
                    C50906 * C111 +
                (C354 + C353) * C50906 * C110 + C357 * C109 + C358 * C108) *
                   C50822) *
                  C297) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50890 * C126) * C118 +
                (C117 * C127 + C50890 * C140) * C50836) *
                   C50906 * C108 +
               (C178 + C179) * C50906 * C109 + C192 * C110 + C193 * C111) *
                  C745 -
              (C357 * C111 + C358 * C110 + (C351 + C352) * C50906 * C109 +
               ((C117 * C310 + C50890 * C319) * C50836 +
                (C117 * C301 + C50890 * C311) * C118) *
                   C50906 * C108) *
                  C746 +
              (((C117 * C635 + C50890 * C640) * C118 +
                (C117 * C641 + C50890 * C650) * C50836) *
                   C50906 * C108 +
               (C674 + C675) * C50906 * C109 + (C676 + C677) * C50906 * C110 +
               (C678 + C679) * C50906 * C111) *
                  C747 -
              (((C117 * C754 + C50890 * C762) * C50836 +
                (C117 * C750 + C50890 * C755) * C118) *
                   C50906 * C111 +
               ((C117 * C756 + C50890 * C763) * C50836 +
                (C117 * C751 + C50890 * C757) * C118) *
                   C50906 * C110 +
               ((C117 * C758 + C50890 * C764) * C50836 +
                (C117 * C752 + C50890 * C759) * C118) *
                   C50906 * C109 +
               ((C117 * C760 + C50890 * C765) * C50836 +
                (C117 * C753 + C50890 * C761) * C118) *
                   C50906 * C108) *
                  C748) *
             C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C997 +
            (C117 * C127 + C50890 * C140) * C994 -
            (C117 * C460 + C50890 * C466) * C998 -
            (C117 * C467 + C50890 * C478) * C995 +
            (C117 * C1000 + C50890 * C1005) * C999 +
            (C117 * C1006 + C50890 * C1015) * C996) *
               C50906 * C108 +
           (C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C50906 * C109 +
           (C1029 + C1030 - C1031 - C1032 + C1053 + C1054) * C50906 * C110 +
           (C1037 + C1038 - C1039 - C1040 + C1055 + C1056) * C50906 * C111) *
              C51034 +
          (((C117 * C864 + C50890 * C872) * C998 -
            ((C117 * C310 + C50890 * C319) * C994 +
             (C117 * C301 + C50890 * C311) * C997) +
            (C117 * C873 + C50890 * C888) * C995 -
            (C117 * C1154 + C50890 * C1158) * C999 -
            (C117 * C1159 + C50890 * C1166) * C996) *
               C50906 * C108 +
           ((C117 * C865 + C50890 * C874) * C998 - (C343 * C994 + C344 * C997) +
            (C117 * C875 + C50890 * C889) * C995 -
            (C117 * C1155 + C50890 * C1160) * C999 -
            (C117 * C1161 + C50890 * C1167) * C996) *
               C50906 * C109 +
           ((C117 * C866 + C50890 * C876) * C998 - (C341 * C994 + C342 * C997) +
            (C117 * C877 + C50890 * C890) * C995 -
            (C117 * C1156 + C50890 * C1162) * C999 -
            (C117 * C1163 + C50890 * C1168) * C996) *
               C50906 * C110 +
           ((C117 * C867 + C50890 * C878) * C998 - (C339 * C994 + C340 * C997) +
            (C117 * C879 + C50890 * C891) * C995 -
            (C117 * C1157 + C50890 * C1164) * C999 -
            (C117 * C1165 + C50890 * C1169) * C996) *
               C50906 * C111) *
              C50822) *
         C50774) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C50836) *
                C50906 * C2447 +
            ((C2489 + C2490 + C2491) * C118 +
             (C2492 + C2493 + C2494) * C50836) *
                C50906 * C50758) *
               C51034 -
           (((C2677 + C2678 + C2679) * C50836 +
             (C2680 + C2681 + C2682) * C118) *
                C50906 * C50758 +
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C50836 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C118) *
                C50906 * C2447) *
               C50822) *
              C295 +
          ((((C2682 + C2681 + C2680) * C118 +
             (C2679 + C2678 + C2677) * C50836) *
                C50906 * C2447 +
            ((C2683 + C2684 + C2685) * C118 +
             (C2686 + C2687 + C2688) * C50836) *
                C50906 * C50758) *
               C50822 -
           (((C2495 + C2496 + C2497) * C50836 +
             (C2498 + C2499 + C2500) * C118) *
                C50906 * C50758 +
            ((C2494 + C2493 + C2492) * C50836 +
             (C2491 + C2490 + C2489) * C118) *
                C50906 * C2447) *
               C51034) *
              C296 +
          ((((C2500 + C2499 + C2498) * C118 +
             (C2497 + C2496 + C2495) * C50836) *
                C50906 * C2447 +
            ((C2501 + C2502 + C2503) * C118 +
             (C2504 + C2505 + C2506) * C50836) *
                C50906 * C50758) *
               C51034 -
           (((C2451 * C754 + C2446 * C762 + C2450 * C647 + C2445 * C653 +
              C2449 * C304 + C2444 * C316) *
                 C50836 +
             (C2451 * C750 + C2446 * C755 + C2450 * C638 + C2445 * C646 +
              C2449 * C298 + C2444 * C305) *
                 C118) *
                C50906 * C50758 +
            ((C2688 + C2687 + C2686) * C50836 +
             (C2685 + C2684 + C2683) * C118) *
                C50906 * C2447) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C50836) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C118 + (C2492 + C2493 + C2494) * C50836) *
               C50906 * C50758) *
              C745 -
          (((C2677 + C2678 + C2679) * C50836 + (C2680 + C2681 + C2682) * C118) *
               C50906 * C50758 +
           ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
             C2449 * C310 + C2444 * C319) *
                C50836 +
            (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
             C2449 * C301 + C2444 * C311) *
                C118) *
               C50906 * C2447) *
              C746 +
          (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
             C2451 * C3016 + C2446 * C3019) *
                C118 +
            (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
             C2451 * C3020 + C2446 * C3025) *
                C50836) *
               C50906 * C2447 +
           ((C3041 + C3042 + C3043) * C118 + (C3044 + C3045 + C3046) * C50836) *
               C50906 * C50758) *
              C747 -
          (((C2451 * C3146 + C2446 * C3150 + C2450 * C3022 + C2445 * C3026 +
             C2449 * C758 + C2444 * C764) *
                C50836 +
            (C2451 * C3144 + C2446 * C3147 + C2450 * C3017 + C2445 * C3021 +
             C2449 * C752 + C2444 * C759) *
                C118) *
               C50906 * C50758 +
           ((C2451 * C3148 + C2446 * C3151 + C2450 * C3020 + C2445 * C3025 +
             C2449 * C760 + C2444 * C765) *
                C50836 +
            (C2451 * C3145 + C2446 * C3149 + C2450 * C3016 + C2445 * C3019 +
             C2449 * C753 + C2444 * C761) *
                C118) *
               C50906 * C2447) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C997 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C994 -
            (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
             C2449 * C460 + C2444 * C466) *
                C998 -
            (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
             C2449 * C467 + C2444 * C478) *
                C995 +
            (C2449 * C1000 + C2444 * C1005 + C2450 * C1154 + C2445 * C1158 +
             C2451 * C3460 + C2446 * C3463) *
                C999 +
            (C2449 * C1006 + C2444 * C1015 + C2450 * C1159 + C2445 * C1166 +
             C2451 * C3464 + C2446 * C3469) *
                C996) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C997 + (C2492 + C2493 + C2494) * C994 -
            (C2859 + C2860 + C2861) * C998 - (C2862 + C2863 + C2864) * C995 +
            (C3485 + C3486 + C3487) * C999 + (C3488 + C3489 + C3490) * C996) *
               C50906 * C50758) *
              C51034 +
          (((C2449 * C864 + C2444 * C872 + C2450 * C868 + C2445 * C880 +
             C2451 * C3298 + C2446 * C3302) *
                C998 -
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C994 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C997) +
            (C2449 * C873 + C2444 * C888 + C2450 * C881 + C2445 * C892 +
             C2451 * C3303 + C2446 * C3310) *
                C995 -
            (C2451 * C3636 + C2446 * C3638 + C2450 * C3460 + C2445 * C3463 +
             C2449 * C1154 + C2444 * C1158) *
                C999 -
            (C2451 * C3639 + C2446 * C3642 + C2450 * C3464 + C2445 * C3469 +
             C2449 * C1159 + C2444 * C1166) *
                C996) *
               C50906 * C2447 +
           ((C2449 * C865 + C2444 * C874 + C2450 * C869 + C2445 * C882 +
             C2451 * C3299 + C2446 * C3304) *
                C998 -
            ((C2677 + C2678 + C2679) * C994 + (C2680 + C2681 + C2682) * C997) +
            (C2449 * C875 + C2444 * C889 + C2450 * C883 + C2445 * C893 +
             C2451 * C3305 + C2446 * C3311) *
                C995 -
            (C2451 * C3637 + C2446 * C3640 + C2450 * C3461 + C2445 * C3465 +
             C2449 * C1155 + C2444 * C1160) *
                C999 -
            (C2451 * C3641 + C2446 * C3643 + C2450 * C3466 + C2445 * C3470 +
             C2449 * C1161 + C2444 * C1167) *
                C996) *
               C50906 * C50758) *
              C50822) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C5336 +
             ((C117 * C460 + C50890 * C466) * C118 +
              (C117 * C467 + C50890 * C478) * C50836) *
                 C5337 +
             ((C117 * C1000 + C50890 * C1005) * C118 +
              (C117 * C1006 + C50890 * C1015) * C50836) *
                 C5338) *
                C2447 +
            ((C178 + C179) * C5336 + (C5340 + C5341) * C5337 +
             (C5342 + C5343) * C5338) *
                C50758) *
               C51034 -
           (((C5514 + C5515) * C5338 + (C5502 + C5503) * C5337 +
             (C351 + C352) * C5336) *
                C50758 +
            (((C117 * C1159 + C50890 * C1166) * C50836 +
              (C117 * C1154 + C50890 * C1158) * C118) *
                 C5338 +
             ((C117 * C873 + C50890 * C888) * C50836 +
              (C117 * C864 + C50890 * C872) * C118) *
                 C5337 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C5336) *
                C2447) *
               C50822) *
              C295 +
          ((((C352 + C351) * C5336 + (C5503 + C5502) * C5337 +
             (C5515 + C5514) * C5338) *
                C2447 +
            ((C350 + C349) * C5336 + (C5504 + C5505) * C5337 +
             (C5516 + C5517) * C5338) *
                C50758) *
               C50822 -
           (((C5344 + C5345) * C5338 + (C5346 + C5347) * C5337 +
             (C181 + C180) * C5336) *
                C50758 +
            ((C5343 + C5342) * C5338 + (C5341 + C5340) * C5337 +
             (C179 + C178) * C5336) *
                C2447) *
               C51034) *
              C296 +
          (((C188 * C5336 + (C5347 + C5346) * C5337 + (C5345 + C5344) * C5338) *
                C2447 +
            (C189 * C5336 + (C5348 + C5349) * C5337 + (C5350 + C5351) * C5338) *
                C50758) *
               C51034 -
           ((((C117 * C1165 + C50890 * C1169) * C50836 +
              (C117 * C1157 + C50890 * C1164) * C118) *
                 C5338 +
             (C1624 * C50836 + C1623 * C118) * C5337 + C355 * C5336) *
                C50758 +
            ((C5517 + C5516) * C5338 + (C5505 + C5504) * C5337 + C356 * C5336) *
                C2447) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C5336 +
            (C5692 * C118 + C5693 * C50836) * C5337 +
            (C5694 * C118 + C5695 * C50836) * C5338) *
               C2447 +
           ((C178 + C179) * C5336 + (C5340 + C5341) * C5337 +
            (C5342 + C5343) * C5338) *
               C50758) *
              C745 -
          (((C5514 + C5515) * C5338 + (C5502 + C5503) * C5337 +
            (C351 + C352) * C5336) *
               C50758 +
           (((C117 * C1159 + C50890 * C1166) * C50836 +
             (C117 * C1154 + C50890 * C1158) * C118) *
                C5338 +
            ((C117 * C873 + C50890 * C888) * C50836 +
             (C117 * C864 + C50890 * C872) * C118) *
                C5337 +
            ((C117 * C310 + C50890 * C319) * C50836 +
             (C117 * C301 + C50890 * C311) * C118) *
                C5336) *
               C2447) *
              C746 +
          ((((C117 * C635 + C50890 * C640) * C118 +
             (C117 * C641 + C50890 * C650) * C50836) *
                C5336 +
            ((C117 * C868 + C50890 * C880) * C118 +
             (C117 * C881 + C50890 * C892) * C50836) *
                C5337 +
            ((C117 * C3460 + C50890 * C3463) * C118 +
             (C117 * C3464 + C50890 * C3469) * C50836) *
                C5338) *
               C2447 +
           ((C674 + C675) * C5336 + (C5862 + C5863) * C5337 +
            (C5864 + C5865) * C5338) *
               C50758) *
              C747 -
          ((((C117 * C3641 + C50890 * C3643) * C50836 +
             (C117 * C3637 + C50890 * C3640) * C118) *
                C5338 +
            ((C117 * C3305 + C50890 * C3311) * C50836 +
             (C117 * C3299 + C50890 * C3304) * C118) *
                C5337 +
            ((C117 * C758 + C50890 * C764) * C50836 +
             (C117 * C752 + C50890 * C759) * C118) *
                C5336) *
               C50758 +
           (((C117 * C3639 + C50890 * C3642) * C50836 +
             (C117 * C3636 + C50890 * C3638) * C118) *
                C5338 +
            ((C117 * C3303 + C50890 * C3310) * C50836 +
             (C117 * C3298 + C50890 * C3302) * C118) *
                C5337 +
            ((C117 * C760 + C50890 * C765) * C50836 +
             (C117 * C753 + C50890 * C761) * C118) *
                C5336) *
               C2447) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C997 +
             (C117 * C127 + C50890 * C140) * C994 - C5692 * C998 -
             C5693 * C995 + C5694 * C999 + C5695 * C996) *
                C5336 +
            (C5692 * C997 + C5693 * C994 - C5694 * C998 - C5695 * C995 +
             C6310 * C999 + C6311 * C996) *
                C5337 +
            (C5694 * C997 + C5695 * C994 - C6310 * C998 - C6311 * C995 +
             (C117 * C6279 + C50890 * C6282) * C999 +
             (C117 * C6283 + C50890 * C6288) * C996) *
                C5338) *
               C2447 +
           ((C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C5336 +
            (C6296 + C6297 - C6298 - C6299 + C6300 + C6301) * C5337 +
            (C6302 + C6303 - C6304 - C6305 + C6314 + C6315) * C5338) *
               C50758) *
              C51034 +
          (((C6126 * C998 -
             ((C117 * C310 + C50890 * C319) * C994 +
              (C117 * C301 + C50890 * C311) * C997) +
             C6127 * C995 - C6128 * C999 - C6129 * C996) *
                C5336 +
            (C6128 * C998 - (C6127 * C994 + C6126 * C997) + C6129 * C995 -
             C6478 * C999 - C6479 * C996) *
                C5337 +
            (C6478 * C998 - (C6129 * C994 + C6128 * C997) + C6479 * C995 -
             (C117 * C6461 + C50890 * C6463) * C999 -
             (C117 * C6464 + C50890 * C6467) * C996) *
                C5338) *
               C2447 +
           ((C1619 * C998 - (C343 * C994 + C344 * C997) + C1620 * C995 -
             C5511 * C999 - C5510 * C996) *
                C5336 +
            (C5511 * C998 - (C1620 * C994 + C1619 * C997) + C5510 * C995 -
             C6480 * C999 - C6481 * C996) *
                C5337 +
            (C6480 * C998 - (C5510 * C994 + C5511 * C997) + C6481 * C995 -
             (C117 * C6462 + C50890 * C6465) * C999 -
             (C117 * C6466 + C50890 * C6468) * C996) *
                C5338) *
               C50758) *
              C50822) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50890 * C126) * C458 +
                (C117 * C127 + C50890 * C140) * C51036 -
                (C117 * C460 + C50890 * C466) * C459 -
                (C117 * C467 + C50890 * C478) * C50848) *
                   C50906 * C108 +
               (C485 + C486 - C519 - C520) * C50906 * C109 + C531 * C110 +
               C532 * C111) *
                  C50806 * C295 +
              ((C519 - (C486 + C485) + C520) * C50906 * C108 +
               (C521 - (C492 + C491) + C522) * C50906 * C109 +
               (C523 - (C498 + C497) + C524) * C50906 * C110 +
               (C525 - (C505 + C506) + C526) * C50906 * C111) *
                  C50806 * C296 +
              (C531 * C108 + C532 * C109 +
               (C506 + C505 - C525 - C526) * C50906 * C110 +
               (C176 * C458 + C177 * C51036 -
                (C117 * C465 + C50890 * C476) * C459 -
                (C117 * C477 + C50890 * C483) * C50848) *
                   C50906 * C111) *
                  C50806 * C297) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C50890 * C126) * C458 +
                (C117 * C127 + C50890 * C140) * C51036 -
                (C117 * C460 + C50890 * C466) * C459 -
                (C117 * C467 + C50890 * C478) * C50848) *
                   C50906 * C108 +
               (C485 + C486 - C519 - C520) * C50906 * C109 + C531 * C110 +
               C532 * C111) *
                  C630 +
              (((C117 * C864 + C50890 * C872) * C459 -
                ((C117 * C310 + C50890 * C319) * C51036 +
                 (C117 * C301 + C50890 * C311) * C458) +
                (C117 * C873 + C50890 * C888) * C50848) *
                   C50906 * C108 +
               ((C117 * C865 + C50890 * C874) * C459 -
                (C343 * C51036 + C344 * C458) +
                (C117 * C875 + C50890 * C889) * C50848) *
                   C50906 * C109 +
               ((C117 * C866 + C50890 * C876) * C459 -
                (C341 * C51036 + C342 * C458) +
                (C117 * C877 + C50890 * C890) * C50848) *
                   C50906 * C110 +
               ((C117 * C867 + C50890 * C878) * C459 -
                (C339 * C51036 + C340 * C458) +
                (C117 * C879 + C50890 * C891) * C50848) *
                   C50906 * C111) *
                  C631 +
              (((C117 * C635 + C50890 * C640) * C458 +
                (C117 * C641 + C50890 * C650) * C51036 -
                (C117 * C868 + C50890 * C880) * C459 -
                (C117 * C881 + C50890 * C892) * C50848) *
                   C50906 * C108 +
               (C668 * C458 + C669 * C51036 -
                (C117 * C869 + C50890 * C882) * C459 -
                (C117 * C883 + C50890 * C893) * C50848) *
                   C50906 * C109 +
               (C670 * C458 + C671 * C51036 -
                (C117 * C870 + C50890 * C884) * C459 -
                (C117 * C885 + C50890 * C894) * C50848) *
                   C50906 * C110 +
               (C672 * C458 + C673 * C51036 -
                (C117 * C871 + C50890 * C886) * C459 -
                (C117 * C887 + C50890 * C895) * C50848) *
                   C50906 * C111) *
                  C632) *
             C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C119 + C50890 * C126) * C1240 +
           (C117 * C127 + C50890 * C140) * C1236 -
           (C117 * C460 + C50890 * C466) * C1241 -
           (C117 * C467 + C50890 * C478) * C1237 +
           (C117 * C1000 + C50890 * C1005) * C1242 +
           (C117 * C1006 + C50890 * C1015) * C1238 -
           (C117 * C1244 + C50890 * C1248) * C1243 -
           (C117 * C1249 + C50890 * C1256) * C1239) *
              C50906 * C108 +
          (C168 * C1240 + C169 * C1236 - C509 * C1241 - C510 * C1237 +
           C1045 * C1242 + C1046 * C1238 -
           (C117 * C1245 + C50890 * C1250) * C1243 -
           (C117 * C1251 + C50890 * C1257) * C1239) *
              C50906 * C109 +
          (C170 * C1240 + C171 * C1236 - C512 * C1241 - C513 * C1237 +
           C1047 * C1242 + C1048 * C1238 -
           (C117 * C1246 + C50890 * C1252) * C1243 -
           (C117 * C1253 + C50890 * C1258) * C1239) *
              C50906 * C110 +
          (C172 * C1240 + C173 * C1236 - C515 * C1241 - C516 * C1237 +
           C1049 * C1242 + C1050 * C1238 -
           (C117 * C1247 + C50890 * C1254) * C1243 -
           (C117 * C1255 + C50890 * C1259) * C1239) *
              C50906 * C111) *
         C50806 * C50774) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C458 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C51036 -
            (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
             C2449 * C460 + C2444 * C466) *
                C459 -
            (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
             C2449 * C467 + C2444 * C478) *
                C50848) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C458 + (C2492 + C2493 + C2494) * C51036 -
            (C2859 + C2860 + C2861) * C459 - (C2862 + C2863 + C2864) * C50848) *
               C50906 * C50758) *
              C50806 * C295 +
          (((C2861 + C2860 + C2859) * C459 -
            ((C2494 + C2493 + C2492) * C51036 +
             (C2491 + C2490 + C2489) * C458) +
            (C2864 + C2863 + C2862) * C50848) *
               C50906 * C2447 +
           ((C2865 + C2866 + C2867) * C459 -
            ((C2495 + C2496 + C2497) * C51036 +
             (C2498 + C2499 + C2500) * C458) +
            (C2868 + C2869 + C2870) * C50848) *
               C50906 * C50758) *
              C50806 * C296 +
          (((C2500 + C2499 + C2498) * C458 + (C2497 + C2496 + C2495) * C51036 -
            (C2867 + C2866 + C2865) * C459 - (C2870 + C2869 + C2868) * C50848) *
               C50906 * C2447 +
           ((C2501 + C2502 + C2503) * C458 + (C2504 + C2505 + C2506) * C51036 -
            (C2451 * C871 + C2446 * C886 + C2450 * C867 + C2445 * C878 +
             C2449 * C463 + C2444 * C472) *
                C459 -
            (C2451 * C887 + C2446 * C895 + C2450 * C879 + C2445 * C891 +
             C2449 * C473 + C2444 * C481) *
                C50848) *
               C50906 * C50758) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C458 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C51036 -
            (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
             C2449 * C460 + C2444 * C466) *
                C459 -
            (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
             C2449 * C467 + C2444 * C478) *
                C50848) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C458 + (C2492 + C2493 + C2494) * C51036 -
            (C2859 + C2860 + C2861) * C459 - (C2862 + C2863 + C2864) * C50848) *
               C50906 * C50758) *
              C630 +
          (((C2449 * C864 + C2444 * C872 + C2450 * C868 + C2445 * C880 +
             C2451 * C3298 + C2446 * C3302) *
                C459 -
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C51036 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C458) +
            (C2449 * C873 + C2444 * C888 + C2450 * C881 + C2445 * C892 +
             C2451 * C3303 + C2446 * C3310) *
                C50848) *
               C50906 * C2447 +
           ((C2449 * C865 + C2444 * C874 + C2450 * C869 + C2445 * C882 +
             C2451 * C3299 + C2446 * C3304) *
                C459 -
            ((C2677 + C2678 + C2679) * C51036 +
             (C2680 + C2681 + C2682) * C458) +
            (C2449 * C875 + C2444 * C889 + C2450 * C883 + C2445 * C893 +
             C2451 * C3305 + C2446 * C3311) *
                C50848) *
               C50906 * C50758) *
              C631 +
          (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
             C2451 * C3016 + C2446 * C3019) *
                C458 +
            (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
             C2451 * C3020 + C2446 * C3025) *
                C51036 -
            (C2451 * C3300 + C2446 * C3306 + C2450 * C3298 + C2445 * C3302 +
             C2449 * C868 + C2444 * C880) *
                C459 -
            (C2451 * C3307 + C2446 * C3312 + C2450 * C3303 + C2445 * C3310 +
             C2449 * C881 + C2444 * C892) *
                C50848) *
               C50906 * C2447 +
           ((C3041 + C3042 + C3043) * C458 + (C3044 + C3045 + C3046) * C51036 -
            (C2451 * C3301 + C2446 * C3308 + C2450 * C3299 + C2445 * C3304 +
             C2449 * C869 + C2444 * C882) *
                C459 -
            (C2451 * C3309 + C2446 * C3313 + C2450 * C3305 + C2445 * C3311 +
             C2449 * C883 + C2444 * C893) *
                C50848) *
               C50906 * C50758) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
            C2451 * C635 + C2446 * C640) *
               C1240 +
           (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
            C2451 * C641 + C2446 * C650) *
               C1236 -
           (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
            C2449 * C460 + C2444 * C466) *
               C1241 -
           (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
            C2449 * C467 + C2444 * C478) *
               C1237 +
           (C2449 * C1000 + C2444 * C1005 + C2450 * C1154 + C2445 * C1158 +
            C2451 * C3460 + C2446 * C3463) *
               C1242 +
           (C2449 * C1006 + C2444 * C1015 + C2450 * C1159 + C2445 * C1166 +
            C2451 * C3464 + C2446 * C3469) *
               C1238 -
           (C2451 * C3742 + C2446 * C3746 + C2450 * C3743 + C2445 * C3747 +
            C2449 * C1244 + C2444 * C1248) *
               C1243 -
           (C2451 * C3748 + C2446 * C3754 + C2450 * C3749 + C2445 * C3755 +
            C2449 * C1249 + C2444 * C1256) *
               C1239) *
              C50906 * C2447 +
          ((C2489 + C2490 + C2491) * C1240 + (C2492 + C2493 + C2494) * C1236 -
           (C2859 + C2860 + C2861) * C1241 - (C2862 + C2863 + C2864) * C1237 +
           (C3485 + C3486 + C3487) * C1242 + (C3488 + C3489 + C3490) * C1238 -
           (C2451 * C3744 + C2446 * C3750 + C2450 * C3745 + C2445 * C3751 +
            C2449 * C1245 + C2444 * C1250) *
               C1243 -
           (C2451 * C3752 + C2446 * C3756 + C2450 * C3753 + C2445 * C3757 +
            C2449 * C1251 + C2444 * C1257) *
               C1239) *
              C50906 * C50758) *
         C50806 * C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C458 +
             (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
             C5693 * C50848) *
                C5336 +
            (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
                C5337 +
            (C5694 * C458 + C5695 * C51036 -
             (C117 * C1244 + C50890 * C1248) * C459 -
             (C117 * C1249 + C50890 * C1256) * C50848) *
                C5338) *
               C2447 +
           ((C485 + C486 - C519 - C520) * C5336 +
            (C5672 + C5673 - C5674 - C5675) * C5337 +
            (C5676 + C5677 - C5700 - C5701) * C5338) *
               C50758) *
              C50806 * C295 +
          (((C519 - (C486 + C485) + C520) * C5336 +
            (C5674 - (C5673 + C5672) + C5675) * C5337 +
            (C5700 - (C5677 + C5676) + C5701) * C5338) *
               C2447 +
           ((C521 - (C492 + C491) + C522) * C5336 +
            (C5682 - (C5683 + C5684) + C5685) * C5337 +
            (C5702 - (C5688 + C5689) + C5703) * C5338) *
               C50758) *
              C50806 * C296 +
          ((C529 * C5336 + (C5684 + C5683 - C5682 - C5685) * C5337 +
            (C5689 + C5688 - C5702 - C5703) * C5338) *
               C2447 +
           (C530 * C5336 +
            (C515 * C458 + C516 * C51036 - C1049 * C459 - C1050 * C50848) *
                C5337 +
            (C1049 * C458 + C1050 * C51036 -
             (C117 * C1247 + C50890 * C1254) * C459 -
             (C117 * C1255 + C50890 * C1259) * C50848) *
                C5338) *
               C50758) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C458 +
             (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
             C5693 * C50848) *
                C5336 +
            (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
                C5337 +
            (C5694 * C458 + C5695 * C51036 -
             (C117 * C1244 + C50890 * C1248) * C459 -
             (C117 * C1249 + C50890 * C1256) * C50848) *
                C5338) *
               C2447 +
           ((C485 + C486 - C519 - C520) * C5336 +
            (C5672 + C5673 - C5674 - C5675) * C5337 +
            (C5676 + C5677 - C5700 - C5701) * C5338) *
               C50758) *
              C630 +
          (((C6126 * C459 -
             ((C117 * C310 + C50890 * C319) * C51036 +
              (C117 * C301 + C50890 * C311) * C458) +
             C6127 * C50848) *
                C5336 +
            (C6128 * C459 - (C6127 * C51036 + C6126 * C458) + C6129 * C50848) *
                C5337 +
            ((C117 * C3743 + C50890 * C3747) * C459 -
             (C6129 * C51036 + C6128 * C458) +
             (C117 * C3749 + C50890 * C3755) * C50848) *
                C5338) *
               C2447 +
           ((C1625 - (C1603 + C1604) + C1626) * C5336 +
            (C5511 * C459 - (C1620 * C51036 + C1619 * C458) + C5510 * C50848) *
                C5337 +
            ((C117 * C3745 + C50890 * C3751) * C459 -
             (C5510 * C51036 + C5511 * C458) +
             (C117 * C3753 + C50890 * C3757) * C50848) *
                C5338) *
               C50758) *
              C631 +
          ((((C117 * C635 + C50890 * C640) * C458 +
             (C117 * C641 + C50890 * C650) * C51036 - C6130 * C459 -
             C6131 * C50848) *
                C5336 +
            (C6130 * C458 + C6131 * C51036 - C6132 * C459 - C6133 * C50848) *
                C5337 +
            (C6132 * C458 + C6133 * C51036 -
             (C117 * C3742 + C50890 * C3746) * C459 -
             (C117 * C3748 + C50890 * C3754) * C50848) *
                C5338) *
               C2447 +
           ((C668 * C458 + C669 * C51036 - C5858 * C459 - C5859 * C50848) *
                C5336 +
            (C5858 * C458 + C5859 * C51036 - C5860 * C459 - C5861 * C50848) *
                C5337 +
            (C5860 * C458 + C5861 * C51036 -
             (C117 * C3744 + C50890 * C3750) * C459 -
             (C117 * C3752 + C50890 * C3756) * C50848) *
                C5338) *
               C50758) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C1240 +
            (C117 * C127 + C50890 * C140) * C1236 - C5692 * C1241 -
            C5693 * C1237 + C5694 * C1242 + C5695 * C1238 - C6310 * C1243 -
            C6311 * C1239) *
               C5336 +
           (C5692 * C1240 + C5693 * C1236 - C5694 * C1241 - C5695 * C1237 +
            C6310 * C1242 + C6311 * C1238 - C6592 * C1243 - C6593 * C1239) *
               C5337 +
           (C5694 * C1240 + C5695 * C1236 - C6310 * C1241 - C6311 * C1237 +
            C6592 * C1242 + C6593 * C1238 -
            (C117 * C6579 + C50890 * C6581) * C1243 -
            (C117 * C6582 + C50890 * C6585) * C1239) *
               C5338) *
              C2447 +
          ((C168 * C1240 + C169 * C1236 - C509 * C1241 - C510 * C1237 +
            C1045 * C1242 + C1046 * C1238 - C5696 * C1243 - C5697 * C1239) *
               C5336 +
           (C509 * C1240 + C510 * C1236 - C1045 * C1241 - C1046 * C1237 +
            C5696 * C1242 + C5697 * C1238 - C6312 * C1243 - C6313 * C1239) *
               C5337 +
           (C1045 * C1240 + C1046 * C1236 - C5696 * C1241 - C5697 * C1237 +
            C6312 * C1242 + C6313 * C1238 -
            (C117 * C6580 + C50890 * C6583) * C1243 -
            (C117 * C6584 + C50890 * C6586) * C1239) *
               C5338) *
              C50758) *
         C50806 * C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C1730 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C1728 -
            (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
             C2449 * C460 + C2444 * C466) *
                C1731 -
            (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
             C2449 * C467 + C2444 * C478) *
                C50848) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C1730 + (C2492 + C2493 + C2494) * C1728 -
            (C2859 + C2860 + C2861) * C1731 -
            (C2862 + C2863 + C2864) * C50848) *
               C50906 * C50758) *
              C50806 * C51080 +
          (((C2861 + C2860 + C2859) * C1731 -
            ((C2494 + C2493 + C2492) * C1728 +
             (C2491 + C2490 + C2489) * C1730) +
            (C2864 + C2863 + C2862) * C50848) *
               C50906 * C2447 +
           ((C2865 + C2866 + C2867) * C1731 -
            ((C2495 + C2496 + C2497) * C1728 +
             (C2498 + C2499 + C2500) * C1730) +
            (C2868 + C2869 + C2870) * C50848) *
               C50906 * C50758) *
              C50806 * C51065 +
          (((C2500 + C2499 + C2498) * C1730 + (C2497 + C2496 + C2495) * C1728 -
            (C2867 + C2866 + C2865) * C1731 -
            (C2870 + C2869 + C2868) * C50848) *
               C50906 * C2447 +
           ((C2501 + C2502 + C2503) * C1730 + (C2504 + C2505 + C2506) * C1728 -
            (C2451 * C871 + C2446 * C886 + C2450 * C867 + C2445 * C878 +
             C2449 * C463 + C2444 * C472) *
                C1731 -
            (C2451 * C887 + C2446 * C895 + C2450 * C879 + C2445 * C891 +
             C2449 * C473 + C2444 * C481) *
                C50848) *
               C50906 * C50758) *
              C50806 * C1362)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C1730 +
            (C117 * C127 + C50890 * C140) * C1728 -
            (C117 * C460 + C50890 * C466) * C1731 -
            (C117 * C467 + C50890 * C478) * C50848) *
               C50906 * C108 +
           (C1733 + C1734 - C1735 - C1736) * C50906 * C109 + C1755 * C110 +
           C1756 * C111) *
              C50806 * C51080 +
          ((C1735 - (C1734 + C1733) + C1736) * C50906 * C108 +
           (C1739 - (C1738 + C1737) + C1740) * C50906 * C109 +
           (C1743 - (C1742 + C1741) + C1744) * C50906 * C110 +
           (C1745 - (C1746 + C1747) + C1748) * C50906 * C111) *
              C50806 * C51065 +
          (C1755 * C108 + C1756 * C109 +
           (C1747 + C1746 - C1745 - C1748) * C50906 * C110 +
           (C176 * C1730 + C177 * C1728 -
            (C117 * C465 + C50890 * C476) * C1731 -
            (C117 * C477 + C50890 * C483) * C50848) *
               C50906 * C111) *
              C50806 * C1362)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C1730 +
             (C117 * C127 + C50890 * C140) * C1728 - C5692 * C1731 -
             C5693 * C50848) *
                C5336 +
            (C5692 * C1730 + C5693 * C1728 - C5694 * C1731 - C5695 * C50848) *
                C5337 +
            (C5694 * C1730 + C5695 * C1728 - C6310 * C1731 - C6311 * C50848) *
                C5338) *
               C2447 +
           ((C1733 + C1734 - C1735 - C1736) * C5336 +
            (C7238 + C7239 - C7240 - C7241) * C5337 +
            (C7242 + C7243 - C7244 - C7245) * C5338) *
               C50758) *
              C50806 * C51080 +
          (((C1735 - (C1734 + C1733) + C1736) * C5336 +
            (C7240 - (C7239 + C7238) + C7241) * C5337 +
            (C7244 - (C7243 + C7242) + C7245) * C5338) *
               C2447 +
           ((C1739 - (C1738 + C1737) + C1740) * C5336 +
            (C7246 - (C7247 + C7248) + C7249) * C5337 +
            (C7250 - (C7251 + C7252) + C7253) * C5338) *
               C50758) *
              C50806 * C51065 +
          ((C1753 * C5336 + (C7248 + C7247 - C7246 - C7249) * C5337 +
            (C7252 + C7251 - C7250 - C7253) * C5338) *
               C2447 +
           (C1754 * C5336 +
            (C515 * C1730 + C516 * C1728 - C1049 * C1731 - C1050 * C50848) *
                C5337 +
            (C1049 * C1730 + C1050 * C1728 -
             (C117 * C1247 + C50890 * C1254) * C1731 -
             (C117 * C1255 + C50890 * C1259) * C50848) *
                C5338) *
               C50758) *
              C50806 * C1362)) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C1730 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C1728 -
             (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
              C2449 * C460 + C2444 * C466) *
                 C1731 -
             (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
              C2449 * C467 + C2444 * C478) *
                 C50848) *
                C50906 * C2447 +
            ((C2489 + C2490 + C2491) * C1730 + (C2492 + C2493 + C2494) * C1728 -
             (C2859 + C2860 + C2861) * C1731 -
             (C2862 + C2863 + C2864) * C50848) *
                C50906 * C50758) *
               C51034 +
           (((C2449 * C864 + C2444 * C872 + C2450 * C868 + C2445 * C880 +
              C2451 * C3298 + C2446 * C3302) *
                 C1731 -
             ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
               C2449 * C310 + C2444 * C319) *
                  C1728 +
              (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
               C2449 * C301 + C2444 * C311) *
                  C1730) +
             (C2449 * C873 + C2444 * C888 + C2450 * C881 + C2445 * C892 +
              C2451 * C3303 + C2446 * C3310) *
                 C50848) *
                C50906 * C2447 +
            ((C4261 + C4262 + C4263) * C1731 -
             ((C2677 + C2678 + C2679) * C1728 +
              (C2680 + C2681 + C2682) * C1730) +
             (C4264 + C4265 + C4266) * C50848) *
                C50906 * C50758) *
               C50822) *
              C1464 +
          ((((C2861 + C2860 + C2859) * C1731 -
             ((C2494 + C2493 + C2492) * C1728 +
              (C2491 + C2490 + C2489) * C1730) +
             (C2864 + C2863 + C2862) * C50848) *
                C50906 * C2447 +
            ((C2865 + C2866 + C2867) * C1731 -
             ((C2495 + C2496 + C2497) * C1728 +
              (C2498 + C2499 + C2500) * C1730) +
             (C2868 + C2869 + C2870) * C50848) *
                C50906 * C50758) *
               C51034 +
           (((C2682 + C2681 + C2680) * C1730 + (C2679 + C2678 + C2677) * C1728 -
             (C4263 + C4262 + C4261) * C1731 -
             (C4266 + C4265 + C4264) * C50848) *
                C50906 * C2447 +
            ((C2683 + C2684 + C2685) * C1730 + (C2686 + C2687 + C2688) * C1728 -
             (C2451 * C4244 + C2446 * C4245 + C2450 * C870 + C2445 * C884 +
              C2449 * C866 + C2444 * C876) *
                 C1731 -
             (C2451 * C4246 + C2446 * C4247 + C2450 * C885 + C2445 * C894 +
              C2449 * C877 + C2444 * C890) *
                 C50848) *
                C50906 * C50758) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C1730 +
             (C117 * C127 + C50890 * C140) * C1728 -
             (C117 * C460 + C50890 * C466) * C1731 -
             (C117 * C467 + C50890 * C478) * C50848) *
                C50906 * C108 +
            (C1733 + C1734 - C1735 - C1736) * C50906 * C109 + C1755 * C110 +
            C1756 * C111) *
               C51034 +
           (((C117 * C864 + C50890 * C872) * C1731 -
             ((C117 * C310 + C50890 * C319) * C1728 +
              (C117 * C301 + C50890 * C311) * C1730) +
             (C117 * C873 + C50890 * C888) * C50848) *
                C50906 * C108 +
            (C1887 - (C1888 + C1889) + C1890) * C50906 * C109 +
            (C1891 - (C1892 + C1893) + C1894) * C50906 * C110 +
            (C1895 - (C1896 + C1897) + C1898) * C50906 * C111) *
               C50822) *
              C1464 +
          (((C1735 - (C1734 + C1733) + C1736) * C50906 * C108 +
            (C1739 - (C1738 + C1737) + C1740) * C50906 * C109 +
            (C1743 - (C1742 + C1741) + C1744) * C50906 * C110 +
            (C1745 - (C1746 + C1747) + C1748) * C50906 * C111) *
               C51034 +
           ((C1889 + C1888 - C1887 - C1890) * C50906 * C108 +
            (C1893 + C1892 - C1891 - C1894) * C50906 * C109 +
            (C1897 + C1896 - C1895 - C1898) * C50906 * C110 +
            (C345 * C1730 + C346 * C1728 -
             (C117 * C1596 + C50890 * C1597) * C1731 -
             (C117 * C1598 + C50890 * C1599) * C50848) *
                C50906 * C111) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C1730 +
              (C117 * C127 + C50890 * C140) * C1728 - C5692 * C1731 -
              C5693 * C50848) *
                 C5336 +
             (C5692 * C1730 + C5693 * C1728 - C5694 * C1731 - C5695 * C50848) *
                 C5337 +
             (C5694 * C1730 + C5695 * C1728 - C6310 * C1731 - C6311 * C50848) *
                 C5338) *
                C2447 +
            ((C1733 + C1734 - C1735 - C1736) * C5336 +
             (C7238 + C7239 - C7240 - C7241) * C5337 +
             (C7242 + C7243 - C7244 - C7245) * C5338) *
                C50758) *
               C51034 +
           (((C6126 * C1731 -
              ((C117 * C310 + C50890 * C319) * C1728 +
               (C117 * C301 + C50890 * C311) * C1730) +
              C6127 * C50848) *
                 C5336 +
             (C6128 * C1731 - (C6127 * C1728 + C6126 * C1730) +
              C6129 * C50848) *
                 C5337 +
             (C6478 * C1731 - (C6129 * C1728 + C6128 * C1730) +
              C6479 * C50848) *
                 C5338) *
                C2447 +
            ((C1887 - (C1888 + C1889) + C1890) * C5336 +
             (C7448 - (C7449 + C7450) + C7451) * C5337 +
             (C7452 - (C7453 + C7454) + C7455) * C5338) *
                C50758) *
               C50822) *
              C1464 +
          ((((C1735 - (C1734 + C1733) + C1736) * C5336 +
             (C7240 - (C7239 + C7238) + C7241) * C5337 +
             (C7244 - (C7243 + C7242) + C7245) * C5338) *
                C2447 +
            ((C1739 - (C1738 + C1737) + C1740) * C5336 +
             (C7246 - (C7247 + C7248) + C7249) * C5337 +
             (C7250 - (C7251 + C7252) + C7253) * C5338) *
                C50758) *
               C51034 +
           (((C1889 + C1888 - C1887 - C1890) * C5336 +
             (C7450 + C7449 - C7448 - C7451) * C5337 +
             (C7454 + C7453 - C7452 - C7455) * C5338) *
                C2447 +
            ((C1893 + C1892 - C1891 - C1894) * C5336 +
             (C1621 * C1730 + C1622 * C1728 - C5512 * C1731 - C5513 * C50848) *
                 C5337 +
             (C5512 * C1730 + C5513 * C1728 -
              (C117 * C7079 + C50890 * C7080) * C1731 -
              (C117 * C7081 + C50890 * C7082) * C50848) *
                 C5338) *
                C50758) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C1999 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C51082 -
            (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
             C2449 * C460 + C2444 * C466) *
                C2000 -
            (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
             C2449 * C467 + C2444 * C478) *
                C51071 +
            (C2449 * C1000 + C2444 * C1005 + C2450 * C1154 + C2445 * C1158 +
             C2451 * C3460 + C2446 * C3463) *
                C2001 +
            (C2449 * C1006 + C2444 * C1015 + C2450 * C1159 + C2445 * C1166 +
             C2451 * C3464 + C2446 * C3469) *
                C1998) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C1999 + (C2492 + C2493 + C2494) * C51082 -
            (C2859 + C2860 + C2861) * C2000 - (C2862 + C2863 + C2864) * C51071 +
            (C3485 + C3486 + C3487) * C2001 + (C3488 + C3489 + C3490) * C1998) *
               C50906 * C50758) *
              C50806 * C1464 +
          (((C2861 + C2860 + C2859) * C2000 -
            ((C2494 + C2493 + C2492) * C51082 +
             (C2491 + C2490 + C2489) * C1999) +
            (C2864 + C2863 + C2862) * C51071 - (C3487 + C3486 + C3485) * C2001 -
            (C3490 + C3489 + C3488) * C1998) *
               C50906 * C2447 +
           ((C2865 + C2866 + C2867) * C2000 -
            ((C2495 + C2496 + C2497) * C51082 +
             (C2498 + C2499 + C2500) * C1999) +
            (C2868 + C2869 + C2870) * C51071 -
            (C2451 * C3462 + C2446 * C3467 + C2450 * C1156 + C2445 * C1162 +
             C2449 * C1002 + C2444 * C1009) *
                C2001 -
            (C2451 * C3468 + C2446 * C3471 + C2450 * C1163 + C2445 * C1168 +
             C2449 * C1010 + C2444 * C1017) *
                C1998) *
               C50906 * C50758) *
              C50806 * C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C1999 +
            (C117 * C127 + C50890 * C140) * C51082 -
            (C117 * C460 + C50890 * C466) * C2000 -
            (C117 * C467 + C50890 * C478) * C51071 +
            (C117 * C1000 + C50890 * C1005) * C2001 +
            (C117 * C1006 + C50890 * C1015) * C1998) *
               C50906 * C108 +
           (C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C50906 * C109 +
           (C2009 + C2010 - C2011 - C2012 + C2013 + C2014) * C50906 * C110 +
           (C2015 + C2016 - C2017 - C2018 + C2019 + C2020) * C50906 * C111) *
              C50806 * C1464 +
          ((C2005 - (C2004 + C2003) + C2006 - C2007 - C2008) * C50906 * C108 +
           (C2011 - (C2010 + C2009) + C2012 - C2013 - C2014) * C50906 * C109 +
           (C2017 - (C2016 + C2015) + C2018 - C2019 - C2020) * C50906 * C110 +
           (C517 * C2000 - (C174 * C51082 + C175 * C1999) + C518 * C51071 -
            (C117 * C1004 + C50890 * C1013) * C2001 -
            (C117 * C1014 + C50890 * C1019) * C1998) *
               C50906 * C111) *
              C50806 * C50779)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C1999 +
             (C117 * C127 + C50890 * C140) * C51082 - C5692 * C2000 -
             C5693 * C51071 + C5694 * C2001 + C5695 * C1998) *
                C5336 +
            (C5692 * C1999 + C5693 * C51082 - C5694 * C2000 - C5695 * C51071 +
             C6310 * C2001 + C6311 * C1998) *
                C5337 +
            (C5694 * C1999 + C5695 * C51082 - C6310 * C2000 - C6311 * C51071 +
             C6592 * C2001 + C6593 * C1998) *
                C5338) *
               C2447 +
           ((C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C5336 +
            (C7602 + C7603 - C7604 - C7605 + C7606 + C7607) * C5337 +
            (C7608 + C7609 - C7610 - C7611 + C7612 + C7613) * C5338) *
               C50758) *
              C50806 * C1464 +
          (((C2005 - (C2004 + C2003) + C2006 - C2007 - C2008) * C5336 +
            (C7604 - (C7603 + C7602) + C7605 - C7606 - C7607) * C5337 +
            (C7610 - (C7609 + C7608) + C7611 - C7612 - C7613) * C5338) *
               C2447 +
           ((C2011 - (C2010 + C2009) + C2012 - C2013 - C2014) * C5336 +
            (C1047 * C2000 - (C513 * C51082 + C512 * C1999) + C1048 * C51071 -
             C5698 * C2001 - C5699 * C1998) *
                C5337 +
            (C5698 * C2000 - (C1048 * C51082 + C1047 * C1999) + C5699 * C51071 -
             (C117 * C6281 + C50890 * C6286) * C2001 -
             (C117 * C6287 + C50890 * C6290) * C1998) *
                C5338) *
               C50758) *
              C50806 * C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C50906 * C108 +
            (C178 + C179) * C50906 * C109 + C192 * C110 + C193 * C111) *
               C630 -
           (C357 * C111 + C358 * C110 + (C351 + C352) * C50906 * C109 +
            ((C117 * C310 + C50890 * C319) * C50836 +
             (C117 * C301 + C50890 * C311) * C118) *
                C50906 * C108) *
               C631 +
           (((C117 * C635 + C50890 * C640) * C118 +
             (C117 * C641 + C50890 * C650) * C50836) *
                C50906 * C108 +
            (C674 + C675) * C50906 * C109 + (C676 + C677) * C50906 * C110 +
            (C678 + C679) * C50906 * C111) *
               C632) *
              C51027 +
          (((C352 + C351) * C50906 * C108 + (C350 + C349) * C50906 * C109 +
            (C348 + C347) * C50906 * C110 + (C353 + C354) * C50906 * C111) *
               C631 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50906 * C109 +
            (C179 + C178) * C50906 * C108) *
               C630 -
           (((C117 * C648 + C50890 * C654) * C50836 +
             (C117 * C639 + C50890 * C649) * C118) *
                C50906 * C111 +
            (C679 + C678) * C50906 * C110 + (C677 + C676) * C50906 * C109 +
            (C675 + C674) * C50906 * C108) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C118 +
            (C117 * C127 + C50890 * C140) * C50836) *
               C50906 * C108 +
           (C178 + C179) * C50906 * C109 + C192 * C110 + C193 * C111) *
              C50806 * C113 -
          (C194 * C111 + C195 * C110 + (C181 + C180) * C50906 * C109 +
           (C179 + C178) * C50906 * C108) *
              C50806 * C114 +
          (C192 * C108 + C193 * C109 + (C185 + C184) * C50906 * C110 +
           (C186 + C187) * C50906 * C111) *
              C50806 * C115 -
          (((C117 * C138 + C50890 * C146) * C50836 +
            (C117 * C125 + C50890 * C139) * C118) *
               C50906 * C111 +
           (C187 + C186) * C50906 * C110 + C194 * C109 + C195 * C108) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C50836) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C118 + (C2492 + C2493 + C2494) * C50836) *
               C50906 * C50758) *
              C50806 * C113 -
          (((C2495 + C2496 + C2497) * C50836 + (C2498 + C2499 + C2500) * C118) *
               C50906 * C50758 +
           ((C2494 + C2493 + C2492) * C50836 + (C2491 + C2490 + C2489) * C118) *
               C50906 * C2447) *
              C50806 * C114 +
          (((C2500 + C2499 + C2498) * C118 + (C2497 + C2496 + C2495) * C50836) *
               C50906 * C2447 +
           ((C2501 + C2502 + C2503) * C118 + (C2504 + C2505 + C2506) * C50836) *
               C50906 * C50758) *
              C50806 * C115 -
          (((C2451 * C648 + C2446 * C654 + C2450 * C313 + C2445 * C320 +
             C2449 * C134 + C2444 * C144) *
                C50836 +
            (C2451 * C639 + C2446 * C649 + C2450 * C302 + C2445 * C312 +
             C2449 * C123 + C2444 * C135) *
                C118) *
               C50906 * C50758 +
           ((C2506 + C2505 + C2504) * C50836 + (C2503 + C2502 + C2501) * C118) *
               C50906 * C2447) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C50836) *
                C50906 * C2447 +
            ((C2489 + C2490 + C2491) * C118 +
             (C2492 + C2493 + C2494) * C50836) *
                C50906 * C50758) *
               C630 -
           (((C2677 + C2678 + C2679) * C50836 +
             (C2680 + C2681 + C2682) * C118) *
                C50906 * C50758 +
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C50836 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C118) *
                C50906 * C2447) *
               C631 +
           (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
              C2451 * C3016 + C2446 * C3019) *
                 C118 +
             (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
              C2451 * C3020 + C2446 * C3025) *
                 C50836) *
                C50906 * C2447 +
            ((C3041 + C3042 + C3043) * C118 +
             (C3044 + C3045 + C3046) * C50836) *
                C50906 * C50758) *
               C632) *
              C51027 +
          ((((C2682 + C2681 + C2680) * C118 +
             (C2679 + C2678 + C2677) * C50836) *
                C50906 * C2447 +
            ((C2683 + C2684 + C2685) * C118 +
             (C2686 + C2687 + C2688) * C50836) *
                C50906 * C50758) *
               C631 -
           (((C2495 + C2496 + C2497) * C50836 +
             (C2498 + C2499 + C2500) * C118) *
                C50906 * C50758 +
            ((C2494 + C2493 + C2492) * C50836 +
             (C2491 + C2490 + C2489) * C118) *
                C50906 * C2447) *
               C630 -
           (((C2451 * C3023 + C2446 * C3027 + C2450 * C756 + C2445 * C763 +
              C2449 * C645 + C2444 * C652) *
                 C50836 +
             (C2451 * C3018 + C2446 * C3024 + C2450 * C751 + C2445 * C757 +
              C2449 * C637 + C2444 * C644) *
                 C118) *
                C50906 * C50758 +
            ((C3046 + C3045 + C3044) * C50836 +
             (C3043 + C3042 + C3041) * C118) *
                C50906 * C2447) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C5336 +
            ((C117 * C460 + C50890 * C466) * C118 +
             (C117 * C467 + C50890 * C478) * C50836) *
                C5337 +
            ((C117 * C1000 + C50890 * C1005) * C118 +
             (C117 * C1006 + C50890 * C1015) * C50836) *
                C5338) *
               C2447 +
           ((C178 + C179) * C5336 + (C5340 + C5341) * C5337 +
            (C5342 + C5343) * C5338) *
               C50758) *
              C50806 * C113 -
          (((C5344 + C5345) * C5338 + (C5346 + C5347) * C5337 +
            (C181 + C180) * C5336) *
               C50758 +
           ((C5343 + C5342) * C5338 + (C5341 + C5340) * C5337 +
            (C179 + C178) * C5336) *
               C2447) *
              C50806 * C114 +
          ((C188 * C5336 + (C5347 + C5346) * C5337 + (C5345 + C5344) * C5338) *
               C2447 +
           (C189 * C5336 + (C5348 + C5349) * C5337 + (C5350 + C5351) * C5338) *
               C50758) *
              C50806 * C115 -
          ((((C117 * C1014 + C50890 * C1019) * C50836 +
             (C117 * C1004 + C50890 * C1013) * C118) *
                C5338 +
            (C518 * C50836 + C517 * C118) * C5337 + C190 * C5336) *
               C50758 +
           ((C5351 + C5350) * C5338 + (C5349 + C5348) * C5337 + C191 * C5336) *
               C2447) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C5336 +
             (C5692 * C118 + C5693 * C50836) * C5337 +
             (C5694 * C118 + C5695 * C50836) * C5338) *
                C2447 +
            ((C178 + C179) * C5336 + (C5340 + C5341) * C5337 +
             (C5342 + C5343) * C5338) *
                C50758) *
               C630 -
           (((C5514 + C5515) * C5338 + (C5502 + C5503) * C5337 +
             (C351 + C352) * C5336) *
                C50758 +
            (((C117 * C1159 + C50890 * C1166) * C50836 +
              (C117 * C1154 + C50890 * C1158) * C118) *
                 C5338 +
             ((C117 * C873 + C50890 * C888) * C50836 +
              (C117 * C864 + C50890 * C872) * C118) *
                 C5337 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C5336) *
                C2447) *
               C631 +
           ((((C117 * C635 + C50890 * C640) * C118 +
              (C117 * C641 + C50890 * C650) * C50836) *
                 C5336 +
             ((C117 * C868 + C50890 * C880) * C118 +
              (C117 * C881 + C50890 * C892) * C50836) *
                 C5337 +
             ((C117 * C3460 + C50890 * C3463) * C118 +
              (C117 * C3464 + C50890 * C3469) * C50836) *
                 C5338) *
                C2447 +
            ((C674 + C675) * C5336 + (C5862 + C5863) * C5337 +
             (C5864 + C5865) * C5338) *
                C50758) *
               C632) *
              C51027 +
          ((((C352 + C351) * C5336 + (C5503 + C5502) * C5337 +
             (C5515 + C5514) * C5338) *
                C2447 +
            ((C350 + C349) * C5336 + (C5504 + C5505) * C5337 +
             (C5516 + C5517) * C5338) *
                C50758) *
               C631 -
           (((C5344 + C5345) * C5338 + (C5346 + C5347) * C5337 +
             (C181 + C180) * C5336) *
                C50758 +
            ((C5343 + C5342) * C5338 + (C5341 + C5340) * C5337 +
             (C179 + C178) * C5336) *
                C2447) *
               C630 -
           ((((C117 * C3468 + C50890 * C3471) * C50836 +
              (C117 * C3462 + C50890 * C3467) * C118) *
                 C5338 +
             ((C117 * C885 + C50890 * C894) * C50836 +
              (C117 * C870 + C50890 * C884) * C118) *
                 C5337 +
             (C677 + C676) * C5336) *
                C50758 +
            ((C5865 + C5864) * C5338 + (C5863 + C5862) * C5337 +
             (C675 + C674) * C5336) *
                C2447) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C118 +
            (C117 * C127 + C50890 * C140) * C50836) *
               C50906 * C108 +
           (C178 + C179) * C50906 * C109 + C192 * C110 + C193 * C111) *
              C745 -
          (C357 * C111 + C358 * C110 + (C351 + C352) * C50906 * C109 +
           ((C117 * C310 + C50890 * C319) * C50836 +
            (C117 * C301 + C50890 * C311) * C118) *
               C50906 * C108) *
              C746 +
          (((C117 * C635 + C50890 * C640) * C118 +
            (C117 * C641 + C50890 * C650) * C50836) *
               C50906 * C108 +
           (C674 + C675) * C50906 * C109 + (C676 + C677) * C50906 * C110 +
           (C678 + C679) * C50906 * C111) *
              C747 -
          (((C117 * C754 + C50890 * C762) * C50836 +
            (C117 * C750 + C50890 * C755) * C118) *
               C50906 * C111 +
           ((C117 * C756 + C50890 * C763) * C50836 +
            (C117 * C751 + C50890 * C757) * C118) *
               C50906 * C110 +
           ((C117 * C758 + C50890 * C764) * C50836 +
            (C117 * C752 + C50890 * C759) * C118) *
               C50906 * C109 +
           ((C117 * C760 + C50890 * C765) * C50836 +
            (C117 * C753 + C50890 * C761) * C118) *
               C50906 * C108) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C50906 * C108 +
            (C178 + C179) * C50906 * C109 + C192 * C110 + C193 * C111) *
               C51034 -
           (C357 * C111 + C358 * C110 + (C351 + C352) * C50906 * C109 +
            ((C117 * C310 + C50890 * C319) * C50836 +
             (C117 * C301 + C50890 * C311) * C118) *
                C50906 * C108) *
               C50822) *
              C295 +
          (((C352 + C351) * C50906 * C108 + (C350 + C349) * C50906 * C109 +
            (C348 + C347) * C50906 * C110 + (C353 + C354) * C50906 * C111) *
               C50822 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50906 * C109 +
            (C179 + C178) * C50906 * C108) *
               C51034) *
              C296 +
          ((C192 * C108 + C193 * C109 + (C185 + C184) * C50906 * C110 +
            (C186 + C187) * C50906 * C111) *
               C51034 -
           (((C117 * C314 + C50890 * C321) * C50836 +
             (C117 * C303 + C50890 * C315) * C118) *
                C50906 * C111 +
            (C354 + C353) * C50906 * C110 + C357 * C109 + C358 * C108) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C50836) *
                C50906 * C2447 +
            ((C2489 + C2490 + C2491) * C118 +
             (C2492 + C2493 + C2494) * C50836) *
                C50906 * C50758) *
               C51034 -
           (((C2677 + C2678 + C2679) * C50836 +
             (C2680 + C2681 + C2682) * C118) *
                C50906 * C50758 +
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C50836 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C118) *
                C50906 * C2447) *
               C50822) *
              C295 +
          ((((C2682 + C2681 + C2680) * C118 +
             (C2679 + C2678 + C2677) * C50836) *
                C50906 * C2447 +
            ((C2683 + C2684 + C2685) * C118 +
             (C2686 + C2687 + C2688) * C50836) *
                C50906 * C50758) *
               C50822 -
           (((C2495 + C2496 + C2497) * C50836 +
             (C2498 + C2499 + C2500) * C118) *
                C50906 * C50758 +
            ((C2494 + C2493 + C2492) * C50836 +
             (C2491 + C2490 + C2489) * C118) *
                C50906 * C2447) *
               C51034) *
              C296 +
          ((((C2500 + C2499 + C2498) * C118 +
             (C2497 + C2496 + C2495) * C50836) *
                C50906 * C2447 +
            ((C2501 + C2502 + C2503) * C118 +
             (C2504 + C2505 + C2506) * C50836) *
                C50906 * C50758) *
               C51034 -
           (((C2451 * C754 + C2446 * C762 + C2450 * C647 + C2445 * C653 +
              C2449 * C304 + C2444 * C316) *
                 C50836 +
             (C2451 * C750 + C2446 * C755 + C2450 * C638 + C2445 * C646 +
              C2449 * C298 + C2444 * C305) *
                 C118) *
                C50906 * C50758 +
            ((C2688 + C2687 + C2686) * C50836 +
             (C2685 + C2684 + C2683) * C118) *
                C50906 * C2447) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C50836) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C118 + (C2492 + C2493 + C2494) * C50836) *
               C50906 * C50758) *
              C745 -
          (((C2677 + C2678 + C2679) * C50836 + (C2680 + C2681 + C2682) * C118) *
               C50906 * C50758 +
           ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
             C2449 * C310 + C2444 * C319) *
                C50836 +
            (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
             C2449 * C301 + C2444 * C311) *
                C118) *
               C50906 * C2447) *
              C746 +
          (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
             C2451 * C3016 + C2446 * C3019) *
                C118 +
            (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
             C2451 * C3020 + C2446 * C3025) *
                C50836) *
               C50906 * C2447 +
           ((C3041 + C3042 + C3043) * C118 + (C3044 + C3045 + C3046) * C50836) *
               C50906 * C50758) *
              C747 -
          (((C2451 * C3146 + C2446 * C3150 + C2450 * C3022 + C2445 * C3026 +
             C2449 * C758 + C2444 * C764) *
                C50836 +
            (C2451 * C3144 + C2446 * C3147 + C2450 * C3017 + C2445 * C3021 +
             C2449 * C752 + C2444 * C759) *
                C118) *
               C50906 * C50758 +
           ((C2451 * C3148 + C2446 * C3151 + C2450 * C3020 + C2445 * C3025 +
             C2449 * C760 + C2444 * C765) *
                C50836 +
            (C2451 * C3145 + C2446 * C3149 + C2450 * C3016 + C2445 * C3019 +
             C2449 * C753 + C2444 * C761) *
                C118) *
               C50906 * C2447) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C5336 +
             ((C117 * C460 + C50890 * C466) * C118 +
              (C117 * C467 + C50890 * C478) * C50836) *
                 C5337 +
             ((C117 * C1000 + C50890 * C1005) * C118 +
              (C117 * C1006 + C50890 * C1015) * C50836) *
                 C5338) *
                C2447 +
            ((C178 + C179) * C5336 + (C5340 + C5341) * C5337 +
             (C5342 + C5343) * C5338) *
                C50758) *
               C51034 -
           (((C5514 + C5515) * C5338 + (C5502 + C5503) * C5337 +
             (C351 + C352) * C5336) *
                C50758 +
            (((C117 * C1159 + C50890 * C1166) * C50836 +
              (C117 * C1154 + C50890 * C1158) * C118) *
                 C5338 +
             ((C117 * C873 + C50890 * C888) * C50836 +
              (C117 * C864 + C50890 * C872) * C118) *
                 C5337 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C5336) *
                C2447) *
               C50822) *
              C295 +
          ((((C352 + C351) * C5336 + (C5503 + C5502) * C5337 +
             (C5515 + C5514) * C5338) *
                C2447 +
            ((C350 + C349) * C5336 + (C5504 + C5505) * C5337 +
             (C5516 + C5517) * C5338) *
                C50758) *
               C50822 -
           (((C5344 + C5345) * C5338 + (C5346 + C5347) * C5337 +
             (C181 + C180) * C5336) *
                C50758 +
            ((C5343 + C5342) * C5338 + (C5341 + C5340) * C5337 +
             (C179 + C178) * C5336) *
                C2447) *
               C51034) *
              C296 +
          (((C188 * C5336 + (C5347 + C5346) * C5337 + (C5345 + C5344) * C5338) *
                C2447 +
            (C189 * C5336 + (C5348 + C5349) * C5337 + (C5350 + C5351) * C5338) *
                C50758) *
               C51034 -
           ((((C117 * C1165 + C50890 * C1169) * C50836 +
              (C117 * C1157 + C50890 * C1164) * C118) *
                 C5338 +
             (C1624 * C50836 + C1623 * C118) * C5337 + C355 * C5336) *
                C50758 +
            ((C5517 + C5516) * C5338 + (C5505 + C5504) * C5337 + C356 * C5336) *
                C2447) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C5336 +
            (C5692 * C118 + C5693 * C50836) * C5337 +
            (C5694 * C118 + C5695 * C50836) * C5338) *
               C2447 +
           ((C178 + C179) * C5336 + (C5340 + C5341) * C5337 +
            (C5342 + C5343) * C5338) *
               C50758) *
              C745 -
          (((C5514 + C5515) * C5338 + (C5502 + C5503) * C5337 +
            (C351 + C352) * C5336) *
               C50758 +
           (((C117 * C1159 + C50890 * C1166) * C50836 +
             (C117 * C1154 + C50890 * C1158) * C118) *
                C5338 +
            ((C117 * C873 + C50890 * C888) * C50836 +
             (C117 * C864 + C50890 * C872) * C118) *
                C5337 +
            ((C117 * C310 + C50890 * C319) * C50836 +
             (C117 * C301 + C50890 * C311) * C118) *
                C5336) *
               C2447) *
              C746 +
          ((((C117 * C635 + C50890 * C640) * C118 +
             (C117 * C641 + C50890 * C650) * C50836) *
                C5336 +
            ((C117 * C868 + C50890 * C880) * C118 +
             (C117 * C881 + C50890 * C892) * C50836) *
                C5337 +
            ((C117 * C3460 + C50890 * C3463) * C118 +
             (C117 * C3464 + C50890 * C3469) * C50836) *
                C5338) *
               C2447 +
           ((C674 + C675) * C5336 + (C5862 + C5863) * C5337 +
            (C5864 + C5865) * C5338) *
               C50758) *
              C747 -
          ((((C117 * C3641 + C50890 * C3643) * C50836 +
             (C117 * C3637 + C50890 * C3640) * C118) *
                C5338 +
            ((C117 * C3305 + C50890 * C3311) * C50836 +
             (C117 * C3299 + C50890 * C3304) * C118) *
                C5337 +
            ((C117 * C758 + C50890 * C764) * C50836 +
             (C117 * C752 + C50890 * C759) * C118) *
                C5336) *
               C50758 +
           (((C117 * C3639 + C50890 * C3642) * C50836 +
             (C117 * C3636 + C50890 * C3638) * C118) *
                C5338 +
            ((C117 * C3303 + C50890 * C3310) * C50836 +
             (C117 * C3298 + C50890 * C3302) * C118) *
                C5337 +
            ((C117 * C760 + C50890 * C765) * C50836 +
             (C117 * C753 + C50890 * C761) * C118) *
                C5336) *
               C2447) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C458 +
            (C117 * C127 + C50890 * C140) * C51036 -
            (C117 * C460 + C50890 * C466) * C459 -
            (C117 * C467 + C50890 * C478) * C50848) *
               C50906 * C108 +
           (C485 + C486 - C519 - C520) * C50906 * C109 + C531 * C110 +
           C532 * C111) *
              C630 +
          (((C117 * C864 + C50890 * C872) * C459 -
            ((C117 * C310 + C50890 * C319) * C51036 +
             (C117 * C301 + C50890 * C311) * C458) +
            (C117 * C873 + C50890 * C888) * C50848) *
               C50906 * C108 +
           ((C117 * C865 + C50890 * C874) * C459 -
            (C343 * C51036 + C344 * C458) +
            (C117 * C875 + C50890 * C889) * C50848) *
               C50906 * C109 +
           ((C117 * C866 + C50890 * C876) * C459 -
            (C341 * C51036 + C342 * C458) +
            (C117 * C877 + C50890 * C890) * C50848) *
               C50906 * C110 +
           ((C117 * C867 + C50890 * C878) * C459 -
            (C339 * C51036 + C340 * C458) +
            (C117 * C879 + C50890 * C891) * C50848) *
               C50906 * C111) *
              C631 +
          (((C117 * C635 + C50890 * C640) * C458 +
            (C117 * C641 + C50890 * C650) * C51036 -
            (C117 * C868 + C50890 * C880) * C459 -
            (C117 * C881 + C50890 * C892) * C50848) *
               C50906 * C108 +
           (C668 * C458 + C669 * C51036 - (C117 * C869 + C50890 * C882) * C459 -
            (C117 * C883 + C50890 * C893) * C50848) *
               C50906 * C109 +
           (C670 * C458 + C671 * C51036 - (C117 * C870 + C50890 * C884) * C459 -
            (C117 * C885 + C50890 * C894) * C50848) *
               C50906 * C110 +
           (C672 * C458 + C673 * C51036 - (C117 * C871 + C50890 * C886) * C459 -
            (C117 * C887 + C50890 * C895) * C50848) *
               C50906 * C111) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C458 +
            (C117 * C127 + C50890 * C140) * C51036 -
            (C117 * C460 + C50890 * C466) * C459 -
            (C117 * C467 + C50890 * C478) * C50848) *
               C50906 * C108 +
           (C485 + C486 - C519 - C520) * C50906 * C109 + C531 * C110 +
           C532 * C111) *
              C50806 * C295 +
          ((C519 - (C486 + C485) + C520) * C50906 * C108 +
           (C521 - (C492 + C491) + C522) * C50906 * C109 +
           (C523 - (C498 + C497) + C524) * C50906 * C110 +
           (C525 - (C505 + C506) + C526) * C50906 * C111) *
              C50806 * C296 +
          (C531 * C108 + C532 * C109 +
           (C506 + C505 - C525 - C526) * C50906 * C110 +
           (C176 * C458 + C177 * C51036 - (C117 * C465 + C50890 * C476) * C459 -
            (C117 * C477 + C50890 * C483) * C50848) *
               C50906 * C111) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C458 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C51036 -
            (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
             C2449 * C460 + C2444 * C466) *
                C459 -
            (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
             C2449 * C467 + C2444 * C478) *
                C50848) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C458 + (C2492 + C2493 + C2494) * C51036 -
            (C2859 + C2860 + C2861) * C459 - (C2862 + C2863 + C2864) * C50848) *
               C50906 * C50758) *
              C50806 * C295 +
          (((C2861 + C2860 + C2859) * C459 -
            ((C2494 + C2493 + C2492) * C51036 +
             (C2491 + C2490 + C2489) * C458) +
            (C2864 + C2863 + C2862) * C50848) *
               C50906 * C2447 +
           ((C2865 + C2866 + C2867) * C459 -
            ((C2495 + C2496 + C2497) * C51036 +
             (C2498 + C2499 + C2500) * C458) +
            (C2868 + C2869 + C2870) * C50848) *
               C50906 * C50758) *
              C50806 * C296 +
          (((C2500 + C2499 + C2498) * C458 + (C2497 + C2496 + C2495) * C51036 -
            (C2867 + C2866 + C2865) * C459 - (C2870 + C2869 + C2868) * C50848) *
               C50906 * C2447 +
           ((C2501 + C2502 + C2503) * C458 + (C2504 + C2505 + C2506) * C51036 -
            (C2451 * C871 + C2446 * C886 + C2450 * C867 + C2445 * C878 +
             C2449 * C463 + C2444 * C472) *
                C459 -
            (C2451 * C887 + C2446 * C895 + C2450 * C879 + C2445 * C891 +
             C2449 * C473 + C2444 * C481) *
                C50848) *
               C50906 * C50758) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C458 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C51036 -
            (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
             C2449 * C460 + C2444 * C466) *
                C459 -
            (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
             C2449 * C467 + C2444 * C478) *
                C50848) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C458 + (C2492 + C2493 + C2494) * C51036 -
            (C2859 + C2860 + C2861) * C459 - (C2862 + C2863 + C2864) * C50848) *
               C50906 * C50758) *
              C630 +
          (((C2449 * C864 + C2444 * C872 + C2450 * C868 + C2445 * C880 +
             C2451 * C3298 + C2446 * C3302) *
                C459 -
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C51036 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C458) +
            (C2449 * C873 + C2444 * C888 + C2450 * C881 + C2445 * C892 +
             C2451 * C3303 + C2446 * C3310) *
                C50848) *
               C50906 * C2447 +
           ((C2449 * C865 + C2444 * C874 + C2450 * C869 + C2445 * C882 +
             C2451 * C3299 + C2446 * C3304) *
                C459 -
            ((C2677 + C2678 + C2679) * C51036 +
             (C2680 + C2681 + C2682) * C458) +
            (C2449 * C875 + C2444 * C889 + C2450 * C883 + C2445 * C893 +
             C2451 * C3305 + C2446 * C3311) *
                C50848) *
               C50906 * C50758) *
              C631 +
          (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
             C2451 * C3016 + C2446 * C3019) *
                C458 +
            (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
             C2451 * C3020 + C2446 * C3025) *
                C51036 -
            (C2451 * C3300 + C2446 * C3306 + C2450 * C3298 + C2445 * C3302 +
             C2449 * C868 + C2444 * C880) *
                C459 -
            (C2451 * C3307 + C2446 * C3312 + C2450 * C3303 + C2445 * C3310 +
             C2449 * C881 + C2444 * C892) *
                C50848) *
               C50906 * C2447 +
           ((C3041 + C3042 + C3043) * C458 + (C3044 + C3045 + C3046) * C51036 -
            (C2451 * C3301 + C2446 * C3308 + C2450 * C3299 + C2445 * C3304 +
             C2449 * C869 + C2444 * C882) *
                C459 -
            (C2451 * C3309 + C2446 * C3313 + C2450 * C3305 + C2445 * C3311 +
             C2449 * C883 + C2444 * C893) *
                C50848) *
               C50906 * C50758) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C458 +
             (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
             C5693 * C50848) *
                C5336 +
            (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
                C5337 +
            (C5694 * C458 + C5695 * C51036 -
             (C117 * C1244 + C50890 * C1248) * C459 -
             (C117 * C1249 + C50890 * C1256) * C50848) *
                C5338) *
               C2447 +
           ((C485 + C486 - C519 - C520) * C5336 +
            (C5672 + C5673 - C5674 - C5675) * C5337 +
            (C5676 + C5677 - C5700 - C5701) * C5338) *
               C50758) *
              C50806 * C295 +
          (((C519 - (C486 + C485) + C520) * C5336 +
            (C5674 - (C5673 + C5672) + C5675) * C5337 +
            (C5700 - (C5677 + C5676) + C5701) * C5338) *
               C2447 +
           ((C521 - (C492 + C491) + C522) * C5336 +
            (C5682 - (C5683 + C5684) + C5685) * C5337 +
            (C5702 - (C5688 + C5689) + C5703) * C5338) *
               C50758) *
              C50806 * C296 +
          ((C529 * C5336 + (C5684 + C5683 - C5682 - C5685) * C5337 +
            (C5689 + C5688 - C5702 - C5703) * C5338) *
               C2447 +
           (C530 * C5336 +
            (C515 * C458 + C516 * C51036 - C1049 * C459 - C1050 * C50848) *
                C5337 +
            (C1049 * C458 + C1050 * C51036 -
             (C117 * C1247 + C50890 * C1254) * C459 -
             (C117 * C1255 + C50890 * C1259) * C50848) *
                C5338) *
               C50758) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C458 +
             (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
             C5693 * C50848) *
                C5336 +
            (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
                C5337 +
            (C5694 * C458 + C5695 * C51036 -
             (C117 * C1244 + C50890 * C1248) * C459 -
             (C117 * C1249 + C50890 * C1256) * C50848) *
                C5338) *
               C2447 +
           ((C485 + C486 - C519 - C520) * C5336 +
            (C5672 + C5673 - C5674 - C5675) * C5337 +
            (C5676 + C5677 - C5700 - C5701) * C5338) *
               C50758) *
              C630 +
          (((C6126 * C459 -
             ((C117 * C310 + C50890 * C319) * C51036 +
              (C117 * C301 + C50890 * C311) * C458) +
             C6127 * C50848) *
                C5336 +
            (C6128 * C459 - (C6127 * C51036 + C6126 * C458) + C6129 * C50848) *
                C5337 +
            ((C117 * C3743 + C50890 * C3747) * C459 -
             (C6129 * C51036 + C6128 * C458) +
             (C117 * C3749 + C50890 * C3755) * C50848) *
                C5338) *
               C2447 +
           ((C1625 - (C1603 + C1604) + C1626) * C5336 +
            (C5511 * C459 - (C1620 * C51036 + C1619 * C458) + C5510 * C50848) *
                C5337 +
            ((C117 * C3745 + C50890 * C3751) * C459 -
             (C5510 * C51036 + C5511 * C458) +
             (C117 * C3753 + C50890 * C3757) * C50848) *
                C5338) *
               C50758) *
              C631 +
          ((((C117 * C635 + C50890 * C640) * C458 +
             (C117 * C641 + C50890 * C650) * C51036 - C6130 * C459 -
             C6131 * C50848) *
                C5336 +
            (C6130 * C458 + C6131 * C51036 - C6132 * C459 - C6133 * C50848) *
                C5337 +
            (C6132 * C458 + C6133 * C51036 -
             (C117 * C3742 + C50890 * C3746) * C459 -
             (C117 * C3748 + C50890 * C3754) * C50848) *
                C5338) *
               C2447 +
           ((C668 * C458 + C669 * C51036 - C5858 * C459 - C5859 * C50848) *
                C5336 +
            (C5858 * C458 + C5859 * C51036 - C5860 * C459 - C5861 * C50848) *
                C5337 +
            (C5860 * C458 + C5861 * C51036 -
             (C117 * C3744 + C50890 * C3750) * C459 -
             (C117 * C3752 + C50890 * C3756) * C50848) *
                C5338) *
               C50758) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C51051 +
             (C5692 * C118 + C5693 * C50836) * C50970) *
                C51078 +
            ((C178 + C179) * C51051 + (C5340 + C5341) * C50970) * C51079 +
            C11071 * C8201) *
               C1358 -
           (C11224 * C8201 +
            ((C5502 + C5503) * C50970 + (C351 + C352) * C51051) * C51079 +
            ((C6127 * C50836 + C6126 * C118) * C50970 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C51051) *
                C51078) *
               C50822) *
              C51080 +
          ((((C352 + C351) * C51051 + (C5503 + C5502) * C50970) * C51078 +
            ((C350 + C349) * C51051 + (C5504 + C5505) * C50970) * C51079 +
            ((C348 + C347) * C51051 + (C11221 + C11222) * C50970) * C8201) *
               C50822 -
           (C11072 * C8201 +
            ((C5346 + C5347) * C50970 + (C181 + C180) * C51051) * C51079 +
            ((C5341 + C5340) * C50970 + (C179 + C178) * C51051) * C51078) *
               C1358) *
              C51065 +
          ((C11071 * C51078 +
            (C189 * C51051 + (C5348 + C5349) * C50970) * C51079 +
            ((C185 + C184) * C51051 + (C11067 + C11068) * C50970) * C8201) *
               C1358 -
           ((((C117 * C1598 + C50890 * C1599) * C50836 +
              (C117 * C1596 + C50890 * C1597) * C118) *
                 C50970 +
             (C354 + C353) * C51051) *
                C8201 +
            ((C11222 + C11221) * C50970 + C355 * C51051) * C51079 +
            C11224 * C51078) *
               C50822) *
              C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C51051 +
             (C5692 * C118 + C5693 * C50836) * C50970) *
                C51078 +
            ((C178 + C179) * C51051 + (C5340 + C5341) * C50970) * C51079 +
            C11071 * C8201) *
               C51081 -
           (C11224 * C8201 +
            ((C5502 + C5503) * C50970 + (C351 + C352) * C51051) * C51079 +
            ((C6127 * C50836 + C6126 * C118) * C50970 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C51051) *
                C51078) *
               C51068 +
           ((((C117 * C635 + C50890 * C640) * C118 +
              (C117 * C641 + C50890 * C650) * C50836) *
                 C51051 +
             (C6130 * C118 + C6131 * C50836) * C50970) *
                C51078 +
            ((C674 + C675) * C51051 + (C5862 + C5863) * C50970) * C51079 +
            ((C676 + C677) * C51051 + (C11533 + C11534) * C50970) * C8201) *
               C1463) *
              C1464 +
          ((((C352 + C351) * C51051 + (C5503 + C5502) * C50970) * C51078 +
            ((C350 + C349) * C51051 + (C5504 + C5505) * C50970) * C51079 +
            ((C348 + C347) * C51051 + (C11221 + C11222) * C50970) * C8201) *
               C51068 -
           (C11072 * C8201 +
            ((C5346 + C5347) * C50970 + (C181 + C180) * C51051) * C51079 +
            ((C5341 + C5340) * C50970 + (C179 + C178) * C51051) * C51078) *
               C51081 -
           ((((C117 * C887 + C50890 * C895) * C50836 +
              (C117 * C871 + C50890 * C886) * C118) *
                 C50970 +
             (C679 + C678) * C51051) *
                C8201 +
            ((C11534 + C11533) * C50970 + (C677 + C676) * C51051) * C51079 +
            ((C5863 + C5862) * C50970 + (C675 + C674) * C51051) * C51078) *
               C1463) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C458 +
              (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
              C5693 * C50848) *
                 C51051 +
             (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
                 C50970) *
                C51078 +
            ((C485 + C486 - C519 - C520) * C51051 +
             (C5672 + C5673 - C5674 - C5675) * C50970) *
                C51079 +
            C11380 * C8201) *
               C1358 +
           (((C6126 * C459 -
              ((C117 * C310 + C50890 * C319) * C51036 +
               (C117 * C301 + C50890 * C311) * C458) +
              C6127 * C50848) *
                 C51051 +
             (C6128 * C459 - (C6127 * C51036 + C6126 * C458) + C6129 * C50848) *
                 C50970) *
                C51078 +
            ((C1625 - (C1603 + C1604) + C1626) * C51051 +
             (C7084 - (C7085 + C7086) + C7087) * C50970) *
                C51079 +
            ((C1627 - (C1609 + C1610) + C1628) * C51051 +
             (C12661 - (C12662 + C12663) + C12664) * C50970) *
                C8201) *
               C50822) *
              C1464 +
          ((((C519 - (C486 + C485) + C520) * C51051 +
             (C5674 - (C5673 + C5672) + C5675) * C50970) *
                C51078 +
            ((C521 - (C492 + C491) + C522) * C51051 +
             (C5682 - (C5683 + C5684) + C5685) * C50970) *
                C51079 +
            ((C523 - (C498 + C497) + C524) * C51051 +
             (C11373 - (C11374 + C11375) + C11376) * C50970) *
                C8201) *
               C1358 +
           (((C1604 + C1603 - C1625 - C1626) * C51051 +
             (C7086 + C7085 - C7084 - C7087) * C50970) *
                C51078 +
            ((C1610 + C1609 - C1627 - C1628) * C51051 +
             (C12663 + C12662 - C12661 - C12664) * C50970) *
                C51079 +
            ((C1616 + C1615 - C1629 - C1630) * C51051 +
             (C1623 * C458 + C1624 * C51036 -
              (C117 * C1157 + C50890 * C1164) * C459 -
              (C117 * C1165 + C50890 * C1169) * C50848) *
                 C50970) *
                C8201) *
               C50822) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C1730 +
              (C117 * C127 + C50890 * C140) * C1728 - C5692 * C1731 -
              C5693 * C50848) *
                 C51051 +
             (C5692 * C1730 + C5693 * C1728 - C5694 * C1731 - C5695 * C50848) *
                 C50970) *
                C51078 +
            ((C1733 + C1734 - C1735 - C1736) * C51051 +
             (C7238 + C7239 - C7240 - C7241) * C50970) *
                C51079 +
            C12820 * C8201) *
               C1358 +
           (((C6126 * C1731 -
              ((C117 * C310 + C50890 * C319) * C1728 +
               (C117 * C301 + C50890 * C311) * C1730) +
              C6127 * C50848) *
                 C51051 +
             (C6128 * C1731 - (C6127 * C1728 + C6126 * C1730) +
              C6129 * C50848) *
                 C50970) *
                C51078 +
            ((C1887 - (C1888 + C1889) + C1890) * C51051 +
             (C7448 - (C7449 + C7450) + C7451) * C50970) *
                C51079 +
            ((C1891 - (C1892 + C1893) + C1894) * C51051 +
             (C13015 - (C13016 + C13017) + C13018) * C50970) *
                C8201) *
               C50822) *
              C51027 +
          ((((C1735 - (C1734 + C1733) + C1736) * C51051 +
             (C7240 - (C7239 + C7238) + C7241) * C50970) *
                C51078 +
            ((C1739 - (C1738 + C1737) + C1740) * C51051 +
             (C7246 - (C7247 + C7248) + C7249) * C50970) *
                C51079 +
            ((C1743 - (C1742 + C1741) + C1744) * C51051 +
             (C12813 - (C12814 + C12815) + C12816) * C50970) *
                C8201) *
               C1358 +
           (((C1889 + C1888 - C1887 - C1890) * C51051 +
             (C7450 + C7449 - C7448 - C7451) * C50970) *
                C51078 +
            ((C1893 + C1892 - C1891 - C1894) * C51051 +
             (C13017 + C13016 - C13015 - C13018) * C50970) *
                C51079 +
            ((C1897 + C1896 - C1895 - C1898) * C51051 +
             (C1623 * C1730 + C1624 * C1728 -
              (C117 * C1157 + C50890 * C1164) * C1731 -
              (C117 * C1165 + C50890 * C1169) * C50848) *
                 C50970) *
                C8201) *
               C50822) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C1730 +
             (C117 * C127 + C50890 * C140) * C1728 - C5692 * C1731 -
             C5693 * C50848) *
                C51051 +
            (C5692 * C1730 + C5693 * C1728 - C5694 * C1731 - C5695 * C50848) *
                C50970) *
               C51078 +
           ((C1733 + C1734 - C1735 - C1736) * C51051 +
            (C7238 + C7239 - C7240 - C7241) * C50970) *
               C51079 +
           C12820 * C8201) *
              C51081 +
          (((C6126 * C1731 -
             ((C117 * C310 + C50890 * C319) * C1728 +
              (C117 * C301 + C50890 * C311) * C1730) +
             C6127 * C50848) *
                C51051 +
            (C6128 * C1731 - (C6127 * C1728 + C6126 * C1730) + C6129 * C50848) *
                C50970) *
               C51078 +
           ((C1887 - (C1888 + C1889) + C1890) * C51051 +
            (C7448 - (C7449 + C7450) + C7451) * C50970) *
               C51079 +
           ((C1891 - (C1892 + C1893) + C1894) * C51051 +
            (C13015 - (C13016 + C13017) + C13018) * C50970) *
               C8201) *
              C51068 +
          ((((C117 * C635 + C50890 * C640) * C1730 +
             (C117 * C641 + C50890 * C650) * C1728 - C6130 * C1731 -
             C6131 * C50848) *
                C51051 +
            (C6130 * C1730 + C6131 * C1728 - C6132 * C1731 - C6133 * C50848) *
                C50970) *
               C51078 +
           ((C668 * C1730 + C669 * C1728 - C5858 * C1731 - C5859 * C50848) *
                C51051 +
            (C5858 * C1730 + C5859 * C1728 - C5860 * C1731 - C5861 * C50848) *
                C50970) *
               C51079 +
           ((C670 * C1730 + C671 * C1728 - C11531 * C1731 - C11532 * C50848) *
                C51051 +
            (C11531 * C1730 + C11532 * C1728 -
             (C117 * C3462 + C50890 * C3467) * C1731 -
             (C117 * C3468 + C50890 * C3471) * C50848) *
                C50970) *
               C8201) *
              C1463) *
         C50774) /
        (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C1999 +
             (C117 * C127 + C50890 * C140) * C51082 - C5692 * C2000 -
             C5693 * C51071 + C5694 * C2001 + C5695 * C1998) *
                C51051 +
            (C5692 * C1999 + C5693 * C51082 - C5694 * C2000 - C5695 * C51071 +
             C6310 * C2001 + C6311 * C1998) *
                C50970) *
               C51078 +
           ((C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C51051 +
            (C7602 + C7603 - C7604 - C7605 + C7606 + C7607) * C50970) *
               C51079 +
           ((C2009 + C2010 - C2011 - C2012 + C2013 + C2014) * C51051 +
            (C13165 + C13166 - C13167 - C13168 + C13169 + C13170) * C50970) *
               C8201) *
              C1358 +
          (((C6126 * C2000 -
             ((C117 * C310 + C50890 * C319) * C51082 +
              (C117 * C301 + C50890 * C311) * C1999) +
             C6127 * C51071 - C6128 * C2001 - C6129 * C1998) *
                C51051 +
            (C6128 * C2000 - (C6127 * C51082 + C6126 * C1999) + C6129 * C51071 -
             C6478 * C2001 - C6479 * C1998) *
                C50970) *
               C51078 +
           ((C1619 * C2000 - (C343 * C51082 + C344 * C1999) + C1620 * C51071 -
             C5511 * C2001 - C5510 * C1998) *
                C51051 +
            (C5511 * C2000 - (C1620 * C51082 + C1619 * C1999) + C5510 * C51071 -
             C6480 * C2001 - C6481 * C1998) *
                C50970) *
               C51079 +
           ((C1621 * C2000 - (C341 * C51082 + C342 * C1999) + C1622 * C51071 -
             C5512 * C2001 - C5513 * C1998) *
                C51051 +
            (C5512 * C2000 - (C1622 * C51082 + C1621 * C1999) + C5513 * C51071 -
             (C117 * C7079 + C50890 * C7080) * C2001 -
             (C117 * C7081 + C50890 * C7082) * C1998) *
                C50970) *
               C8201) *
              C50822) *
         C50774) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C51051 +
             (C5692 * C118 + C5693 * C50836) * C50970) *
                C51078 +
            ((C178 + C179) * C51051 + (C5340 + C5341) * C50970) * C51079 +
            C11071 * C8201) *
               C630 -
           (C11224 * C8201 +
            ((C5502 + C5503) * C50970 + (C351 + C352) * C51051) * C51079 +
            ((C6127 * C50836 + C6126 * C118) * C50970 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C51051) *
                C51078) *
               C631 +
           ((((C117 * C635 + C50890 * C640) * C118 +
              (C117 * C641 + C50890 * C650) * C50836) *
                 C51051 +
             (C6130 * C118 + C6131 * C50836) * C50970) *
                C51078 +
            ((C674 + C675) * C51051 + (C5862 + C5863) * C50970) * C51079 +
            ((C676 + C677) * C51051 + (C11533 + C11534) * C50970) * C8201) *
               C632) *
              C51027 +
          ((((C352 + C351) * C51051 + (C5503 + C5502) * C50970) * C51078 +
            ((C350 + C349) * C51051 + (C5504 + C5505) * C50970) * C51079 +
            ((C348 + C347) * C51051 + (C11221 + C11222) * C50970) * C8201) *
               C631 -
           (C11072 * C8201 +
            ((C5346 + C5347) * C50970 + (C181 + C180) * C51051) * C51079 +
            ((C5341 + C5340) * C50970 + (C179 + C178) * C51051) * C51078) *
               C630 -
           ((((C117 * C887 + C50890 * C895) * C50836 +
              (C117 * C871 + C50890 * C886) * C118) *
                 C50970 +
             (C679 + C678) * C51051) *
                C8201 +
            ((C11534 + C11533) * C50970 + (C677 + C676) * C51051) * C51079 +
            ((C5863 + C5862) * C50970 + (C675 + C674) * C51051) * C51078) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C51051 +
            (C5692 * C118 + C5693 * C50836) * C50970) *
               C51078 +
           ((C178 + C179) * C51051 + (C5340 + C5341) * C50970) * C51079 +
           C11071 * C8201) *
              C50806 * C113 -
          (C11072 * C8201 +
           ((C5346 + C5347) * C50970 + (C181 + C180) * C51051) * C51079 +
           ((C5341 + C5340) * C50970 + (C179 + C178) * C51051) * C51078) *
              C50806 * C114 +
          (C11071 * C51078 +
           (C189 * C51051 + (C5348 + C5349) * C50970) * C51079 +
           ((C185 + C184) * C51051 + (C11067 + C11068) * C50970) * C8201) *
              C50806 * C115 -
          ((((C117 * C477 + C50890 * C483) * C50836 +
             (C117 * C465 + C50890 * C476) * C118) *
                C50970 +
            (C187 + C186) * C51051) *
               C8201 +
           ((C11068 + C11067) * C50970 + C190 * C51051) * C51079 +
           C11072 * C51078) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C997 +
             (C117 * C127 + C50890 * C140) * C994 - C5692 * C998 -
             C5693 * C995 + C5694 * C999 + C5695 * C996) *
                C51051 +
            (C5692 * C997 + C5693 * C994 - C5694 * C998 - C5695 * C995 +
             C6310 * C999 + C6311 * C996) *
                C50970) *
               C51078 +
           ((C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C51051 +
            (C6296 + C6297 - C6298 - C6299 + C6300 + C6301) * C50970) *
               C51079 +
           ((C1029 + C1030 - C1031 - C1032 + C1053 + C1054) * C51051 +
            (C11925 + C11926 - C11927 - C11928 + C11929 + C11930) * C50970) *
               C8201) *
              C50806 * C51027 +
          (((C1023 - (C1022 + C1021) + C1024 - C1051 - C1052) * C51051 +
            (C6298 - (C6297 + C6296) + C6299 - C6300 - C6301) * C50970) *
               C51078 +
           ((C1031 - (C1030 + C1029) + C1032 - C1053 - C1054) * C51051 +
            (C11927 - (C11926 + C11925) + C11928 - C11929 - C11930) * C50970) *
               C51079 +
           ((C1039 - (C1038 + C1037) + C1040 - C1055 - C1056) * C51051 +
            (C1049 * C998 - (C516 * C994 + C515 * C997) + C1050 * C995 -
             (C117 * C1247 + C50890 * C1254) * C999 -
             (C117 * C1255 + C50890 * C1259) * C996) *
                C50970) *
               C8201) *
              C50806 * C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C51051 +
            (C5692 * C118 + C5693 * C50836) * C50970) *
               C51078 +
           ((C178 + C179) * C51051 + (C5340 + C5341) * C50970) * C51079 +
           C11071 * C8201) *
              C745 -
          (C11224 * C8201 +
           ((C5502 + C5503) * C50970 + (C351 + C352) * C51051) * C51079 +
           ((C6127 * C50836 + C6126 * C118) * C50970 +
            ((C117 * C310 + C50890 * C319) * C50836 +
             (C117 * C301 + C50890 * C311) * C118) *
                C51051) *
               C51078) *
              C746 +
          ((((C117 * C635 + C50890 * C640) * C118 +
             (C117 * C641 + C50890 * C650) * C50836) *
                C51051 +
            (C6130 * C118 + C6131 * C50836) * C50970) *
               C51078 +
           ((C674 + C675) * C51051 + (C5862 + C5863) * C50970) * C51079 +
           ((C676 + C677) * C51051 + (C11533 + C11534) * C50970) * C8201) *
              C747 -
          ((((C117 * C4246 + C50890 * C4247) * C50836 +
             (C117 * C4244 + C50890 * C4245) * C118) *
                C50970 +
            ((C117 * C756 + C50890 * C763) * C50836 +
             (C117 * C751 + C50890 * C757) * C118) *
                C51051) *
               C8201 +
           (((C117 * C3305 + C50890 * C3311) * C50836 +
             (C117 * C3299 + C50890 * C3304) * C118) *
                C50970 +
            ((C117 * C758 + C50890 * C764) * C50836 +
             (C117 * C752 + C50890 * C759) * C118) *
                C51051) *
               C51079 +
           (((C117 * C3303 + C50890 * C3310) * C50836 +
             (C117 * C3298 + C50890 * C3302) * C118) *
                C50970 +
            ((C117 * C760 + C50890 * C765) * C50836 +
             (C117 * C753 + C50890 * C761) * C118) *
                C51051) *
               C51078) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C51051 +
             (C5692 * C118 + C5693 * C50836) * C50970) *
                C51078 +
            ((C178 + C179) * C51051 + (C5340 + C5341) * C50970) * C51079 +
            C11071 * C8201) *
               C51034 -
           (C11224 * C8201 +
            ((C5502 + C5503) * C50970 + (C351 + C352) * C51051) * C51079 +
            ((C6127 * C50836 + C6126 * C118) * C50970 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C51051) *
                C51078) *
               C50822) *
              C295 +
          ((((C352 + C351) * C51051 + (C5503 + C5502) * C50970) * C51078 +
            ((C350 + C349) * C51051 + (C5504 + C5505) * C50970) * C51079 +
            ((C348 + C347) * C51051 + (C11221 + C11222) * C50970) * C8201) *
               C50822 -
           (C11072 * C8201 +
            ((C5346 + C5347) * C50970 + (C181 + C180) * C51051) * C51079 +
            ((C5341 + C5340) * C50970 + (C179 + C178) * C51051) * C51078) *
               C51034) *
              C296 +
          ((C11071 * C51078 +
            (C189 * C51051 + (C5348 + C5349) * C50970) * C51079 +
            ((C185 + C184) * C51051 + (C11067 + C11068) * C50970) * C8201) *
               C51034 -
           ((((C117 * C1598 + C50890 * C1599) * C50836 +
              (C117 * C1596 + C50890 * C1597) * C118) *
                 C50970 +
             (C354 + C353) * C51051) *
                C8201 +
            ((C11222 + C11221) * C50970 + C355 * C51051) * C51079 +
            C11224 * C51078) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C997 +
             (C117 * C127 + C50890 * C140) * C994 - C5692 * C998 -
             C5693 * C995 + C5694 * C999 + C5695 * C996) *
                C51051 +
            (C5692 * C997 + C5693 * C994 - C5694 * C998 - C5695 * C995 +
             C6310 * C999 + C6311 * C996) *
                C50970) *
               C51078 +
           ((C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C51051 +
            (C6296 + C6297 - C6298 - C6299 + C6300 + C6301) * C50970) *
               C51079 +
           ((C1029 + C1030 - C1031 - C1032 + C1053 + C1054) * C51051 +
            (C11925 + C11926 - C11927 - C11928 + C11929 + C11930) * C50970) *
               C8201) *
              C51034 +
          (((C6126 * C998 -
             ((C117 * C310 + C50890 * C319) * C994 +
              (C117 * C301 + C50890 * C311) * C997) +
             C6127 * C995 - C6128 * C999 - C6129 * C996) *
                C51051 +
            (C6128 * C998 - (C6127 * C994 + C6126 * C997) + C6129 * C995 -
             C6478 * C999 - C6479 * C996) *
                C50970) *
               C51078 +
           ((C1619 * C998 - (C343 * C994 + C344 * C997) + C1620 * C995 -
             C5511 * C999 - C5510 * C996) *
                C51051 +
            (C5511 * C998 - (C1620 * C994 + C1619 * C997) + C5510 * C995 -
             C6480 * C999 - C6481 * C996) *
                C50970) *
               C51079 +
           ((C1621 * C998 - (C341 * C994 + C342 * C997) + C1622 * C995 -
             C5512 * C999 - C5513 * C996) *
                C51051 +
            (C5512 * C998 - (C1622 * C994 + C1621 * C997) + C5513 * C995 -
             (C117 * C7079 + C50890 * C7080) * C999 -
             (C117 * C7081 + C50890 * C7082) * C996) *
                C50970) *
               C8201) *
              C50822) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C458 +
             (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
             C5693 * C50848) *
                C51051 +
            (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
                C50970) *
               C51078 +
           ((C485 + C486 - C519 - C520) * C51051 +
            (C5672 + C5673 - C5674 - C5675) * C50970) *
               C51079 +
           C11380 * C8201) *
              C630 +
          (((C6126 * C459 -
             ((C117 * C310 + C50890 * C319) * C51036 +
              (C117 * C301 + C50890 * C311) * C458) +
             C6127 * C50848) *
                C51051 +
            (C6128 * C459 - (C6127 * C51036 + C6126 * C458) + C6129 * C50848) *
                C50970) *
               C51078 +
           ((C1625 - (C1603 + C1604) + C1626) * C51051 +
            (C7084 - (C7085 + C7086) + C7087) * C50970) *
               C51079 +
           ((C1627 - (C1609 + C1610) + C1628) * C51051 +
            (C5512 * C459 - (C1622 * C51036 + C1621 * C458) + C5513 * C50848) *
                C50970) *
               C8201) *
              C631 +
          ((((C117 * C635 + C50890 * C640) * C458 +
             (C117 * C641 + C50890 * C650) * C51036 - C6130 * C459 -
             C6131 * C50848) *
                C51051 +
            (C6130 * C458 + C6131 * C51036 - C6132 * C459 - C6133 * C50848) *
                C50970) *
               C51078 +
           ((C668 * C458 + C669 * C51036 - C5858 * C459 - C5859 * C50848) *
                C51051 +
            (C5858 * C458 + C5859 * C51036 - C5860 * C459 - C5861 * C50848) *
                C50970) *
               C51079 +
           ((C670 * C458 + C671 * C51036 - C11531 * C459 - C11532 * C50848) *
                C51051 +
            (C11531 * C458 + C11532 * C51036 -
             (C117 * C3462 + C50890 * C3467) * C459 -
             (C117 * C3468 + C50890 * C3471) * C50848) *
                C50970) *
               C8201) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C458 +
             (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
             C5693 * C50848) *
                C51051 +
            (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
                C50970) *
               C51078 +
           ((C485 + C486 - C519 - C520) * C51051 +
            (C5672 + C5673 - C5674 - C5675) * C50970) *
               C51079 +
           C11380 * C8201) *
              C50806 * C295 +
          (((C519 - (C486 + C485) + C520) * C51051 +
            (C5674 - (C5673 + C5672) + C5675) * C50970) *
               C51078 +
           ((C521 - (C492 + C491) + C522) * C51051 +
            (C5682 - (C5683 + C5684) + C5685) * C50970) *
               C51079 +
           ((C523 - (C498 + C497) + C524) * C51051 +
            (C11373 - (C11374 + C11375) + C11376) * C50970) *
               C8201) *
              C50806 * C296 +
          (C11380 * C51078 +
           (C530 * C51051 + (C11375 + C11374 - C11373 - C11376) * C50970) *
               C51079 +
           ((C506 + C505 - C525 - C526) * C51051 +
            (C517 * C458 + C518 * C51036 -
             (C117 * C1004 + C50890 * C1013) * C459 -
             (C117 * C1014 + C50890 * C1019) * C50848) *
                C50970) *
               C8201) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C1240 +
            (C117 * C127 + C50890 * C140) * C1236 - C5692 * C1241 -
            C5693 * C1237 + C5694 * C1242 + C5695 * C1238 - C6310 * C1243 -
            C6311 * C1239) *
               C51051 +
           (C5692 * C1240 + C5693 * C1236 - C5694 * C1241 - C5695 * C1237 +
            C6310 * C1242 + C6311 * C1238 - C6592 * C1243 - C6593 * C1239) *
               C50970) *
              C51078 +
          ((C168 * C1240 + C169 * C1236 - C509 * C1241 - C510 * C1237 +
            C1045 * C1242 + C1046 * C1238 - C5696 * C1243 - C5697 * C1239) *
               C51051 +
           (C509 * C1240 + C510 * C1236 - C1045 * C1241 - C1046 * C1237 +
            C5696 * C1242 + C5697 * C1238 - C6312 * C1243 - C6313 * C1239) *
               C50970) *
              C51079 +
          ((C170 * C1240 + C171 * C1236 - C512 * C1241 - C513 * C1237 +
            C1047 * C1242 + C1048 * C1238 - C5698 * C1243 - C5699 * C1239) *
               C51051 +
           (C512 * C1240 + C513 * C1236 - C1047 * C1241 - C1048 * C1237 +
            C5698 * C1242 + C5699 * C1238 -
            (C117 * C6281 + C50890 * C6286) * C1243 -
            (C117 * C6287 + C50890 * C6290) * C1239) *
               C50970) *
              C8201) *
         C50806 * C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C1730 +
             (C117 * C127 + C50890 * C140) * C1728 - C5692 * C1731 -
             C5693 * C50848) *
                C51051 +
            (C5692 * C1730 + C5693 * C1728 - C5694 * C1731 - C5695 * C50848) *
                C50970) *
               C51078 +
           ((C1733 + C1734 - C1735 - C1736) * C51051 +
            (C7238 + C7239 - C7240 - C7241) * C50970) *
               C51079 +
           C12820 * C8201) *
              C50806 * C51080 +
          (((C1735 - (C1734 + C1733) + C1736) * C51051 +
            (C7240 - (C7239 + C7238) + C7241) * C50970) *
               C51078 +
           ((C1739 - (C1738 + C1737) + C1740) * C51051 +
            (C7246 - (C7247 + C7248) + C7249) * C50970) *
               C51079 +
           ((C1743 - (C1742 + C1741) + C1744) * C51051 +
            (C12813 - (C12814 + C12815) + C12816) * C50970) *
               C8201) *
              C50806 * C51065 +
          (C12820 * C51078 +
           (C1754 * C51051 + (C12815 + C12814 - C12813 - C12816) * C50970) *
               C51079 +
           ((C1747 + C1746 - C1745 - C1748) * C51051 +
            (C517 * C1730 + C518 * C1728 -
             (C117 * C1004 + C50890 * C1013) * C1731 -
             (C117 * C1014 + C50890 * C1019) * C50848) *
                C50970) *
               C8201) *
              C50806 * C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C1730 +
              (C117 * C127 + C50890 * C140) * C1728 - C5692 * C1731 -
              C5693 * C50848) *
                 C51051 +
             (C5692 * C1730 + C5693 * C1728 - C5694 * C1731 - C5695 * C50848) *
                 C50970) *
                C51078 +
            ((C1733 + C1734 - C1735 - C1736) * C51051 +
             (C7238 + C7239 - C7240 - C7241) * C50970) *
                C51079 +
            C12820 * C8201) *
               C51034 +
           (((C6126 * C1731 -
              ((C117 * C310 + C50890 * C319) * C1728 +
               (C117 * C301 + C50890 * C311) * C1730) +
              C6127 * C50848) *
                 C51051 +
             (C6128 * C1731 - (C6127 * C1728 + C6126 * C1730) +
              C6129 * C50848) *
                 C50970) *
                C51078 +
            ((C1887 - (C1888 + C1889) + C1890) * C51051 +
             (C7448 - (C7449 + C7450) + C7451) * C50970) *
                C51079 +
            ((C1891 - (C1892 + C1893) + C1894) * C51051 +
             (C13015 - (C13016 + C13017) + C13018) * C50970) *
                C8201) *
               C50822) *
              C1464 +
          ((((C1735 - (C1734 + C1733) + C1736) * C51051 +
             (C7240 - (C7239 + C7238) + C7241) * C50970) *
                C51078 +
            ((C1739 - (C1738 + C1737) + C1740) * C51051 +
             (C7246 - (C7247 + C7248) + C7249) * C50970) *
                C51079 +
            ((C1743 - (C1742 + C1741) + C1744) * C51051 +
             (C12813 - (C12814 + C12815) + C12816) * C50970) *
                C8201) *
               C51034 +
           (((C1889 + C1888 - C1887 - C1890) * C51051 +
             (C7450 + C7449 - C7448 - C7451) * C50970) *
                C51078 +
            ((C1893 + C1892 - C1891 - C1894) * C51051 +
             (C13017 + C13016 - C13015 - C13018) * C50970) *
                C51079 +
            ((C1897 + C1896 - C1895 - C1898) * C51051 +
             (C1623 * C1730 + C1624 * C1728 -
              (C117 * C1157 + C50890 * C1164) * C1731 -
              (C117 * C1165 + C50890 * C1169) * C50848) *
                 C50970) *
                C8201) *
               C50822) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C1999 +
             (C117 * C127 + C50890 * C140) * C51082 - C5692 * C2000 -
             C5693 * C51071 + C5694 * C2001 + C5695 * C1998) *
                C51051 +
            (C5692 * C1999 + C5693 * C51082 - C5694 * C2000 - C5695 * C51071 +
             C6310 * C2001 + C6311 * C1998) *
                C50970) *
               C51078 +
           ((C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C51051 +
            (C7602 + C7603 - C7604 - C7605 + C7606 + C7607) * C50970) *
               C51079 +
           ((C2009 + C2010 - C2011 - C2012 + C2013 + C2014) * C51051 +
            (C13165 + C13166 - C13167 - C13168 + C13169 + C13170) * C50970) *
               C8201) *
              C50806 * C1464 +
          (((C2005 - (C2004 + C2003) + C2006 - C2007 - C2008) * C51051 +
            (C7604 - (C7603 + C7602) + C7605 - C7606 - C7607) * C50970) *
               C51078 +
           ((C2011 - (C2010 + C2009) + C2012 - C2013 - C2014) * C51051 +
            (C13167 - (C13166 + C13165) + C13168 - C13169 - C13170) * C50970) *
               C51079 +
           ((C2017 - (C2016 + C2015) + C2018 - C2019 - C2020) * C51051 +
            (C1049 * C2000 - (C516 * C51082 + C515 * C1999) + C1050 * C51071 -
             (C117 * C1247 + C50890 * C1254) * C2001 -
             (C117 * C1255 + C50890 * C1259) * C1998) *
                C50970) *
               C8201) *
              C50806 * C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C51051 +
            (C5692 * C118 + C5693 * C50836) * C50970) *
               C51078 +
           ((C178 + C179) * C51051 + (C5340 + C5341) * C50970) * C51079 +
           C11071 * C8201) *
              C50806 * C113 -
          (C11072 * C8201 +
           ((C5346 + C5347) * C50970 + (C181 + C180) * C51051) * C51079 +
           ((C5341 + C5340) * C50970 + (C179 + C178) * C51051) * C51078) *
              C50806 * C114 +
          (C11071 * C51078 +
           (C189 * C51051 + (C5348 + C5349) * C50970) * C51079 +
           ((C185 + C184) * C51051 + (C11067 + C11068) * C50970) * C8201) *
              C50806 * C115 -
          ((((C117 * C477 + C50890 * C483) * C50836 +
             (C117 * C465 + C50890 * C476) * C118) *
                C50970 +
            (C187 + C186) * C51051) *
               C8201 +
           ((C11068 + C11067) * C50970 + C190 * C51051) * C51079 +
           C11072 * C51078) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C51051 +
             (C5692 * C118 + C5693 * C50836) * C50970) *
                C51078 +
            ((C178 + C179) * C51051 + (C5340 + C5341) * C50970) * C51079 +
            C11071 * C8201) *
               C630 -
           (C11224 * C8201 +
            ((C5502 + C5503) * C50970 + (C351 + C352) * C51051) * C51079 +
            ((C6127 * C50836 + C6126 * C118) * C50970 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C51051) *
                C51078) *
               C631 +
           ((((C117 * C635 + C50890 * C640) * C118 +
              (C117 * C641 + C50890 * C650) * C50836) *
                 C51051 +
             (C6130 * C118 + C6131 * C50836) * C50970) *
                C51078 +
            ((C674 + C675) * C51051 + (C5862 + C5863) * C50970) * C51079 +
            ((C676 + C677) * C51051 + (C11533 + C11534) * C50970) * C8201) *
               C632) *
              C51027 +
          ((((C352 + C351) * C51051 + (C5503 + C5502) * C50970) * C51078 +
            ((C350 + C349) * C51051 + (C5504 + C5505) * C50970) * C51079 +
            ((C348 + C347) * C51051 + (C11221 + C11222) * C50970) * C8201) *
               C631 -
           (C11072 * C8201 +
            ((C5346 + C5347) * C50970 + (C181 + C180) * C51051) * C51079 +
            ((C5341 + C5340) * C50970 + (C179 + C178) * C51051) * C51078) *
               C630 -
           ((((C117 * C887 + C50890 * C895) * C50836 +
              (C117 * C871 + C50890 * C886) * C118) *
                 C50970 +
             (C679 + C678) * C51051) *
                C8201 +
            ((C11534 + C11533) * C50970 + (C677 + C676) * C51051) * C51079 +
            ((C5863 + C5862) * C50970 + (C675 + C674) * C51051) * C51078) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C51051 +
             (C5692 * C118 + C5693 * C50836) * C50970) *
                C51078 +
            ((C178 + C179) * C51051 + (C5340 + C5341) * C50970) * C51079 +
            C11071 * C8201) *
               C51034 -
           (C11224 * C8201 +
            ((C5502 + C5503) * C50970 + (C351 + C352) * C51051) * C51079 +
            ((C6127 * C50836 + C6126 * C118) * C50970 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C51051) *
                C51078) *
               C50822) *
              C295 +
          ((((C352 + C351) * C51051 + (C5503 + C5502) * C50970) * C51078 +
            ((C350 + C349) * C51051 + (C5504 + C5505) * C50970) * C51079 +
            ((C348 + C347) * C51051 + (C11221 + C11222) * C50970) * C8201) *
               C50822 -
           (C11072 * C8201 +
            ((C5346 + C5347) * C50970 + (C181 + C180) * C51051) * C51079 +
            ((C5341 + C5340) * C50970 + (C179 + C178) * C51051) * C51078) *
               C51034) *
              C296 +
          ((C11071 * C51078 +
            (C189 * C51051 + (C5348 + C5349) * C50970) * C51079 +
            ((C185 + C184) * C51051 + (C11067 + C11068) * C50970) * C8201) *
               C51034 -
           ((((C117 * C1598 + C50890 * C1599) * C50836 +
              (C117 * C1596 + C50890 * C1597) * C118) *
                 C50970 +
             (C354 + C353) * C51051) *
                C8201 +
            ((C11222 + C11221) * C50970 + C355 * C51051) * C51079 +
            C11224 * C51078) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C51051 +
            (C5692 * C118 + C5693 * C50836) * C50970) *
               C51078 +
           ((C178 + C179) * C51051 + (C5340 + C5341) * C50970) * C51079 +
           C11071 * C8201) *
              C745 -
          (C11224 * C8201 +
           ((C5502 + C5503) * C50970 + (C351 + C352) * C51051) * C51079 +
           ((C6127 * C50836 + C6126 * C118) * C50970 +
            ((C117 * C310 + C50890 * C319) * C50836 +
             (C117 * C301 + C50890 * C311) * C118) *
                C51051) *
               C51078) *
              C746 +
          ((((C117 * C635 + C50890 * C640) * C118 +
             (C117 * C641 + C50890 * C650) * C50836) *
                C51051 +
            (C6130 * C118 + C6131 * C50836) * C50970) *
               C51078 +
           ((C674 + C675) * C51051 + (C5862 + C5863) * C50970) * C51079 +
           ((C676 + C677) * C51051 + (C11533 + C11534) * C50970) * C8201) *
              C747 -
          ((((C117 * C4246 + C50890 * C4247) * C50836 +
             (C117 * C4244 + C50890 * C4245) * C118) *
                C50970 +
            ((C117 * C756 + C50890 * C763) * C50836 +
             (C117 * C751 + C50890 * C757) * C118) *
                C51051) *
               C8201 +
           (((C117 * C3305 + C50890 * C3311) * C50836 +
             (C117 * C3299 + C50890 * C3304) * C118) *
                C50970 +
            ((C117 * C758 + C50890 * C764) * C50836 +
             (C117 * C752 + C50890 * C759) * C118) *
                C51051) *
               C51079 +
           (((C117 * C3303 + C50890 * C3310) * C50836 +
             (C117 * C3298 + C50890 * C3302) * C118) *
                C50970 +
            ((C117 * C760 + C50890 * C765) * C50836 +
             (C117 * C753 + C50890 * C761) * C118) *
                C51051) *
               C51078) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C458 +
             (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
             C5693 * C50848) *
                C51051 +
            (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
                C50970) *
               C51078 +
           ((C485 + C486 - C519 - C520) * C51051 +
            (C5672 + C5673 - C5674 - C5675) * C50970) *
               C51079 +
           C11380 * C8201) *
              C50806 * C295 +
          (((C519 - (C486 + C485) + C520) * C51051 +
            (C5674 - (C5673 + C5672) + C5675) * C50970) *
               C51078 +
           ((C521 - (C492 + C491) + C522) * C51051 +
            (C5682 - (C5683 + C5684) + C5685) * C50970) *
               C51079 +
           ((C523 - (C498 + C497) + C524) * C51051 +
            (C11373 - (C11374 + C11375) + C11376) * C50970) *
               C8201) *
              C50806 * C296 +
          (C11380 * C51078 +
           (C530 * C51051 + (C11375 + C11374 - C11373 - C11376) * C50970) *
               C51079 +
           ((C506 + C505 - C525 - C526) * C51051 +
            (C517 * C458 + C518 * C51036 -
             (C117 * C1004 + C50890 * C1013) * C459 -
             (C117 * C1014 + C50890 * C1019) * C50848) *
                C50970) *
               C8201) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C458 +
             (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
             C5693 * C50848) *
                C51051 +
            (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
                C50970) *
               C51078 +
           ((C485 + C486 - C519 - C520) * C51051 +
            (C5672 + C5673 - C5674 - C5675) * C50970) *
               C51079 +
           C11380 * C8201) *
              C630 +
          (((C6126 * C459 -
             ((C117 * C310 + C50890 * C319) * C51036 +
              (C117 * C301 + C50890 * C311) * C458) +
             C6127 * C50848) *
                C51051 +
            (C6128 * C459 - (C6127 * C51036 + C6126 * C458) + C6129 * C50848) *
                C50970) *
               C51078 +
           ((C1625 - (C1603 + C1604) + C1626) * C51051 +
            (C7084 - (C7085 + C7086) + C7087) * C50970) *
               C51079 +
           ((C1627 - (C1609 + C1610) + C1628) * C51051 +
            (C5512 * C459 - (C1622 * C51036 + C1621 * C458) + C5513 * C50848) *
                C50970) *
               C8201) *
              C631 +
          ((((C117 * C635 + C50890 * C640) * C458 +
             (C117 * C641 + C50890 * C650) * C51036 - C6130 * C459 -
             C6131 * C50848) *
                C51051 +
            (C6130 * C458 + C6131 * C51036 - C6132 * C459 - C6133 * C50848) *
                C50970) *
               C51078 +
           ((C668 * C458 + C669 * C51036 - C5858 * C459 - C5859 * C50848) *
                C51051 +
            (C5858 * C458 + C5859 * C51036 - C5860 * C459 - C5861 * C50848) *
                C50970) *
               C51079 +
           ((C670 * C458 + C671 * C51036 - C11531 * C459 - C11532 * C50848) *
                C51051 +
            (C11531 * C458 + C11532 * C51036 -
             (C117 * C3462 + C50890 * C3467) * C459 -
             (C117 * C3468 + C50890 * C3471) * C50848) *
                C50970) *
               C8201) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C50906 * C108 +
            (C178 + C179) * C50906 * C109 + C192 * C110 + C193 * C111) *
               C1358 -
           (C357 * C111 + C358 * C110 + (C351 + C352) * C50906 * C109 +
            ((C117 * C310 + C50890 * C319) * C50836 +
             (C117 * C301 + C50890 * C311) * C118) *
                C50906 * C108) *
               C50822) *
              C51080 +
          (((C352 + C351) * C50906 * C108 + (C350 + C349) * C50906 * C109 +
            (C348 + C347) * C50906 * C110 + (C353 + C354) * C50906 * C111) *
               C50822 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50906 * C109 +
            (C179 + C178) * C50906 * C108) *
               C1358) *
              C51065 +
          ((C192 * C108 + C193 * C109 + (C185 + C184) * C50906 * C110 +
            (C186 + C187) * C50906 * C111) *
               C1358 -
           (((C117 * C314 + C50890 * C321) * C50836 +
             (C117 * C303 + C50890 * C315) * C118) *
                C50906 * C111 +
            (C354 + C353) * C50906 * C110 + C357 * C109 + C358 * C108) *
               C50822) *
              C1362)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C50836) *
                C50906 * C2447 +
            ((C2489 + C2490 + C2491) * C118 +
             (C2492 + C2493 + C2494) * C50836) *
                C50906 * C50758) *
               C1358 -
           (((C2677 + C2678 + C2679) * C50836 +
             (C2680 + C2681 + C2682) * C118) *
                C50906 * C50758 +
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C50836 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C118) *
                C50906 * C2447) *
               C50822) *
              C51080 +
          ((((C2682 + C2681 + C2680) * C118 +
             (C2679 + C2678 + C2677) * C50836) *
                C50906 * C2447 +
            ((C2683 + C2684 + C2685) * C118 +
             (C2686 + C2687 + C2688) * C50836) *
                C50906 * C50758) *
               C50822 -
           (((C2495 + C2496 + C2497) * C50836 +
             (C2498 + C2499 + C2500) * C118) *
                C50906 * C50758 +
            ((C2494 + C2493 + C2492) * C50836 +
             (C2491 + C2490 + C2489) * C118) *
                C50906 * C2447) *
               C1358) *
              C51065 +
          ((((C2500 + C2499 + C2498) * C118 +
             (C2497 + C2496 + C2495) * C50836) *
                C50906 * C2447 +
            ((C2501 + C2502 + C2503) * C118 +
             (C2504 + C2505 + C2506) * C50836) *
                C50906 * C50758) *
               C1358 -
           (((C2451 * C754 + C2446 * C762 + C2450 * C647 + C2445 * C653 +
              C2449 * C304 + C2444 * C316) *
                 C50836 +
             (C2451 * C750 + C2446 * C755 + C2450 * C638 + C2445 * C646 +
              C2449 * C298 + C2444 * C305) *
                 C118) *
                C50906 * C50758 +
            ((C2688 + C2687 + C2686) * C50836 +
             (C2685 + C2684 + C2683) * C118) *
                C50906 * C2447) *
               C50822) *
              C1362)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C50906 * C108 +
            (C178 + C179) * C50906 * C109 + C192 * C110 + C193 * C111) *
               C51081 -
           (C357 * C111 + C358 * C110 + (C351 + C352) * C50906 * C109 +
            ((C117 * C310 + C50890 * C319) * C50836 +
             (C117 * C301 + C50890 * C311) * C118) *
                C50906 * C108) *
               C51068 +
           (((C117 * C635 + C50890 * C640) * C118 +
             (C117 * C641 + C50890 * C650) * C50836) *
                C50906 * C108 +
            (C674 + C675) * C50906 * C109 + (C676 + C677) * C50906 * C110 +
            (C678 + C679) * C50906 * C111) *
               C1463) *
              C1464 +
          (((C352 + C351) * C50906 * C108 + (C350 + C349) * C50906 * C109 +
            (C348 + C347) * C50906 * C110 + (C353 + C354) * C50906 * C111) *
               C51068 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50906 * C109 +
            (C179 + C178) * C50906 * C108) *
               C51081 -
           (((C117 * C648 + C50890 * C654) * C50836 +
             (C117 * C639 + C50890 * C649) * C118) *
                C50906 * C111 +
            (C679 + C678) * C50906 * C110 + (C677 + C676) * C50906 * C109 +
            (C675 + C674) * C50906 * C108) *
               C1463) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C50836) *
                C50906 * C2447 +
            ((C2489 + C2490 + C2491) * C118 +
             (C2492 + C2493 + C2494) * C50836) *
                C50906 * C50758) *
               C51081 -
           (((C2677 + C2678 + C2679) * C50836 +
             (C2680 + C2681 + C2682) * C118) *
                C50906 * C50758 +
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C50836 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C118) *
                C50906 * C2447) *
               C51068 +
           (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
              C2451 * C3016 + C2446 * C3019) *
                 C118 +
             (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
              C2451 * C3020 + C2446 * C3025) *
                 C50836) *
                C50906 * C2447 +
            ((C3041 + C3042 + C3043) * C118 +
             (C3044 + C3045 + C3046) * C50836) *
                C50906 * C50758) *
               C1463) *
              C1464 +
          ((((C2682 + C2681 + C2680) * C118 +
             (C2679 + C2678 + C2677) * C50836) *
                C50906 * C2447 +
            ((C2683 + C2684 + C2685) * C118 +
             (C2686 + C2687 + C2688) * C50836) *
                C50906 * C50758) *
               C51068 -
           (((C2495 + C2496 + C2497) * C50836 +
             (C2498 + C2499 + C2500) * C118) *
                C50906 * C50758 +
            ((C2494 + C2493 + C2492) * C50836 +
             (C2491 + C2490 + C2489) * C118) *
                C50906 * C2447) *
               C51081 -
           (((C2451 * C3023 + C2446 * C3027 + C2450 * C756 + C2445 * C763 +
              C2449 * C645 + C2444 * C652) *
                 C50836 +
             (C2451 * C3018 + C2446 * C3024 + C2450 * C751 + C2445 * C757 +
              C2449 * C637 + C2444 * C644) *
                 C118) *
                C50906 * C50758 +
            ((C3046 + C3045 + C3044) * C50836 +
             (C3043 + C3042 + C3041) * C118) *
                C50906 * C2447) *
               C1463) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C458 +
             (C117 * C127 + C50890 * C140) * C51036 -
             (C117 * C460 + C50890 * C466) * C459 -
             (C117 * C467 + C50890 * C478) * C50848) *
                C50906 * C108 +
            (C485 + C486 - C519 - C520) * C50906 * C109 + C531 * C110 +
            C532 * C111) *
               C1358 +
           (((C117 * C864 + C50890 * C872) * C459 -
             ((C117 * C310 + C50890 * C319) * C51036 +
              (C117 * C301 + C50890 * C311) * C458) +
             (C117 * C873 + C50890 * C888) * C50848) *
                C50906 * C108 +
            (C1625 - (C1603 + C1604) + C1626) * C50906 * C109 +
            (C1627 - (C1609 + C1610) + C1628) * C50906 * C110 +
            (C1629 - (C1615 + C1616) + C1630) * C50906 * C111) *
               C50822) *
              C1464 +
          (((C519 - (C486 + C485) + C520) * C50906 * C108 +
            (C521 - (C492 + C491) + C522) * C50906 * C109 +
            (C523 - (C498 + C497) + C524) * C50906 * C110 +
            (C525 - (C505 + C506) + C526) * C50906 * C111) *
               C1358 +
           ((C1604 + C1603 - C1625 - C1626) * C50906 * C108 +
            (C1610 + C1609 - C1627 - C1628) * C50906 * C109 +
            (C1616 + C1615 - C1629 - C1630) * C50906 * C110 +
            (C345 * C458 + C346 * C51036 -
             (C117 * C1596 + C50890 * C1597) * C459 -
             (C117 * C1598 + C50890 * C1599) * C50848) *
                C50906 * C111) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C458 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C51036 -
             (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
              C2449 * C460 + C2444 * C466) *
                 C459 -
             (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
              C2449 * C467 + C2444 * C478) *
                 C50848) *
                C50906 * C2447 +
            ((C2489 + C2490 + C2491) * C458 + (C2492 + C2493 + C2494) * C51036 -
             (C2859 + C2860 + C2861) * C459 -
             (C2862 + C2863 + C2864) * C50848) *
                C50906 * C50758) *
               C1358 +
           (((C2449 * C864 + C2444 * C872 + C2450 * C868 + C2445 * C880 +
              C2451 * C3298 + C2446 * C3302) *
                 C459 -
             ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
               C2449 * C310 + C2444 * C319) *
                  C51036 +
              (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
               C2449 * C301 + C2444 * C311) *
                  C458) +
             (C2449 * C873 + C2444 * C888 + C2450 * C881 + C2445 * C892 +
              C2451 * C3303 + C2446 * C3310) *
                 C50848) *
                C50906 * C2447 +
            ((C4261 + C4262 + C4263) * C459 -
             ((C2677 + C2678 + C2679) * C51036 +
              (C2680 + C2681 + C2682) * C458) +
             (C4264 + C4265 + C4266) * C50848) *
                C50906 * C50758) *
               C50822) *
              C1464 +
          ((((C2861 + C2860 + C2859) * C459 -
             ((C2494 + C2493 + C2492) * C51036 +
              (C2491 + C2490 + C2489) * C458) +
             (C2864 + C2863 + C2862) * C50848) *
                C50906 * C2447 +
            ((C2865 + C2866 + C2867) * C459 -
             ((C2495 + C2496 + C2497) * C51036 +
              (C2498 + C2499 + C2500) * C458) +
             (C2868 + C2869 + C2870) * C50848) *
                C50906 * C50758) *
               C1358 +
           (((C2682 + C2681 + C2680) * C458 + (C2679 + C2678 + C2677) * C51036 -
             (C4263 + C4262 + C4261) * C459 -
             (C4266 + C4265 + C4264) * C50848) *
                C50906 * C2447 +
            ((C2683 + C2684 + C2685) * C458 + (C2686 + C2687 + C2688) * C51036 -
             (C2451 * C4244 + C2446 * C4245 + C2450 * C870 + C2445 * C884 +
              C2449 * C866 + C2444 * C876) *
                 C459 -
             (C2451 * C4246 + C2446 * C4247 + C2450 * C885 + C2445 * C894 +
              C2449 * C877 + C2444 * C890) *
                 C50848) *
                C50906 * C50758) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C1730 +
             (C117 * C127 + C50890 * C140) * C1728 -
             (C117 * C460 + C50890 * C466) * C1731 -
             (C117 * C467 + C50890 * C478) * C50848) *
                C50906 * C108 +
            (C1733 + C1734 - C1735 - C1736) * C50906 * C109 + C1755 * C110 +
            C1756 * C111) *
               C1358 +
           (((C117 * C864 + C50890 * C872) * C1731 -
             ((C117 * C310 + C50890 * C319) * C1728 +
              (C117 * C301 + C50890 * C311) * C1730) +
             (C117 * C873 + C50890 * C888) * C50848) *
                C50906 * C108 +
            (C1887 - (C1888 + C1889) + C1890) * C50906 * C109 +
            (C1891 - (C1892 + C1893) + C1894) * C50906 * C110 +
            (C1895 - (C1896 + C1897) + C1898) * C50906 * C111) *
               C50822) *
              C51027 +
          (((C1735 - (C1734 + C1733) + C1736) * C50906 * C108 +
            (C1739 - (C1738 + C1737) + C1740) * C50906 * C109 +
            (C1743 - (C1742 + C1741) + C1744) * C50906 * C110 +
            (C1745 - (C1746 + C1747) + C1748) * C50906 * C111) *
               C1358 +
           ((C1889 + C1888 - C1887 - C1890) * C50906 * C108 +
            (C1893 + C1892 - C1891 - C1894) * C50906 * C109 +
            (C1897 + C1896 - C1895 - C1898) * C50906 * C110 +
            (C345 * C1730 + C346 * C1728 -
             (C117 * C1596 + C50890 * C1597) * C1731 -
             (C117 * C1598 + C50890 * C1599) * C50848) *
                C50906 * C111) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C1730 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C1728 -
             (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
              C2449 * C460 + C2444 * C466) *
                 C1731 -
             (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
              C2449 * C467 + C2444 * C478) *
                 C50848) *
                C50906 * C2447 +
            ((C2489 + C2490 + C2491) * C1730 + (C2492 + C2493 + C2494) * C1728 -
             (C2859 + C2860 + C2861) * C1731 -
             (C2862 + C2863 + C2864) * C50848) *
                C50906 * C50758) *
               C1358 +
           (((C2449 * C864 + C2444 * C872 + C2450 * C868 + C2445 * C880 +
              C2451 * C3298 + C2446 * C3302) *
                 C1731 -
             ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
               C2449 * C310 + C2444 * C319) *
                  C1728 +
              (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
               C2449 * C301 + C2444 * C311) *
                  C1730) +
             (C2449 * C873 + C2444 * C888 + C2450 * C881 + C2445 * C892 +
              C2451 * C3303 + C2446 * C3310) *
                 C50848) *
                C50906 * C2447 +
            ((C4261 + C4262 + C4263) * C1731 -
             ((C2677 + C2678 + C2679) * C1728 +
              (C2680 + C2681 + C2682) * C1730) +
             (C4264 + C4265 + C4266) * C50848) *
                C50906 * C50758) *
               C50822) *
              C51027 +
          ((((C2861 + C2860 + C2859) * C1731 -
             ((C2494 + C2493 + C2492) * C1728 +
              (C2491 + C2490 + C2489) * C1730) +
             (C2864 + C2863 + C2862) * C50848) *
                C50906 * C2447 +
            ((C2865 + C2866 + C2867) * C1731 -
             ((C2495 + C2496 + C2497) * C1728 +
              (C2498 + C2499 + C2500) * C1730) +
             (C2868 + C2869 + C2870) * C50848) *
                C50906 * C50758) *
               C1358 +
           (((C2682 + C2681 + C2680) * C1730 + (C2679 + C2678 + C2677) * C1728 -
             (C4263 + C4262 + C4261) * C1731 -
             (C4266 + C4265 + C4264) * C50848) *
                C50906 * C2447 +
            ((C2683 + C2684 + C2685) * C1730 + (C2686 + C2687 + C2688) * C1728 -
             (C2451 * C4244 + C2446 * C4245 + C2450 * C870 + C2445 * C884 +
              C2449 * C866 + C2444 * C876) *
                 C1731 -
             (C2451 * C4246 + C2446 * C4247 + C2450 * C885 + C2445 * C894 +
              C2449 * C877 + C2444 * C890) *
                 C50848) *
                C50906 * C50758) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C1730 +
            (C117 * C127 + C50890 * C140) * C1728 -
            (C117 * C460 + C50890 * C466) * C1731 -
            (C117 * C467 + C50890 * C478) * C50848) *
               C50906 * C108 +
           (C1733 + C1734 - C1735 - C1736) * C50906 * C109 + C1755 * C110 +
           C1756 * C111) *
              C51081 +
          (((C117 * C864 + C50890 * C872) * C1731 -
            ((C117 * C310 + C50890 * C319) * C1728 +
             (C117 * C301 + C50890 * C311) * C1730) +
            (C117 * C873 + C50890 * C888) * C50848) *
               C50906 * C108 +
           (C1887 - (C1888 + C1889) + C1890) * C50906 * C109 +
           (C1891 - (C1892 + C1893) + C1894) * C50906 * C110 +
           (C1895 - (C1896 + C1897) + C1898) * C50906 * C111) *
              C51068 +
          (((C117 * C635 + C50890 * C640) * C1730 +
            (C117 * C641 + C50890 * C650) * C1728 -
            (C117 * C868 + C50890 * C880) * C1731 -
            (C117 * C881 + C50890 * C892) * C50848) *
               C50906 * C108 +
           (C668 * C1730 + C669 * C1728 -
            (C117 * C869 + C50890 * C882) * C1731 -
            (C117 * C883 + C50890 * C893) * C50848) *
               C50906 * C109 +
           (C670 * C1730 + C671 * C1728 -
            (C117 * C870 + C50890 * C884) * C1731 -
            (C117 * C885 + C50890 * C894) * C50848) *
               C50906 * C110 +
           (C672 * C1730 + C673 * C1728 -
            (C117 * C871 + C50890 * C886) * C1731 -
            (C117 * C887 + C50890 * C895) * C50848) *
               C50906 * C111) *
              C1463) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C1730 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C1728 -
            (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
             C2449 * C460 + C2444 * C466) *
                C1731 -
            (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
             C2449 * C467 + C2444 * C478) *
                C50848) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C1730 + (C2492 + C2493 + C2494) * C1728 -
            (C2859 + C2860 + C2861) * C1731 -
            (C2862 + C2863 + C2864) * C50848) *
               C50906 * C50758) *
              C51081 +
          (((C2449 * C864 + C2444 * C872 + C2450 * C868 + C2445 * C880 +
             C2451 * C3298 + C2446 * C3302) *
                C1731 -
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C1728 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C1730) +
            (C2449 * C873 + C2444 * C888 + C2450 * C881 + C2445 * C892 +
             C2451 * C3303 + C2446 * C3310) *
                C50848) *
               C50906 * C2447 +
           ((C4261 + C4262 + C4263) * C1731 -
            ((C2677 + C2678 + C2679) * C1728 +
             (C2680 + C2681 + C2682) * C1730) +
            (C4264 + C4265 + C4266) * C50848) *
               C50906 * C50758) *
              C51068 +
          (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
             C2451 * C3016 + C2446 * C3019) *
                C1730 +
            (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
             C2451 * C3020 + C2446 * C3025) *
                C1728 -
            (C2451 * C3300 + C2446 * C3306 + C2450 * C3298 + C2445 * C3302 +
             C2449 * C868 + C2444 * C880) *
                C1731 -
            (C2451 * C3307 + C2446 * C3312 + C2450 * C3303 + C2445 * C3310 +
             C2449 * C881 + C2444 * C892) *
                C50848) *
               C50906 * C2447 +
           ((C3041 + C3042 + C3043) * C1730 + (C3044 + C3045 + C3046) * C1728 -
            (C2451 * C3301 + C2446 * C3308 + C2450 * C3299 + C2445 * C3304 +
             C2449 * C869 + C2444 * C882) *
                C1731 -
            (C2451 * C3309 + C2446 * C3313 + C2450 * C3305 + C2445 * C3311 +
             C2449 * C883 + C2444 * C893) *
                C50848) *
               C50906 * C50758) *
              C1463) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C1999 +
            (C117 * C127 + C50890 * C140) * C51082 -
            (C117 * C460 + C50890 * C466) * C2000 -
            (C117 * C467 + C50890 * C478) * C51071 +
            (C117 * C1000 + C50890 * C1005) * C2001 +
            (C117 * C1006 + C50890 * C1015) * C1998) *
               C50906 * C108 +
           (C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C50906 * C109 +
           (C2009 + C2010 - C2011 - C2012 + C2013 + C2014) * C50906 * C110 +
           (C2015 + C2016 - C2017 - C2018 + C2019 + C2020) * C50906 * C111) *
              C1358 +
          (((C117 * C864 + C50890 * C872) * C2000 -
            ((C117 * C310 + C50890 * C319) * C51082 +
             (C117 * C301 + C50890 * C311) * C1999) +
            (C117 * C873 + C50890 * C888) * C51071 -
            (C117 * C1154 + C50890 * C1158) * C2001 -
            (C117 * C1159 + C50890 * C1166) * C1998) *
               C50906 * C108 +
           (C1619 * C2000 - (C343 * C51082 + C344 * C1999) + C1620 * C51071 -
            (C117 * C1155 + C50890 * C1160) * C2001 -
            (C117 * C1161 + C50890 * C1167) * C1998) *
               C50906 * C109 +
           (C1621 * C2000 - (C341 * C51082 + C342 * C1999) + C1622 * C51071 -
            (C117 * C1156 + C50890 * C1162) * C2001 -
            (C117 * C1163 + C50890 * C1168) * C1998) *
               C50906 * C110 +
           (C1623 * C2000 - (C339 * C51082 + C340 * C1999) + C1624 * C51071 -
            (C117 * C1157 + C50890 * C1164) * C2001 -
            (C117 * C1165 + C50890 * C1169) * C1998) *
               C50906 * C111) *
              C50822) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C1999 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C51082 -
            (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
             C2449 * C460 + C2444 * C466) *
                C2000 -
            (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
             C2449 * C467 + C2444 * C478) *
                C51071 +
            (C2449 * C1000 + C2444 * C1005 + C2450 * C1154 + C2445 * C1158 +
             C2451 * C3460 + C2446 * C3463) *
                C2001 +
            (C2449 * C1006 + C2444 * C1015 + C2450 * C1159 + C2445 * C1166 +
             C2451 * C3464 + C2446 * C3469) *
                C1998) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C1999 + (C2492 + C2493 + C2494) * C51082 -
            (C2859 + C2860 + C2861) * C2000 - (C2862 + C2863 + C2864) * C51071 +
            (C3485 + C3486 + C3487) * C2001 + (C3488 + C3489 + C3490) * C1998) *
               C50906 * C50758) *
              C1358 +
          (((C2449 * C864 + C2444 * C872 + C2450 * C868 + C2445 * C880 +
             C2451 * C3298 + C2446 * C3302) *
                C2000 -
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C51082 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C1999) +
            (C2449 * C873 + C2444 * C888 + C2450 * C881 + C2445 * C892 +
             C2451 * C3303 + C2446 * C3310) *
                C51071 -
            (C2451 * C3636 + C2446 * C3638 + C2450 * C3460 + C2445 * C3463 +
             C2449 * C1154 + C2444 * C1158) *
                C2001 -
            (C2451 * C3639 + C2446 * C3642 + C2450 * C3464 + C2445 * C3469 +
             C2449 * C1159 + C2444 * C1166) *
                C1998) *
               C50906 * C2447 +
           ((C4261 + C4262 + C4263) * C2000 -
            ((C2677 + C2678 + C2679) * C51082 +
             (C2680 + C2681 + C2682) * C1999) +
            (C4264 + C4265 + C4266) * C51071 -
            (C2451 * C3637 + C2446 * C3640 + C2450 * C3461 + C2445 * C3465 +
             C2449 * C1155 + C2444 * C1160) *
                C2001 -
            (C2451 * C3641 + C2446 * C3643 + C2450 * C3466 + C2445 * C3470 +
             C2449 * C1161 + C2444 * C1167) *
                C1998) *
               C50906 * C50758) *
              C50822) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C50906 * C108 +
            (C178 + C179) * C50906 * C109 + C192 * C110 + C193 * C111) *
               C630 -
           (C357 * C111 + C358 * C110 + (C351 + C352) * C50906 * C109 +
            ((C117 * C310 + C50890 * C319) * C50836 +
             (C117 * C301 + C50890 * C311) * C118) *
                C50906 * C108) *
               C631 +
           (((C117 * C635 + C50890 * C640) * C118 +
             (C117 * C641 + C50890 * C650) * C50836) *
                C50906 * C108 +
            (C674 + C675) * C50906 * C109 + (C676 + C677) * C50906 * C110 +
            (C678 + C679) * C50906 * C111) *
               C632) *
              C51027 +
          (((C352 + C351) * C50906 * C108 + (C350 + C349) * C50906 * C109 +
            (C348 + C347) * C50906 * C110 + (C353 + C354) * C50906 * C111) *
               C631 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50906 * C109 +
            (C179 + C178) * C50906 * C108) *
               C630 -
           (((C117 * C648 + C50890 * C654) * C50836 +
             (C117 * C639 + C50890 * C649) * C118) *
                C50906 * C111 +
            (C679 + C678) * C50906 * C110 + (C677 + C676) * C50906 * C109 +
            (C675 + C674) * C50906 * C108) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C118 +
            (C117 * C127 + C50890 * C140) * C50836) *
               C50906 * C108 +
           (C178 + C179) * C50906 * C109 + C192 * C110 + C193 * C111) *
              C50806 * C113 -
          (C194 * C111 + C195 * C110 + (C181 + C180) * C50906 * C109 +
           (C179 + C178) * C50906 * C108) *
              C50806 * C114 +
          (C192 * C108 + C193 * C109 + (C185 + C184) * C50906 * C110 +
           (C186 + C187) * C50906 * C111) *
              C50806 * C115 -
          (((C117 * C138 + C50890 * C146) * C50836 +
            (C117 * C125 + C50890 * C139) * C118) *
               C50906 * C111 +
           (C187 + C186) * C50906 * C110 + C194 * C109 + C195 * C108) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C997 +
            (C117 * C127 + C50890 * C140) * C994 -
            (C117 * C460 + C50890 * C466) * C998 -
            (C117 * C467 + C50890 * C478) * C995 +
            (C117 * C1000 + C50890 * C1005) * C999 +
            (C117 * C1006 + C50890 * C1015) * C996) *
               C50906 * C108 +
           (C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C50906 * C109 +
           (C1029 + C1030 - C1031 - C1032 + C1053 + C1054) * C50906 * C110 +
           (C1037 + C1038 - C1039 - C1040 + C1055 + C1056) * C50906 * C111) *
              C50806 * C51027 +
          ((C1023 - (C1022 + C1021) + C1024 - C1051 - C1052) * C50906 * C108 +
           (C1031 - (C1030 + C1029) + C1032 - C1053 - C1054) * C50906 * C109 +
           (C1039 - (C1038 + C1037) + C1040 - C1055 - C1056) * C50906 * C110 +
           (C517 * C998 - (C174 * C994 + C175 * C997) + C518 * C995 -
            (C117 * C1004 + C50890 * C1013) * C999 -
            (C117 * C1014 + C50890 * C1019) * C996) *
               C50906 * C111) *
              C50806 * C50779)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C50836) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C118 + (C2492 + C2493 + C2494) * C50836) *
               C50906 * C50758) *
              C50806 * C113 -
          (((C2495 + C2496 + C2497) * C50836 + (C2498 + C2499 + C2500) * C118) *
               C50906 * C50758 +
           ((C2494 + C2493 + C2492) * C50836 + (C2491 + C2490 + C2489) * C118) *
               C50906 * C2447) *
              C50806 * C114 +
          (((C2500 + C2499 + C2498) * C118 + (C2497 + C2496 + C2495) * C50836) *
               C50906 * C2447 +
           ((C2501 + C2502 + C2503) * C118 + (C2504 + C2505 + C2506) * C50836) *
               C50906 * C50758) *
              C50806 * C115 -
          (((C2451 * C648 + C2446 * C654 + C2450 * C313 + C2445 * C320 +
             C2449 * C134 + C2444 * C144) *
                C50836 +
            (C2451 * C639 + C2446 * C649 + C2450 * C302 + C2445 * C312 +
             C2449 * C123 + C2444 * C135) *
                C118) *
               C50906 * C50758 +
           ((C2506 + C2505 + C2504) * C50836 + (C2503 + C2502 + C2501) * C118) *
               C50906 * C2447) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C50836) *
                C50906 * C2447 +
            ((C2489 + C2490 + C2491) * C118 +
             (C2492 + C2493 + C2494) * C50836) *
                C50906 * C50758) *
               C630 -
           (((C2677 + C2678 + C2679) * C50836 +
             (C2680 + C2681 + C2682) * C118) *
                C50906 * C50758 +
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C50836 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C118) *
                C50906 * C2447) *
               C631 +
           (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
              C2451 * C3016 + C2446 * C3019) *
                 C118 +
             (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
              C2451 * C3020 + C2446 * C3025) *
                 C50836) *
                C50906 * C2447 +
            ((C3041 + C3042 + C3043) * C118 +
             (C3044 + C3045 + C3046) * C50836) *
                C50906 * C50758) *
               C632) *
              C51027 +
          ((((C2682 + C2681 + C2680) * C118 +
             (C2679 + C2678 + C2677) * C50836) *
                C50906 * C2447 +
            ((C2683 + C2684 + C2685) * C118 +
             (C2686 + C2687 + C2688) * C50836) *
                C50906 * C50758) *
               C631 -
           (((C2495 + C2496 + C2497) * C50836 +
             (C2498 + C2499 + C2500) * C118) *
                C50906 * C50758 +
            ((C2494 + C2493 + C2492) * C50836 +
             (C2491 + C2490 + C2489) * C118) *
                C50906 * C2447) *
               C630 -
           (((C2451 * C3023 + C2446 * C3027 + C2450 * C756 + C2445 * C763 +
              C2449 * C645 + C2444 * C652) *
                 C50836 +
             (C2451 * C3018 + C2446 * C3024 + C2450 * C751 + C2445 * C757 +
              C2449 * C637 + C2444 * C644) *
                 C118) *
                C50906 * C50758 +
            ((C3046 + C3045 + C3044) * C50836 +
             (C3043 + C3042 + C3041) * C118) *
                C50906 * C2447) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C997 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C994 -
            (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
             C2449 * C460 + C2444 * C466) *
                C998 -
            (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
             C2449 * C467 + C2444 * C478) *
                C995 +
            (C2449 * C1000 + C2444 * C1005 + C2450 * C1154 + C2445 * C1158 +
             C2451 * C3460 + C2446 * C3463) *
                C999 +
            (C2449 * C1006 + C2444 * C1015 + C2450 * C1159 + C2445 * C1166 +
             C2451 * C3464 + C2446 * C3469) *
                C996) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C997 + (C2492 + C2493 + C2494) * C994 -
            (C2859 + C2860 + C2861) * C998 - (C2862 + C2863 + C2864) * C995 +
            (C3485 + C3486 + C3487) * C999 + (C3488 + C3489 + C3490) * C996) *
               C50906 * C50758) *
              C50806 * C51027 +
          (((C2861 + C2860 + C2859) * C998 -
            ((C2494 + C2493 + C2492) * C994 + (C2491 + C2490 + C2489) * C997) +
            (C2864 + C2863 + C2862) * C995 - (C3487 + C3486 + C3485) * C999 -
            (C3490 + C3489 + C3488) * C996) *
               C50906 * C2447 +
           ((C2865 + C2866 + C2867) * C998 -
            ((C2495 + C2496 + C2497) * C994 + (C2498 + C2499 + C2500) * C997) +
            (C2868 + C2869 + C2870) * C995 -
            (C2451 * C3462 + C2446 * C3467 + C2450 * C1156 + C2445 * C1162 +
             C2449 * C1002 + C2444 * C1009) *
                C999 -
            (C2451 * C3468 + C2446 * C3471 + C2450 * C1163 + C2445 * C1168 +
             C2449 * C1010 + C2444 * C1017) *
                C996) *
               C50906 * C50758) *
              C50806 * C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C118 +
            (C117 * C127 + C50890 * C140) * C50836) *
               C50906 * C108 +
           (C178 + C179) * C50906 * C109 + C192 * C110 + C193 * C111) *
              C745 -
          (C357 * C111 + C358 * C110 + (C351 + C352) * C50906 * C109 +
           ((C117 * C310 + C50890 * C319) * C50836 +
            (C117 * C301 + C50890 * C311) * C118) *
               C50906 * C108) *
              C746 +
          (((C117 * C635 + C50890 * C640) * C118 +
            (C117 * C641 + C50890 * C650) * C50836) *
               C50906 * C108 +
           (C674 + C675) * C50906 * C109 + (C676 + C677) * C50906 * C110 +
           (C678 + C679) * C50906 * C111) *
              C747 -
          (((C117 * C754 + C50890 * C762) * C50836 +
            (C117 * C750 + C50890 * C755) * C118) *
               C50906 * C111 +
           ((C117 * C756 + C50890 * C763) * C50836 +
            (C117 * C751 + C50890 * C757) * C118) *
               C50906 * C110 +
           ((C117 * C758 + C50890 * C764) * C50836 +
            (C117 * C752 + C50890 * C759) * C118) *
               C50906 * C109 +
           ((C117 * C760 + C50890 * C765) * C50836 +
            (C117 * C753 + C50890 * C761) * C118) *
               C50906 * C108) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C50906 * C108 +
            (C178 + C179) * C50906 * C109 + C192 * C110 + C193 * C111) *
               C51034 -
           (C357 * C111 + C358 * C110 + (C351 + C352) * C50906 * C109 +
            ((C117 * C310 + C50890 * C319) * C50836 +
             (C117 * C301 + C50890 * C311) * C118) *
                C50906 * C108) *
               C50822) *
              C295 +
          (((C352 + C351) * C50906 * C108 + (C350 + C349) * C50906 * C109 +
            (C348 + C347) * C50906 * C110 + (C353 + C354) * C50906 * C111) *
               C50822 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50906 * C109 +
            (C179 + C178) * C50906 * C108) *
               C51034) *
              C296 +
          ((C192 * C108 + C193 * C109 + (C185 + C184) * C50906 * C110 +
            (C186 + C187) * C50906 * C111) *
               C51034 -
           (((C117 * C314 + C50890 * C321) * C50836 +
             (C117 * C303 + C50890 * C315) * C118) *
                C50906 * C111 +
            (C354 + C353) * C50906 * C110 + C357 * C109 + C358 * C108) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C997 +
            (C117 * C127 + C50890 * C140) * C994 -
            (C117 * C460 + C50890 * C466) * C998 -
            (C117 * C467 + C50890 * C478) * C995 +
            (C117 * C1000 + C50890 * C1005) * C999 +
            (C117 * C1006 + C50890 * C1015) * C996) *
               C50906 * C108 +
           (C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C50906 * C109 +
           (C1029 + C1030 - C1031 - C1032 + C1053 + C1054) * C50906 * C110 +
           (C1037 + C1038 - C1039 - C1040 + C1055 + C1056) * C50906 * C111) *
              C51034 +
          (((C117 * C864 + C50890 * C872) * C998 -
            ((C117 * C310 + C50890 * C319) * C994 +
             (C117 * C301 + C50890 * C311) * C997) +
            (C117 * C873 + C50890 * C888) * C995 -
            (C117 * C1154 + C50890 * C1158) * C999 -
            (C117 * C1159 + C50890 * C1166) * C996) *
               C50906 * C108 +
           ((C117 * C865 + C50890 * C874) * C998 - (C343 * C994 + C344 * C997) +
            (C117 * C875 + C50890 * C889) * C995 -
            (C117 * C1155 + C50890 * C1160) * C999 -
            (C117 * C1161 + C50890 * C1167) * C996) *
               C50906 * C109 +
           ((C117 * C866 + C50890 * C876) * C998 - (C341 * C994 + C342 * C997) +
            (C117 * C877 + C50890 * C890) * C995 -
            (C117 * C1156 + C50890 * C1162) * C999 -
            (C117 * C1163 + C50890 * C1168) * C996) *
               C50906 * C110 +
           ((C117 * C867 + C50890 * C878) * C998 - (C339 * C994 + C340 * C997) +
            (C117 * C879 + C50890 * C891) * C995 -
            (C117 * C1157 + C50890 * C1164) * C999 -
            (C117 * C1165 + C50890 * C1169) * C996) *
               C50906 * C111) *
              C50822) *
         C50774) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C50836) *
                C50906 * C2447 +
            ((C2489 + C2490 + C2491) * C118 +
             (C2492 + C2493 + C2494) * C50836) *
                C50906 * C50758) *
               C51034 -
           (((C2677 + C2678 + C2679) * C50836 +
             (C2680 + C2681 + C2682) * C118) *
                C50906 * C50758 +
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C50836 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C118) *
                C50906 * C2447) *
               C50822) *
              C295 +
          ((((C2682 + C2681 + C2680) * C118 +
             (C2679 + C2678 + C2677) * C50836) *
                C50906 * C2447 +
            ((C2683 + C2684 + C2685) * C118 +
             (C2686 + C2687 + C2688) * C50836) *
                C50906 * C50758) *
               C50822 -
           (((C2495 + C2496 + C2497) * C50836 +
             (C2498 + C2499 + C2500) * C118) *
                C50906 * C50758 +
            ((C2494 + C2493 + C2492) * C50836 +
             (C2491 + C2490 + C2489) * C118) *
                C50906 * C2447) *
               C51034) *
              C296 +
          ((((C2500 + C2499 + C2498) * C118 +
             (C2497 + C2496 + C2495) * C50836) *
                C50906 * C2447 +
            ((C2501 + C2502 + C2503) * C118 +
             (C2504 + C2505 + C2506) * C50836) *
                C50906 * C50758) *
               C51034 -
           (((C2451 * C754 + C2446 * C762 + C2450 * C647 + C2445 * C653 +
              C2449 * C304 + C2444 * C316) *
                 C50836 +
             (C2451 * C750 + C2446 * C755 + C2450 * C638 + C2445 * C646 +
              C2449 * C298 + C2444 * C305) *
                 C118) *
                C50906 * C50758 +
            ((C2688 + C2687 + C2686) * C50836 +
             (C2685 + C2684 + C2683) * C118) *
                C50906 * C2447) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C50836) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C118 + (C2492 + C2493 + C2494) * C50836) *
               C50906 * C50758) *
              C745 -
          (((C2677 + C2678 + C2679) * C50836 + (C2680 + C2681 + C2682) * C118) *
               C50906 * C50758 +
           ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
             C2449 * C310 + C2444 * C319) *
                C50836 +
            (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
             C2449 * C301 + C2444 * C311) *
                C118) *
               C50906 * C2447) *
              C746 +
          (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
             C2451 * C3016 + C2446 * C3019) *
                C118 +
            (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
             C2451 * C3020 + C2446 * C3025) *
                C50836) *
               C50906 * C2447 +
           ((C3041 + C3042 + C3043) * C118 + (C3044 + C3045 + C3046) * C50836) *
               C50906 * C50758) *
              C747 -
          (((C2451 * C3146 + C2446 * C3150 + C2450 * C3022 + C2445 * C3026 +
             C2449 * C758 + C2444 * C764) *
                C50836 +
            (C2451 * C3144 + C2446 * C3147 + C2450 * C3017 + C2445 * C3021 +
             C2449 * C752 + C2444 * C759) *
                C118) *
               C50906 * C50758 +
           ((C2451 * C3148 + C2446 * C3151 + C2450 * C3020 + C2445 * C3025 +
             C2449 * C760 + C2444 * C765) *
                C50836 +
            (C2451 * C3145 + C2446 * C3149 + C2450 * C3016 + C2445 * C3019 +
             C2449 * C753 + C2444 * C761) *
                C118) *
               C50906 * C2447) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C997 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C994 -
            (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
             C2449 * C460 + C2444 * C466) *
                C998 -
            (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
             C2449 * C467 + C2444 * C478) *
                C995 +
            (C2449 * C1000 + C2444 * C1005 + C2450 * C1154 + C2445 * C1158 +
             C2451 * C3460 + C2446 * C3463) *
                C999 +
            (C2449 * C1006 + C2444 * C1015 + C2450 * C1159 + C2445 * C1166 +
             C2451 * C3464 + C2446 * C3469) *
                C996) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C997 + (C2492 + C2493 + C2494) * C994 -
            (C2859 + C2860 + C2861) * C998 - (C2862 + C2863 + C2864) * C995 +
            (C3485 + C3486 + C3487) * C999 + (C3488 + C3489 + C3490) * C996) *
               C50906 * C50758) *
              C51034 +
          (((C2449 * C864 + C2444 * C872 + C2450 * C868 + C2445 * C880 +
             C2451 * C3298 + C2446 * C3302) *
                C998 -
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C994 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C997) +
            (C2449 * C873 + C2444 * C888 + C2450 * C881 + C2445 * C892 +
             C2451 * C3303 + C2446 * C3310) *
                C995 -
            (C2451 * C3636 + C2446 * C3638 + C2450 * C3460 + C2445 * C3463 +
             C2449 * C1154 + C2444 * C1158) *
                C999 -
            (C2451 * C3639 + C2446 * C3642 + C2450 * C3464 + C2445 * C3469 +
             C2449 * C1159 + C2444 * C1166) *
                C996) *
               C50906 * C2447 +
           ((C2449 * C865 + C2444 * C874 + C2450 * C869 + C2445 * C882 +
             C2451 * C3299 + C2446 * C3304) *
                C998 -
            ((C2677 + C2678 + C2679) * C994 + (C2680 + C2681 + C2682) * C997) +
            (C2449 * C875 + C2444 * C889 + C2450 * C883 + C2445 * C893 +
             C2451 * C3305 + C2446 * C3311) *
                C995 -
            (C2451 * C3637 + C2446 * C3640 + C2450 * C3461 + C2445 * C3465 +
             C2449 * C1155 + C2444 * C1160) *
                C999 -
            (C2451 * C3641 + C2446 * C3643 + C2450 * C3466 + C2445 * C3470 +
             C2449 * C1161 + C2444 * C1167) *
                C996) *
               C50906 * C50758) *
              C50822) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C458 +
            (C117 * C127 + C50890 * C140) * C51036 -
            (C117 * C460 + C50890 * C466) * C459 -
            (C117 * C467 + C50890 * C478) * C50848) *
               C50906 * C108 +
           (C485 + C486 - C519 - C520) * C50906 * C109 + C531 * C110 +
           C532 * C111) *
              C630 +
          (((C117 * C864 + C50890 * C872) * C459 -
            ((C117 * C310 + C50890 * C319) * C51036 +
             (C117 * C301 + C50890 * C311) * C458) +
            (C117 * C873 + C50890 * C888) * C50848) *
               C50906 * C108 +
           ((C117 * C865 + C50890 * C874) * C459 -
            (C343 * C51036 + C344 * C458) +
            (C117 * C875 + C50890 * C889) * C50848) *
               C50906 * C109 +
           ((C117 * C866 + C50890 * C876) * C459 -
            (C341 * C51036 + C342 * C458) +
            (C117 * C877 + C50890 * C890) * C50848) *
               C50906 * C110 +
           ((C117 * C867 + C50890 * C878) * C459 -
            (C339 * C51036 + C340 * C458) +
            (C117 * C879 + C50890 * C891) * C50848) *
               C50906 * C111) *
              C631 +
          (((C117 * C635 + C50890 * C640) * C458 +
            (C117 * C641 + C50890 * C650) * C51036 -
            (C117 * C868 + C50890 * C880) * C459 -
            (C117 * C881 + C50890 * C892) * C50848) *
               C50906 * C108 +
           (C668 * C458 + C669 * C51036 - (C117 * C869 + C50890 * C882) * C459 -
            (C117 * C883 + C50890 * C893) * C50848) *
               C50906 * C109 +
           (C670 * C458 + C671 * C51036 - (C117 * C870 + C50890 * C884) * C459 -
            (C117 * C885 + C50890 * C894) * C50848) *
               C50906 * C110 +
           (C672 * C458 + C673 * C51036 - (C117 * C871 + C50890 * C886) * C459 -
            (C117 * C887 + C50890 * C895) * C50848) *
               C50906 * C111) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C458 +
            (C117 * C127 + C50890 * C140) * C51036 -
            (C117 * C460 + C50890 * C466) * C459 -
            (C117 * C467 + C50890 * C478) * C50848) *
               C50906 * C108 +
           (C485 + C486 - C519 - C520) * C50906 * C109 + C531 * C110 +
           C532 * C111) *
              C50806 * C295 +
          ((C519 - (C486 + C485) + C520) * C50906 * C108 +
           (C521 - (C492 + C491) + C522) * C50906 * C109 +
           (C523 - (C498 + C497) + C524) * C50906 * C110 +
           (C525 - (C505 + C506) + C526) * C50906 * C111) *
              C50806 * C296 +
          (C531 * C108 + C532 * C109 +
           (C506 + C505 - C525 - C526) * C50906 * C110 +
           (C176 * C458 + C177 * C51036 - (C117 * C465 + C50890 * C476) * C459 -
            (C117 * C477 + C50890 * C483) * C50848) *
               C50906 * C111) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50890 * C126) * C1240 +
           (C117 * C127 + C50890 * C140) * C1236 -
           (C117 * C460 + C50890 * C466) * C1241 -
           (C117 * C467 + C50890 * C478) * C1237 +
           (C117 * C1000 + C50890 * C1005) * C1242 +
           (C117 * C1006 + C50890 * C1015) * C1238 -
           (C117 * C1244 + C50890 * C1248) * C1243 -
           (C117 * C1249 + C50890 * C1256) * C1239) *
              C50906 * C108 +
          (C168 * C1240 + C169 * C1236 - C509 * C1241 - C510 * C1237 +
           C1045 * C1242 + C1046 * C1238 -
           (C117 * C1245 + C50890 * C1250) * C1243 -
           (C117 * C1251 + C50890 * C1257) * C1239) *
              C50906 * C109 +
          (C170 * C1240 + C171 * C1236 - C512 * C1241 - C513 * C1237 +
           C1047 * C1242 + C1048 * C1238 -
           (C117 * C1246 + C50890 * C1252) * C1243 -
           (C117 * C1253 + C50890 * C1258) * C1239) *
              C50906 * C110 +
          (C172 * C1240 + C173 * C1236 - C515 * C1241 - C516 * C1237 +
           C1049 * C1242 + C1050 * C1238 -
           (C117 * C1247 + C50890 * C1254) * C1243 -
           (C117 * C1255 + C50890 * C1259) * C1239) *
              C50906 * C111) *
         C50806 * C50774) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C458 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C51036 -
            (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
             C2449 * C460 + C2444 * C466) *
                C459 -
            (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
             C2449 * C467 + C2444 * C478) *
                C50848) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C458 + (C2492 + C2493 + C2494) * C51036 -
            (C2859 + C2860 + C2861) * C459 - (C2862 + C2863 + C2864) * C50848) *
               C50906 * C50758) *
              C50806 * C295 +
          (((C2861 + C2860 + C2859) * C459 -
            ((C2494 + C2493 + C2492) * C51036 +
             (C2491 + C2490 + C2489) * C458) +
            (C2864 + C2863 + C2862) * C50848) *
               C50906 * C2447 +
           ((C2865 + C2866 + C2867) * C459 -
            ((C2495 + C2496 + C2497) * C51036 +
             (C2498 + C2499 + C2500) * C458) +
            (C2868 + C2869 + C2870) * C50848) *
               C50906 * C50758) *
              C50806 * C296 +
          (((C2500 + C2499 + C2498) * C458 + (C2497 + C2496 + C2495) * C51036 -
            (C2867 + C2866 + C2865) * C459 - (C2870 + C2869 + C2868) * C50848) *
               C50906 * C2447 +
           ((C2501 + C2502 + C2503) * C458 + (C2504 + C2505 + C2506) * C51036 -
            (C2451 * C871 + C2446 * C886 + C2450 * C867 + C2445 * C878 +
             C2449 * C463 + C2444 * C472) *
                C459 -
            (C2451 * C887 + C2446 * C895 + C2450 * C879 + C2445 * C891 +
             C2449 * C473 + C2444 * C481) *
                C50848) *
               C50906 * C50758) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C458 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C51036 -
            (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
             C2449 * C460 + C2444 * C466) *
                C459 -
            (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
             C2449 * C467 + C2444 * C478) *
                C50848) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C458 + (C2492 + C2493 + C2494) * C51036 -
            (C2859 + C2860 + C2861) * C459 - (C2862 + C2863 + C2864) * C50848) *
               C50906 * C50758) *
              C630 +
          (((C2449 * C864 + C2444 * C872 + C2450 * C868 + C2445 * C880 +
             C2451 * C3298 + C2446 * C3302) *
                C459 -
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C51036 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C458) +
            (C2449 * C873 + C2444 * C888 + C2450 * C881 + C2445 * C892 +
             C2451 * C3303 + C2446 * C3310) *
                C50848) *
               C50906 * C2447 +
           ((C2449 * C865 + C2444 * C874 + C2450 * C869 + C2445 * C882 +
             C2451 * C3299 + C2446 * C3304) *
                C459 -
            ((C2677 + C2678 + C2679) * C51036 +
             (C2680 + C2681 + C2682) * C458) +
            (C2449 * C875 + C2444 * C889 + C2450 * C883 + C2445 * C893 +
             C2451 * C3305 + C2446 * C3311) *
                C50848) *
               C50906 * C50758) *
              C631 +
          (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
             C2451 * C3016 + C2446 * C3019) *
                C458 +
            (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
             C2451 * C3020 + C2446 * C3025) *
                C51036 -
            (C2451 * C3300 + C2446 * C3306 + C2450 * C3298 + C2445 * C3302 +
             C2449 * C868 + C2444 * C880) *
                C459 -
            (C2451 * C3307 + C2446 * C3312 + C2450 * C3303 + C2445 * C3310 +
             C2449 * C881 + C2444 * C892) *
                C50848) *
               C50906 * C2447 +
           ((C3041 + C3042 + C3043) * C458 + (C3044 + C3045 + C3046) * C51036 -
            (C2451 * C3301 + C2446 * C3308 + C2450 * C3299 + C2445 * C3304 +
             C2449 * C869 + C2444 * C882) *
                C459 -
            (C2451 * C3309 + C2446 * C3313 + C2450 * C3305 + C2445 * C3311 +
             C2449 * C883 + C2444 * C893) *
                C50848) *
               C50906 * C50758) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
            C2451 * C635 + C2446 * C640) *
               C1240 +
           (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
            C2451 * C641 + C2446 * C650) *
               C1236 -
           (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
            C2449 * C460 + C2444 * C466) *
               C1241 -
           (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
            C2449 * C467 + C2444 * C478) *
               C1237 +
           (C2449 * C1000 + C2444 * C1005 + C2450 * C1154 + C2445 * C1158 +
            C2451 * C3460 + C2446 * C3463) *
               C1242 +
           (C2449 * C1006 + C2444 * C1015 + C2450 * C1159 + C2445 * C1166 +
            C2451 * C3464 + C2446 * C3469) *
               C1238 -
           (C2451 * C3742 + C2446 * C3746 + C2450 * C3743 + C2445 * C3747 +
            C2449 * C1244 + C2444 * C1248) *
               C1243 -
           (C2451 * C3748 + C2446 * C3754 + C2450 * C3749 + C2445 * C3755 +
            C2449 * C1249 + C2444 * C1256) *
               C1239) *
              C50906 * C2447 +
          ((C2489 + C2490 + C2491) * C1240 + (C2492 + C2493 + C2494) * C1236 -
           (C2859 + C2860 + C2861) * C1241 - (C2862 + C2863 + C2864) * C1237 +
           (C3485 + C3486 + C3487) * C1242 + (C3488 + C3489 + C3490) * C1238 -
           (C2451 * C3744 + C2446 * C3750 + C2450 * C3745 + C2445 * C3751 +
            C2449 * C1245 + C2444 * C1250) *
               C1243 -
           (C2451 * C3752 + C2446 * C3756 + C2450 * C3753 + C2445 * C3757 +
            C2449 * C1251 + C2444 * C1257) *
               C1239) *
              C50906 * C50758) *
         C50806 * C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C1730 +
            (C117 * C127 + C50890 * C140) * C1728 -
            (C117 * C460 + C50890 * C466) * C1731 -
            (C117 * C467 + C50890 * C478) * C50848) *
               C50906 * C108 +
           (C1733 + C1734 - C1735 - C1736) * C50906 * C109 + C1755 * C110 +
           C1756 * C111) *
              C50806 * C51080 +
          ((C1735 - (C1734 + C1733) + C1736) * C50906 * C108 +
           (C1739 - (C1738 + C1737) + C1740) * C50906 * C109 +
           (C1743 - (C1742 + C1741) + C1744) * C50906 * C110 +
           (C1745 - (C1746 + C1747) + C1748) * C50906 * C111) *
              C50806 * C51065 +
          (C1755 * C108 + C1756 * C109 +
           (C1747 + C1746 - C1745 - C1748) * C50906 * C110 +
           (C176 * C1730 + C177 * C1728 -
            (C117 * C465 + C50890 * C476) * C1731 -
            (C117 * C477 + C50890 * C483) * C50848) *
               C50906 * C111) *
              C50806 * C1362)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C1730 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C1728 -
            (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
             C2449 * C460 + C2444 * C466) *
                C1731 -
            (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
             C2449 * C467 + C2444 * C478) *
                C50848) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C1730 + (C2492 + C2493 + C2494) * C1728 -
            (C2859 + C2860 + C2861) * C1731 -
            (C2862 + C2863 + C2864) * C50848) *
               C50906 * C50758) *
              C50806 * C51080 +
          (((C2861 + C2860 + C2859) * C1731 -
            ((C2494 + C2493 + C2492) * C1728 +
             (C2491 + C2490 + C2489) * C1730) +
            (C2864 + C2863 + C2862) * C50848) *
               C50906 * C2447 +
           ((C2865 + C2866 + C2867) * C1731 -
            ((C2495 + C2496 + C2497) * C1728 +
             (C2498 + C2499 + C2500) * C1730) +
            (C2868 + C2869 + C2870) * C50848) *
               C50906 * C50758) *
              C50806 * C51065 +
          (((C2500 + C2499 + C2498) * C1730 + (C2497 + C2496 + C2495) * C1728 -
            (C2867 + C2866 + C2865) * C1731 -
            (C2870 + C2869 + C2868) * C50848) *
               C50906 * C2447 +
           ((C2501 + C2502 + C2503) * C1730 + (C2504 + C2505 + C2506) * C1728 -
            (C2451 * C871 + C2446 * C886 + C2450 * C867 + C2445 * C878 +
             C2449 * C463 + C2444 * C472) *
                C1731 -
            (C2451 * C887 + C2446 * C895 + C2450 * C879 + C2445 * C891 +
             C2449 * C473 + C2444 * C481) *
                C50848) *
               C50906 * C50758) *
              C50806 * C1362)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C1730 +
             (C117 * C127 + C50890 * C140) * C1728 -
             (C117 * C460 + C50890 * C466) * C1731 -
             (C117 * C467 + C50890 * C478) * C50848) *
                C50906 * C108 +
            (C1733 + C1734 - C1735 - C1736) * C50906 * C109 + C1755 * C110 +
            C1756 * C111) *
               C51034 +
           (((C117 * C864 + C50890 * C872) * C1731 -
             ((C117 * C310 + C50890 * C319) * C1728 +
              (C117 * C301 + C50890 * C311) * C1730) +
             (C117 * C873 + C50890 * C888) * C50848) *
                C50906 * C108 +
            (C1887 - (C1888 + C1889) + C1890) * C50906 * C109 +
            (C1891 - (C1892 + C1893) + C1894) * C50906 * C110 +
            (C1895 - (C1896 + C1897) + C1898) * C50906 * C111) *
               C50822) *
              C1464 +
          (((C1735 - (C1734 + C1733) + C1736) * C50906 * C108 +
            (C1739 - (C1738 + C1737) + C1740) * C50906 * C109 +
            (C1743 - (C1742 + C1741) + C1744) * C50906 * C110 +
            (C1745 - (C1746 + C1747) + C1748) * C50906 * C111) *
               C51034 +
           ((C1889 + C1888 - C1887 - C1890) * C50906 * C108 +
            (C1893 + C1892 - C1891 - C1894) * C50906 * C109 +
            (C1897 + C1896 - C1895 - C1898) * C50906 * C110 +
            (C345 * C1730 + C346 * C1728 -
             (C117 * C1596 + C50890 * C1597) * C1731 -
             (C117 * C1598 + C50890 * C1599) * C50848) *
                C50906 * C111) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C1730 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C1728 -
             (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
              C2449 * C460 + C2444 * C466) *
                 C1731 -
             (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
              C2449 * C467 + C2444 * C478) *
                 C50848) *
                C50906 * C2447 +
            ((C2489 + C2490 + C2491) * C1730 + (C2492 + C2493 + C2494) * C1728 -
             (C2859 + C2860 + C2861) * C1731 -
             (C2862 + C2863 + C2864) * C50848) *
                C50906 * C50758) *
               C51034 +
           (((C2449 * C864 + C2444 * C872 + C2450 * C868 + C2445 * C880 +
              C2451 * C3298 + C2446 * C3302) *
                 C1731 -
             ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
               C2449 * C310 + C2444 * C319) *
                  C1728 +
              (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
               C2449 * C301 + C2444 * C311) *
                  C1730) +
             (C2449 * C873 + C2444 * C888 + C2450 * C881 + C2445 * C892 +
              C2451 * C3303 + C2446 * C3310) *
                 C50848) *
                C50906 * C2447 +
            ((C4261 + C4262 + C4263) * C1731 -
             ((C2677 + C2678 + C2679) * C1728 +
              (C2680 + C2681 + C2682) * C1730) +
             (C4264 + C4265 + C4266) * C50848) *
                C50906 * C50758) *
               C50822) *
              C1464 +
          ((((C2861 + C2860 + C2859) * C1731 -
             ((C2494 + C2493 + C2492) * C1728 +
              (C2491 + C2490 + C2489) * C1730) +
             (C2864 + C2863 + C2862) * C50848) *
                C50906 * C2447 +
            ((C2865 + C2866 + C2867) * C1731 -
             ((C2495 + C2496 + C2497) * C1728 +
              (C2498 + C2499 + C2500) * C1730) +
             (C2868 + C2869 + C2870) * C50848) *
                C50906 * C50758) *
               C51034 +
           (((C2682 + C2681 + C2680) * C1730 + (C2679 + C2678 + C2677) * C1728 -
             (C4263 + C4262 + C4261) * C1731 -
             (C4266 + C4265 + C4264) * C50848) *
                C50906 * C2447 +
            ((C2683 + C2684 + C2685) * C1730 + (C2686 + C2687 + C2688) * C1728 -
             (C2451 * C4244 + C2446 * C4245 + C2450 * C870 + C2445 * C884 +
              C2449 * C866 + C2444 * C876) *
                 C1731 -
             (C2451 * C4246 + C2446 * C4247 + C2450 * C885 + C2445 * C894 +
              C2449 * C877 + C2444 * C890) *
                 C50848) *
                C50906 * C50758) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C1999 +
            (C117 * C127 + C50890 * C140) * C51082 -
            (C117 * C460 + C50890 * C466) * C2000 -
            (C117 * C467 + C50890 * C478) * C51071 +
            (C117 * C1000 + C50890 * C1005) * C2001 +
            (C117 * C1006 + C50890 * C1015) * C1998) *
               C50906 * C108 +
           (C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C50906 * C109 +
           (C2009 + C2010 - C2011 - C2012 + C2013 + C2014) * C50906 * C110 +
           (C2015 + C2016 - C2017 - C2018 + C2019 + C2020) * C50906 * C111) *
              C50806 * C1464 +
          ((C2005 - (C2004 + C2003) + C2006 - C2007 - C2008) * C50906 * C108 +
           (C2011 - (C2010 + C2009) + C2012 - C2013 - C2014) * C50906 * C109 +
           (C2017 - (C2016 + C2015) + C2018 - C2019 - C2020) * C50906 * C110 +
           (C517 * C2000 - (C174 * C51082 + C175 * C1999) + C518 * C51071 -
            (C117 * C1004 + C50890 * C1013) * C2001 -
            (C117 * C1014 + C50890 * C1019) * C1998) *
               C50906 * C111) *
              C50806 * C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C1999 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C51082 -
            (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
             C2449 * C460 + C2444 * C466) *
                C2000 -
            (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
             C2449 * C467 + C2444 * C478) *
                C51071 +
            (C2449 * C1000 + C2444 * C1005 + C2450 * C1154 + C2445 * C1158 +
             C2451 * C3460 + C2446 * C3463) *
                C2001 +
            (C2449 * C1006 + C2444 * C1015 + C2450 * C1159 + C2445 * C1166 +
             C2451 * C3464 + C2446 * C3469) *
                C1998) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C1999 + (C2492 + C2493 + C2494) * C51082 -
            (C2859 + C2860 + C2861) * C2000 - (C2862 + C2863 + C2864) * C51071 +
            (C3485 + C3486 + C3487) * C2001 + (C3488 + C3489 + C3490) * C1998) *
               C50906 * C50758) *
              C50806 * C1464 +
          (((C2861 + C2860 + C2859) * C2000 -
            ((C2494 + C2493 + C2492) * C51082 +
             (C2491 + C2490 + C2489) * C1999) +
            (C2864 + C2863 + C2862) * C51071 - (C3487 + C3486 + C3485) * C2001 -
            (C3490 + C3489 + C3488) * C1998) *
               C50906 * C2447 +
           ((C2865 + C2866 + C2867) * C2000 -
            ((C2495 + C2496 + C2497) * C51082 +
             (C2498 + C2499 + C2500) * C1999) +
            (C2868 + C2869 + C2870) * C51071 -
            (C2451 * C3462 + C2446 * C3467 + C2450 * C1156 + C2445 * C1162 +
             C2449 * C1002 + C2444 * C1009) *
                C2001 -
            (C2451 * C3468 + C2446 * C3471 + C2450 * C1163 + C2445 * C1168 +
             C2449 * C1010 + C2444 * C1017) *
                C1998) *
               C50906 * C50758) *
              C50806 * C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C118 +
            (C117 * C127 + C50890 * C140) * C50836) *
               C50906 * C108 +
           (C178 + C179) * C50906 * C109 + C192 * C110 + C193 * C111) *
              C50806 * C113 -
          (C194 * C111 + C195 * C110 + (C181 + C180) * C50906 * C109 +
           (C179 + C178) * C50906 * C108) *
              C50806 * C114 +
          (C192 * C108 + C193 * C109 + (C185 + C184) * C50906 * C110 +
           (C186 + C187) * C50906 * C111) *
              C50806 * C115 -
          (((C117 * C138 + C50890 * C146) * C50836 +
            (C117 * C125 + C50890 * C139) * C118) *
               C50906 * C111 +
           (C187 + C186) * C50906 * C110 + C194 * C109 + C195 * C108) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C50906 * C108 +
            (C178 + C179) * C50906 * C109 + C192 * C110 + C193 * C111) *
               C630 -
           (C357 * C111 + C358 * C110 + (C351 + C352) * C50906 * C109 +
            ((C117 * C310 + C50890 * C319) * C50836 +
             (C117 * C301 + C50890 * C311) * C118) *
                C50906 * C108) *
               C631 +
           (((C117 * C635 + C50890 * C640) * C118 +
             (C117 * C641 + C50890 * C650) * C50836) *
                C50906 * C108 +
            (C674 + C675) * C50906 * C109 + (C676 + C677) * C50906 * C110 +
            (C678 + C679) * C50906 * C111) *
               C632) *
              C51027 +
          (((C352 + C351) * C50906 * C108 + (C350 + C349) * C50906 * C109 +
            (C348 + C347) * C50906 * C110 + (C353 + C354) * C50906 * C111) *
               C631 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50906 * C109 +
            (C179 + C178) * C50906 * C108) *
               C630 -
           (((C117 * C648 + C50890 * C654) * C50836 +
             (C117 * C639 + C50890 * C649) * C118) *
                C50906 * C111 +
            (C679 + C678) * C50906 * C110 + (C677 + C676) * C50906 * C109 +
            (C675 + C674) * C50906 * C108) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C50836) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C118 + (C2492 + C2493 + C2494) * C50836) *
               C50906 * C50758) *
              C50806 * C113 -
          (((C2495 + C2496 + C2497) * C50836 + (C2498 + C2499 + C2500) * C118) *
               C50906 * C50758 +
           ((C2494 + C2493 + C2492) * C50836 + (C2491 + C2490 + C2489) * C118) *
               C50906 * C2447) *
              C50806 * C114 +
          (((C2500 + C2499 + C2498) * C118 + (C2497 + C2496 + C2495) * C50836) *
               C50906 * C2447 +
           ((C2501 + C2502 + C2503) * C118 + (C2504 + C2505 + C2506) * C50836) *
               C50906 * C50758) *
              C50806 * C115 -
          (((C2451 * C648 + C2446 * C654 + C2450 * C313 + C2445 * C320 +
             C2449 * C134 + C2444 * C144) *
                C50836 +
            (C2451 * C639 + C2446 * C649 + C2450 * C302 + C2445 * C312 +
             C2449 * C123 + C2444 * C135) *
                C118) *
               C50906 * C50758 +
           ((C2506 + C2505 + C2504) * C50836 + (C2503 + C2502 + C2501) * C118) *
               C50906 * C2447) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C50836) *
                C50906 * C2447 +
            ((C2489 + C2490 + C2491) * C118 +
             (C2492 + C2493 + C2494) * C50836) *
                C50906 * C50758) *
               C630 -
           (((C2677 + C2678 + C2679) * C50836 +
             (C2680 + C2681 + C2682) * C118) *
                C50906 * C50758 +
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C50836 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C118) *
                C50906 * C2447) *
               C631 +
           (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
              C2451 * C3016 + C2446 * C3019) *
                 C118 +
             (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
              C2451 * C3020 + C2446 * C3025) *
                 C50836) *
                C50906 * C2447 +
            ((C3041 + C3042 + C3043) * C118 +
             (C3044 + C3045 + C3046) * C50836) *
                C50906 * C50758) *
               C632) *
              C51027 +
          ((((C2682 + C2681 + C2680) * C118 +
             (C2679 + C2678 + C2677) * C50836) *
                C50906 * C2447 +
            ((C2683 + C2684 + C2685) * C118 +
             (C2686 + C2687 + C2688) * C50836) *
                C50906 * C50758) *
               C631 -
           (((C2495 + C2496 + C2497) * C50836 +
             (C2498 + C2499 + C2500) * C118) *
                C50906 * C50758 +
            ((C2494 + C2493 + C2492) * C50836 +
             (C2491 + C2490 + C2489) * C118) *
                C50906 * C2447) *
               C630 -
           (((C2451 * C3023 + C2446 * C3027 + C2450 * C756 + C2445 * C763 +
              C2449 * C645 + C2444 * C652) *
                 C50836 +
             (C2451 * C3018 + C2446 * C3024 + C2450 * C751 + C2445 * C757 +
              C2449 * C637 + C2444 * C644) *
                 C118) *
                C50906 * C50758 +
            ((C3046 + C3045 + C3044) * C50836 +
             (C3043 + C3042 + C3041) * C118) *
                C50906 * C2447) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C50906 * C108 +
            (C178 + C179) * C50906 * C109 + C192 * C110 + C193 * C111) *
               C51034 -
           (C357 * C111 + C358 * C110 + (C351 + C352) * C50906 * C109 +
            ((C117 * C310 + C50890 * C319) * C50836 +
             (C117 * C301 + C50890 * C311) * C118) *
                C50906 * C108) *
               C50822) *
              C295 +
          (((C352 + C351) * C50906 * C108 + (C350 + C349) * C50906 * C109 +
            (C348 + C347) * C50906 * C110 + (C353 + C354) * C50906 * C111) *
               C50822 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C50906 * C109 +
            (C179 + C178) * C50906 * C108) *
               C51034) *
              C296 +
          ((C192 * C108 + C193 * C109 + (C185 + C184) * C50906 * C110 +
            (C186 + C187) * C50906 * C111) *
               C51034 -
           (((C117 * C314 + C50890 * C321) * C50836 +
             (C117 * C303 + C50890 * C315) * C118) *
                C50906 * C111 +
            (C354 + C353) * C50906 * C110 + C357 * C109 + C358 * C108) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C118 +
            (C117 * C127 + C50890 * C140) * C50836) *
               C50906 * C108 +
           (C178 + C179) * C50906 * C109 + C192 * C110 + C193 * C111) *
              C745 -
          (C357 * C111 + C358 * C110 + (C351 + C352) * C50906 * C109 +
           ((C117 * C310 + C50890 * C319) * C50836 +
            (C117 * C301 + C50890 * C311) * C118) *
               C50906 * C108) *
              C746 +
          (((C117 * C635 + C50890 * C640) * C118 +
            (C117 * C641 + C50890 * C650) * C50836) *
               C50906 * C108 +
           (C674 + C675) * C50906 * C109 + (C676 + C677) * C50906 * C110 +
           (C678 + C679) * C50906 * C111) *
              C747 -
          (((C117 * C754 + C50890 * C762) * C50836 +
            (C117 * C750 + C50890 * C755) * C118) *
               C50906 * C111 +
           ((C117 * C756 + C50890 * C763) * C50836 +
            (C117 * C751 + C50890 * C757) * C118) *
               C50906 * C110 +
           ((C117 * C758 + C50890 * C764) * C50836 +
            (C117 * C752 + C50890 * C759) * C118) *
               C50906 * C109 +
           ((C117 * C760 + C50890 * C765) * C50836 +
            (C117 * C753 + C50890 * C761) * C118) *
               C50906 * C108) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C50836) *
                C50906 * C2447 +
            ((C2489 + C2490 + C2491) * C118 +
             (C2492 + C2493 + C2494) * C50836) *
                C50906 * C50758) *
               C51034 -
           (((C2677 + C2678 + C2679) * C50836 +
             (C2680 + C2681 + C2682) * C118) *
                C50906 * C50758 +
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C50836 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C118) *
                C50906 * C2447) *
               C50822) *
              C295 +
          ((((C2682 + C2681 + C2680) * C118 +
             (C2679 + C2678 + C2677) * C50836) *
                C50906 * C2447 +
            ((C2683 + C2684 + C2685) * C118 +
             (C2686 + C2687 + C2688) * C50836) *
                C50906 * C50758) *
               C50822 -
           (((C2495 + C2496 + C2497) * C50836 +
             (C2498 + C2499 + C2500) * C118) *
                C50906 * C50758 +
            ((C2494 + C2493 + C2492) * C50836 +
             (C2491 + C2490 + C2489) * C118) *
                C50906 * C2447) *
               C51034) *
              C296 +
          ((((C2500 + C2499 + C2498) * C118 +
             (C2497 + C2496 + C2495) * C50836) *
                C50906 * C2447 +
            ((C2501 + C2502 + C2503) * C118 +
             (C2504 + C2505 + C2506) * C50836) *
                C50906 * C50758) *
               C51034 -
           (((C2451 * C754 + C2446 * C762 + C2450 * C647 + C2445 * C653 +
              C2449 * C304 + C2444 * C316) *
                 C50836 +
             (C2451 * C750 + C2446 * C755 + C2450 * C638 + C2445 * C646 +
              C2449 * C298 + C2444 * C305) *
                 C118) *
                C50906 * C50758 +
            ((C2688 + C2687 + C2686) * C50836 +
             (C2685 + C2684 + C2683) * C118) *
                C50906 * C2447) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C50836) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C118 + (C2492 + C2493 + C2494) * C50836) *
               C50906 * C50758) *
              C745 -
          (((C2677 + C2678 + C2679) * C50836 + (C2680 + C2681 + C2682) * C118) *
               C50906 * C50758 +
           ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
             C2449 * C310 + C2444 * C319) *
                C50836 +
            (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
             C2449 * C301 + C2444 * C311) *
                C118) *
               C50906 * C2447) *
              C746 +
          (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
             C2451 * C3016 + C2446 * C3019) *
                C118 +
            (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
             C2451 * C3020 + C2446 * C3025) *
                C50836) *
               C50906 * C2447 +
           ((C3041 + C3042 + C3043) * C118 + (C3044 + C3045 + C3046) * C50836) *
               C50906 * C50758) *
              C747 -
          (((C2451 * C3146 + C2446 * C3150 + C2450 * C3022 + C2445 * C3026 +
             C2449 * C758 + C2444 * C764) *
                C50836 +
            (C2451 * C3144 + C2446 * C3147 + C2450 * C3017 + C2445 * C3021 +
             C2449 * C752 + C2444 * C759) *
                C118) *
               C50906 * C50758 +
           ((C2451 * C3148 + C2446 * C3151 + C2450 * C3020 + C2445 * C3025 +
             C2449 * C760 + C2444 * C765) *
                C50836 +
            (C2451 * C3145 + C2446 * C3149 + C2450 * C3016 + C2445 * C3019 +
             C2449 * C753 + C2444 * C761) *
                C118) *
               C50906 * C2447) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C458 +
            (C117 * C127 + C50890 * C140) * C51036 -
            (C117 * C460 + C50890 * C466) * C459 -
            (C117 * C467 + C50890 * C478) * C50848) *
               C50906 * C108 +
           (C485 + C486 - C519 - C520) * C50906 * C109 + C531 * C110 +
           C532 * C111) *
              C50806 * C295 +
          ((C519 - (C486 + C485) + C520) * C50906 * C108 +
           (C521 - (C492 + C491) + C522) * C50906 * C109 +
           (C523 - (C498 + C497) + C524) * C50906 * C110 +
           (C525 - (C505 + C506) + C526) * C50906 * C111) *
              C50806 * C296 +
          (C531 * C108 + C532 * C109 +
           (C506 + C505 - C525 - C526) * C50906 * C110 +
           (C176 * C458 + C177 * C51036 - (C117 * C465 + C50890 * C476) * C459 -
            (C117 * C477 + C50890 * C483) * C50848) *
               C50906 * C111) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C458 +
            (C117 * C127 + C50890 * C140) * C51036 -
            (C117 * C460 + C50890 * C466) * C459 -
            (C117 * C467 + C50890 * C478) * C50848) *
               C50906 * C108 +
           (C485 + C486 - C519 - C520) * C50906 * C109 + C531 * C110 +
           C532 * C111) *
              C630 +
          (((C117 * C864 + C50890 * C872) * C459 -
            ((C117 * C310 + C50890 * C319) * C51036 +
             (C117 * C301 + C50890 * C311) * C458) +
            (C117 * C873 + C50890 * C888) * C50848) *
               C50906 * C108 +
           ((C117 * C865 + C50890 * C874) * C459 -
            (C343 * C51036 + C344 * C458) +
            (C117 * C875 + C50890 * C889) * C50848) *
               C50906 * C109 +
           ((C117 * C866 + C50890 * C876) * C459 -
            (C341 * C51036 + C342 * C458) +
            (C117 * C877 + C50890 * C890) * C50848) *
               C50906 * C110 +
           ((C117 * C867 + C50890 * C878) * C459 -
            (C339 * C51036 + C340 * C458) +
            (C117 * C879 + C50890 * C891) * C50848) *
               C50906 * C111) *
              C631 +
          (((C117 * C635 + C50890 * C640) * C458 +
            (C117 * C641 + C50890 * C650) * C51036 -
            (C117 * C868 + C50890 * C880) * C459 -
            (C117 * C881 + C50890 * C892) * C50848) *
               C50906 * C108 +
           (C668 * C458 + C669 * C51036 - (C117 * C869 + C50890 * C882) * C459 -
            (C117 * C883 + C50890 * C893) * C50848) *
               C50906 * C109 +
           (C670 * C458 + C671 * C51036 - (C117 * C870 + C50890 * C884) * C459 -
            (C117 * C885 + C50890 * C894) * C50848) *
               C50906 * C110 +
           (C672 * C458 + C673 * C51036 - (C117 * C871 + C50890 * C886) * C459 -
            (C117 * C887 + C50890 * C895) * C50848) *
               C50906 * C111) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C458 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C51036 -
            (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
             C2449 * C460 + C2444 * C466) *
                C459 -
            (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
             C2449 * C467 + C2444 * C478) *
                C50848) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C458 + (C2492 + C2493 + C2494) * C51036 -
            (C2859 + C2860 + C2861) * C459 - (C2862 + C2863 + C2864) * C50848) *
               C50906 * C50758) *
              C50806 * C295 +
          (((C2861 + C2860 + C2859) * C459 -
            ((C2494 + C2493 + C2492) * C51036 +
             (C2491 + C2490 + C2489) * C458) +
            (C2864 + C2863 + C2862) * C50848) *
               C50906 * C2447 +
           ((C2865 + C2866 + C2867) * C459 -
            ((C2495 + C2496 + C2497) * C51036 +
             (C2498 + C2499 + C2500) * C458) +
            (C2868 + C2869 + C2870) * C50848) *
               C50906 * C50758) *
              C50806 * C296 +
          (((C2500 + C2499 + C2498) * C458 + (C2497 + C2496 + C2495) * C51036 -
            (C2867 + C2866 + C2865) * C459 - (C2870 + C2869 + C2868) * C50848) *
               C50906 * C2447 +
           ((C2501 + C2502 + C2503) * C458 + (C2504 + C2505 + C2506) * C51036 -
            (C2451 * C871 + C2446 * C886 + C2450 * C867 + C2445 * C878 +
             C2449 * C463 + C2444 * C472) *
                C459 -
            (C2451 * C887 + C2446 * C895 + C2450 * C879 + C2445 * C891 +
             C2449 * C473 + C2444 * C481) *
                C50848) *
               C50906 * C50758) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C458 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C51036 -
            (C2451 * C868 + C2446 * C880 + C2450 * C864 + C2445 * C872 +
             C2449 * C460 + C2444 * C466) *
                C459 -
            (C2451 * C881 + C2446 * C892 + C2450 * C873 + C2445 * C888 +
             C2449 * C467 + C2444 * C478) *
                C50848) *
               C50906 * C2447 +
           ((C2489 + C2490 + C2491) * C458 + (C2492 + C2493 + C2494) * C51036 -
            (C2859 + C2860 + C2861) * C459 - (C2862 + C2863 + C2864) * C50848) *
               C50906 * C50758) *
              C630 +
          (((C2449 * C864 + C2444 * C872 + C2450 * C868 + C2445 * C880 +
             C2451 * C3298 + C2446 * C3302) *
                C459 -
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C51036 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C458) +
            (C2449 * C873 + C2444 * C888 + C2450 * C881 + C2445 * C892 +
             C2451 * C3303 + C2446 * C3310) *
                C50848) *
               C50906 * C2447 +
           ((C2449 * C865 + C2444 * C874 + C2450 * C869 + C2445 * C882 +
             C2451 * C3299 + C2446 * C3304) *
                C459 -
            ((C2677 + C2678 + C2679) * C51036 +
             (C2680 + C2681 + C2682) * C458) +
            (C2449 * C875 + C2444 * C889 + C2450 * C883 + C2445 * C893 +
             C2451 * C3305 + C2446 * C3311) *
                C50848) *
               C50906 * C50758) *
              C631 +
          (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
             C2451 * C3016 + C2446 * C3019) *
                C458 +
            (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
             C2451 * C3020 + C2446 * C3025) *
                C51036 -
            (C2451 * C3300 + C2446 * C3306 + C2450 * C3298 + C2445 * C3302 +
             C2449 * C868 + C2444 * C880) *
                C459 -
            (C2451 * C3307 + C2446 * C3312 + C2450 * C3303 + C2445 * C3310 +
             C2449 * C881 + C2444 * C892) *
                C50848) *
               C50906 * C2447 +
           ((C3041 + C3042 + C3043) * C458 + (C3044 + C3045 + C3046) * C51036 -
            (C2451 * C3301 + C2446 * C3308 + C2450 * C3299 + C2445 * C3304 +
             C2449 * C869 + C2444 * C882) *
                C459 -
            (C2451 * C3309 + C2446 * C3313 + C2450 * C3305 + C2445 * C3311 +
             C2449 * C883 + C2444 * C893) *
                C50848) *
               C50906 * C50758) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[75] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                      C51084 * C311 + C24803 * C635 + C24798 * C640) *
                         C118 +
                     (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                      C51084 * C319 + C24803 * C641 + C24798 * C650) *
                         C50836) *
                        C50906 * C51022 +
                    ((C24841 + C24842 + C24843) * C118 +
                     (C24844 + C24845 + C24846) * C50836) *
                        C50906 * C50758) *
                       C1358 -
                   (((C25029 + C25030 + C25031) * C50836 +
                     (C25032 + C25033 + C25034) * C118) *
                        C50906 * C50758 +
                    ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                      C51084 * C650 + C24801 * C310 + C51083 * C319) *
                         C50836 +
                     (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                      C51084 * C640 + C24801 * C301 + C51083 * C311) *
                         C118) *
                        C50906 * C51022) *
                       C50822) *
                      C51080 +
                  ((((C25034 + C25033 + C25032) * C118 +
                     (C25031 + C25030 + C25029) * C50836) *
                        C50906 * C51022 +
                    ((C25035 + C25036 + C25037) * C118 +
                     (C25038 + C25039 + C25040) * C50836) *
                        C50906 * C50758) *
                       C50822 -
                   (((C24847 + C24848 + C24849) * C50836 +
                     (C24850 + C24851 + C24852) * C118) *
                        C50906 * C50758 +
                    ((C24846 + C24845 + C24844) * C50836 +
                     (C24843 + C24842 + C24841) * C118) *
                        C50906 * C51022) *
                       C1358) *
                      C51065 +
                  ((((C24852 + C24851 + C24850) * C118 +
                     (C24849 + C24848 + C24847) * C50836) *
                        C50906 * C51022 +
                    ((C24853 + C24854 + C24855) * C118 +
                     (C24856 + C24857 + C24858) * C50836) *
                        C50906 * C50758) *
                       C1358 -
                   (((C24803 * C754 + C24798 * C762 + C24802 * C647 +
                      C51084 * C653 + C24801 * C304 + C51083 * C316) *
                         C50836 +
                     (C24803 * C750 + C24798 * C755 + C24802 * C638 +
                      C51084 * C646 + C24801 * C298 + C51083 * C305) *
                         C118) *
                        C50906 * C50758 +
                    ((C25040 + C25039 + C25038) * C50836 +
                     (C25037 + C25036 + C25035) * C118) *
                        C50906 * C51022) *
                       C50822) *
                      C1362)) /
                (p * q * std::sqrt(p + q));
    d2ee[76] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                      C51084 * C311 + C24803 * C635 + C24798 * C640) *
                         C118 +
                     (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                      C51084 * C319 + C24803 * C641 + C24798 * C650) *
                         C50836) *
                        C50906 * C51022 +
                    ((C24841 + C24842 + C24843) * C118 +
                     (C24844 + C24845 + C24846) * C50836) *
                        C50906 * C50758) *
                       C51081 -
                   (((C25029 + C25030 + C25031) * C50836 +
                     (C25032 + C25033 + C25034) * C118) *
                        C50906 * C50758 +
                    ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                      C51084 * C650 + C24801 * C310 + C51083 * C319) *
                         C50836 +
                     (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                      C51084 * C640 + C24801 * C301 + C51083 * C311) *
                         C118) *
                        C50906 * C51022) *
                       C51068 +
                   (((C24801 * C635 + C51083 * C640 + C24802 * C753 +
                      C51084 * C761 + C24803 * C3016 + C24798 * C3019) *
                         C118 +
                     (C24801 * C641 + C51083 * C650 + C24802 * C760 +
                      C51084 * C765 + C24803 * C3020 + C24798 * C3025) *
                         C50836) *
                        C50906 * C51022 +
                    ((C25381 + C25382 + C25383) * C118 +
                     (C25384 + C25385 + C25386) * C50836) *
                        C50906 * C50758) *
                       C1463) *
                      C1464 +
                  ((((C25034 + C25033 + C25032) * C118 +
                     (C25031 + C25030 + C25029) * C50836) *
                        C50906 * C51022 +
                    ((C25035 + C25036 + C25037) * C118 +
                     (C25038 + C25039 + C25040) * C50836) *
                        C50906 * C50758) *
                       C51068 -
                   (((C24847 + C24848 + C24849) * C50836 +
                     (C24850 + C24851 + C24852) * C118) *
                        C50906 * C50758 +
                    ((C24846 + C24845 + C24844) * C50836 +
                     (C24843 + C24842 + C24841) * C118) *
                        C50906 * C51022) *
                       C51081 -
                   (((C24803 * C3023 + C24798 * C3027 + C24802 * C756 +
                      C51084 * C763 + C24801 * C645 + C51083 * C652) *
                         C50836 +
                     (C24803 * C3018 + C24798 * C3024 + C24802 * C751 +
                      C51084 * C757 + C24801 * C637 + C51083 * C644) *
                         C118) *
                        C50906 * C50758 +
                    ((C25386 + C25385 + C25384) * C50836 +
                     (C25383 + C25382 + C25381) * C118) *
                        C50906 * C51022) *
                       C1463) *
                      C50779)) /
                (p * q * std::sqrt(p + q));
    d2ee[77] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                      C51084 * C311 + C24803 * C635 + C24798 * C640) *
                         C458 +
                     (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                      C51084 * C319 + C24803 * C641 + C24798 * C650) *
                         C51036 -
                     (C24803 * C868 + C24798 * C880 + C24802 * C864 +
                      C51084 * C872 + C24801 * C460 + C51083 * C466) *
                         C459 -
                     (C24803 * C881 + C24798 * C892 + C24802 * C873 +
                      C51084 * C888 + C24801 * C467 + C51083 * C478) *
                         C50848) *
                        C50906 * C51022 +
                    ((C24841 + C24842 + C24843) * C458 +
                     (C24844 + C24845 + C24846) * C51036 -
                     (C25211 + C25212 + C25213) * C459 -
                     (C25214 + C25215 + C25216) * C50848) *
                        C50906 * C50758) *
                       C1358 +
                   (((C24801 * C864 + C51083 * C872 + C24802 * C868 +
                      C51084 * C880 + C24803 * C3298 + C24798 * C3302) *
                         C459 -
                     ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                       C51084 * C650 + C24801 * C310 + C51083 * C319) *
                          C51036 +
                      (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                       C51084 * C640 + C24801 * C301 + C51083 * C311) *
                          C458) +
                     (C24801 * C873 + C51083 * C888 + C24802 * C881 +
                      C51084 * C892 + C24803 * C3303 + C24798 * C3310) *
                         C50848) *
                        C50906 * C51022 +
                    ((C26537 + C26538 + C26539) * C459 -
                     ((C25029 + C25030 + C25031) * C51036 +
                      (C25032 + C25033 + C25034) * C458) +
                     (C26540 + C26541 + C26542) * C50848) *
                        C50906 * C50758) *
                       C50822) *
                      C1464 +
                  ((((C25213 + C25212 + C25211) * C459 -
                     ((C24846 + C24845 + C24844) * C51036 +
                      (C24843 + C24842 + C24841) * C458) +
                     (C25216 + C25215 + C25214) * C50848) *
                        C50906 * C51022 +
                    ((C25217 + C25218 + C25219) * C459 -
                     ((C24847 + C24848 + C24849) * C51036 +
                      (C24850 + C24851 + C24852) * C458) +
                     (C25220 + C25221 + C25222) * C50848) *
                        C50906 * C50758) *
                       C1358 +
                   (((C25034 + C25033 + C25032) * C458 +
                     (C25031 + C25030 + C25029) * C51036 -
                     (C26539 + C26538 + C26537) * C459 -
                     (C26542 + C26541 + C26540) * C50848) *
                        C50906 * C51022 +
                    ((C25035 + C25036 + C25037) * C458 +
                     (C25038 + C25039 + C25040) * C51036 -
                     (C24803 * C4244 + C24798 * C4245 + C24802 * C870 +
                      C51084 * C884 + C24801 * C866 + C51083 * C876) *
                         C459 -
                     (C24803 * C4246 + C24798 * C4247 + C24802 * C885 +
                      C51084 * C894 + C24801 * C877 + C51083 * C890) *
                         C50848) *
                        C50906 * C50758) *
                       C50822) *
                      C50779)) /
                (p * q * std::sqrt(p + q));
    d2ee[78] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                      C51084 * C311 + C24803 * C635 + C24798 * C640) *
                         C1730 +
                     (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                      C51084 * C319 + C24803 * C641 + C24798 * C650) *
                         C1728 -
                     (C24803 * C868 + C24798 * C880 + C24802 * C864 +
                      C51084 * C872 + C24801 * C460 + C51083 * C466) *
                         C1731 -
                     (C24803 * C881 + C24798 * C892 + C24802 * C873 +
                      C51084 * C888 + C24801 * C467 + C51083 * C478) *
                         C50848) *
                        C50906 * C51022 +
                    ((C24841 + C24842 + C24843) * C1730 +
                     (C24844 + C24845 + C24846) * C1728 -
                     (C25211 + C25212 + C25213) * C1731 -
                     (C25214 + C25215 + C25216) * C50848) *
                        C50906 * C50758) *
                       C1358 +
                   (((C24801 * C864 + C51083 * C872 + C24802 * C868 +
                      C51084 * C880 + C24803 * C3298 + C24798 * C3302) *
                         C1731 -
                     ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                       C51084 * C650 + C24801 * C310 + C51083 * C319) *
                          C1728 +
                      (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                       C51084 * C640 + C24801 * C301 + C51083 * C311) *
                          C1730) +
                     (C24801 * C873 + C51083 * C888 + C24802 * C881 +
                      C51084 * C892 + C24803 * C3303 + C24798 * C3310) *
                         C50848) *
                        C50906 * C51022 +
                    ((C26537 + C26538 + C26539) * C1731 -
                     ((C25029 + C25030 + C25031) * C1728 +
                      (C25032 + C25033 + C25034) * C1730) +
                     (C26540 + C26541 + C26542) * C50848) *
                        C50906 * C50758) *
                       C50822) *
                      C51027 +
                  ((((C25213 + C25212 + C25211) * C1731 -
                     ((C24846 + C24845 + C24844) * C1728 +
                      (C24843 + C24842 + C24841) * C1730) +
                     (C25216 + C25215 + C25214) * C50848) *
                        C50906 * C51022 +
                    ((C25217 + C25218 + C25219) * C1731 -
                     ((C24847 + C24848 + C24849) * C1728 +
                      (C24850 + C24851 + C24852) * C1730) +
                     (C25220 + C25221 + C25222) * C50848) *
                        C50906 * C50758) *
                       C1358 +
                   (((C25034 + C25033 + C25032) * C1730 +
                     (C25031 + C25030 + C25029) * C1728 -
                     (C26539 + C26538 + C26537) * C1731 -
                     (C26542 + C26541 + C26540) * C50848) *
                        C50906 * C51022 +
                    ((C25035 + C25036 + C25037) * C1730 +
                     (C25038 + C25039 + C25040) * C1728 -
                     (C24803 * C4244 + C24798 * C4245 + C24802 * C870 +
                      C51084 * C884 + C24801 * C866 + C51083 * C876) *
                         C1731 -
                     (C24803 * C4246 + C24798 * C4247 + C24802 * C885 +
                      C51084 * C894 + C24801 * C877 + C51083 * C890) *
                         C50848) *
                        C50906 * C50758) *
                       C50822) *
                      C50779)) /
                (p * q * std::sqrt(p + q));
    d2ee[79] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                     C51084 * C311 + C24803 * C635 + C24798 * C640) *
                        C1730 +
                    (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                     C51084 * C319 + C24803 * C641 + C24798 * C650) *
                        C1728 -
                    (C24803 * C868 + C24798 * C880 + C24802 * C864 +
                     C51084 * C872 + C24801 * C460 + C51083 * C466) *
                        C1731 -
                    (C24803 * C881 + C24798 * C892 + C24802 * C873 +
                     C51084 * C888 + C24801 * C467 + C51083 * C478) *
                        C50848) *
                       C50906 * C51022 +
                   ((C24841 + C24842 + C24843) * C1730 +
                    (C24844 + C24845 + C24846) * C1728 -
                    (C25211 + C25212 + C25213) * C1731 -
                    (C25214 + C25215 + C25216) * C50848) *
                       C50906 * C50758) *
                      C51081 +
                  (((C24801 * C864 + C51083 * C872 + C24802 * C868 +
                     C51084 * C880 + C24803 * C3298 + C24798 * C3302) *
                        C1731 -
                    ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                      C51084 * C650 + C24801 * C310 + C51083 * C319) *
                         C1728 +
                     (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                      C51084 * C640 + C24801 * C301 + C51083 * C311) *
                         C1730) +
                    (C24801 * C873 + C51083 * C888 + C24802 * C881 +
                     C51084 * C892 + C24803 * C3303 + C24798 * C3310) *
                        C50848) *
                       C50906 * C51022 +
                   ((C26537 + C26538 + C26539) * C1731 -
                    ((C25029 + C25030 + C25031) * C1728 +
                     (C25032 + C25033 + C25034) * C1730) +
                    (C26540 + C26541 + C26542) * C50848) *
                       C50906 * C50758) *
                      C51068 +
                  (((C24801 * C635 + C51083 * C640 + C24802 * C753 +
                     C51084 * C761 + C24803 * C3016 + C24798 * C3019) *
                        C1730 +
                    (C24801 * C641 + C51083 * C650 + C24802 * C760 +
                     C51084 * C765 + C24803 * C3020 + C24798 * C3025) *
                        C1728 -
                    (C24803 * C3300 + C24798 * C3306 + C24802 * C3298 +
                     C51084 * C3302 + C24801 * C868 + C51083 * C880) *
                        C1731 -
                    (C24803 * C3307 + C24798 * C3312 + C24802 * C3303 +
                     C51084 * C3310 + C24801 * C881 + C51083 * C892) *
                        C50848) *
                       C50906 * C51022 +
                   ((C25381 + C25382 + C25383) * C1730 +
                    (C25384 + C25385 + C25386) * C1728 -
                    (C24803 * C3301 + C24798 * C3308 + C24802 * C3299 +
                     C51084 * C3304 + C24801 * C869 + C51083 * C882) *
                        C1731 -
                    (C24803 * C3309 + C24798 * C3313 + C24802 * C3305 +
                     C51084 * C3311 + C24801 * C883 + C51083 * C893) *
                        C50848) *
                       C50906 * C50758) *
                      C1463) *
                 C50774) /
                (p * q * std::sqrt(p + q));
    d2ee[80] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                     C51084 * C311 + C24803 * C635 + C24798 * C640) *
                        C1999 +
                    (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                     C51084 * C319 + C24803 * C641 + C24798 * C650) *
                        C51082 -
                    (C24803 * C868 + C24798 * C880 + C24802 * C864 +
                     C51084 * C872 + C24801 * C460 + C51083 * C466) *
                        C2000 -
                    (C24803 * C881 + C24798 * C892 + C24802 * C873 +
                     C51084 * C888 + C24801 * C467 + C51083 * C478) *
                        C51071 +
                    (C24801 * C1000 + C51083 * C1005 + C24802 * C1154 +
                     C51084 * C1158 + C24803 * C3460 + C24798 * C3463) *
                        C2001 +
                    (C24801 * C1006 + C51083 * C1015 + C24802 * C1159 +
                     C51084 * C1166 + C24803 * C3464 + C24798 * C3469) *
                        C1998) *
                       C50906 * C51022 +
                   ((C24841 + C24842 + C24843) * C1999 +
                    (C24844 + C24845 + C24846) * C51082 -
                    (C25211 + C25212 + C25213) * C2000 -
                    (C25214 + C25215 + C25216) * C51071 +
                    (C25789 + C25790 + C25791) * C2001 +
                    (C25792 + C25793 + C25794) * C1998) *
                       C50906 * C50758) *
                      C1358 +
                  (((C24801 * C864 + C51083 * C872 + C24802 * C868 +
                     C51084 * C880 + C24803 * C3298 + C24798 * C3302) *
                        C2000 -
                    ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                      C51084 * C650 + C24801 * C310 + C51083 * C319) *
                         C51082 +
                     (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                      C51084 * C640 + C24801 * C301 + C51083 * C311) *
                         C1999) +
                    (C24801 * C873 + C51083 * C888 + C24802 * C881 +
                     C51084 * C892 + C24803 * C3303 + C24798 * C3310) *
                        C51071 -
                    (C24803 * C3636 + C24798 * C3638 + C24802 * C3460 +
                     C51084 * C3463 + C24801 * C1154 + C51083 * C1158) *
                        C2001 -
                    (C24803 * C3639 + C24798 * C3642 + C24802 * C3464 +
                     C51084 * C3469 + C24801 * C1159 + C51083 * C1166) *
                        C1998) *
                       C50906 * C51022 +
                   ((C26537 + C26538 + C26539) * C2000 -
                    ((C25029 + C25030 + C25031) * C51082 +
                     (C25032 + C25033 + C25034) * C1999) +
                    (C26540 + C26541 + C26542) * C51071 -
                    (C24803 * C3637 + C24798 * C3640 + C24802 * C3461 +
                     C51084 * C3465 + C24801 * C1155 + C51083 * C1160) *
                        C2001 -
                    (C24803 * C3641 + C24798 * C3643 + C24802 * C3466 +
                     C51084 * C3470 + C24801 * C1161 + C51083 * C1167) *
                        C1998) *
                       C50906 * C50758) *
                      C50822) *
                 C50774) /
                (p * q * std::sqrt(p + q));
    d2ee[81] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                      C51084 * C311 + C24803 * C635 + C24798 * C640) *
                         C118 +
                     (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                      C51084 * C319 + C24803 * C641 + C24798 * C650) *
                         C50836) *
                        C50906 * C51022 +
                    ((C24841 + C24842 + C24843) * C118 +
                     (C24844 + C24845 + C24846) * C50836) *
                        C50906 * C50758) *
                       C630 -
                   (((C25029 + C25030 + C25031) * C50836 +
                     (C25032 + C25033 + C25034) * C118) *
                        C50906 * C50758 +
                    ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                      C51084 * C650 + C24801 * C310 + C51083 * C319) *
                         C50836 +
                     (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                      C51084 * C640 + C24801 * C301 + C51083 * C311) *
                         C118) *
                        C50906 * C51022) *
                       C631 +
                   (((C24801 * C635 + C51083 * C640 + C24802 * C753 +
                      C51084 * C761 + C24803 * C3016 + C24798 * C3019) *
                         C118 +
                     (C24801 * C641 + C51083 * C650 + C24802 * C760 +
                      C51084 * C765 + C24803 * C3020 + C24798 * C3025) *
                         C50836) *
                        C50906 * C51022 +
                    ((C25381 + C25382 + C25383) * C118 +
                     (C25384 + C25385 + C25386) * C50836) *
                        C50906 * C50758) *
                       C632) *
                      C51027 +
                  ((((C25034 + C25033 + C25032) * C118 +
                     (C25031 + C25030 + C25029) * C50836) *
                        C50906 * C51022 +
                    ((C25035 + C25036 + C25037) * C118 +
                     (C25038 + C25039 + C25040) * C50836) *
                        C50906 * C50758) *
                       C631 -
                   (((C24847 + C24848 + C24849) * C50836 +
                     (C24850 + C24851 + C24852) * C118) *
                        C50906 * C50758 +
                    ((C24846 + C24845 + C24844) * C50836 +
                     (C24843 + C24842 + C24841) * C118) *
                        C50906 * C51022) *
                       C630 -
                   (((C24803 * C3023 + C24798 * C3027 + C24802 * C756 +
                      C51084 * C763 + C24801 * C645 + C51083 * C652) *
                         C50836 +
                     (C24803 * C3018 + C24798 * C3024 + C24802 * C751 +
                      C51084 * C757 + C24801 * C637 + C51083 * C644) *
                         C118) *
                        C50906 * C50758 +
                    ((C25386 + C25385 + C25384) * C50836 +
                     (C25383 + C25382 + C25381) * C118) *
                        C50906 * C51022) *
                       C632) *
                      C50779)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                     C51084 * C311 + C24803 * C635 + C24798 * C640) *
                        C118 +
                    (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                     C51084 * C319 + C24803 * C641 + C24798 * C650) *
                        C50836) *
                       C50906 * C51022 +
                   ((C24841 + C24842 + C24843) * C118 +
                    (C24844 + C24845 + C24846) * C50836) *
                       C50906 * C50758) *
                      C50806 * C113 -
                  (((C24847 + C24848 + C24849) * C50836 +
                    (C24850 + C24851 + C24852) * C118) *
                       C50906 * C50758 +
                   ((C24846 + C24845 + C24844) * C50836 +
                    (C24843 + C24842 + C24841) * C118) *
                       C50906 * C51022) *
                      C50806 * C114 +
                  (((C24852 + C24851 + C24850) * C118 +
                    (C24849 + C24848 + C24847) * C50836) *
                       C50906 * C51022 +
                   ((C24853 + C24854 + C24855) * C118 +
                    (C24856 + C24857 + C24858) * C50836) *
                       C50906 * C50758) *
                      C50806 * C115 -
                  (((C24803 * C648 + C24798 * C654 + C24802 * C313 +
                     C51084 * C320 + C24801 * C134 + C51083 * C144) *
                        C50836 +
                    (C24803 * C639 + C24798 * C649 + C24802 * C302 +
                     C51084 * C312 + C24801 * C123 + C51083 * C135) *
                        C118) *
                       C50906 * C50758 +
                   ((C24858 + C24857 + C24856) * C50836 +
                    (C24855 + C24854 + C24853) * C118) *
                       C50906 * C51022) *
                      C50806 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                     C51084 * C311 + C24803 * C635 + C24798 * C640) *
                        C997 +
                    (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                     C51084 * C319 + C24803 * C641 + C24798 * C650) *
                        C994 -
                    (C24803 * C868 + C24798 * C880 + C24802 * C864 +
                     C51084 * C872 + C24801 * C460 + C51083 * C466) *
                        C998 -
                    (C24803 * C881 + C24798 * C892 + C24802 * C873 +
                     C51084 * C888 + C24801 * C467 + C51083 * C478) *
                        C995 +
                    (C24801 * C1000 + C51083 * C1005 + C24802 * C1154 +
                     C51084 * C1158 + C24803 * C3460 + C24798 * C3463) *
                        C999 +
                    (C24801 * C1006 + C51083 * C1015 + C24802 * C1159 +
                     C51084 * C1166 + C24803 * C3464 + C24798 * C3469) *
                        C996) *
                       C50906 * C51022 +
                   ((C24841 + C24842 + C24843) * C997 +
                    (C24844 + C24845 + C24846) * C994 -
                    (C25211 + C25212 + C25213) * C998 -
                    (C25214 + C25215 + C25216) * C995 +
                    (C25789 + C25790 + C25791) * C999 +
                    (C25792 + C25793 + C25794) * C996) *
                       C50906 * C50758) *
                      C50806 * C51027 +
                  (((C25213 + C25212 + C25211) * C998 -
                    ((C24846 + C24845 + C24844) * C994 +
                     (C24843 + C24842 + C24841) * C997) +
                    (C25216 + C25215 + C25214) * C995 -
                    (C25791 + C25790 + C25789) * C999 -
                    (C25794 + C25793 + C25792) * C996) *
                       C50906 * C51022 +
                   ((C25217 + C25218 + C25219) * C998 -
                    ((C24847 + C24848 + C24849) * C994 +
                     (C24850 + C24851 + C24852) * C997) +
                    (C25220 + C25221 + C25222) * C995 -
                    (C24803 * C3462 + C24798 * C3467 + C24802 * C1156 +
                     C51084 * C1162 + C24801 * C1002 + C51083 * C1009) *
                        C999 -
                    (C24803 * C3468 + C24798 * C3471 + C24802 * C1163 +
                     C51084 * C1168 + C24801 * C1010 + C51083 * C1017) *
                        C996) *
                       C50906 * C50758) *
                      C50806 * C50779)) /
                    (p * q * std::sqrt(p + q));
    d2ee[82] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                     C51084 * C311 + C24803 * C635 + C24798 * C640) *
                        C118 +
                    (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                     C51084 * C319 + C24803 * C641 + C24798 * C650) *
                        C50836) *
                       C50906 * C51022 +
                   ((C24841 + C24842 + C24843) * C118 +
                    (C24844 + C24845 + C24846) * C50836) *
                       C50906 * C50758) *
                      C745 -
                  (((C25029 + C25030 + C25031) * C50836 +
                    (C25032 + C25033 + C25034) * C118) *
                       C50906 * C50758 +
                   ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                     C51084 * C650 + C24801 * C310 + C51083 * C319) *
                        C50836 +
                    (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                     C51084 * C640 + C24801 * C301 + C51083 * C311) *
                        C118) *
                       C50906 * C51022) *
                      C746 +
                  (((C24801 * C635 + C51083 * C640 + C24802 * C753 +
                     C51084 * C761 + C24803 * C3016 + C24798 * C3019) *
                        C118 +
                    (C24801 * C641 + C51083 * C650 + C24802 * C760 +
                     C51084 * C765 + C24803 * C3020 + C24798 * C3025) *
                        C50836) *
                       C50906 * C51022 +
                   ((C25381 + C25382 + C25383) * C118 +
                    (C25384 + C25385 + C25386) * C50836) *
                       C50906 * C50758) *
                      C747 -
                  (((C24803 * C3146 + C24798 * C3150 + C24802 * C3022 +
                     C51084 * C3026 + C24801 * C758 + C51083 * C764) *
                        C50836 +
                    (C24803 * C3144 + C24798 * C3147 + C24802 * C3017 +
                     C51084 * C3021 + C24801 * C752 + C51083 * C759) *
                        C118) *
                       C50906 * C50758 +
                   ((C24803 * C3148 + C24798 * C3151 + C24802 * C3020 +
                     C51084 * C3025 + C24801 * C760 + C51083 * C765) *
                        C50836 +
                    (C24803 * C3145 + C24798 * C3149 + C24802 * C3016 +
                     C51084 * C3019 + C24801 * C753 + C51083 * C761) *
                        C118) *
                       C50906 * C51022) *
                      C748) *
                 C50774) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                      C51084 * C311 + C24803 * C635 + C24798 * C640) *
                         C118 +
                     (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                      C51084 * C319 + C24803 * C641 + C24798 * C650) *
                         C50836) *
                        C50906 * C51022 +
                    ((C24841 + C24842 + C24843) * C118 +
                     (C24844 + C24845 + C24846) * C50836) *
                        C50906 * C50758) *
                       C51034 -
                   (((C25029 + C25030 + C25031) * C50836 +
                     (C25032 + C25033 + C25034) * C118) *
                        C50906 * C50758 +
                    ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                      C51084 * C650 + C24801 * C310 + C51083 * C319) *
                         C50836 +
                     (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                      C51084 * C640 + C24801 * C301 + C51083 * C311) *
                         C118) *
                        C50906 * C51022) *
                       C50822) *
                      C295 +
                  ((((C25034 + C25033 + C25032) * C118 +
                     (C25031 + C25030 + C25029) * C50836) *
                        C50906 * C51022 +
                    ((C25035 + C25036 + C25037) * C118 +
                     (C25038 + C25039 + C25040) * C50836) *
                        C50906 * C50758) *
                       C50822 -
                   (((C24847 + C24848 + C24849) * C50836 +
                     (C24850 + C24851 + C24852) * C118) *
                        C50906 * C50758 +
                    ((C24846 + C24845 + C24844) * C50836 +
                     (C24843 + C24842 + C24841) * C118) *
                        C50906 * C51022) *
                       C51034) *
                      C296 +
                  ((((C24852 + C24851 + C24850) * C118 +
                     (C24849 + C24848 + C24847) * C50836) *
                        C50906 * C51022 +
                    ((C24853 + C24854 + C24855) * C118 +
                     (C24856 + C24857 + C24858) * C50836) *
                        C50906 * C50758) *
                       C51034 -
                   (((C24803 * C754 + C24798 * C762 + C24802 * C647 +
                      C51084 * C653 + C24801 * C304 + C51083 * C316) *
                         C50836 +
                     (C24803 * C750 + C24798 * C755 + C24802 * C638 +
                      C51084 * C646 + C24801 * C298 + C51083 * C305) *
                         C118) *
                        C50906 * C50758 +
                    ((C25040 + C25039 + C25038) * C50836 +
                     (C25037 + C25036 + C25035) * C118) *
                        C50906 * C51022) *
                       C50822) *
                      C297)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                     C51084 * C311 + C24803 * C635 + C24798 * C640) *
                        C997 +
                    (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                     C51084 * C319 + C24803 * C641 + C24798 * C650) *
                        C994 -
                    (C24803 * C868 + C24798 * C880 + C24802 * C864 +
                     C51084 * C872 + C24801 * C460 + C51083 * C466) *
                        C998 -
                    (C24803 * C881 + C24798 * C892 + C24802 * C873 +
                     C51084 * C888 + C24801 * C467 + C51083 * C478) *
                        C995 +
                    (C24801 * C1000 + C51083 * C1005 + C24802 * C1154 +
                     C51084 * C1158 + C24803 * C3460 + C24798 * C3463) *
                        C999 +
                    (C24801 * C1006 + C51083 * C1015 + C24802 * C1159 +
                     C51084 * C1166 + C24803 * C3464 + C24798 * C3469) *
                        C996) *
                       C50906 * C51022 +
                   ((C24841 + C24842 + C24843) * C997 +
                    (C24844 + C24845 + C24846) * C994 -
                    (C25211 + C25212 + C25213) * C998 -
                    (C25214 + C25215 + C25216) * C995 +
                    (C25789 + C25790 + C25791) * C999 +
                    (C25792 + C25793 + C25794) * C996) *
                       C50906 * C50758) *
                      C51034 +
                  (((C24801 * C864 + C51083 * C872 + C24802 * C868 +
                     C51084 * C880 + C24803 * C3298 + C24798 * C3302) *
                        C998 -
                    ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                      C51084 * C650 + C24801 * C310 + C51083 * C319) *
                         C994 +
                     (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                      C51084 * C640 + C24801 * C301 + C51083 * C311) *
                         C997) +
                    (C24801 * C873 + C51083 * C888 + C24802 * C881 +
                     C51084 * C892 + C24803 * C3303 + C24798 * C3310) *
                        C995 -
                    (C24803 * C3636 + C24798 * C3638 + C24802 * C3460 +
                     C51084 * C3463 + C24801 * C1154 + C51083 * C1158) *
                        C999 -
                    (C24803 * C3639 + C24798 * C3642 + C24802 * C3464 +
                     C51084 * C3469 + C24801 * C1159 + C51083 * C1166) *
                        C996) *
                       C50906 * C51022 +
                   ((C24801 * C865 + C51083 * C874 + C24802 * C869 +
                     C51084 * C882 + C24803 * C3299 + C24798 * C3304) *
                        C998 -
                    ((C25029 + C25030 + C25031) * C994 +
                     (C25032 + C25033 + C25034) * C997) +
                    (C24801 * C875 + C51083 * C889 + C24802 * C883 +
                     C51084 * C893 + C24803 * C3305 + C24798 * C3311) *
                        C995 -
                    (C24803 * C3637 + C24798 * C3640 + C24802 * C3461 +
                     C51084 * C3465 + C24801 * C1155 + C51083 * C1160) *
                        C999 -
                    (C24803 * C3641 + C24798 * C3643 + C24802 * C3466 +
                     C51084 * C3470 + C24801 * C1161 + C51083 * C1167) *
                        C996) *
                       C50906 * C50758) *
                      C50822) *
                 C50774) /
                    (p * q * std::sqrt(p + q));
    d2ee[83] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                     C51084 * C311 + C24803 * C635 + C24798 * C640) *
                        C458 +
                    (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                     C51084 * C319 + C24803 * C641 + C24798 * C650) *
                        C51036 -
                    (C24803 * C868 + C24798 * C880 + C24802 * C864 +
                     C51084 * C872 + C24801 * C460 + C51083 * C466) *
                        C459 -
                    (C24803 * C881 + C24798 * C892 + C24802 * C873 +
                     C51084 * C888 + C24801 * C467 + C51083 * C478) *
                        C50848) *
                       C50906 * C51022 +
                   ((C24841 + C24842 + C24843) * C458 +
                    (C24844 + C24845 + C24846) * C51036 -
                    (C25211 + C25212 + C25213) * C459 -
                    (C25214 + C25215 + C25216) * C50848) *
                       C50906 * C50758) *
                      C630 +
                  (((C24801 * C864 + C51083 * C872 + C24802 * C868 +
                     C51084 * C880 + C24803 * C3298 + C24798 * C3302) *
                        C459 -
                    ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                      C51084 * C650 + C24801 * C310 + C51083 * C319) *
                         C51036 +
                     (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                      C51084 * C640 + C24801 * C301 + C51083 * C311) *
                         C458) +
                    (C24801 * C873 + C51083 * C888 + C24802 * C881 +
                     C51084 * C892 + C24803 * C3303 + C24798 * C3310) *
                        C50848) *
                       C50906 * C51022 +
                   ((C24801 * C865 + C51083 * C874 + C24802 * C869 +
                     C51084 * C882 + C24803 * C3299 + C24798 * C3304) *
                        C459 -
                    ((C25029 + C25030 + C25031) * C51036 +
                     (C25032 + C25033 + C25034) * C458) +
                    (C24801 * C875 + C51083 * C889 + C24802 * C883 +
                     C51084 * C893 + C24803 * C3305 + C24798 * C3311) *
                        C50848) *
                       C50906 * C50758) *
                      C631 +
                  (((C24801 * C635 + C51083 * C640 + C24802 * C753 +
                     C51084 * C761 + C24803 * C3016 + C24798 * C3019) *
                        C458 +
                    (C24801 * C641 + C51083 * C650 + C24802 * C760 +
                     C51084 * C765 + C24803 * C3020 + C24798 * C3025) *
                        C51036 -
                    (C24803 * C3300 + C24798 * C3306 + C24802 * C3298 +
                     C51084 * C3302 + C24801 * C868 + C51083 * C880) *
                        C459 -
                    (C24803 * C3307 + C24798 * C3312 + C24802 * C3303 +
                     C51084 * C3310 + C24801 * C881 + C51083 * C892) *
                        C50848) *
                       C50906 * C51022 +
                   ((C25381 + C25382 + C25383) * C458 +
                    (C25384 + C25385 + C25386) * C51036 -
                    (C24803 * C3301 + C24798 * C3308 + C24802 * C3299 +
                     C51084 * C3304 + C24801 * C869 + C51083 * C882) *
                        C459 -
                    (C24803 * C3309 + C24798 * C3313 + C24802 * C3305 +
                     C51084 * C3311 + C24801 * C883 + C51083 * C893) *
                        C50848) *
                       C50906 * C50758) *
                      C632) *
                 C50774) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                     C51084 * C311 + C24803 * C635 + C24798 * C640) *
                        C458 +
                    (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                     C51084 * C319 + C24803 * C641 + C24798 * C650) *
                        C51036 -
                    (C24803 * C868 + C24798 * C880 + C24802 * C864 +
                     C51084 * C872 + C24801 * C460 + C51083 * C466) *
                        C459 -
                    (C24803 * C881 + C24798 * C892 + C24802 * C873 +
                     C51084 * C888 + C24801 * C467 + C51083 * C478) *
                        C50848) *
                       C50906 * C51022 +
                   ((C24841 + C24842 + C24843) * C458 +
                    (C24844 + C24845 + C24846) * C51036 -
                    (C25211 + C25212 + C25213) * C459 -
                    (C25214 + C25215 + C25216) * C50848) *
                       C50906 * C50758) *
                      C50806 * C295 +
                  (((C25213 + C25212 + C25211) * C459 -
                    ((C24846 + C24845 + C24844) * C51036 +
                     (C24843 + C24842 + C24841) * C458) +
                    (C25216 + C25215 + C25214) * C50848) *
                       C50906 * C51022 +
                   ((C25217 + C25218 + C25219) * C459 -
                    ((C24847 + C24848 + C24849) * C51036 +
                     (C24850 + C24851 + C24852) * C458) +
                    (C25220 + C25221 + C25222) * C50848) *
                       C50906 * C50758) *
                      C50806 * C296 +
                  (((C24852 + C24851 + C24850) * C458 +
                    (C24849 + C24848 + C24847) * C51036 -
                    (C25219 + C25218 + C25217) * C459 -
                    (C25222 + C25221 + C25220) * C50848) *
                       C50906 * C51022 +
                   ((C24853 + C24854 + C24855) * C458 +
                    (C24856 + C24857 + C24858) * C51036 -
                    (C24803 * C871 + C24798 * C886 + C24802 * C867 +
                     C51084 * C878 + C24801 * C463 + C51083 * C472) *
                        C459 -
                    (C24803 * C887 + C24798 * C895 + C24802 * C879 +
                     C51084 * C891 + C24801 * C473 + C51083 * C481) *
                        C50848) *
                       C50906 * C50758) *
                      C50806 * C297)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                    C51084 * C311 + C24803 * C635 + C24798 * C640) *
                       C1240 +
                   (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                    C51084 * C319 + C24803 * C641 + C24798 * C650) *
                       C1236 -
                   (C24803 * C868 + C24798 * C880 + C24802 * C864 +
                    C51084 * C872 + C24801 * C460 + C51083 * C466) *
                       C1241 -
                   (C24803 * C881 + C24798 * C892 + C24802 * C873 +
                    C51084 * C888 + C24801 * C467 + C51083 * C478) *
                       C1237 +
                   (C24801 * C1000 + C51083 * C1005 + C24802 * C1154 +
                    C51084 * C1158 + C24803 * C3460 + C24798 * C3463) *
                       C1242 +
                   (C24801 * C1006 + C51083 * C1015 + C24802 * C1159 +
                    C51084 * C1166 + C24803 * C3464 + C24798 * C3469) *
                       C1238 -
                   (C24803 * C3742 + C24798 * C3746 + C24802 * C3743 +
                    C51084 * C3747 + C24801 * C1244 + C51083 * C1248) *
                       C1243 -
                   (C24803 * C3748 + C24798 * C3754 + C24802 * C3749 +
                    C51084 * C3755 + C24801 * C1249 + C51083 * C1256) *
                       C1239) *
                      C50906 * C51022 +
                  ((C24841 + C24842 + C24843) * C1240 +
                   (C24844 + C24845 + C24846) * C1236 -
                   (C25211 + C25212 + C25213) * C1241 -
                   (C25214 + C25215 + C25216) * C1237 +
                   (C25789 + C25790 + C25791) * C1242 +
                   (C25792 + C25793 + C25794) * C1238 -
                   (C24803 * C3744 + C24798 * C3750 + C24802 * C3745 +
                    C51084 * C3751 + C24801 * C1245 + C51083 * C1250) *
                       C1243 -
                   (C24803 * C3752 + C24798 * C3756 + C24802 * C3753 +
                    C51084 * C3757 + C24801 * C1251 + C51083 * C1257) *
                       C1239) *
                      C50906 * C50758) *
                 C50806 * C50774) /
                    (p * q * std::sqrt(p + q));
    d2ee[84] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                     C51084 * C311 + C24803 * C635 + C24798 * C640) *
                        C1730 +
                    (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                     C51084 * C319 + C24803 * C641 + C24798 * C650) *
                        C1728 -
                    (C24803 * C868 + C24798 * C880 + C24802 * C864 +
                     C51084 * C872 + C24801 * C460 + C51083 * C466) *
                        C1731 -
                    (C24803 * C881 + C24798 * C892 + C24802 * C873 +
                     C51084 * C888 + C24801 * C467 + C51083 * C478) *
                        C50848) *
                       C50906 * C51022 +
                   ((C24841 + C24842 + C24843) * C1730 +
                    (C24844 + C24845 + C24846) * C1728 -
                    (C25211 + C25212 + C25213) * C1731 -
                    (C25214 + C25215 + C25216) * C50848) *
                       C50906 * C50758) *
                      C50806 * C51080 +
                  (((C25213 + C25212 + C25211) * C1731 -
                    ((C24846 + C24845 + C24844) * C1728 +
                     (C24843 + C24842 + C24841) * C1730) +
                    (C25216 + C25215 + C25214) * C50848) *
                       C50906 * C51022 +
                   ((C25217 + C25218 + C25219) * C1731 -
                    ((C24847 + C24848 + C24849) * C1728 +
                     (C24850 + C24851 + C24852) * C1730) +
                    (C25220 + C25221 + C25222) * C50848) *
                       C50906 * C50758) *
                      C50806 * C51065 +
                  (((C24852 + C24851 + C24850) * C1730 +
                    (C24849 + C24848 + C24847) * C1728 -
                    (C25219 + C25218 + C25217) * C1731 -
                    (C25222 + C25221 + C25220) * C50848) *
                       C50906 * C51022 +
                   ((C24853 + C24854 + C24855) * C1730 +
                    (C24856 + C24857 + C24858) * C1728 -
                    (C24803 * C871 + C24798 * C886 + C24802 * C867 +
                     C51084 * C878 + C24801 * C463 + C51083 * C472) *
                        C1731 -
                    (C24803 * C887 + C24798 * C895 + C24802 * C879 +
                     C51084 * C891 + C24801 * C473 + C51083 * C481) *
                        C50848) *
                       C50906 * C50758) *
                      C50806 * C1362)) /
                (p * q * std::sqrt(p + q));
    d2ee[85] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                      C51084 * C311 + C24803 * C635 + C24798 * C640) *
                         C1730 +
                     (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                      C51084 * C319 + C24803 * C641 + C24798 * C650) *
                         C1728 -
                     (C24803 * C868 + C24798 * C880 + C24802 * C864 +
                      C51084 * C872 + C24801 * C460 + C51083 * C466) *
                         C1731 -
                     (C24803 * C881 + C24798 * C892 + C24802 * C873 +
                      C51084 * C888 + C24801 * C467 + C51083 * C478) *
                         C50848) *
                        C50906 * C51022 +
                    ((C24841 + C24842 + C24843) * C1730 +
                     (C24844 + C24845 + C24846) * C1728 -
                     (C25211 + C25212 + C25213) * C1731 -
                     (C25214 + C25215 + C25216) * C50848) *
                        C50906 * C50758) *
                       C51034 +
                   (((C24801 * C864 + C51083 * C872 + C24802 * C868 +
                      C51084 * C880 + C24803 * C3298 + C24798 * C3302) *
                         C1731 -
                     ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                       C51084 * C650 + C24801 * C310 + C51083 * C319) *
                          C1728 +
                      (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                       C51084 * C640 + C24801 * C301 + C51083 * C311) *
                          C1730) +
                     (C24801 * C873 + C51083 * C888 + C24802 * C881 +
                      C51084 * C892 + C24803 * C3303 + C24798 * C3310) *
                         C50848) *
                        C50906 * C51022 +
                    ((C26537 + C26538 + C26539) * C1731 -
                     ((C25029 + C25030 + C25031) * C1728 +
                      (C25032 + C25033 + C25034) * C1730) +
                     (C26540 + C26541 + C26542) * C50848) *
                        C50906 * C50758) *
                       C50822) *
                      C1464 +
                  ((((C25213 + C25212 + C25211) * C1731 -
                     ((C24846 + C24845 + C24844) * C1728 +
                      (C24843 + C24842 + C24841) * C1730) +
                     (C25216 + C25215 + C25214) * C50848) *
                        C50906 * C51022 +
                    ((C25217 + C25218 + C25219) * C1731 -
                     ((C24847 + C24848 + C24849) * C1728 +
                      (C24850 + C24851 + C24852) * C1730) +
                     (C25220 + C25221 + C25222) * C50848) *
                        C50906 * C50758) *
                       C51034 +
                   (((C25034 + C25033 + C25032) * C1730 +
                     (C25031 + C25030 + C25029) * C1728 -
                     (C26539 + C26538 + C26537) * C1731 -
                     (C26542 + C26541 + C26540) * C50848) *
                        C50906 * C51022 +
                    ((C25035 + C25036 + C25037) * C1730 +
                     (C25038 + C25039 + C25040) * C1728 -
                     (C24803 * C4244 + C24798 * C4245 + C24802 * C870 +
                      C51084 * C884 + C24801 * C866 + C51083 * C876) *
                         C1731 -
                     (C24803 * C4246 + C24798 * C4247 + C24802 * C885 +
                      C51084 * C894 + C24801 * C877 + C51083 * C890) *
                         C50848) *
                        C50906 * C50758) *
                       C50822) *
                      C50779)) /
                (p * q * std::sqrt(p + q));
    d2ee[86] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                     C51084 * C311 + C24803 * C635 + C24798 * C640) *
                        C1999 +
                    (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                     C51084 * C319 + C24803 * C641 + C24798 * C650) *
                        C51082 -
                    (C24803 * C868 + C24798 * C880 + C24802 * C864 +
                     C51084 * C872 + C24801 * C460 + C51083 * C466) *
                        C2000 -
                    (C24803 * C881 + C24798 * C892 + C24802 * C873 +
                     C51084 * C888 + C24801 * C467 + C51083 * C478) *
                        C51071 +
                    (C24801 * C1000 + C51083 * C1005 + C24802 * C1154 +
                     C51084 * C1158 + C24803 * C3460 + C24798 * C3463) *
                        C2001 +
                    (C24801 * C1006 + C51083 * C1015 + C24802 * C1159 +
                     C51084 * C1166 + C24803 * C3464 + C24798 * C3469) *
                        C1998) *
                       C50906 * C51022 +
                   ((C24841 + C24842 + C24843) * C1999 +
                    (C24844 + C24845 + C24846) * C51082 -
                    (C25211 + C25212 + C25213) * C2000 -
                    (C25214 + C25215 + C25216) * C51071 +
                    (C25789 + C25790 + C25791) * C2001 +
                    (C25792 + C25793 + C25794) * C1998) *
                       C50906 * C50758) *
                      C50806 * C1464 +
                  (((C25213 + C25212 + C25211) * C2000 -
                    ((C24846 + C24845 + C24844) * C51082 +
                     (C24843 + C24842 + C24841) * C1999) +
                    (C25216 + C25215 + C25214) * C51071 -
                    (C25791 + C25790 + C25789) * C2001 -
                    (C25794 + C25793 + C25792) * C1998) *
                       C50906 * C51022 +
                   ((C25217 + C25218 + C25219) * C2000 -
                    ((C24847 + C24848 + C24849) * C51082 +
                     (C24850 + C24851 + C24852) * C1999) +
                    (C25220 + C25221 + C25222) * C51071 -
                    (C24803 * C3462 + C24798 * C3467 + C24802 * C1156 +
                     C51084 * C1162 + C24801 * C1002 + C51083 * C1009) *
                        C2001 -
                    (C24803 * C3468 + C24798 * C3471 + C24802 * C1163 +
                     C51084 * C1168 + C24801 * C1010 + C51083 * C1017) *
                        C1998) *
                       C50906 * C50758) *
                      C50806 * C50779)) /
                (p * q * std::sqrt(p + q));
    d2ee[87] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                     C51084 * C311 + C24803 * C635 + C24798 * C640) *
                        C118 +
                    (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                     C51084 * C319 + C24803 * C641 + C24798 * C650) *
                        C50836) *
                       C50906 * C51022 +
                   ((C24841 + C24842 + C24843) * C118 +
                    (C24844 + C24845 + C24846) * C50836) *
                       C50906 * C50758) *
                      C50806 * C113 -
                  (((C24847 + C24848 + C24849) * C50836 +
                    (C24850 + C24851 + C24852) * C118) *
                       C50906 * C50758 +
                   ((C24846 + C24845 + C24844) * C50836 +
                    (C24843 + C24842 + C24841) * C118) *
                       C50906 * C51022) *
                      C50806 * C114 +
                  (((C24852 + C24851 + C24850) * C118 +
                    (C24849 + C24848 + C24847) * C50836) *
                       C50906 * C51022 +
                   ((C24853 + C24854 + C24855) * C118 +
                    (C24856 + C24857 + C24858) * C50836) *
                       C50906 * C50758) *
                      C50806 * C115 -
                  (((C24803 * C648 + C24798 * C654 + C24802 * C313 +
                     C51084 * C320 + C24801 * C134 + C51083 * C144) *
                        C50836 +
                    (C24803 * C639 + C24798 * C649 + C24802 * C302 +
                     C51084 * C312 + C24801 * C123 + C51083 * C135) *
                        C118) *
                       C50906 * C50758 +
                   ((C24858 + C24857 + C24856) * C50836 +
                    (C24855 + C24854 + C24853) * C118) *
                       C50906 * C51022) *
                      C50806 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                      C51084 * C311 + C24803 * C635 + C24798 * C640) *
                         C118 +
                     (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                      C51084 * C319 + C24803 * C641 + C24798 * C650) *
                         C50836) *
                        C50906 * C51022 +
                    ((C24841 + C24842 + C24843) * C118 +
                     (C24844 + C24845 + C24846) * C50836) *
                        C50906 * C50758) *
                       C630 -
                   (((C25029 + C25030 + C25031) * C50836 +
                     (C25032 + C25033 + C25034) * C118) *
                        C50906 * C50758 +
                    ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                      C51084 * C650 + C24801 * C310 + C51083 * C319) *
                         C50836 +
                     (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                      C51084 * C640 + C24801 * C301 + C51083 * C311) *
                         C118) *
                        C50906 * C51022) *
                       C631 +
                   (((C24801 * C635 + C51083 * C640 + C24802 * C753 +
                      C51084 * C761 + C24803 * C3016 + C24798 * C3019) *
                         C118 +
                     (C24801 * C641 + C51083 * C650 + C24802 * C760 +
                      C51084 * C765 + C24803 * C3020 + C24798 * C3025) *
                         C50836) *
                        C50906 * C51022 +
                    ((C25381 + C25382 + C25383) * C118 +
                     (C25384 + C25385 + C25386) * C50836) *
                        C50906 * C50758) *
                       C632) *
                      C51027 +
                  ((((C25034 + C25033 + C25032) * C118 +
                     (C25031 + C25030 + C25029) * C50836) *
                        C50906 * C51022 +
                    ((C25035 + C25036 + C25037) * C118 +
                     (C25038 + C25039 + C25040) * C50836) *
                        C50906 * C50758) *
                       C631 -
                   (((C24847 + C24848 + C24849) * C50836 +
                     (C24850 + C24851 + C24852) * C118) *
                        C50906 * C50758 +
                    ((C24846 + C24845 + C24844) * C50836 +
                     (C24843 + C24842 + C24841) * C118) *
                        C50906 * C51022) *
                       C630 -
                   (((C24803 * C3023 + C24798 * C3027 + C24802 * C756 +
                      C51084 * C763 + C24801 * C645 + C51083 * C652) *
                         C50836 +
                     (C24803 * C3018 + C24798 * C3024 + C24802 * C751 +
                      C51084 * C757 + C24801 * C637 + C51083 * C644) *
                         C118) *
                        C50906 * C50758 +
                    ((C25386 + C25385 + C25384) * C50836 +
                     (C25383 + C25382 + C25381) * C118) *
                        C50906 * C51022) *
                       C632) *
                      C50779)) /
                    (p * q * std::sqrt(p + q));
    d2ee[88] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                      C51084 * C311 + C24803 * C635 + C24798 * C640) *
                         C118 +
                     (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                      C51084 * C319 + C24803 * C641 + C24798 * C650) *
                         C50836) *
                        C50906 * C51022 +
                    ((C24841 + C24842 + C24843) * C118 +
                     (C24844 + C24845 + C24846) * C50836) *
                        C50906 * C50758) *
                       C51034 -
                   (((C25029 + C25030 + C25031) * C50836 +
                     (C25032 + C25033 + C25034) * C118) *
                        C50906 * C50758 +
                    ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                      C51084 * C650 + C24801 * C310 + C51083 * C319) *
                         C50836 +
                     (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                      C51084 * C640 + C24801 * C301 + C51083 * C311) *
                         C118) *
                        C50906 * C51022) *
                       C50822) *
                      C295 +
                  ((((C25034 + C25033 + C25032) * C118 +
                     (C25031 + C25030 + C25029) * C50836) *
                        C50906 * C51022 +
                    ((C25035 + C25036 + C25037) * C118 +
                     (C25038 + C25039 + C25040) * C50836) *
                        C50906 * C50758) *
                       C50822 -
                   (((C24847 + C24848 + C24849) * C50836 +
                     (C24850 + C24851 + C24852) * C118) *
                        C50906 * C50758 +
                    ((C24846 + C24845 + C24844) * C50836 +
                     (C24843 + C24842 + C24841) * C118) *
                        C50906 * C51022) *
                       C51034) *
                      C296 +
                  ((((C24852 + C24851 + C24850) * C118 +
                     (C24849 + C24848 + C24847) * C50836) *
                        C50906 * C51022 +
                    ((C24853 + C24854 + C24855) * C118 +
                     (C24856 + C24857 + C24858) * C50836) *
                        C50906 * C50758) *
                       C51034 -
                   (((C24803 * C754 + C24798 * C762 + C24802 * C647 +
                      C51084 * C653 + C24801 * C304 + C51083 * C316) *
                         C50836 +
                     (C24803 * C750 + C24798 * C755 + C24802 * C638 +
                      C51084 * C646 + C24801 * C298 + C51083 * C305) *
                         C118) *
                        C50906 * C50758 +
                    ((C25040 + C25039 + C25038) * C50836 +
                     (C25037 + C25036 + C25035) * C118) *
                        C50906 * C51022) *
                       C50822) *
                      C297)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                     C51084 * C311 + C24803 * C635 + C24798 * C640) *
                        C118 +
                    (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                     C51084 * C319 + C24803 * C641 + C24798 * C650) *
                        C50836) *
                       C50906 * C51022 +
                   ((C24841 + C24842 + C24843) * C118 +
                    (C24844 + C24845 + C24846) * C50836) *
                       C50906 * C50758) *
                      C745 -
                  (((C25029 + C25030 + C25031) * C50836 +
                    (C25032 + C25033 + C25034) * C118) *
                       C50906 * C50758 +
                   ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                     C51084 * C650 + C24801 * C310 + C51083 * C319) *
                        C50836 +
                    (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                     C51084 * C640 + C24801 * C301 + C51083 * C311) *
                        C118) *
                       C50906 * C51022) *
                      C746 +
                  (((C24801 * C635 + C51083 * C640 + C24802 * C753 +
                     C51084 * C761 + C24803 * C3016 + C24798 * C3019) *
                        C118 +
                    (C24801 * C641 + C51083 * C650 + C24802 * C760 +
                     C51084 * C765 + C24803 * C3020 + C24798 * C3025) *
                        C50836) *
                       C50906 * C51022 +
                   ((C25381 + C25382 + C25383) * C118 +
                    (C25384 + C25385 + C25386) * C50836) *
                       C50906 * C50758) *
                      C747 -
                  (((C24803 * C3146 + C24798 * C3150 + C24802 * C3022 +
                     C51084 * C3026 + C24801 * C758 + C51083 * C764) *
                        C50836 +
                    (C24803 * C3144 + C24798 * C3147 + C24802 * C3017 +
                     C51084 * C3021 + C24801 * C752 + C51083 * C759) *
                        C118) *
                       C50906 * C50758 +
                   ((C24803 * C3148 + C24798 * C3151 + C24802 * C3020 +
                     C51084 * C3025 + C24801 * C760 + C51083 * C765) *
                        C50836 +
                    (C24803 * C3145 + C24798 * C3149 + C24802 * C3016 +
                     C51084 * C3019 + C24801 * C753 + C51083 * C761) *
                        C118) *
                       C50906 * C51022) *
                      C748) *
                 C50774) /
                    (p * q * std::sqrt(p + q));
    d2ee[89] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                     C51084 * C311 + C24803 * C635 + C24798 * C640) *
                        C458 +
                    (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                     C51084 * C319 + C24803 * C641 + C24798 * C650) *
                        C51036 -
                    (C24803 * C868 + C24798 * C880 + C24802 * C864 +
                     C51084 * C872 + C24801 * C460 + C51083 * C466) *
                        C459 -
                    (C24803 * C881 + C24798 * C892 + C24802 * C873 +
                     C51084 * C888 + C24801 * C467 + C51083 * C478) *
                        C50848) *
                       C50906 * C51022 +
                   ((C24841 + C24842 + C24843) * C458 +
                    (C24844 + C24845 + C24846) * C51036 -
                    (C25211 + C25212 + C25213) * C459 -
                    (C25214 + C25215 + C25216) * C50848) *
                       C50906 * C50758) *
                      C50806 * C295 +
                  (((C25213 + C25212 + C25211) * C459 -
                    ((C24846 + C24845 + C24844) * C51036 +
                     (C24843 + C24842 + C24841) * C458) +
                    (C25216 + C25215 + C25214) * C50848) *
                       C50906 * C51022 +
                   ((C25217 + C25218 + C25219) * C459 -
                    ((C24847 + C24848 + C24849) * C51036 +
                     (C24850 + C24851 + C24852) * C458) +
                    (C25220 + C25221 + C25222) * C50848) *
                       C50906 * C50758) *
                      C50806 * C296 +
                  (((C24852 + C24851 + C24850) * C458 +
                    (C24849 + C24848 + C24847) * C51036 -
                    (C25219 + C25218 + C25217) * C459 -
                    (C25222 + C25221 + C25220) * C50848) *
                       C50906 * C51022 +
                   ((C24853 + C24854 + C24855) * C458 +
                    (C24856 + C24857 + C24858) * C51036 -
                    (C24803 * C871 + C24798 * C886 + C24802 * C867 +
                     C51084 * C878 + C24801 * C463 + C51083 * C472) *
                        C459 -
                    (C24803 * C887 + C24798 * C895 + C24802 * C879 +
                     C51084 * C891 + C24801 * C473 + C51083 * C481) *
                        C50848) *
                       C50906 * C50758) *
                      C50806 * C297)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                     C51084 * C311 + C24803 * C635 + C24798 * C640) *
                        C458 +
                    (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                     C51084 * C319 + C24803 * C641 + C24798 * C650) *
                        C51036 -
                    (C24803 * C868 + C24798 * C880 + C24802 * C864 +
                     C51084 * C872 + C24801 * C460 + C51083 * C466) *
                        C459 -
                    (C24803 * C881 + C24798 * C892 + C24802 * C873 +
                     C51084 * C888 + C24801 * C467 + C51083 * C478) *
                        C50848) *
                       C50906 * C51022 +
                   ((C24841 + C24842 + C24843) * C458 +
                    (C24844 + C24845 + C24846) * C51036 -
                    (C25211 + C25212 + C25213) * C459 -
                    (C25214 + C25215 + C25216) * C50848) *
                       C50906 * C50758) *
                      C630 +
                  (((C24801 * C864 + C51083 * C872 + C24802 * C868 +
                     C51084 * C880 + C24803 * C3298 + C24798 * C3302) *
                        C459 -
                    ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                      C51084 * C650 + C24801 * C310 + C51083 * C319) *
                         C51036 +
                     (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                      C51084 * C640 + C24801 * C301 + C51083 * C311) *
                         C458) +
                    (C24801 * C873 + C51083 * C888 + C24802 * C881 +
                     C51084 * C892 + C24803 * C3303 + C24798 * C3310) *
                        C50848) *
                       C50906 * C51022 +
                   ((C24801 * C865 + C51083 * C874 + C24802 * C869 +
                     C51084 * C882 + C24803 * C3299 + C24798 * C3304) *
                        C459 -
                    ((C25029 + C25030 + C25031) * C51036 +
                     (C25032 + C25033 + C25034) * C458) +
                    (C24801 * C875 + C51083 * C889 + C24802 * C883 +
                     C51084 * C893 + C24803 * C3305 + C24798 * C3311) *
                        C50848) *
                       C50906 * C50758) *
                      C631 +
                  (((C24801 * C635 + C51083 * C640 + C24802 * C753 +
                     C51084 * C761 + C24803 * C3016 + C24798 * C3019) *
                        C458 +
                    (C24801 * C641 + C51083 * C650 + C24802 * C760 +
                     C51084 * C765 + C24803 * C3020 + C24798 * C3025) *
                        C51036 -
                    (C24803 * C3300 + C24798 * C3306 + C24802 * C3298 +
                     C51084 * C3302 + C24801 * C868 + C51083 * C880) *
                        C459 -
                    (C24803 * C3307 + C24798 * C3312 + C24802 * C3303 +
                     C51084 * C3310 + C24801 * C881 + C51083 * C892) *
                        C50848) *
                       C50906 * C51022 +
                   ((C25381 + C25382 + C25383) * C458 +
                    (C25384 + C25385 + C25386) * C51036 -
                    (C24803 * C3301 + C24798 * C3308 + C24802 * C3299 +
                     C51084 * C3304 + C24801 * C869 + C51083 * C882) *
                        C459 -
                    (C24803 * C3309 + C24798 * C3313 + C24802 * C3305 +
                     C51084 * C3311 + C24801 * C883 + C51083 * C893) *
                        C50848) *
                       C50906 * C50758) *
                      C632) *
                 C50774) /
                    (p * q * std::sqrt(p + q));
    d2ee[90] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                      C51084 * C311 + C24803 * C635 + C24798 * C640) *
                         C118 +
                     (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                      C51084 * C319 + C24803 * C641 + C24798 * C650) *
                         C50836) *
                        C51051 +
                    ((C31435 + C31434 + C31433) * C118 +
                     (C31438 + C31437 + C31436) * C50836) *
                        C50970) *
                       C50753 * C1358 -
                   (((C31858 + C31857 + C31856) * C50836 +
                     (C31855 + C31854 + C31853) * C118) *
                        C50970 +
                    ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                      C51084 * C650 + C24801 * C310 + C51083 * C319) *
                         C50836 +
                     (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                      C51084 * C640 + C24801 * C301 + C51083 * C311) *
                         C118) *
                        C51051) *
                       C50753 * C50822) *
                      C51080 +
                  ((((C25034 + C25033 + C25032) * C118 +
                     (C25031 + C25030 + C25029) * C50836) *
                        C51051 +
                    ((C26537 + C26538 + C26539) * C118 +
                     (C26540 + C26541 + C26542) * C50836) *
                        C50970) *
                       C50753 * C50822 -
                   (((C25214 + C25215 + C25216) * C50836 +
                     (C25211 + C25212 + C25213) * C118) *
                        C50970 +
                    ((C24846 + C24845 + C24844) * C50836 +
                     (C24843 + C24842 + C24841) * C118) *
                        C51051) *
                       C50753 * C1358) *
                      C51065 +
                  ((((C24852 + C24851 + C24850) * C118 +
                     (C24849 + C24848 + C24847) * C50836) *
                        C51051 +
                    ((C25217 + C25218 + C25219) * C118 +
                     (C25220 + C25221 + C25222) * C50836) *
                        C50970) *
                       C50753 * C1358 -
                   (((C24803 * C4246 + C24798 * C4247 + C24802 * C885 +
                      C51084 * C894 + C24801 * C877 + C51083 * C890) *
                         C50836 +
                     (C24803 * C4244 + C24798 * C4245 + C24802 * C870 +
                      C51084 * C884 + C24801 * C866 + C51083 * C876) *
                         C118) *
                        C50970 +
                    ((C25040 + C25039 + C25038) * C50836 +
                     (C25037 + C25036 + C25035) * C118) *
                        C51051) *
                       C50753 * C50822) *
                      C1362)) /
                (p * q * std::sqrt(p + q));
    d2ee[91] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                      C51084 * C311 + C24803 * C635 + C24798 * C640) *
                         C118 +
                     (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                      C51084 * C319 + C24803 * C641 + C24798 * C650) *
                         C50836) *
                        C51051 +
                    ((C31435 + C31434 + C31433) * C118 +
                     (C31438 + C31437 + C31436) * C50836) *
                        C50970) *
                       C50753 * C51081 -
                   (((C31858 + C31857 + C31856) * C50836 +
                     (C31855 + C31854 + C31853) * C118) *
                        C50970 +
                    ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                      C51084 * C650 + C24801 * C310 + C51083 * C319) *
                         C50836 +
                     (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                      C51084 * C640 + C24801 * C301 + C51083 * C311) *
                         C118) *
                        C51051) *
                       C50753 * C51068 +
                   (((C24801 * C635 + C51083 * C640 + C24802 * C753 +
                      C51084 * C761 + C24803 * C3016 + C24798 * C3019) *
                         C118 +
                     (C24801 * C641 + C51083 * C650 + C24802 * C760 +
                      C51084 * C765 + C24803 * C3020 + C24798 * C3025) *
                         C50836) *
                        C51051 +
                    ((C31861 + C31860 + C31859) * C118 +
                     (C31864 + C31863 + C31862) * C50836) *
                        C50970) *
                       C50753 * C1463) *
                      C1464 +
                  ((((C25034 + C25033 + C25032) * C118 +
                     (C25031 + C25030 + C25029) * C50836) *
                        C51051 +
                    ((C26537 + C26538 + C26539) * C118 +
                     (C26540 + C26541 + C26542) * C50836) *
                        C50970) *
                       C50753 * C51068 -
                   (((C25214 + C25215 + C25216) * C50836 +
                     (C25211 + C25212 + C25213) * C118) *
                        C50970 +
                    ((C24846 + C24845 + C24844) * C50836 +
                     (C24843 + C24842 + C24841) * C118) *
                        C51051) *
                       C50753 * C51081 -
                   (((C24803 * C3309 + C24798 * C3313 + C24802 * C3305 +
                      C51084 * C3311 + C24801 * C883 + C51083 * C893) *
                         C50836 +
                     (C24803 * C3301 + C24798 * C3308 + C24802 * C3299 +
                      C51084 * C3304 + C24801 * C869 + C51083 * C882) *
                         C118) *
                        C50970 +
                    ((C25386 + C25385 + C25384) * C50836 +
                     (C25383 + C25382 + C25381) * C118) *
                        C51051) *
                       C50753 * C1463) *
                      C50779)) /
                (p * q * std::sqrt(p + q));
    d2ee[92] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                      C51084 * C311 + C24803 * C635 + C24798 * C640) *
                         C458 +
                     (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                      C51084 * C319 + C24803 * C641 + C24798 * C650) *
                         C51036 -
                     (C31433 + C31434 + C31435) * C459 -
                     (C31436 + C31437 + C31438) * C50848) *
                        C51051 +
                    ((C31435 + C31434 + C31433) * C458 +
                     (C31438 + C31437 + C31436) * C51036 -
                     (C32025 + C32024 + C32023) * C459 -
                     (C32028 + C32027 + C32026) * C50848) *
                        C50970) *
                       C50753 * C1358 +
                   (((C31853 + C31854 + C31855) * C459 -
                     ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                       C51084 * C650 + C24801 * C310 + C51083 * C319) *
                          C51036 +
                      (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                       C51084 * C640 + C24801 * C301 + C51083 * C311) *
                          C458) +
                     (C31856 + C31857 + C31858) * C50848) *
                        C51051 +
                    ((C32189 + C32188 + C32187) * C459 -
                     ((C31858 + C31857 + C31856) * C51036 +
                      (C31855 + C31854 + C31853) * C458) +
                     (C32192 + C32191 + C32190) * C50848) *
                        C50970) *
                       C50753 * C50822) *
                      C1464 +
                  ((((C25213 + C25212 + C25211) * C459 -
                     ((C24846 + C24845 + C24844) * C51036 +
                      (C24843 + C24842 + C24841) * C458) +
                     (C25216 + C25215 + C25214) * C50848) *
                        C51051 +
                    ((C25789 + C25790 + C25791) * C459 -
                     ((C25214 + C25215 + C25216) * C51036 +
                      (C25211 + C25212 + C25213) * C458) +
                     (C25792 + C25793 + C25794) * C50848) *
                        C50970) *
                       C50753 * C1358 +
                   (((C25034 + C25033 + C25032) * C458 +
                     (C25031 + C25030 + C25029) * C51036 -
                     (C26539 + C26538 + C26537) * C459 -
                     (C26542 + C26541 + C26540) * C50848) *
                        C51051 +
                    ((C26537 + C26538 + C26539) * C458 +
                     (C26540 + C26541 + C26542) * C51036 -
                     (C24803 * C3637 + C24798 * C3640 + C24802 * C3461 +
                      C51084 * C3465 + C24801 * C1155 + C51083 * C1160) *
                         C459 -
                     (C24803 * C3641 + C24798 * C3643 + C24802 * C3466 +
                      C51084 * C3470 + C24801 * C1161 + C51083 * C1167) *
                         C50848) *
                        C50970) *
                       C50753 * C50822) *
                      C50779)) /
                (p * q * std::sqrt(p + q));
    d2ee[93] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                      C51084 * C311 + C24803 * C635 + C24798 * C640) *
                         C1730 +
                     (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                      C51084 * C319 + C24803 * C641 + C24798 * C650) *
                         C1728 -
                     (C31433 + C31434 + C31435) * C1731 -
                     (C31436 + C31437 + C31438) * C50848) *
                        C51051 +
                    ((C31435 + C31434 + C31433) * C1730 +
                     (C31438 + C31437 + C31436) * C1728 -
                     (C32025 + C32024 + C32023) * C1731 -
                     (C32028 + C32027 + C32026) * C50848) *
                        C50970) *
                       C50753 * C1358 +
                   (((C31853 + C31854 + C31855) * C1731 -
                     ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                       C51084 * C650 + C24801 * C310 + C51083 * C319) *
                          C1728 +
                      (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                       C51084 * C640 + C24801 * C301 + C51083 * C311) *
                          C1730) +
                     (C31856 + C31857 + C31858) * C50848) *
                        C51051 +
                    ((C32189 + C32188 + C32187) * C1731 -
                     ((C31858 + C31857 + C31856) * C1728 +
                      (C31855 + C31854 + C31853) * C1730) +
                     (C32192 + C32191 + C32190) * C50848) *
                        C50970) *
                       C50753 * C50822) *
                      C51027 +
                  ((((C25213 + C25212 + C25211) * C1731 -
                     ((C24846 + C24845 + C24844) * C1728 +
                      (C24843 + C24842 + C24841) * C1730) +
                     (C25216 + C25215 + C25214) * C50848) *
                        C51051 +
                    ((C25789 + C25790 + C25791) * C1731 -
                     ((C25214 + C25215 + C25216) * C1728 +
                      (C25211 + C25212 + C25213) * C1730) +
                     (C25792 + C25793 + C25794) * C50848) *
                        C50970) *
                       C50753 * C1358 +
                   (((C25034 + C25033 + C25032) * C1730 +
                     (C25031 + C25030 + C25029) * C1728 -
                     (C26539 + C26538 + C26537) * C1731 -
                     (C26542 + C26541 + C26540) * C50848) *
                        C51051 +
                    ((C26537 + C26538 + C26539) * C1730 +
                     (C26540 + C26541 + C26542) * C1728 -
                     (C24803 * C3637 + C24798 * C3640 + C24802 * C3461 +
                      C51084 * C3465 + C24801 * C1155 + C51083 * C1160) *
                         C1731 -
                     (C24803 * C3641 + C24798 * C3643 + C24802 * C3466 +
                      C51084 * C3470 + C24801 * C1161 + C51083 * C1167) *
                         C50848) *
                        C50970) *
                       C50753 * C50822) *
                      C50779)) /
                (p * q * std::sqrt(p + q));
    d2ee[94] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                     C51084 * C311 + C24803 * C635 + C24798 * C640) *
                        C1730 +
                    (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                     C51084 * C319 + C24803 * C641 + C24798 * C650) *
                        C1728 -
                    (C31433 + C31434 + C31435) * C1731 -
                    (C31436 + C31437 + C31438) * C50848) *
                       C51051 +
                   ((C31435 + C31434 + C31433) * C1730 +
                    (C31438 + C31437 + C31436) * C1728 -
                    (C32025 + C32024 + C32023) * C1731 -
                    (C32028 + C32027 + C32026) * C50848) *
                       C50970) *
                      C50753 * C51081 +
                  (((C31853 + C31854 + C31855) * C1731 -
                    ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                      C51084 * C650 + C24801 * C310 + C51083 * C319) *
                         C1728 +
                     (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                      C51084 * C640 + C24801 * C301 + C51083 * C311) *
                         C1730) +
                    (C31856 + C31857 + C31858) * C50848) *
                       C51051 +
                   ((C32189 + C32188 + C32187) * C1731 -
                    ((C31858 + C31857 + C31856) * C1728 +
                     (C31855 + C31854 + C31853) * C1730) +
                    (C32192 + C32191 + C32190) * C50848) *
                       C50970) *
                      C50753 * C51068 +
                  (((C24801 * C635 + C51083 * C640 + C24802 * C753 +
                     C51084 * C761 + C24803 * C3016 + C24798 * C3019) *
                        C1730 +
                    (C24801 * C641 + C51083 * C650 + C24802 * C760 +
                     C51084 * C765 + C24803 * C3020 + C24798 * C3025) *
                        C1728 -
                    (C31859 + C31860 + C31861) * C1731 -
                    (C31862 + C31863 + C31864) * C50848) *
                       C51051 +
                   ((C31861 + C31860 + C31859) * C1730 +
                    (C31864 + C31863 + C31862) * C1728 -
                    (C24803 * C20870 + C24798 * C20871 + C24802 * C3636 +
                     C51084 * C3638 + C24801 * C3460 + C51083 * C3463) *
                        C1731 -
                    (C24803 * C20872 + C24798 * C20873 + C24802 * C3639 +
                     C51084 * C3642 + C24801 * C3464 + C51083 * C3469) *
                        C50848) *
                       C50970) *
                      C50753 * C1463) *
                 C50774) /
                (p * q * std::sqrt(p + q));
    d2ee[95] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                     C51084 * C311 + C24803 * C635 + C24798 * C640) *
                        C1999 +
                    (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                     C51084 * C319 + C24803 * C641 + C24798 * C650) *
                        C51082 -
                    (C31433 + C31434 + C31435) * C2000 -
                    (C31436 + C31437 + C31438) * C51071 +
                    (C32023 + C32024 + C32025) * C2001 +
                    (C32026 + C32027 + C32028) * C1998) *
                       C51051 +
                   ((C31435 + C31434 + C31433) * C1999 +
                    (C31438 + C31437 + C31436) * C51082 -
                    (C32025 + C32024 + C32023) * C2000 -
                    (C32028 + C32027 + C32026) * C51071 +
                    (C32305 + C32304 + C32303) * C2001 +
                    (C32308 + C32307 + C32306) * C1998) *
                       C50970) *
                      C50753 * C1358 +
                  (((C31853 + C31854 + C31855) * C2000 -
                    ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                      C51084 * C650 + C24801 * C310 + C51083 * C319) *
                         C51082 +
                     (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                      C51084 * C640 + C24801 * C301 + C51083 * C311) *
                         C1999) +
                    (C31856 + C31857 + C31858) * C51071 -
                    (C32187 + C32188 + C32189) * C2001 -
                    (C32190 + C32191 + C32192) * C1998) *
                       C51051 +
                   ((C32189 + C32188 + C32187) * C2000 -
                    ((C31858 + C31857 + C31856) * C51082 +
                     (C31855 + C31854 + C31853) * C1999) +
                    (C32192 + C32191 + C32190) * C51071 -
                    (C24803 * C20940 + C24798 * C20941 + C24802 * C3742 +
                     C51084 * C3746 + C24801 * C3743 + C51083 * C3747) *
                        C2001 -
                    (C24803 * C20942 + C24798 * C20943 + C24802 * C3748 +
                     C51084 * C3754 + C24801 * C3749 + C51083 * C3755) *
                        C1998) *
                       C50970) *
                      C50753 * C50822) *
                 C50774) /
                (p * q * std::sqrt(p + q));
    d2ee[96] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                      C51084 * C311 + C24803 * C635 + C24798 * C640) *
                         C118 +
                     (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                      C51084 * C319 + C24803 * C641 + C24798 * C650) *
                         C50836) *
                        C51051 +
                    ((C31435 + C31434 + C31433) * C118 +
                     (C31438 + C31437 + C31436) * C50836) *
                        C50970) *
                       C50753 * C630 -
                   (((C24803 * C3303 + C24798 * C3310 + C24802 * C881 +
                      C51084 * C892 + C24801 * C873 + C51083 * C888) *
                         C50836 +
                     (C24803 * C3298 + C24798 * C3302 + C24802 * C868 +
                      C51084 * C880 + C24801 * C864 + C51083 * C872) *
                         C118) *
                        C50970 +
                    ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                      C51084 * C650 + C24801 * C310 + C51083 * C319) *
                         C50836 +
                     (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                      C51084 * C640 + C24801 * C301 + C51083 * C311) *
                         C118) *
                        C51051) *
                       C50753 * C631 +
                   (((C24801 * C635 + C51083 * C640 + C24802 * C753 +
                      C51084 * C761 + C24803 * C3016 + C24798 * C3019) *
                         C118 +
                     (C24801 * C641 + C51083 * C650 + C24802 * C760 +
                      C51084 * C765 + C24803 * C3020 + C24798 * C3025) *
                         C50836) *
                        C51051 +
                    ((C24801 * C868 + C51083 * C880 + C24802 * C3298 +
                      C51084 * C3302 + C24803 * C3300 + C24798 * C3306) *
                         C118 +
                     (C24801 * C881 + C51083 * C892 + C24802 * C3303 +
                      C51084 * C3310 + C24803 * C3307 + C24798 * C3312) *
                         C50836) *
                        C50970) *
                       C50753 * C632) *
                      C51027 +
                  ((((C25034 + C25033 + C25032) * C118 +
                     (C25031 + C25030 + C25029) * C50836) *
                        C51051 +
                    ((C26537 + C26538 + C26539) * C118 +
                     (C26540 + C26541 + C26542) * C50836) *
                        C50970) *
                       C50753 * C631 -
                   (((C25214 + C25215 + C25216) * C50836 +
                     (C25211 + C25212 + C25213) * C118) *
                        C50970 +
                    ((C24846 + C24845 + C24844) * C50836 +
                     (C24843 + C24842 + C24841) * C118) *
                        C51051) *
                       C50753 * C630 -
                   (((C24803 * C3309 + C24798 * C3313 + C24802 * C3305 +
                      C51084 * C3311 + C24801 * C883 + C51083 * C893) *
                         C50836 +
                     (C24803 * C3301 + C24798 * C3308 + C24802 * C3299 +
                      C51084 * C3304 + C24801 * C869 + C51083 * C882) *
                         C118) *
                        C50970 +
                    ((C25386 + C25385 + C25384) * C50836 +
                     (C25383 + C25382 + C25381) * C118) *
                        C51051) *
                       C50753 * C632) *
                      C50779)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                     C51084 * C311 + C24803 * C635 + C24798 * C640) *
                        C118 +
                    (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                     C51084 * C319 + C24803 * C641 + C24798 * C650) *
                        C50836) *
                       C51051 +
                   ((C24801 * C460 + C51083 * C466 + C24802 * C864 +
                     C51084 * C872 + C24803 * C868 + C24798 * C880) *
                        C118 +
                    (C24801 * C467 + C51083 * C478 + C24802 * C873 +
                     C51084 * C888 + C24803 * C881 + C24798 * C892) *
                        C50836) *
                       C50970) *
                      C50753 * C50806 * C113 -
                  (((C25214 + C25215 + C25216) * C50836 +
                    (C25211 + C25212 + C25213) * C118) *
                       C50970 +
                   ((C24846 + C24845 + C24844) * C50836 +
                    (C24843 + C24842 + C24841) * C118) *
                       C51051) *
                      C50753 * C50806 * C114 +
                  (((C24852 + C24851 + C24850) * C118 +
                    (C24849 + C24848 + C24847) * C50836) *
                       C51051 +
                   ((C25217 + C25218 + C25219) * C118 +
                    (C25220 + C25221 + C25222) * C50836) *
                       C50970) *
                      C50753 * C50806 * C115 -
                  (((C24803 * C887 + C24798 * C895 + C24802 * C879 +
                     C51084 * C891 + C24801 * C473 + C51083 * C481) *
                        C50836 +
                    (C24803 * C871 + C24798 * C886 + C24802 * C867 +
                     C51084 * C878 + C24801 * C463 + C51083 * C472) *
                        C118) *
                       C50970 +
                   ((C24858 + C24857 + C24856) * C50836 +
                    (C24855 + C24854 + C24853) * C118) *
                       C51051) *
                      C50753 * C50806 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                     C51084 * C311 + C24803 * C635 + C24798 * C640) *
                        C997 +
                    (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                     C51084 * C319 + C24803 * C641 + C24798 * C650) *
                        C994 -
                    (C31433 + C31434 + C31435) * C998 -
                    (C31436 + C31437 + C31438) * C995 +
                    (C32023 + C32024 + C32025) * C999 +
                    (C32026 + C32027 + C32028) * C996) *
                       C51051 +
                   ((C31435 + C31434 + C31433) * C997 +
                    (C31438 + C31437 + C31436) * C994 -
                    (C32025 + C32024 + C32023) * C998 -
                    (C32028 + C32027 + C32026) * C995 +
                    (C24801 * C1244 + C51083 * C1248 + C24802 * C3743 +
                     C51084 * C3747 + C24803 * C3742 + C24798 * C3746) *
                        C999 +
                    (C24801 * C1249 + C51083 * C1256 + C24802 * C3749 +
                     C51084 * C3755 + C24803 * C3748 + C24798 * C3754) *
                        C996) *
                       C50970) *
                      C50753 * C50806 * C51027 +
                  (((C25213 + C25212 + C25211) * C998 -
                    ((C24846 + C24845 + C24844) * C994 +
                     (C24843 + C24842 + C24841) * C997) +
                    (C25216 + C25215 + C25214) * C995 -
                    (C25791 + C25790 + C25789) * C999 -
                    (C25794 + C25793 + C25792) * C996) *
                       C51051 +
                   ((C25789 + C25790 + C25791) * C998 -
                    ((C25214 + C25215 + C25216) * C994 +
                     (C25211 + C25212 + C25213) * C997) +
                    (C25792 + C25793 + C25794) * C995 -
                    (C24803 * C3744 + C24798 * C3750 + C24802 * C3745 +
                     C51084 * C3751 + C24801 * C1245 + C51083 * C1250) *
                        C999 -
                    (C24803 * C3752 + C24798 * C3756 + C24802 * C3753 +
                     C51084 * C3757 + C24801 * C1251 + C51083 * C1257) *
                        C996) *
                       C50970) *
                      C50753 * C50806 * C50779)) /
                    (p * q * std::sqrt(p + q));
    d2ee[97] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                     C51084 * C311 + C24803 * C635 + C24798 * C640) *
                        C118 +
                    (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                     C51084 * C319 + C24803 * C641 + C24798 * C650) *
                        C50836) *
                       C51051 +
                   ((C31435 + C31434 + C31433) * C118 +
                    (C31438 + C31437 + C31436) * C50836) *
                       C50970) *
                      C50753 * C745 -
                  (((C24803 * C3303 + C24798 * C3310 + C24802 * C881 +
                     C51084 * C892 + C24801 * C873 + C51083 * C888) *
                        C50836 +
                    (C24803 * C3298 + C24798 * C3302 + C24802 * C868 +
                     C51084 * C880 + C24801 * C864 + C51083 * C872) *
                        C118) *
                       C50970 +
                   ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                     C51084 * C650 + C24801 * C310 + C51083 * C319) *
                        C50836 +
                    (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                     C51084 * C640 + C24801 * C301 + C51083 * C311) *
                        C118) *
                       C51051) *
                      C50753 * C746 +
                  (((C24801 * C635 + C51083 * C640 + C24802 * C753 +
                     C51084 * C761 + C24803 * C3016 + C24798 * C3019) *
                        C118 +
                    (C24801 * C641 + C51083 * C650 + C24802 * C760 +
                     C51084 * C765 + C24803 * C3020 + C24798 * C3025) *
                        C50836) *
                       C51051 +
                   ((C24801 * C868 + C51083 * C880 + C24802 * C3298 +
                     C51084 * C3302 + C24803 * C3300 + C24798 * C3306) *
                        C118 +
                    (C24801 * C881 + C51083 * C892 + C24802 * C3303 +
                     C51084 * C3310 + C24803 * C3307 + C24798 * C3312) *
                        C50836) *
                       C50970) *
                      C50753 * C747 -
                  (((C24803 * C20672 + C24798 * C20673 + C24802 * C3307 +
                     C51084 * C3312 + C24801 * C3303 + C51083 * C3310) *
                        C50836 +
                    (C24803 * C20670 + C24798 * C20671 + C24802 * C3300 +
                     C51084 * C3306 + C24801 * C3298 + C51083 * C3302) *
                        C118) *
                       C50970 +
                   ((C24803 * C3148 + C24798 * C3151 + C24802 * C3020 +
                     C51084 * C3025 + C24801 * C760 + C51083 * C765) *
                        C50836 +
                    (C24803 * C3145 + C24798 * C3149 + C24802 * C3016 +
                     C51084 * C3019 + C24801 * C753 + C51083 * C761) *
                        C118) *
                       C51051) *
                      C50753 * C748) *
                 C50774) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                      C51084 * C311 + C24803 * C635 + C24798 * C640) *
                         C118 +
                     (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                      C51084 * C319 + C24803 * C641 + C24798 * C650) *
                         C50836) *
                        C51051 +
                    ((C24801 * C460 + C51083 * C466 + C24802 * C864 +
                      C51084 * C872 + C24803 * C868 + C24798 * C880) *
                         C118 +
                     (C24801 * C467 + C51083 * C478 + C24802 * C873 +
                      C51084 * C888 + C24803 * C881 + C24798 * C892) *
                         C50836) *
                        C50970) *
                       C50753 * C51034 -
                   (((C24803 * C3303 + C24798 * C3310 + C24802 * C881 +
                      C51084 * C892 + C24801 * C873 + C51083 * C888) *
                         C50836 +
                     (C24803 * C3298 + C24798 * C3302 + C24802 * C868 +
                      C51084 * C880 + C24801 * C864 + C51083 * C872) *
                         C118) *
                        C50970 +
                    ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                      C51084 * C650 + C24801 * C310 + C51083 * C319) *
                         C50836 +
                     (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                      C51084 * C640 + C24801 * C301 + C51083 * C311) *
                         C118) *
                        C51051) *
                       C50753 * C50822) *
                      C295 +
                  ((((C25034 + C25033 + C25032) * C118 +
                     (C25031 + C25030 + C25029) * C50836) *
                        C51051 +
                    ((C26537 + C26538 + C26539) * C118 +
                     (C26540 + C26541 + C26542) * C50836) *
                        C50970) *
                       C50753 * C50822 -
                   (((C25214 + C25215 + C25216) * C50836 +
                     (C25211 + C25212 + C25213) * C118) *
                        C50970 +
                    ((C24846 + C24845 + C24844) * C50836 +
                     (C24843 + C24842 + C24841) * C118) *
                        C51051) *
                       C50753 * C51034) *
                      C296 +
                  ((((C24852 + C24851 + C24850) * C118 +
                     (C24849 + C24848 + C24847) * C50836) *
                        C51051 +
                    ((C25217 + C25218 + C25219) * C118 +
                     (C25220 + C25221 + C25222) * C50836) *
                        C50970) *
                       C50753 * C51034 -
                   (((C24803 * C4246 + C24798 * C4247 + C24802 * C885 +
                      C51084 * C894 + C24801 * C877 + C51083 * C890) *
                         C50836 +
                     (C24803 * C4244 + C24798 * C4245 + C24802 * C870 +
                      C51084 * C884 + C24801 * C866 + C51083 * C876) *
                         C118) *
                        C50970 +
                    ((C25040 + C25039 + C25038) * C50836 +
                     (C25037 + C25036 + C25035) * C118) *
                        C51051) *
                       C50753 * C50822) *
                      C297)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                     C51084 * C311 + C24803 * C635 + C24798 * C640) *
                        C997 +
                    (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                     C51084 * C319 + C24803 * C641 + C24798 * C650) *
                        C994 -
                    (C31433 + C31434 + C31435) * C998 -
                    (C31436 + C31437 + C31438) * C995 +
                    (C32023 + C32024 + C32025) * C999 +
                    (C32026 + C32027 + C32028) * C996) *
                       C51051 +
                   ((C31435 + C31434 + C31433) * C997 +
                    (C31438 + C31437 + C31436) * C994 -
                    (C32025 + C32024 + C32023) * C998 -
                    (C32028 + C32027 + C32026) * C995 +
                    (C24801 * C1244 + C51083 * C1248 + C24802 * C3743 +
                     C51084 * C3747 + C24803 * C3742 + C24798 * C3746) *
                        C999 +
                    (C24801 * C1249 + C51083 * C1256 + C24802 * C3749 +
                     C51084 * C3755 + C24803 * C3748 + C24798 * C3754) *
                        C996) *
                       C50970) *
                      C50753 * C51034 +
                  (((C31853 + C31854 + C31855) * C998 -
                    ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                      C51084 * C650 + C24801 * C310 + C51083 * C319) *
                         C994 +
                     (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                      C51084 * C640 + C24801 * C301 + C51083 * C311) *
                         C997) +
                    (C31856 + C31857 + C31858) * C995 -
                    (C32187 + C32188 + C32189) * C999 -
                    (C32190 + C32191 + C32192) * C996) *
                       C51051 +
                   ((C32189 + C32188 + C32187) * C998 -
                    ((C31858 + C31857 + C31856) * C994 +
                     (C31855 + C31854 + C31853) * C997) +
                    (C32192 + C32191 + C32190) * C995 -
                    (C24803 * C20940 + C24798 * C20941 + C24802 * C3742 +
                     C51084 * C3746 + C24801 * C3743 + C51083 * C3747) *
                        C999 -
                    (C24803 * C20942 + C24798 * C20943 + C24802 * C3748 +
                     C51084 * C3754 + C24801 * C3749 + C51083 * C3755) *
                        C996) *
                       C50970) *
                      C50753 * C50822) *
                 C50774) /
                    (p * q * std::sqrt(p + q));
    d2ee[98] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                     C51084 * C311 + C24803 * C635 + C24798 * C640) *
                        C458 +
                    (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                     C51084 * C319 + C24803 * C641 + C24798 * C650) *
                        C51036 -
                    (C31433 + C31434 + C31435) * C459 -
                    (C31436 + C31437 + C31438) * C50848) *
                       C51051 +
                   ((C31435 + C31434 + C31433) * C458 +
                    (C31438 + C31437 + C31436) * C51036 -
                    (C24803 * C3460 + C24798 * C3463 + C24802 * C1154 +
                     C51084 * C1158 + C24801 * C1000 + C51083 * C1005) *
                        C459 -
                    (C24803 * C3464 + C24798 * C3469 + C24802 * C1159 +
                     C51084 * C1166 + C24801 * C1006 + C51083 * C1015) *
                        C50848) *
                       C50970) *
                      C50753 * C630 +
                  (((C31853 + C31854 + C31855) * C459 -
                    ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                      C51084 * C650 + C24801 * C310 + C51083 * C319) *
                         C51036 +
                     (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                      C51084 * C640 + C24801 * C301 + C51083 * C311) *
                         C458) +
                    (C31856 + C31857 + C31858) * C50848) *
                       C51051 +
                   ((C24801 * C1154 + C51083 * C1158 + C24802 * C3460 +
                     C51084 * C3463 + C24803 * C3636 + C24798 * C3638) *
                        C459 -
                    ((C31858 + C31857 + C31856) * C51036 +
                     (C31855 + C31854 + C31853) * C458) +
                    (C24801 * C1159 + C51083 * C1166 + C24802 * C3464 +
                     C51084 * C3469 + C24803 * C3639 + C24798 * C3642) *
                        C50848) *
                       C50970) *
                      C50753 * C631 +
                  (((C24801 * C635 + C51083 * C640 + C24802 * C753 +
                     C51084 * C761 + C24803 * C3016 + C24798 * C3019) *
                        C458 +
                    (C24801 * C641 + C51083 * C650 + C24802 * C760 +
                     C51084 * C765 + C24803 * C3020 + C24798 * C3025) *
                        C51036 -
                    (C31859 + C31860 + C31861) * C459 -
                    (C31862 + C31863 + C31864) * C50848) *
                       C51051 +
                   ((C31861 + C31860 + C31859) * C458 +
                    (C31864 + C31863 + C31862) * C51036 -
                    (C24803 * C20870 + C24798 * C20871 + C24802 * C3636 +
                     C51084 * C3638 + C24801 * C3460 + C51083 * C3463) *
                        C459 -
                    (C24803 * C20872 + C24798 * C20873 + C24802 * C3639 +
                     C51084 * C3642 + C24801 * C3464 + C51083 * C3469) *
                        C50848) *
                       C50970) *
                      C50753 * C632) *
                 C50774) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                     C51084 * C311 + C24803 * C635 + C24798 * C640) *
                        C458 +
                    (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                     C51084 * C319 + C24803 * C641 + C24798 * C650) *
                        C51036 -
                    (C31433 + C31434 + C31435) * C459 -
                    (C31436 + C31437 + C31438) * C50848) *
                       C51051 +
                   ((C31435 + C31434 + C31433) * C458 +
                    (C31438 + C31437 + C31436) * C51036 -
                    (C24803 * C3460 + C24798 * C3463 + C24802 * C1154 +
                     C51084 * C1158 + C24801 * C1000 + C51083 * C1005) *
                        C459 -
                    (C24803 * C3464 + C24798 * C3469 + C24802 * C1159 +
                     C51084 * C1166 + C24801 * C1006 + C51083 * C1015) *
                        C50848) *
                       C50970) *
                      C50753 * C50806 * C295 +
                  (((C25213 + C25212 + C25211) * C459 -
                    ((C24846 + C24845 + C24844) * C51036 +
                     (C24843 + C24842 + C24841) * C458) +
                    (C25216 + C25215 + C25214) * C50848) *
                       C51051 +
                   ((C25789 + C25790 + C25791) * C459 -
                    ((C25214 + C25215 + C25216) * C51036 +
                     (C25211 + C25212 + C25213) * C458) +
                    (C25792 + C25793 + C25794) * C50848) *
                       C50970) *
                      C50753 * C50806 * C296 +
                  (((C24852 + C24851 + C24850) * C458 +
                    (C24849 + C24848 + C24847) * C51036 -
                    (C25219 + C25218 + C25217) * C459 -
                    (C25222 + C25221 + C25220) * C50848) *
                       C51051 +
                   ((C25217 + C25218 + C25219) * C458 +
                    (C25220 + C25221 + C25222) * C51036 -
                    (C24803 * C3462 + C24798 * C3467 + C24802 * C1156 +
                     C51084 * C1162 + C24801 * C1002 + C51083 * C1009) *
                        C459 -
                    (C24803 * C3468 + C24798 * C3471 + C24802 * C1163 +
                     C51084 * C1168 + C24801 * C1010 + C51083 * C1017) *
                        C50848) *
                       C50970) *
                      C50753 * C50806 * C297)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                    C51084 * C311 + C24803 * C635 + C24798 * C640) *
                       C1240 +
                   (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                    C51084 * C319 + C24803 * C641 + C24798 * C650) *
                       C1236 -
                   (C31433 + C31434 + C31435) * C1241 -
                   (C31436 + C31437 + C31438) * C1237 +
                   (C32023 + C32024 + C32025) * C1242 +
                   (C32026 + C32027 + C32028) * C1238 -
                   (C32303 + C32304 + C32305) * C1243 -
                   (C32306 + C32307 + C32308) * C1239) *
                      C51051 +
                  ((C31435 + C31434 + C31433) * C1240 +
                   (C31438 + C31437 + C31436) * C1236 -
                   (C32025 + C32024 + C32023) * C1241 -
                   (C32028 + C32027 + C32026) * C1237 +
                   (C32305 + C32304 + C32303) * C1242 +
                   (C32308 + C32307 + C32306) * C1238 -
                   (C24803 * C23094 + C24798 * C23095 + C24802 * C6461 +
                    C51084 * C6463 + C24801 * C6279 + C51083 * C6282) *
                       C1243 -
                   (C24803 * C23096 + C24798 * C23097 + C24802 * C6464 +
                    C51084 * C6467 + C24801 * C6283 + C51083 * C6288) *
                       C1239) *
                      C50970) *
                 C50753 * C50806 * C50774) /
                    (p * q * std::sqrt(p + q));
    d2ee[99] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                     C51084 * C311 + C24803 * C635 + C24798 * C640) *
                        C1730 +
                    (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                     C51084 * C319 + C24803 * C641 + C24798 * C650) *
                        C1728 -
                    (C31433 + C31434 + C31435) * C1731 -
                    (C31436 + C31437 + C31438) * C50848) *
                       C51051 +
                   ((C31435 + C31434 + C31433) * C1730 +
                    (C31438 + C31437 + C31436) * C1728 -
                    (C32025 + C32024 + C32023) * C1731 -
                    (C32028 + C32027 + C32026) * C50848) *
                       C50970) *
                      C50753 * C50806 * C51080 +
                  (((C25213 + C25212 + C25211) * C1731 -
                    ((C24846 + C24845 + C24844) * C1728 +
                     (C24843 + C24842 + C24841) * C1730) +
                    (C25216 + C25215 + C25214) * C50848) *
                       C51051 +
                   ((C25789 + C25790 + C25791) * C1731 -
                    ((C25214 + C25215 + C25216) * C1728 +
                     (C25211 + C25212 + C25213) * C1730) +
                    (C25792 + C25793 + C25794) * C50848) *
                       C50970) *
                      C50753 * C50806 * C51065 +
                  (((C24852 + C24851 + C24850) * C1730 +
                    (C24849 + C24848 + C24847) * C1728 -
                    (C25219 + C25218 + C25217) * C1731 -
                    (C25222 + C25221 + C25220) * C50848) *
                       C51051 +
                   ((C25217 + C25218 + C25219) * C1730 +
                    (C25220 + C25221 + C25222) * C1728 -
                    (C24803 * C3462 + C24798 * C3467 + C24802 * C1156 +
                     C51084 * C1162 + C24801 * C1002 + C51083 * C1009) *
                        C1731 -
                    (C24803 * C3468 + C24798 * C3471 + C24802 * C1163 +
                     C51084 * C1168 + C24801 * C1010 + C51083 * C1017) *
                        C50848) *
                       C50970) *
                      C50753 * C50806 * C1362)) /
                (p * q * std::sqrt(p + q));
    d2ee[100] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                       C51084 * C311 + C24803 * C635 + C24798 * C640) *
                          C1730 +
                      (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                       C51084 * C319 + C24803 * C641 + C24798 * C650) *
                          C1728 -
                      (C31433 + C31434 + C31435) * C1731 -
                      (C31436 + C31437 + C31438) * C50848) *
                         C51051 +
                     ((C31435 + C31434 + C31433) * C1730 +
                      (C31438 + C31437 + C31436) * C1728 -
                      (C32025 + C32024 + C32023) * C1731 -
                      (C32028 + C32027 + C32026) * C50848) *
                         C50970) *
                        C50753 * C51034 +
                    (((C31853 + C31854 + C31855) * C1731 -
                      ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                        C51084 * C650 + C24801 * C310 + C51083 * C319) *
                           C1728 +
                       (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                        C51084 * C640 + C24801 * C301 + C51083 * C311) *
                           C1730) +
                      (C31856 + C31857 + C31858) * C50848) *
                         C51051 +
                     ((C32189 + C32188 + C32187) * C1731 -
                      ((C31858 + C31857 + C31856) * C1728 +
                       (C31855 + C31854 + C31853) * C1730) +
                      (C32192 + C32191 + C32190) * C50848) *
                         C50970) *
                        C50753 * C50822) *
                       C1464 +
                   ((((C25213 + C25212 + C25211) * C1731 -
                      ((C24846 + C24845 + C24844) * C1728 +
                       (C24843 + C24842 + C24841) * C1730) +
                      (C25216 + C25215 + C25214) * C50848) *
                         C51051 +
                     ((C25789 + C25790 + C25791) * C1731 -
                      ((C25214 + C25215 + C25216) * C1728 +
                       (C25211 + C25212 + C25213) * C1730) +
                      (C25792 + C25793 + C25794) * C50848) *
                         C50970) *
                        C50753 * C51034 +
                    (((C25034 + C25033 + C25032) * C1730 +
                      (C25031 + C25030 + C25029) * C1728 -
                      (C26539 + C26538 + C26537) * C1731 -
                      (C26542 + C26541 + C26540) * C50848) *
                         C51051 +
                     ((C26537 + C26538 + C26539) * C1730 +
                      (C26540 + C26541 + C26542) * C1728 -
                      (C24803 * C3637 + C24798 * C3640 + C24802 * C3461 +
                       C51084 * C3465 + C24801 * C1155 + C51083 * C1160) *
                          C1731 -
                      (C24803 * C3641 + C24798 * C3643 + C24802 * C3466 +
                       C51084 * C3470 + C24801 * C1161 + C51083 * C1167) *
                          C50848) *
                         C50970) *
                        C50753 * C50822) *
                       C50779)) /
                 (p * q * std::sqrt(p + q));
    d2ee[101] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                      C51084 * C311 + C24803 * C635 + C24798 * C640) *
                         C1999 +
                     (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                      C51084 * C319 + C24803 * C641 + C24798 * C650) *
                         C51082 -
                     (C31433 + C31434 + C31435) * C2000 -
                     (C31436 + C31437 + C31438) * C51071 +
                     (C32023 + C32024 + C32025) * C2001 +
                     (C32026 + C32027 + C32028) * C1998) *
                        C51051 +
                    ((C31435 + C31434 + C31433) * C1999 +
                     (C31438 + C31437 + C31436) * C51082 -
                     (C32025 + C32024 + C32023) * C2000 -
                     (C32028 + C32027 + C32026) * C51071 +
                     (C32305 + C32304 + C32303) * C2001 +
                     (C32308 + C32307 + C32306) * C1998) *
                        C50970) *
                       C50753 * C50806 * C1464 +
                   (((C25213 + C25212 + C25211) * C2000 -
                     ((C24846 + C24845 + C24844) * C51082 +
                      (C24843 + C24842 + C24841) * C1999) +
                     (C25216 + C25215 + C25214) * C51071 -
                     (C25791 + C25790 + C25789) * C2001 -
                     (C25794 + C25793 + C25792) * C1998) *
                        C51051 +
                    ((C25789 + C25790 + C25791) * C2000 -
                     ((C25214 + C25215 + C25216) * C51082 +
                      (C25211 + C25212 + C25213) * C1999) +
                     (C25792 + C25793 + C25794) * C51071 -
                     (C24803 * C3744 + C24798 * C3750 + C24802 * C3745 +
                      C51084 * C3751 + C24801 * C1245 + C51083 * C1250) *
                         C2001 -
                     (C24803 * C3752 + C24798 * C3756 + C24802 * C3753 +
                      C51084 * C3757 + C24801 * C1251 + C51083 * C1257) *
                         C1998) *
                        C50970) *
                       C50753 * C50806 * C50779)) /
                 (p * q * std::sqrt(p + q));
    d2ee[102] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                      C51084 * C311 + C24803 * C635 + C24798 * C640) *
                         C118 +
                     (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                      C51084 * C319 + C24803 * C641 + C24798 * C650) *
                         C50836) *
                        C51051 +
                    ((C24801 * C460 + C51083 * C466 + C24802 * C864 +
                      C51084 * C872 + C24803 * C868 + C24798 * C880) *
                         C118 +
                     (C24801 * C467 + C51083 * C478 + C24802 * C873 +
                      C51084 * C888 + C24803 * C881 + C24798 * C892) *
                         C50836) *
                        C50970) *
                       C50753 * C50806 * C113 -
                   (((C25214 + C25215 + C25216) * C50836 +
                     (C25211 + C25212 + C25213) * C118) *
                        C50970 +
                    ((C24846 + C24845 + C24844) * C50836 +
                     (C24843 + C24842 + C24841) * C118) *
                        C51051) *
                       C50753 * C50806 * C114 +
                   (((C24852 + C24851 + C24850) * C118 +
                     (C24849 + C24848 + C24847) * C50836) *
                        C51051 +
                    ((C25217 + C25218 + C25219) * C118 +
                     (C25220 + C25221 + C25222) * C50836) *
                        C50970) *
                       C50753 * C50806 * C115 -
                   (((C24803 * C887 + C24798 * C895 + C24802 * C879 +
                      C51084 * C891 + C24801 * C473 + C51083 * C481) *
                         C50836 +
                     (C24803 * C871 + C24798 * C886 + C24802 * C867 +
                      C51084 * C878 + C24801 * C463 + C51083 * C472) *
                         C118) *
                        C50970 +
                    ((C24858 + C24857 + C24856) * C50836 +
                     (C24855 + C24854 + C24853) * C118) *
                        C51051) *
                       C50753 * C50806 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                       C51084 * C311 + C24803 * C635 + C24798 * C640) *
                          C118 +
                      (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                       C51084 * C319 + C24803 * C641 + C24798 * C650) *
                          C50836) *
                         C51051 +
                     ((C31435 + C31434 + C31433) * C118 +
                      (C31438 + C31437 + C31436) * C50836) *
                         C50970) *
                        C50753 * C630 -
                    (((C24803 * C3303 + C24798 * C3310 + C24802 * C881 +
                       C51084 * C892 + C24801 * C873 + C51083 * C888) *
                          C50836 +
                      (C24803 * C3298 + C24798 * C3302 + C24802 * C868 +
                       C51084 * C880 + C24801 * C864 + C51083 * C872) *
                          C118) *
                         C50970 +
                     ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                       C51084 * C650 + C24801 * C310 + C51083 * C319) *
                          C50836 +
                      (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                       C51084 * C640 + C24801 * C301 + C51083 * C311) *
                          C118) *
                         C51051) *
                        C50753 * C631 +
                    (((C24801 * C635 + C51083 * C640 + C24802 * C753 +
                       C51084 * C761 + C24803 * C3016 + C24798 * C3019) *
                          C118 +
                      (C24801 * C641 + C51083 * C650 + C24802 * C760 +
                       C51084 * C765 + C24803 * C3020 + C24798 * C3025) *
                          C50836) *
                         C51051 +
                     ((C24801 * C868 + C51083 * C880 + C24802 * C3298 +
                       C51084 * C3302 + C24803 * C3300 + C24798 * C3306) *
                          C118 +
                      (C24801 * C881 + C51083 * C892 + C24802 * C3303 +
                       C51084 * C3310 + C24803 * C3307 + C24798 * C3312) *
                          C50836) *
                         C50970) *
                        C50753 * C632) *
                       C51027 +
                   ((((C25034 + C25033 + C25032) * C118 +
                      (C25031 + C25030 + C25029) * C50836) *
                         C51051 +
                     ((C26537 + C26538 + C26539) * C118 +
                      (C26540 + C26541 + C26542) * C50836) *
                         C50970) *
                        C50753 * C631 -
                    (((C25214 + C25215 + C25216) * C50836 +
                      (C25211 + C25212 + C25213) * C118) *
                         C50970 +
                     ((C24846 + C24845 + C24844) * C50836 +
                      (C24843 + C24842 + C24841) * C118) *
                         C51051) *
                        C50753 * C630 -
                    (((C24803 * C3309 + C24798 * C3313 + C24802 * C3305 +
                       C51084 * C3311 + C24801 * C883 + C51083 * C893) *
                          C50836 +
                      (C24803 * C3301 + C24798 * C3308 + C24802 * C3299 +
                       C51084 * C3304 + C24801 * C869 + C51083 * C882) *
                          C118) *
                         C50970 +
                     ((C25386 + C25385 + C25384) * C50836 +
                      (C25383 + C25382 + C25381) * C118) *
                         C51051) *
                        C50753 * C632) *
                       C50779)) /
                     (p * q * std::sqrt(p + q));
    d2ee[103] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                       C51084 * C311 + C24803 * C635 + C24798 * C640) *
                          C118 +
                      (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                       C51084 * C319 + C24803 * C641 + C24798 * C650) *
                          C50836) *
                         C51051 +
                     ((C24801 * C460 + C51083 * C466 + C24802 * C864 +
                       C51084 * C872 + C24803 * C868 + C24798 * C880) *
                          C118 +
                      (C24801 * C467 + C51083 * C478 + C24802 * C873 +
                       C51084 * C888 + C24803 * C881 + C24798 * C892) *
                          C50836) *
                         C50970) *
                        C50753 * C51034 -
                    (((C24803 * C3303 + C24798 * C3310 + C24802 * C881 +
                       C51084 * C892 + C24801 * C873 + C51083 * C888) *
                          C50836 +
                      (C24803 * C3298 + C24798 * C3302 + C24802 * C868 +
                       C51084 * C880 + C24801 * C864 + C51083 * C872) *
                          C118) *
                         C50970 +
                     ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                       C51084 * C650 + C24801 * C310 + C51083 * C319) *
                          C50836 +
                      (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                       C51084 * C640 + C24801 * C301 + C51083 * C311) *
                          C118) *
                         C51051) *
                        C50753 * C50822) *
                       C295 +
                   ((((C25034 + C25033 + C25032) * C118 +
                      (C25031 + C25030 + C25029) * C50836) *
                         C51051 +
                     ((C26537 + C26538 + C26539) * C118 +
                      (C26540 + C26541 + C26542) * C50836) *
                         C50970) *
                        C50753 * C50822 -
                    (((C25214 + C25215 + C25216) * C50836 +
                      (C25211 + C25212 + C25213) * C118) *
                         C50970 +
                     ((C24846 + C24845 + C24844) * C50836 +
                      (C24843 + C24842 + C24841) * C118) *
                         C51051) *
                        C50753 * C51034) *
                       C296 +
                   ((((C24852 + C24851 + C24850) * C118 +
                      (C24849 + C24848 + C24847) * C50836) *
                         C51051 +
                     ((C25217 + C25218 + C25219) * C118 +
                      (C25220 + C25221 + C25222) * C50836) *
                         C50970) *
                        C50753 * C51034 -
                    (((C24803 * C4246 + C24798 * C4247 + C24802 * C885 +
                       C51084 * C894 + C24801 * C877 + C51083 * C890) *
                          C50836 +
                      (C24803 * C4244 + C24798 * C4245 + C24802 * C870 +
                       C51084 * C884 + C24801 * C866 + C51083 * C876) *
                          C118) *
                         C50970 +
                     ((C25040 + C25039 + C25038) * C50836 +
                      (C25037 + C25036 + C25035) * C118) *
                         C51051) *
                        C50753 * C50822) *
                       C297)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                      C51084 * C311 + C24803 * C635 + C24798 * C640) *
                         C118 +
                     (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                      C51084 * C319 + C24803 * C641 + C24798 * C650) *
                         C50836) *
                        C51051 +
                    ((C31435 + C31434 + C31433) * C118 +
                     (C31438 + C31437 + C31436) * C50836) *
                        C50970) *
                       C50753 * C745 -
                   (((C24803 * C3303 + C24798 * C3310 + C24802 * C881 +
                      C51084 * C892 + C24801 * C873 + C51083 * C888) *
                         C50836 +
                     (C24803 * C3298 + C24798 * C3302 + C24802 * C868 +
                      C51084 * C880 + C24801 * C864 + C51083 * C872) *
                         C118) *
                        C50970 +
                    ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                      C51084 * C650 + C24801 * C310 + C51083 * C319) *
                         C50836 +
                     (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                      C51084 * C640 + C24801 * C301 + C51083 * C311) *
                         C118) *
                        C51051) *
                       C50753 * C746 +
                   (((C24801 * C635 + C51083 * C640 + C24802 * C753 +
                      C51084 * C761 + C24803 * C3016 + C24798 * C3019) *
                         C118 +
                     (C24801 * C641 + C51083 * C650 + C24802 * C760 +
                      C51084 * C765 + C24803 * C3020 + C24798 * C3025) *
                         C50836) *
                        C51051 +
                    ((C24801 * C868 + C51083 * C880 + C24802 * C3298 +
                      C51084 * C3302 + C24803 * C3300 + C24798 * C3306) *
                         C118 +
                     (C24801 * C881 + C51083 * C892 + C24802 * C3303 +
                      C51084 * C3310 + C24803 * C3307 + C24798 * C3312) *
                         C50836) *
                        C50970) *
                       C50753 * C747 -
                   (((C24803 * C20672 + C24798 * C20673 + C24802 * C3307 +
                      C51084 * C3312 + C24801 * C3303 + C51083 * C3310) *
                         C50836 +
                     (C24803 * C20670 + C24798 * C20671 + C24802 * C3300 +
                      C51084 * C3306 + C24801 * C3298 + C51083 * C3302) *
                         C118) *
                        C50970 +
                    ((C24803 * C3148 + C24798 * C3151 + C24802 * C3020 +
                      C51084 * C3025 + C24801 * C760 + C51083 * C765) *
                         C50836 +
                     (C24803 * C3145 + C24798 * C3149 + C24802 * C3016 +
                      C51084 * C3019 + C24801 * C753 + C51083 * C761) *
                         C118) *
                        C51051) *
                       C50753 * C748) *
                  C50774) /
                     (p * q * std::sqrt(p + q));
    d2ee[104] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                      C51084 * C311 + C24803 * C635 + C24798 * C640) *
                         C458 +
                     (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                      C51084 * C319 + C24803 * C641 + C24798 * C650) *
                         C51036 -
                     (C31433 + C31434 + C31435) * C459 -
                     (C31436 + C31437 + C31438) * C50848) *
                        C51051 +
                    ((C31435 + C31434 + C31433) * C458 +
                     (C31438 + C31437 + C31436) * C51036 -
                     (C24803 * C3460 + C24798 * C3463 + C24802 * C1154 +
                      C51084 * C1158 + C24801 * C1000 + C51083 * C1005) *
                         C459 -
                     (C24803 * C3464 + C24798 * C3469 + C24802 * C1159 +
                      C51084 * C1166 + C24801 * C1006 + C51083 * C1015) *
                         C50848) *
                        C50970) *
                       C50753 * C50806 * C295 +
                   (((C25213 + C25212 + C25211) * C459 -
                     ((C24846 + C24845 + C24844) * C51036 +
                      (C24843 + C24842 + C24841) * C458) +
                     (C25216 + C25215 + C25214) * C50848) *
                        C51051 +
                    ((C25789 + C25790 + C25791) * C459 -
                     ((C25214 + C25215 + C25216) * C51036 +
                      (C25211 + C25212 + C25213) * C458) +
                     (C25792 + C25793 + C25794) * C50848) *
                        C50970) *
                       C50753 * C50806 * C296 +
                   (((C24852 + C24851 + C24850) * C458 +
                     (C24849 + C24848 + C24847) * C51036 -
                     (C25219 + C25218 + C25217) * C459 -
                     (C25222 + C25221 + C25220) * C50848) *
                        C51051 +
                    ((C25217 + C25218 + C25219) * C458 +
                     (C25220 + C25221 + C25222) * C51036 -
                     (C24803 * C3462 + C24798 * C3467 + C24802 * C1156 +
                      C51084 * C1162 + C24801 * C1002 + C51083 * C1009) *
                         C459 -
                     (C24803 * C3468 + C24798 * C3471 + C24802 * C1163 +
                      C51084 * C1168 + C24801 * C1010 + C51083 * C1017) *
                         C50848) *
                        C50970) *
                       C50753 * C50806 * C297)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C24801 * C119 + C51083 * C126 + C24802 * C301 +
                      C51084 * C311 + C24803 * C635 + C24798 * C640) *
                         C458 +
                     (C24801 * C127 + C51083 * C140 + C24802 * C310 +
                      C51084 * C319 + C24803 * C641 + C24798 * C650) *
                         C51036 -
                     (C31433 + C31434 + C31435) * C459 -
                     (C31436 + C31437 + C31438) * C50848) *
                        C51051 +
                    ((C31435 + C31434 + C31433) * C458 +
                     (C31438 + C31437 + C31436) * C51036 -
                     (C24803 * C3460 + C24798 * C3463 + C24802 * C1154 +
                      C51084 * C1158 + C24801 * C1000 + C51083 * C1005) *
                         C459 -
                     (C24803 * C3464 + C24798 * C3469 + C24802 * C1159 +
                      C51084 * C1166 + C24801 * C1006 + C51083 * C1015) *
                         C50848) *
                        C50970) *
                       C50753 * C630 +
                   (((C31853 + C31854 + C31855) * C459 -
                     ((C24803 * C760 + C24798 * C765 + C24802 * C641 +
                       C51084 * C650 + C24801 * C310 + C51083 * C319) *
                          C51036 +
                      (C24803 * C753 + C24798 * C761 + C24802 * C635 +
                       C51084 * C640 + C24801 * C301 + C51083 * C311) *
                          C458) +
                     (C31856 + C31857 + C31858) * C50848) *
                        C51051 +
                    ((C24801 * C1154 + C51083 * C1158 + C24802 * C3460 +
                      C51084 * C3463 + C24803 * C3636 + C24798 * C3638) *
                         C459 -
                     ((C31858 + C31857 + C31856) * C51036 +
                      (C31855 + C31854 + C31853) * C458) +
                     (C24801 * C1159 + C51083 * C1166 + C24802 * C3464 +
                      C51084 * C3469 + C24803 * C3639 + C24798 * C3642) *
                         C50848) *
                        C50970) *
                       C50753 * C631 +
                   (((C24801 * C635 + C51083 * C640 + C24802 * C753 +
                      C51084 * C761 + C24803 * C3016 + C24798 * C3019) *
                         C458 +
                     (C24801 * C641 + C51083 * C650 + C24802 * C760 +
                      C51084 * C765 + C24803 * C3020 + C24798 * C3025) *
                         C51036 -
                     (C31859 + C31860 + C31861) * C459 -
                     (C31862 + C31863 + C31864) * C50848) *
                        C51051 +
                    ((C31861 + C31860 + C31859) * C458 +
                     (C31864 + C31863 + C31862) * C51036 -
                     (C24803 * C20870 + C24798 * C20871 + C24802 * C3636 +
                      C51084 * C3638 + C24801 * C3460 + C51083 * C3463) *
                         C459 -
                     (C24803 * C20872 + C24798 * C20873 + C24802 * C3639 +
                      C51084 * C3642 + C24801 * C3464 + C51083 * C3469) *
                         C50848) *
                        C50970) *
                       C50753 * C632) *
                  C50774) /
                     (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
             C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
                C118 +
            (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
             C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
                C50836) *
               C50906 * C50753 * C1358 -
           ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
             C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                C50836 +
            (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
             C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                C118) *
               C50906 * C50753 * C50822) *
              C51080 +
          (((C20204 * C300 + C20199 * C309 + C20205 * C636 + C20200 * C642 +
             C20206 * C752 + C20201 * C759 + C20207 * C3017 + C20202 * C3021) *
                C118 +
            (C20204 * C308 + C20199 * C318 + C20205 * C643 + C20200 * C651 +
             C20206 * C758 + C20201 * C764 + C20207 * C3022 + C20202 * C3026) *
                C50836) *
               C50906 * C50753 * C50822 -
           ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
             C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                C50836 +
            (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
             C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                C118) *
               C50906 * C50753 * C1358) *
              C51065 +
          (((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C307 +
             C20206 * C637 + C20201 * C644 + C20207 * C751 + C20202 * C757) *
                C118 +
            (C20204 * C131 + C20199 * C142 + C20205 * C306 + C20200 * C317 +
             C20206 * C645 + C20201 * C652 + C20207 * C756 + C20202 * C763) *
                C50836) *
               C50906 * C50753 * C1358 -
           ((C20207 * C3023 + C20202 * C3027 + C20206 * C756 + C20201 * C763 +
             C20205 * C645 + C20200 * C652 + C20204 * C306 + C20199 * C317) *
                C50836 +
            (C20207 * C3018 + C20202 * C3024 + C20206 * C751 + C20201 * C757 +
             C20205 * C637 + C20200 * C644 + C20204 * C299 + C20199 * C307) *
                C118) *
               C50906 * C50753 * C50822) *
              C1362)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C50836) *
                C50906 * C17370 +
            ((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) * C50906 *
                C17371 +
            C17434 * C17372) *
               C1358 -
           (C17623 * C17372 +
            ((C17610 + C17611) * C50836 + (C17612 + C17613) * C118) * C50906 *
                C17371 +
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C50836 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C118) *
                C50906 * C17370) *
               C50822) *
              C51080 +
          ((((C17613 + C17612) * C118 + (C17611 + C17610) * C50836) * C50906 *
                C17370 +
            ((C17609 + C17608) * C118 + (C17607 + C17606) * C50836) * C50906 *
                C17371 +
            ((C17614 + C17615) * C118 + (C17616 + C17617) * C50836) * C50906 *
                C17372) *
               C50822 -
           (C17435 * C17372 +
            ((C17415 + C17414) * C50836 + (C17413 + C17412) * C118) * C50906 *
                C17371 +
            ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C50906 *
                C17370) *
               C1358) *
              C51065 +
          ((C17434 * C17370 +
            ((C17419 + C17418) * C118 + (C17417 + C17416) * C50836) * C50906 *
                C17371 +
            ((C17420 + C17421) * C118 + (C17422 + C17423) * C50836) * C50906 *
                C17372) *
               C1358 -
           (((C17374 * C648 + C50942 * C654 + C17373 * C313 + C17368 * C320) *
                 C50836 +
             (C17374 * C639 + C50942 * C649 + C17373 * C302 + C17368 * C312) *
                 C118) *
                C50906 * C17372 +
            ((C17617 + C17616) * C50836 + (C17615 + C17614) * C118) * C50906 *
                C17371 +
            C17623 * C17370) *
               C50822) *
              C1362)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C50836) *
                C5336 +
            ((C22330 + C22329) * C118 + (C22332 + C22331) * C50836) * C5337 +
            (C22921 * C118 + C22922 * C50836) * C5338) *
               C50753 * C1358 -
           ((C23100 * C50836 + C23099 * C118) * C5338 +
            ((C22762 + C22761) * C50836 + (C22760 + C22759) * C118) * C5337 +
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C50836 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C118) *
                C5336) *
               C50753 * C50822) *
              C51080 +
          ((((C17613 + C17612) * C118 + (C17611 + C17610) * C50836) * C5336 +
            ((C19146 + C19147) * C118 + (C19148 + C19149) * C50836) * C5337 +
            ((C17373 * C1155 + C17368 * C1160 + C17374 * C3461 +
              C50942 * C3465) *
                 C118 +
             (C17373 * C1161 + C17368 * C1167 + C17374 * C3466 +
              C50942 * C3470) *
                 C50836) *
                C5338) *
               C50753 * C50822 -
           ((C22932 * C50836 + C22931 * C118) * C5338 +
            ((C17798 + C17799) * C50836 + (C17796 + C17797) * C118) * C5337 +
            ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C5336) *
               C50753 * C1358) *
              C51065 +
          ((C17432 * C5336 +
            ((C17802 + C17801) * C118 + (C17804 + C17803) * C50836) * C5337 +
            ((C18396 + C18397) * C118 + (C18398 + C18399) * C50836) * C5338) *
               C50753 * C1358 -
           (((C17374 * C3468 + C50942 * C3471 + C17373 * C1163 +
              C17368 * C1168) *
                 C50836 +
             (C17374 * C3462 + C50942 * C3467 + C17373 * C1156 +
              C17368 * C1162) *
                 C118) *
                C5338 +
            ((C19153 + C19152) * C50836 + (C19151 + C19150) * C118) * C5337 +
            C17622 * C5336) *
               C50753 * C50822) *
              C1362)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
             C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
                C118 +
            (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
             C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
                C50836) *
               C50906 * C50753 * C51081 -
           ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
             C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                C50836 +
            (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
             C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                C118) *
               C50906 * C50753 * C51068 +
           ((C20204 * C635 + C20199 * C640 + C20205 * C753 + C20200 * C761 +
             C20206 * C3016 + C20201 * C3019 + C20207 * C3145 +
             C20202 * C3149) *
                C118 +
            (C20204 * C641 + C20199 * C650 + C20205 * C760 + C20200 * C765 +
             C20206 * C3020 + C20201 * C3025 + C20207 * C3148 +
             C20202 * C3151) *
                C50836) *
               C50906 * C50753 * C1463) *
              C1464 +
          (((C20204 * C300 + C20199 * C309 + C20205 * C636 + C20200 * C642 +
             C20206 * C752 + C20201 * C759 + C20207 * C3017 + C20202 * C3021) *
                C118 +
            (C20204 * C308 + C20199 * C318 + C20205 * C643 + C20200 * C651 +
             C20206 * C758 + C20201 * C764 + C20207 * C3022 + C20202 * C3026) *
                C50836) *
               C50906 * C50753 * C51068 -
           ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
             C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                C50836 +
            (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
             C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                C118) *
               C50906 * C50753 * C51081 -
           ((C20207 * C3146 + C20202 * C3150 + C20206 * C3022 + C20201 * C3026 +
             C20205 * C758 + C20200 * C764 + C20204 * C643 + C20199 * C651) *
                C50836 +
            (C20207 * C3144 + C20202 * C3147 + C20206 * C3017 + C20201 * C3021 +
             C20205 * C752 + C20200 * C759 + C20204 * C636 + C20199 * C642) *
                C118) *
               C50906 * C50753 * C1463) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C50836) *
                C50906 * C17370 +
            ((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) * C50906 *
                C17371 +
            C17434 * C17372) *
               C51081 -
           (C17623 * C17372 +
            ((C17610 + C17611) * C50836 + (C17612 + C17613) * C118) * C50906 *
                C17371 +
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C50836 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C118) *
                C50906 * C17370) *
               C51068 +
           (((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                 C118 +
             (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                 C50836) *
                C50906 * C17370 +
            ((C17978 + C17979) * C118 + (C17980 + C17981) * C50836) * C50906 *
                C17371 +
            ((C17982 + C17983) * C118 + (C17984 + C17985) * C50836) * C50906 *
                C17372) *
               C1463) *
              C1464 +
          ((((C17613 + C17612) * C118 + (C17611 + C17610) * C50836) * C50906 *
                C17370 +
            ((C17609 + C17608) * C118 + (C17607 + C17606) * C50836) * C50906 *
                C17371 +
            ((C17614 + C17615) * C118 + (C17616 + C17617) * C50836) * C50906 *
                C17372) *
               C51068 -
           (C17435 * C17372 +
            ((C17415 + C17414) * C50836 + (C17413 + C17412) * C118) * C50906 *
                C17371 +
            ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C50906 *
                C17370) *
               C51081 -
           (((C17374 * C754 + C50942 * C762 + C17373 * C647 + C17368 * C653) *
                 C50836 +
             (C17374 * C750 + C50942 * C755 + C17373 * C638 + C17368 * C646) *
                 C118) *
                C50906 * C17372 +
            ((C17985 + C17984) * C50836 + (C17983 + C17982) * C118) * C50906 *
                C17371 +
            ((C17981 + C17980) * C50836 + (C17979 + C17978) * C118) * C50906 *
                C17370) *
               C1463) *
              C50779)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C50836) *
                C5336 +
            ((C22330 + C22329) * C118 + (C22332 + C22331) * C50836) * C5337 +
            (C22921 * C118 + C22922 * C50836) * C5338) *
               C50753 * C51081 -
           ((C23100 * C50836 + C23099 * C118) * C5338 +
            ((C22762 + C22761) * C50836 + (C22760 + C22759) * C118) * C5337 +
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C50836 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C118) *
                C5336) *
               C50753 * C51068 +
           (((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                 C118 +
             (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                 C50836) *
                C5336 +
            ((C22768 + C22767) * C118 + (C22770 + C22769) * C50836) * C5337 +
            ((C22772 + C22771) * C118 + (C22774 + C22773) * C50836) * C5338) *
               C50753 * C1463) *
              C1464 +
          ((((C17613 + C17612) * C118 + (C17611 + C17610) * C50836) * C5336 +
            ((C19146 + C19147) * C118 + (C19148 + C19149) * C50836) * C5337 +
            ((C17373 * C1155 + C17368 * C1160 + C17374 * C3461 +
              C50942 * C3465) *
                 C118 +
             (C17373 * C1161 + C17368 * C1167 + C17374 * C3466 +
              C50942 * C3470) *
                 C50836) *
                C5338) *
               C50753 * C51068 -
           ((C22932 * C50836 + C22931 * C118) * C5338 +
            ((C17798 + C17799) * C50836 + (C17796 + C17797) * C118) * C5337 +
            ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C5336) *
               C50753 * C51081 -
           (((C17374 * C3641 + C50942 * C3643 + C17373 * C3466 +
              C17368 * C3470) *
                 C50836 +
             (C17374 * C3637 + C50942 * C3640 + C17373 * C3461 +
              C17368 * C3465) *
                 C118) *
                C5338 +
            ((C17374 * C3305 + C50942 * C3311 + C17373 * C883 + C17368 * C893) *
                 C50836 +
             (C17374 * C3299 + C50942 * C3304 + C17373 * C869 + C17368 * C882) *
                 C118) *
                C5337 +
            ((C17981 + C17980) * C50836 + (C17979 + C17978) * C118) * C5336) *
               C50753 * C1463) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
             C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
                C458 +
            (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
             C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
                C51036 -
            (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
             C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
                C459 -
            (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
             C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
                C50848) *
               C50906 * C50753 * C1358 +
           ((C20204 * C864 + C20199 * C872 + C20205 * C868 + C20200 * C880 +
             C20206 * C3298 + C20201 * C3302 + C20207 * C3300 +
             C20202 * C3306) *
                C459 -
            ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
              C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                 C51036 +
             (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
              C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                 C458) +
            (C20204 * C873 + C20199 * C888 + C20205 * C881 + C20200 * C892 +
             C20206 * C3303 + C20201 * C3310 + C20207 * C3307 +
             C20202 * C3312) *
                C50848) *
               C50906 * C50753 * C50822) *
              C1464 +
          (((C20204 * C461 + C20199 * C468 + C20205 * C865 + C20200 * C874 +
             C20206 * C869 + C20201 * C882 + C20207 * C3299 + C20202 * C3304) *
                C459 -
            ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
              C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                 C51036 +
             (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
              C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                 C458) +
            (C20204 * C469 + C20199 * C479 + C20205 * C875 + C20200 * C889 +
             C20206 * C883 + C20201 * C893 + C20207 * C3305 + C20202 * C3311) *
                C50848) *
               C50906 * C50753 * C1358 +
           ((C20204 * C300 + C20199 * C309 + C20205 * C636 + C20200 * C642 +
             C20206 * C752 + C20201 * C759 + C20207 * C3017 + C20202 * C3021) *
                C458 +
            (C20204 * C308 + C20199 * C318 + C20205 * C643 + C20200 * C651 +
             C20206 * C758 + C20201 * C764 + C20207 * C3022 + C20202 * C3026) *
                C51036 -
            (C20207 * C3301 + C20202 * C3308 + C20206 * C3299 + C20201 * C3304 +
             C20205 * C869 + C20200 * C882 + C20204 * C865 + C20199 * C874) *
                C459 -
            (C20207 * C3309 + C20202 * C3313 + C20206 * C3305 + C20201 * C3311 +
             C20205 * C883 + C20200 * C893 + C20204 * C875 + C20199 * C889) *
                C50848) *
               C50906 * C50753 * C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C458 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C51036 -
             (C17374 * C864 + C50942 * C872 + C17373 * C460 + C17368 * C466) *
                 C459 -
             (C17374 * C873 + C50942 * C888 + C17373 * C467 + C17368 * C478) *
                 C50848) *
                C50906 * C17370 +
            ((C17408 + C17409) * C458 + (C17410 + C17411) * C51036 -
             (C17796 + C17797) * C459 - (C17798 + C17799) * C50848) *
                C50906 * C17371 +
            C17815 * C17372) *
               C1358 +
           (((C17373 * C864 + C17368 * C872 + C17374 * C868 + C50942 * C880) *
                 C459 -
             ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                  C51036 +
              (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                  C458) +
             (C17373 * C873 + C17368 * C888 + C17374 * C881 + C50942 * C892) *
                 C50848) *
                C50906 * C17370 +
            ((C19146 + C19147) * C459 -
             ((C17610 + C17611) * C51036 + (C17612 + C17613) * C458) +
             (C19148 + C19149) * C50848) *
                C50906 * C17371 +
            ((C19150 + C19151) * C459 - (C17618 * C51036 + C17619 * C458) +
             (C19152 + C19153) * C50848) *
                C50906 * C17372) *
               C50822) *
              C1464 +
          ((((C17797 + C17796) * C459 -
             ((C17411 + C17410) * C51036 + (C17409 + C17408) * C458) +
             (C17799 + C17798) * C50848) *
                C50906 * C17370 +
            ((C17802 + C17801) * C459 -
             ((C17415 + C17414) * C51036 + (C17413 + C17412) * C458) +
             (C17804 + C17803) * C50848) *
                C50906 * C17371 +
            ((C17805 + C17806) * C459 - (C17426 * C51036 + C17427 * C458) +
             (C17807 + C17808) * C50848) *
                C50906 * C17372) *
               C1358 +
           (((C17613 + C17612) * C458 + (C17611 + C17610) * C51036 -
             (C19147 + C19146) * C459 - (C19149 + C19148) * C50848) *
                C50906 * C17370 +
            ((C17609 + C17608) * C458 + (C17607 + C17606) * C51036 -
             (C19151 + C19150) * C459 - (C19153 + C19152) * C50848) *
                C50906 * C17371 +
            ((C17614 + C17615) * C458 + (C17616 + C17617) * C51036 -
             (C17374 * C871 + C50942 * C886 + C17373 * C867 + C17368 * C878) *
                 C459 -
             (C17374 * C887 + C50942 * C895 + C17373 * C879 + C17368 * C891) *
                 C50848) *
                C50906 * C17372) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C458 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C51036 -
             (C22329 + C22330) * C459 - (C22331 + C22332) * C50848) *
                C5336 +
            ((C22330 + C22329) * C458 + (C22332 + C22331) * C51036 -
             (C22333 + C22334) * C459 - (C22335 + C22336) * C50848) *
                C5337 +
            (C22921 * C458 + C22922 * C51036 - C23215 * C459 -
             C23216 * C50848) *
                C5338) *
               C50753 * C1358 +
           (((C22759 + C22760) * C459 -
             ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                  C51036 +
              (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                  C458) +
             (C22761 + C22762) * C50848) *
                C5336 +
            ((C22763 + C22764) * C459 -
             ((C22762 + C22761) * C51036 + (C22760 + C22759) * C458) +
             (C22765 + C22766) * C50848) *
                C5337 +
            ((C23110 + C23109) * C459 - (C23100 * C51036 + C23099 * C458) +
             (C23112 + C23111) * C50848) *
                C5338) *
               C50753 * C50822) *
              C1464 +
          ((((C17797 + C17796) * C459 -
             ((C17411 + C17410) * C51036 + (C17409 + C17408) * C458) +
             (C17799 + C17798) * C50848) *
                C5336 +
            ((C18392 + C18393) * C459 -
             ((C17798 + C17799) * C51036 + (C17796 + C17797) * C458) +
             (C18394 + C18395) * C50848) *
                C5337 +
            ((C22946 + C22945) * C459 - (C22932 * C51036 + C22931 * C458) +
             (C22948 + C22947) * C50848) *
                C5338) *
               C50753 * C1358 +
           (((C17613 + C17612) * C458 + (C17611 + C17610) * C51036 -
             (C19147 + C19146) * C459 - (C19149 + C19148) * C50848) *
                C5336 +
            ((C19146 + C19147) * C458 + (C19148 + C19149) * C51036 -
             (C23723 + C23724) * C459 - (C23725 + C23726) * C50848) *
                C5337 +
            ((C23724 + C23723) * C458 + (C23726 + C23725) * C51036 -
             (C17374 * C3744 + C50942 * C3750 + C17373 * C3745 +
              C17368 * C3751) *
                 C459 -
             (C17374 * C3752 + C50942 * C3756 + C17373 * C3753 +
              C17368 * C3757) *
                 C50848) *
                C5338) *
               C50753 * C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
             C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
                C1730 +
            (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
             C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
                C1728 -
            (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
             C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
                C1731 -
            (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
             C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
                C50848) *
               C50906 * C50753 * C1358 +
           ((C20204 * C864 + C20199 * C872 + C20205 * C868 + C20200 * C880 +
             C20206 * C3298 + C20201 * C3302 + C20207 * C3300 +
             C20202 * C3306) *
                C1731 -
            ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
              C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                 C1728 +
             (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
              C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                 C1730) +
            (C20204 * C873 + C20199 * C888 + C20205 * C881 + C20200 * C892 +
             C20206 * C3303 + C20201 * C3310 + C20207 * C3307 +
             C20202 * C3312) *
                C50848) *
               C50906 * C50753 * C50822) *
              C51027 +
          (((C20204 * C461 + C20199 * C468 + C20205 * C865 + C20200 * C874 +
             C20206 * C869 + C20201 * C882 + C20207 * C3299 + C20202 * C3304) *
                C1731 -
            ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
              C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                 C1728 +
             (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
              C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                 C1730) +
            (C20204 * C469 + C20199 * C479 + C20205 * C875 + C20200 * C889 +
             C20206 * C883 + C20201 * C893 + C20207 * C3305 + C20202 * C3311) *
                C50848) *
               C50906 * C50753 * C1358 +
           ((C20204 * C300 + C20199 * C309 + C20205 * C636 + C20200 * C642 +
             C20206 * C752 + C20201 * C759 + C20207 * C3017 + C20202 * C3021) *
                C1730 +
            (C20204 * C308 + C20199 * C318 + C20205 * C643 + C20200 * C651 +
             C20206 * C758 + C20201 * C764 + C20207 * C3022 + C20202 * C3026) *
                C1728 -
            (C20207 * C3301 + C20202 * C3308 + C20206 * C3299 + C20201 * C3304 +
             C20205 * C869 + C20200 * C882 + C20204 * C865 + C20199 * C874) *
                C1731 -
            (C20207 * C3309 + C20202 * C3313 + C20206 * C3305 + C20201 * C3311 +
             C20205 * C883 + C20200 * C893 + C20204 * C875 + C20199 * C889) *
                C50848) *
               C50906 * C50753 * C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C1730 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C1728 -
             (C17374 * C864 + C50942 * C872 + C17373 * C460 + C17368 * C466) *
                 C1731 -
             (C17374 * C873 + C50942 * C888 + C17373 * C467 + C17368 * C478) *
                 C50848) *
                C50906 * C17370 +
            ((C17408 + C17409) * C1730 + (C17410 + C17411) * C1728 -
             (C17796 + C17797) * C1731 - (C17798 + C17799) * C50848) *
                C50906 * C17371 +
            C19307 * C17372) *
               C1358 +
           (((C17373 * C864 + C17368 * C872 + C17374 * C868 + C50942 * C880) *
                 C1731 -
             ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                  C1728 +
              (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                  C1730) +
             (C17373 * C873 + C17368 * C888 + C17374 * C881 + C50942 * C892) *
                 C50848) *
                C50906 * C17370 +
            ((C19146 + C19147) * C1731 -
             ((C17610 + C17611) * C1728 + (C17612 + C17613) * C1730) +
             (C19148 + C19149) * C50848) *
                C50906 * C17371 +
            ((C19150 + C19151) * C1731 - (C17618 * C1728 + C17619 * C1730) +
             (C19152 + C19153) * C50848) *
                C50906 * C17372) *
               C50822) *
              C51027 +
          ((((C17797 + C17796) * C1731 -
             ((C17411 + C17410) * C1728 + (C17409 + C17408) * C1730) +
             (C17799 + C17798) * C50848) *
                C50906 * C17370 +
            ((C17802 + C17801) * C1731 -
             ((C17415 + C17414) * C1728 + (C17413 + C17412) * C1730) +
             (C17804 + C17803) * C50848) *
                C50906 * C17371 +
            ((C17805 + C17806) * C1731 - (C17426 * C1728 + C17427 * C1730) +
             (C17807 + C17808) * C50848) *
                C50906 * C17372) *
               C1358 +
           (((C17613 + C17612) * C1730 + (C17611 + C17610) * C1728 -
             (C19147 + C19146) * C1731 - (C19149 + C19148) * C50848) *
                C50906 * C17370 +
            ((C17609 + C17608) * C1730 + (C17607 + C17606) * C1728 -
             (C19151 + C19150) * C1731 - (C19153 + C19152) * C50848) *
                C50906 * C17371 +
            ((C17614 + C17615) * C1730 + (C17616 + C17617) * C1728 -
             (C17374 * C871 + C50942 * C886 + C17373 * C867 + C17368 * C878) *
                 C1731 -
             (C17374 * C887 + C50942 * C895 + C17373 * C879 + C17368 * C891) *
                 C50848) *
                C50906 * C17372) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C1730 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C1728 -
             (C22329 + C22330) * C1731 - (C22331 + C22332) * C50848) *
                C5336 +
            ((C22330 + C22329) * C1730 + (C22332 + C22331) * C1728 -
             (C22333 + C22334) * C1731 - (C22335 + C22336) * C50848) *
                C5337 +
            (C22921 * C1730 + C22922 * C1728 - C23215 * C1731 -
             C23216 * C50848) *
                C5338) *
               C50753 * C1358 +
           (((C22759 + C22760) * C1731 -
             ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                  C1728 +
              (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                  C1730) +
             (C22761 + C22762) * C50848) *
                C5336 +
            ((C22763 + C22764) * C1731 -
             ((C22762 + C22761) * C1728 + (C22760 + C22759) * C1730) +
             (C22765 + C22766) * C50848) *
                C5337 +
            ((C23110 + C23109) * C1731 - (C23100 * C1728 + C23099 * C1730) +
             (C23112 + C23111) * C50848) *
                C5338) *
               C50753 * C50822) *
              C51027 +
          ((((C17797 + C17796) * C1731 -
             ((C17411 + C17410) * C1728 + (C17409 + C17408) * C1730) +
             (C17799 + C17798) * C50848) *
                C5336 +
            ((C18392 + C18393) * C1731 -
             ((C17798 + C17799) * C1728 + (C17796 + C17797) * C1730) +
             (C18394 + C18395) * C50848) *
                C5337 +
            ((C22946 + C22945) * C1731 - (C22932 * C1728 + C22931 * C1730) +
             (C22948 + C22947) * C50848) *
                C5338) *
               C50753 * C1358 +
           (((C17613 + C17612) * C1730 + (C17611 + C17610) * C1728 -
             (C19147 + C19146) * C1731 - (C19149 + C19148) * C50848) *
                C5336 +
            ((C19146 + C19147) * C1730 + (C19148 + C19149) * C1728 -
             (C23723 + C23724) * C1731 - (C23725 + C23726) * C50848) *
                C5337 +
            ((C23724 + C23723) * C1730 + (C23726 + C23725) * C1728 -
             (C17374 * C3744 + C50942 * C3750 + C17373 * C3745 +
              C17368 * C3751) *
                 C1731 -
             (C17374 * C3752 + C50942 * C3756 + C17373 * C3753 +
              C17368 * C3757) *
                 C50848) *
                C5338) *
               C50753 * C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C1730 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C1728 -
           (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
            C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
               C1731 -
           (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
            C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
               C50848) *
              C50906 * C50753 * C51081 +
          ((C20204 * C864 + C20199 * C872 + C20205 * C868 + C20200 * C880 +
            C20206 * C3298 + C20201 * C3302 + C20207 * C3300 + C20202 * C3306) *
               C1731 -
           ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
             C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                C1728 +
            (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
             C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                C1730) +
           (C20204 * C873 + C20199 * C888 + C20205 * C881 + C20200 * C892 +
            C20206 * C3303 + C20201 * C3310 + C20207 * C3307 + C20202 * C3312) *
               C50848) *
              C50906 * C50753 * C51068 +
          ((C20204 * C635 + C20199 * C640 + C20205 * C753 + C20200 * C761 +
            C20206 * C3016 + C20201 * C3019 + C20207 * C3145 + C20202 * C3149) *
               C1730 +
           (C20204 * C641 + C20199 * C650 + C20205 * C760 + C20200 * C765 +
            C20206 * C3020 + C20201 * C3025 + C20207 * C3148 + C20202 * C3151) *
               C1728 -
           (C20207 * C20670 + C20202 * C20671 + C20206 * C3300 +
            C20201 * C3306 + C20205 * C3298 + C20200 * C3302 + C20204 * C868 +
            C20199 * C880) *
               C1731 -
           (C20207 * C20672 + C20202 * C20673 + C20206 * C3307 +
            C20201 * C3312 + C20205 * C3303 + C20200 * C3310 + C20204 * C881 +
            C20199 * C892) *
               C50848) *
              C50906 * C50753 * C1463) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C1730 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C1728 -
            (C17374 * C864 + C50942 * C872 + C17373 * C460 + C17368 * C466) *
                C1731 -
            (C17374 * C873 + C50942 * C888 + C17373 * C467 + C17368 * C478) *
                C50848) *
               C50906 * C17370 +
           ((C17408 + C17409) * C1730 + (C17410 + C17411) * C1728 -
            (C17796 + C17797) * C1731 - (C17798 + C17799) * C50848) *
               C50906 * C17371 +
           C19307 * C17372) *
              C51081 +
          (((C17373 * C864 + C17368 * C872 + C17374 * C868 + C50942 * C880) *
                C1731 -
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C1728 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C1730) +
            (C17373 * C873 + C17368 * C888 + C17374 * C881 + C50942 * C892) *
                C50848) *
               C50906 * C17370 +
           ((C19146 + C19147) * C1731 -
            ((C17610 + C17611) * C1728 + (C17612 + C17613) * C1730) +
            (C19148 + C19149) * C50848) *
               C50906 * C17371 +
           ((C19150 + C19151) * C1731 - (C17618 * C1728 + C17619 * C1730) +
            (C19152 + C19153) * C50848) *
               C50906 * C17372) *
              C51068 +
          (((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                C1730 +
            (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                C1728 -
            (C17374 * C3298 + C50942 * C3302 + C17373 * C868 + C17368 * C880) *
                C1731 -
            (C17374 * C3303 + C50942 * C3310 + C17373 * C881 + C17368 * C892) *
                C50848) *
               C50906 * C17370 +
           ((C17978 + C17979) * C1730 + (C17980 + C17981) * C1728 -
            (C17374 * C3299 + C50942 * C3304 + C17373 * C869 + C17368 * C882) *
                C1731 -
            (C17374 * C3305 + C50942 * C3311 + C17373 * C883 + C17368 * C893) *
                C50848) *
               C50906 * C17371 +
           ((C17982 + C17983) * C1730 + (C17984 + C17985) * C1728 -
            (C17374 * C4244 + C50942 * C4245 + C17373 * C870 + C17368 * C884) *
                C1731 -
            (C17374 * C4246 + C50942 * C4247 + C17373 * C885 + C17368 * C894) *
                C50848) *
               C50906 * C17372) *
              C1463) *
         C50774) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C1730 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C1728 -
            (C22329 + C22330) * C1731 - (C22331 + C22332) * C50848) *
               C5336 +
           ((C22330 + C22329) * C1730 + (C22332 + C22331) * C1728 -
            (C22333 + C22334) * C1731 - (C22335 + C22336) * C50848) *
               C5337 +
           (C22921 * C1730 + C22922 * C1728 - C23215 * C1731 -
            C23216 * C50848) *
               C5338) *
              C50753 * C51081 +
          (((C22759 + C22760) * C1731 -
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C1728 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C1730) +
            (C22761 + C22762) * C50848) *
               C5336 +
           ((C22763 + C22764) * C1731 -
            ((C22762 + C22761) * C1728 + (C22760 + C22759) * C1730) +
            (C22765 + C22766) * C50848) *
               C5337 +
           ((C23110 + C23109) * C1731 - (C23100 * C1728 + C23099 * C1730) +
            (C23112 + C23111) * C50848) *
               C5338) *
              C50753 * C51068 +
          (((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                C1730 +
            (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                C1728 -
            (C22767 + C22768) * C1731 - (C22769 + C22770) * C50848) *
               C5336 +
           ((C22768 + C22767) * C1730 + (C22770 + C22769) * C1728 -
            (C22771 + C22772) * C1731 - (C22773 + C22774) * C50848) *
               C5337 +
           ((C22772 + C22771) * C1730 + (C22774 + C22773) * C1728 -
            (C17374 * C20940 + C50942 * C20941 + C17373 * C3742 +
             C17368 * C3746) *
                C1731 -
            (C17374 * C20942 + C50942 * C20943 + C17373 * C3748 +
             C17368 * C3754) *
                C50848) *
               C5338) *
              C50753 * C1463) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C1999 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C51082 -
           (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
            C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
               C2000 -
           (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
            C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
               C51071 +
           (C20204 * C1000 + C20199 * C1005 + C20205 * C1154 + C20200 * C1158 +
            C20206 * C3460 + C20201 * C3463 + C20207 * C3636 + C20202 * C3638) *
               C2001 +
           (C20204 * C1006 + C20199 * C1015 + C20205 * C1159 + C20200 * C1166 +
            C20206 * C3464 + C20201 * C3469 + C20207 * C3639 + C20202 * C3642) *
               C1998) *
              C50906 * C50753 * C1358 +
          ((C20204 * C864 + C20199 * C872 + C20205 * C868 + C20200 * C880 +
            C20206 * C3298 + C20201 * C3302 + C20207 * C3300 + C20202 * C3306) *
               C2000 -
           ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
             C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                C51082 +
            (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
             C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                C1999) +
           (C20204 * C873 + C20199 * C888 + C20205 * C881 + C20200 * C892 +
            C20206 * C3303 + C20201 * C3310 + C20207 * C3307 + C20202 * C3312) *
               C51071 -
           (C20207 * C20870 + C20202 * C20871 + C20206 * C3636 +
            C20201 * C3638 + C20205 * C3460 + C20200 * C3463 + C20204 * C1154 +
            C20199 * C1158) *
               C2001 -
           (C20207 * C20872 + C20202 * C20873 + C20206 * C3639 +
            C20201 * C3642 + C20205 * C3464 + C20200 * C3469 + C20204 * C1159 +
            C20199 * C1166) *
               C1998) *
              C50906 * C50753 * C50822) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C1999 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C51082 -
            (C17374 * C864 + C50942 * C872 + C17373 * C460 + C17368 * C466) *
                C2000 -
            (C17374 * C873 + C50942 * C888 + C17373 * C467 + C17368 * C478) *
                C51071 +
            (C17373 * C1000 + C17368 * C1005 + C17374 * C1154 +
             C50942 * C1158) *
                C2001 +
            (C17373 * C1006 + C17368 * C1015 + C17374 * C1159 +
             C50942 * C1166) *
                C1998) *
               C50906 * C17370 +
           ((C17408 + C17409) * C1999 + (C17410 + C17411) * C51082 -
            (C17796 + C17797) * C2000 - (C17798 + C17799) * C51071 +
            (C18392 + C18393) * C2001 + (C18394 + C18395) * C1998) *
               C50906 * C17371 +
           (C17424 * C1999 + C17425 * C51082 - C17809 * C2000 -
            C17810 * C51071 + (C18396 + C18397) * C2001 +
            (C18398 + C18399) * C1998) *
               C50906 * C17372) *
              C1358 +
          (((C17373 * C864 + C17368 * C872 + C17374 * C868 + C50942 * C880) *
                C2000 -
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C51082 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C1999) +
            (C17373 * C873 + C17368 * C888 + C17374 * C881 + C50942 * C892) *
                C51071 -
            (C17374 * C3460 + C50942 * C3463 + C17373 * C1154 +
             C17368 * C1158) *
                C2001 -
            (C17374 * C3464 + C50942 * C3469 + C17373 * C1159 +
             C17368 * C1166) *
                C1998) *
               C50906 * C17370 +
           ((C19146 + C19147) * C2000 -
            ((C17610 + C17611) * C51082 + (C17612 + C17613) * C1999) +
            (C19148 + C19149) * C51071 -
            (C17374 * C3461 + C50942 * C3465 + C17373 * C1155 +
             C17368 * C1160) *
                C2001 -
            (C17374 * C3466 + C50942 * C3470 + C17373 * C1161 +
             C17368 * C1167) *
                C1998) *
               C50906 * C17371 +
           ((C19150 + C19151) * C2000 - (C17618 * C51082 + C17619 * C1999) +
            (C19152 + C19153) * C51071 -
            (C17374 * C3462 + C50942 * C3467 + C17373 * C1156 +
             C17368 * C1162) *
                C2001 -
            (C17374 * C3468 + C50942 * C3471 + C17373 * C1163 +
             C17368 * C1168) *
                C1998) *
               C50906 * C17372) *
              C50822) *
         C50774) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C1999 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C51082 -
            (C22329 + C22330) * C2000 - (C22331 + C22332) * C51071 +
            C22921 * C2001 + C22922 * C1998) *
               C5336 +
           ((C22330 + C22329) * C1999 + (C22332 + C22331) * C51082 -
            (C22333 + C22334) * C2000 - (C22335 + C22336) * C51071 +
            (C22941 + C22942) * C2001 + (C22943 + C22944) * C1998) *
               C5337 +
           (C22921 * C1999 + C22922 * C51082 - C23215 * C2000 -
            C23216 * C51071 + (C23226 + C23225) * C2001 +
            (C23228 + C23227) * C1998) *
               C5338) *
              C50753 * C1358 +
          (((C22759 + C22760) * C2000 -
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C51082 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C1999) +
            (C22761 + C22762) * C51071 - C23099 * C2001 - C23100 * C1998) *
               C5336 +
           ((C22763 + C22764) * C2000 -
            ((C22762 + C22761) * C51082 + (C22760 + C22759) * C1999) +
            (C22765 + C22766) * C51071 - (C23109 + C23110) * C2001 -
            (C23111 + C23112) * C1998) *
               C5337 +
           ((C23110 + C23109) * C2000 - (C23100 * C51082 + C23099 * C1999) +
            (C23112 + C23111) * C51071 -
            (C17374 * C23094 + C50942 * C23095 + C17373 * C6461 +
             C17368 * C6463) *
                C2001 -
            (C17374 * C23096 + C50942 * C23097 + C17373 * C6464 +
             C17368 * C6467) *
                C1998) *
               C5338) *
              C50753 * C50822) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C17373 * C119 + C17368 * C126 + C17374 * C301 +
                 C50942 * C311) *
                    C118 +
                (C17373 * C127 + C17368 * C140 + C17374 * C310 +
                 C50942 * C319) *
                    C50836) *
                   C50906 * C17370 +
               ((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) *
                   C50906 * C17371 +
               C17434 * C17372) *
                  C50806 * C113 -
              (C17435 * C17372 +
               ((C17415 + C17414) * C50836 + (C17413 + C17412) * C118) *
                   C50906 * C17371 +
               ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) *
                   C50906 * C17370) *
                  C50806 * C114 +
              (C17434 * C17370 +
               ((C17419 + C17418) * C118 + (C17417 + C17416) * C50836) *
                   C50906 * C17371 +
               ((C17420 + C17421) * C118 + (C17422 + C17423) * C50836) *
                   C50906 * C17372) *
                  C50806 * C115 -
              (((C17374 * C314 + C50942 * C321 + C17373 * C137 +
                 C17368 * C145) *
                    C50836 +
                (C17374 * C303 + C50942 * C315 + C17373 * C124 +
                 C17368 * C136) *
                    C118) *
                   C50906 * C17372 +
               ((C17423 + C17422) * C50836 + (C17421 + C17420) * C118) *
                   C50906 * C17371 +
               C17435 * C17370) *
                  C50806 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C17373 * C119 + C17368 * C126 + C17374 * C301 +
                  C50942 * C311) *
                     C118 +
                 (C17373 * C127 + C17368 * C140 + C17374 * C310 +
                  C50942 * C319) *
                     C50836) *
                    C50906 * C17370 +
                ((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) *
                    C50906 * C17371 +
                C17434 * C17372) *
                   C630 -
               (C17623 * C17372 +
                ((C17610 + C17611) * C50836 + (C17612 + C17613) * C118) *
                    C50906 * C17371 +
                ((C17374 * C641 + C50942 * C650 + C17373 * C310 +
                  C17368 * C319) *
                     C50836 +
                 (C17374 * C635 + C50942 * C640 + C17373 * C301 +
                  C17368 * C311) *
                     C118) *
                    C50906 * C17370) *
                   C631 +
               (((C17373 * C635 + C17368 * C640 + C17374 * C753 +
                  C50942 * C761) *
                     C118 +
                 (C17373 * C641 + C17368 * C650 + C17374 * C760 +
                  C50942 * C765) *
                     C50836) *
                    C50906 * C17370 +
                ((C17978 + C17979) * C118 + (C17980 + C17981) * C50836) *
                    C50906 * C17371 +
                ((C17982 + C17983) * C118 + (C17984 + C17985) * C50836) *
                    C50906 * C17372) *
                   C632) *
                  C51027 +
              ((((C17613 + C17612) * C118 + (C17611 + C17610) * C50836) *
                    C50906 * C17370 +
                ((C17609 + C17608) * C118 + (C17607 + C17606) * C50836) *
                    C50906 * C17371 +
                ((C17614 + C17615) * C118 + (C17616 + C17617) * C50836) *
                    C50906 * C17372) *
                   C631 -
               (C17435 * C17372 +
                ((C17415 + C17414) * C50836 + (C17413 + C17412) * C118) *
                    C50906 * C17371 +
                ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) *
                    C50906 * C17370) *
                   C630 -
               (((C17374 * C754 + C50942 * C762 + C17373 * C647 +
                  C17368 * C653) *
                     C50836 +
                 (C17374 * C750 + C50942 * C755 + C17373 * C638 +
                  C17368 * C646) *
                     C118) *
                    C50906 * C17372 +
                ((C17985 + C17984) * C50836 + (C17983 + C17982) * C118) *
                    C50906 * C17371 +
                ((C17981 + C17980) * C50836 + (C17979 + C17978) * C118) *
                    C50906 * C17370) *
                   C632) *
                  C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C997 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C994 -
            (C17374 * C864 + C50942 * C872 + C17373 * C460 + C17368 * C466) *
                C998 -
            (C17374 * C873 + C50942 * C888 + C17373 * C467 + C17368 * C478) *
                C995 +
            (C17373 * C1000 + C17368 * C1005 + C17374 * C1154 +
             C50942 * C1158) *
                C999 +
            (C17373 * C1006 + C17368 * C1015 + C17374 * C1159 +
             C50942 * C1166) *
                C996) *
               C50906 * C17370 +
           ((C17408 + C17409) * C997 + (C17410 + C17411) * C994 -
            (C17796 + C17797) * C998 - (C17798 + C17799) * C995 +
            (C18392 + C18393) * C999 + (C18394 + C18395) * C996) *
               C50906 * C17371 +
           (C17424 * C997 + C17425 * C994 - C17809 * C998 - C17810 * C995 +
            (C18396 + C18397) * C999 + (C18398 + C18399) * C996) *
               C50906 * C17372) *
              C50806 * C51027 +
          (((C17797 + C17796) * C998 -
            ((C17411 + C17410) * C994 + (C17409 + C17408) * C997) +
            (C17799 + C17798) * C995 - (C18393 + C18392) * C999 -
            (C18395 + C18394) * C996) *
               C50906 * C17370 +
           ((C17802 + C17801) * C998 -
            ((C17415 + C17414) * C994 + (C17413 + C17412) * C997) +
            (C17804 + C17803) * C995 - (C18397 + C18396) * C999 -
            (C18399 + C18398) * C996) *
               C50906 * C17371 +
           ((C17805 + C17806) * C998 - (C17426 * C994 + C17427 * C997) +
            (C17807 + C17808) * C995 -
            (C17374 * C1157 + C50942 * C1164 + C17373 * C1003 +
             C17368 * C1011) *
                C999 -
            (C17374 * C1165 + C50942 * C1169 + C17373 * C1012 +
             C17368 * C1018) *
                C996) *
               C50906 * C17372) *
              C50806 * C50779)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C118 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C50836) *
              C50906 * C50753 * C50806 * C113 -
          ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
            C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
               C50836 +
           (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
            C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
               C118) *
              C50906 * C50753 * C50806 * C114 +
          ((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C307 +
            C20206 * C637 + C20201 * C644 + C20207 * C751 + C20202 * C757) *
               C118 +
           (C20204 * C131 + C20199 * C142 + C20205 * C306 + C20200 * C317 +
            C20206 * C645 + C20201 * C652 + C20207 * C756 + C20202 * C763) *
               C50836) *
              C50906 * C50753 * C50806 * C115 -
          ((C20207 * C754 + C20202 * C762 + C20206 * C647 + C20201 * C653 +
            C20205 * C304 + C20200 * C316 + C20204 * C133 + C20199 * C143) *
               C50836 +
           (C20207 * C750 + C20202 * C755 + C20206 * C638 + C20201 * C646 +
            C20205 * C298 + C20200 * C305 + C20204 * C122 + C20199 * C132) *
               C118) *
              C50906 * C50753 * C50806 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
             C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
                C118 +
            (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
             C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
                C50836) *
               C50906 * C50753 * C630 -
           ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
             C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                C50836 +
            (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
             C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                C118) *
               C50906 * C50753 * C631 +
           ((C20204 * C635 + C20199 * C640 + C20205 * C753 + C20200 * C761 +
             C20206 * C3016 + C20201 * C3019 + C20207 * C3145 +
             C20202 * C3149) *
                C118 +
            (C20204 * C641 + C20199 * C650 + C20205 * C760 + C20200 * C765 +
             C20206 * C3020 + C20201 * C3025 + C20207 * C3148 +
             C20202 * C3151) *
                C50836) *
               C50906 * C50753 * C632) *
              C51027 +
          (((C20204 * C300 + C20199 * C309 + C20205 * C636 + C20200 * C642 +
             C20206 * C752 + C20201 * C759 + C20207 * C3017 + C20202 * C3021) *
                C118 +
            (C20204 * C308 + C20199 * C318 + C20205 * C643 + C20200 * C651 +
             C20206 * C758 + C20201 * C764 + C20207 * C3022 + C20202 * C3026) *
                C50836) *
               C50906 * C50753 * C631 -
           ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
             C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                C50836 +
            (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
             C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                C118) *
               C50906 * C50753 * C630 -
           ((C20207 * C3146 + C20202 * C3150 + C20206 * C3022 + C20201 * C3026 +
             C20205 * C758 + C20200 * C764 + C20204 * C643 + C20199 * C651) *
                C50836 +
            (C20207 * C3144 + C20202 * C3147 + C20206 * C3017 + C20201 * C3021 +
             C20205 * C752 + C20200 * C759 + C20204 * C636 + C20199 * C642) *
                C118) *
               C50906 * C50753 * C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C997 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C994 -
           (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
            C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
               C998 -
           (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
            C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
               C995 +
           (C20204 * C1000 + C20199 * C1005 + C20205 * C1154 + C20200 * C1158 +
            C20206 * C3460 + C20201 * C3463 + C20207 * C3636 + C20202 * C3638) *
               C999 +
           (C20204 * C1006 + C20199 * C1015 + C20205 * C1159 + C20200 * C1166 +
            C20206 * C3464 + C20201 * C3469 + C20207 * C3639 + C20202 * C3642) *
               C996) *
              C50906 * C50753 * C50806 * C51027 +
          ((C20204 * C461 + C20199 * C468 + C20205 * C865 + C20200 * C874 +
            C20206 * C869 + C20201 * C882 + C20207 * C3299 + C20202 * C3304) *
               C998 -
           ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
             C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                C994 +
            (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
             C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                C997) +
           (C20204 * C469 + C20199 * C479 + C20205 * C875 + C20200 * C889 +
            C20206 * C883 + C20201 * C893 + C20207 * C3305 + C20202 * C3311) *
               C995 -
           (C20207 * C3637 + C20202 * C3640 + C20206 * C3461 + C20201 * C3465 +
            C20205 * C1155 + C20200 * C1160 + C20204 * C1001 + C20199 * C1007) *
               C999 -
           (C20207 * C3641 + C20202 * C3643 + C20206 * C3466 + C20201 * C3470 +
            C20205 * C1161 + C20200 * C1167 + C20204 * C1008 + C20199 * C1016) *
               C996) *
              C50906 * C50753 * C50806 * C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C118 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C50836) *
               C5336 +
           ((C17373 * C460 + C17368 * C466 + C17374 * C864 + C50942 * C872) *
                C118 +
            (C17373 * C467 + C17368 * C478 + C17374 * C873 + C50942 * C888) *
                C50836) *
               C5337 +
           ((C17373 * C1000 + C17368 * C1005 + C17374 * C1154 +
             C50942 * C1158) *
                C118 +
            (C17373 * C1006 + C17368 * C1015 + C17374 * C1159 +
             C50942 * C1166) *
                C50836) *
               C5338) *
              C50753 * C50806 * C113 -
          (((C18395 + C18394) * C50836 + (C18393 + C18392) * C118) * C5338 +
           ((C17798 + C17799) * C50836 + (C17796 + C17797) * C118) * C5337 +
           ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C5336) *
              C50753 * C50806 * C114 +
          (C17432 * C5336 +
           ((C17802 + C17801) * C118 + (C17804 + C17803) * C50836) * C5337 +
           ((C18396 + C18397) * C118 + (C18398 + C18399) * C50836) * C5338) *
              C50753 * C50806 * C115 -
          (((C17374 * C1165 + C50942 * C1169 + C17373 * C1012 +
             C17368 * C1018) *
                C50836 +
            (C17374 * C1157 + C50942 * C1164 + C17373 * C1003 +
             C17368 * C1011) *
                C118) *
               C5338 +
           ((C17808 + C17807) * C50836 + (C17806 + C17805) * C118) * C5337 +
           C17433 * C5336) *
              C50753 * C50806 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C50836) *
                C5336 +
            ((C22330 + C22329) * C118 + (C22332 + C22331) * C50836) * C5337 +
            ((C22334 + C22333) * C118 + (C22336 + C22335) * C50836) * C5338) *
               C50753 * C630 -
           (((C17374 * C3464 + C50942 * C3469 + C17373 * C1159 +
              C17368 * C1166) *
                 C50836 +
             (C17374 * C3460 + C50942 * C3463 + C17373 * C1154 +
              C17368 * C1158) *
                 C118) *
                C5338 +
            ((C17374 * C881 + C50942 * C892 + C17373 * C873 + C17368 * C888) *
                 C50836 +
             (C17374 * C868 + C50942 * C880 + C17373 * C864 + C17368 * C872) *
                 C118) *
                C5337 +
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C50836 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C118) *
                C5336) *
               C50753 * C631 +
           (((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                 C118 +
             (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                 C50836) *
                C5336 +
            ((C17373 * C868 + C17368 * C880 + C17374 * C3298 + C50942 * C3302) *
                 C118 +
             (C17373 * C881 + C17368 * C892 + C17374 * C3303 + C50942 * C3310) *
                 C50836) *
                C5337 +
            ((C17373 * C3460 + C17368 * C3463 + C17374 * C3636 +
              C50942 * C3638) *
                 C118 +
             (C17373 * C3464 + C17368 * C3469 + C17374 * C3639 +
              C50942 * C3642) *
                 C50836) *
                C5338) *
               C50753 * C632) *
              C51027 +
          ((((C17613 + C17612) * C118 + (C17611 + C17610) * C50836) * C5336 +
            ((C19146 + C19147) * C118 + (C19148 + C19149) * C50836) * C5337 +
            ((C17373 * C1155 + C17368 * C1160 + C17374 * C3461 +
              C50942 * C3465) *
                 C118 +
             (C17373 * C1161 + C17368 * C1167 + C17374 * C3466 +
              C50942 * C3470) *
                 C50836) *
                C5338) *
               C50753 * C631 -
           (((C18395 + C18394) * C50836 + (C18393 + C18392) * C118) * C5338 +
            ((C17798 + C17799) * C50836 + (C17796 + C17797) * C118) * C5337 +
            ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C5336) *
               C50753 * C630 -
           (((C17374 * C3641 + C50942 * C3643 + C17373 * C3466 +
              C17368 * C3470) *
                 C50836 +
             (C17374 * C3637 + C50942 * C3640 + C17373 * C3461 +
              C17368 * C3465) *
                 C118) *
                C5338 +
            ((C17374 * C3305 + C50942 * C3311 + C17373 * C883 + C17368 * C893) *
                 C50836 +
             (C17374 * C3299 + C50942 * C3304 + C17373 * C869 + C17368 * C882) *
                 C118) *
                C5337 +
            ((C17981 + C17980) * C50836 + (C17979 + C17978) * C118) * C5336) *
               C50753 * C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C997 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C994 -
            (C22329 + C22330) * C998 - (C22331 + C22332) * C995 +
            C22921 * C999 + C22922 * C996) *
               C5336 +
           ((C22330 + C22329) * C997 + (C22332 + C22331) * C994 -
            (C22333 + C22334) * C998 - (C22335 + C22336) * C995 +
            (C22941 + C22942) * C999 + (C22943 + C22944) * C996) *
               C5337 +
           (C22921 * C997 + C22922 * C994 - (C22942 + C22941) * C998 -
            (C22944 + C22943) * C995 +
            (C17373 * C6279 + C17368 * C6282 + C17374 * C6461 +
             C50942 * C6463) *
                C999 +
            (C17373 * C6283 + C17368 * C6288 + C17374 * C6464 +
             C50942 * C6467) *
                C996) *
               C5338) *
              C50753 * C50806 * C51027 +
          (((C17797 + C17796) * C998 -
            ((C17411 + C17410) * C994 + (C17409 + C17408) * C997) +
            (C17799 + C17798) * C995 - C22931 * C999 - C22932 * C996) *
               C5336 +
           ((C18392 + C18393) * C998 -
            ((C17798 + C17799) * C994 + (C17796 + C17797) * C997) +
            (C18394 + C18395) * C995 - (C22945 + C22946) * C999 -
            (C22947 + C22948) * C996) *
               C5337 +
           ((C22946 + C22945) * C998 - (C22932 * C994 + C22931 * C997) +
            (C22948 + C22947) * C995 -
            (C17374 * C6462 + C50942 * C6465 + C17373 * C6280 +
             C17368 * C6284) *
                C999 -
            (C17374 * C6466 + C50942 * C6468 + C17373 * C6285 +
             C17368 * C6289) *
                C996) *
               C5338) *
              C50753 * C50806 * C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C17373 * C119 + C17368 * C126 + C17374 * C301 +
                  C50942 * C311) *
                     C118 +
                 (C17373 * C127 + C17368 * C140 + C17374 * C310 +
                  C50942 * C319) *
                     C50836) *
                    C50906 * C17370 +
                ((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) *
                    C50906 * C17371 +
                C17434 * C17372) *
                   C51034 -
               (C17623 * C17372 +
                ((C17610 + C17611) * C50836 + (C17612 + C17613) * C118) *
                    C50906 * C17371 +
                ((C17374 * C641 + C50942 * C650 + C17373 * C310 +
                  C17368 * C319) *
                     C50836 +
                 (C17374 * C635 + C50942 * C640 + C17373 * C301 +
                  C17368 * C311) *
                     C118) *
                    C50906 * C17370) *
                   C50822) *
                  C295 +
              ((((C17613 + C17612) * C118 + (C17611 + C17610) * C50836) *
                    C50906 * C17370 +
                ((C17609 + C17608) * C118 + (C17607 + C17606) * C50836) *
                    C50906 * C17371 +
                ((C17614 + C17615) * C118 + (C17616 + C17617) * C50836) *
                    C50906 * C17372) *
                   C50822 -
               (C17435 * C17372 +
                ((C17415 + C17414) * C50836 + (C17413 + C17412) * C118) *
                    C50906 * C17371 +
                ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) *
                    C50906 * C17370) *
                   C51034) *
                  C296 +
              ((C17434 * C17370 +
                ((C17419 + C17418) * C118 + (C17417 + C17416) * C50836) *
                    C50906 * C17371 +
                ((C17420 + C17421) * C118 + (C17422 + C17423) * C50836) *
                    C50906 * C17372) *
                   C51034 -
               (((C17374 * C648 + C50942 * C654 + C17373 * C313 +
                  C17368 * C320) *
                     C50836 +
                 (C17374 * C639 + C50942 * C649 + C17373 * C302 +
                  C17368 * C312) *
                     C118) *
                    C50906 * C17372 +
                ((C17617 + C17616) * C50836 + (C17615 + C17614) * C118) *
                    C50906 * C17371 +
                C17623 * C17370) *
                   C50822) *
                  C297) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C17373 * C119 + C17368 * C126 + C17374 * C301 +
                 C50942 * C311) *
                    C118 +
                (C17373 * C127 + C17368 * C140 + C17374 * C310 +
                 C50942 * C319) *
                    C50836) *
                   C50906 * C17370 +
               ((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) *
                   C50906 * C17371 +
               C17434 * C17372) *
                  C745 -
              (C17623 * C17372 +
               ((C17610 + C17611) * C50836 + (C17612 + C17613) * C118) *
                   C50906 * C17371 +
               ((C17374 * C641 + C50942 * C650 + C17373 * C310 +
                 C17368 * C319) *
                    C50836 +
                (C17374 * C635 + C50942 * C640 + C17373 * C301 +
                 C17368 * C311) *
                    C118) *
                   C50906 * C17370) *
                  C746 +
              (((C17373 * C635 + C17368 * C640 + C17374 * C753 +
                 C50942 * C761) *
                    C118 +
                (C17373 * C641 + C17368 * C650 + C17374 * C760 +
                 C50942 * C765) *
                    C50836) *
                   C50906 * C17370 +
               ((C17978 + C17979) * C118 + (C17980 + C17981) * C50836) *
                   C50906 * C17371 +
               ((C17982 + C17983) * C118 + (C17984 + C17985) * C50836) *
                   C50906 * C17372) *
                  C747 -
              (((C17374 * C3023 + C50942 * C3027 + C17373 * C756 +
                 C17368 * C763) *
                    C50836 +
                (C17374 * C3018 + C50942 * C3024 + C17373 * C751 +
                 C17368 * C757) *
                    C118) *
                   C50906 * C17372 +
               ((C17374 * C3022 + C50942 * C3026 + C17373 * C758 +
                 C17368 * C764) *
                    C50836 +
                (C17374 * C3017 + C50942 * C3021 + C17373 * C752 +
                 C17368 * C759) *
                    C118) *
                   C50906 * C17371 +
               ((C17374 * C3020 + C50942 * C3025 + C17373 * C760 +
                 C17368 * C765) *
                    C50836 +
                (C17374 * C3016 + C50942 * C3019 + C17373 * C753 +
                 C17368 * C761) *
                    C118) *
                   C50906 * C17370) *
                  C748) *
             C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C997 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C994 -
            (C17374 * C864 + C50942 * C872 + C17373 * C460 + C17368 * C466) *
                C998 -
            (C17374 * C873 + C50942 * C888 + C17373 * C467 + C17368 * C478) *
                C995 +
            (C17373 * C1000 + C17368 * C1005 + C17374 * C1154 +
             C50942 * C1158) *
                C999 +
            (C17373 * C1006 + C17368 * C1015 + C17374 * C1159 +
             C50942 * C1166) *
                C996) *
               C50906 * C17370 +
           ((C17408 + C17409) * C997 + (C17410 + C17411) * C994 -
            (C17796 + C17797) * C998 - (C17798 + C17799) * C995 +
            (C18392 + C18393) * C999 + (C18394 + C18395) * C996) *
               C50906 * C17371 +
           (C17424 * C997 + C17425 * C994 - C17809 * C998 - C17810 * C995 +
            (C18396 + C18397) * C999 + (C18398 + C18399) * C996) *
               C50906 * C17372) *
              C51034 +
          (((C17373 * C864 + C17368 * C872 + C17374 * C868 + C50942 * C880) *
                C998 -
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C994 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C997) +
            (C17373 * C873 + C17368 * C888 + C17374 * C881 + C50942 * C892) *
                C995 -
            (C17374 * C3460 + C50942 * C3463 + C17373 * C1154 +
             C17368 * C1158) *
                C999 -
            (C17374 * C3464 + C50942 * C3469 + C17373 * C1159 +
             C17368 * C1166) *
                C996) *
               C50906 * C17370 +
           ((C17373 * C865 + C17368 * C874 + C17374 * C869 + C50942 * C882) *
                C998 -
            ((C17610 + C17611) * C994 + (C17612 + C17613) * C997) +
            (C17373 * C875 + C17368 * C889 + C17374 * C883 + C50942 * C893) *
                C995 -
            (C17374 * C3461 + C50942 * C3465 + C17373 * C1155 +
             C17368 * C1160) *
                C999 -
            (C17374 * C3466 + C50942 * C3470 + C17373 * C1161 +
             C17368 * C1167) *
                C996) *
               C50906 * C17371 +
           ((C17373 * C866 + C17368 * C876 + C17374 * C870 + C50942 * C884) *
                C998 -
            (C17618 * C994 + C17619 * C997) +
            (C17373 * C877 + C17368 * C890 + C17374 * C885 + C50942 * C894) *
                C995 -
            (C17374 * C3462 + C50942 * C3467 + C17373 * C1156 +
             C17368 * C1162) *
                C999 -
            (C17374 * C3468 + C50942 * C3471 + C17373 * C1163 +
             C17368 * C1168) *
                C996) *
               C50906 * C17372) *
              C50822) *
         C50774) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
             C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
                C118 +
            (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
             C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
                C50836) *
               C50906 * C50753 * C51034 -
           ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
             C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                C50836 +
            (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
             C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                C118) *
               C50906 * C50753 * C50822) *
              C295 +
          (((C20204 * C300 + C20199 * C309 + C20205 * C636 + C20200 * C642 +
             C20206 * C752 + C20201 * C759 + C20207 * C3017 + C20202 * C3021) *
                C118 +
            (C20204 * C308 + C20199 * C318 + C20205 * C643 + C20200 * C651 +
             C20206 * C758 + C20201 * C764 + C20207 * C3022 + C20202 * C3026) *
                C50836) *
               C50906 * C50753 * C50822 -
           ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
             C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                C50836 +
            (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
             C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                C118) *
               C50906 * C50753 * C51034) *
              C296 +
          (((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C307 +
             C20206 * C637 + C20201 * C644 + C20207 * C751 + C20202 * C757) *
                C118 +
            (C20204 * C131 + C20199 * C142 + C20205 * C306 + C20200 * C317 +
             C20206 * C645 + C20201 * C652 + C20207 * C756 + C20202 * C763) *
                C50836) *
               C50906 * C50753 * C51034 -
           ((C20207 * C3023 + C20202 * C3027 + C20206 * C756 + C20201 * C763 +
             C20205 * C645 + C20200 * C652 + C20204 * C306 + C20199 * C317) *
                C50836 +
            (C20207 * C3018 + C20202 * C3024 + C20206 * C751 + C20201 * C757 +
             C20205 * C637 + C20200 * C644 + C20204 * C299 + C20199 * C307) *
                C118) *
               C50906 * C50753 * C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C118 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C50836) *
              C50906 * C50753 * C745 -
          ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
            C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
               C50836 +
           (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
            C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
               C118) *
              C50906 * C50753 * C746 +
          ((C20204 * C635 + C20199 * C640 + C20205 * C753 + C20200 * C761 +
            C20206 * C3016 + C20201 * C3019 + C20207 * C3145 + C20202 * C3149) *
               C118 +
           (C20204 * C641 + C20199 * C650 + C20205 * C760 + C20200 * C765 +
            C20206 * C3020 + C20201 * C3025 + C20207 * C3148 + C20202 * C3151) *
               C50836) *
              C50906 * C50753 * C747 -
          ((C20207 * C20569 + C20202 * C20571 + C20206 * C3148 +
            C20201 * C3151 + C20205 * C3020 + C20200 * C3025 + C20204 * C760 +
            C20199 * C765) *
               C50836 +
           (C20207 * C20568 + C20202 * C20570 + C20206 * C3145 +
            C20201 * C3149 + C20205 * C3016 + C20200 * C3019 + C20204 * C753 +
            C20199 * C761) *
               C118) *
              C50906 * C50753 * C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C997 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C994 -
           (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
            C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
               C998 -
           (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
            C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
               C995 +
           (C20204 * C1000 + C20199 * C1005 + C20205 * C1154 + C20200 * C1158 +
            C20206 * C3460 + C20201 * C3463 + C20207 * C3636 + C20202 * C3638) *
               C999 +
           (C20204 * C1006 + C20199 * C1015 + C20205 * C1159 + C20200 * C1166 +
            C20206 * C3464 + C20201 * C3469 + C20207 * C3639 + C20202 * C3642) *
               C996) *
              C50906 * C50753 * C51034 +
          ((C20204 * C864 + C20199 * C872 + C20205 * C868 + C20200 * C880 +
            C20206 * C3298 + C20201 * C3302 + C20207 * C3300 + C20202 * C3306) *
               C998 -
           ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
             C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                C994 +
            (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
             C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                C997) +
           (C20204 * C873 + C20199 * C888 + C20205 * C881 + C20200 * C892 +
            C20206 * C3303 + C20201 * C3310 + C20207 * C3307 + C20202 * C3312) *
               C995 -
           (C20207 * C20870 + C20202 * C20871 + C20206 * C3636 +
            C20201 * C3638 + C20205 * C3460 + C20200 * C3463 + C20204 * C1154 +
            C20199 * C1158) *
               C999 -
           (C20207 * C20872 + C20202 * C20873 + C20206 * C3639 +
            C20201 * C3642 + C20205 * C3464 + C20200 * C3469 + C20204 * C1159 +
            C20199 * C1166) *
               C996) *
              C50906 * C50753 * C50822) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C50836) *
                C5336 +
            ((C17373 * C460 + C17368 * C466 + C17374 * C864 + C50942 * C872) *
                 C118 +
             (C17373 * C467 + C17368 * C478 + C17374 * C873 + C50942 * C888) *
                 C50836) *
                C5337 +
            ((C17373 * C1000 + C17368 * C1005 + C17374 * C1154 +
              C50942 * C1158) *
                 C118 +
             (C17373 * C1006 + C17368 * C1015 + C17374 * C1159 +
              C50942 * C1166) *
                 C50836) *
                C5338) *
               C50753 * C51034 -
           (((C17374 * C3464 + C50942 * C3469 + C17373 * C1159 +
              C17368 * C1166) *
                 C50836 +
             (C17374 * C3460 + C50942 * C3463 + C17373 * C1154 +
              C17368 * C1158) *
                 C118) *
                C5338 +
            ((C17374 * C881 + C50942 * C892 + C17373 * C873 + C17368 * C888) *
                 C50836 +
             (C17374 * C868 + C50942 * C880 + C17373 * C864 + C17368 * C872) *
                 C118) *
                C5337 +
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C50836 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C118) *
                C5336) *
               C50753 * C50822) *
              C295 +
          ((((C17613 + C17612) * C118 + (C17611 + C17610) * C50836) * C5336 +
            ((C19146 + C19147) * C118 + (C19148 + C19149) * C50836) * C5337 +
            ((C17373 * C1155 + C17368 * C1160 + C17374 * C3461 +
              C50942 * C3465) *
                 C118 +
             (C17373 * C1161 + C17368 * C1167 + C17374 * C3466 +
              C50942 * C3470) *
                 C50836) *
                C5338) *
               C50753 * C50822 -
           (((C18395 + C18394) * C50836 + (C18393 + C18392) * C118) * C5338 +
            ((C17798 + C17799) * C50836 + (C17796 + C17797) * C118) * C5337 +
            ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C5336) *
               C50753 * C51034) *
              C296 +
          ((C17432 * C5336 +
            ((C17802 + C17801) * C118 + (C17804 + C17803) * C50836) * C5337 +
            ((C18396 + C18397) * C118 + (C18398 + C18399) * C50836) * C5338) *
               C50753 * C51034 -
           (((C17374 * C3468 + C50942 * C3471 + C17373 * C1163 +
              C17368 * C1168) *
                 C50836 +
             (C17374 * C3462 + C50942 * C3467 + C17373 * C1156 +
              C17368 * C1162) *
                 C118) *
                C5338 +
            ((C19153 + C19152) * C50836 + (C19151 + C19150) * C118) * C5337 +
            C17622 * C5336) *
               C50753 * C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C118 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C50836) *
               C5336 +
           ((C22330 + C22329) * C118 + (C22332 + C22331) * C50836) * C5337 +
           ((C22334 + C22333) * C118 + (C22336 + C22335) * C50836) * C5338) *
              C50753 * C745 -
          (((C17374 * C3464 + C50942 * C3469 + C17373 * C1159 +
             C17368 * C1166) *
                C50836 +
            (C17374 * C3460 + C50942 * C3463 + C17373 * C1154 +
             C17368 * C1158) *
                C118) *
               C5338 +
           ((C17374 * C881 + C50942 * C892 + C17373 * C873 + C17368 * C888) *
                C50836 +
            (C17374 * C868 + C50942 * C880 + C17373 * C864 + C17368 * C872) *
                C118) *
               C5337 +
           ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                C50836 +
            (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                C118) *
               C5336) *
              C50753 * C746 +
          (((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                C118 +
            (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                C50836) *
               C5336 +
           ((C17373 * C868 + C17368 * C880 + C17374 * C3298 + C50942 * C3302) *
                C118 +
            (C17373 * C881 + C17368 * C892 + C17374 * C3303 + C50942 * C3310) *
                C50836) *
               C5337 +
           ((C17373 * C3460 + C17368 * C3463 + C17374 * C3636 +
             C50942 * C3638) *
                C118 +
            (C17373 * C3464 + C17368 * C3469 + C17374 * C3639 +
             C50942 * C3642) *
                C50836) *
               C5338) *
              C50753 * C747 -
          (((C17374 * C20872 + C50942 * C20873 + C17373 * C3639 +
             C17368 * C3642) *
                C50836 +
            (C17374 * C20870 + C50942 * C20871 + C17373 * C3636 +
             C17368 * C3638) *
                C118) *
               C5338 +
           ((C17374 * C3307 + C50942 * C3312 + C17373 * C3303 +
             C17368 * C3310) *
                C50836 +
            (C17374 * C3300 + C50942 * C3306 + C17373 * C3298 +
             C17368 * C3302) *
                C118) *
               C5337 +
           ((C17374 * C3020 + C50942 * C3025 + C17373 * C760 + C17368 * C765) *
                C50836 +
            (C17374 * C3016 + C50942 * C3019 + C17373 * C753 + C17368 * C761) *
                C118) *
               C5336) *
              C50753 * C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C997 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C994 -
            (C22329 + C22330) * C998 - (C22331 + C22332) * C995 +
            C22921 * C999 + C22922 * C996) *
               C5336 +
           ((C22330 + C22329) * C997 + (C22332 + C22331) * C994 -
            (C22333 + C22334) * C998 - (C22335 + C22336) * C995 +
            (C22941 + C22942) * C999 + (C22943 + C22944) * C996) *
               C5337 +
           (C22921 * C997 + C22922 * C994 - (C22942 + C22941) * C998 -
            (C22944 + C22943) * C995 +
            (C17373 * C6279 + C17368 * C6282 + C17374 * C6461 +
             C50942 * C6463) *
                C999 +
            (C17373 * C6283 + C17368 * C6288 + C17374 * C6464 +
             C50942 * C6467) *
                C996) *
               C5338) *
              C50753 * C51034 +
          (((C22759 + C22760) * C998 -
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C994 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C997) +
            (C22761 + C22762) * C995 - C23099 * C999 - C23100 * C996) *
               C5336 +
           ((C22763 + C22764) * C998 -
            ((C22762 + C22761) * C994 + (C22760 + C22759) * C997) +
            (C22765 + C22766) * C995 - (C23109 + C23110) * C999 -
            (C23111 + C23112) * C996) *
               C5337 +
           ((C23110 + C23109) * C998 - (C23100 * C994 + C23099 * C997) +
            (C23112 + C23111) * C995 -
            (C17374 * C23094 + C50942 * C23095 + C17373 * C6461 +
             C17368 * C6463) *
                C999 -
            (C17374 * C23096 + C50942 * C23097 + C17373 * C6464 +
             C17368 * C6467) *
                C996) *
               C5338) *
              C50753 * C50822) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C17373 * C119 + C17368 * C126 + C17374 * C301 +
                 C50942 * C311) *
                    C458 +
                (C17373 * C127 + C17368 * C140 + C17374 * C310 +
                 C50942 * C319) *
                    C51036 -
                (C17374 * C864 + C50942 * C872 + C17373 * C460 +
                 C17368 * C466) *
                    C459 -
                (C17374 * C873 + C50942 * C888 + C17373 * C467 +
                 C17368 * C478) *
                    C50848) *
                   C50906 * C17370 +
               ((C17408 + C17409) * C458 + (C17410 + C17411) * C51036 -
                (C17796 + C17797) * C459 - (C17798 + C17799) * C50848) *
                   C50906 * C17371 +
               C17815 * C17372) *
                  C50806 * C295 +
              (((C17797 + C17796) * C459 -
                ((C17411 + C17410) * C51036 + (C17409 + C17408) * C458) +
                (C17799 + C17798) * C50848) *
                   C50906 * C17370 +
               ((C17802 + C17801) * C459 -
                ((C17415 + C17414) * C51036 + (C17413 + C17412) * C458) +
                (C17804 + C17803) * C50848) *
                   C50906 * C17371 +
               ((C17805 + C17806) * C459 - (C17426 * C51036 + C17427 * C458) +
                (C17807 + C17808) * C50848) *
                   C50906 * C17372) *
                  C50806 * C296 +
              (C17815 * C17370 +
               ((C17419 + C17418) * C458 + (C17417 + C17416) * C51036 -
                (C17806 + C17805) * C459 - (C17808 + C17807) * C50848) *
                   C50906 * C17371 +
               ((C17420 + C17421) * C458 + (C17422 + C17423) * C51036 -
                (C17374 * C1596 + C50942 * C1597 + C17373 * C464 +
                 C17368 * C474) *
                    C459 -
                (C17374 * C1598 + C50942 * C1599 + C17373 * C475 +
                 C17368 * C482) *
                    C50848) *
                   C50906 * C17372) *
                  C50806 * C297) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C17373 * C119 + C17368 * C126 + C17374 * C301 +
                 C50942 * C311) *
                    C458 +
                (C17373 * C127 + C17368 * C140 + C17374 * C310 +
                 C50942 * C319) *
                    C51036 -
                (C17374 * C864 + C50942 * C872 + C17373 * C460 +
                 C17368 * C466) *
                    C459 -
                (C17374 * C873 + C50942 * C888 + C17373 * C467 +
                 C17368 * C478) *
                    C50848) *
                   C50906 * C17370 +
               ((C17408 + C17409) * C458 + (C17410 + C17411) * C51036 -
                (C17796 + C17797) * C459 - (C17798 + C17799) * C50848) *
                   C50906 * C17371 +
               C17815 * C17372) *
                  C630 +
              (((C17373 * C864 + C17368 * C872 + C17374 * C868 +
                 C50942 * C880) *
                    C459 -
                ((C17374 * C641 + C50942 * C650 + C17373 * C310 +
                  C17368 * C319) *
                     C51036 +
                 (C17374 * C635 + C50942 * C640 + C17373 * C301 +
                  C17368 * C311) *
                     C458) +
                (C17373 * C873 + C17368 * C888 + C17374 * C881 +
                 C50942 * C892) *
                    C50848) *
                   C50906 * C17370 +
               ((C17373 * C865 + C17368 * C874 + C17374 * C869 +
                 C50942 * C882) *
                    C459 -
                ((C17610 + C17611) * C51036 + (C17612 + C17613) * C458) +
                (C17373 * C875 + C17368 * C889 + C17374 * C883 +
                 C50942 * C893) *
                    C50848) *
                   C50906 * C17371 +
               ((C17373 * C866 + C17368 * C876 + C17374 * C870 +
                 C50942 * C884) *
                    C459 -
                (C17618 * C51036 + C17619 * C458) +
                (C17373 * C877 + C17368 * C890 + C17374 * C885 +
                 C50942 * C894) *
                    C50848) *
                   C50906 * C17372) *
                  C631 +
              (((C17373 * C635 + C17368 * C640 + C17374 * C753 +
                 C50942 * C761) *
                    C458 +
                (C17373 * C641 + C17368 * C650 + C17374 * C760 +
                 C50942 * C765) *
                    C51036 -
                (C17374 * C3298 + C50942 * C3302 + C17373 * C868 +
                 C17368 * C880) *
                    C459 -
                (C17374 * C3303 + C50942 * C3310 + C17373 * C881 +
                 C17368 * C892) *
                    C50848) *
                   C50906 * C17370 +
               ((C17978 + C17979) * C458 + (C17980 + C17981) * C51036 -
                (C17374 * C3299 + C50942 * C3304 + C17373 * C869 +
                 C17368 * C882) *
                    C459 -
                (C17374 * C3305 + C50942 * C3311 + C17373 * C883 +
                 C17368 * C893) *
                    C50848) *
                   C50906 * C17371 +
               ((C17982 + C17983) * C458 + (C17984 + C17985) * C51036 -
                (C17374 * C4244 + C50942 * C4245 + C17373 * C870 +
                 C17368 * C884) *
                    C459 -
                (C17374 * C4246 + C50942 * C4247 + C17373 * C885 +
                 C17368 * C894) *
                    C50848) *
                   C50906 * C17372) *
                  C632) *
             C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
               C1240 +
           (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
               C1236 -
           (C17374 * C864 + C50942 * C872 + C17373 * C460 + C17368 * C466) *
               C1241 -
           (C17374 * C873 + C50942 * C888 + C17373 * C467 + C17368 * C478) *
               C1237 +
           (C17373 * C1000 + C17368 * C1005 + C17374 * C1154 + C50942 * C1158) *
               C1242 +
           (C17373 * C1006 + C17368 * C1015 + C17374 * C1159 + C50942 * C1166) *
               C1238 -
           (C17374 * C3743 + C50942 * C3747 + C17373 * C1244 + C17368 * C1248) *
               C1243 -
           (C17374 * C3749 + C50942 * C3755 + C17373 * C1249 + C17368 * C1256) *
               C1239) *
              C50906 * C17370 +
          ((C17408 + C17409) * C1240 + (C17410 + C17411) * C1236 -
           (C17796 + C17797) * C1241 - (C17798 + C17799) * C1237 +
           (C18392 + C18393) * C1242 + (C18394 + C18395) * C1238 -
           (C17374 * C3745 + C50942 * C3751 + C17373 * C1245 + C17368 * C1250) *
               C1243 -
           (C17374 * C3753 + C50942 * C3757 + C17373 * C1251 + C17368 * C1257) *
               C1239) *
              C50906 * C17371 +
          (C17424 * C1240 + C17425 * C1236 - C17809 * C1241 - C17810 * C1237 +
           (C18396 + C18397) * C1242 + (C18398 + C18399) * C1238 -
           (C17374 * C7079 + C50942 * C7080 + C17373 * C1246 + C17368 * C1252) *
               C1243 -
           (C17374 * C7081 + C50942 * C7082 + C17373 * C1253 + C17368 * C1258) *
               C1239) *
              C50906 * C17372) *
         C50806 * C50774) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C458 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C51036 -
           (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
            C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
               C459 -
           (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
            C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
               C50848) *
              C50906 * C50753 * C50806 * C295 +
          ((C20204 * C461 + C20199 * C468 + C20205 * C865 + C20200 * C874 +
            C20206 * C869 + C20201 * C882 + C20207 * C3299 + C20202 * C3304) *
               C459 -
           ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
             C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                C51036 +
            (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
             C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                C458) +
           (C20204 * C469 + C20199 * C479 + C20205 * C875 + C20200 * C889 +
            C20206 * C883 + C20201 * C893 + C20207 * C3305 + C20202 * C3311) *
               C50848) *
              C50906 * C50753 * C50806 * C296 +
          ((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C307 +
            C20206 * C637 + C20201 * C644 + C20207 * C751 + C20202 * C757) *
               C458 +
           (C20204 * C131 + C20199 * C142 + C20205 * C306 + C20200 * C317 +
            C20206 * C645 + C20201 * C652 + C20207 * C756 + C20202 * C763) *
               C51036 -
           (C20207 * C4244 + C20202 * C4245 + C20206 * C870 + C20201 * C884 +
            C20205 * C866 + C20200 * C876 + C20204 * C462 + C20199 * C470) *
               C459 -
           (C20207 * C4246 + C20202 * C4247 + C20206 * C885 + C20201 * C894 +
            C20205 * C877 + C20200 * C890 + C20204 * C471 + C20199 * C480) *
               C50848) *
              C50906 * C50753 * C50806 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C458 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C51036 -
           (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
            C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
               C459 -
           (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
            C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
               C50848) *
              C50906 * C50753 * C630 +
          ((C20204 * C864 + C20199 * C872 + C20205 * C868 + C20200 * C880 +
            C20206 * C3298 + C20201 * C3302 + C20207 * C3300 + C20202 * C3306) *
               C459 -
           ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
             C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                C51036 +
            (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
             C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                C458) +
           (C20204 * C873 + C20199 * C888 + C20205 * C881 + C20200 * C892 +
            C20206 * C3303 + C20201 * C3310 + C20207 * C3307 + C20202 * C3312) *
               C50848) *
              C50906 * C50753 * C631 +
          ((C20204 * C635 + C20199 * C640 + C20205 * C753 + C20200 * C761 +
            C20206 * C3016 + C20201 * C3019 + C20207 * C3145 + C20202 * C3149) *
               C458 +
           (C20204 * C641 + C20199 * C650 + C20205 * C760 + C20200 * C765 +
            C20206 * C3020 + C20201 * C3025 + C20207 * C3148 + C20202 * C3151) *
               C51036 -
           (C20207 * C20670 + C20202 * C20671 + C20206 * C3300 +
            C20201 * C3306 + C20205 * C3298 + C20200 * C3302 + C20204 * C868 +
            C20199 * C880) *
               C459 -
           (C20207 * C20672 + C20202 * C20673 + C20206 * C3307 +
            C20201 * C3312 + C20205 * C3303 + C20200 * C3310 + C20204 * C881 +
            C20199 * C892) *
               C50848) *
              C50906 * C50753 * C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
           C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
              C1240 +
          (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
           C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
              C1236 -
          (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
           C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
              C1241 -
          (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
           C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
              C1237 +
          (C20204 * C1000 + C20199 * C1005 + C20205 * C1154 + C20200 * C1158 +
           C20206 * C3460 + C20201 * C3463 + C20207 * C3636 + C20202 * C3638) *
              C1242 +
          (C20204 * C1006 + C20199 * C1015 + C20205 * C1159 + C20200 * C1166 +
           C20206 * C3464 + C20201 * C3469 + C20207 * C3639 + C20202 * C3642) *
              C1238 -
          (C20207 * C20940 + C20202 * C20941 + C20206 * C3742 + C20201 * C3746 +
           C20205 * C3743 + C20200 * C3747 + C20204 * C1244 + C20199 * C1248) *
              C1243 -
          (C20207 * C20942 + C20202 * C20943 + C20206 * C3748 + C20201 * C3754 +
           C20205 * C3749 + C20200 * C3755 + C20204 * C1249 + C20199 * C1256) *
              C1239) *
         C50906 * C50753 * C50806 * C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C458 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C51036 -
            (C22329 + C22330) * C459 - (C22331 + C22332) * C50848) *
               C5336 +
           ((C22330 + C22329) * C458 + (C22332 + C22331) * C51036 -
            (C22333 + C22334) * C459 - (C22335 + C22336) * C50848) *
               C5337 +
           ((C22334 + C22333) * C458 + (C22336 + C22335) * C51036 -
            (C17374 * C3743 + C50942 * C3747 + C17373 * C1244 +
             C17368 * C1248) *
                C459 -
            (C17374 * C3749 + C50942 * C3755 + C17373 * C1249 +
             C17368 * C1256) *
                C50848) *
               C5338) *
              C50753 * C50806 * C295 +
          (((C17797 + C17796) * C459 -
            ((C17411 + C17410) * C51036 + (C17409 + C17408) * C458) +
            (C17799 + C17798) * C50848) *
               C5336 +
           ((C18392 + C18393) * C459 -
            ((C17798 + C17799) * C51036 + (C17796 + C17797) * C458) +
            (C18394 + C18395) * C50848) *
               C5337 +
           ((C17373 * C1245 + C17368 * C1250 + C17374 * C3745 +
             C50942 * C3751) *
                C459 -
            ((C18395 + C18394) * C51036 + (C18393 + C18392) * C458) +
            (C17373 * C1251 + C17368 * C1257 + C17374 * C3753 +
             C50942 * C3757) *
                C50848) *
               C5338) *
              C50753 * C50806 * C296 +
          (C17814 * C5336 +
           ((C17802 + C17801) * C458 + (C17804 + C17803) * C51036 -
            (C18397 + C18396) * C459 - (C18399 + C18398) * C50848) *
               C5337 +
           ((C18396 + C18397) * C458 + (C18398 + C18399) * C51036 -
            (C17374 * C7079 + C50942 * C7080 + C17373 * C1246 +
             C17368 * C1252) *
                C459 -
            (C17374 * C7081 + C50942 * C7082 + C17373 * C1253 +
             C17368 * C1258) *
                C50848) *
               C5338) *
              C50753 * C50806 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C458 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C51036 -
            (C22329 + C22330) * C459 - (C22331 + C22332) * C50848) *
               C5336 +
           ((C22330 + C22329) * C458 + (C22332 + C22331) * C51036 -
            (C22333 + C22334) * C459 - (C22335 + C22336) * C50848) *
               C5337 +
           ((C22334 + C22333) * C458 + (C22336 + C22335) * C51036 -
            (C17374 * C3743 + C50942 * C3747 + C17373 * C1244 +
             C17368 * C1248) *
                C459 -
            (C17374 * C3749 + C50942 * C3755 + C17373 * C1249 +
             C17368 * C1256) *
                C50848) *
               C5338) *
              C50753 * C630 +
          (((C22759 + C22760) * C459 -
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C51036 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C458) +
            (C22761 + C22762) * C50848) *
               C5336 +
           ((C22763 + C22764) * C459 -
            ((C22762 + C22761) * C51036 + (C22760 + C22759) * C458) +
            (C22765 + C22766) * C50848) *
               C5337 +
           ((C17373 * C3743 + C17368 * C3747 + C17374 * C3742 +
             C50942 * C3746) *
                C459 -
            ((C22766 + C22765) * C51036 + (C22764 + C22763) * C458) +
            (C17373 * C3749 + C17368 * C3755 + C17374 * C3748 +
             C50942 * C3754) *
                C50848) *
               C5338) *
              C50753 * C631 +
          (((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                C458 +
            (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                C51036 -
            (C22767 + C22768) * C459 - (C22769 + C22770) * C50848) *
               C5336 +
           ((C22768 + C22767) * C458 + (C22770 + C22769) * C51036 -
            (C22771 + C22772) * C459 - (C22773 + C22774) * C50848) *
               C5337 +
           ((C22772 + C22771) * C458 + (C22774 + C22773) * C51036 -
            (C17374 * C20940 + C50942 * C20941 + C17373 * C3742 +
             C17368 * C3746) *
                C459 -
            (C17374 * C20942 + C50942 * C20943 + C17373 * C3748 +
             C17368 * C3754) *
                C50848) *
               C5338) *
              C50753 * C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
               C1240 +
           (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
               C1236 -
           (C22329 + C22330) * C1241 - (C22331 + C22332) * C1237 +
           C22921 * C1242 + C22922 * C1238 - C23215 * C1243 - C23216 * C1239) *
              C5336 +
          ((C22330 + C22329) * C1240 + (C22332 + C22331) * C1236 -
           (C22333 + C22334) * C1241 - (C22335 + C22336) * C1237 +
           (C22941 + C22942) * C1242 + (C22943 + C22944) * C1238 -
           (C23225 + C23226) * C1243 - (C23227 + C23228) * C1239) *
              C5337 +
          (C22921 * C1240 + C22922 * C1236 - C23215 * C1241 - C23216 * C1237 +
           (C23226 + C23225) * C1242 + (C23228 + C23227) * C1238 -
           (C17374 * C23210 + C50942 * C23211 + C17373 * C6579 +
            C17368 * C6581) *
               C1243 -
           (C17374 * C23212 + C50942 * C23213 + C17373 * C6582 +
            C17368 * C6585) *
               C1239) *
              C5338) *
         C50753 * C50806 * C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C1730 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C1728 -
           (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
            C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
               C1731 -
           (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
            C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
               C50848) *
              C50906 * C50753 * C50806 * C51080 +
          ((C20204 * C461 + C20199 * C468 + C20205 * C865 + C20200 * C874 +
            C20206 * C869 + C20201 * C882 + C20207 * C3299 + C20202 * C3304) *
               C1731 -
           ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
             C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                C1728 +
            (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
             C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                C1730) +
           (C20204 * C469 + C20199 * C479 + C20205 * C875 + C20200 * C889 +
            C20206 * C883 + C20201 * C893 + C20207 * C3305 + C20202 * C3311) *
               C50848) *
              C50906 * C50753 * C50806 * C51065 +
          ((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C307 +
            C20206 * C637 + C20201 * C644 + C20207 * C751 + C20202 * C757) *
               C1730 +
           (C20204 * C131 + C20199 * C142 + C20205 * C306 + C20200 * C317 +
            C20206 * C645 + C20201 * C652 + C20207 * C756 + C20202 * C763) *
               C1728 -
           (C20207 * C4244 + C20202 * C4245 + C20206 * C870 + C20201 * C884 +
            C20205 * C866 + C20200 * C876 + C20204 * C462 + C20199 * C470) *
               C1731 -
           (C20207 * C4246 + C20202 * C4247 + C20206 * C885 + C20201 * C894 +
            C20205 * C877 + C20200 * C890 + C20204 * C471 + C20199 * C480) *
               C50848) *
              C50906 * C50753 * C50806 * C1362)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C1730 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C1728 -
            (C17374 * C864 + C50942 * C872 + C17373 * C460 + C17368 * C466) *
                C1731 -
            (C17374 * C873 + C50942 * C888 + C17373 * C467 + C17368 * C478) *
                C50848) *
               C50906 * C17370 +
           ((C17408 + C17409) * C1730 + (C17410 + C17411) * C1728 -
            (C17796 + C17797) * C1731 - (C17798 + C17799) * C50848) *
               C50906 * C17371 +
           C19307 * C17372) *
              C50806 * C51080 +
          (((C17797 + C17796) * C1731 -
            ((C17411 + C17410) * C1728 + (C17409 + C17408) * C1730) +
            (C17799 + C17798) * C50848) *
               C50906 * C17370 +
           ((C17802 + C17801) * C1731 -
            ((C17415 + C17414) * C1728 + (C17413 + C17412) * C1730) +
            (C17804 + C17803) * C50848) *
               C50906 * C17371 +
           ((C17805 + C17806) * C1731 - (C17426 * C1728 + C17427 * C1730) +
            (C17807 + C17808) * C50848) *
               C50906 * C17372) *
              C50806 * C51065 +
          (C19307 * C17370 +
           ((C17419 + C17418) * C1730 + (C17417 + C17416) * C1728 -
            (C17806 + C17805) * C1731 - (C17808 + C17807) * C50848) *
               C50906 * C17371 +
           ((C17420 + C17421) * C1730 + (C17422 + C17423) * C1728 -
            (C17374 * C1596 + C50942 * C1597 + C17373 * C464 + C17368 * C474) *
                C1731 -
            (C17374 * C1598 + C50942 * C1599 + C17373 * C475 + C17368 * C482) *
                C50848) *
               C50906 * C17372) *
              C50806 * C1362)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C1730 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C1728 -
            (C22329 + C22330) * C1731 - (C22331 + C22332) * C50848) *
               C5336 +
           ((C22330 + C22329) * C1730 + (C22332 + C22331) * C1728 -
            (C22333 + C22334) * C1731 - (C22335 + C22336) * C50848) *
               C5337 +
           (C22921 * C1730 + C22922 * C1728 - C23215 * C1731 -
            C23216 * C50848) *
               C5338) *
              C50753 * C50806 * C51080 +
          (((C17797 + C17796) * C1731 -
            ((C17411 + C17410) * C1728 + (C17409 + C17408) * C1730) +
            (C17799 + C17798) * C50848) *
               C5336 +
           ((C18392 + C18393) * C1731 -
            ((C17798 + C17799) * C1728 + (C17796 + C17797) * C1730) +
            (C18394 + C18395) * C50848) *
               C5337 +
           ((C22946 + C22945) * C1731 - (C22932 * C1728 + C22931 * C1730) +
            (C22948 + C22947) * C50848) *
               C5338) *
              C50753 * C50806 * C51065 +
          (C19306 * C5336 +
           ((C17802 + C17801) * C1730 + (C17804 + C17803) * C1728 -
            (C18397 + C18396) * C1731 - (C18399 + C18398) * C50848) *
               C5337 +
           ((C18396 + C18397) * C1730 + (C18398 + C18399) * C1728 -
            (C17374 * C7079 + C50942 * C7080 + C17373 * C1246 +
             C17368 * C1252) *
                C1731 -
            (C17374 * C7081 + C50942 * C7082 + C17373 * C1253 +
             C17368 * C1258) *
                C50848) *
               C5338) *
              C50753 * C50806 * C1362)) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
             C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
                C1730 +
            (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
             C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
                C1728 -
            (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
             C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
                C1731 -
            (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
             C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
                C50848) *
               C50906 * C50753 * C51034 +
           ((C20204 * C864 + C20199 * C872 + C20205 * C868 + C20200 * C880 +
             C20206 * C3298 + C20201 * C3302 + C20207 * C3300 +
             C20202 * C3306) *
                C1731 -
            ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
              C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                 C1728 +
             (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
              C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                 C1730) +
            (C20204 * C873 + C20199 * C888 + C20205 * C881 + C20200 * C892 +
             C20206 * C3303 + C20201 * C3310 + C20207 * C3307 +
             C20202 * C3312) *
                C50848) *
               C50906 * C50753 * C50822) *
              C1464 +
          (((C20204 * C461 + C20199 * C468 + C20205 * C865 + C20200 * C874 +
             C20206 * C869 + C20201 * C882 + C20207 * C3299 + C20202 * C3304) *
                C1731 -
            ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
              C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                 C1728 +
             (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
              C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                 C1730) +
            (C20204 * C469 + C20199 * C479 + C20205 * C875 + C20200 * C889 +
             C20206 * C883 + C20201 * C893 + C20207 * C3305 + C20202 * C3311) *
                C50848) *
               C50906 * C50753 * C51034 +
           ((C20204 * C300 + C20199 * C309 + C20205 * C636 + C20200 * C642 +
             C20206 * C752 + C20201 * C759 + C20207 * C3017 + C20202 * C3021) *
                C1730 +
            (C20204 * C308 + C20199 * C318 + C20205 * C643 + C20200 * C651 +
             C20206 * C758 + C20201 * C764 + C20207 * C3022 + C20202 * C3026) *
                C1728 -
            (C20207 * C3301 + C20202 * C3308 + C20206 * C3299 + C20201 * C3304 +
             C20205 * C869 + C20200 * C882 + C20204 * C865 + C20199 * C874) *
                C1731 -
            (C20207 * C3309 + C20202 * C3313 + C20206 * C3305 + C20201 * C3311 +
             C20205 * C883 + C20200 * C893 + C20204 * C875 + C20199 * C889) *
                C50848) *
               C50906 * C50753 * C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C1730 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C1728 -
             (C17374 * C864 + C50942 * C872 + C17373 * C460 + C17368 * C466) *
                 C1731 -
             (C17374 * C873 + C50942 * C888 + C17373 * C467 + C17368 * C478) *
                 C50848) *
                C50906 * C17370 +
            ((C17408 + C17409) * C1730 + (C17410 + C17411) * C1728 -
             (C17796 + C17797) * C1731 - (C17798 + C17799) * C50848) *
                C50906 * C17371 +
            C19307 * C17372) *
               C51034 +
           (((C17373 * C864 + C17368 * C872 + C17374 * C868 + C50942 * C880) *
                 C1731 -
             ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                  C1728 +
              (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                  C1730) +
             (C17373 * C873 + C17368 * C888 + C17374 * C881 + C50942 * C892) *
                 C50848) *
                C50906 * C17370 +
            ((C19146 + C19147) * C1731 -
             ((C17610 + C17611) * C1728 + (C17612 + C17613) * C1730) +
             (C19148 + C19149) * C50848) *
                C50906 * C17371 +
            ((C19150 + C19151) * C1731 - (C17618 * C1728 + C17619 * C1730) +
             (C19152 + C19153) * C50848) *
                C50906 * C17372) *
               C50822) *
              C1464 +
          ((((C17797 + C17796) * C1731 -
             ((C17411 + C17410) * C1728 + (C17409 + C17408) * C1730) +
             (C17799 + C17798) * C50848) *
                C50906 * C17370 +
            ((C17802 + C17801) * C1731 -
             ((C17415 + C17414) * C1728 + (C17413 + C17412) * C1730) +
             (C17804 + C17803) * C50848) *
                C50906 * C17371 +
            ((C17805 + C17806) * C1731 - (C17426 * C1728 + C17427 * C1730) +
             (C17807 + C17808) * C50848) *
                C50906 * C17372) *
               C51034 +
           (((C17613 + C17612) * C1730 + (C17611 + C17610) * C1728 -
             (C19147 + C19146) * C1731 - (C19149 + C19148) * C50848) *
                C50906 * C17370 +
            ((C17609 + C17608) * C1730 + (C17607 + C17606) * C1728 -
             (C19151 + C19150) * C1731 - (C19153 + C19152) * C50848) *
                C50906 * C17371 +
            ((C17614 + C17615) * C1730 + (C17616 + C17617) * C1728 -
             (C17374 * C871 + C50942 * C886 + C17373 * C867 + C17368 * C878) *
                 C1731 -
             (C17374 * C887 + C50942 * C895 + C17373 * C879 + C17368 * C891) *
                 C50848) *
                C50906 * C17372) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C1730 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C1728 -
             (C22329 + C22330) * C1731 - (C22331 + C22332) * C50848) *
                C5336 +
            ((C22330 + C22329) * C1730 + (C22332 + C22331) * C1728 -
             (C22333 + C22334) * C1731 - (C22335 + C22336) * C50848) *
                C5337 +
            (C22921 * C1730 + C22922 * C1728 - C23215 * C1731 -
             C23216 * C50848) *
                C5338) *
               C50753 * C51034 +
           (((C22759 + C22760) * C1731 -
             ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                  C1728 +
              (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                  C1730) +
             (C22761 + C22762) * C50848) *
                C5336 +
            ((C22763 + C22764) * C1731 -
             ((C22762 + C22761) * C1728 + (C22760 + C22759) * C1730) +
             (C22765 + C22766) * C50848) *
                C5337 +
            ((C23110 + C23109) * C1731 - (C23100 * C1728 + C23099 * C1730) +
             (C23112 + C23111) * C50848) *
                C5338) *
               C50753 * C50822) *
              C1464 +
          ((((C17797 + C17796) * C1731 -
             ((C17411 + C17410) * C1728 + (C17409 + C17408) * C1730) +
             (C17799 + C17798) * C50848) *
                C5336 +
            ((C18392 + C18393) * C1731 -
             ((C17798 + C17799) * C1728 + (C17796 + C17797) * C1730) +
             (C18394 + C18395) * C50848) *
                C5337 +
            ((C22946 + C22945) * C1731 - (C22932 * C1728 + C22931 * C1730) +
             (C22948 + C22947) * C50848) *
                C5338) *
               C50753 * C51034 +
           (((C17613 + C17612) * C1730 + (C17611 + C17610) * C1728 -
             (C19147 + C19146) * C1731 - (C19149 + C19148) * C50848) *
                C5336 +
            ((C19146 + C19147) * C1730 + (C19148 + C19149) * C1728 -
             (C23723 + C23724) * C1731 - (C23725 + C23726) * C50848) *
                C5337 +
            ((C23724 + C23723) * C1730 + (C23726 + C23725) * C1728 -
             (C17374 * C3744 + C50942 * C3750 + C17373 * C3745 +
              C17368 * C3751) *
                 C1731 -
             (C17374 * C3752 + C50942 * C3756 + C17373 * C3753 +
              C17368 * C3757) *
                 C50848) *
                C5338) *
               C50753 * C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C1999 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C51082 -
           (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
            C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
               C2000 -
           (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
            C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
               C51071 +
           (C20204 * C1000 + C20199 * C1005 + C20205 * C1154 + C20200 * C1158 +
            C20206 * C3460 + C20201 * C3463 + C20207 * C3636 + C20202 * C3638) *
               C2001 +
           (C20204 * C1006 + C20199 * C1015 + C20205 * C1159 + C20200 * C1166 +
            C20206 * C3464 + C20201 * C3469 + C20207 * C3639 + C20202 * C3642) *
               C1998) *
              C50906 * C50753 * C50806 * C1464 +
          ((C20204 * C461 + C20199 * C468 + C20205 * C865 + C20200 * C874 +
            C20206 * C869 + C20201 * C882 + C20207 * C3299 + C20202 * C3304) *
               C2000 -
           ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
             C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                C51082 +
            (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
             C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                C1999) +
           (C20204 * C469 + C20199 * C479 + C20205 * C875 + C20200 * C889 +
            C20206 * C883 + C20201 * C893 + C20207 * C3305 + C20202 * C3311) *
               C51071 -
           (C20207 * C3637 + C20202 * C3640 + C20206 * C3461 + C20201 * C3465 +
            C20205 * C1155 + C20200 * C1160 + C20204 * C1001 + C20199 * C1007) *
               C2001 -
           (C20207 * C3641 + C20202 * C3643 + C20206 * C3466 + C20201 * C3470 +
            C20205 * C1161 + C20200 * C1167 + C20204 * C1008 + C20199 * C1016) *
               C1998) *
              C50906 * C50753 * C50806 * C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C1999 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C51082 -
            (C17374 * C864 + C50942 * C872 + C17373 * C460 + C17368 * C466) *
                C2000 -
            (C17374 * C873 + C50942 * C888 + C17373 * C467 + C17368 * C478) *
                C51071 +
            (C17373 * C1000 + C17368 * C1005 + C17374 * C1154 +
             C50942 * C1158) *
                C2001 +
            (C17373 * C1006 + C17368 * C1015 + C17374 * C1159 +
             C50942 * C1166) *
                C1998) *
               C50906 * C17370 +
           ((C17408 + C17409) * C1999 + (C17410 + C17411) * C51082 -
            (C17796 + C17797) * C2000 - (C17798 + C17799) * C51071 +
            (C18392 + C18393) * C2001 + (C18394 + C18395) * C1998) *
               C50906 * C17371 +
           (C17424 * C1999 + C17425 * C51082 - C17809 * C2000 -
            C17810 * C51071 + (C18396 + C18397) * C2001 +
            (C18398 + C18399) * C1998) *
               C50906 * C17372) *
              C50806 * C1464 +
          (((C17797 + C17796) * C2000 -
            ((C17411 + C17410) * C51082 + (C17409 + C17408) * C1999) +
            (C17799 + C17798) * C51071 - (C18393 + C18392) * C2001 -
            (C18395 + C18394) * C1998) *
               C50906 * C17370 +
           ((C17802 + C17801) * C2000 -
            ((C17415 + C17414) * C51082 + (C17413 + C17412) * C1999) +
            (C17804 + C17803) * C51071 - (C18397 + C18396) * C2001 -
            (C18399 + C18398) * C1998) *
               C50906 * C17371 +
           ((C17805 + C17806) * C2000 - (C17426 * C51082 + C17427 * C1999) +
            (C17807 + C17808) * C51071 -
            (C17374 * C1157 + C50942 * C1164 + C17373 * C1003 +
             C17368 * C1011) *
                C2001 -
            (C17374 * C1165 + C50942 * C1169 + C17373 * C1012 +
             C17368 * C1018) *
                C1998) *
               C50906 * C17372) *
              C50806 * C50779)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C1999 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C51082 -
            (C22329 + C22330) * C2000 - (C22331 + C22332) * C51071 +
            C22921 * C2001 + C22922 * C1998) *
               C5336 +
           ((C22330 + C22329) * C1999 + (C22332 + C22331) * C51082 -
            (C22333 + C22334) * C2000 - (C22335 + C22336) * C51071 +
            (C22941 + C22942) * C2001 + (C22943 + C22944) * C1998) *
               C5337 +
           (C22921 * C1999 + C22922 * C51082 - C23215 * C2000 -
            C23216 * C51071 + (C23226 + C23225) * C2001 +
            (C23228 + C23227) * C1998) *
               C5338) *
              C50753 * C50806 * C1464 +
          (((C17797 + C17796) * C2000 -
            ((C17411 + C17410) * C51082 + (C17409 + C17408) * C1999) +
            (C17799 + C17798) * C51071 - C22931 * C2001 - C22932 * C1998) *
               C5336 +
           ((C18392 + C18393) * C2000 -
            ((C17798 + C17799) * C51082 + (C17796 + C17797) * C1999) +
            (C18394 + C18395) * C51071 - (C22945 + C22946) * C2001 -
            (C22947 + C22948) * C1998) *
               C5337 +
           ((C22946 + C22945) * C2000 - (C22932 * C51082 + C22931 * C1999) +
            (C22948 + C22947) * C51071 -
            (C17374 * C6462 + C50942 * C6465 + C17373 * C6280 +
             C17368 * C6284) *
                C2001 -
            (C17374 * C6466 + C50942 * C6468 + C17373 * C6285 +
             C17368 * C6289) *
                C1998) *
               C5338) *
              C50753 * C50806 * C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C50836) *
                C50906 * C17370 +
            ((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) * C50906 *
                C17371 +
            C17434 * C17372) *
               C630 -
           (C17623 * C17372 +
            ((C17610 + C17611) * C50836 + (C17612 + C17613) * C118) * C50906 *
                C17371 +
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C50836 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C118) *
                C50906 * C17370) *
               C631 +
           (((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                 C118 +
             (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                 C50836) *
                C50906 * C17370 +
            ((C17978 + C17979) * C118 + (C17980 + C17981) * C50836) * C50906 *
                C17371 +
            ((C17982 + C17983) * C118 + (C17984 + C17985) * C50836) * C50906 *
                C17372) *
               C632) *
              C51027 +
          ((((C17613 + C17612) * C118 + (C17611 + C17610) * C50836) * C50906 *
                C17370 +
            ((C17609 + C17608) * C118 + (C17607 + C17606) * C50836) * C50906 *
                C17371 +
            ((C17614 + C17615) * C118 + (C17616 + C17617) * C50836) * C50906 *
                C17372) *
               C631 -
           (C17435 * C17372 +
            ((C17415 + C17414) * C50836 + (C17413 + C17412) * C118) * C50906 *
                C17371 +
            ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C50906 *
                C17370) *
               C630 -
           (((C17374 * C754 + C50942 * C762 + C17373 * C647 + C17368 * C653) *
                 C50836 +
             (C17374 * C750 + C50942 * C755 + C17373 * C638 + C17368 * C646) *
                 C118) *
                C50906 * C17372 +
            ((C17985 + C17984) * C50836 + (C17983 + C17982) * C118) * C50906 *
                C17371 +
            ((C17981 + C17980) * C50836 + (C17979 + C17978) * C118) * C50906 *
                C17370) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C118 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C50836) *
               C50906 * C17370 +
           ((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) * C50906 *
               C17371 +
           C17434 * C17372) *
              C50806 * C113 -
          (C17435 * C17372 +
           ((C17415 + C17414) * C50836 + (C17413 + C17412) * C118) * C50906 *
               C17371 +
           ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C50906 *
               C17370) *
              C50806 * C114 +
          (C17434 * C17370 +
           ((C17419 + C17418) * C118 + (C17417 + C17416) * C50836) * C50906 *
               C17371 +
           ((C17420 + C17421) * C118 + (C17422 + C17423) * C50836) * C50906 *
               C17372) *
              C50806 * C115 -
          (((C17374 * C314 + C50942 * C321 + C17373 * C137 + C17368 * C145) *
                C50836 +
            (C17374 * C303 + C50942 * C315 + C17373 * C124 + C17368 * C136) *
                C118) *
               C50906 * C17372 +
           ((C17423 + C17422) * C50836 + (C17421 + C17420) * C118) * C50906 *
               C17371 +
           C17435 * C17370) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C118 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C50836) *
              C50906 * C50753 * C50806 * C113 -
          ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
            C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
               C50836 +
           (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
            C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
               C118) *
              C50906 * C50753 * C50806 * C114 +
          ((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C307 +
            C20206 * C637 + C20201 * C644 + C20207 * C751 + C20202 * C757) *
               C118 +
           (C20204 * C131 + C20199 * C142 + C20205 * C306 + C20200 * C317 +
            C20206 * C645 + C20201 * C652 + C20207 * C756 + C20202 * C763) *
               C50836) *
              C50906 * C50753 * C50806 * C115 -
          ((C20207 * C754 + C20202 * C762 + C20206 * C647 + C20201 * C653 +
            C20205 * C304 + C20200 * C316 + C20204 * C133 + C20199 * C143) *
               C50836 +
           (C20207 * C750 + C20202 * C755 + C20206 * C638 + C20201 * C646 +
            C20205 * C298 + C20200 * C305 + C20204 * C122 + C20199 * C132) *
               C118) *
              C50906 * C50753 * C50806 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
             C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
                C118 +
            (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
             C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
                C50836) *
               C50906 * C50753 * C630 -
           ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
             C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                C50836 +
            (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
             C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                C118) *
               C50906 * C50753 * C631 +
           ((C20204 * C635 + C20199 * C640 + C20205 * C753 + C20200 * C761 +
             C20206 * C3016 + C20201 * C3019 + C20207 * C3145 +
             C20202 * C3149) *
                C118 +
            (C20204 * C641 + C20199 * C650 + C20205 * C760 + C20200 * C765 +
             C20206 * C3020 + C20201 * C3025 + C20207 * C3148 +
             C20202 * C3151) *
                C50836) *
               C50906 * C50753 * C632) *
              C51027 +
          (((C20204 * C300 + C20199 * C309 + C20205 * C636 + C20200 * C642 +
             C20206 * C752 + C20201 * C759 + C20207 * C3017 + C20202 * C3021) *
                C118 +
            (C20204 * C308 + C20199 * C318 + C20205 * C643 + C20200 * C651 +
             C20206 * C758 + C20201 * C764 + C20207 * C3022 + C20202 * C3026) *
                C50836) *
               C50906 * C50753 * C631 -
           ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
             C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                C50836 +
            (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
             C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                C118) *
               C50906 * C50753 * C630 -
           ((C20207 * C3146 + C20202 * C3150 + C20206 * C3022 + C20201 * C3026 +
             C20205 * C758 + C20200 * C764 + C20204 * C643 + C20199 * C651) *
                C50836 +
            (C20207 * C3144 + C20202 * C3147 + C20206 * C3017 + C20201 * C3021 +
             C20205 * C752 + C20200 * C759 + C20204 * C636 + C20199 * C642) *
                C118) *
               C50906 * C50753 * C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C118 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C50836) *
               C5336 +
           ((C17373 * C460 + C17368 * C466 + C17374 * C864 + C50942 * C872) *
                C118 +
            (C17373 * C467 + C17368 * C478 + C17374 * C873 + C50942 * C888) *
                C50836) *
               C5337 +
           ((C17373 * C1000 + C17368 * C1005 + C17374 * C1154 +
             C50942 * C1158) *
                C118 +
            (C17373 * C1006 + C17368 * C1015 + C17374 * C1159 +
             C50942 * C1166) *
                C50836) *
               C5338) *
              C50753 * C50806 * C113 -
          (((C18395 + C18394) * C50836 + (C18393 + C18392) * C118) * C5338 +
           ((C17798 + C17799) * C50836 + (C17796 + C17797) * C118) * C5337 +
           ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C5336) *
              C50753 * C50806 * C114 +
          (C17432 * C5336 +
           ((C17802 + C17801) * C118 + (C17804 + C17803) * C50836) * C5337 +
           ((C18396 + C18397) * C118 + (C18398 + C18399) * C50836) * C5338) *
              C50753 * C50806 * C115 -
          (((C17374 * C1165 + C50942 * C1169 + C17373 * C1012 +
             C17368 * C1018) *
                C50836 +
            (C17374 * C1157 + C50942 * C1164 + C17373 * C1003 +
             C17368 * C1011) *
                C118) *
               C5338 +
           ((C17808 + C17807) * C50836 + (C17806 + C17805) * C118) * C5337 +
           C17433 * C5336) *
              C50753 * C50806 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C50836) *
                C5336 +
            ((C22330 + C22329) * C118 + (C22332 + C22331) * C50836) * C5337 +
            ((C22334 + C22333) * C118 + (C22336 + C22335) * C50836) * C5338) *
               C50753 * C630 -
           (((C17374 * C3464 + C50942 * C3469 + C17373 * C1159 +
              C17368 * C1166) *
                 C50836 +
             (C17374 * C3460 + C50942 * C3463 + C17373 * C1154 +
              C17368 * C1158) *
                 C118) *
                C5338 +
            ((C17374 * C881 + C50942 * C892 + C17373 * C873 + C17368 * C888) *
                 C50836 +
             (C17374 * C868 + C50942 * C880 + C17373 * C864 + C17368 * C872) *
                 C118) *
                C5337 +
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C50836 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C118) *
                C5336) *
               C50753 * C631 +
           (((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                 C118 +
             (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                 C50836) *
                C5336 +
            ((C17373 * C868 + C17368 * C880 + C17374 * C3298 + C50942 * C3302) *
                 C118 +
             (C17373 * C881 + C17368 * C892 + C17374 * C3303 + C50942 * C3310) *
                 C50836) *
                C5337 +
            ((C17373 * C3460 + C17368 * C3463 + C17374 * C3636 +
              C50942 * C3638) *
                 C118 +
             (C17373 * C3464 + C17368 * C3469 + C17374 * C3639 +
              C50942 * C3642) *
                 C50836) *
                C5338) *
               C50753 * C632) *
              C51027 +
          ((((C17613 + C17612) * C118 + (C17611 + C17610) * C50836) * C5336 +
            ((C19146 + C19147) * C118 + (C19148 + C19149) * C50836) * C5337 +
            ((C17373 * C1155 + C17368 * C1160 + C17374 * C3461 +
              C50942 * C3465) *
                 C118 +
             (C17373 * C1161 + C17368 * C1167 + C17374 * C3466 +
              C50942 * C3470) *
                 C50836) *
                C5338) *
               C50753 * C631 -
           (((C18395 + C18394) * C50836 + (C18393 + C18392) * C118) * C5338 +
            ((C17798 + C17799) * C50836 + (C17796 + C17797) * C118) * C5337 +
            ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C5336) *
               C50753 * C630 -
           (((C17374 * C3641 + C50942 * C3643 + C17373 * C3466 +
              C17368 * C3470) *
                 C50836 +
             (C17374 * C3637 + C50942 * C3640 + C17373 * C3461 +
              C17368 * C3465) *
                 C118) *
                C5338 +
            ((C17374 * C3305 + C50942 * C3311 + C17373 * C883 + C17368 * C893) *
                 C50836 +
             (C17374 * C3299 + C50942 * C3304 + C17373 * C869 + C17368 * C882) *
                 C118) *
                C5337 +
            ((C17981 + C17980) * C50836 + (C17979 + C17978) * C118) * C5336) *
               C50753 * C632) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C118 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C50836) *
               C50906 * C17370 +
           ((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) * C50906 *
               C17371 +
           C17434 * C17372) *
              C745 -
          (C17623 * C17372 +
           ((C17610 + C17611) * C50836 + (C17612 + C17613) * C118) * C50906 *
               C17371 +
           ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                C50836 +
            (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                C118) *
               C50906 * C17370) *
              C746 +
          (((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                C118 +
            (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                C50836) *
               C50906 * C17370 +
           ((C17978 + C17979) * C118 + (C17980 + C17981) * C50836) * C50906 *
               C17371 +
           ((C17982 + C17983) * C118 + (C17984 + C17985) * C50836) * C50906 *
               C17372) *
              C747 -
          (((C17374 * C3023 + C50942 * C3027 + C17373 * C756 + C17368 * C763) *
                C50836 +
            (C17374 * C3018 + C50942 * C3024 + C17373 * C751 + C17368 * C757) *
                C118) *
               C50906 * C17372 +
           ((C17374 * C3022 + C50942 * C3026 + C17373 * C758 + C17368 * C764) *
                C50836 +
            (C17374 * C3017 + C50942 * C3021 + C17373 * C752 + C17368 * C759) *
                C118) *
               C50906 * C17371 +
           ((C17374 * C3020 + C50942 * C3025 + C17373 * C760 + C17368 * C765) *
                C50836 +
            (C17374 * C3016 + C50942 * C3019 + C17373 * C753 + C17368 * C761) *
                C118) *
               C50906 * C17370) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C50836) *
                C50906 * C17370 +
            ((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) * C50906 *
                C17371 +
            C17434 * C17372) *
               C51034 -
           (C17623 * C17372 +
            ((C17610 + C17611) * C50836 + (C17612 + C17613) * C118) * C50906 *
                C17371 +
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C50836 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C118) *
                C50906 * C17370) *
               C50822) *
              C295 +
          ((((C17613 + C17612) * C118 + (C17611 + C17610) * C50836) * C50906 *
                C17370 +
            ((C17609 + C17608) * C118 + (C17607 + C17606) * C50836) * C50906 *
                C17371 +
            ((C17614 + C17615) * C118 + (C17616 + C17617) * C50836) * C50906 *
                C17372) *
               C50822 -
           (C17435 * C17372 +
            ((C17415 + C17414) * C50836 + (C17413 + C17412) * C118) * C50906 *
                C17371 +
            ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C50906 *
                C17370) *
               C51034) *
              C296 +
          ((C17434 * C17370 +
            ((C17419 + C17418) * C118 + (C17417 + C17416) * C50836) * C50906 *
                C17371 +
            ((C17420 + C17421) * C118 + (C17422 + C17423) * C50836) * C50906 *
                C17372) *
               C51034 -
           (((C17374 * C648 + C50942 * C654 + C17373 * C313 + C17368 * C320) *
                 C50836 +
             (C17374 * C639 + C50942 * C649 + C17373 * C302 + C17368 * C312) *
                 C118) *
                C50906 * C17372 +
            ((C17617 + C17616) * C50836 + (C17615 + C17614) * C118) * C50906 *
                C17371 +
            C17623 * C17370) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
             C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
                C118 +
            (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
             C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
                C50836) *
               C50906 * C50753 * C51034 -
           ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
             C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                C50836 +
            (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
             C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                C118) *
               C50906 * C50753 * C50822) *
              C295 +
          (((C20204 * C300 + C20199 * C309 + C20205 * C636 + C20200 * C642 +
             C20206 * C752 + C20201 * C759 + C20207 * C3017 + C20202 * C3021) *
                C118 +
            (C20204 * C308 + C20199 * C318 + C20205 * C643 + C20200 * C651 +
             C20206 * C758 + C20201 * C764 + C20207 * C3022 + C20202 * C3026) *
                C50836) *
               C50906 * C50753 * C50822 -
           ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
             C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                C50836 +
            (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
             C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                C118) *
               C50906 * C50753 * C51034) *
              C296 +
          (((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C307 +
             C20206 * C637 + C20201 * C644 + C20207 * C751 + C20202 * C757) *
                C118 +
            (C20204 * C131 + C20199 * C142 + C20205 * C306 + C20200 * C317 +
             C20206 * C645 + C20201 * C652 + C20207 * C756 + C20202 * C763) *
                C50836) *
               C50906 * C50753 * C51034 -
           ((C20207 * C3023 + C20202 * C3027 + C20206 * C756 + C20201 * C763 +
             C20205 * C645 + C20200 * C652 + C20204 * C306 + C20199 * C317) *
                C50836 +
            (C20207 * C3018 + C20202 * C3024 + C20206 * C751 + C20201 * C757 +
             C20205 * C637 + C20200 * C644 + C20204 * C299 + C20199 * C307) *
                C118) *
               C50906 * C50753 * C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C118 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C50836) *
              C50906 * C50753 * C745 -
          ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
            C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
               C50836 +
           (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
            C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
               C118) *
              C50906 * C50753 * C746 +
          ((C20204 * C635 + C20199 * C640 + C20205 * C753 + C20200 * C761 +
            C20206 * C3016 + C20201 * C3019 + C20207 * C3145 + C20202 * C3149) *
               C118 +
           (C20204 * C641 + C20199 * C650 + C20205 * C760 + C20200 * C765 +
            C20206 * C3020 + C20201 * C3025 + C20207 * C3148 + C20202 * C3151) *
               C50836) *
              C50906 * C50753 * C747 -
          ((C20207 * C20569 + C20202 * C20571 + C20206 * C3148 +
            C20201 * C3151 + C20205 * C3020 + C20200 * C3025 + C20204 * C760 +
            C20199 * C765) *
               C50836 +
           (C20207 * C20568 + C20202 * C20570 + C20206 * C3145 +
            C20201 * C3149 + C20205 * C3016 + C20200 * C3019 + C20204 * C753 +
            C20199 * C761) *
               C118) *
              C50906 * C50753 * C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C50836) *
                C5336 +
            ((C17373 * C460 + C17368 * C466 + C17374 * C864 + C50942 * C872) *
                 C118 +
             (C17373 * C467 + C17368 * C478 + C17374 * C873 + C50942 * C888) *
                 C50836) *
                C5337 +
            ((C17373 * C1000 + C17368 * C1005 + C17374 * C1154 +
              C50942 * C1158) *
                 C118 +
             (C17373 * C1006 + C17368 * C1015 + C17374 * C1159 +
              C50942 * C1166) *
                 C50836) *
                C5338) *
               C50753 * C51034 -
           (((C17374 * C3464 + C50942 * C3469 + C17373 * C1159 +
              C17368 * C1166) *
                 C50836 +
             (C17374 * C3460 + C50942 * C3463 + C17373 * C1154 +
              C17368 * C1158) *
                 C118) *
                C5338 +
            ((C17374 * C881 + C50942 * C892 + C17373 * C873 + C17368 * C888) *
                 C50836 +
             (C17374 * C868 + C50942 * C880 + C17373 * C864 + C17368 * C872) *
                 C118) *
                C5337 +
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C50836 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C118) *
                C5336) *
               C50753 * C50822) *
              C295 +
          ((((C17613 + C17612) * C118 + (C17611 + C17610) * C50836) * C5336 +
            ((C19146 + C19147) * C118 + (C19148 + C19149) * C50836) * C5337 +
            ((C17373 * C1155 + C17368 * C1160 + C17374 * C3461 +
              C50942 * C3465) *
                 C118 +
             (C17373 * C1161 + C17368 * C1167 + C17374 * C3466 +
              C50942 * C3470) *
                 C50836) *
                C5338) *
               C50753 * C50822 -
           (((C18395 + C18394) * C50836 + (C18393 + C18392) * C118) * C5338 +
            ((C17798 + C17799) * C50836 + (C17796 + C17797) * C118) * C5337 +
            ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C5336) *
               C50753 * C51034) *
              C296 +
          ((C17432 * C5336 +
            ((C17802 + C17801) * C118 + (C17804 + C17803) * C50836) * C5337 +
            ((C18396 + C18397) * C118 + (C18398 + C18399) * C50836) * C5338) *
               C50753 * C51034 -
           (((C17374 * C3468 + C50942 * C3471 + C17373 * C1163 +
              C17368 * C1168) *
                 C50836 +
             (C17374 * C3462 + C50942 * C3467 + C17373 * C1156 +
              C17368 * C1162) *
                 C118) *
                C5338 +
            ((C19153 + C19152) * C50836 + (C19151 + C19150) * C118) * C5337 +
            C17622 * C5336) *
               C50753 * C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C118 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C50836) *
               C5336 +
           ((C22330 + C22329) * C118 + (C22332 + C22331) * C50836) * C5337 +
           ((C22334 + C22333) * C118 + (C22336 + C22335) * C50836) * C5338) *
              C50753 * C745 -
          (((C17374 * C3464 + C50942 * C3469 + C17373 * C1159 +
             C17368 * C1166) *
                C50836 +
            (C17374 * C3460 + C50942 * C3463 + C17373 * C1154 +
             C17368 * C1158) *
                C118) *
               C5338 +
           ((C17374 * C881 + C50942 * C892 + C17373 * C873 + C17368 * C888) *
                C50836 +
            (C17374 * C868 + C50942 * C880 + C17373 * C864 + C17368 * C872) *
                C118) *
               C5337 +
           ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                C50836 +
            (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                C118) *
               C5336) *
              C50753 * C746 +
          (((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                C118 +
            (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                C50836) *
               C5336 +
           ((C17373 * C868 + C17368 * C880 + C17374 * C3298 + C50942 * C3302) *
                C118 +
            (C17373 * C881 + C17368 * C892 + C17374 * C3303 + C50942 * C3310) *
                C50836) *
               C5337 +
           ((C17373 * C3460 + C17368 * C3463 + C17374 * C3636 +
             C50942 * C3638) *
                C118 +
            (C17373 * C3464 + C17368 * C3469 + C17374 * C3639 +
             C50942 * C3642) *
                C50836) *
               C5338) *
              C50753 * C747 -
          (((C17374 * C20872 + C50942 * C20873 + C17373 * C3639 +
             C17368 * C3642) *
                C50836 +
            (C17374 * C20870 + C50942 * C20871 + C17373 * C3636 +
             C17368 * C3638) *
                C118) *
               C5338 +
           ((C17374 * C3307 + C50942 * C3312 + C17373 * C3303 +
             C17368 * C3310) *
                C50836 +
            (C17374 * C3300 + C50942 * C3306 + C17373 * C3298 +
             C17368 * C3302) *
                C118) *
               C5337 +
           ((C17374 * C3020 + C50942 * C3025 + C17373 * C760 + C17368 * C765) *
                C50836 +
            (C17374 * C3016 + C50942 * C3019 + C17373 * C753 + C17368 * C761) *
                C118) *
               C5336) *
              C50753 * C748) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C458 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C51036 -
            (C17374 * C864 + C50942 * C872 + C17373 * C460 + C17368 * C466) *
                C459 -
            (C17374 * C873 + C50942 * C888 + C17373 * C467 + C17368 * C478) *
                C50848) *
               C50906 * C17370 +
           ((C17408 + C17409) * C458 + (C17410 + C17411) * C51036 -
            (C17796 + C17797) * C459 - (C17798 + C17799) * C50848) *
               C50906 * C17371 +
           C17815 * C17372) *
              C630 +
          (((C17373 * C864 + C17368 * C872 + C17374 * C868 + C50942 * C880) *
                C459 -
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C51036 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C458) +
            (C17373 * C873 + C17368 * C888 + C17374 * C881 + C50942 * C892) *
                C50848) *
               C50906 * C17370 +
           ((C17373 * C865 + C17368 * C874 + C17374 * C869 + C50942 * C882) *
                C459 -
            ((C17610 + C17611) * C51036 + (C17612 + C17613) * C458) +
            (C17373 * C875 + C17368 * C889 + C17374 * C883 + C50942 * C893) *
                C50848) *
               C50906 * C17371 +
           ((C17373 * C866 + C17368 * C876 + C17374 * C870 + C50942 * C884) *
                C459 -
            (C17618 * C51036 + C17619 * C458) +
            (C17373 * C877 + C17368 * C890 + C17374 * C885 + C50942 * C894) *
                C50848) *
               C50906 * C17372) *
              C631 +
          (((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                C458 +
            (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                C51036 -
            (C17374 * C3298 + C50942 * C3302 + C17373 * C868 + C17368 * C880) *
                C459 -
            (C17374 * C3303 + C50942 * C3310 + C17373 * C881 + C17368 * C892) *
                C50848) *
               C50906 * C17370 +
           ((C17978 + C17979) * C458 + (C17980 + C17981) * C51036 -
            (C17374 * C3299 + C50942 * C3304 + C17373 * C869 + C17368 * C882) *
                C459 -
            (C17374 * C3305 + C50942 * C3311 + C17373 * C883 + C17368 * C893) *
                C50848) *
               C50906 * C17371 +
           ((C17982 + C17983) * C458 + (C17984 + C17985) * C51036 -
            (C17374 * C4244 + C50942 * C4245 + C17373 * C870 + C17368 * C884) *
                C459 -
            (C17374 * C4246 + C50942 * C4247 + C17373 * C885 + C17368 * C894) *
                C50848) *
               C50906 * C17372) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C458 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C51036 -
            (C17374 * C864 + C50942 * C872 + C17373 * C460 + C17368 * C466) *
                C459 -
            (C17374 * C873 + C50942 * C888 + C17373 * C467 + C17368 * C478) *
                C50848) *
               C50906 * C17370 +
           ((C17408 + C17409) * C458 + (C17410 + C17411) * C51036 -
            (C17796 + C17797) * C459 - (C17798 + C17799) * C50848) *
               C50906 * C17371 +
           C17815 * C17372) *
              C50806 * C295 +
          (((C17797 + C17796) * C459 -
            ((C17411 + C17410) * C51036 + (C17409 + C17408) * C458) +
            (C17799 + C17798) * C50848) *
               C50906 * C17370 +
           ((C17802 + C17801) * C459 -
            ((C17415 + C17414) * C51036 + (C17413 + C17412) * C458) +
            (C17804 + C17803) * C50848) *
               C50906 * C17371 +
           ((C17805 + C17806) * C459 - (C17426 * C51036 + C17427 * C458) +
            (C17807 + C17808) * C50848) *
               C50906 * C17372) *
              C50806 * C296 +
          (C17815 * C17370 +
           ((C17419 + C17418) * C458 + (C17417 + C17416) * C51036 -
            (C17806 + C17805) * C459 - (C17808 + C17807) * C50848) *
               C50906 * C17371 +
           ((C17420 + C17421) * C458 + (C17422 + C17423) * C51036 -
            (C17374 * C1596 + C50942 * C1597 + C17373 * C464 + C17368 * C474) *
                C459 -
            (C17374 * C1598 + C50942 * C1599 + C17373 * C475 + C17368 * C482) *
                C50848) *
               C50906 * C17372) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C458 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C51036 -
           (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
            C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
               C459 -
           (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
            C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
               C50848) *
              C50906 * C50753 * C50806 * C295 +
          ((C20204 * C461 + C20199 * C468 + C20205 * C865 + C20200 * C874 +
            C20206 * C869 + C20201 * C882 + C20207 * C3299 + C20202 * C3304) *
               C459 -
           ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
             C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                C51036 +
            (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
             C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                C458) +
           (C20204 * C469 + C20199 * C479 + C20205 * C875 + C20200 * C889 +
            C20206 * C883 + C20201 * C893 + C20207 * C3305 + C20202 * C3311) *
               C50848) *
              C50906 * C50753 * C50806 * C296 +
          ((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C307 +
            C20206 * C637 + C20201 * C644 + C20207 * C751 + C20202 * C757) *
               C458 +
           (C20204 * C131 + C20199 * C142 + C20205 * C306 + C20200 * C317 +
            C20206 * C645 + C20201 * C652 + C20207 * C756 + C20202 * C763) *
               C51036 -
           (C20207 * C4244 + C20202 * C4245 + C20206 * C870 + C20201 * C884 +
            C20205 * C866 + C20200 * C876 + C20204 * C462 + C20199 * C470) *
               C459 -
           (C20207 * C4246 + C20202 * C4247 + C20206 * C885 + C20201 * C894 +
            C20205 * C877 + C20200 * C890 + C20204 * C471 + C20199 * C480) *
               C50848) *
              C50906 * C50753 * C50806 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C458 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C51036 -
           (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
            C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
               C459 -
           (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
            C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
               C50848) *
              C50906 * C50753 * C630 +
          ((C20204 * C864 + C20199 * C872 + C20205 * C868 + C20200 * C880 +
            C20206 * C3298 + C20201 * C3302 + C20207 * C3300 + C20202 * C3306) *
               C459 -
           ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
             C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                C51036 +
            (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
             C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                C458) +
           (C20204 * C873 + C20199 * C888 + C20205 * C881 + C20200 * C892 +
            C20206 * C3303 + C20201 * C3310 + C20207 * C3307 + C20202 * C3312) *
               C50848) *
              C50906 * C50753 * C631 +
          ((C20204 * C635 + C20199 * C640 + C20205 * C753 + C20200 * C761 +
            C20206 * C3016 + C20201 * C3019 + C20207 * C3145 + C20202 * C3149) *
               C458 +
           (C20204 * C641 + C20199 * C650 + C20205 * C760 + C20200 * C765 +
            C20206 * C3020 + C20201 * C3025 + C20207 * C3148 + C20202 * C3151) *
               C51036 -
           (C20207 * C20670 + C20202 * C20671 + C20206 * C3300 +
            C20201 * C3306 + C20205 * C3298 + C20200 * C3302 + C20204 * C868 +
            C20199 * C880) *
               C459 -
           (C20207 * C20672 + C20202 * C20673 + C20206 * C3307 +
            C20201 * C3312 + C20205 * C3303 + C20200 * C3310 + C20204 * C881 +
            C20199 * C892) *
               C50848) *
              C50906 * C50753 * C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C458 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C51036 -
            (C22329 + C22330) * C459 - (C22331 + C22332) * C50848) *
               C5336 +
           ((C22330 + C22329) * C458 + (C22332 + C22331) * C51036 -
            (C22333 + C22334) * C459 - (C22335 + C22336) * C50848) *
               C5337 +
           ((C22334 + C22333) * C458 + (C22336 + C22335) * C51036 -
            (C17374 * C3743 + C50942 * C3747 + C17373 * C1244 +
             C17368 * C1248) *
                C459 -
            (C17374 * C3749 + C50942 * C3755 + C17373 * C1249 +
             C17368 * C1256) *
                C50848) *
               C5338) *
              C50753 * C50806 * C295 +
          (((C17797 + C17796) * C459 -
            ((C17411 + C17410) * C51036 + (C17409 + C17408) * C458) +
            (C17799 + C17798) * C50848) *
               C5336 +
           ((C18392 + C18393) * C459 -
            ((C17798 + C17799) * C51036 + (C17796 + C17797) * C458) +
            (C18394 + C18395) * C50848) *
               C5337 +
           ((C17373 * C1245 + C17368 * C1250 + C17374 * C3745 +
             C50942 * C3751) *
                C459 -
            ((C18395 + C18394) * C51036 + (C18393 + C18392) * C458) +
            (C17373 * C1251 + C17368 * C1257 + C17374 * C3753 +
             C50942 * C3757) *
                C50848) *
               C5338) *
              C50753 * C50806 * C296 +
          (C17814 * C5336 +
           ((C17802 + C17801) * C458 + (C17804 + C17803) * C51036 -
            (C18397 + C18396) * C459 - (C18399 + C18398) * C50848) *
               C5337 +
           ((C18396 + C18397) * C458 + (C18398 + C18399) * C51036 -
            (C17374 * C7079 + C50942 * C7080 + C17373 * C1246 +
             C17368 * C1252) *
                C459 -
            (C17374 * C7081 + C50942 * C7082 + C17373 * C1253 +
             C17368 * C1258) *
                C50848) *
               C5338) *
              C50753 * C50806 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C458 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C51036 -
            (C22329 + C22330) * C459 - (C22331 + C22332) * C50848) *
               C5336 +
           ((C22330 + C22329) * C458 + (C22332 + C22331) * C51036 -
            (C22333 + C22334) * C459 - (C22335 + C22336) * C50848) *
               C5337 +
           ((C22334 + C22333) * C458 + (C22336 + C22335) * C51036 -
            (C17374 * C3743 + C50942 * C3747 + C17373 * C1244 +
             C17368 * C1248) *
                C459 -
            (C17374 * C3749 + C50942 * C3755 + C17373 * C1249 +
             C17368 * C1256) *
                C50848) *
               C5338) *
              C50753 * C630 +
          (((C22759 + C22760) * C459 -
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C51036 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C458) +
            (C22761 + C22762) * C50848) *
               C5336 +
           ((C22763 + C22764) * C459 -
            ((C22762 + C22761) * C51036 + (C22760 + C22759) * C458) +
            (C22765 + C22766) * C50848) *
               C5337 +
           ((C17373 * C3743 + C17368 * C3747 + C17374 * C3742 +
             C50942 * C3746) *
                C459 -
            ((C22766 + C22765) * C51036 + (C22764 + C22763) * C458) +
            (C17373 * C3749 + C17368 * C3755 + C17374 * C3748 +
             C50942 * C3754) *
                C50848) *
               C5338) *
              C50753 * C631 +
          (((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                C458 +
            (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                C51036 -
            (C22767 + C22768) * C459 - (C22769 + C22770) * C50848) *
               C5336 +
           ((C22768 + C22767) * C458 + (C22770 + C22769) * C51036 -
            (C22771 + C22772) * C459 - (C22773 + C22774) * C50848) *
               C5337 +
           ((C22772 + C22771) * C458 + (C22774 + C22773) * C51036 -
            (C17374 * C20940 + C50942 * C20941 + C17373 * C3742 +
             C17368 * C3746) *
                C459 -
            (C17374 * C20942 + C50942 * C20943 + C17373 * C3748 +
             C17368 * C3754) *
                C50848) *
               C5338) *
              C50753 * C632) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                  C118 +
              (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                  C50836) *
                 C51051 +
             ((C22330 + C22329) * C118 + (C22332 + C22331) * C50836) * C50970) *
                C51022 +
            (((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) * C51051 +
             (C28035 * C118 + C28036 * C50836) * C50970) *
                C50758) *
               C1358 -
           ((((C19149 + C19148) * C50836 + (C19147 + C19146) * C118) * C50970 +
             ((C17610 + C17611) * C50836 + (C17612 + C17613) * C118) * C51051) *
                C50758 +
            (((C22762 + C22761) * C50836 + (C22760 + C22759) * C118) * C50970 +
             ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                  C50836 +
              (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                  C118) *
                 C51051) *
                C51022) *
               C50822) *
              C51080 +
          (((((C17613 + C17612) * C118 + (C17611 + C17610) * C50836) * C51051 +
             ((C19146 + C19147) * C118 + (C19148 + C19149) * C50836) * C50970) *
                C51022 +
            (((C17609 + C17608) * C118 + (C17607 + C17606) * C50836) * C51051 +
             ((C19150 + C19151) * C118 + (C19152 + C19153) * C50836) * C50970) *
                C50758) *
               C50822 -
           (((C17810 * C50836 + C17809 * C118) * C50970 +
             ((C17415 + C17414) * C50836 + (C17413 + C17412) * C118) * C51051) *
                C50758 +
            ((C28034 * C50836 + C28033 * C118) * C50970 +
             ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C51051) *
                C51022) *
               C1358) *
              C51065 +
          (((C17432 * C51051 + (C28037 * C118 + C28038 * C50836) * C50970) *
                C51022 +
            (((C17419 + C17418) * C118 + (C17417 + C17416) * C50836) * C51051 +
             ((C17805 + C17806) * C118 + (C17807 + C17808) * C50836) * C50970) *
                C50758) *
               C1358 -
           ((((C17374 * C887 + C50942 * C895 + C17373 * C879 + C17368 * C891) *
                  C50836 +
              (C17374 * C871 + C50942 * C886 + C17373 * C867 + C17368 * C878) *
                  C118) *
                 C50970 +
             ((C17617 + C17616) * C50836 + (C17615 + C17614) * C118) * C51051) *
                C50758 +
            (((C19153 + C19152) * C50836 + (C19151 + C19150) * C118) * C50970 +
             C17622 * C51051) *
                C51022) *
               C50822) *
              C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                  C118 +
              (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                  C50836) *
                 C51051 +
             ((C22330 + C22329) * C118 + (C22332 + C22331) * C50836) * C50970) *
                C51022 +
            (((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) * C51051 +
             (C28035 * C118 + C28036 * C50836) * C50970) *
                C50758) *
               C51081 -
           ((((C19149 + C19148) * C50836 + (C19147 + C19146) * C118) * C50970 +
             ((C17610 + C17611) * C50836 + (C17612 + C17613) * C118) * C51051) *
                C50758 +
            (((C22762 + C22761) * C50836 + (C22760 + C22759) * C118) * C50970 +
             ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                  C50836 +
              (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                  C118) *
                 C51051) *
                C51022) *
               C51068 +
           ((((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                  C118 +
              (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                  C50836) *
                 C51051 +
             ((C22768 + C22767) * C118 + (C22770 + C22769) * C50836) * C50970) *
                C51022 +
            (((C17978 + C17979) * C118 + (C17980 + C17981) * C50836) * C51051 +
             ((C28241 + C28242) * C118 + (C28243 + C28244) * C50836) * C50970) *
                C50758) *
               C1463) *
              C1464 +
          (((((C17613 + C17612) * C118 + (C17611 + C17610) * C50836) * C51051 +
             ((C19146 + C19147) * C118 + (C19148 + C19149) * C50836) * C50970) *
                C51022 +
            (((C17609 + C17608) * C118 + (C17607 + C17606) * C50836) * C51051 +
             ((C19150 + C19151) * C118 + (C19152 + C19153) * C50836) * C50970) *
                C50758) *
               C51068 -
           (((C17810 * C50836 + C17809 * C118) * C50970 +
             ((C17415 + C17414) * C50836 + (C17413 + C17412) * C118) * C51051) *
                C50758 +
            ((C28034 * C50836 + C28033 * C118) * C50970 +
             ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C51051) *
                C51022) *
               C51081 -
           ((((C17374 * C4246 + C50942 * C4247 + C17373 * C885 +
               C17368 * C894) *
                  C50836 +
              (C17374 * C4244 + C50942 * C4245 + C17373 * C870 +
               C17368 * C884) *
                  C118) *
                 C50970 +
             ((C17985 + C17984) * C50836 + (C17983 + C17982) * C118) * C51051) *
                C50758 +
            (((C28244 + C28243) * C50836 + (C28242 + C28241) * C118) * C50970 +
             ((C17981 + C17980) * C50836 + (C17979 + C17978) * C118) * C51051) *
                C51022) *
               C1463) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                  C458 +
              (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                  C51036 -
              (C22329 + C22330) * C459 - (C22331 + C22332) * C50848) *
                 C51051 +
             ((C22330 + C22329) * C458 + (C22332 + C22331) * C51036 -
              (C22333 + C22334) * C459 - (C22335 + C22336) * C50848) *
                 C50970) *
                C51022 +
            (((C17408 + C17409) * C458 + (C17410 + C17411) * C51036 -
              C28033 * C459 - C28034 * C50848) *
                 C51051 +
             (C28035 * C458 + C28036 * C51036 - C22931 * C459 -
              C22932 * C50848) *
                 C50970) *
                C50758) *
               C1358 +
           ((((C22759 + C22760) * C459 -
              ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                   C51036 +
               (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                   C458) +
              (C22761 + C22762) * C50848) *
                 C51051 +
             ((C22763 + C22764) * C459 -
              ((C22762 + C22761) * C51036 + (C22760 + C22759) * C458) +
              (C22765 + C22766) * C50848) *
                 C50970) *
                C51022 +
            ((C29735 * C459 -
              ((C17610 + C17611) * C51036 + (C17612 + C17613) * C458) +
              C29736 * C50848) *
                 C51051 +
             ((C23724 + C23723) * C459 - (C29737 * C51036 + C29738 * C458) +
              (C23726 + C23725) * C50848) *
                 C50970) *
                C50758) *
               C50822) *
              C1464 +
          ((((C28035 * C459 -
              ((C17411 + C17410) * C51036 + (C17409 + C17408) * C458) +
              C28036 * C50848) *
                 C51051 +
             (C28763 * C459 - (C28034 * C51036 + C28033 * C458) +
              C28764 * C50848) *
                 C50970) *
                C51022 +
            ((C28037 * C459 -
              ((C17415 + C17414) * C51036 + (C17413 + C17412) * C458) +
              C28038 * C50848) *
                 C51051 +
             ((C18396 + C18397) * C459 - (C17810 * C51036 + C17809 * C458) +
              (C18398 + C18399) * C50848) *
                 C50970) *
                C50758) *
               C1358 +
           ((((C17613 + C17612) * C458 + (C17611 + C17610) * C51036 -
              C29738 * C459 - C29737 * C50848) *
                 C51051 +
             (C29735 * C458 + C29736 * C51036 - (C23723 + C23724) * C459 -
              (C23725 + C23726) * C50848) *
                 C50970) *
                C51022 +
            (((C17609 + C17608) * C458 + (C17607 + C17606) * C51036 -
              (C19151 + C19150) * C459 - (C19153 + C19152) * C50848) *
                 C51051 +
             ((C19150 + C19151) * C458 + (C19152 + C19153) * C51036 -
              (C17374 * C3462 + C50942 * C3467 + C17373 * C1156 +
               C17368 * C1162) *
                  C459 -
              (C17374 * C3468 + C50942 * C3471 + C17373 * C1163 +
               C17368 * C1168) *
                  C50848) *
                 C50970) *
                C50758) *
               C50822) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                  C1730 +
              (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                  C1728 -
              (C22329 + C22330) * C1731 - (C22331 + C22332) * C50848) *
                 C51051 +
             ((C22330 + C22329) * C1730 + (C22332 + C22331) * C1728 -
              (C22333 + C22334) * C1731 - (C22335 + C22336) * C50848) *
                 C50970) *
                C51022 +
            (((C17408 + C17409) * C1730 + (C17410 + C17411) * C1728 -
              C28033 * C1731 - C28034 * C50848) *
                 C51051 +
             (C28035 * C1730 + C28036 * C1728 - C22931 * C1731 -
              C22932 * C50848) *
                 C50970) *
                C50758) *
               C1358 +
           ((((C22759 + C22760) * C1731 -
              ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                   C1728 +
               (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                   C1730) +
              (C22761 + C22762) * C50848) *
                 C51051 +
             ((C22763 + C22764) * C1731 -
              ((C22762 + C22761) * C1728 + (C22760 + C22759) * C1730) +
              (C22765 + C22766) * C50848) *
                 C50970) *
                C51022 +
            ((C29735 * C1731 -
              ((C17610 + C17611) * C1728 + (C17612 + C17613) * C1730) +
              C29736 * C50848) *
                 C51051 +
             ((C23724 + C23723) * C1731 - (C29737 * C1728 + C29738 * C1730) +
              (C23726 + C23725) * C50848) *
                 C50970) *
                C50758) *
               C50822) *
              C51027 +
          ((((C28035 * C1731 -
              ((C17411 + C17410) * C1728 + (C17409 + C17408) * C1730) +
              C28036 * C50848) *
                 C51051 +
             (C28763 * C1731 - (C28034 * C1728 + C28033 * C1730) +
              C28764 * C50848) *
                 C50970) *
                C51022 +
            ((C28037 * C1731 -
              ((C17415 + C17414) * C1728 + (C17413 + C17412) * C1730) +
              C28038 * C50848) *
                 C51051 +
             ((C18396 + C18397) * C1731 - (C17810 * C1728 + C17809 * C1730) +
              (C18398 + C18399) * C50848) *
                 C50970) *
                C50758) *
               C1358 +
           ((((C17613 + C17612) * C1730 + (C17611 + C17610) * C1728 -
              C29738 * C1731 - C29737 * C50848) *
                 C51051 +
             (C29735 * C1730 + C29736 * C1728 - (C23723 + C23724) * C1731 -
              (C23725 + C23726) * C50848) *
                 C50970) *
                C51022 +
            (((C17609 + C17608) * C1730 + (C17607 + C17606) * C1728 -
              (C19151 + C19150) * C1731 - (C19153 + C19152) * C50848) *
                 C51051 +
             ((C19150 + C19151) * C1730 + (C19152 + C19153) * C1728 -
              (C17374 * C3462 + C50942 * C3467 + C17373 * C1156 +
               C17368 * C1162) *
                  C1731 -
              (C17374 * C3468 + C50942 * C3471 + C17373 * C1163 +
               C17368 * C1168) *
                  C50848) *
                 C50970) *
                C50758) *
               C50822) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C1730 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C1728 -
             (C22329 + C22330) * C1731 - (C22331 + C22332) * C50848) *
                C51051 +
            ((C22330 + C22329) * C1730 + (C22332 + C22331) * C1728 -
             (C22333 + C22334) * C1731 - (C22335 + C22336) * C50848) *
                C50970) *
               C51022 +
           (((C17408 + C17409) * C1730 + (C17410 + C17411) * C1728 -
             C28033 * C1731 - C28034 * C50848) *
                C51051 +
            (C28035 * C1730 + C28036 * C1728 - C22931 * C1731 -
             C22932 * C50848) *
                C50970) *
               C50758) *
              C51081 +
          ((((C22759 + C22760) * C1731 -
             ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                  C1728 +
              (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                  C1730) +
             (C22761 + C22762) * C50848) *
                C51051 +
            ((C22763 + C22764) * C1731 -
             ((C22762 + C22761) * C1728 + (C22760 + C22759) * C1730) +
             (C22765 + C22766) * C50848) *
                C50970) *
               C51022 +
           ((C29735 * C1731 -
             ((C17610 + C17611) * C1728 + (C17612 + C17613) * C1730) +
             C29736 * C50848) *
                C51051 +
            ((C23724 + C23723) * C1731 - (C29737 * C1728 + C29738 * C1730) +
             (C23726 + C23725) * C50848) *
                C50970) *
               C50758) *
              C51068 +
          ((((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                 C1730 +
             (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                 C1728 -
             (C22767 + C22768) * C1731 - (C22769 + C22770) * C50848) *
                C51051 +
            ((C22768 + C22767) * C1730 + (C22770 + C22769) * C1728 -
             (C22771 + C22772) * C1731 - (C22773 + C22774) * C50848) *
                C50970) *
               C51022 +
           (((C17978 + C17979) * C1730 + (C17980 + C17981) * C1728 -
             (C28242 + C28241) * C1731 - (C28244 + C28243) * C50848) *
                C51051 +
            ((C28241 + C28242) * C1730 + (C28243 + C28244) * C1728 -
             (C17374 * C3637 + C50942 * C3640 + C17373 * C3461 +
              C17368 * C3465) *
                 C1731 -
             (C17374 * C3641 + C50942 * C3643 + C17373 * C3466 +
              C17368 * C3470) *
                 C50848) *
                C50970) *
               C50758) *
              C1463) *
         C50774) /
        (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C1999 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C51082 -
             (C22329 + C22330) * C2000 - (C22331 + C22332) * C51071 +
             C22921 * C2001 + C22922 * C1998) *
                C51051 +
            ((C22330 + C22329) * C1999 + (C22332 + C22331) * C51082 -
             (C22333 + C22334) * C2000 - (C22335 + C22336) * C51071 +
             (C22941 + C22942) * C2001 + (C22943 + C22944) * C1998) *
                C50970) *
               C51022 +
           (((C17408 + C17409) * C1999 + (C17410 + C17411) * C51082 -
             C28033 * C2000 - C28034 * C51071 + C28763 * C2001 +
             C28764 * C1998) *
                C51051 +
            (C28035 * C1999 + C28036 * C51082 - C22931 * C2000 -
             C22932 * C51071 + (C22946 + C22945) * C2001 +
             (C22948 + C22947) * C1998) *
                C50970) *
               C50758) *
              C1358 +
          ((((C22759 + C22760) * C2000 -
             ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                  C51082 +
              (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                  C1999) +
             (C22761 + C22762) * C51071 - C23099 * C2001 - C23100 * C1998) *
                C51051 +
            ((C22763 + C22764) * C2000 -
             ((C22762 + C22761) * C51082 + (C22760 + C22759) * C1999) +
             (C22765 + C22766) * C51071 - (C23109 + C23110) * C2001 -
             (C23111 + C23112) * C1998) *
                C50970) *
               C51022 +
           ((C29735 * C2000 -
             ((C17610 + C17611) * C51082 + (C17612 + C17613) * C1999) +
             C29736 * C51071 - (C23723 + C23724) * C2001 -
             (C23725 + C23726) * C1998) *
                C51051 +
            ((C23724 + C23723) * C2000 - (C29737 * C51082 + C29738 * C1999) +
             (C23726 + C23725) * C51071 -
             (C17374 * C3744 + C50942 * C3750 + C17373 * C3745 +
              C17368 * C3751) *
                 C2001 -
             (C17374 * C3752 + C50942 * C3756 + C17373 * C3753 +
              C17368 * C3757) *
                 C1998) *
                C50970) *
               C50758) *
              C50822) *
         C50774) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                  C118 +
              (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                  C50836) *
                 C51051 +
             ((C22330 + C22329) * C118 + (C22332 + C22331) * C50836) * C50970) *
                C51022 +
            (((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) * C51051 +
             (C28035 * C118 + C28036 * C50836) * C50970) *
                C50758) *
               C630 -
           ((((C19149 + C19148) * C50836 + (C19147 + C19146) * C118) * C50970 +
             ((C17610 + C17611) * C50836 + (C17612 + C17613) * C118) * C51051) *
                C50758 +
            (((C22762 + C22761) * C50836 + (C22760 + C22759) * C118) * C50970 +
             ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                  C50836 +
              (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                  C118) *
                 C51051) *
                C51022) *
               C631 +
           ((((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                  C118 +
              (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                  C50836) *
                 C51051 +
             ((C22768 + C22767) * C118 + (C22770 + C22769) * C50836) * C50970) *
                C51022 +
            (((C17978 + C17979) * C118 + (C17980 + C17981) * C50836) * C51051 +
             ((C28241 + C28242) * C118 + (C28243 + C28244) * C50836) * C50970) *
                C50758) *
               C632) *
              C51027 +
          (((((C17613 + C17612) * C118 + (C17611 + C17610) * C50836) * C51051 +
             ((C19146 + C19147) * C118 + (C19148 + C19149) * C50836) * C50970) *
                C51022 +
            (((C17609 + C17608) * C118 + (C17607 + C17606) * C50836) * C51051 +
             ((C19150 + C19151) * C118 + (C19152 + C19153) * C50836) * C50970) *
                C50758) *
               C631 -
           (((C17810 * C50836 + C17809 * C118) * C50970 +
             ((C17415 + C17414) * C50836 + (C17413 + C17412) * C118) * C51051) *
                C50758 +
            ((C28034 * C50836 + C28033 * C118) * C50970 +
             ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C51051) *
                C51022) *
               C630 -
           ((((C17374 * C4246 + C50942 * C4247 + C17373 * C885 +
               C17368 * C894) *
                  C50836 +
              (C17374 * C4244 + C50942 * C4245 + C17373 * C870 +
               C17368 * C884) *
                  C118) *
                 C50970 +
             ((C17985 + C17984) * C50836 + (C17983 + C17982) * C118) * C51051) *
                C50758 +
            (((C28244 + C28243) * C50836 + (C28242 + C28241) * C118) * C50970 +
             ((C17981 + C17980) * C50836 + (C17979 + C17978) * C118) * C51051) *
                C51022) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C50836) *
                C51051 +
            ((C22330 + C22329) * C118 + (C22332 + C22331) * C50836) * C50970) *
               C51022 +
           (((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) * C51051 +
            ((C17797 + C17796) * C118 + (C17799 + C17798) * C50836) * C50970) *
               C50758) *
              C50806 * C113 -
          (((C17810 * C50836 + C17809 * C118) * C50970 +
            ((C17415 + C17414) * C50836 + (C17413 + C17412) * C118) * C51051) *
               C50758 +
           (((C17798 + C17799) * C50836 + (C17796 + C17797) * C118) * C50970 +
            ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C51051) *
               C51022) *
              C50806 * C114 +
          ((C17432 * C51051 +
            ((C17802 + C17801) * C118 + (C17804 + C17803) * C50836) * C50970) *
               C51022 +
           (((C17419 + C17418) * C118 + (C17417 + C17416) * C50836) * C51051 +
            ((C17805 + C17806) * C118 + (C17807 + C17808) * C50836) * C50970) *
               C50758) *
              C50806 * C115 -
          ((((C17374 * C1598 + C50942 * C1599 + C17373 * C475 + C17368 * C482) *
                 C50836 +
             (C17374 * C1596 + C50942 * C1597 + C17373 * C464 + C17368 * C474) *
                 C118) *
                C50970 +
            ((C17423 + C17422) * C50836 + (C17421 + C17420) * C118) * C51051) *
               C50758 +
           (((C17808 + C17807) * C50836 + (C17806 + C17805) * C118) * C50970 +
            C17433 * C51051) *
               C51022) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C997 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C994 -
             (C22329 + C22330) * C998 - (C22331 + C22332) * C995 +
             C22921 * C999 + C22922 * C996) *
                C51051 +
            ((C22330 + C22329) * C997 + (C22332 + C22331) * C994 -
             (C22333 + C22334) * C998 - (C22335 + C22336) * C995 +
             (C22941 + C22942) * C999 + (C22943 + C22944) * C996) *
                C50970) *
               C51022 +
           (((C17408 + C17409) * C997 + (C17410 + C17411) * C994 -
             C28033 * C998 - C28034 * C995 + C28763 * C999 + C28764 * C996) *
                C51051 +
            (C28035 * C997 + C28036 * C994 - C22931 * C998 - C22932 * C995 +
             (C22946 + C22945) * C999 + (C22948 + C22947) * C996) *
                C50970) *
               C50758) *
              C50806 * C51027 +
          (((C28035 * C998 -
             ((C17411 + C17410) * C994 + (C17409 + C17408) * C997) +
             C28036 * C995 - C22931 * C999 - C22932 * C996) *
                C51051 +
            (C28763 * C998 - (C28034 * C994 + C28033 * C997) + C28764 * C995 -
             (C22945 + C22946) * C999 - (C22947 + C22948) * C996) *
                C50970) *
               C51022 +
           ((C28037 * C998 -
             ((C17415 + C17414) * C994 + (C17413 + C17412) * C997) +
             C28038 * C995 - (C18397 + C18396) * C999 -
             (C18399 + C18398) * C996) *
                C51051 +
            ((C18396 + C18397) * C998 - (C17810 * C994 + C17809 * C997) +
             (C18398 + C18399) * C995 -
             (C17374 * C7079 + C50942 * C7080 + C17373 * C1246 +
              C17368 * C1252) *
                 C999 -
             (C17374 * C7081 + C50942 * C7082 + C17373 * C1253 +
              C17368 * C1258) *
                 C996) *
                C50970) *
               C50758) *
              C50806 * C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C50836) *
                C51051 +
            ((C22330 + C22329) * C118 + (C22332 + C22331) * C50836) * C50970) *
               C51022 +
           (((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) * C51051 +
            (C28035 * C118 + C28036 * C50836) * C50970) *
               C50758) *
              C745 -
          ((((C19149 + C19148) * C50836 + (C19147 + C19146) * C118) * C50970 +
            ((C17610 + C17611) * C50836 + (C17612 + C17613) * C118) * C51051) *
               C50758 +
           (((C22762 + C22761) * C50836 + (C22760 + C22759) * C118) * C50970 +
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C50836 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C118) *
                C51051) *
               C51022) *
              C746 +
          ((((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                 C118 +
             (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                 C50836) *
                C51051 +
            ((C22768 + C22767) * C118 + (C22770 + C22769) * C50836) * C50970) *
               C51022 +
           (((C17978 + C17979) * C118 + (C17980 + C17981) * C50836) * C51051 +
            ((C28241 + C28242) * C118 + (C28243 + C28244) * C50836) * C50970) *
               C50758) *
              C747 -
          ((((C17374 * C3309 + C50942 * C3313 + C17373 * C3305 +
              C17368 * C3311) *
                 C50836 +
             (C17374 * C3301 + C50942 * C3308 + C17373 * C3299 +
              C17368 * C3304) *
                 C118) *
                C50970 +
            ((C17374 * C3022 + C50942 * C3026 + C17373 * C758 + C17368 * C764) *
                 C50836 +
             (C17374 * C3017 + C50942 * C3021 + C17373 * C752 + C17368 * C759) *
                 C118) *
                C51051) *
               C50758 +
           (((C17374 * C3307 + C50942 * C3312 + C17373 * C3303 +
              C17368 * C3310) *
                 C50836 +
             (C17374 * C3300 + C50942 * C3306 + C17373 * C3298 +
              C17368 * C3302) *
                 C118) *
                C50970 +
            ((C17374 * C3020 + C50942 * C3025 + C17373 * C760 + C17368 * C765) *
                 C50836 +
             (C17374 * C3016 + C50942 * C3019 + C17373 * C753 + C17368 * C761) *
                 C118) *
                C51051) *
               C51022) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                  C118 +
              (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                  C50836) *
                 C51051 +
             ((C22330 + C22329) * C118 + (C22332 + C22331) * C50836) * C50970) *
                C51022 +
            (((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) * C51051 +
             ((C17797 + C17796) * C118 + (C17799 + C17798) * C50836) * C50970) *
                C50758) *
               C51034 -
           ((((C19149 + C19148) * C50836 + (C19147 + C19146) * C118) * C50970 +
             ((C17610 + C17611) * C50836 + (C17612 + C17613) * C118) * C51051) *
                C50758 +
            (((C22762 + C22761) * C50836 + (C22760 + C22759) * C118) * C50970 +
             ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                  C50836 +
              (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                  C118) *
                 C51051) *
                C51022) *
               C50822) *
              C295 +
          (((((C17613 + C17612) * C118 + (C17611 + C17610) * C50836) * C51051 +
             ((C19146 + C19147) * C118 + (C19148 + C19149) * C50836) * C50970) *
                C51022 +
            (((C17609 + C17608) * C118 + (C17607 + C17606) * C50836) * C51051 +
             ((C19150 + C19151) * C118 + (C19152 + C19153) * C50836) * C50970) *
                C50758) *
               C50822 -
           (((C17810 * C50836 + C17809 * C118) * C50970 +
             ((C17415 + C17414) * C50836 + (C17413 + C17412) * C118) * C51051) *
                C50758 +
            (((C17798 + C17799) * C50836 + (C17796 + C17797) * C118) * C50970 +
             ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C51051) *
                C51022) *
               C51034) *
              C296 +
          (((C17432 * C51051 +
             ((C17802 + C17801) * C118 + (C17804 + C17803) * C50836) * C50970) *
                C51022 +
            (((C17419 + C17418) * C118 + (C17417 + C17416) * C50836) * C51051 +
             ((C17805 + C17806) * C118 + (C17807 + C17808) * C50836) * C50970) *
                C50758) *
               C51034 -
           ((((C17374 * C887 + C50942 * C895 + C17373 * C879 + C17368 * C891) *
                  C50836 +
              (C17374 * C871 + C50942 * C886 + C17373 * C867 + C17368 * C878) *
                  C118) *
                 C50970 +
             ((C17617 + C17616) * C50836 + (C17615 + C17614) * C118) * C51051) *
                C50758 +
            (((C19153 + C19152) * C50836 + (C19151 + C19150) * C118) * C50970 +
             C17622 * C51051) *
                C51022) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C997 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C994 -
             (C22329 + C22330) * C998 - (C22331 + C22332) * C995 +
             C22921 * C999 + C22922 * C996) *
                C51051 +
            ((C22330 + C22329) * C997 + (C22332 + C22331) * C994 -
             (C22333 + C22334) * C998 - (C22335 + C22336) * C995 +
             (C22941 + C22942) * C999 + (C22943 + C22944) * C996) *
                C50970) *
               C51022 +
           (((C17408 + C17409) * C997 + (C17410 + C17411) * C994 -
             C28033 * C998 - C28034 * C995 + C28763 * C999 + C28764 * C996) *
                C51051 +
            (C28035 * C997 + C28036 * C994 - C22931 * C998 - C22932 * C995 +
             (C22946 + C22945) * C999 + (C22948 + C22947) * C996) *
                C50970) *
               C50758) *
              C51034 +
          ((((C22759 + C22760) * C998 -
             ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                  C994 +
              (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                  C997) +
             (C22761 + C22762) * C995 - C23099 * C999 - C23100 * C996) *
                C51051 +
            ((C22763 + C22764) * C998 -
             ((C22762 + C22761) * C994 + (C22760 + C22759) * C997) +
             (C22765 + C22766) * C995 - (C23109 + C23110) * C999 -
             (C23111 + C23112) * C996) *
                C50970) *
               C51022 +
           (((C19146 + C19147) * C998 -
             ((C17610 + C17611) * C994 + (C17612 + C17613) * C997) +
             (C19148 + C19149) * C995 - (C23723 + C23724) * C999 -
             (C23725 + C23726) * C996) *
                C51051 +
            ((C23724 + C23723) * C998 -
             ((C19149 + C19148) * C994 + (C19147 + C19146) * C997) +
             (C23726 + C23725) * C995 -
             (C17374 * C3744 + C50942 * C3750 + C17373 * C3745 +
              C17368 * C3751) *
                 C999 -
             (C17374 * C3752 + C50942 * C3756 + C17373 * C3753 +
              C17368 * C3757) *
                 C996) *
                C50970) *
               C50758) *
              C50822) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C458 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C51036 -
             (C22329 + C22330) * C459 - (C22331 + C22332) * C50848) *
                C51051 +
            ((C22330 + C22329) * C458 + (C22332 + C22331) * C51036 -
             (C22333 + C22334) * C459 - (C22335 + C22336) * C50848) *
                C50970) *
               C51022 +
           (((C17408 + C17409) * C458 + (C17410 + C17411) * C51036 -
             C28033 * C459 - C28034 * C50848) *
                C51051 +
            (C28035 * C458 + C28036 * C51036 - C22931 * C459 -
             C22932 * C50848) *
                C50970) *
               C50758) *
              C630 +
          ((((C22759 + C22760) * C459 -
             ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                  C51036 +
              (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                  C458) +
             (C22761 + C22762) * C50848) *
                C51051 +
            ((C22763 + C22764) * C459 -
             ((C22762 + C22761) * C51036 + (C22760 + C22759) * C458) +
             (C22765 + C22766) * C50848) *
                C50970) *
               C51022 +
           (((C19146 + C19147) * C459 -
             ((C17610 + C17611) * C51036 + (C17612 + C17613) * C458) +
             (C19148 + C19149) * C50848) *
                C51051 +
            ((C23724 + C23723) * C459 -
             ((C19149 + C19148) * C51036 + (C19147 + C19146) * C458) +
             (C23726 + C23725) * C50848) *
                C50970) *
               C50758) *
              C631 +
          ((((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                 C458 +
             (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                 C51036 -
             (C22767 + C22768) * C459 - (C22769 + C22770) * C50848) *
                C51051 +
            ((C22768 + C22767) * C458 + (C22770 + C22769) * C51036 -
             (C22771 + C22772) * C459 - (C22773 + C22774) * C50848) *
                C50970) *
               C51022 +
           (((C17978 + C17979) * C458 + (C17980 + C17981) * C51036 -
             (C28242 + C28241) * C459 - (C28244 + C28243) * C50848) *
                C51051 +
            ((C28241 + C28242) * C458 + (C28243 + C28244) * C51036 -
             (C17374 * C3637 + C50942 * C3640 + C17373 * C3461 +
              C17368 * C3465) *
                 C459 -
             (C17374 * C3641 + C50942 * C3643 + C17373 * C3466 +
              C17368 * C3470) *
                 C50848) *
                C50970) *
               C50758) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C458 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C51036 -
             (C22329 + C22330) * C459 - (C22331 + C22332) * C50848) *
                C51051 +
            ((C22330 + C22329) * C458 + (C22332 + C22331) * C51036 -
             (C22333 + C22334) * C459 - (C22335 + C22336) * C50848) *
                C50970) *
               C51022 +
           (((C17408 + C17409) * C458 + (C17410 + C17411) * C51036 -
             C28033 * C459 - C28034 * C50848) *
                C51051 +
            (C28035 * C458 + C28036 * C51036 - C22931 * C459 -
             C22932 * C50848) *
                C50970) *
               C50758) *
              C50806 * C295 +
          (((C28035 * C459 -
             ((C17411 + C17410) * C51036 + (C17409 + C17408) * C458) +
             C28036 * C50848) *
                C51051 +
            ((C18392 + C18393) * C459 - (C28034 * C51036 + C28033 * C458) +
             (C18394 + C18395) * C50848) *
                C50970) *
               C51022 +
           ((C28037 * C459 -
             ((C17415 + C17414) * C51036 + (C17413 + C17412) * C458) +
             C28038 * C50848) *
                C51051 +
            ((C18396 + C18397) * C459 - (C17810 * C51036 + C17809 * C458) +
             (C18398 + C18399) * C50848) *
                C50970) *
               C50758) *
              C50806 * C296 +
          ((C17814 * C51051 +
            (C28037 * C458 + C28038 * C51036 - (C18397 + C18396) * C459 -
             (C18399 + C18398) * C50848) *
                C50970) *
               C51022 +
           (((C17419 + C17418) * C458 + (C17417 + C17416) * C51036 -
             (C17806 + C17805) * C459 - (C17808 + C17807) * C50848) *
                C51051 +
            ((C17805 + C17806) * C458 + (C17807 + C17808) * C51036 -
             (C17374 * C1157 + C50942 * C1164 + C17373 * C1003 +
              C17368 * C1011) *
                 C459 -
             (C17374 * C1165 + C50942 * C1169 + C17373 * C1012 +
              C17368 * C1018) *
                 C50848) *
                C50970) *
               C50758) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C1240 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C1236 -
            (C22329 + C22330) * C1241 - (C22331 + C22332) * C1237 +
            C22921 * C1242 + C22922 * C1238 - C23215 * C1243 - C23216 * C1239) *
               C51051 +
           ((C22330 + C22329) * C1240 + (C22332 + C22331) * C1236 -
            (C22333 + C22334) * C1241 - (C22335 + C22336) * C1237 +
            (C22941 + C22942) * C1242 + (C22943 + C22944) * C1238 -
            (C23225 + C23226) * C1243 - (C23227 + C23228) * C1239) *
               C50970) *
              C51022 +
          (((C17408 + C17409) * C1240 + (C17410 + C17411) * C1236 -
            C28033 * C1241 - C28034 * C1237 + C28763 * C1242 + C28764 * C1238 -
            (C22945 + C22946) * C1243 - (C22947 + C22948) * C1239) *
               C51051 +
           (C28035 * C1240 + C28036 * C1236 - C22931 * C1241 - C22932 * C1237 +
            (C22946 + C22945) * C1242 + (C22948 + C22947) * C1238 -
            (C17374 * C6462 + C50942 * C6465 + C17373 * C6280 +
             C17368 * C6284) *
                C1243 -
            (C17374 * C6466 + C50942 * C6468 + C17373 * C6285 +
             C17368 * C6289) *
                C1239) *
               C50970) *
              C50758) *
         C50806 * C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C1730 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C1728 -
             (C22329 + C22330) * C1731 - (C22331 + C22332) * C50848) *
                C51051 +
            ((C22330 + C22329) * C1730 + (C22332 + C22331) * C1728 -
             (C22333 + C22334) * C1731 - (C22335 + C22336) * C50848) *
                C50970) *
               C51022 +
           (((C17408 + C17409) * C1730 + (C17410 + C17411) * C1728 -
             C28033 * C1731 - C28034 * C50848) *
                C51051 +
            (C28035 * C1730 + C28036 * C1728 - C22931 * C1731 -
             C22932 * C50848) *
                C50970) *
               C50758) *
              C50806 * C51080 +
          (((C28035 * C1731 -
             ((C17411 + C17410) * C1728 + (C17409 + C17408) * C1730) +
             C28036 * C50848) *
                C51051 +
            (C28763 * C1731 - (C28034 * C1728 + C28033 * C1730) +
             C28764 * C50848) *
                C50970) *
               C51022 +
           ((C28037 * C1731 -
             ((C17415 + C17414) * C1728 + (C17413 + C17412) * C1730) +
             C28038 * C50848) *
                C51051 +
            ((C18396 + C18397) * C1731 - (C17810 * C1728 + C17809 * C1730) +
             (C18398 + C18399) * C50848) *
                C50970) *
               C50758) *
              C50806 * C51065 +
          ((C19306 * C51051 +
            (C28037 * C1730 + C28038 * C1728 - (C18397 + C18396) * C1731 -
             (C18399 + C18398) * C50848) *
                C50970) *
               C51022 +
           (((C17419 + C17418) * C1730 + (C17417 + C17416) * C1728 -
             (C17806 + C17805) * C1731 - (C17808 + C17807) * C50848) *
                C51051 +
            ((C17805 + C17806) * C1730 + (C17807 + C17808) * C1728 -
             (C17374 * C1157 + C50942 * C1164 + C17373 * C1003 +
              C17368 * C1011) *
                 C1731 -
             (C17374 * C1165 + C50942 * C1169 + C17373 * C1012 +
              C17368 * C1018) *
                 C50848) *
                C50970) *
               C50758) *
              C50806 * C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                  C1730 +
              (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                  C1728 -
              (C22329 + C22330) * C1731 - (C22331 + C22332) * C50848) *
                 C51051 +
             ((C22330 + C22329) * C1730 + (C22332 + C22331) * C1728 -
              (C22333 + C22334) * C1731 - (C22335 + C22336) * C50848) *
                 C50970) *
                C51022 +
            (((C17408 + C17409) * C1730 + (C17410 + C17411) * C1728 -
              C28033 * C1731 - C28034 * C50848) *
                 C51051 +
             (C28035 * C1730 + C28036 * C1728 - C22931 * C1731 -
              C22932 * C50848) *
                 C50970) *
                C50758) *
               C51034 +
           ((((C22759 + C22760) * C1731 -
              ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                   C1728 +
               (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                   C1730) +
              (C22761 + C22762) * C50848) *
                 C51051 +
             ((C22763 + C22764) * C1731 -
              ((C22762 + C22761) * C1728 + (C22760 + C22759) * C1730) +
              (C22765 + C22766) * C50848) *
                 C50970) *
                C51022 +
            ((C29735 * C1731 -
              ((C17610 + C17611) * C1728 + (C17612 + C17613) * C1730) +
              C29736 * C50848) *
                 C51051 +
             ((C23724 + C23723) * C1731 - (C29737 * C1728 + C29738 * C1730) +
              (C23726 + C23725) * C50848) *
                 C50970) *
                C50758) *
               C50822) *
              C1464 +
          ((((C28035 * C1731 -
              ((C17411 + C17410) * C1728 + (C17409 + C17408) * C1730) +
              C28036 * C50848) *
                 C51051 +
             (C28763 * C1731 - (C28034 * C1728 + C28033 * C1730) +
              C28764 * C50848) *
                 C50970) *
                C51022 +
            ((C28037 * C1731 -
              ((C17415 + C17414) * C1728 + (C17413 + C17412) * C1730) +
              C28038 * C50848) *
                 C51051 +
             ((C18396 + C18397) * C1731 - (C17810 * C1728 + C17809 * C1730) +
              (C18398 + C18399) * C50848) *
                 C50970) *
                C50758) *
               C51034 +
           ((((C17613 + C17612) * C1730 + (C17611 + C17610) * C1728 -
              C29738 * C1731 - C29737 * C50848) *
                 C51051 +
             (C29735 * C1730 + C29736 * C1728 - (C23723 + C23724) * C1731 -
              (C23725 + C23726) * C50848) *
                 C50970) *
                C51022 +
            (((C17609 + C17608) * C1730 + (C17607 + C17606) * C1728 -
              (C19151 + C19150) * C1731 - (C19153 + C19152) * C50848) *
                 C51051 +
             ((C19150 + C19151) * C1730 + (C19152 + C19153) * C1728 -
              (C17374 * C3462 + C50942 * C3467 + C17373 * C1156 +
               C17368 * C1162) *
                  C1731 -
              (C17374 * C3468 + C50942 * C3471 + C17373 * C1163 +
               C17368 * C1168) *
                  C50848) *
                 C50970) *
                C50758) *
               C50822) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C1999 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C51082 -
             (C22329 + C22330) * C2000 - (C22331 + C22332) * C51071 +
             C22921 * C2001 + C22922 * C1998) *
                C51051 +
            ((C22330 + C22329) * C1999 + (C22332 + C22331) * C51082 -
             (C22333 + C22334) * C2000 - (C22335 + C22336) * C51071 +
             (C22941 + C22942) * C2001 + (C22943 + C22944) * C1998) *
                C50970) *
               C51022 +
           (((C17408 + C17409) * C1999 + (C17410 + C17411) * C51082 -
             C28033 * C2000 - C28034 * C51071 + C28763 * C2001 +
             C28764 * C1998) *
                C51051 +
            (C28035 * C1999 + C28036 * C51082 - C22931 * C2000 -
             C22932 * C51071 + (C22946 + C22945) * C2001 +
             (C22948 + C22947) * C1998) *
                C50970) *
               C50758) *
              C50806 * C1464 +
          (((C28035 * C2000 -
             ((C17411 + C17410) * C51082 + (C17409 + C17408) * C1999) +
             C28036 * C51071 - C22931 * C2001 - C22932 * C1998) *
                C51051 +
            (C28763 * C2000 - (C28034 * C51082 + C28033 * C1999) +
             C28764 * C51071 - (C22945 + C22946) * C2001 -
             (C22947 + C22948) * C1998) *
                C50970) *
               C51022 +
           ((C28037 * C2000 -
             ((C17415 + C17414) * C51082 + (C17413 + C17412) * C1999) +
             C28038 * C51071 - (C18397 + C18396) * C2001 -
             (C18399 + C18398) * C1998) *
                C51051 +
            ((C18396 + C18397) * C2000 - (C17810 * C51082 + C17809 * C1999) +
             (C18398 + C18399) * C51071 -
             (C17374 * C7079 + C50942 * C7080 + C17373 * C1246 +
              C17368 * C1252) *
                 C2001 -
             (C17374 * C7081 + C50942 * C7082 + C17373 * C1253 +
              C17368 * C1258) *
                 C1998) *
                C50970) *
               C50758) *
              C50806 * C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C50836) *
                C51051 +
            ((C22330 + C22329) * C118 + (C22332 + C22331) * C50836) * C50970) *
               C51022 +
           (((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) * C51051 +
            ((C17797 + C17796) * C118 + (C17799 + C17798) * C50836) * C50970) *
               C50758) *
              C50806 * C113 -
          (((C17810 * C50836 + C17809 * C118) * C50970 +
            ((C17415 + C17414) * C50836 + (C17413 + C17412) * C118) * C51051) *
               C50758 +
           (((C17798 + C17799) * C50836 + (C17796 + C17797) * C118) * C50970 +
            ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C51051) *
               C51022) *
              C50806 * C114 +
          ((C17432 * C51051 +
            ((C17802 + C17801) * C118 + (C17804 + C17803) * C50836) * C50970) *
               C51022 +
           (((C17419 + C17418) * C118 + (C17417 + C17416) * C50836) * C51051 +
            ((C17805 + C17806) * C118 + (C17807 + C17808) * C50836) * C50970) *
               C50758) *
              C50806 * C115 -
          ((((C17374 * C1598 + C50942 * C1599 + C17373 * C475 + C17368 * C482) *
                 C50836 +
             (C17374 * C1596 + C50942 * C1597 + C17373 * C464 + C17368 * C474) *
                 C118) *
                C50970 +
            ((C17423 + C17422) * C50836 + (C17421 + C17420) * C118) * C51051) *
               C50758 +
           (((C17808 + C17807) * C50836 + (C17806 + C17805) * C118) * C50970 +
            C17433 * C51051) *
               C51022) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                  C118 +
              (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                  C50836) *
                 C51051 +
             ((C22330 + C22329) * C118 + (C22332 + C22331) * C50836) * C50970) *
                C51022 +
            (((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) * C51051 +
             (C28035 * C118 + C28036 * C50836) * C50970) *
                C50758) *
               C630 -
           ((((C19149 + C19148) * C50836 + (C19147 + C19146) * C118) * C50970 +
             ((C17610 + C17611) * C50836 + (C17612 + C17613) * C118) * C51051) *
                C50758 +
            (((C22762 + C22761) * C50836 + (C22760 + C22759) * C118) * C50970 +
             ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                  C50836 +
              (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                  C118) *
                 C51051) *
                C51022) *
               C631 +
           ((((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                  C118 +
              (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                  C50836) *
                 C51051 +
             ((C22768 + C22767) * C118 + (C22770 + C22769) * C50836) * C50970) *
                C51022 +
            (((C17978 + C17979) * C118 + (C17980 + C17981) * C50836) * C51051 +
             ((C28241 + C28242) * C118 + (C28243 + C28244) * C50836) * C50970) *
                C50758) *
               C632) *
              C51027 +
          (((((C17613 + C17612) * C118 + (C17611 + C17610) * C50836) * C51051 +
             ((C19146 + C19147) * C118 + (C19148 + C19149) * C50836) * C50970) *
                C51022 +
            (((C17609 + C17608) * C118 + (C17607 + C17606) * C50836) * C51051 +
             ((C19150 + C19151) * C118 + (C19152 + C19153) * C50836) * C50970) *
                C50758) *
               C631 -
           (((C17810 * C50836 + C17809 * C118) * C50970 +
             ((C17415 + C17414) * C50836 + (C17413 + C17412) * C118) * C51051) *
                C50758 +
            ((C28034 * C50836 + C28033 * C118) * C50970 +
             ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C51051) *
                C51022) *
               C630 -
           ((((C17374 * C4246 + C50942 * C4247 + C17373 * C885 +
               C17368 * C894) *
                  C50836 +
              (C17374 * C4244 + C50942 * C4245 + C17373 * C870 +
               C17368 * C884) *
                  C118) *
                 C50970 +
             ((C17985 + C17984) * C50836 + (C17983 + C17982) * C118) * C51051) *
                C50758 +
            (((C28244 + C28243) * C50836 + (C28242 + C28241) * C118) * C50970 +
             ((C17981 + C17980) * C50836 + (C17979 + C17978) * C118) * C51051) *
                C51022) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                  C118 +
              (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                  C50836) *
                 C51051 +
             ((C22330 + C22329) * C118 + (C22332 + C22331) * C50836) * C50970) *
                C51022 +
            (((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) * C51051 +
             ((C17797 + C17796) * C118 + (C17799 + C17798) * C50836) * C50970) *
                C50758) *
               C51034 -
           ((((C19149 + C19148) * C50836 + (C19147 + C19146) * C118) * C50970 +
             ((C17610 + C17611) * C50836 + (C17612 + C17613) * C118) * C51051) *
                C50758 +
            (((C22762 + C22761) * C50836 + (C22760 + C22759) * C118) * C50970 +
             ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                  C50836 +
              (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                  C118) *
                 C51051) *
                C51022) *
               C50822) *
              C295 +
          (((((C17613 + C17612) * C118 + (C17611 + C17610) * C50836) * C51051 +
             ((C19146 + C19147) * C118 + (C19148 + C19149) * C50836) * C50970) *
                C51022 +
            (((C17609 + C17608) * C118 + (C17607 + C17606) * C50836) * C51051 +
             ((C19150 + C19151) * C118 + (C19152 + C19153) * C50836) * C50970) *
                C50758) *
               C50822 -
           (((C17810 * C50836 + C17809 * C118) * C50970 +
             ((C17415 + C17414) * C50836 + (C17413 + C17412) * C118) * C51051) *
                C50758 +
            (((C17798 + C17799) * C50836 + (C17796 + C17797) * C118) * C50970 +
             ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C51051) *
                C51022) *
               C51034) *
              C296 +
          (((C17432 * C51051 +
             ((C17802 + C17801) * C118 + (C17804 + C17803) * C50836) * C50970) *
                C51022 +
            (((C17419 + C17418) * C118 + (C17417 + C17416) * C50836) * C51051 +
             ((C17805 + C17806) * C118 + (C17807 + C17808) * C50836) * C50970) *
                C50758) *
               C51034 -
           ((((C17374 * C887 + C50942 * C895 + C17373 * C879 + C17368 * C891) *
                  C50836 +
              (C17374 * C871 + C50942 * C886 + C17373 * C867 + C17368 * C878) *
                  C118) *
                 C50970 +
             ((C17617 + C17616) * C50836 + (C17615 + C17614) * C118) * C51051) *
                C50758 +
            (((C19153 + C19152) * C50836 + (C19151 + C19150) * C118) * C50970 +
             C17622 * C51051) *
                C51022) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C50836) *
                C51051 +
            ((C22330 + C22329) * C118 + (C22332 + C22331) * C50836) * C50970) *
               C51022 +
           (((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) * C51051 +
            (C28035 * C118 + C28036 * C50836) * C50970) *
               C50758) *
              C745 -
          ((((C19149 + C19148) * C50836 + (C19147 + C19146) * C118) * C50970 +
            ((C17610 + C17611) * C50836 + (C17612 + C17613) * C118) * C51051) *
               C50758 +
           (((C22762 + C22761) * C50836 + (C22760 + C22759) * C118) * C50970 +
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C50836 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C118) *
                C51051) *
               C51022) *
              C746 +
          ((((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                 C118 +
             (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                 C50836) *
                C51051 +
            ((C22768 + C22767) * C118 + (C22770 + C22769) * C50836) * C50970) *
               C51022 +
           (((C17978 + C17979) * C118 + (C17980 + C17981) * C50836) * C51051 +
            ((C28241 + C28242) * C118 + (C28243 + C28244) * C50836) * C50970) *
               C50758) *
              C747 -
          ((((C17374 * C3309 + C50942 * C3313 + C17373 * C3305 +
              C17368 * C3311) *
                 C50836 +
             (C17374 * C3301 + C50942 * C3308 + C17373 * C3299 +
              C17368 * C3304) *
                 C118) *
                C50970 +
            ((C17374 * C3022 + C50942 * C3026 + C17373 * C758 + C17368 * C764) *
                 C50836 +
             (C17374 * C3017 + C50942 * C3021 + C17373 * C752 + C17368 * C759) *
                 C118) *
                C51051) *
               C50758 +
           (((C17374 * C3307 + C50942 * C3312 + C17373 * C3303 +
              C17368 * C3310) *
                 C50836 +
             (C17374 * C3300 + C50942 * C3306 + C17373 * C3298 +
              C17368 * C3302) *
                 C118) *
                C50970 +
            ((C17374 * C3020 + C50942 * C3025 + C17373 * C760 + C17368 * C765) *
                 C50836 +
             (C17374 * C3016 + C50942 * C3019 + C17373 * C753 + C17368 * C761) *
                 C118) *
                C51051) *
               C51022) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C458 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C51036 -
             (C22329 + C22330) * C459 - (C22331 + C22332) * C50848) *
                C51051 +
            ((C22330 + C22329) * C458 + (C22332 + C22331) * C51036 -
             (C22333 + C22334) * C459 - (C22335 + C22336) * C50848) *
                C50970) *
               C51022 +
           (((C17408 + C17409) * C458 + (C17410 + C17411) * C51036 -
             C28033 * C459 - C28034 * C50848) *
                C51051 +
            (C28035 * C458 + C28036 * C51036 - C22931 * C459 -
             C22932 * C50848) *
                C50970) *
               C50758) *
              C50806 * C295 +
          (((C28035 * C459 -
             ((C17411 + C17410) * C51036 + (C17409 + C17408) * C458) +
             C28036 * C50848) *
                C51051 +
            ((C18392 + C18393) * C459 - (C28034 * C51036 + C28033 * C458) +
             (C18394 + C18395) * C50848) *
                C50970) *
               C51022 +
           ((C28037 * C459 -
             ((C17415 + C17414) * C51036 + (C17413 + C17412) * C458) +
             C28038 * C50848) *
                C51051 +
            ((C18396 + C18397) * C459 - (C17810 * C51036 + C17809 * C458) +
             (C18398 + C18399) * C50848) *
                C50970) *
               C50758) *
              C50806 * C296 +
          ((C17814 * C51051 +
            (C28037 * C458 + C28038 * C51036 - (C18397 + C18396) * C459 -
             (C18399 + C18398) * C50848) *
                C50970) *
               C51022 +
           (((C17419 + C17418) * C458 + (C17417 + C17416) * C51036 -
             (C17806 + C17805) * C459 - (C17808 + C17807) * C50848) *
                C51051 +
            ((C17805 + C17806) * C458 + (C17807 + C17808) * C51036 -
             (C17374 * C1157 + C50942 * C1164 + C17373 * C1003 +
              C17368 * C1011) *
                 C459 -
             (C17374 * C1165 + C50942 * C1169 + C17373 * C1012 +
              C17368 * C1018) *
                 C50848) *
                C50970) *
               C50758) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C458 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C51036 -
             (C22329 + C22330) * C459 - (C22331 + C22332) * C50848) *
                C51051 +
            ((C22330 + C22329) * C458 + (C22332 + C22331) * C51036 -
             (C22333 + C22334) * C459 - (C22335 + C22336) * C50848) *
                C50970) *
               C51022 +
           (((C17408 + C17409) * C458 + (C17410 + C17411) * C51036 -
             C28033 * C459 - C28034 * C50848) *
                C51051 +
            (C28035 * C458 + C28036 * C51036 - C22931 * C459 -
             C22932 * C50848) *
                C50970) *
               C50758) *
              C630 +
          ((((C22759 + C22760) * C459 -
             ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                  C51036 +
              (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                  C458) +
             (C22761 + C22762) * C50848) *
                C51051 +
            ((C22763 + C22764) * C459 -
             ((C22762 + C22761) * C51036 + (C22760 + C22759) * C458) +
             (C22765 + C22766) * C50848) *
                C50970) *
               C51022 +
           (((C19146 + C19147) * C459 -
             ((C17610 + C17611) * C51036 + (C17612 + C17613) * C458) +
             (C19148 + C19149) * C50848) *
                C51051 +
            ((C23724 + C23723) * C459 -
             ((C19149 + C19148) * C51036 + (C19147 + C19146) * C458) +
             (C23726 + C23725) * C50848) *
                C50970) *
               C50758) *
              C631 +
          ((((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                 C458 +
             (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                 C51036 -
             (C22767 + C22768) * C459 - (C22769 + C22770) * C50848) *
                C51051 +
            ((C22768 + C22767) * C458 + (C22770 + C22769) * C51036 -
             (C22771 + C22772) * C459 - (C22773 + C22774) * C50848) *
                C50970) *
               C51022 +
           (((C17978 + C17979) * C458 + (C17980 + C17981) * C51036 -
             (C28242 + C28241) * C459 - (C28244 + C28243) * C50848) *
                C51051 +
            ((C28241 + C28242) * C458 + (C28243 + C28244) * C51036 -
             (C17374 * C3637 + C50942 * C3640 + C17373 * C3461 +
              C17368 * C3465) *
                 C459 -
             (C17374 * C3641 + C50942 * C3643 + C17373 * C3466 +
              C17368 * C3470) *
                 C50848) *
                C50970) *
               C50758) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C50836) *
                C50906 * C17370 +
            ((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) * C50906 *
                C17371 +
            C17434 * C17372) *
               C1358 -
           (C17623 * C17372 +
            ((C17610 + C17611) * C50836 + (C17612 + C17613) * C118) * C50906 *
                C17371 +
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C50836 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C118) *
                C50906 * C17370) *
               C50822) *
              C51080 +
          ((((C17613 + C17612) * C118 + (C17611 + C17610) * C50836) * C50906 *
                C17370 +
            ((C17609 + C17608) * C118 + (C17607 + C17606) * C50836) * C50906 *
                C17371 +
            ((C17614 + C17615) * C118 + (C17616 + C17617) * C50836) * C50906 *
                C17372) *
               C50822 -
           (C17435 * C17372 +
            ((C17415 + C17414) * C50836 + (C17413 + C17412) * C118) * C50906 *
                C17371 +
            ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C50906 *
                C17370) *
               C1358) *
              C51065 +
          ((C17434 * C17370 +
            ((C17419 + C17418) * C118 + (C17417 + C17416) * C50836) * C50906 *
                C17371 +
            ((C17420 + C17421) * C118 + (C17422 + C17423) * C50836) * C50906 *
                C17372) *
               C1358 -
           (((C17374 * C648 + C50942 * C654 + C17373 * C313 + C17368 * C320) *
                 C50836 +
             (C17374 * C639 + C50942 * C649 + C17373 * C302 + C17368 * C312) *
                 C118) *
                C50906 * C17372 +
            ((C17617 + C17616) * C50836 + (C17615 + C17614) * C118) * C50906 *
                C17371 +
            C17623 * C17370) *
               C50822) *
              C1362)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
             C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
                C118 +
            (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
             C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
                C50836) *
               C50906 * C50753 * C1358 -
           ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
             C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                C50836 +
            (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
             C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                C118) *
               C50906 * C50753 * C50822) *
              C51080 +
          (((C20204 * C300 + C20199 * C309 + C20205 * C636 + C20200 * C642 +
             C20206 * C752 + C20201 * C759 + C20207 * C3017 + C20202 * C3021) *
                C118 +
            (C20204 * C308 + C20199 * C318 + C20205 * C643 + C20200 * C651 +
             C20206 * C758 + C20201 * C764 + C20207 * C3022 + C20202 * C3026) *
                C50836) *
               C50906 * C50753 * C50822 -
           ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
             C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                C50836 +
            (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
             C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                C118) *
               C50906 * C50753 * C1358) *
              C51065 +
          (((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C307 +
             C20206 * C637 + C20201 * C644 + C20207 * C751 + C20202 * C757) *
                C118 +
            (C20204 * C131 + C20199 * C142 + C20205 * C306 + C20200 * C317 +
             C20206 * C645 + C20201 * C652 + C20207 * C756 + C20202 * C763) *
                C50836) *
               C50906 * C50753 * C1358 -
           ((C20207 * C3023 + C20202 * C3027 + C20206 * C756 + C20201 * C763 +
             C20205 * C645 + C20200 * C652 + C20204 * C306 + C20199 * C317) *
                C50836 +
            (C20207 * C3018 + C20202 * C3024 + C20206 * C751 + C20201 * C757 +
             C20205 * C637 + C20200 * C644 + C20204 * C299 + C20199 * C307) *
                C118) *
               C50906 * C50753 * C50822) *
              C1362)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C50836) *
                C50906 * C17370 +
            ((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) * C50906 *
                C17371 +
            C17434 * C17372) *
               C51081 -
           (C17623 * C17372 +
            ((C17610 + C17611) * C50836 + (C17612 + C17613) * C118) * C50906 *
                C17371 +
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C50836 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C118) *
                C50906 * C17370) *
               C51068 +
           (((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                 C118 +
             (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                 C50836) *
                C50906 * C17370 +
            ((C17978 + C17979) * C118 + (C17980 + C17981) * C50836) * C50906 *
                C17371 +
            ((C17982 + C17983) * C118 + (C17984 + C17985) * C50836) * C50906 *
                C17372) *
               C1463) *
              C1464 +
          ((((C17613 + C17612) * C118 + (C17611 + C17610) * C50836) * C50906 *
                C17370 +
            ((C17609 + C17608) * C118 + (C17607 + C17606) * C50836) * C50906 *
                C17371 +
            ((C17614 + C17615) * C118 + (C17616 + C17617) * C50836) * C50906 *
                C17372) *
               C51068 -
           (C17435 * C17372 +
            ((C17415 + C17414) * C50836 + (C17413 + C17412) * C118) * C50906 *
                C17371 +
            ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C50906 *
                C17370) *
               C51081 -
           (((C17374 * C754 + C50942 * C762 + C17373 * C647 + C17368 * C653) *
                 C50836 +
             (C17374 * C750 + C50942 * C755 + C17373 * C638 + C17368 * C646) *
                 C118) *
                C50906 * C17372 +
            ((C17985 + C17984) * C50836 + (C17983 + C17982) * C118) * C50906 *
                C17371 +
            ((C17981 + C17980) * C50836 + (C17979 + C17978) * C118) * C50906 *
                C17370) *
               C1463) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
             C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
                C118 +
            (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
             C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
                C50836) *
               C50906 * C50753 * C51081 -
           ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
             C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                C50836 +
            (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
             C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                C118) *
               C50906 * C50753 * C51068 +
           ((C20204 * C635 + C20199 * C640 + C20205 * C753 + C20200 * C761 +
             C20206 * C3016 + C20201 * C3019 + C20207 * C3145 +
             C20202 * C3149) *
                C118 +
            (C20204 * C641 + C20199 * C650 + C20205 * C760 + C20200 * C765 +
             C20206 * C3020 + C20201 * C3025 + C20207 * C3148 +
             C20202 * C3151) *
                C50836) *
               C50906 * C50753 * C1463) *
              C1464 +
          (((C20204 * C300 + C20199 * C309 + C20205 * C636 + C20200 * C642 +
             C20206 * C752 + C20201 * C759 + C20207 * C3017 + C20202 * C3021) *
                C118 +
            (C20204 * C308 + C20199 * C318 + C20205 * C643 + C20200 * C651 +
             C20206 * C758 + C20201 * C764 + C20207 * C3022 + C20202 * C3026) *
                C50836) *
               C50906 * C50753 * C51068 -
           ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
             C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                C50836 +
            (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
             C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                C118) *
               C50906 * C50753 * C51081 -
           ((C20207 * C3146 + C20202 * C3150 + C20206 * C3022 + C20201 * C3026 +
             C20205 * C758 + C20200 * C764 + C20204 * C643 + C20199 * C651) *
                C50836 +
            (C20207 * C3144 + C20202 * C3147 + C20206 * C3017 + C20201 * C3021 +
             C20205 * C752 + C20200 * C759 + C20204 * C636 + C20199 * C642) *
                C118) *
               C50906 * C50753 * C1463) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C458 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C51036 -
             (C17374 * C864 + C50942 * C872 + C17373 * C460 + C17368 * C466) *
                 C459 -
             (C17374 * C873 + C50942 * C888 + C17373 * C467 + C17368 * C478) *
                 C50848) *
                C50906 * C17370 +
            ((C17408 + C17409) * C458 + (C17410 + C17411) * C51036 -
             (C17796 + C17797) * C459 - (C17798 + C17799) * C50848) *
                C50906 * C17371 +
            C17815 * C17372) *
               C1358 +
           (((C17373 * C864 + C17368 * C872 + C17374 * C868 + C50942 * C880) *
                 C459 -
             ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                  C51036 +
              (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                  C458) +
             (C17373 * C873 + C17368 * C888 + C17374 * C881 + C50942 * C892) *
                 C50848) *
                C50906 * C17370 +
            ((C19146 + C19147) * C459 -
             ((C17610 + C17611) * C51036 + (C17612 + C17613) * C458) +
             (C19148 + C19149) * C50848) *
                C50906 * C17371 +
            ((C19150 + C19151) * C459 - (C17618 * C51036 + C17619 * C458) +
             (C19152 + C19153) * C50848) *
                C50906 * C17372) *
               C50822) *
              C1464 +
          ((((C17797 + C17796) * C459 -
             ((C17411 + C17410) * C51036 + (C17409 + C17408) * C458) +
             (C17799 + C17798) * C50848) *
                C50906 * C17370 +
            ((C17802 + C17801) * C459 -
             ((C17415 + C17414) * C51036 + (C17413 + C17412) * C458) +
             (C17804 + C17803) * C50848) *
                C50906 * C17371 +
            ((C17805 + C17806) * C459 - (C17426 * C51036 + C17427 * C458) +
             (C17807 + C17808) * C50848) *
                C50906 * C17372) *
               C1358 +
           (((C17613 + C17612) * C458 + (C17611 + C17610) * C51036 -
             (C19147 + C19146) * C459 - (C19149 + C19148) * C50848) *
                C50906 * C17370 +
            ((C17609 + C17608) * C458 + (C17607 + C17606) * C51036 -
             (C19151 + C19150) * C459 - (C19153 + C19152) * C50848) *
                C50906 * C17371 +
            ((C17614 + C17615) * C458 + (C17616 + C17617) * C51036 -
             (C17374 * C871 + C50942 * C886 + C17373 * C867 + C17368 * C878) *
                 C459 -
             (C17374 * C887 + C50942 * C895 + C17373 * C879 + C17368 * C891) *
                 C50848) *
                C50906 * C17372) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
             C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
                C458 +
            (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
             C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
                C51036 -
            (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
             C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
                C459 -
            (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
             C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
                C50848) *
               C50906 * C50753 * C1358 +
           ((C20204 * C864 + C20199 * C872 + C20205 * C868 + C20200 * C880 +
             C20206 * C3298 + C20201 * C3302 + C20207 * C3300 +
             C20202 * C3306) *
                C459 -
            ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
              C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                 C51036 +
             (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
              C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                 C458) +
            (C20204 * C873 + C20199 * C888 + C20205 * C881 + C20200 * C892 +
             C20206 * C3303 + C20201 * C3310 + C20207 * C3307 +
             C20202 * C3312) *
                C50848) *
               C50906 * C50753 * C50822) *
              C1464 +
          (((C20204 * C461 + C20199 * C468 + C20205 * C865 + C20200 * C874 +
             C20206 * C869 + C20201 * C882 + C20207 * C3299 + C20202 * C3304) *
                C459 -
            ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
              C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                 C51036 +
             (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
              C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                 C458) +
            (C20204 * C469 + C20199 * C479 + C20205 * C875 + C20200 * C889 +
             C20206 * C883 + C20201 * C893 + C20207 * C3305 + C20202 * C3311) *
                C50848) *
               C50906 * C50753 * C1358 +
           ((C20204 * C300 + C20199 * C309 + C20205 * C636 + C20200 * C642 +
             C20206 * C752 + C20201 * C759 + C20207 * C3017 + C20202 * C3021) *
                C458 +
            (C20204 * C308 + C20199 * C318 + C20205 * C643 + C20200 * C651 +
             C20206 * C758 + C20201 * C764 + C20207 * C3022 + C20202 * C3026) *
                C51036 -
            (C20207 * C3301 + C20202 * C3308 + C20206 * C3299 + C20201 * C3304 +
             C20205 * C869 + C20200 * C882 + C20204 * C865 + C20199 * C874) *
                C459 -
            (C20207 * C3309 + C20202 * C3313 + C20206 * C3305 + C20201 * C3311 +
             C20205 * C883 + C20200 * C893 + C20204 * C875 + C20199 * C889) *
                C50848) *
               C50906 * C50753 * C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C1730 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C1728 -
             (C17374 * C864 + C50942 * C872 + C17373 * C460 + C17368 * C466) *
                 C1731 -
             (C17374 * C873 + C50942 * C888 + C17373 * C467 + C17368 * C478) *
                 C50848) *
                C50906 * C17370 +
            ((C17408 + C17409) * C1730 + (C17410 + C17411) * C1728 -
             (C17796 + C17797) * C1731 - (C17798 + C17799) * C50848) *
                C50906 * C17371 +
            C19307 * C17372) *
               C1358 +
           (((C17373 * C864 + C17368 * C872 + C17374 * C868 + C50942 * C880) *
                 C1731 -
             ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                  C1728 +
              (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                  C1730) +
             (C17373 * C873 + C17368 * C888 + C17374 * C881 + C50942 * C892) *
                 C50848) *
                C50906 * C17370 +
            ((C19146 + C19147) * C1731 -
             ((C17610 + C17611) * C1728 + (C17612 + C17613) * C1730) +
             (C19148 + C19149) * C50848) *
                C50906 * C17371 +
            ((C19150 + C19151) * C1731 - (C17618 * C1728 + C17619 * C1730) +
             (C19152 + C19153) * C50848) *
                C50906 * C17372) *
               C50822) *
              C51027 +
          ((((C17797 + C17796) * C1731 -
             ((C17411 + C17410) * C1728 + (C17409 + C17408) * C1730) +
             (C17799 + C17798) * C50848) *
                C50906 * C17370 +
            ((C17802 + C17801) * C1731 -
             ((C17415 + C17414) * C1728 + (C17413 + C17412) * C1730) +
             (C17804 + C17803) * C50848) *
                C50906 * C17371 +
            ((C17805 + C17806) * C1731 - (C17426 * C1728 + C17427 * C1730) +
             (C17807 + C17808) * C50848) *
                C50906 * C17372) *
               C1358 +
           (((C17613 + C17612) * C1730 + (C17611 + C17610) * C1728 -
             (C19147 + C19146) * C1731 - (C19149 + C19148) * C50848) *
                C50906 * C17370 +
            ((C17609 + C17608) * C1730 + (C17607 + C17606) * C1728 -
             (C19151 + C19150) * C1731 - (C19153 + C19152) * C50848) *
                C50906 * C17371 +
            ((C17614 + C17615) * C1730 + (C17616 + C17617) * C1728 -
             (C17374 * C871 + C50942 * C886 + C17373 * C867 + C17368 * C878) *
                 C1731 -
             (C17374 * C887 + C50942 * C895 + C17373 * C879 + C17368 * C891) *
                 C50848) *
                C50906 * C17372) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
             C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
                C1730 +
            (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
             C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
                C1728 -
            (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
             C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
                C1731 -
            (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
             C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
                C50848) *
               C50906 * C50753 * C1358 +
           ((C20204 * C864 + C20199 * C872 + C20205 * C868 + C20200 * C880 +
             C20206 * C3298 + C20201 * C3302 + C20207 * C3300 +
             C20202 * C3306) *
                C1731 -
            ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
              C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                 C1728 +
             (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
              C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                 C1730) +
            (C20204 * C873 + C20199 * C888 + C20205 * C881 + C20200 * C892 +
             C20206 * C3303 + C20201 * C3310 + C20207 * C3307 +
             C20202 * C3312) *
                C50848) *
               C50906 * C50753 * C50822) *
              C51027 +
          (((C20204 * C461 + C20199 * C468 + C20205 * C865 + C20200 * C874 +
             C20206 * C869 + C20201 * C882 + C20207 * C3299 + C20202 * C3304) *
                C1731 -
            ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
              C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                 C1728 +
             (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
              C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                 C1730) +
            (C20204 * C469 + C20199 * C479 + C20205 * C875 + C20200 * C889 +
             C20206 * C883 + C20201 * C893 + C20207 * C3305 + C20202 * C3311) *
                C50848) *
               C50906 * C50753 * C1358 +
           ((C20204 * C300 + C20199 * C309 + C20205 * C636 + C20200 * C642 +
             C20206 * C752 + C20201 * C759 + C20207 * C3017 + C20202 * C3021) *
                C1730 +
            (C20204 * C308 + C20199 * C318 + C20205 * C643 + C20200 * C651 +
             C20206 * C758 + C20201 * C764 + C20207 * C3022 + C20202 * C3026) *
                C1728 -
            (C20207 * C3301 + C20202 * C3308 + C20206 * C3299 + C20201 * C3304 +
             C20205 * C869 + C20200 * C882 + C20204 * C865 + C20199 * C874) *
                C1731 -
            (C20207 * C3309 + C20202 * C3313 + C20206 * C3305 + C20201 * C3311 +
             C20205 * C883 + C20200 * C893 + C20204 * C875 + C20199 * C889) *
                C50848) *
               C50906 * C50753 * C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C1730 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C1728 -
            (C17374 * C864 + C50942 * C872 + C17373 * C460 + C17368 * C466) *
                C1731 -
            (C17374 * C873 + C50942 * C888 + C17373 * C467 + C17368 * C478) *
                C50848) *
               C50906 * C17370 +
           ((C17408 + C17409) * C1730 + (C17410 + C17411) * C1728 -
            (C17796 + C17797) * C1731 - (C17798 + C17799) * C50848) *
               C50906 * C17371 +
           C19307 * C17372) *
              C51081 +
          (((C17373 * C864 + C17368 * C872 + C17374 * C868 + C50942 * C880) *
                C1731 -
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C1728 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C1730) +
            (C17373 * C873 + C17368 * C888 + C17374 * C881 + C50942 * C892) *
                C50848) *
               C50906 * C17370 +
           ((C19146 + C19147) * C1731 -
            ((C17610 + C17611) * C1728 + (C17612 + C17613) * C1730) +
            (C19148 + C19149) * C50848) *
               C50906 * C17371 +
           ((C19150 + C19151) * C1731 - (C17618 * C1728 + C17619 * C1730) +
            (C19152 + C19153) * C50848) *
               C50906 * C17372) *
              C51068 +
          (((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                C1730 +
            (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                C1728 -
            (C17374 * C3298 + C50942 * C3302 + C17373 * C868 + C17368 * C880) *
                C1731 -
            (C17374 * C3303 + C50942 * C3310 + C17373 * C881 + C17368 * C892) *
                C50848) *
               C50906 * C17370 +
           ((C17978 + C17979) * C1730 + (C17980 + C17981) * C1728 -
            (C17374 * C3299 + C50942 * C3304 + C17373 * C869 + C17368 * C882) *
                C1731 -
            (C17374 * C3305 + C50942 * C3311 + C17373 * C883 + C17368 * C893) *
                C50848) *
               C50906 * C17371 +
           ((C17982 + C17983) * C1730 + (C17984 + C17985) * C1728 -
            (C17374 * C4244 + C50942 * C4245 + C17373 * C870 + C17368 * C884) *
                C1731 -
            (C17374 * C4246 + C50942 * C4247 + C17373 * C885 + C17368 * C894) *
                C50848) *
               C50906 * C17372) *
              C1463) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C1730 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C1728 -
           (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
            C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
               C1731 -
           (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
            C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
               C50848) *
              C50906 * C50753 * C51081 +
          ((C20204 * C864 + C20199 * C872 + C20205 * C868 + C20200 * C880 +
            C20206 * C3298 + C20201 * C3302 + C20207 * C3300 + C20202 * C3306) *
               C1731 -
           ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
             C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                C1728 +
            (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
             C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                C1730) +
           (C20204 * C873 + C20199 * C888 + C20205 * C881 + C20200 * C892 +
            C20206 * C3303 + C20201 * C3310 + C20207 * C3307 + C20202 * C3312) *
               C50848) *
              C50906 * C50753 * C51068 +
          ((C20204 * C635 + C20199 * C640 + C20205 * C753 + C20200 * C761 +
            C20206 * C3016 + C20201 * C3019 + C20207 * C3145 + C20202 * C3149) *
               C1730 +
           (C20204 * C641 + C20199 * C650 + C20205 * C760 + C20200 * C765 +
            C20206 * C3020 + C20201 * C3025 + C20207 * C3148 + C20202 * C3151) *
               C1728 -
           (C20207 * C20670 + C20202 * C20671 + C20206 * C3300 +
            C20201 * C3306 + C20205 * C3298 + C20200 * C3302 + C20204 * C868 +
            C20199 * C880) *
               C1731 -
           (C20207 * C20672 + C20202 * C20673 + C20206 * C3307 +
            C20201 * C3312 + C20205 * C3303 + C20200 * C3310 + C20204 * C881 +
            C20199 * C892) *
               C50848) *
              C50906 * C50753 * C1463) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C1999 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C51082 -
            (C17374 * C864 + C50942 * C872 + C17373 * C460 + C17368 * C466) *
                C2000 -
            (C17374 * C873 + C50942 * C888 + C17373 * C467 + C17368 * C478) *
                C51071 +
            (C17373 * C1000 + C17368 * C1005 + C17374 * C1154 +
             C50942 * C1158) *
                C2001 +
            (C17373 * C1006 + C17368 * C1015 + C17374 * C1159 +
             C50942 * C1166) *
                C1998) *
               C50906 * C17370 +
           ((C17408 + C17409) * C1999 + (C17410 + C17411) * C51082 -
            (C17796 + C17797) * C2000 - (C17798 + C17799) * C51071 +
            (C18392 + C18393) * C2001 + (C18394 + C18395) * C1998) *
               C50906 * C17371 +
           (C17424 * C1999 + C17425 * C51082 - C17809 * C2000 -
            C17810 * C51071 + (C18396 + C18397) * C2001 +
            (C18398 + C18399) * C1998) *
               C50906 * C17372) *
              C1358 +
          (((C17373 * C864 + C17368 * C872 + C17374 * C868 + C50942 * C880) *
                C2000 -
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C51082 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C1999) +
            (C17373 * C873 + C17368 * C888 + C17374 * C881 + C50942 * C892) *
                C51071 -
            (C17374 * C3460 + C50942 * C3463 + C17373 * C1154 +
             C17368 * C1158) *
                C2001 -
            (C17374 * C3464 + C50942 * C3469 + C17373 * C1159 +
             C17368 * C1166) *
                C1998) *
               C50906 * C17370 +
           ((C19146 + C19147) * C2000 -
            ((C17610 + C17611) * C51082 + (C17612 + C17613) * C1999) +
            (C19148 + C19149) * C51071 -
            (C17374 * C3461 + C50942 * C3465 + C17373 * C1155 +
             C17368 * C1160) *
                C2001 -
            (C17374 * C3466 + C50942 * C3470 + C17373 * C1161 +
             C17368 * C1167) *
                C1998) *
               C50906 * C17371 +
           ((C19150 + C19151) * C2000 - (C17618 * C51082 + C17619 * C1999) +
            (C19152 + C19153) * C51071 -
            (C17374 * C3462 + C50942 * C3467 + C17373 * C1156 +
             C17368 * C1162) *
                C2001 -
            (C17374 * C3468 + C50942 * C3471 + C17373 * C1163 +
             C17368 * C1168) *
                C1998) *
               C50906 * C17372) *
              C50822) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C1999 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C51082 -
           (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
            C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
               C2000 -
           (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
            C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
               C51071 +
           (C20204 * C1000 + C20199 * C1005 + C20205 * C1154 + C20200 * C1158 +
            C20206 * C3460 + C20201 * C3463 + C20207 * C3636 + C20202 * C3638) *
               C2001 +
           (C20204 * C1006 + C20199 * C1015 + C20205 * C1159 + C20200 * C1166 +
            C20206 * C3464 + C20201 * C3469 + C20207 * C3639 + C20202 * C3642) *
               C1998) *
              C50906 * C50753 * C1358 +
          ((C20204 * C864 + C20199 * C872 + C20205 * C868 + C20200 * C880 +
            C20206 * C3298 + C20201 * C3302 + C20207 * C3300 + C20202 * C3306) *
               C2000 -
           ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
             C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                C51082 +
            (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
             C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                C1999) +
           (C20204 * C873 + C20199 * C888 + C20205 * C881 + C20200 * C892 +
            C20206 * C3303 + C20201 * C3310 + C20207 * C3307 + C20202 * C3312) *
               C51071 -
           (C20207 * C20870 + C20202 * C20871 + C20206 * C3636 +
            C20201 * C3638 + C20205 * C3460 + C20200 * C3463 + C20204 * C1154 +
            C20199 * C1158) *
               C2001 -
           (C20207 * C20872 + C20202 * C20873 + C20206 * C3639 +
            C20201 * C3642 + C20205 * C3464 + C20200 * C3469 + C20204 * C1159 +
            C20199 * C1166) *
               C1998) *
              C50906 * C50753 * C50822) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C50836) *
                C50906 * C17370 +
            ((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) * C50906 *
                C17371 +
            C17434 * C17372) *
               C630 -
           (C17623 * C17372 +
            ((C17610 + C17611) * C50836 + (C17612 + C17613) * C118) * C50906 *
                C17371 +
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C50836 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C118) *
                C50906 * C17370) *
               C631 +
           (((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                 C118 +
             (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                 C50836) *
                C50906 * C17370 +
            ((C17978 + C17979) * C118 + (C17980 + C17981) * C50836) * C50906 *
                C17371 +
            ((C17982 + C17983) * C118 + (C17984 + C17985) * C50836) * C50906 *
                C17372) *
               C632) *
              C51027 +
          ((((C17613 + C17612) * C118 + (C17611 + C17610) * C50836) * C50906 *
                C17370 +
            ((C17609 + C17608) * C118 + (C17607 + C17606) * C50836) * C50906 *
                C17371 +
            ((C17614 + C17615) * C118 + (C17616 + C17617) * C50836) * C50906 *
                C17372) *
               C631 -
           (C17435 * C17372 +
            ((C17415 + C17414) * C50836 + (C17413 + C17412) * C118) * C50906 *
                C17371 +
            ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C50906 *
                C17370) *
               C630 -
           (((C17374 * C754 + C50942 * C762 + C17373 * C647 + C17368 * C653) *
                 C50836 +
             (C17374 * C750 + C50942 * C755 + C17373 * C638 + C17368 * C646) *
                 C118) *
                C50906 * C17372 +
            ((C17985 + C17984) * C50836 + (C17983 + C17982) * C118) * C50906 *
                C17371 +
            ((C17981 + C17980) * C50836 + (C17979 + C17978) * C118) * C50906 *
                C17370) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C118 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C50836) *
               C50906 * C17370 +
           ((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) * C50906 *
               C17371 +
           C17434 * C17372) *
              C50806 * C113 -
          (C17435 * C17372 +
           ((C17415 + C17414) * C50836 + (C17413 + C17412) * C118) * C50906 *
               C17371 +
           ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C50906 *
               C17370) *
              C50806 * C114 +
          (C17434 * C17370 +
           ((C17419 + C17418) * C118 + (C17417 + C17416) * C50836) * C50906 *
               C17371 +
           ((C17420 + C17421) * C118 + (C17422 + C17423) * C50836) * C50906 *
               C17372) *
              C50806 * C115 -
          (((C17374 * C314 + C50942 * C321 + C17373 * C137 + C17368 * C145) *
                C50836 +
            (C17374 * C303 + C50942 * C315 + C17373 * C124 + C17368 * C136) *
                C118) *
               C50906 * C17372 +
           ((C17423 + C17422) * C50836 + (C17421 + C17420) * C118) * C50906 *
               C17371 +
           C17435 * C17370) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C997 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C994 -
            (C17374 * C864 + C50942 * C872 + C17373 * C460 + C17368 * C466) *
                C998 -
            (C17374 * C873 + C50942 * C888 + C17373 * C467 + C17368 * C478) *
                C995 +
            (C17373 * C1000 + C17368 * C1005 + C17374 * C1154 +
             C50942 * C1158) *
                C999 +
            (C17373 * C1006 + C17368 * C1015 + C17374 * C1159 +
             C50942 * C1166) *
                C996) *
               C50906 * C17370 +
           ((C17408 + C17409) * C997 + (C17410 + C17411) * C994 -
            (C17796 + C17797) * C998 - (C17798 + C17799) * C995 +
            (C18392 + C18393) * C999 + (C18394 + C18395) * C996) *
               C50906 * C17371 +
           (C17424 * C997 + C17425 * C994 - C17809 * C998 - C17810 * C995 +
            (C18396 + C18397) * C999 + (C18398 + C18399) * C996) *
               C50906 * C17372) *
              C50806 * C51027 +
          (((C17797 + C17796) * C998 -
            ((C17411 + C17410) * C994 + (C17409 + C17408) * C997) +
            (C17799 + C17798) * C995 - (C18393 + C18392) * C999 -
            (C18395 + C18394) * C996) *
               C50906 * C17370 +
           ((C17802 + C17801) * C998 -
            ((C17415 + C17414) * C994 + (C17413 + C17412) * C997) +
            (C17804 + C17803) * C995 - (C18397 + C18396) * C999 -
            (C18399 + C18398) * C996) *
               C50906 * C17371 +
           ((C17805 + C17806) * C998 - (C17426 * C994 + C17427 * C997) +
            (C17807 + C17808) * C995 -
            (C17374 * C1157 + C50942 * C1164 + C17373 * C1003 +
             C17368 * C1011) *
                C999 -
            (C17374 * C1165 + C50942 * C1169 + C17373 * C1012 +
             C17368 * C1018) *
                C996) *
               C50906 * C17372) *
              C50806 * C50779)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C118 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C50836) *
              C50906 * C50753 * C50806 * C113 -
          ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
            C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
               C50836 +
           (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
            C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
               C118) *
              C50906 * C50753 * C50806 * C114 +
          ((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C307 +
            C20206 * C637 + C20201 * C644 + C20207 * C751 + C20202 * C757) *
               C118 +
           (C20204 * C131 + C20199 * C142 + C20205 * C306 + C20200 * C317 +
            C20206 * C645 + C20201 * C652 + C20207 * C756 + C20202 * C763) *
               C50836) *
              C50906 * C50753 * C50806 * C115 -
          ((C20207 * C754 + C20202 * C762 + C20206 * C647 + C20201 * C653 +
            C20205 * C304 + C20200 * C316 + C20204 * C133 + C20199 * C143) *
               C50836 +
           (C20207 * C750 + C20202 * C755 + C20206 * C638 + C20201 * C646 +
            C20205 * C298 + C20200 * C305 + C20204 * C122 + C20199 * C132) *
               C118) *
              C50906 * C50753 * C50806 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
             C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
                C118 +
            (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
             C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
                C50836) *
               C50906 * C50753 * C630 -
           ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
             C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                C50836 +
            (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
             C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                C118) *
               C50906 * C50753 * C631 +
           ((C20204 * C635 + C20199 * C640 + C20205 * C753 + C20200 * C761 +
             C20206 * C3016 + C20201 * C3019 + C20207 * C3145 +
             C20202 * C3149) *
                C118 +
            (C20204 * C641 + C20199 * C650 + C20205 * C760 + C20200 * C765 +
             C20206 * C3020 + C20201 * C3025 + C20207 * C3148 +
             C20202 * C3151) *
                C50836) *
               C50906 * C50753 * C632) *
              C51027 +
          (((C20204 * C300 + C20199 * C309 + C20205 * C636 + C20200 * C642 +
             C20206 * C752 + C20201 * C759 + C20207 * C3017 + C20202 * C3021) *
                C118 +
            (C20204 * C308 + C20199 * C318 + C20205 * C643 + C20200 * C651 +
             C20206 * C758 + C20201 * C764 + C20207 * C3022 + C20202 * C3026) *
                C50836) *
               C50906 * C50753 * C631 -
           ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
             C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                C50836 +
            (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
             C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                C118) *
               C50906 * C50753 * C630 -
           ((C20207 * C3146 + C20202 * C3150 + C20206 * C3022 + C20201 * C3026 +
             C20205 * C758 + C20200 * C764 + C20204 * C643 + C20199 * C651) *
                C50836 +
            (C20207 * C3144 + C20202 * C3147 + C20206 * C3017 + C20201 * C3021 +
             C20205 * C752 + C20200 * C759 + C20204 * C636 + C20199 * C642) *
                C118) *
               C50906 * C50753 * C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C997 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C994 -
           (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
            C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
               C998 -
           (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
            C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
               C995 +
           (C20204 * C1000 + C20199 * C1005 + C20205 * C1154 + C20200 * C1158 +
            C20206 * C3460 + C20201 * C3463 + C20207 * C3636 + C20202 * C3638) *
               C999 +
           (C20204 * C1006 + C20199 * C1015 + C20205 * C1159 + C20200 * C1166 +
            C20206 * C3464 + C20201 * C3469 + C20207 * C3639 + C20202 * C3642) *
               C996) *
              C50906 * C50753 * C50806 * C51027 +
          ((C20204 * C461 + C20199 * C468 + C20205 * C865 + C20200 * C874 +
            C20206 * C869 + C20201 * C882 + C20207 * C3299 + C20202 * C3304) *
               C998 -
           ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
             C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                C994 +
            (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
             C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                C997) +
           (C20204 * C469 + C20199 * C479 + C20205 * C875 + C20200 * C889 +
            C20206 * C883 + C20201 * C893 + C20207 * C3305 + C20202 * C3311) *
               C995 -
           (C20207 * C3637 + C20202 * C3640 + C20206 * C3461 + C20201 * C3465 +
            C20205 * C1155 + C20200 * C1160 + C20204 * C1001 + C20199 * C1007) *
               C999 -
           (C20207 * C3641 + C20202 * C3643 + C20206 * C3466 + C20201 * C3470 +
            C20205 * C1161 + C20200 * C1167 + C20204 * C1008 + C20199 * C1016) *
               C996) *
              C50906 * C50753 * C50806 * C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C118 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C50836) *
               C50906 * C17370 +
           ((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) * C50906 *
               C17371 +
           C17434 * C17372) *
              C745 -
          (C17623 * C17372 +
           ((C17610 + C17611) * C50836 + (C17612 + C17613) * C118) * C50906 *
               C17371 +
           ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                C50836 +
            (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                C118) *
               C50906 * C17370) *
              C746 +
          (((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                C118 +
            (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                C50836) *
               C50906 * C17370 +
           ((C17978 + C17979) * C118 + (C17980 + C17981) * C50836) * C50906 *
               C17371 +
           ((C17982 + C17983) * C118 + (C17984 + C17985) * C50836) * C50906 *
               C17372) *
              C747 -
          (((C17374 * C3023 + C50942 * C3027 + C17373 * C756 + C17368 * C763) *
                C50836 +
            (C17374 * C3018 + C50942 * C3024 + C17373 * C751 + C17368 * C757) *
                C118) *
               C50906 * C17372 +
           ((C17374 * C3022 + C50942 * C3026 + C17373 * C758 + C17368 * C764) *
                C50836 +
            (C17374 * C3017 + C50942 * C3021 + C17373 * C752 + C17368 * C759) *
                C118) *
               C50906 * C17371 +
           ((C17374 * C3020 + C50942 * C3025 + C17373 * C760 + C17368 * C765) *
                C50836 +
            (C17374 * C3016 + C50942 * C3019 + C17373 * C753 + C17368 * C761) *
                C118) *
               C50906 * C17370) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C50836) *
                C50906 * C17370 +
            ((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) * C50906 *
                C17371 +
            C17434 * C17372) *
               C51034 -
           (C17623 * C17372 +
            ((C17610 + C17611) * C50836 + (C17612 + C17613) * C118) * C50906 *
                C17371 +
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C50836 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C118) *
                C50906 * C17370) *
               C50822) *
              C295 +
          ((((C17613 + C17612) * C118 + (C17611 + C17610) * C50836) * C50906 *
                C17370 +
            ((C17609 + C17608) * C118 + (C17607 + C17606) * C50836) * C50906 *
                C17371 +
            ((C17614 + C17615) * C118 + (C17616 + C17617) * C50836) * C50906 *
                C17372) *
               C50822 -
           (C17435 * C17372 +
            ((C17415 + C17414) * C50836 + (C17413 + C17412) * C118) * C50906 *
                C17371 +
            ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C50906 *
                C17370) *
               C51034) *
              C296 +
          ((C17434 * C17370 +
            ((C17419 + C17418) * C118 + (C17417 + C17416) * C50836) * C50906 *
                C17371 +
            ((C17420 + C17421) * C118 + (C17422 + C17423) * C50836) * C50906 *
                C17372) *
               C51034 -
           (((C17374 * C648 + C50942 * C654 + C17373 * C313 + C17368 * C320) *
                 C50836 +
             (C17374 * C639 + C50942 * C649 + C17373 * C302 + C17368 * C312) *
                 C118) *
                C50906 * C17372 +
            ((C17617 + C17616) * C50836 + (C17615 + C17614) * C118) * C50906 *
                C17371 +
            C17623 * C17370) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C997 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C994 -
            (C17374 * C864 + C50942 * C872 + C17373 * C460 + C17368 * C466) *
                C998 -
            (C17374 * C873 + C50942 * C888 + C17373 * C467 + C17368 * C478) *
                C995 +
            (C17373 * C1000 + C17368 * C1005 + C17374 * C1154 +
             C50942 * C1158) *
                C999 +
            (C17373 * C1006 + C17368 * C1015 + C17374 * C1159 +
             C50942 * C1166) *
                C996) *
               C50906 * C17370 +
           ((C17408 + C17409) * C997 + (C17410 + C17411) * C994 -
            (C17796 + C17797) * C998 - (C17798 + C17799) * C995 +
            (C18392 + C18393) * C999 + (C18394 + C18395) * C996) *
               C50906 * C17371 +
           (C17424 * C997 + C17425 * C994 - C17809 * C998 - C17810 * C995 +
            (C18396 + C18397) * C999 + (C18398 + C18399) * C996) *
               C50906 * C17372) *
              C51034 +
          (((C17373 * C864 + C17368 * C872 + C17374 * C868 + C50942 * C880) *
                C998 -
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C994 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C997) +
            (C17373 * C873 + C17368 * C888 + C17374 * C881 + C50942 * C892) *
                C995 -
            (C17374 * C3460 + C50942 * C3463 + C17373 * C1154 +
             C17368 * C1158) *
                C999 -
            (C17374 * C3464 + C50942 * C3469 + C17373 * C1159 +
             C17368 * C1166) *
                C996) *
               C50906 * C17370 +
           ((C17373 * C865 + C17368 * C874 + C17374 * C869 + C50942 * C882) *
                C998 -
            ((C17610 + C17611) * C994 + (C17612 + C17613) * C997) +
            (C17373 * C875 + C17368 * C889 + C17374 * C883 + C50942 * C893) *
                C995 -
            (C17374 * C3461 + C50942 * C3465 + C17373 * C1155 +
             C17368 * C1160) *
                C999 -
            (C17374 * C3466 + C50942 * C3470 + C17373 * C1161 +
             C17368 * C1167) *
                C996) *
               C50906 * C17371 +
           ((C17373 * C866 + C17368 * C876 + C17374 * C870 + C50942 * C884) *
                C998 -
            (C17618 * C994 + C17619 * C997) +
            (C17373 * C877 + C17368 * C890 + C17374 * C885 + C50942 * C894) *
                C995 -
            (C17374 * C3462 + C50942 * C3467 + C17373 * C1156 +
             C17368 * C1162) *
                C999 -
            (C17374 * C3468 + C50942 * C3471 + C17373 * C1163 +
             C17368 * C1168) *
                C996) *
               C50906 * C17372) *
              C50822) *
         C50774) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
             C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
                C118 +
            (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
             C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
                C50836) *
               C50906 * C50753 * C51034 -
           ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
             C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                C50836 +
            (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
             C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                C118) *
               C50906 * C50753 * C50822) *
              C295 +
          (((C20204 * C300 + C20199 * C309 + C20205 * C636 + C20200 * C642 +
             C20206 * C752 + C20201 * C759 + C20207 * C3017 + C20202 * C3021) *
                C118 +
            (C20204 * C308 + C20199 * C318 + C20205 * C643 + C20200 * C651 +
             C20206 * C758 + C20201 * C764 + C20207 * C3022 + C20202 * C3026) *
                C50836) *
               C50906 * C50753 * C50822 -
           ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
             C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                C50836 +
            (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
             C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                C118) *
               C50906 * C50753 * C51034) *
              C296 +
          (((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C307 +
             C20206 * C637 + C20201 * C644 + C20207 * C751 + C20202 * C757) *
                C118 +
            (C20204 * C131 + C20199 * C142 + C20205 * C306 + C20200 * C317 +
             C20206 * C645 + C20201 * C652 + C20207 * C756 + C20202 * C763) *
                C50836) *
               C50906 * C50753 * C51034 -
           ((C20207 * C3023 + C20202 * C3027 + C20206 * C756 + C20201 * C763 +
             C20205 * C645 + C20200 * C652 + C20204 * C306 + C20199 * C317) *
                C50836 +
            (C20207 * C3018 + C20202 * C3024 + C20206 * C751 + C20201 * C757 +
             C20205 * C637 + C20200 * C644 + C20204 * C299 + C20199 * C307) *
                C118) *
               C50906 * C50753 * C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C118 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C50836) *
              C50906 * C50753 * C745 -
          ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
            C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
               C50836 +
           (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
            C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
               C118) *
              C50906 * C50753 * C746 +
          ((C20204 * C635 + C20199 * C640 + C20205 * C753 + C20200 * C761 +
            C20206 * C3016 + C20201 * C3019 + C20207 * C3145 + C20202 * C3149) *
               C118 +
           (C20204 * C641 + C20199 * C650 + C20205 * C760 + C20200 * C765 +
            C20206 * C3020 + C20201 * C3025 + C20207 * C3148 + C20202 * C3151) *
               C50836) *
              C50906 * C50753 * C747 -
          ((C20207 * C20569 + C20202 * C20571 + C20206 * C3148 +
            C20201 * C3151 + C20205 * C3020 + C20200 * C3025 + C20204 * C760 +
            C20199 * C765) *
               C50836 +
           (C20207 * C20568 + C20202 * C20570 + C20206 * C3145 +
            C20201 * C3149 + C20205 * C3016 + C20200 * C3019 + C20204 * C753 +
            C20199 * C761) *
               C118) *
              C50906 * C50753 * C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C997 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C994 -
           (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
            C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
               C998 -
           (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
            C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
               C995 +
           (C20204 * C1000 + C20199 * C1005 + C20205 * C1154 + C20200 * C1158 +
            C20206 * C3460 + C20201 * C3463 + C20207 * C3636 + C20202 * C3638) *
               C999 +
           (C20204 * C1006 + C20199 * C1015 + C20205 * C1159 + C20200 * C1166 +
            C20206 * C3464 + C20201 * C3469 + C20207 * C3639 + C20202 * C3642) *
               C996) *
              C50906 * C50753 * C51034 +
          ((C20204 * C864 + C20199 * C872 + C20205 * C868 + C20200 * C880 +
            C20206 * C3298 + C20201 * C3302 + C20207 * C3300 + C20202 * C3306) *
               C998 -
           ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
             C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                C994 +
            (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
             C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                C997) +
           (C20204 * C873 + C20199 * C888 + C20205 * C881 + C20200 * C892 +
            C20206 * C3303 + C20201 * C3310 + C20207 * C3307 + C20202 * C3312) *
               C995 -
           (C20207 * C20870 + C20202 * C20871 + C20206 * C3636 +
            C20201 * C3638 + C20205 * C3460 + C20200 * C3463 + C20204 * C1154 +
            C20199 * C1158) *
               C999 -
           (C20207 * C20872 + C20202 * C20873 + C20206 * C3639 +
            C20201 * C3642 + C20205 * C3464 + C20200 * C3469 + C20204 * C1159 +
            C20199 * C1166) *
               C996) *
              C50906 * C50753 * C50822) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C458 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C51036 -
            (C17374 * C864 + C50942 * C872 + C17373 * C460 + C17368 * C466) *
                C459 -
            (C17374 * C873 + C50942 * C888 + C17373 * C467 + C17368 * C478) *
                C50848) *
               C50906 * C17370 +
           ((C17408 + C17409) * C458 + (C17410 + C17411) * C51036 -
            (C17796 + C17797) * C459 - (C17798 + C17799) * C50848) *
               C50906 * C17371 +
           C17815 * C17372) *
              C630 +
          (((C17373 * C864 + C17368 * C872 + C17374 * C868 + C50942 * C880) *
                C459 -
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C51036 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C458) +
            (C17373 * C873 + C17368 * C888 + C17374 * C881 + C50942 * C892) *
                C50848) *
               C50906 * C17370 +
           ((C17373 * C865 + C17368 * C874 + C17374 * C869 + C50942 * C882) *
                C459 -
            ((C17610 + C17611) * C51036 + (C17612 + C17613) * C458) +
            (C17373 * C875 + C17368 * C889 + C17374 * C883 + C50942 * C893) *
                C50848) *
               C50906 * C17371 +
           ((C17373 * C866 + C17368 * C876 + C17374 * C870 + C50942 * C884) *
                C459 -
            (C17618 * C51036 + C17619 * C458) +
            (C17373 * C877 + C17368 * C890 + C17374 * C885 + C50942 * C894) *
                C50848) *
               C50906 * C17372) *
              C631 +
          (((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                C458 +
            (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                C51036 -
            (C17374 * C3298 + C50942 * C3302 + C17373 * C868 + C17368 * C880) *
                C459 -
            (C17374 * C3303 + C50942 * C3310 + C17373 * C881 + C17368 * C892) *
                C50848) *
               C50906 * C17370 +
           ((C17978 + C17979) * C458 + (C17980 + C17981) * C51036 -
            (C17374 * C3299 + C50942 * C3304 + C17373 * C869 + C17368 * C882) *
                C459 -
            (C17374 * C3305 + C50942 * C3311 + C17373 * C883 + C17368 * C893) *
                C50848) *
               C50906 * C17371 +
           ((C17982 + C17983) * C458 + (C17984 + C17985) * C51036 -
            (C17374 * C4244 + C50942 * C4245 + C17373 * C870 + C17368 * C884) *
                C459 -
            (C17374 * C4246 + C50942 * C4247 + C17373 * C885 + C17368 * C894) *
                C50848) *
               C50906 * C17372) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C458 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C51036 -
            (C17374 * C864 + C50942 * C872 + C17373 * C460 + C17368 * C466) *
                C459 -
            (C17374 * C873 + C50942 * C888 + C17373 * C467 + C17368 * C478) *
                C50848) *
               C50906 * C17370 +
           ((C17408 + C17409) * C458 + (C17410 + C17411) * C51036 -
            (C17796 + C17797) * C459 - (C17798 + C17799) * C50848) *
               C50906 * C17371 +
           C17815 * C17372) *
              C50806 * C295 +
          (((C17797 + C17796) * C459 -
            ((C17411 + C17410) * C51036 + (C17409 + C17408) * C458) +
            (C17799 + C17798) * C50848) *
               C50906 * C17370 +
           ((C17802 + C17801) * C459 -
            ((C17415 + C17414) * C51036 + (C17413 + C17412) * C458) +
            (C17804 + C17803) * C50848) *
               C50906 * C17371 +
           ((C17805 + C17806) * C459 - (C17426 * C51036 + C17427 * C458) +
            (C17807 + C17808) * C50848) *
               C50906 * C17372) *
              C50806 * C296 +
          (C17815 * C17370 +
           ((C17419 + C17418) * C458 + (C17417 + C17416) * C51036 -
            (C17806 + C17805) * C459 - (C17808 + C17807) * C50848) *
               C50906 * C17371 +
           ((C17420 + C17421) * C458 + (C17422 + C17423) * C51036 -
            (C17374 * C1596 + C50942 * C1597 + C17373 * C464 + C17368 * C474) *
                C459 -
            (C17374 * C1598 + C50942 * C1599 + C17373 * C475 + C17368 * C482) *
                C50848) *
               C50906 * C17372) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
               C1240 +
           (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
               C1236 -
           (C17374 * C864 + C50942 * C872 + C17373 * C460 + C17368 * C466) *
               C1241 -
           (C17374 * C873 + C50942 * C888 + C17373 * C467 + C17368 * C478) *
               C1237 +
           (C17373 * C1000 + C17368 * C1005 + C17374 * C1154 + C50942 * C1158) *
               C1242 +
           (C17373 * C1006 + C17368 * C1015 + C17374 * C1159 + C50942 * C1166) *
               C1238 -
           (C17374 * C3743 + C50942 * C3747 + C17373 * C1244 + C17368 * C1248) *
               C1243 -
           (C17374 * C3749 + C50942 * C3755 + C17373 * C1249 + C17368 * C1256) *
               C1239) *
              C50906 * C17370 +
          ((C17408 + C17409) * C1240 + (C17410 + C17411) * C1236 -
           (C17796 + C17797) * C1241 - (C17798 + C17799) * C1237 +
           (C18392 + C18393) * C1242 + (C18394 + C18395) * C1238 -
           (C17374 * C3745 + C50942 * C3751 + C17373 * C1245 + C17368 * C1250) *
               C1243 -
           (C17374 * C3753 + C50942 * C3757 + C17373 * C1251 + C17368 * C1257) *
               C1239) *
              C50906 * C17371 +
          (C17424 * C1240 + C17425 * C1236 - C17809 * C1241 - C17810 * C1237 +
           (C18396 + C18397) * C1242 + (C18398 + C18399) * C1238 -
           (C17374 * C7079 + C50942 * C7080 + C17373 * C1246 + C17368 * C1252) *
               C1243 -
           (C17374 * C7081 + C50942 * C7082 + C17373 * C1253 + C17368 * C1258) *
               C1239) *
              C50906 * C17372) *
         C50806 * C50774) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C458 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C51036 -
           (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
            C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
               C459 -
           (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
            C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
               C50848) *
              C50906 * C50753 * C50806 * C295 +
          ((C20204 * C461 + C20199 * C468 + C20205 * C865 + C20200 * C874 +
            C20206 * C869 + C20201 * C882 + C20207 * C3299 + C20202 * C3304) *
               C459 -
           ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
             C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                C51036 +
            (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
             C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                C458) +
           (C20204 * C469 + C20199 * C479 + C20205 * C875 + C20200 * C889 +
            C20206 * C883 + C20201 * C893 + C20207 * C3305 + C20202 * C3311) *
               C50848) *
              C50906 * C50753 * C50806 * C296 +
          ((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C307 +
            C20206 * C637 + C20201 * C644 + C20207 * C751 + C20202 * C757) *
               C458 +
           (C20204 * C131 + C20199 * C142 + C20205 * C306 + C20200 * C317 +
            C20206 * C645 + C20201 * C652 + C20207 * C756 + C20202 * C763) *
               C51036 -
           (C20207 * C4244 + C20202 * C4245 + C20206 * C870 + C20201 * C884 +
            C20205 * C866 + C20200 * C876 + C20204 * C462 + C20199 * C470) *
               C459 -
           (C20207 * C4246 + C20202 * C4247 + C20206 * C885 + C20201 * C894 +
            C20205 * C877 + C20200 * C890 + C20204 * C471 + C20199 * C480) *
               C50848) *
              C50906 * C50753 * C50806 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C458 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C51036 -
           (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
            C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
               C459 -
           (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
            C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
               C50848) *
              C50906 * C50753 * C630 +
          ((C20204 * C864 + C20199 * C872 + C20205 * C868 + C20200 * C880 +
            C20206 * C3298 + C20201 * C3302 + C20207 * C3300 + C20202 * C3306) *
               C459 -
           ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
             C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                C51036 +
            (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
             C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                C458) +
           (C20204 * C873 + C20199 * C888 + C20205 * C881 + C20200 * C892 +
            C20206 * C3303 + C20201 * C3310 + C20207 * C3307 + C20202 * C3312) *
               C50848) *
              C50906 * C50753 * C631 +
          ((C20204 * C635 + C20199 * C640 + C20205 * C753 + C20200 * C761 +
            C20206 * C3016 + C20201 * C3019 + C20207 * C3145 + C20202 * C3149) *
               C458 +
           (C20204 * C641 + C20199 * C650 + C20205 * C760 + C20200 * C765 +
            C20206 * C3020 + C20201 * C3025 + C20207 * C3148 + C20202 * C3151) *
               C51036 -
           (C20207 * C20670 + C20202 * C20671 + C20206 * C3300 +
            C20201 * C3306 + C20205 * C3298 + C20200 * C3302 + C20204 * C868 +
            C20199 * C880) *
               C459 -
           (C20207 * C20672 + C20202 * C20673 + C20206 * C3307 +
            C20201 * C3312 + C20205 * C3303 + C20200 * C3310 + C20204 * C881 +
            C20199 * C892) *
               C50848) *
              C50906 * C50753 * C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
           C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
              C1240 +
          (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
           C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
              C1236 -
          (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
           C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
              C1241 -
          (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
           C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
              C1237 +
          (C20204 * C1000 + C20199 * C1005 + C20205 * C1154 + C20200 * C1158 +
           C20206 * C3460 + C20201 * C3463 + C20207 * C3636 + C20202 * C3638) *
              C1242 +
          (C20204 * C1006 + C20199 * C1015 + C20205 * C1159 + C20200 * C1166 +
           C20206 * C3464 + C20201 * C3469 + C20207 * C3639 + C20202 * C3642) *
              C1238 -
          (C20207 * C20940 + C20202 * C20941 + C20206 * C3742 + C20201 * C3746 +
           C20205 * C3743 + C20200 * C3747 + C20204 * C1244 + C20199 * C1248) *
              C1243 -
          (C20207 * C20942 + C20202 * C20943 + C20206 * C3748 + C20201 * C3754 +
           C20205 * C3749 + C20200 * C3755 + C20204 * C1249 + C20199 * C1256) *
              C1239) *
         C50906 * C50753 * C50806 * C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C1730 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C1728 -
            (C17374 * C864 + C50942 * C872 + C17373 * C460 + C17368 * C466) *
                C1731 -
            (C17374 * C873 + C50942 * C888 + C17373 * C467 + C17368 * C478) *
                C50848) *
               C50906 * C17370 +
           ((C17408 + C17409) * C1730 + (C17410 + C17411) * C1728 -
            (C17796 + C17797) * C1731 - (C17798 + C17799) * C50848) *
               C50906 * C17371 +
           C19307 * C17372) *
              C50806 * C51080 +
          (((C17797 + C17796) * C1731 -
            ((C17411 + C17410) * C1728 + (C17409 + C17408) * C1730) +
            (C17799 + C17798) * C50848) *
               C50906 * C17370 +
           ((C17802 + C17801) * C1731 -
            ((C17415 + C17414) * C1728 + (C17413 + C17412) * C1730) +
            (C17804 + C17803) * C50848) *
               C50906 * C17371 +
           ((C17805 + C17806) * C1731 - (C17426 * C1728 + C17427 * C1730) +
            (C17807 + C17808) * C50848) *
               C50906 * C17372) *
              C50806 * C51065 +
          (C19307 * C17370 +
           ((C17419 + C17418) * C1730 + (C17417 + C17416) * C1728 -
            (C17806 + C17805) * C1731 - (C17808 + C17807) * C50848) *
               C50906 * C17371 +
           ((C17420 + C17421) * C1730 + (C17422 + C17423) * C1728 -
            (C17374 * C1596 + C50942 * C1597 + C17373 * C464 + C17368 * C474) *
                C1731 -
            (C17374 * C1598 + C50942 * C1599 + C17373 * C475 + C17368 * C482) *
                C50848) *
               C50906 * C17372) *
              C50806 * C1362)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C1730 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C1728 -
           (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
            C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
               C1731 -
           (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
            C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
               C50848) *
              C50906 * C50753 * C50806 * C51080 +
          ((C20204 * C461 + C20199 * C468 + C20205 * C865 + C20200 * C874 +
            C20206 * C869 + C20201 * C882 + C20207 * C3299 + C20202 * C3304) *
               C1731 -
           ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
             C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                C1728 +
            (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
             C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                C1730) +
           (C20204 * C469 + C20199 * C479 + C20205 * C875 + C20200 * C889 +
            C20206 * C883 + C20201 * C893 + C20207 * C3305 + C20202 * C3311) *
               C50848) *
              C50906 * C50753 * C50806 * C51065 +
          ((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C307 +
            C20206 * C637 + C20201 * C644 + C20207 * C751 + C20202 * C757) *
               C1730 +
           (C20204 * C131 + C20199 * C142 + C20205 * C306 + C20200 * C317 +
            C20206 * C645 + C20201 * C652 + C20207 * C756 + C20202 * C763) *
               C1728 -
           (C20207 * C4244 + C20202 * C4245 + C20206 * C870 + C20201 * C884 +
            C20205 * C866 + C20200 * C876 + C20204 * C462 + C20199 * C470) *
               C1731 -
           (C20207 * C4246 + C20202 * C4247 + C20206 * C885 + C20201 * C894 +
            C20205 * C877 + C20200 * C890 + C20204 * C471 + C20199 * C480) *
               C50848) *
              C50906 * C50753 * C50806 * C1362)) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C1730 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C1728 -
             (C17374 * C864 + C50942 * C872 + C17373 * C460 + C17368 * C466) *
                 C1731 -
             (C17374 * C873 + C50942 * C888 + C17373 * C467 + C17368 * C478) *
                 C50848) *
                C50906 * C17370 +
            ((C17408 + C17409) * C1730 + (C17410 + C17411) * C1728 -
             (C17796 + C17797) * C1731 - (C17798 + C17799) * C50848) *
                C50906 * C17371 +
            C19307 * C17372) *
               C51034 +
           (((C17373 * C864 + C17368 * C872 + C17374 * C868 + C50942 * C880) *
                 C1731 -
             ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                  C1728 +
              (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                  C1730) +
             (C17373 * C873 + C17368 * C888 + C17374 * C881 + C50942 * C892) *
                 C50848) *
                C50906 * C17370 +
            ((C19146 + C19147) * C1731 -
             ((C17610 + C17611) * C1728 + (C17612 + C17613) * C1730) +
             (C19148 + C19149) * C50848) *
                C50906 * C17371 +
            ((C19150 + C19151) * C1731 - (C17618 * C1728 + C17619 * C1730) +
             (C19152 + C19153) * C50848) *
                C50906 * C17372) *
               C50822) *
              C1464 +
          ((((C17797 + C17796) * C1731 -
             ((C17411 + C17410) * C1728 + (C17409 + C17408) * C1730) +
             (C17799 + C17798) * C50848) *
                C50906 * C17370 +
            ((C17802 + C17801) * C1731 -
             ((C17415 + C17414) * C1728 + (C17413 + C17412) * C1730) +
             (C17804 + C17803) * C50848) *
                C50906 * C17371 +
            ((C17805 + C17806) * C1731 - (C17426 * C1728 + C17427 * C1730) +
             (C17807 + C17808) * C50848) *
                C50906 * C17372) *
               C51034 +
           (((C17613 + C17612) * C1730 + (C17611 + C17610) * C1728 -
             (C19147 + C19146) * C1731 - (C19149 + C19148) * C50848) *
                C50906 * C17370 +
            ((C17609 + C17608) * C1730 + (C17607 + C17606) * C1728 -
             (C19151 + C19150) * C1731 - (C19153 + C19152) * C50848) *
                C50906 * C17371 +
            ((C17614 + C17615) * C1730 + (C17616 + C17617) * C1728 -
             (C17374 * C871 + C50942 * C886 + C17373 * C867 + C17368 * C878) *
                 C1731 -
             (C17374 * C887 + C50942 * C895 + C17373 * C879 + C17368 * C891) *
                 C50848) *
                C50906 * C17372) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
             C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
                C1730 +
            (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
             C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
                C1728 -
            (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
             C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
                C1731 -
            (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
             C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
                C50848) *
               C50906 * C50753 * C51034 +
           ((C20204 * C864 + C20199 * C872 + C20205 * C868 + C20200 * C880 +
             C20206 * C3298 + C20201 * C3302 + C20207 * C3300 +
             C20202 * C3306) *
                C1731 -
            ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
              C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                 C1728 +
             (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
              C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                 C1730) +
            (C20204 * C873 + C20199 * C888 + C20205 * C881 + C20200 * C892 +
             C20206 * C3303 + C20201 * C3310 + C20207 * C3307 +
             C20202 * C3312) *
                C50848) *
               C50906 * C50753 * C50822) *
              C1464 +
          (((C20204 * C461 + C20199 * C468 + C20205 * C865 + C20200 * C874 +
             C20206 * C869 + C20201 * C882 + C20207 * C3299 + C20202 * C3304) *
                C1731 -
            ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
              C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                 C1728 +
             (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
              C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                 C1730) +
            (C20204 * C469 + C20199 * C479 + C20205 * C875 + C20200 * C889 +
             C20206 * C883 + C20201 * C893 + C20207 * C3305 + C20202 * C3311) *
                C50848) *
               C50906 * C50753 * C51034 +
           ((C20204 * C300 + C20199 * C309 + C20205 * C636 + C20200 * C642 +
             C20206 * C752 + C20201 * C759 + C20207 * C3017 + C20202 * C3021) *
                C1730 +
            (C20204 * C308 + C20199 * C318 + C20205 * C643 + C20200 * C651 +
             C20206 * C758 + C20201 * C764 + C20207 * C3022 + C20202 * C3026) *
                C1728 -
            (C20207 * C3301 + C20202 * C3308 + C20206 * C3299 + C20201 * C3304 +
             C20205 * C869 + C20200 * C882 + C20204 * C865 + C20199 * C874) *
                C1731 -
            (C20207 * C3309 + C20202 * C3313 + C20206 * C3305 + C20201 * C3311 +
             C20205 * C883 + C20200 * C893 + C20204 * C875 + C20199 * C889) *
                C50848) *
               C50906 * C50753 * C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C1999 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C51082 -
            (C17374 * C864 + C50942 * C872 + C17373 * C460 + C17368 * C466) *
                C2000 -
            (C17374 * C873 + C50942 * C888 + C17373 * C467 + C17368 * C478) *
                C51071 +
            (C17373 * C1000 + C17368 * C1005 + C17374 * C1154 +
             C50942 * C1158) *
                C2001 +
            (C17373 * C1006 + C17368 * C1015 + C17374 * C1159 +
             C50942 * C1166) *
                C1998) *
               C50906 * C17370 +
           ((C17408 + C17409) * C1999 + (C17410 + C17411) * C51082 -
            (C17796 + C17797) * C2000 - (C17798 + C17799) * C51071 +
            (C18392 + C18393) * C2001 + (C18394 + C18395) * C1998) *
               C50906 * C17371 +
           (C17424 * C1999 + C17425 * C51082 - C17809 * C2000 -
            C17810 * C51071 + (C18396 + C18397) * C2001 +
            (C18398 + C18399) * C1998) *
               C50906 * C17372) *
              C50806 * C1464 +
          (((C17797 + C17796) * C2000 -
            ((C17411 + C17410) * C51082 + (C17409 + C17408) * C1999) +
            (C17799 + C17798) * C51071 - (C18393 + C18392) * C2001 -
            (C18395 + C18394) * C1998) *
               C50906 * C17370 +
           ((C17802 + C17801) * C2000 -
            ((C17415 + C17414) * C51082 + (C17413 + C17412) * C1999) +
            (C17804 + C17803) * C51071 - (C18397 + C18396) * C2001 -
            (C18399 + C18398) * C1998) *
               C50906 * C17371 +
           ((C17805 + C17806) * C2000 - (C17426 * C51082 + C17427 * C1999) +
            (C17807 + C17808) * C51071 -
            (C17374 * C1157 + C50942 * C1164 + C17373 * C1003 +
             C17368 * C1011) *
                C2001 -
            (C17374 * C1165 + C50942 * C1169 + C17373 * C1012 +
             C17368 * C1018) *
                C1998) *
               C50906 * C17372) *
              C50806 * C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C1999 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C51082 -
           (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
            C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
               C2000 -
           (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
            C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
               C51071 +
           (C20204 * C1000 + C20199 * C1005 + C20205 * C1154 + C20200 * C1158 +
            C20206 * C3460 + C20201 * C3463 + C20207 * C3636 + C20202 * C3638) *
               C2001 +
           (C20204 * C1006 + C20199 * C1015 + C20205 * C1159 + C20200 * C1166 +
            C20206 * C3464 + C20201 * C3469 + C20207 * C3639 + C20202 * C3642) *
               C1998) *
              C50906 * C50753 * C50806 * C1464 +
          ((C20204 * C461 + C20199 * C468 + C20205 * C865 + C20200 * C874 +
            C20206 * C869 + C20201 * C882 + C20207 * C3299 + C20202 * C3304) *
               C2000 -
           ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
             C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                C51082 +
            (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
             C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                C1999) +
           (C20204 * C469 + C20199 * C479 + C20205 * C875 + C20200 * C889 +
            C20206 * C883 + C20201 * C893 + C20207 * C3305 + C20202 * C3311) *
               C51071 -
           (C20207 * C3637 + C20202 * C3640 + C20206 * C3461 + C20201 * C3465 +
            C20205 * C1155 + C20200 * C1160 + C20204 * C1001 + C20199 * C1007) *
               C2001 -
           (C20207 * C3641 + C20202 * C3643 + C20206 * C3466 + C20201 * C3470 +
            C20205 * C1161 + C20200 * C1167 + C20204 * C1008 + C20199 * C1016) *
               C1998) *
              C50906 * C50753 * C50806 * C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C118 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C50836) *
               C50906 * C17370 +
           ((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) * C50906 *
               C17371 +
           C17434 * C17372) *
              C50806 * C113 -
          (C17435 * C17372 +
           ((C17415 + C17414) * C50836 + (C17413 + C17412) * C118) * C50906 *
               C17371 +
           ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C50906 *
               C17370) *
              C50806 * C114 +
          (C17434 * C17370 +
           ((C17419 + C17418) * C118 + (C17417 + C17416) * C50836) * C50906 *
               C17371 +
           ((C17420 + C17421) * C118 + (C17422 + C17423) * C50836) * C50906 *
               C17372) *
              C50806 * C115 -
          (((C17374 * C314 + C50942 * C321 + C17373 * C137 + C17368 * C145) *
                C50836 +
            (C17374 * C303 + C50942 * C315 + C17373 * C124 + C17368 * C136) *
                C118) *
               C50906 * C17372 +
           ((C17423 + C17422) * C50836 + (C17421 + C17420) * C118) * C50906 *
               C17371 +
           C17435 * C17370) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C50836) *
                C50906 * C17370 +
            ((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) * C50906 *
                C17371 +
            C17434 * C17372) *
               C630 -
           (C17623 * C17372 +
            ((C17610 + C17611) * C50836 + (C17612 + C17613) * C118) * C50906 *
                C17371 +
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C50836 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C118) *
                C50906 * C17370) *
               C631 +
           (((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                 C118 +
             (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                 C50836) *
                C50906 * C17370 +
            ((C17978 + C17979) * C118 + (C17980 + C17981) * C50836) * C50906 *
                C17371 +
            ((C17982 + C17983) * C118 + (C17984 + C17985) * C50836) * C50906 *
                C17372) *
               C632) *
              C51027 +
          ((((C17613 + C17612) * C118 + (C17611 + C17610) * C50836) * C50906 *
                C17370 +
            ((C17609 + C17608) * C118 + (C17607 + C17606) * C50836) * C50906 *
                C17371 +
            ((C17614 + C17615) * C118 + (C17616 + C17617) * C50836) * C50906 *
                C17372) *
               C631 -
           (C17435 * C17372 +
            ((C17415 + C17414) * C50836 + (C17413 + C17412) * C118) * C50906 *
                C17371 +
            ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C50906 *
                C17370) *
               C630 -
           (((C17374 * C754 + C50942 * C762 + C17373 * C647 + C17368 * C653) *
                 C50836 +
             (C17374 * C750 + C50942 * C755 + C17373 * C638 + C17368 * C646) *
                 C118) *
                C50906 * C17372 +
            ((C17985 + C17984) * C50836 + (C17983 + C17982) * C118) * C50906 *
                C17371 +
            ((C17981 + C17980) * C50836 + (C17979 + C17978) * C118) * C50906 *
                C17370) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C118 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C50836) *
              C50906 * C50753 * C50806 * C113 -
          ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
            C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
               C50836 +
           (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
            C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
               C118) *
              C50906 * C50753 * C50806 * C114 +
          ((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C307 +
            C20206 * C637 + C20201 * C644 + C20207 * C751 + C20202 * C757) *
               C118 +
           (C20204 * C131 + C20199 * C142 + C20205 * C306 + C20200 * C317 +
            C20206 * C645 + C20201 * C652 + C20207 * C756 + C20202 * C763) *
               C50836) *
              C50906 * C50753 * C50806 * C115 -
          ((C20207 * C754 + C20202 * C762 + C20206 * C647 + C20201 * C653 +
            C20205 * C304 + C20200 * C316 + C20204 * C133 + C20199 * C143) *
               C50836 +
           (C20207 * C750 + C20202 * C755 + C20206 * C638 + C20201 * C646 +
            C20205 * C298 + C20200 * C305 + C20204 * C122 + C20199 * C132) *
               C118) *
              C50906 * C50753 * C50806 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
             C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
                C118 +
            (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
             C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
                C50836) *
               C50906 * C50753 * C630 -
           ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
             C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                C50836 +
            (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
             C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                C118) *
               C50906 * C50753 * C631 +
           ((C20204 * C635 + C20199 * C640 + C20205 * C753 + C20200 * C761 +
             C20206 * C3016 + C20201 * C3019 + C20207 * C3145 +
             C20202 * C3149) *
                C118 +
            (C20204 * C641 + C20199 * C650 + C20205 * C760 + C20200 * C765 +
             C20206 * C3020 + C20201 * C3025 + C20207 * C3148 +
             C20202 * C3151) *
                C50836) *
               C50906 * C50753 * C632) *
              C51027 +
          (((C20204 * C300 + C20199 * C309 + C20205 * C636 + C20200 * C642 +
             C20206 * C752 + C20201 * C759 + C20207 * C3017 + C20202 * C3021) *
                C118 +
            (C20204 * C308 + C20199 * C318 + C20205 * C643 + C20200 * C651 +
             C20206 * C758 + C20201 * C764 + C20207 * C3022 + C20202 * C3026) *
                C50836) *
               C50906 * C50753 * C631 -
           ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
             C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                C50836 +
            (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
             C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                C118) *
               C50906 * C50753 * C630 -
           ((C20207 * C3146 + C20202 * C3150 + C20206 * C3022 + C20201 * C3026 +
             C20205 * C758 + C20200 * C764 + C20204 * C643 + C20199 * C651) *
                C50836 +
            (C20207 * C3144 + C20202 * C3147 + C20206 * C3017 + C20201 * C3021 +
             C20205 * C752 + C20200 * C759 + C20204 * C636 + C20199 * C642) *
                C118) *
               C50906 * C50753 * C632) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                 C118 +
             (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                 C50836) *
                C50906 * C17370 +
            ((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) * C50906 *
                C17371 +
            C17434 * C17372) *
               C51034 -
           (C17623 * C17372 +
            ((C17610 + C17611) * C50836 + (C17612 + C17613) * C118) * C50906 *
                C17371 +
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C50836 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C118) *
                C50906 * C17370) *
               C50822) *
              C295 +
          ((((C17613 + C17612) * C118 + (C17611 + C17610) * C50836) * C50906 *
                C17370 +
            ((C17609 + C17608) * C118 + (C17607 + C17606) * C50836) * C50906 *
                C17371 +
            ((C17614 + C17615) * C118 + (C17616 + C17617) * C50836) * C50906 *
                C17372) *
               C50822 -
           (C17435 * C17372 +
            ((C17415 + C17414) * C50836 + (C17413 + C17412) * C118) * C50906 *
                C17371 +
            ((C17411 + C17410) * C50836 + (C17409 + C17408) * C118) * C50906 *
                C17370) *
               C51034) *
              C296 +
          ((C17434 * C17370 +
            ((C17419 + C17418) * C118 + (C17417 + C17416) * C50836) * C50906 *
                C17371 +
            ((C17420 + C17421) * C118 + (C17422 + C17423) * C50836) * C50906 *
                C17372) *
               C51034 -
           (((C17374 * C648 + C50942 * C654 + C17373 * C313 + C17368 * C320) *
                 C50836 +
             (C17374 * C639 + C50942 * C649 + C17373 * C302 + C17368 * C312) *
                 C118) *
                C50906 * C17372 +
            ((C17617 + C17616) * C50836 + (C17615 + C17614) * C118) * C50906 *
                C17371 +
            C17623 * C17370) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C118 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C50836) *
               C50906 * C17370 +
           ((C17408 + C17409) * C118 + (C17410 + C17411) * C50836) * C50906 *
               C17371 +
           C17434 * C17372) *
              C745 -
          (C17623 * C17372 +
           ((C17610 + C17611) * C50836 + (C17612 + C17613) * C118) * C50906 *
               C17371 +
           ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                C50836 +
            (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                C118) *
               C50906 * C17370) *
              C746 +
          (((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                C118 +
            (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                C50836) *
               C50906 * C17370 +
           ((C17978 + C17979) * C118 + (C17980 + C17981) * C50836) * C50906 *
               C17371 +
           ((C17982 + C17983) * C118 + (C17984 + C17985) * C50836) * C50906 *
               C17372) *
              C747 -
          (((C17374 * C3023 + C50942 * C3027 + C17373 * C756 + C17368 * C763) *
                C50836 +
            (C17374 * C3018 + C50942 * C3024 + C17373 * C751 + C17368 * C757) *
                C118) *
               C50906 * C17372 +
           ((C17374 * C3022 + C50942 * C3026 + C17373 * C758 + C17368 * C764) *
                C50836 +
            (C17374 * C3017 + C50942 * C3021 + C17373 * C752 + C17368 * C759) *
                C118) *
               C50906 * C17371 +
           ((C17374 * C3020 + C50942 * C3025 + C17373 * C760 + C17368 * C765) *
                C50836 +
            (C17374 * C3016 + C50942 * C3019 + C17373 * C753 + C17368 * C761) *
                C118) *
               C50906 * C17370) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
             C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
                C118 +
            (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
             C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
                C50836) *
               C50906 * C50753 * C51034 -
           ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
             C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                C50836 +
            (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
             C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                C118) *
               C50906 * C50753 * C50822) *
              C295 +
          (((C20204 * C300 + C20199 * C309 + C20205 * C636 + C20200 * C642 +
             C20206 * C752 + C20201 * C759 + C20207 * C3017 + C20202 * C3021) *
                C118 +
            (C20204 * C308 + C20199 * C318 + C20205 * C643 + C20200 * C651 +
             C20206 * C758 + C20201 * C764 + C20207 * C3022 + C20202 * C3026) *
                C50836) *
               C50906 * C50753 * C50822 -
           ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
             C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                C50836 +
            (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
             C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                C118) *
               C50906 * C50753 * C51034) *
              C296 +
          (((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C307 +
             C20206 * C637 + C20201 * C644 + C20207 * C751 + C20202 * C757) *
                C118 +
            (C20204 * C131 + C20199 * C142 + C20205 * C306 + C20200 * C317 +
             C20206 * C645 + C20201 * C652 + C20207 * C756 + C20202 * C763) *
                C50836) *
               C50906 * C50753 * C51034 -
           ((C20207 * C3023 + C20202 * C3027 + C20206 * C756 + C20201 * C763 +
             C20205 * C645 + C20200 * C652 + C20204 * C306 + C20199 * C317) *
                C50836 +
            (C20207 * C3018 + C20202 * C3024 + C20206 * C751 + C20201 * C757 +
             C20205 * C637 + C20200 * C644 + C20204 * C299 + C20199 * C307) *
                C118) *
               C50906 * C50753 * C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C118 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C50836) *
              C50906 * C50753 * C745 -
          ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
            C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
               C50836 +
           (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
            C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
               C118) *
              C50906 * C50753 * C746 +
          ((C20204 * C635 + C20199 * C640 + C20205 * C753 + C20200 * C761 +
            C20206 * C3016 + C20201 * C3019 + C20207 * C3145 + C20202 * C3149) *
               C118 +
           (C20204 * C641 + C20199 * C650 + C20205 * C760 + C20200 * C765 +
            C20206 * C3020 + C20201 * C3025 + C20207 * C3148 + C20202 * C3151) *
               C50836) *
              C50906 * C50753 * C747 -
          ((C20207 * C20569 + C20202 * C20571 + C20206 * C3148 +
            C20201 * C3151 + C20205 * C3020 + C20200 * C3025 + C20204 * C760 +
            C20199 * C765) *
               C50836 +
           (C20207 * C20568 + C20202 * C20570 + C20206 * C3145 +
            C20201 * C3149 + C20205 * C3016 + C20200 * C3019 + C20204 * C753 +
            C20199 * C761) *
               C118) *
              C50906 * C50753 * C748) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C458 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C51036 -
            (C17374 * C864 + C50942 * C872 + C17373 * C460 + C17368 * C466) *
                C459 -
            (C17374 * C873 + C50942 * C888 + C17373 * C467 + C17368 * C478) *
                C50848) *
               C50906 * C17370 +
           ((C17408 + C17409) * C458 + (C17410 + C17411) * C51036 -
            (C17796 + C17797) * C459 - (C17798 + C17799) * C50848) *
               C50906 * C17371 +
           C17815 * C17372) *
              C50806 * C295 +
          (((C17797 + C17796) * C459 -
            ((C17411 + C17410) * C51036 + (C17409 + C17408) * C458) +
            (C17799 + C17798) * C50848) *
               C50906 * C17370 +
           ((C17802 + C17801) * C459 -
            ((C17415 + C17414) * C51036 + (C17413 + C17412) * C458) +
            (C17804 + C17803) * C50848) *
               C50906 * C17371 +
           ((C17805 + C17806) * C459 - (C17426 * C51036 + C17427 * C458) +
            (C17807 + C17808) * C50848) *
               C50906 * C17372) *
              C50806 * C296 +
          (C17815 * C17370 +
           ((C17419 + C17418) * C458 + (C17417 + C17416) * C51036 -
            (C17806 + C17805) * C459 - (C17808 + C17807) * C50848) *
               C50906 * C17371 +
           ((C17420 + C17421) * C458 + (C17422 + C17423) * C51036 -
            (C17374 * C1596 + C50942 * C1597 + C17373 * C464 + C17368 * C474) *
                C459 -
            (C17374 * C1598 + C50942 * C1599 + C17373 * C475 + C17368 * C482) *
                C50848) *
               C50906 * C17372) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17373 * C119 + C17368 * C126 + C17374 * C301 + C50942 * C311) *
                C458 +
            (C17373 * C127 + C17368 * C140 + C17374 * C310 + C50942 * C319) *
                C51036 -
            (C17374 * C864 + C50942 * C872 + C17373 * C460 + C17368 * C466) *
                C459 -
            (C17374 * C873 + C50942 * C888 + C17373 * C467 + C17368 * C478) *
                C50848) *
               C50906 * C17370 +
           ((C17408 + C17409) * C458 + (C17410 + C17411) * C51036 -
            (C17796 + C17797) * C459 - (C17798 + C17799) * C50848) *
               C50906 * C17371 +
           C17815 * C17372) *
              C630 +
          (((C17373 * C864 + C17368 * C872 + C17374 * C868 + C50942 * C880) *
                C459 -
            ((C17374 * C641 + C50942 * C650 + C17373 * C310 + C17368 * C319) *
                 C51036 +
             (C17374 * C635 + C50942 * C640 + C17373 * C301 + C17368 * C311) *
                 C458) +
            (C17373 * C873 + C17368 * C888 + C17374 * C881 + C50942 * C892) *
                C50848) *
               C50906 * C17370 +
           ((C17373 * C865 + C17368 * C874 + C17374 * C869 + C50942 * C882) *
                C459 -
            ((C17610 + C17611) * C51036 + (C17612 + C17613) * C458) +
            (C17373 * C875 + C17368 * C889 + C17374 * C883 + C50942 * C893) *
                C50848) *
               C50906 * C17371 +
           ((C17373 * C866 + C17368 * C876 + C17374 * C870 + C50942 * C884) *
                C459 -
            (C17618 * C51036 + C17619 * C458) +
            (C17373 * C877 + C17368 * C890 + C17374 * C885 + C50942 * C894) *
                C50848) *
               C50906 * C17372) *
              C631 +
          (((C17373 * C635 + C17368 * C640 + C17374 * C753 + C50942 * C761) *
                C458 +
            (C17373 * C641 + C17368 * C650 + C17374 * C760 + C50942 * C765) *
                C51036 -
            (C17374 * C3298 + C50942 * C3302 + C17373 * C868 + C17368 * C880) *
                C459 -
            (C17374 * C3303 + C50942 * C3310 + C17373 * C881 + C17368 * C892) *
                C50848) *
               C50906 * C17370 +
           ((C17978 + C17979) * C458 + (C17980 + C17981) * C51036 -
            (C17374 * C3299 + C50942 * C3304 + C17373 * C869 + C17368 * C882) *
                C459 -
            (C17374 * C3305 + C50942 * C3311 + C17373 * C883 + C17368 * C893) *
                C50848) *
               C50906 * C17371 +
           ((C17982 + C17983) * C458 + (C17984 + C17985) * C51036 -
            (C17374 * C4244 + C50942 * C4245 + C17373 * C870 + C17368 * C884) *
                C459 -
            (C17374 * C4246 + C50942 * C4247 + C17373 * C885 + C17368 * C894) *
                C50848) *
               C50906 * C17372) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C458 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C51036 -
           (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
            C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
               C459 -
           (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
            C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
               C50848) *
              C50906 * C50753 * C50806 * C295 +
          ((C20204 * C461 + C20199 * C468 + C20205 * C865 + C20200 * C874 +
            C20206 * C869 + C20201 * C882 + C20207 * C3299 + C20202 * C3304) *
               C459 -
           ((C20207 * C758 + C20202 * C764 + C20206 * C643 + C20201 * C651 +
             C20205 * C308 + C20200 * C318 + C20204 * C129 + C20199 * C141) *
                C51036 +
            (C20207 * C752 + C20202 * C759 + C20206 * C636 + C20201 * C642 +
             C20205 * C300 + C20200 * C309 + C20204 * C120 + C20199 * C128) *
                C458) +
           (C20204 * C469 + C20199 * C479 + C20205 * C875 + C20200 * C889 +
            C20206 * C883 + C20201 * C893 + C20207 * C3305 + C20202 * C3311) *
               C50848) *
              C50906 * C50753 * C50806 * C296 +
          ((C20204 * C121 + C20199 * C130 + C20205 * C299 + C20200 * C307 +
            C20206 * C637 + C20201 * C644 + C20207 * C751 + C20202 * C757) *
               C458 +
           (C20204 * C131 + C20199 * C142 + C20205 * C306 + C20200 * C317 +
            C20206 * C645 + C20201 * C652 + C20207 * C756 + C20202 * C763) *
               C51036 -
           (C20207 * C4244 + C20202 * C4245 + C20206 * C870 + C20201 * C884 +
            C20205 * C866 + C20200 * C876 + C20204 * C462 + C20199 * C470) *
               C459 -
           (C20207 * C4246 + C20202 * C4247 + C20206 * C885 + C20201 * C894 +
            C20205 * C877 + C20200 * C890 + C20204 * C471 + C20199 * C480) *
               C50848) *
              C50906 * C50753 * C50806 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C20204 * C119 + C20199 * C126 + C20205 * C301 + C20200 * C311 +
            C20206 * C635 + C20201 * C640 + C20207 * C753 + C20202 * C761) *
               C458 +
           (C20204 * C127 + C20199 * C140 + C20205 * C310 + C20200 * C319 +
            C20206 * C641 + C20201 * C650 + C20207 * C760 + C20202 * C765) *
               C51036 -
           (C20207 * C3298 + C20202 * C3302 + C20206 * C868 + C20201 * C880 +
            C20205 * C864 + C20200 * C872 + C20204 * C460 + C20199 * C466) *
               C459 -
           (C20207 * C3303 + C20202 * C3310 + C20206 * C881 + C20201 * C892 +
            C20205 * C873 + C20200 * C888 + C20204 * C467 + C20199 * C478) *
               C50848) *
              C50906 * C50753 * C630 +
          ((C20204 * C864 + C20199 * C872 + C20205 * C868 + C20200 * C880 +
            C20206 * C3298 + C20201 * C3302 + C20207 * C3300 + C20202 * C3306) *
               C459 -
           ((C20207 * C3020 + C20202 * C3025 + C20206 * C760 + C20201 * C765 +
             C20205 * C641 + C20200 * C650 + C20204 * C310 + C20199 * C319) *
                C51036 +
            (C20207 * C3016 + C20202 * C3019 + C20206 * C753 + C20201 * C761 +
             C20205 * C635 + C20200 * C640 + C20204 * C301 + C20199 * C311) *
                C458) +
           (C20204 * C873 + C20199 * C888 + C20205 * C881 + C20200 * C892 +
            C20206 * C3303 + C20201 * C3310 + C20207 * C3307 + C20202 * C3312) *
               C50848) *
              C50906 * C50753 * C631 +
          ((C20204 * C635 + C20199 * C640 + C20205 * C753 + C20200 * C761 +
            C20206 * C3016 + C20201 * C3019 + C20207 * C3145 + C20202 * C3149) *
               C458 +
           (C20204 * C641 + C20199 * C650 + C20205 * C760 + C20200 * C765 +
            C20206 * C3020 + C20201 * C3025 + C20207 * C3148 + C20202 * C3151) *
               C51036 -
           (C20207 * C20670 + C20202 * C20671 + C20206 * C3300 +
            C20201 * C3306 + C20205 * C3298 + C20200 * C3302 + C20204 * C868 +
            C20199 * C880) *
               C459 -
           (C20207 * C20672 + C20202 * C20673 + C20206 * C3307 +
            C20201 * C3312 + C20205 * C3303 + C20200 * C3310 + C20204 * C881 +
            C20199 * C892) *
               C50848) *
              C50906 * C50753 * C632) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                  C118 +
              (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                  C50836) *
                 C33864 +
             ((C14190 + C14189) * C118 + (C14192 + C14191) * C50836) * C50970) *
                C51022 +
            (((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C33864 +
             (C14185 * C118 + C14186 * C50836) * C50970) *
                C50758) *
               C1358 -
           (((C15977 * C50836 + C15978 * C118) * C50970 +
             ((C8439 + C8440) * C50836 + (C8441 + C8442) * C118) * C33864) *
                C50758 +
            (((C14742 + C14741) * C50836 + (C14740 + C14739) * C118) * C50970 +
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C50836 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C118) *
                 C33864) *
                C51022) *
               C50822) *
              C51080 +
          (((((C8442 + C8441) * C118 + (C8440 + C8439) * C50836) * C33864 +
             (C15975 * C118 + C15976 * C50836) * C50970) *
                C51022 +
            (((C8438 + C8437) * C118 + (C8436 + C8435) * C50836) * C33864 +
             ((C9979 + C9980) * C118 + (C9981 + C9982) * C50836) * C50970) *
                C50758) *
               C50822 -
           (((C8639 * C50836 + C8638 * C118) * C50970 +
             ((C8244 + C8243) * C50836 + (C8242 + C8241) * C118) * C33864) *
                C50758 +
            ((C14184 * C50836 + C14183 * C118) * C50970 +
             ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C33864) *
                C51022) *
               C1358) *
              C51065 +
          (((C8261 * C33864 + (C14187 * C118 + C14188 * C50836) * C50970) *
                C51022 +
            (((C8248 + C8247) * C118 + (C8246 + C8245) * C50836) * C33864 +
             ((C8634 + C8635) * C118 + (C8636 + C8637) * C50836) * C50970) *
                C50758) *
               C1358 -
           ((((C8203 * C887 + C50942 * C895 + C8202 * C879 + C51050 * C891) *
                  C50836 +
              (C8203 * C871 + C50942 * C886 + C8202 * C867 + C51050 * C878) *
                  C118) *
                 C50970 +
             ((C8446 + C8445) * C50836 + (C8444 + C8443) * C118) * C33864) *
                C50758 +
            (((C9982 + C9981) * C50836 + (C9980 + C9979) * C118) * C50970 +
             C8451 * C33864) *
                C51022) *
               C50822) *
              C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                  C118 +
              (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                  C50836) *
                 C33864 +
             ((C14190 + C14189) * C118 + (C14192 + C14191) * C50836) * C50970) *
                C51022 +
            (((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C33864 +
             (C14185 * C118 + C14186 * C50836) * C50970) *
                C50758) *
               C51081 -
           (((C15977 * C50836 + C15978 * C118) * C50970 +
             ((C8439 + C8440) * C50836 + (C8441 + C8442) * C118) * C33864) *
                C50758 +
            (((C14742 + C14741) * C50836 + (C14740 + C14739) * C118) * C50970 +
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C50836 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C118) *
                 C33864) *
                C51022) *
               C51068 +
           ((((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                  C118 +
              (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                  C50836) *
                 C33864 +
             ((C14744 + C14743) * C118 + (C14746 + C14745) * C50836) * C50970) *
                C51022 +
            (((C8807 + C8808) * C118 + (C8809 + C8810) * C50836) * C33864 +
             ((C14395 + C14396) * C118 + (C14397 + C14398) * C50836) * C50970) *
                C50758) *
               C1463) *
              C1464 +
          (((((C8442 + C8441) * C118 + (C8440 + C8439) * C50836) * C33864 +
             (C15975 * C118 + C15976 * C50836) * C50970) *
                C51022 +
            (((C8438 + C8437) * C118 + (C8436 + C8435) * C50836) * C33864 +
             ((C9979 + C9980) * C118 + (C9981 + C9982) * C50836) * C50970) *
                C50758) *
               C51068 -
           (((C8639 * C50836 + C8638 * C118) * C50970 +
             ((C8244 + C8243) * C50836 + (C8242 + C8241) * C118) * C33864) *
                C50758 +
            ((C14184 * C50836 + C14183 * C118) * C50970 +
             ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C33864) *
                C51022) *
               C51081 -
           ((((C8203 * C4246 + C50942 * C4247 + C8202 * C885 + C51050 * C894) *
                  C50836 +
              (C8203 * C4244 + C50942 * C4245 + C8202 * C870 + C51050 * C884) *
                  C118) *
                 C50970 +
             ((C8814 + C8813) * C50836 + (C8812 + C8811) * C118) * C33864) *
                C50758 +
            (((C14398 + C14397) * C50836 + (C14396 + C14395) * C118) * C50970 +
             ((C8810 + C8809) * C50836 + (C8808 + C8807) * C118) * C33864) *
                C51022) *
               C1463) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                  C458 +
              (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                  C51036 -
              (C14189 + C14190) * C459 - (C14191 + C14192) * C50848) *
                 C33864 +
             ((C14190 + C14189) * C458 + (C14192 + C14191) * C51036 -
              (C14962 + C14961) * C459 - (C14964 + C14963) * C50848) *
                 C50970) *
                C51022 +
            (((C8237 + C8238) * C458 + (C8239 + C8240) * C51036 -
              C14183 * C459 - C14184 * C50848) *
                 C33864 +
             (C14185 * C458 + C14186 * C51036 - C14951 * C459 -
              C14952 * C50848) *
                 C50970) *
                C50758) *
               C1358 +
           ((((C14739 + C14740) * C459 -
              ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                   C51036 +
               (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                   C458) +
              (C14741 + C14742) * C50848) *
                 C33864 +
             ((C15180 + C15179) * C459 -
              ((C14742 + C14741) * C51036 + (C14740 + C14739) * C458) +
              (C15182 + C15181) * C50848) *
                 C50970) *
                C51022 +
            ((C15975 * C459 -
              ((C8439 + C8440) * C51036 + (C8441 + C8442) * C458) +
              C15976 * C50848) *
                 C33864 +
             ((C15184 + C15183) * C459 - (C15977 * C51036 + C15978 * C458) +
              (C15186 + C15185) * C50848) *
                 C50970) *
                C50758) *
               C50822) *
              C1464 +
          ((((C14185 * C459 -
              ((C8240 + C8239) * C51036 + (C8238 + C8237) * C458) +
              C14186 * C50848) *
                 C33864 +
             (C14949 * C459 - (C14184 * C51036 + C14183 * C458) +
              C14950 * C50848) *
                 C50970) *
                C51022 +
            ((C14187 * C459 -
              ((C8244 + C8243) * C51036 + (C8242 + C8241) * C458) +
              C14188 * C50848) *
                 C33864 +
             ((C9225 + C9226) * C459 - (C8639 * C51036 + C8638 * C458) +
              (C9227 + C9228) * C50848) *
                 C50970) *
                C50758) *
               C1358 +
           ((((C8442 + C8441) * C458 + (C8440 + C8439) * C51036 -
              C15978 * C459 - C15977 * C50848) *
                 C33864 +
             (C15975 * C458 + C15976 * C51036 - (C15183 + C15184) * C459 -
              (C15185 + C15186) * C50848) *
                 C50970) *
                C51022 +
            (((C8438 + C8437) * C458 + (C8436 + C8435) * C51036 -
              (C9980 + C9979) * C459 - (C9982 + C9981) * C50848) *
                 C33864 +
             ((C9979 + C9980) * C458 + (C9981 + C9982) * C51036 -
              (C8203 * C3462 + C50942 * C3467 + C8202 * C1156 +
               C51050 * C1162) *
                  C459 -
              (C8203 * C3468 + C50942 * C3471 + C8202 * C1163 +
               C51050 * C1168) *
                  C50848) *
                 C50970) *
                C50758) *
               C50822) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                  C1730 +
              (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                  C1728 -
              (C14189 + C14190) * C1731 - (C14191 + C14192) * C50848) *
                 C33864 +
             ((C14190 + C14189) * C1730 + (C14192 + C14191) * C1728 -
              (C14962 + C14961) * C1731 - (C14964 + C14963) * C50848) *
                 C50970) *
                C51022 +
            (((C8237 + C8238) * C1730 + (C8239 + C8240) * C1728 -
              C14183 * C1731 - C14184 * C50848) *
                 C33864 +
             (C14185 * C1730 + C14186 * C1728 - C14951 * C1731 -
              C14952 * C50848) *
                 C50970) *
                C50758) *
               C1358 +
           ((((C14739 + C14740) * C1731 -
              ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                   C1728 +
               (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                   C1730) +
              (C14741 + C14742) * C50848) *
                 C33864 +
             ((C15180 + C15179) * C1731 -
              ((C14742 + C14741) * C1728 + (C14740 + C14739) * C1730) +
              (C15182 + C15181) * C50848) *
                 C50970) *
                C51022 +
            ((C15975 * C1731 -
              ((C8439 + C8440) * C1728 + (C8441 + C8442) * C1730) +
              C15976 * C50848) *
                 C33864 +
             ((C15184 + C15183) * C1731 - (C15977 * C1728 + C15978 * C1730) +
              (C15186 + C15185) * C50848) *
                 C50970) *
                C50758) *
               C50822) *
              C51027 +
          ((((C14185 * C1731 -
              ((C8240 + C8239) * C1728 + (C8238 + C8237) * C1730) +
              C14186 * C50848) *
                 C33864 +
             (C14949 * C1731 - (C14184 * C1728 + C14183 * C1730) +
              C14950 * C50848) *
                 C50970) *
                C51022 +
            ((C14187 * C1731 -
              ((C8244 + C8243) * C1728 + (C8242 + C8241) * C1730) +
              C14188 * C50848) *
                 C33864 +
             ((C9225 + C9226) * C1731 - (C8639 * C1728 + C8638 * C1730) +
              (C9227 + C9228) * C50848) *
                 C50970) *
                C50758) *
               C1358 +
           ((((C8442 + C8441) * C1730 + (C8440 + C8439) * C1728 -
              C15978 * C1731 - C15977 * C50848) *
                 C33864 +
             (C15975 * C1730 + C15976 * C1728 - (C15183 + C15184) * C1731 -
              (C15185 + C15186) * C50848) *
                 C50970) *
                C51022 +
            (((C8438 + C8437) * C1730 + (C8436 + C8435) * C1728 -
              (C9980 + C9979) * C1731 - (C9982 + C9981) * C50848) *
                 C33864 +
             ((C9979 + C9980) * C1730 + (C9981 + C9982) * C1728 -
              (C8203 * C3462 + C50942 * C3467 + C8202 * C1156 +
               C51050 * C1162) *
                  C1731 -
              (C8203 * C3468 + C50942 * C3471 + C8202 * C1163 +
               C51050 * C1168) *
                  C50848) *
                 C50970) *
                C50758) *
               C50822) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C1730 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C1728 -
             (C14189 + C14190) * C1731 - (C14191 + C14192) * C50848) *
                C33864 +
            ((C14190 + C14189) * C1730 + (C14192 + C14191) * C1728 -
             (C14962 + C14961) * C1731 - (C14964 + C14963) * C50848) *
                C50970) *
               C51022 +
           (((C8237 + C8238) * C1730 + (C8239 + C8240) * C1728 -
             C14183 * C1731 - C14184 * C50848) *
                C33864 +
            (C14185 * C1730 + C14186 * C1728 - C14951 * C1731 -
             C14952 * C50848) *
                C50970) *
               C50758) *
              C51081 +
          ((((C14739 + C14740) * C1731 -
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C1728 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C1730) +
             (C14741 + C14742) * C50848) *
                C33864 +
            ((C15180 + C15179) * C1731 -
             ((C14742 + C14741) * C1728 + (C14740 + C14739) * C1730) +
             (C15182 + C15181) * C50848) *
                C50970) *
               C51022 +
           ((C15975 * C1731 -
             ((C8439 + C8440) * C1728 + (C8441 + C8442) * C1730) +
             C15976 * C50848) *
                C33864 +
            ((C15184 + C15183) * C1731 - (C15977 * C1728 + C15978 * C1730) +
             (C15186 + C15185) * C50848) *
                C50970) *
               C50758) *
              C51068 +
          ((((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                 C1730 +
             (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                 C1728 -
             (C14743 + C14744) * C1731 - (C14745 + C14746) * C50848) *
                C33864 +
            ((C14744 + C14743) * C1730 + (C14746 + C14745) * C1728 -
             (C8203 * C3636 + C50942 * C3638 + C8202 * C3460 + C51050 * C3463) *
                 C1731 -
             (C8203 * C3639 + C50942 * C3642 + C8202 * C3464 + C51050 * C3469) *
                 C50848) *
                C50970) *
               C51022 +
           (((C8807 + C8808) * C1730 + (C8809 + C8810) * C1728 -
             (C14396 + C14395) * C1731 - (C14398 + C14397) * C50848) *
                C33864 +
            ((C14395 + C14396) * C1730 + (C14397 + C14398) * C1728 -
             (C8203 * C3637 + C50942 * C3640 + C8202 * C3461 + C51050 * C3465) *
                 C1731 -
             (C8203 * C3641 + C50942 * C3643 + C8202 * C3466 + C51050 * C3470) *
                 C50848) *
                C50970) *
               C50758) *
              C1463) *
         C50774) /
        (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C1999 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C51082 -
             (C14189 + C14190) * C2000 - (C14191 + C14192) * C51071 +
             (C14961 + C14962) * C2001 + (C14963 + C14964) * C1998) *
                C33864 +
            ((C14190 + C14189) * C1999 + (C14192 + C14191) * C51082 -
             (C14962 + C14961) * C2000 - (C14964 + C14963) * C51071 +
             (C15326 + C15325) * C2001 + (C15328 + C15327) * C1998) *
                C50970) *
               C51022 +
           (((C8237 + C8238) * C1999 + (C8239 + C8240) * C51082 -
             C14183 * C2000 - C14184 * C51071 + C14949 * C2001 +
             C14950 * C1998) *
                C33864 +
            (C14185 * C1999 + C14186 * C51082 - C14951 * C2000 -
             C14952 * C51071 + (C14965 + C14966) * C2001 +
             (C14967 + C14968) * C1998) *
                C50970) *
               C50758) *
              C1358 +
          ((((C14739 + C14740) * C2000 -
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C51082 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C1999) +
             (C14741 + C14742) * C51071 - (C15179 + C15180) * C2001 -
             (C15181 + C15182) * C1998) *
                C33864 +
            ((C15180 + C15179) * C2000 -
             ((C14742 + C14741) * C51082 + (C14740 + C14739) * C1999) +
             (C15182 + C15181) * C51071 -
             (C8203 * C3742 + C50942 * C3746 + C8202 * C3743 + C51050 * C3747) *
                 C2001 -
             (C8203 * C3748 + C50942 * C3754 + C8202 * C3749 + C51050 * C3755) *
                 C1998) *
                C50970) *
               C51022 +
           ((C15975 * C2000 -
             ((C8439 + C8440) * C51082 + (C8441 + C8442) * C1999) +
             C15976 * C51071 - (C15183 + C15184) * C2001 -
             (C15185 + C15186) * C1998) *
                C33864 +
            ((C15184 + C15183) * C2000 - (C15977 * C51082 + C15978 * C1999) +
             (C15186 + C15185) * C51071 -
             (C8203 * C3744 + C50942 * C3750 + C8202 * C3745 + C51050 * C3751) *
                 C2001 -
             (C8203 * C3752 + C50942 * C3756 + C8202 * C3753 + C51050 * C3757) *
                 C1998) *
                C50970) *
               C50758) *
              C50822) *
         C50774) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                  C118 +
              (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                  C50836) *
                 C33864 +
             ((C14190 + C14189) * C118 + (C14192 + C14191) * C50836) * C50970) *
                C51022 +
            (((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C33864 +
             (C14185 * C118 + C14186 * C50836) * C50970) *
                C50758) *
               C630 -
           (((C15977 * C50836 + C15978 * C118) * C50970 +
             ((C8439 + C8440) * C50836 + (C8441 + C8442) * C118) * C33864) *
                C50758 +
            (((C14742 + C14741) * C50836 + (C14740 + C14739) * C118) * C50970 +
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C50836 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C118) *
                 C33864) *
                C51022) *
               C631 +
           ((((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                  C118 +
              (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                  C50836) *
                 C33864 +
             ((C14744 + C14743) * C118 + (C14746 + C14745) * C50836) * C50970) *
                C51022 +
            (((C8807 + C8808) * C118 + (C8809 + C8810) * C50836) * C33864 +
             ((C14395 + C14396) * C118 + (C14397 + C14398) * C50836) * C50970) *
                C50758) *
               C632) *
              C51027 +
          (((((C8442 + C8441) * C118 + (C8440 + C8439) * C50836) * C33864 +
             (C15975 * C118 + C15976 * C50836) * C50970) *
                C51022 +
            (((C8438 + C8437) * C118 + (C8436 + C8435) * C50836) * C33864 +
             ((C9979 + C9980) * C118 + (C9981 + C9982) * C50836) * C50970) *
                C50758) *
               C631 -
           (((C8639 * C50836 + C8638 * C118) * C50970 +
             ((C8244 + C8243) * C50836 + (C8242 + C8241) * C118) * C33864) *
                C50758 +
            ((C14184 * C50836 + C14183 * C118) * C50970 +
             ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C33864) *
                C51022) *
               C630 -
           ((((C8203 * C4246 + C50942 * C4247 + C8202 * C885 + C51050 * C894) *
                  C50836 +
              (C8203 * C4244 + C50942 * C4245 + C8202 * C870 + C51050 * C884) *
                  C118) *
                 C50970 +
             ((C8814 + C8813) * C50836 + (C8812 + C8811) * C118) * C33864) *
                C50758 +
            (((C14398 + C14397) * C50836 + (C14396 + C14395) * C118) * C50970 +
             ((C8810 + C8809) * C50836 + (C8808 + C8807) * C118) * C33864) *
                C51022) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C118 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C50836) *
                C33864 +
            ((C14190 + C14189) * C118 + (C14192 + C14191) * C50836) * C50970) *
               C51022 +
           (((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C33864 +
            (C14185 * C118 + C14186 * C50836) * C50970) *
               C50758) *
              C50806 * C113 -
          (((C8639 * C50836 + C8638 * C118) * C50970 +
            ((C8244 + C8243) * C50836 + (C8242 + C8241) * C118) * C33864) *
               C50758 +
           ((C14184 * C50836 + C14183 * C118) * C50970 +
            ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C33864) *
               C51022) *
              C50806 * C114 +
          ((C8261 * C33864 + (C14187 * C118 + C14188 * C50836) * C50970) *
               C51022 +
           (((C8248 + C8247) * C118 + (C8246 + C8245) * C50836) * C33864 +
            ((C8634 + C8635) * C118 + (C8636 + C8637) * C50836) * C50970) *
               C50758) *
              C50806 * C115 -
          ((((C8203 * C1598 + C50942 * C1599 + C8202 * C475 + C51050 * C482) *
                 C50836 +
             (C8203 * C1596 + C50942 * C1597 + C8202 * C464 + C51050 * C474) *
                 C118) *
                C50970 +
            ((C8252 + C8251) * C50836 + (C8250 + C8249) * C118) * C33864) *
               C50758 +
           (((C8637 + C8636) * C50836 + (C8635 + C8634) * C118) * C50970 +
            C8262 * C33864) *
               C51022) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C997 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C994 -
             (C14189 + C14190) * C998 - (C14191 + C14192) * C995 +
             (C14961 + C14962) * C999 + (C14963 + C14964) * C996) *
                C33864 +
            ((C14190 + C14189) * C997 + (C14192 + C14191) * C994 -
             (C14962 + C14961) * C998 - (C14964 + C14963) * C995 +
             (C15326 + C15325) * C999 + (C15328 + C15327) * C996) *
                C50970) *
               C51022 +
           (((C8237 + C8238) * C997 + (C8239 + C8240) * C994 - C14183 * C998 -
             C14184 * C995 + C14949 * C999 + C14950 * C996) *
                C33864 +
            (C14185 * C997 + C14186 * C994 - C14951 * C998 - C14952 * C995 +
             (C14965 + C14966) * C999 + (C14967 + C14968) * C996) *
                C50970) *
               C50758) *
              C50806 * C51027 +
          (((C14185 * C998 - ((C8240 + C8239) * C994 + (C8238 + C8237) * C997) +
             C14186 * C995 - C14951 * C999 - C14952 * C996) *
                C33864 +
            (C14949 * C998 - (C14184 * C994 + C14183 * C997) + C14950 * C995 -
             (C14966 + C14965) * C999 - (C14968 + C14967) * C996) *
                C50970) *
               C51022 +
           ((C14187 * C998 - ((C8244 + C8243) * C994 + (C8242 + C8241) * C997) +
             C14188 * C995 - (C9226 + C9225) * C999 - (C9228 + C9227) * C996) *
                C33864 +
            ((C9225 + C9226) * C998 - (C8639 * C994 + C8638 * C997) +
             (C9227 + C9228) * C995 -
             (C8203 * C7079 + C50942 * C7080 + C8202 * C1246 + C51050 * C1252) *
                 C999 -
             (C8203 * C7081 + C50942 * C7082 + C8202 * C1253 + C51050 * C1258) *
                 C996) *
                C50970) *
               C50758) *
              C50806 * C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C118 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C50836) *
                C33864 +
            ((C14190 + C14189) * C118 + (C14192 + C14191) * C50836) * C50970) *
               C51022 +
           (((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C33864 +
            (C14185 * C118 + C14186 * C50836) * C50970) *
               C50758) *
              C745 -
          (((C15977 * C50836 + C15978 * C118) * C50970 +
            ((C8439 + C8440) * C50836 + (C8441 + C8442) * C118) * C33864) *
               C50758 +
           (((C14742 + C14741) * C50836 + (C14740 + C14739) * C118) * C50970 +
            ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                 C50836 +
             (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                 C118) *
                C33864) *
               C51022) *
              C746 +
          ((((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                 C118 +
             (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                 C50836) *
                C33864 +
            ((C14744 + C14743) * C118 + (C14746 + C14745) * C50836) * C50970) *
               C51022 +
           (((C8807 + C8808) * C118 + (C8809 + C8810) * C50836) * C33864 +
            ((C14395 + C14396) * C118 + (C14397 + C14398) * C50836) * C50970) *
               C50758) *
              C747 -
          ((((C8203 * C3309 + C50942 * C3313 + C8202 * C3305 + C51050 * C3311) *
                 C50836 +
             (C8203 * C3301 + C50942 * C3308 + C8202 * C3299 + C51050 * C3304) *
                 C118) *
                C50970 +
            ((C8203 * C3022 + C50942 * C3026 + C8202 * C758 + C51050 * C764) *
                 C50836 +
             (C8203 * C3017 + C50942 * C3021 + C8202 * C752 + C51050 * C759) *
                 C118) *
                C33864) *
               C50758 +
           (((C8203 * C3307 + C50942 * C3312 + C8202 * C3303 + C51050 * C3310) *
                 C50836 +
             (C8203 * C3300 + C50942 * C3306 + C8202 * C3298 + C51050 * C3302) *
                 C118) *
                C50970 +
            ((C8203 * C3020 + C50942 * C3025 + C8202 * C760 + C51050 * C765) *
                 C50836 +
             (C8203 * C3016 + C50942 * C3019 + C8202 * C753 + C51050 * C761) *
                 C118) *
                C33864) *
               C51022) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                  C118 +
              (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                  C50836) *
                 C33864 +
             ((C14190 + C14189) * C118 + (C14192 + C14191) * C50836) * C50970) *
                C51022 +
            (((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C33864 +
             (C14185 * C118 + C14186 * C50836) * C50970) *
                C50758) *
               C51034 -
           (((C15977 * C50836 + C15978 * C118) * C50970 +
             ((C8439 + C8440) * C50836 + (C8441 + C8442) * C118) * C33864) *
                C50758 +
            (((C14742 + C14741) * C50836 + (C14740 + C14739) * C118) * C50970 +
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C50836 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C118) *
                 C33864) *
                C51022) *
               C50822) *
              C295 +
          (((((C8442 + C8441) * C118 + (C8440 + C8439) * C50836) * C33864 +
             (C15975 * C118 + C15976 * C50836) * C50970) *
                C51022 +
            (((C8438 + C8437) * C118 + (C8436 + C8435) * C50836) * C33864 +
             ((C9979 + C9980) * C118 + (C9981 + C9982) * C50836) * C50970) *
                C50758) *
               C50822 -
           (((C8639 * C50836 + C8638 * C118) * C50970 +
             ((C8244 + C8243) * C50836 + (C8242 + C8241) * C118) * C33864) *
                C50758 +
            ((C14184 * C50836 + C14183 * C118) * C50970 +
             ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C33864) *
                C51022) *
               C51034) *
              C296 +
          (((C8261 * C33864 + (C14187 * C118 + C14188 * C50836) * C50970) *
                C51022 +
            (((C8248 + C8247) * C118 + (C8246 + C8245) * C50836) * C33864 +
             ((C8634 + C8635) * C118 + (C8636 + C8637) * C50836) * C50970) *
                C50758) *
               C51034 -
           ((((C8203 * C887 + C50942 * C895 + C8202 * C879 + C51050 * C891) *
                  C50836 +
              (C8203 * C871 + C50942 * C886 + C8202 * C867 + C51050 * C878) *
                  C118) *
                 C50970 +
             ((C8446 + C8445) * C50836 + (C8444 + C8443) * C118) * C33864) *
                C50758 +
            (((C9982 + C9981) * C50836 + (C9980 + C9979) * C118) * C50970 +
             C8451 * C33864) *
                C51022) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C997 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C994 -
             (C14189 + C14190) * C998 - (C14191 + C14192) * C995 +
             (C14961 + C14962) * C999 + (C14963 + C14964) * C996) *
                C33864 +
            ((C14190 + C14189) * C997 + (C14192 + C14191) * C994 -
             (C14962 + C14961) * C998 - (C14964 + C14963) * C995 +
             (C15326 + C15325) * C999 + (C15328 + C15327) * C996) *
                C50970) *
               C51022 +
           (((C8237 + C8238) * C997 + (C8239 + C8240) * C994 - C14183 * C998 -
             C14184 * C995 + C14949 * C999 + C14950 * C996) *
                C33864 +
            (C14185 * C997 + C14186 * C994 - C14951 * C998 - C14952 * C995 +
             (C14965 + C14966) * C999 + (C14967 + C14968) * C996) *
                C50970) *
               C50758) *
              C51034 +
          ((((C14739 + C14740) * C998 -
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C994 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C997) +
             (C14741 + C14742) * C995 - (C15179 + C15180) * C999 -
             (C15181 + C15182) * C996) *
                C33864 +
            ((C15180 + C15179) * C998 -
             ((C14742 + C14741) * C994 + (C14740 + C14739) * C997) +
             (C15182 + C15181) * C995 -
             (C8203 * C3742 + C50942 * C3746 + C8202 * C3743 + C51050 * C3747) *
                 C999 -
             (C8203 * C3748 + C50942 * C3754 + C8202 * C3749 + C51050 * C3755) *
                 C996) *
                C50970) *
               C51022 +
           ((C15975 * C998 - ((C8439 + C8440) * C994 + (C8441 + C8442) * C997) +
             C15976 * C995 - (C15183 + C15184) * C999 -
             (C15185 + C15186) * C996) *
                C33864 +
            ((C15184 + C15183) * C998 - (C15977 * C994 + C15978 * C997) +
             (C15186 + C15185) * C995 -
             (C8203 * C3744 + C50942 * C3750 + C8202 * C3745 + C51050 * C3751) *
                 C999 -
             (C8203 * C3752 + C50942 * C3756 + C8202 * C3753 + C51050 * C3757) *
                 C996) *
                C50970) *
               C50758) *
              C50822) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C458 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C51036 -
             (C14189 + C14190) * C459 - (C14191 + C14192) * C50848) *
                C33864 +
            ((C14190 + C14189) * C458 + (C14192 + C14191) * C51036 -
             (C14962 + C14961) * C459 - (C14964 + C14963) * C50848) *
                C50970) *
               C51022 +
           (((C8237 + C8238) * C458 + (C8239 + C8240) * C51036 - C14183 * C459 -
             C14184 * C50848) *
                C33864 +
            (C14185 * C458 + C14186 * C51036 - C14951 * C459 -
             C14952 * C50848) *
                C50970) *
               C50758) *
              C630 +
          ((((C14739 + C14740) * C459 -
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C51036 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C458) +
             (C14741 + C14742) * C50848) *
                C33864 +
            ((C15180 + C15179) * C459 -
             ((C14742 + C14741) * C51036 + (C14740 + C14739) * C458) +
             (C15182 + C15181) * C50848) *
                C50970) *
               C51022 +
           ((C15975 * C459 -
             ((C8439 + C8440) * C51036 + (C8441 + C8442) * C458) +
             C15976 * C50848) *
                C33864 +
            ((C15184 + C15183) * C459 - (C15977 * C51036 + C15978 * C458) +
             (C15186 + C15185) * C50848) *
                C50970) *
               C50758) *
              C631 +
          ((((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                 C458 +
             (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                 C51036 -
             (C14743 + C14744) * C459 - (C14745 + C14746) * C50848) *
                C33864 +
            ((C14744 + C14743) * C458 + (C14746 + C14745) * C51036 -
             (C8203 * C3636 + C50942 * C3638 + C8202 * C3460 + C51050 * C3463) *
                 C459 -
             (C8203 * C3639 + C50942 * C3642 + C8202 * C3464 + C51050 * C3469) *
                 C50848) *
                C50970) *
               C51022 +
           (((C8807 + C8808) * C458 + (C8809 + C8810) * C51036 -
             (C14396 + C14395) * C459 - (C14398 + C14397) * C50848) *
                C33864 +
            ((C14395 + C14396) * C458 + (C14397 + C14398) * C51036 -
             (C8203 * C3637 + C50942 * C3640 + C8202 * C3461 + C51050 * C3465) *
                 C459 -
             (C8203 * C3641 + C50942 * C3643 + C8202 * C3466 + C51050 * C3470) *
                 C50848) *
                C50970) *
               C50758) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C458 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C51036 -
             (C14189 + C14190) * C459 - (C14191 + C14192) * C50848) *
                C33864 +
            ((C14190 + C14189) * C458 + (C14192 + C14191) * C51036 -
             (C14962 + C14961) * C459 - (C14964 + C14963) * C50848) *
                C50970) *
               C51022 +
           (((C8237 + C8238) * C458 + (C8239 + C8240) * C51036 - C14183 * C459 -
             C14184 * C50848) *
                C33864 +
            (C14185 * C458 + C14186 * C51036 - C14951 * C459 -
             C14952 * C50848) *
                C50970) *
               C50758) *
              C50806 * C295 +
          (((C14185 * C459 -
             ((C8240 + C8239) * C51036 + (C8238 + C8237) * C458) +
             C14186 * C50848) *
                C33864 +
            (C14949 * C459 - (C14184 * C51036 + C14183 * C458) +
             C14950 * C50848) *
                C50970) *
               C51022 +
           ((C14187 * C459 -
             ((C8244 + C8243) * C51036 + (C8242 + C8241) * C458) +
             C14188 * C50848) *
                C33864 +
            ((C9225 + C9226) * C459 - (C8639 * C51036 + C8638 * C458) +
             (C9227 + C9228) * C50848) *
                C50970) *
               C50758) *
              C50806 * C296 +
          ((C8643 * C33864 +
            (C14187 * C458 + C14188 * C51036 - (C9226 + C9225) * C459 -
             (C9228 + C9227) * C50848) *
                C50970) *
               C51022 +
           (((C8248 + C8247) * C458 + (C8246 + C8245) * C51036 -
             (C8635 + C8634) * C459 - (C8637 + C8636) * C50848) *
                C33864 +
            ((C8634 + C8635) * C458 + (C8636 + C8637) * C51036 -
             (C8203 * C1157 + C50942 * C1164 + C8202 * C1003 + C51050 * C1011) *
                 C459 -
             (C8203 * C1165 + C50942 * C1169 + C8202 * C1012 + C51050 * C1018) *
                 C50848) *
                C50970) *
               C50758) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C1240 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C1236 -
            (C14189 + C14190) * C1241 - (C14191 + C14192) * C1237 +
            (C14961 + C14962) * C1242 + (C14963 + C14964) * C1238 -
            (C15325 + C15326) * C1243 - (C15327 + C15328) * C1239) *
               C33864 +
           ((C14190 + C14189) * C1240 + (C14192 + C14191) * C1236 -
            (C14962 + C14961) * C1241 - (C14964 + C14963) * C1237 +
            (C15326 + C15325) * C1242 + (C15328 + C15327) * C1238 -
            (C8203 * C6461 + C50942 * C6463 + C8202 * C6279 + C51050 * C6282) *
                C1243 -
            (C8203 * C6464 + C50942 * C6467 + C8202 * C6283 + C51050 * C6288) *
                C1239) *
               C50970) *
              C51022 +
          (((C8237 + C8238) * C1240 + (C8239 + C8240) * C1236 - C14183 * C1241 -
            C14184 * C1237 + C14949 * C1242 + C14950 * C1238 -
            (C14966 + C14965) * C1243 - (C14968 + C14967) * C1239) *
               C33864 +
           (C14185 * C1240 + C14186 * C1236 - C14951 * C1241 - C14952 * C1237 +
            (C14965 + C14966) * C1242 + (C14967 + C14968) * C1238 -
            (C8203 * C6462 + C50942 * C6465 + C8202 * C6280 + C51050 * C6284) *
                C1243 -
            (C8203 * C6466 + C50942 * C6468 + C8202 * C6285 + C51050 * C6289) *
                C1239) *
               C50970) *
              C50758) *
         C50806 * C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C1730 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C1728 -
             (C14189 + C14190) * C1731 - (C14191 + C14192) * C50848) *
                C33864 +
            ((C14190 + C14189) * C1730 + (C14192 + C14191) * C1728 -
             (C14962 + C14961) * C1731 - (C14964 + C14963) * C50848) *
                C50970) *
               C51022 +
           (((C8237 + C8238) * C1730 + (C8239 + C8240) * C1728 -
             C14183 * C1731 - C14184 * C50848) *
                C33864 +
            (C14185 * C1730 + C14186 * C1728 - C14951 * C1731 -
             C14952 * C50848) *
                C50970) *
               C50758) *
              C50806 * C51080 +
          (((C14185 * C1731 -
             ((C8240 + C8239) * C1728 + (C8238 + C8237) * C1730) +
             C14186 * C50848) *
                C33864 +
            (C14949 * C1731 - (C14184 * C1728 + C14183 * C1730) +
             C14950 * C50848) *
                C50970) *
               C51022 +
           ((C14187 * C1731 -
             ((C8244 + C8243) * C1728 + (C8242 + C8241) * C1730) +
             C14188 * C50848) *
                C33864 +
            ((C9225 + C9226) * C1731 - (C8639 * C1728 + C8638 * C1730) +
             (C9227 + C9228) * C50848) *
                C50970) *
               C50758) *
              C50806 * C51065 +
          ((C10135 * C33864 +
            (C14187 * C1730 + C14188 * C1728 - (C9226 + C9225) * C1731 -
             (C9228 + C9227) * C50848) *
                C50970) *
               C51022 +
           (((C8248 + C8247) * C1730 + (C8246 + C8245) * C1728 -
             (C8635 + C8634) * C1731 - (C8637 + C8636) * C50848) *
                C33864 +
            ((C8634 + C8635) * C1730 + (C8636 + C8637) * C1728 -
             (C8203 * C1157 + C50942 * C1164 + C8202 * C1003 + C51050 * C1011) *
                 C1731 -
             (C8203 * C1165 + C50942 * C1169 + C8202 * C1012 + C51050 * C1018) *
                 C50848) *
                C50970) *
               C50758) *
              C50806 * C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                  C1730 +
              (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                  C1728 -
              (C14189 + C14190) * C1731 - (C14191 + C14192) * C50848) *
                 C33864 +
             ((C14190 + C14189) * C1730 + (C14192 + C14191) * C1728 -
              (C14962 + C14961) * C1731 - (C14964 + C14963) * C50848) *
                 C50970) *
                C51022 +
            (((C8237 + C8238) * C1730 + (C8239 + C8240) * C1728 -
              C14183 * C1731 - C14184 * C50848) *
                 C33864 +
             (C14185 * C1730 + C14186 * C1728 - C14951 * C1731 -
              C14952 * C50848) *
                 C50970) *
                C50758) *
               C51034 +
           ((((C14739 + C14740) * C1731 -
              ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                   C1728 +
               (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                   C1730) +
              (C14741 + C14742) * C50848) *
                 C33864 +
             ((C15180 + C15179) * C1731 -
              ((C14742 + C14741) * C1728 + (C14740 + C14739) * C1730) +
              (C15182 + C15181) * C50848) *
                 C50970) *
                C51022 +
            ((C15975 * C1731 -
              ((C8439 + C8440) * C1728 + (C8441 + C8442) * C1730) +
              C15976 * C50848) *
                 C33864 +
             ((C15184 + C15183) * C1731 - (C15977 * C1728 + C15978 * C1730) +
              (C15186 + C15185) * C50848) *
                 C50970) *
                C50758) *
               C50822) *
              C1464 +
          ((((C14185 * C1731 -
              ((C8240 + C8239) * C1728 + (C8238 + C8237) * C1730) +
              C14186 * C50848) *
                 C33864 +
             (C14949 * C1731 - (C14184 * C1728 + C14183 * C1730) +
              C14950 * C50848) *
                 C50970) *
                C51022 +
            ((C14187 * C1731 -
              ((C8244 + C8243) * C1728 + (C8242 + C8241) * C1730) +
              C14188 * C50848) *
                 C33864 +
             ((C9225 + C9226) * C1731 - (C8639 * C1728 + C8638 * C1730) +
              (C9227 + C9228) * C50848) *
                 C50970) *
                C50758) *
               C51034 +
           ((((C8442 + C8441) * C1730 + (C8440 + C8439) * C1728 -
              C15978 * C1731 - C15977 * C50848) *
                 C33864 +
             (C15975 * C1730 + C15976 * C1728 - (C15183 + C15184) * C1731 -
              (C15185 + C15186) * C50848) *
                 C50970) *
                C51022 +
            (((C8438 + C8437) * C1730 + (C8436 + C8435) * C1728 -
              (C9980 + C9979) * C1731 - (C9982 + C9981) * C50848) *
                 C33864 +
             ((C9979 + C9980) * C1730 + (C9981 + C9982) * C1728 -
              (C8203 * C3462 + C50942 * C3467 + C8202 * C1156 +
               C51050 * C1162) *
                  C1731 -
              (C8203 * C3468 + C50942 * C3471 + C8202 * C1163 +
               C51050 * C1168) *
                  C50848) *
                 C50970) *
                C50758) *
               C50822) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C1999 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C51082 -
             (C14189 + C14190) * C2000 - (C14191 + C14192) * C51071 +
             (C14961 + C14962) * C2001 + (C14963 + C14964) * C1998) *
                C33864 +
            ((C14190 + C14189) * C1999 + (C14192 + C14191) * C51082 -
             (C14962 + C14961) * C2000 - (C14964 + C14963) * C51071 +
             (C15326 + C15325) * C2001 + (C15328 + C15327) * C1998) *
                C50970) *
               C51022 +
           (((C8237 + C8238) * C1999 + (C8239 + C8240) * C51082 -
             C14183 * C2000 - C14184 * C51071 + C14949 * C2001 +
             C14950 * C1998) *
                C33864 +
            (C14185 * C1999 + C14186 * C51082 - C14951 * C2000 -
             C14952 * C51071 + (C14965 + C14966) * C2001 +
             (C14967 + C14968) * C1998) *
                C50970) *
               C50758) *
              C50806 * C1464 +
          (((C14185 * C2000 -
             ((C8240 + C8239) * C51082 + (C8238 + C8237) * C1999) +
             C14186 * C51071 - C14951 * C2001 - C14952 * C1998) *
                C33864 +
            (C14949 * C2000 - (C14184 * C51082 + C14183 * C1999) +
             C14950 * C51071 - (C14966 + C14965) * C2001 -
             (C14968 + C14967) * C1998) *
                C50970) *
               C51022 +
           ((C14187 * C2000 -
             ((C8244 + C8243) * C51082 + (C8242 + C8241) * C1999) +
             C14188 * C51071 - (C9226 + C9225) * C2001 -
             (C9228 + C9227) * C1998) *
                C33864 +
            ((C9225 + C9226) * C2000 - (C8639 * C51082 + C8638 * C1999) +
             (C9227 + C9228) * C51071 -
             (C8203 * C7079 + C50942 * C7080 + C8202 * C1246 + C51050 * C1252) *
                 C2001 -
             (C8203 * C7081 + C50942 * C7082 + C8202 * C1253 + C51050 * C1258) *
                 C1998) *
                C50970) *
               C50758) *
              C50806 * C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C118 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C50836) *
                C33864 +
            ((C14190 + C14189) * C118 + (C14192 + C14191) * C50836) * C50970) *
               C51022 +
           (((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C33864 +
            (C14185 * C118 + C14186 * C50836) * C50970) *
               C50758) *
              C50806 * C113 -
          (((C8639 * C50836 + C8638 * C118) * C50970 +
            ((C8244 + C8243) * C50836 + (C8242 + C8241) * C118) * C33864) *
               C50758 +
           ((C14184 * C50836 + C14183 * C118) * C50970 +
            ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C33864) *
               C51022) *
              C50806 * C114 +
          ((C8261 * C33864 + (C14187 * C118 + C14188 * C50836) * C50970) *
               C51022 +
           (((C8248 + C8247) * C118 + (C8246 + C8245) * C50836) * C33864 +
            ((C8634 + C8635) * C118 + (C8636 + C8637) * C50836) * C50970) *
               C50758) *
              C50806 * C115 -
          ((((C8203 * C1598 + C50942 * C1599 + C8202 * C475 + C51050 * C482) *
                 C50836 +
             (C8203 * C1596 + C50942 * C1597 + C8202 * C464 + C51050 * C474) *
                 C118) *
                C50970 +
            ((C8252 + C8251) * C50836 + (C8250 + C8249) * C118) * C33864) *
               C50758 +
           (((C8637 + C8636) * C50836 + (C8635 + C8634) * C118) * C50970 +
            C8262 * C33864) *
               C51022) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                  C118 +
              (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                  C50836) *
                 C33864 +
             ((C14190 + C14189) * C118 + (C14192 + C14191) * C50836) * C50970) *
                C51022 +
            (((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C33864 +
             (C14185 * C118 + C14186 * C50836) * C50970) *
                C50758) *
               C630 -
           (((C15977 * C50836 + C15978 * C118) * C50970 +
             ((C8439 + C8440) * C50836 + (C8441 + C8442) * C118) * C33864) *
                C50758 +
            (((C14742 + C14741) * C50836 + (C14740 + C14739) * C118) * C50970 +
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C50836 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C118) *
                 C33864) *
                C51022) *
               C631 +
           ((((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                  C118 +
              (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                  C50836) *
                 C33864 +
             ((C14744 + C14743) * C118 + (C14746 + C14745) * C50836) * C50970) *
                C51022 +
            (((C8807 + C8808) * C118 + (C8809 + C8810) * C50836) * C33864 +
             ((C14395 + C14396) * C118 + (C14397 + C14398) * C50836) * C50970) *
                C50758) *
               C632) *
              C51027 +
          (((((C8442 + C8441) * C118 + (C8440 + C8439) * C50836) * C33864 +
             (C15975 * C118 + C15976 * C50836) * C50970) *
                C51022 +
            (((C8438 + C8437) * C118 + (C8436 + C8435) * C50836) * C33864 +
             ((C9979 + C9980) * C118 + (C9981 + C9982) * C50836) * C50970) *
                C50758) *
               C631 -
           (((C8639 * C50836 + C8638 * C118) * C50970 +
             ((C8244 + C8243) * C50836 + (C8242 + C8241) * C118) * C33864) *
                C50758 +
            ((C14184 * C50836 + C14183 * C118) * C50970 +
             ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C33864) *
                C51022) *
               C630 -
           ((((C8203 * C4246 + C50942 * C4247 + C8202 * C885 + C51050 * C894) *
                  C50836 +
              (C8203 * C4244 + C50942 * C4245 + C8202 * C870 + C51050 * C884) *
                  C118) *
                 C50970 +
             ((C8814 + C8813) * C50836 + (C8812 + C8811) * C118) * C33864) *
                C50758 +
            (((C14398 + C14397) * C50836 + (C14396 + C14395) * C118) * C50970 +
             ((C8810 + C8809) * C50836 + (C8808 + C8807) * C118) * C33864) *
                C51022) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                  C118 +
              (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                  C50836) *
                 C33864 +
             ((C14190 + C14189) * C118 + (C14192 + C14191) * C50836) * C50970) *
                C51022 +
            (((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C33864 +
             (C14185 * C118 + C14186 * C50836) * C50970) *
                C50758) *
               C51034 -
           (((C15977 * C50836 + C15978 * C118) * C50970 +
             ((C8439 + C8440) * C50836 + (C8441 + C8442) * C118) * C33864) *
                C50758 +
            (((C14742 + C14741) * C50836 + (C14740 + C14739) * C118) * C50970 +
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C50836 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C118) *
                 C33864) *
                C51022) *
               C50822) *
              C295 +
          (((((C8442 + C8441) * C118 + (C8440 + C8439) * C50836) * C33864 +
             (C15975 * C118 + C15976 * C50836) * C50970) *
                C51022 +
            (((C8438 + C8437) * C118 + (C8436 + C8435) * C50836) * C33864 +
             ((C9979 + C9980) * C118 + (C9981 + C9982) * C50836) * C50970) *
                C50758) *
               C50822 -
           (((C8639 * C50836 + C8638 * C118) * C50970 +
             ((C8244 + C8243) * C50836 + (C8242 + C8241) * C118) * C33864) *
                C50758 +
            ((C14184 * C50836 + C14183 * C118) * C50970 +
             ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C33864) *
                C51022) *
               C51034) *
              C296 +
          (((C8261 * C33864 + (C14187 * C118 + C14188 * C50836) * C50970) *
                C51022 +
            (((C8248 + C8247) * C118 + (C8246 + C8245) * C50836) * C33864 +
             ((C8634 + C8635) * C118 + (C8636 + C8637) * C50836) * C50970) *
                C50758) *
               C51034 -
           ((((C8203 * C887 + C50942 * C895 + C8202 * C879 + C51050 * C891) *
                  C50836 +
              (C8203 * C871 + C50942 * C886 + C8202 * C867 + C51050 * C878) *
                  C118) *
                 C50970 +
             ((C8446 + C8445) * C50836 + (C8444 + C8443) * C118) * C33864) *
                C50758 +
            (((C9982 + C9981) * C50836 + (C9980 + C9979) * C118) * C50970 +
             C8451 * C33864) *
                C51022) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C118 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C50836) *
                C33864 +
            ((C14190 + C14189) * C118 + (C14192 + C14191) * C50836) * C50970) *
               C51022 +
           (((C8237 + C8238) * C118 + (C8239 + C8240) * C50836) * C33864 +
            (C14185 * C118 + C14186 * C50836) * C50970) *
               C50758) *
              C745 -
          (((C15977 * C50836 + C15978 * C118) * C50970 +
            ((C8439 + C8440) * C50836 + (C8441 + C8442) * C118) * C33864) *
               C50758 +
           (((C14742 + C14741) * C50836 + (C14740 + C14739) * C118) * C50970 +
            ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                 C50836 +
             (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                 C118) *
                C33864) *
               C51022) *
              C746 +
          ((((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                 C118 +
             (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                 C50836) *
                C33864 +
            ((C14744 + C14743) * C118 + (C14746 + C14745) * C50836) * C50970) *
               C51022 +
           (((C8807 + C8808) * C118 + (C8809 + C8810) * C50836) * C33864 +
            ((C14395 + C14396) * C118 + (C14397 + C14398) * C50836) * C50970) *
               C50758) *
              C747 -
          ((((C8203 * C3309 + C50942 * C3313 + C8202 * C3305 + C51050 * C3311) *
                 C50836 +
             (C8203 * C3301 + C50942 * C3308 + C8202 * C3299 + C51050 * C3304) *
                 C118) *
                C50970 +
            ((C8203 * C3022 + C50942 * C3026 + C8202 * C758 + C51050 * C764) *
                 C50836 +
             (C8203 * C3017 + C50942 * C3021 + C8202 * C752 + C51050 * C759) *
                 C118) *
                C33864) *
               C50758 +
           (((C8203 * C3307 + C50942 * C3312 + C8202 * C3303 + C51050 * C3310) *
                 C50836 +
             (C8203 * C3300 + C50942 * C3306 + C8202 * C3298 + C51050 * C3302) *
                 C118) *
                C50970 +
            ((C8203 * C3020 + C50942 * C3025 + C8202 * C760 + C51050 * C765) *
                 C50836 +
             (C8203 * C3016 + C50942 * C3019 + C8202 * C753 + C51050 * C761) *
                 C118) *
                C33864) *
               C51022) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C458 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C51036 -
             (C14189 + C14190) * C459 - (C14191 + C14192) * C50848) *
                C33864 +
            ((C14190 + C14189) * C458 + (C14192 + C14191) * C51036 -
             (C14962 + C14961) * C459 - (C14964 + C14963) * C50848) *
                C50970) *
               C51022 +
           (((C8237 + C8238) * C458 + (C8239 + C8240) * C51036 - C14183 * C459 -
             C14184 * C50848) *
                C33864 +
            (C14185 * C458 + C14186 * C51036 - C14951 * C459 -
             C14952 * C50848) *
                C50970) *
               C50758) *
              C50806 * C295 +
          (((C14185 * C459 -
             ((C8240 + C8239) * C51036 + (C8238 + C8237) * C458) +
             C14186 * C50848) *
                C33864 +
            (C14949 * C459 - (C14184 * C51036 + C14183 * C458) +
             C14950 * C50848) *
                C50970) *
               C51022 +
           ((C14187 * C459 -
             ((C8244 + C8243) * C51036 + (C8242 + C8241) * C458) +
             C14188 * C50848) *
                C33864 +
            ((C9225 + C9226) * C459 - (C8639 * C51036 + C8638 * C458) +
             (C9227 + C9228) * C50848) *
                C50970) *
               C50758) *
              C50806 * C296 +
          ((C8643 * C33864 +
            (C14187 * C458 + C14188 * C51036 - (C9226 + C9225) * C459 -
             (C9228 + C9227) * C50848) *
                C50970) *
               C51022 +
           (((C8248 + C8247) * C458 + (C8246 + C8245) * C51036 -
             (C8635 + C8634) * C459 - (C8637 + C8636) * C50848) *
                C33864 +
            ((C8634 + C8635) * C458 + (C8636 + C8637) * C51036 -
             (C8203 * C1157 + C50942 * C1164 + C8202 * C1003 + C51050 * C1011) *
                 C459 -
             (C8203 * C1165 + C50942 * C1169 + C8202 * C1012 + C51050 * C1018) *
                 C50848) *
                C50970) *
               C50758) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C458 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C51036 -
             (C14189 + C14190) * C459 - (C14191 + C14192) * C50848) *
                C33864 +
            ((C14190 + C14189) * C458 + (C14192 + C14191) * C51036 -
             (C14962 + C14961) * C459 - (C14964 + C14963) * C50848) *
                C50970) *
               C51022 +
           (((C8237 + C8238) * C458 + (C8239 + C8240) * C51036 - C14183 * C459 -
             C14184 * C50848) *
                C33864 +
            (C14185 * C458 + C14186 * C51036 - C14951 * C459 -
             C14952 * C50848) *
                C50970) *
               C50758) *
              C630 +
          ((((C14739 + C14740) * C459 -
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C51036 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C458) +
             (C14741 + C14742) * C50848) *
                C33864 +
            ((C15180 + C15179) * C459 -
             ((C14742 + C14741) * C51036 + (C14740 + C14739) * C458) +
             (C15182 + C15181) * C50848) *
                C50970) *
               C51022 +
           ((C15975 * C459 -
             ((C8439 + C8440) * C51036 + (C8441 + C8442) * C458) +
             C15976 * C50848) *
                C33864 +
            ((C15184 + C15183) * C459 - (C15977 * C51036 + C15978 * C458) +
             (C15186 + C15185) * C50848) *
                C50970) *
               C50758) *
              C631 +
          ((((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                 C458 +
             (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                 C51036 -
             (C14743 + C14744) * C459 - (C14745 + C14746) * C50848) *
                C33864 +
            ((C14744 + C14743) * C458 + (C14746 + C14745) * C51036 -
             (C8203 * C3636 + C50942 * C3638 + C8202 * C3460 + C51050 * C3463) *
                 C459 -
             (C8203 * C3639 + C50942 * C3642 + C8202 * C3464 + C51050 * C3469) *
                 C50848) *
                C50970) *
               C51022 +
           (((C8807 + C8808) * C458 + (C8809 + C8810) * C51036 -
             (C14396 + C14395) * C459 - (C14398 + C14397) * C50848) *
                C33864 +
            ((C14395 + C14396) * C458 + (C14397 + C14398) * C51036 -
             (C8203 * C3637 + C50942 * C3640 + C8202 * C3461 + C51050 * C3465) *
                 C459 -
             (C8203 * C3641 + C50942 * C3643 + C8202 * C3466 + C51050 * C3470) *
                 C50848) *
                C50970) *
               C50758) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C118 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C50836) *
                C51085 +
            ((C14190 + C14189) * C118 + (C14192 + C14191) * C50836) * C51086 +
            (C47999 * C118 + C48000 * C50836) * C44529) *
               C50753 * C1358 -
           ((C48148 * C50836 + C48147 * C118) * C44529 +
            ((C14742 + C14741) * C50836 + (C14740 + C14739) * C118) * C51086 +
            ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                 C50836 +
             (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                 C118) *
                C51085) *
               C50753 * C50822) *
              C51080 +
          ((((C8442 + C8441) * C118 + (C8440 + C8439) * C50836) * C51085 +
            (C15975 * C118 + C15976 * C50836) * C51086 +
            ((C15184 + C15183) * C118 + (C15186 + C15185) * C50836) * C44529) *
               C50753 * C50822 -
           ((C14952 * C50836 + C14951 * C118) * C44529 +
            (C14184 * C50836 + C14183 * C118) * C51086 +
            ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C51085) *
               C50753 * C1358) *
              C51065 +
          ((C8261 * C51085 + (C14187 * C118 + C14188 * C50836) * C51086 +
            ((C9225 + C9226) * C118 + (C9227 + C9228) * C50836) * C44529) *
               C50753 * C1358 -
           (((C8203 * C3468 + C50942 * C3471 + C8202 * C1163 + C51050 * C1168) *
                 C50836 +
             (C8203 * C3462 + C50942 * C3467 + C8202 * C1156 + C51050 * C1162) *
                 C118) *
                C44529 +
            ((C9982 + C9981) * C50836 + (C9980 + C9979) * C118) * C51086 +
            C8451 * C51085) *
               C50753 * C50822) *
              C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C118 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C50836) *
                C51085 +
            ((C14190 + C14189) * C118 + (C14192 + C14191) * C50836) * C51086 +
            (C47999 * C118 + C48000 * C50836) * C44529) *
               C50753 * C51081 -
           ((C48148 * C50836 + C48147 * C118) * C44529 +
            ((C14742 + C14741) * C50836 + (C14740 + C14739) * C118) * C51086 +
            ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                 C50836 +
             (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                 C118) *
                C51085) *
               C50753 * C51068 +
           (((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                 C118 +
             (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                 C50836) *
                C51085 +
            ((C14744 + C14743) * C118 + (C14746 + C14745) * C50836) * C51086 +
            ((C47850 + C47849) * C118 + (C47852 + C47851) * C50836) * C44529) *
               C50753 * C1463) *
              C1464 +
          ((((C8442 + C8441) * C118 + (C8440 + C8439) * C50836) * C51085 +
            (C15975 * C118 + C15976 * C50836) * C51086 +
            ((C15184 + C15183) * C118 + (C15186 + C15185) * C50836) * C44529) *
               C50753 * C51068 -
           ((C14952 * C50836 + C14951 * C118) * C44529 +
            (C14184 * C50836 + C14183 * C118) * C51086 +
            ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C51085) *
               C50753 * C51081 -
           (((C8203 * C3641 + C50942 * C3643 + C8202 * C3466 + C51050 * C3470) *
                 C50836 +
             (C8203 * C3637 + C50942 * C3640 + C8202 * C3461 + C51050 * C3465) *
                 C118) *
                C44529 +
            ((C14398 + C14397) * C50836 + (C14396 + C14395) * C118) * C51086 +
            ((C8810 + C8809) * C50836 + (C8808 + C8807) * C118) * C51085) *
               C50753 * C1463) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C458 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C51036 -
             (C14189 + C14190) * C459 - (C14191 + C14192) * C50848) *
                C51085 +
            ((C14190 + C14189) * C458 + (C14192 + C14191) * C51036 -
             (C14962 + C14961) * C459 - (C14964 + C14963) * C50848) *
                C51086 +
            (C47999 * C458 + C48000 * C51036 - C48259 * C459 -
             C48260 * C50848) *
                C44529) *
               C50753 * C1358 +
           (((C14739 + C14740) * C459 -
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C51036 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C458) +
             (C14741 + C14742) * C50848) *
                C51085 +
            ((C15180 + C15179) * C459 -
             ((C14742 + C14741) * C51036 + (C14740 + C14739) * C458) +
             (C15182 + C15181) * C50848) *
                C51086 +
            ((C48158 + C48157) * C459 - (C48148 * C51036 + C48147 * C458) +
             (C48160 + C48159) * C50848) *
                C44529) *
               C50753 * C50822) *
              C1464 +
          (((C14185 * C459 -
             ((C8240 + C8239) * C51036 + (C8238 + C8237) * C458) +
             C14186 * C50848) *
                C51085 +
            (C14949 * C459 - (C14184 * C51036 + C14183 * C458) +
             C14950 * C50848) *
                C51086 +
            ((C14965 + C14966) * C459 - (C14952 * C51036 + C14951 * C458) +
             (C14967 + C14968) * C50848) *
                C44529) *
               C50753 * C1358 +
           (((C8442 + C8441) * C458 + (C8440 + C8439) * C51036 - C15978 * C459 -
             C15977 * C50848) *
                C51085 +
            (C15975 * C458 + C15976 * C51036 - (C15183 + C15184) * C459 -
             (C15185 + C15186) * C50848) *
                C51086 +
            ((C15184 + C15183) * C458 + (C15186 + C15185) * C51036 -
             (C8203 * C3744 + C50942 * C3750 + C8202 * C3745 + C51050 * C3751) *
                 C459 -
             (C8203 * C3752 + C50942 * C3756 + C8202 * C3753 + C51050 * C3757) *
                 C50848) *
                C44529) *
               C50753 * C50822) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C1730 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C1728 -
             (C14189 + C14190) * C1731 - (C14191 + C14192) * C50848) *
                C51085 +
            ((C14190 + C14189) * C1730 + (C14192 + C14191) * C1728 -
             (C14962 + C14961) * C1731 - (C14964 + C14963) * C50848) *
                C51086 +
            (C47999 * C1730 + C48000 * C1728 - C48259 * C1731 -
             C48260 * C50848) *
                C44529) *
               C50753 * C1358 +
           (((C14739 + C14740) * C1731 -
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C1728 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C1730) +
             (C14741 + C14742) * C50848) *
                C51085 +
            ((C15180 + C15179) * C1731 -
             ((C14742 + C14741) * C1728 + (C14740 + C14739) * C1730) +
             (C15182 + C15181) * C50848) *
                C51086 +
            ((C48158 + C48157) * C1731 - (C48148 * C1728 + C48147 * C1730) +
             (C48160 + C48159) * C50848) *
                C44529) *
               C50753 * C50822) *
              C51027 +
          (((C14185 * C1731 -
             ((C8240 + C8239) * C1728 + (C8238 + C8237) * C1730) +
             C14186 * C50848) *
                C51085 +
            (C14949 * C1731 - (C14184 * C1728 + C14183 * C1730) +
             C14950 * C50848) *
                C51086 +
            ((C14965 + C14966) * C1731 - (C14952 * C1728 + C14951 * C1730) +
             (C14967 + C14968) * C50848) *
                C44529) *
               C50753 * C1358 +
           (((C8442 + C8441) * C1730 + (C8440 + C8439) * C1728 -
             C15978 * C1731 - C15977 * C50848) *
                C51085 +
            (C15975 * C1730 + C15976 * C1728 - (C15183 + C15184) * C1731 -
             (C15185 + C15186) * C50848) *
                C51086 +
            ((C15184 + C15183) * C1730 + (C15186 + C15185) * C1728 -
             (C8203 * C3744 + C50942 * C3750 + C8202 * C3745 + C51050 * C3751) *
                 C1731 -
             (C8203 * C3752 + C50942 * C3756 + C8202 * C3753 + C51050 * C3757) *
                 C50848) *
                C44529) *
               C50753 * C50822) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C1730 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C1728 -
            (C14189 + C14190) * C1731 - (C14191 + C14192) * C50848) *
               C51085 +
           ((C14190 + C14189) * C1730 + (C14192 + C14191) * C1728 -
            (C14962 + C14961) * C1731 - (C14964 + C14963) * C50848) *
               C51086 +
           (C47999 * C1730 + C48000 * C1728 - C48259 * C1731 -
            C48260 * C50848) *
               C44529) *
              C50753 * C51081 +
          (((C14739 + C14740) * C1731 -
            ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                 C1728 +
             (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                 C1730) +
            (C14741 + C14742) * C50848) *
               C51085 +
           ((C15180 + C15179) * C1731 -
            ((C14742 + C14741) * C1728 + (C14740 + C14739) * C1730) +
            (C15182 + C15181) * C50848) *
               C51086 +
           ((C48158 + C48157) * C1731 - (C48148 * C1728 + C48147 * C1730) +
            (C48160 + C48159) * C50848) *
               C44529) *
              C50753 * C51068 +
          (((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                C1730 +
            (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                C1728 -
            (C14743 + C14744) * C1731 - (C14745 + C14746) * C50848) *
               C51085 +
           ((C14744 + C14743) * C1730 + (C14746 + C14745) * C1728 -
            (C47849 + C47850) * C1731 - (C47851 + C47852) * C50848) *
               C51086 +
           ((C47850 + C47849) * C1730 + (C47852 + C47851) * C1728 -
            (C8203 * C20940 + C50942 * C20941 + C8202 * C3742 +
             C51050 * C3746) *
                C1731 -
            (C8203 * C20942 + C50942 * C20943 + C8202 * C3748 +
             C51050 * C3754) *
                C50848) *
               C44529) *
              C50753 * C1463) *
         C50774) /
        (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C1999 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C51082 -
            (C14189 + C14190) * C2000 - (C14191 + C14192) * C51071 +
            C47999 * C2001 + C48000 * C1998) *
               C51085 +
           ((C14190 + C14189) * C1999 + (C14192 + C14191) * C51082 -
            (C14962 + C14961) * C2000 - (C14964 + C14963) * C51071 +
            (C15326 + C15325) * C2001 + (C15328 + C15327) * C1998) *
               C51086 +
           (C47999 * C1999 + C48000 * C51082 - C48259 * C2000 -
            C48260 * C51071 + (C48270 + C48269) * C2001 +
            (C48272 + C48271) * C1998) *
               C44529) *
              C50753 * C1358 +
          (((C14739 + C14740) * C2000 -
            ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                 C51082 +
             (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                 C1999) +
            (C14741 + C14742) * C51071 - C48147 * C2001 - C48148 * C1998) *
               C51085 +
           ((C15180 + C15179) * C2000 -
            ((C14742 + C14741) * C51082 + (C14740 + C14739) * C1999) +
            (C15182 + C15181) * C51071 - (C48157 + C48158) * C2001 -
            (C48159 + C48160) * C1998) *
               C51086 +
           ((C48158 + C48157) * C2000 - (C48148 * C51082 + C48147 * C1999) +
            (C48160 + C48159) * C51071 -
            (C8203 * C23094 + C50942 * C23095 + C8202 * C6461 +
             C51050 * C6463) *
                C2001 -
            (C8203 * C23096 + C50942 * C23097 + C8202 * C6464 +
             C51050 * C6467) *
                C1998) *
               C44529) *
              C50753 * C50822) *
         C50774) /
        (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C118 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C50836) *
                C51085 +
            ((C14190 + C14189) * C118 + (C14192 + C14191) * C50836) * C51086 +
            ((C14961 + C14962) * C118 + (C14963 + C14964) * C50836) * C44529) *
               C50753 * C630 -
           (((C15181 + C15182) * C50836 + (C15179 + C15180) * C118) * C44529 +
            ((C14742 + C14741) * C50836 + (C14740 + C14739) * C118) * C51086 +
            ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                 C50836 +
             (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                 C118) *
                C51085) *
               C50753 * C631 +
           (((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                 C118 +
             (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                 C50836) *
                C51085 +
            ((C14744 + C14743) * C118 + (C14746 + C14745) * C50836) * C51086 +
            ((C8202 * C3460 + C51050 * C3463 + C8203 * C3636 + C50942 * C3638) *
                 C118 +
             (C8202 * C3464 + C51050 * C3469 + C8203 * C3639 + C50942 * C3642) *
                 C50836) *
                C44529) *
               C50753 * C632) *
              C51027 +
          ((((C8442 + C8441) * C118 + (C8440 + C8439) * C50836) * C51085 +
            (C15975 * C118 + C15976 * C50836) * C51086 +
            ((C15184 + C15183) * C118 + (C15186 + C15185) * C50836) * C44529) *
               C50753 * C631 -
           ((C14952 * C50836 + C14951 * C118) * C44529 +
            (C14184 * C50836 + C14183 * C118) * C51086 +
            ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C51085) *
               C50753 * C630 -
           (((C8203 * C3641 + C50942 * C3643 + C8202 * C3466 + C51050 * C3470) *
                 C50836 +
             (C8203 * C3637 + C50942 * C3640 + C8202 * C3461 + C51050 * C3465) *
                 C118) *
                C44529 +
            ((C14398 + C14397) * C50836 + (C14396 + C14395) * C118) * C51086 +
            ((C8810 + C8809) * C50836 + (C8808 + C8807) * C118) * C51085) *
               C50753 * C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C118 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C50836) *
               C51085 +
           ((C14190 + C14189) * C118 + (C14192 + C14191) * C50836) * C51086 +
           ((C14961 + C14962) * C118 + (C14963 + C14964) * C50836) * C44529) *
              C50753 * C50806 * C113 -
          ((C14952 * C50836 + C14951 * C118) * C44529 +
           (C14184 * C50836 + C14183 * C118) * C51086 +
           ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C51085) *
              C50753 * C50806 * C114 +
          (C8261 * C51085 + (C14187 * C118 + C14188 * C50836) * C51086 +
           ((C9225 + C9226) * C118 + (C9227 + C9228) * C50836) * C44529) *
              C50753 * C50806 * C115 -
          (((C8203 * C1165 + C50942 * C1169 + C8202 * C1012 + C51050 * C1018) *
                C50836 +
            (C8203 * C1157 + C50942 * C1164 + C8202 * C1003 + C51050 * C1011) *
                C118) *
               C44529 +
           ((C8637 + C8636) * C50836 + (C8635 + C8634) * C118) * C51086 +
           C8262 * C51085) *
              C50753 * C50806 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C997 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C994 -
            (C14189 + C14190) * C998 - (C14191 + C14192) * C995 +
            C47999 * C999 + C48000 * C996) *
               C51085 +
           ((C14190 + C14189) * C997 + (C14192 + C14191) * C994 -
            (C14962 + C14961) * C998 - (C14964 + C14963) * C995 +
            (C15326 + C15325) * C999 + (C15328 + C15327) * C996) *
               C51086 +
           (C47999 * C997 + C48000 * C994 - (C15325 + C15326) * C998 -
            (C15327 + C15328) * C995 +
            (C8202 * C6279 + C51050 * C6282 + C8203 * C6461 + C50942 * C6463) *
                C999 +
            (C8202 * C6283 + C51050 * C6288 + C8203 * C6464 + C50942 * C6467) *
                C996) *
               C44529) *
              C50753 * C50806 * C51027 +
          ((C14185 * C998 - ((C8240 + C8239) * C994 + (C8238 + C8237) * C997) +
            C14186 * C995 - C14951 * C999 - C14952 * C996) *
               C51085 +
           (C14949 * C998 - (C14184 * C994 + C14183 * C997) + C14950 * C995 -
            (C14966 + C14965) * C999 - (C14968 + C14967) * C996) *
               C51086 +
           ((C14965 + C14966) * C998 - (C14952 * C994 + C14951 * C997) +
            (C14967 + C14968) * C995 -
            (C8203 * C6462 + C50942 * C6465 + C8202 * C6280 + C51050 * C6284) *
                C999 -
            (C8203 * C6466 + C50942 * C6468 + C8202 * C6285 + C51050 * C6289) *
                C996) *
               C44529) *
              C50753 * C50806 * C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C118 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C50836) *
               C51085 +
           ((C14190 + C14189) * C118 + (C14192 + C14191) * C50836) * C51086 +
           ((C14961 + C14962) * C118 + (C14963 + C14964) * C50836) * C44529) *
              C50753 * C745 -
          (((C15181 + C15182) * C50836 + (C15179 + C15180) * C118) * C44529 +
           ((C14742 + C14741) * C50836 + (C14740 + C14739) * C118) * C51086 +
           ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                C50836 +
            (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                C118) *
               C51085) *
              C50753 * C746 +
          (((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                C118 +
            (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                C50836) *
               C51085 +
           ((C14744 + C14743) * C118 + (C14746 + C14745) * C50836) * C51086 +
           ((C8202 * C3460 + C51050 * C3463 + C8203 * C3636 + C50942 * C3638) *
                C118 +
            (C8202 * C3464 + C51050 * C3469 + C8203 * C3639 + C50942 * C3642) *
                C50836) *
               C44529) *
              C50753 * C747 -
          (((C8203 * C20872 + C50942 * C20873 + C8202 * C3639 +
             C51050 * C3642) *
                C50836 +
            (C8203 * C20870 + C50942 * C20871 + C8202 * C3636 +
             C51050 * C3638) *
                C118) *
               C44529 +
           ((C8203 * C3307 + C50942 * C3312 + C8202 * C3303 + C51050 * C3310) *
                C50836 +
            (C8203 * C3300 + C50942 * C3306 + C8202 * C3298 + C51050 * C3302) *
                C118) *
               C51086 +
           ((C8203 * C3020 + C50942 * C3025 + C8202 * C760 + C51050 * C765) *
                C50836 +
            (C8203 * C3016 + C50942 * C3019 + C8202 * C753 + C51050 * C761) *
                C118) *
               C51085) *
              C50753 * C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C118 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C50836) *
                C51085 +
            ((C14190 + C14189) * C118 + (C14192 + C14191) * C50836) * C51086 +
            ((C14961 + C14962) * C118 + (C14963 + C14964) * C50836) * C44529) *
               C50753 * C51034 -
           (((C15181 + C15182) * C50836 + (C15179 + C15180) * C118) * C44529 +
            ((C14742 + C14741) * C50836 + (C14740 + C14739) * C118) * C51086 +
            ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                 C50836 +
             (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                 C118) *
                C51085) *
               C50753 * C50822) *
              C295 +
          ((((C8442 + C8441) * C118 + (C8440 + C8439) * C50836) * C51085 +
            (C15975 * C118 + C15976 * C50836) * C51086 +
            ((C15184 + C15183) * C118 + (C15186 + C15185) * C50836) * C44529) *
               C50753 * C50822 -
           ((C14952 * C50836 + C14951 * C118) * C44529 +
            (C14184 * C50836 + C14183 * C118) * C51086 +
            ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C51085) *
               C50753 * C51034) *
              C296 +
          ((C8261 * C51085 + (C14187 * C118 + C14188 * C50836) * C51086 +
            ((C9225 + C9226) * C118 + (C9227 + C9228) * C50836) * C44529) *
               C50753 * C51034 -
           (((C8203 * C3468 + C50942 * C3471 + C8202 * C1163 + C51050 * C1168) *
                 C50836 +
             (C8203 * C3462 + C50942 * C3467 + C8202 * C1156 + C51050 * C1162) *
                 C118) *
                C44529 +
            ((C9982 + C9981) * C50836 + (C9980 + C9979) * C118) * C51086 +
            C8451 * C51085) *
               C50753 * C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C997 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C994 -
            (C14189 + C14190) * C998 - (C14191 + C14192) * C995 +
            C47999 * C999 + C48000 * C996) *
               C51085 +
           ((C14190 + C14189) * C997 + (C14192 + C14191) * C994 -
            (C14962 + C14961) * C998 - (C14964 + C14963) * C995 +
            (C15326 + C15325) * C999 + (C15328 + C15327) * C996) *
               C51086 +
           (C47999 * C997 + C48000 * C994 - (C15325 + C15326) * C998 -
            (C15327 + C15328) * C995 +
            (C8202 * C6279 + C51050 * C6282 + C8203 * C6461 + C50942 * C6463) *
                C999 +
            (C8202 * C6283 + C51050 * C6288 + C8203 * C6464 + C50942 * C6467) *
                C996) *
               C44529) *
              C50753 * C51034 +
          (((C14739 + C14740) * C998 -
            ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                 C994 +
             (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                 C997) +
            (C14741 + C14742) * C995 - C48147 * C999 - C48148 * C996) *
               C51085 +
           ((C15180 + C15179) * C998 -
            ((C14742 + C14741) * C994 + (C14740 + C14739) * C997) +
            (C15182 + C15181) * C995 - (C48157 + C48158) * C999 -
            (C48159 + C48160) * C996) *
               C51086 +
           ((C48158 + C48157) * C998 - (C48148 * C994 + C48147 * C997) +
            (C48160 + C48159) * C995 -
            (C8203 * C23094 + C50942 * C23095 + C8202 * C6461 +
             C51050 * C6463) *
                C999 -
            (C8203 * C23096 + C50942 * C23097 + C8202 * C6464 +
             C51050 * C6467) *
                C996) *
               C44529) *
              C50753 * C50822) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C458 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C51036 -
            (C14189 + C14190) * C459 - (C14191 + C14192) * C50848) *
               C51085 +
           ((C14190 + C14189) * C458 + (C14192 + C14191) * C51036 -
            (C14962 + C14961) * C459 - (C14964 + C14963) * C50848) *
               C51086 +
           ((C14961 + C14962) * C458 + (C14963 + C14964) * C51036 -
            (C15325 + C15326) * C459 - (C15327 + C15328) * C50848) *
               C44529) *
              C50753 * C630 +
          (((C14739 + C14740) * C459 -
            ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                 C51036 +
             (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                 C458) +
            (C14741 + C14742) * C50848) *
               C51085 +
           ((C15180 + C15179) * C459 -
            ((C14742 + C14741) * C51036 + (C14740 + C14739) * C458) +
            (C15182 + C15181) * C50848) *
               C51086 +
           ((C8202 * C3743 + C51050 * C3747 + C8203 * C3742 + C50942 * C3746) *
                C459 -
            ((C15181 + C15182) * C51036 + (C15179 + C15180) * C458) +
            (C8202 * C3749 + C51050 * C3755 + C8203 * C3748 + C50942 * C3754) *
                C50848) *
               C44529) *
              C50753 * C631 +
          (((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                C458 +
            (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                C51036 -
            (C14743 + C14744) * C459 - (C14745 + C14746) * C50848) *
               C51085 +
           ((C14744 + C14743) * C458 + (C14746 + C14745) * C51036 -
            (C47849 + C47850) * C459 - (C47851 + C47852) * C50848) *
               C51086 +
           ((C47850 + C47849) * C458 + (C47852 + C47851) * C51036 -
            (C8203 * C20940 + C50942 * C20941 + C8202 * C3742 +
             C51050 * C3746) *
                C459 -
            (C8203 * C20942 + C50942 * C20943 + C8202 * C3748 +
             C51050 * C3754) *
                C50848) *
               C44529) *
              C50753 * C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C458 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C51036 -
            (C14189 + C14190) * C459 - (C14191 + C14192) * C50848) *
               C51085 +
           ((C14190 + C14189) * C458 + (C14192 + C14191) * C51036 -
            (C14962 + C14961) * C459 - (C14964 + C14963) * C50848) *
               C51086 +
           ((C14961 + C14962) * C458 + (C14963 + C14964) * C51036 -
            (C15325 + C15326) * C459 - (C15327 + C15328) * C50848) *
               C44529) *
              C50753 * C50806 * C295 +
          ((C14185 * C459 -
            ((C8240 + C8239) * C51036 + (C8238 + C8237) * C458) +
            C14186 * C50848) *
               C51085 +
           (C14949 * C459 - (C14184 * C51036 + C14183 * C458) +
            C14950 * C50848) *
               C51086 +
           ((C14965 + C14966) * C459 - (C14952 * C51036 + C14951 * C458) +
            (C14967 + C14968) * C50848) *
               C44529) *
              C50753 * C50806 * C296 +
          (C8643 * C51085 +
           (C14187 * C458 + C14188 * C51036 - (C9226 + C9225) * C459 -
            (C9228 + C9227) * C50848) *
               C51086 +
           ((C9225 + C9226) * C458 + (C9227 + C9228) * C51036 -
            (C8203 * C7079 + C50942 * C7080 + C8202 * C1246 + C51050 * C1252) *
                C459 -
            (C8203 * C7081 + C50942 * C7082 + C8202 * C1253 + C51050 * C1258) *
                C50848) *
               C44529) *
              C50753 * C50806 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
               C1240 +
           (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
               C1236 -
           (C14189 + C14190) * C1241 - (C14191 + C14192) * C1237 +
           C47999 * C1242 + C48000 * C1238 - C48259 * C1243 - C48260 * C1239) *
              C51085 +
          ((C14190 + C14189) * C1240 + (C14192 + C14191) * C1236 -
           (C14962 + C14961) * C1241 - (C14964 + C14963) * C1237 +
           (C15326 + C15325) * C1242 + (C15328 + C15327) * C1238 -
           (C48269 + C48270) * C1243 - (C48271 + C48272) * C1239) *
              C51086 +
          (C47999 * C1240 + C48000 * C1236 - C48259 * C1241 - C48260 * C1237 +
           (C48270 + C48269) * C1242 + (C48272 + C48271) * C1238 -
           (C8203 * C23210 + C50942 * C23211 + C8202 * C6579 + C51050 * C6581) *
               C1243 -
           (C8203 * C23212 + C50942 * C23213 + C8202 * C6582 + C51050 * C6585) *
               C1239) *
              C44529) *
         C50753 * C50806 * C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C1730 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C1728 -
            (C14189 + C14190) * C1731 - (C14191 + C14192) * C50848) *
               C51085 +
           ((C14190 + C14189) * C1730 + (C14192 + C14191) * C1728 -
            (C14962 + C14961) * C1731 - (C14964 + C14963) * C50848) *
               C51086 +
           (C47999 * C1730 + C48000 * C1728 - C48259 * C1731 -
            C48260 * C50848) *
               C44529) *
              C50753 * C50806 * C51080 +
          ((C14185 * C1731 -
            ((C8240 + C8239) * C1728 + (C8238 + C8237) * C1730) +
            C14186 * C50848) *
               C51085 +
           (C14949 * C1731 - (C14184 * C1728 + C14183 * C1730) +
            C14950 * C50848) *
               C51086 +
           ((C14965 + C14966) * C1731 - (C14952 * C1728 + C14951 * C1730) +
            (C14967 + C14968) * C50848) *
               C44529) *
              C50753 * C50806 * C51065 +
          (C10135 * C51085 +
           (C14187 * C1730 + C14188 * C1728 - (C9226 + C9225) * C1731 -
            (C9228 + C9227) * C50848) *
               C51086 +
           ((C9225 + C9226) * C1730 + (C9227 + C9228) * C1728 -
            (C8203 * C7079 + C50942 * C7080 + C8202 * C1246 + C51050 * C1252) *
                C1731 -
            (C8203 * C7081 + C50942 * C7082 + C8202 * C1253 + C51050 * C1258) *
                C50848) *
               C44529) *
              C50753 * C50806 * C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C1730 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C1728 -
             (C14189 + C14190) * C1731 - (C14191 + C14192) * C50848) *
                C51085 +
            ((C14190 + C14189) * C1730 + (C14192 + C14191) * C1728 -
             (C14962 + C14961) * C1731 - (C14964 + C14963) * C50848) *
                C51086 +
            (C47999 * C1730 + C48000 * C1728 - C48259 * C1731 -
             C48260 * C50848) *
                C44529) *
               C50753 * C51034 +
           (((C14739 + C14740) * C1731 -
             ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                  C1728 +
              (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                  C1730) +
             (C14741 + C14742) * C50848) *
                C51085 +
            ((C15180 + C15179) * C1731 -
             ((C14742 + C14741) * C1728 + (C14740 + C14739) * C1730) +
             (C15182 + C15181) * C50848) *
                C51086 +
            ((C48158 + C48157) * C1731 - (C48148 * C1728 + C48147 * C1730) +
             (C48160 + C48159) * C50848) *
                C44529) *
               C50753 * C50822) *
              C1464 +
          (((C14185 * C1731 -
             ((C8240 + C8239) * C1728 + (C8238 + C8237) * C1730) +
             C14186 * C50848) *
                C51085 +
            (C14949 * C1731 - (C14184 * C1728 + C14183 * C1730) +
             C14950 * C50848) *
                C51086 +
            ((C14965 + C14966) * C1731 - (C14952 * C1728 + C14951 * C1730) +
             (C14967 + C14968) * C50848) *
                C44529) *
               C50753 * C51034 +
           (((C8442 + C8441) * C1730 + (C8440 + C8439) * C1728 -
             C15978 * C1731 - C15977 * C50848) *
                C51085 +
            (C15975 * C1730 + C15976 * C1728 - (C15183 + C15184) * C1731 -
             (C15185 + C15186) * C50848) *
                C51086 +
            ((C15184 + C15183) * C1730 + (C15186 + C15185) * C1728 -
             (C8203 * C3744 + C50942 * C3750 + C8202 * C3745 + C51050 * C3751) *
                 C1731 -
             (C8203 * C3752 + C50942 * C3756 + C8202 * C3753 + C51050 * C3757) *
                 C50848) *
                C44529) *
               C50753 * C50822) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C1999 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C51082 -
            (C14189 + C14190) * C2000 - (C14191 + C14192) * C51071 +
            C47999 * C2001 + C48000 * C1998) *
               C51085 +
           ((C14190 + C14189) * C1999 + (C14192 + C14191) * C51082 -
            (C14962 + C14961) * C2000 - (C14964 + C14963) * C51071 +
            (C15326 + C15325) * C2001 + (C15328 + C15327) * C1998) *
               C51086 +
           (C47999 * C1999 + C48000 * C51082 - C48259 * C2000 -
            C48260 * C51071 + (C48270 + C48269) * C2001 +
            (C48272 + C48271) * C1998) *
               C44529) *
              C50753 * C50806 * C1464 +
          ((C14185 * C2000 -
            ((C8240 + C8239) * C51082 + (C8238 + C8237) * C1999) +
            C14186 * C51071 - C14951 * C2001 - C14952 * C1998) *
               C51085 +
           (C14949 * C2000 - (C14184 * C51082 + C14183 * C1999) +
            C14950 * C51071 - (C14966 + C14965) * C2001 -
            (C14968 + C14967) * C1998) *
               C51086 +
           ((C14965 + C14966) * C2000 - (C14952 * C51082 + C14951 * C1999) +
            (C14967 + C14968) * C51071 -
            (C8203 * C6462 + C50942 * C6465 + C8202 * C6280 + C51050 * C6284) *
                C2001 -
            (C8203 * C6466 + C50942 * C6468 + C8202 * C6285 + C51050 * C6289) *
                C1998) *
               C44529) *
              C50753 * C50806 * C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C118 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C50836) *
               C51085 +
           ((C14190 + C14189) * C118 + (C14192 + C14191) * C50836) * C51086 +
           ((C14961 + C14962) * C118 + (C14963 + C14964) * C50836) * C44529) *
              C50753 * C50806 * C113 -
          ((C14952 * C50836 + C14951 * C118) * C44529 +
           (C14184 * C50836 + C14183 * C118) * C51086 +
           ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C51085) *
              C50753 * C50806 * C114 +
          (C8261 * C51085 + (C14187 * C118 + C14188 * C50836) * C51086 +
           ((C9225 + C9226) * C118 + (C9227 + C9228) * C50836) * C44529) *
              C50753 * C50806 * C115 -
          (((C8203 * C1165 + C50942 * C1169 + C8202 * C1012 + C51050 * C1018) *
                C50836 +
            (C8203 * C1157 + C50942 * C1164 + C8202 * C1003 + C51050 * C1011) *
                C118) *
               C44529 +
           ((C8637 + C8636) * C50836 + (C8635 + C8634) * C118) * C51086 +
           C8262 * C51085) *
              C50753 * C50806 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C118 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C50836) *
                C51085 +
            ((C14190 + C14189) * C118 + (C14192 + C14191) * C50836) * C51086 +
            ((C14961 + C14962) * C118 + (C14963 + C14964) * C50836) * C44529) *
               C50753 * C630 -
           (((C15181 + C15182) * C50836 + (C15179 + C15180) * C118) * C44529 +
            ((C14742 + C14741) * C50836 + (C14740 + C14739) * C118) * C51086 +
            ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                 C50836 +
             (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                 C118) *
                C51085) *
               C50753 * C631 +
           (((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                 C118 +
             (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                 C50836) *
                C51085 +
            ((C14744 + C14743) * C118 + (C14746 + C14745) * C50836) * C51086 +
            ((C8202 * C3460 + C51050 * C3463 + C8203 * C3636 + C50942 * C3638) *
                 C118 +
             (C8202 * C3464 + C51050 * C3469 + C8203 * C3639 + C50942 * C3642) *
                 C50836) *
                C44529) *
               C50753 * C632) *
              C51027 +
          ((((C8442 + C8441) * C118 + (C8440 + C8439) * C50836) * C51085 +
            (C15975 * C118 + C15976 * C50836) * C51086 +
            ((C15184 + C15183) * C118 + (C15186 + C15185) * C50836) * C44529) *
               C50753 * C631 -
           ((C14952 * C50836 + C14951 * C118) * C44529 +
            (C14184 * C50836 + C14183 * C118) * C51086 +
            ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C51085) *
               C50753 * C630 -
           (((C8203 * C3641 + C50942 * C3643 + C8202 * C3466 + C51050 * C3470) *
                 C50836 +
             (C8203 * C3637 + C50942 * C3640 + C8202 * C3461 + C51050 * C3465) *
                 C118) *
                C44529 +
            ((C14398 + C14397) * C50836 + (C14396 + C14395) * C118) * C51086 +
            ((C8810 + C8809) * C50836 + (C8808 + C8807) * C118) * C51085) *
               C50753 * C632) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                 C118 +
             (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                 C50836) *
                C51085 +
            ((C14190 + C14189) * C118 + (C14192 + C14191) * C50836) * C51086 +
            ((C14961 + C14962) * C118 + (C14963 + C14964) * C50836) * C44529) *
               C50753 * C51034 -
           (((C15181 + C15182) * C50836 + (C15179 + C15180) * C118) * C44529 +
            ((C14742 + C14741) * C50836 + (C14740 + C14739) * C118) * C51086 +
            ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                 C50836 +
             (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                 C118) *
                C51085) *
               C50753 * C50822) *
              C295 +
          ((((C8442 + C8441) * C118 + (C8440 + C8439) * C50836) * C51085 +
            (C15975 * C118 + C15976 * C50836) * C51086 +
            ((C15184 + C15183) * C118 + (C15186 + C15185) * C50836) * C44529) *
               C50753 * C50822 -
           ((C14952 * C50836 + C14951 * C118) * C44529 +
            (C14184 * C50836 + C14183 * C118) * C51086 +
            ((C8240 + C8239) * C50836 + (C8238 + C8237) * C118) * C51085) *
               C50753 * C51034) *
              C296 +
          ((C8261 * C51085 + (C14187 * C118 + C14188 * C50836) * C51086 +
            ((C9225 + C9226) * C118 + (C9227 + C9228) * C50836) * C44529) *
               C50753 * C51034 -
           (((C8203 * C3468 + C50942 * C3471 + C8202 * C1163 + C51050 * C1168) *
                 C50836 +
             (C8203 * C3462 + C50942 * C3467 + C8202 * C1156 + C51050 * C1162) *
                 C118) *
                C44529 +
            ((C9982 + C9981) * C50836 + (C9980 + C9979) * C118) * C51086 +
            C8451 * C51085) *
               C50753 * C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C118 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C50836) *
               C51085 +
           ((C14190 + C14189) * C118 + (C14192 + C14191) * C50836) * C51086 +
           ((C14961 + C14962) * C118 + (C14963 + C14964) * C50836) * C44529) *
              C50753 * C745 -
          (((C15181 + C15182) * C50836 + (C15179 + C15180) * C118) * C44529 +
           ((C14742 + C14741) * C50836 + (C14740 + C14739) * C118) * C51086 +
           ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                C50836 +
            (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                C118) *
               C51085) *
              C50753 * C746 +
          (((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                C118 +
            (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                C50836) *
               C51085 +
           ((C14744 + C14743) * C118 + (C14746 + C14745) * C50836) * C51086 +
           ((C8202 * C3460 + C51050 * C3463 + C8203 * C3636 + C50942 * C3638) *
                C118 +
            (C8202 * C3464 + C51050 * C3469 + C8203 * C3639 + C50942 * C3642) *
                C50836) *
               C44529) *
              C50753 * C747 -
          (((C8203 * C20872 + C50942 * C20873 + C8202 * C3639 +
             C51050 * C3642) *
                C50836 +
            (C8203 * C20870 + C50942 * C20871 + C8202 * C3636 +
             C51050 * C3638) *
                C118) *
               C44529 +
           ((C8203 * C3307 + C50942 * C3312 + C8202 * C3303 + C51050 * C3310) *
                C50836 +
            (C8203 * C3300 + C50942 * C3306 + C8202 * C3298 + C51050 * C3302) *
                C118) *
               C51086 +
           ((C8203 * C3020 + C50942 * C3025 + C8202 * C760 + C51050 * C765) *
                C50836 +
            (C8203 * C3016 + C50942 * C3019 + C8202 * C753 + C51050 * C761) *
                C118) *
               C51085) *
              C50753 * C748) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C458 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C51036 -
            (C14189 + C14190) * C459 - (C14191 + C14192) * C50848) *
               C51085 +
           ((C14190 + C14189) * C458 + (C14192 + C14191) * C51036 -
            (C14962 + C14961) * C459 - (C14964 + C14963) * C50848) *
               C51086 +
           ((C14961 + C14962) * C458 + (C14963 + C14964) * C51036 -
            (C15325 + C15326) * C459 - (C15327 + C15328) * C50848) *
               C44529) *
              C50753 * C50806 * C295 +
          ((C14185 * C459 -
            ((C8240 + C8239) * C51036 + (C8238 + C8237) * C458) +
            C14186 * C50848) *
               C51085 +
           (C14949 * C459 - (C14184 * C51036 + C14183 * C458) +
            C14950 * C50848) *
               C51086 +
           ((C14965 + C14966) * C459 - (C14952 * C51036 + C14951 * C458) +
            (C14967 + C14968) * C50848) *
               C44529) *
              C50753 * C50806 * C296 +
          (C8643 * C51085 +
           (C14187 * C458 + C14188 * C51036 - (C9226 + C9225) * C459 -
            (C9228 + C9227) * C50848) *
               C51086 +
           ((C9225 + C9226) * C458 + (C9227 + C9228) * C51036 -
            (C8203 * C7079 + C50942 * C7080 + C8202 * C1246 + C51050 * C1252) *
                C459 -
            (C8203 * C7081 + C50942 * C7082 + C8202 * C1253 + C51050 * C1258) *
                C50848) *
               C44529) *
              C50753 * C50806 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8202 * C119 + C51050 * C126 + C8203 * C301 + C50942 * C311) *
                C458 +
            (C8202 * C127 + C51050 * C140 + C8203 * C310 + C50942 * C319) *
                C51036 -
            (C14189 + C14190) * C459 - (C14191 + C14192) * C50848) *
               C51085 +
           ((C14190 + C14189) * C458 + (C14192 + C14191) * C51036 -
            (C14962 + C14961) * C459 - (C14964 + C14963) * C50848) *
               C51086 +
           ((C14961 + C14962) * C458 + (C14963 + C14964) * C51036 -
            (C15325 + C15326) * C459 - (C15327 + C15328) * C50848) *
               C44529) *
              C50753 * C630 +
          (((C14739 + C14740) * C459 -
            ((C8203 * C641 + C50942 * C650 + C8202 * C310 + C51050 * C319) *
                 C51036 +
             (C8203 * C635 + C50942 * C640 + C8202 * C301 + C51050 * C311) *
                 C458) +
            (C14741 + C14742) * C50848) *
               C51085 +
           ((C15180 + C15179) * C459 -
            ((C14742 + C14741) * C51036 + (C14740 + C14739) * C458) +
            (C15182 + C15181) * C50848) *
               C51086 +
           ((C8202 * C3743 + C51050 * C3747 + C8203 * C3742 + C50942 * C3746) *
                C459 -
            ((C15181 + C15182) * C51036 + (C15179 + C15180) * C458) +
            (C8202 * C3749 + C51050 * C3755 + C8203 * C3748 + C50942 * C3754) *
                C50848) *
               C44529) *
              C50753 * C631 +
          (((C8202 * C635 + C51050 * C640 + C8203 * C753 + C50942 * C761) *
                C458 +
            (C8202 * C641 + C51050 * C650 + C8203 * C760 + C50942 * C765) *
                C51036 -
            (C14743 + C14744) * C459 - (C14745 + C14746) * C50848) *
               C51085 +
           ((C14744 + C14743) * C458 + (C14746 + C14745) * C51036 -
            (C47849 + C47850) * C459 - (C47851 + C47852) * C50848) *
               C51086 +
           ((C47850 + C47849) * C458 + (C47852 + C47851) * C51036 -
            (C8203 * C20940 + C50942 * C20941 + C8202 * C3742 +
             C51050 * C3746) *
                C459 -
            (C8203 * C20942 + C50942 * C20943 + C8202 * C3748 +
             C51050 * C3754) *
                C50848) *
               C44529) *
              C50753 * C632) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C50836) *
                C33864 +
            ((C36816 + C36815 + C36814) * C118 +
             (C36819 + C36818 + C36817) * C50836) *
                C50970) *
               C50753 * C1358 -
           (((C37239 + C37238 + C37237) * C50836 +
             (C37236 + C37235 + C37234) * C118) *
                C50970 +
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C50836 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C118) *
                C33864) *
               C50753 * C50822) *
              C51080 +
          ((((C2682 + C2681 + C2680) * C118 +
             (C2679 + C2678 + C2677) * C50836) *
                C33864 +
            ((C4261 + C4262 + C4263) * C118 +
             (C4264 + C4265 + C4266) * C50836) *
                C50970) *
               C50753 * C50822 -
           (((C2862 + C2863 + C2864) * C50836 +
             (C2859 + C2860 + C2861) * C118) *
                C50970 +
            ((C2494 + C2493 + C2492) * C50836 +
             (C2491 + C2490 + C2489) * C118) *
                C33864) *
               C50753 * C1358) *
              C51065 +
          ((((C2500 + C2499 + C2498) * C118 +
             (C2497 + C2496 + C2495) * C50836) *
                C33864 +
            ((C2865 + C2866 + C2867) * C118 +
             (C2868 + C2869 + C2870) * C50836) *
                C50970) *
               C50753 * C1358 -
           (((C2451 * C4246 + C2446 * C4247 + C2450 * C885 + C2445 * C894 +
              C2449 * C877 + C2444 * C890) *
                 C50836 +
             (C2451 * C4244 + C2446 * C4245 + C2450 * C870 + C2445 * C884 +
              C2449 * C866 + C2444 * C876) *
                 C118) *
                C50970 +
            ((C2688 + C2687 + C2686) * C50836 +
             (C2685 + C2684 + C2683) * C118) *
                C33864) *
               C50753 * C50822) *
              C1362)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C33864 +
             (C5692 * C118 + C5693 * C50836) * C50970) *
                C17370 +
            ((C178 + C179) * C33864 + (C5340 + C5341) * C50970) * C17371 +
            C33871 * C17372) *
               C1358 -
           (C34021 * C17372 +
            ((C5502 + C5503) * C50970 + (C351 + C352) * C33864) * C17371 +
            ((C6127 * C50836 + C6126 * C118) * C50970 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C33864) *
                C17370) *
               C50822) *
              C51080 +
          ((((C352 + C351) * C33864 + (C5503 + C5502) * C50970) * C17370 +
            ((C350 + C349) * C33864 + (C5504 + C5505) * C50970) * C17371 +
            ((C348 + C347) * C33864 + (C11221 + C11222) * C50970) * C17372) *
               C50822 -
           (C33872 * C17372 +
            ((C5346 + C5347) * C50970 + (C181 + C180) * C33864) * C17371 +
            ((C5341 + C5340) * C50970 + (C179 + C178) * C33864) * C17370) *
               C1358) *
              C51065 +
          ((C33871 * C17370 +
            (C189 * C33864 + (C5348 + C5349) * C50970) * C17371 +
            ((C185 + C184) * C33864 + (C11067 + C11068) * C50970) * C17372) *
               C1358 -
           ((((C117 * C1598 + C50890 * C1599) * C50836 +
              (C117 * C1596 + C50890 * C1597) * C118) *
                 C50970 +
             (C354 + C353) * C33864) *
                C17372 +
            ((C11222 + C11221) * C50970 + C355 * C33864) * C17371 +
            C34021 * C17370) *
               C50822) *
              C1362)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C39213 +
            (C5692 * C118 + C5693 * C50836) * C39214 +
            (C5694 * C118 + C5695 * C50836) * C39215 +
            (C6310 * C118 + C6311 * C50836) * C39216) *
               C50753 * C1358 -
           ((C6479 * C50836 + C6478 * C118) * C39216 +
            (C6129 * C50836 + C6128 * C118) * C39215 +
            (C6127 * C50836 + C6126 * C118) * C39214 +
            ((C117 * C310 + C50890 * C319) * C50836 +
             (C117 * C301 + C50890 * C311) * C118) *
                C39213) *
               C50753 * C50822) *
              C51080 +
          (((C352 + C351) * C39213 + (C5503 + C5502) * C39214 +
            (C5515 + C5514) * C39215 +
            (C6480 * C118 + C6481 * C50836) * C39216) *
               C50753 * C50822 -
           ((C5697 * C50836 + C5696 * C118) * C39216 +
            (C5343 + C5342) * C39215 + (C5341 + C5340) * C39214 +
            (C179 + C178) * C39213) *
               C50753 * C1358) *
              C51065 +
          ((C188 * C39213 + C11064 * C39214 + (C5345 + C5344) * C39215 +
            (C5698 * C118 + C5699 * C50836) * C39216) *
               C50753 * C1358 -
           (((C117 * C7081 + C50890 * C7082) * C50836 +
             (C117 * C7079 + C50890 * C7080) * C118) *
                C39216 +
            (C5517 + C5516) * C39215 + C11219 * C39214 + C356 * C39213) *
               C50753 * C50822) *
              C1362)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C50836) *
                C33864 +
            ((C36816 + C36815 + C36814) * C118 +
             (C36819 + C36818 + C36817) * C50836) *
                C50970) *
               C50753 * C51081 -
           (((C37239 + C37238 + C37237) * C50836 +
             (C37236 + C37235 + C37234) * C118) *
                C50970 +
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C50836 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C118) *
                C33864) *
               C50753 * C51068 +
           (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
              C2451 * C3016 + C2446 * C3019) *
                 C118 +
             (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
              C2451 * C3020 + C2446 * C3025) *
                 C50836) *
                C33864 +
            ((C37242 + C37241 + C37240) * C118 +
             (C37245 + C37244 + C37243) * C50836) *
                C50970) *
               C50753 * C1463) *
              C1464 +
          ((((C2682 + C2681 + C2680) * C118 +
             (C2679 + C2678 + C2677) * C50836) *
                C33864 +
            ((C4261 + C4262 + C4263) * C118 +
             (C4264 + C4265 + C4266) * C50836) *
                C50970) *
               C50753 * C51068 -
           (((C2862 + C2863 + C2864) * C50836 +
             (C2859 + C2860 + C2861) * C118) *
                C50970 +
            ((C2494 + C2493 + C2492) * C50836 +
             (C2491 + C2490 + C2489) * C118) *
                C33864) *
               C50753 * C51081 -
           (((C2451 * C3309 + C2446 * C3313 + C2450 * C3305 + C2445 * C3311 +
              C2449 * C883 + C2444 * C893) *
                 C50836 +
             (C2451 * C3301 + C2446 * C3308 + C2450 * C3299 + C2445 * C3304 +
              C2449 * C869 + C2444 * C882) *
                 C118) *
                C50970 +
            ((C3046 + C3045 + C3044) * C50836 +
             (C3043 + C3042 + C3041) * C118) *
                C33864) *
               C50753 * C1463) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C33864 +
             (C5692 * C118 + C5693 * C50836) * C50970) *
                C17370 +
            ((C178 + C179) * C33864 + (C5340 + C5341) * C50970) * C17371 +
            C33871 * C17372) *
               C51081 -
           (C34021 * C17372 +
            ((C5502 + C5503) * C50970 + (C351 + C352) * C33864) * C17371 +
            ((C6127 * C50836 + C6126 * C118) * C50970 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C33864) *
                C17370) *
               C51068 +
           ((((C117 * C635 + C50890 * C640) * C118 +
              (C117 * C641 + C50890 * C650) * C50836) *
                 C33864 +
             (C6130 * C118 + C6131 * C50836) * C50970) *
                C17370 +
            ((C674 + C675) * C33864 + (C5862 + C5863) * C50970) * C17371 +
            ((C676 + C677) * C33864 + (C11533 + C11534) * C50970) * C17372) *
               C1463) *
              C1464 +
          ((((C352 + C351) * C33864 + (C5503 + C5502) * C50970) * C17370 +
            ((C350 + C349) * C33864 + (C5504 + C5505) * C50970) * C17371 +
            ((C348 + C347) * C33864 + (C11221 + C11222) * C50970) * C17372) *
               C51068 -
           (C33872 * C17372 +
            ((C5346 + C5347) * C50970 + (C181 + C180) * C33864) * C17371 +
            ((C5341 + C5340) * C50970 + (C179 + C178) * C33864) * C17370) *
               C51081 -
           ((((C117 * C887 + C50890 * C895) * C50836 +
              (C117 * C871 + C50890 * C886) * C118) *
                 C50970 +
             (C679 + C678) * C33864) *
                C17372 +
            ((C11534 + C11533) * C50970 + (C677 + C676) * C33864) * C17371 +
            ((C5863 + C5862) * C50970 + (C675 + C674) * C33864) * C17370) *
               C1463) *
              C50779)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C39213 +
            (C5692 * C118 + C5693 * C50836) * C39214 +
            (C5694 * C118 + C5695 * C50836) * C39215 +
            (C6310 * C118 + C6311 * C50836) * C39216) *
               C50753 * C51081 -
           ((C6479 * C50836 + C6478 * C118) * C39216 +
            (C6129 * C50836 + C6128 * C118) * C39215 +
            (C6127 * C50836 + C6126 * C118) * C39214 +
            ((C117 * C310 + C50890 * C319) * C50836 +
             (C117 * C301 + C50890 * C311) * C118) *
                C39213) *
               C50753 * C51068 +
           (((C117 * C635 + C50890 * C640) * C118 +
             (C117 * C641 + C50890 * C650) * C50836) *
                C39213 +
            (C6130 * C118 + C6131 * C50836) * C39214 +
            (C6132 * C118 + C6133 * C50836) * C39215 +
            (C39680 * C118 + C39681 * C50836) * C39216) *
               C50753 * C1463) *
              C1464 +
          (((C352 + C351) * C39213 + (C5503 + C5502) * C39214 +
            (C5515 + C5514) * C39215 +
            (C6480 * C118 + C6481 * C50836) * C39216) *
               C50753 * C51068 -
           ((C5697 * C50836 + C5696 * C118) * C39216 +
            (C5343 + C5342) * C39215 + (C5341 + C5340) * C39214 +
            (C179 + C178) * C39213) *
               C50753 * C51081 -
           (((C117 * C3752 + C50890 * C3756) * C50836 +
             (C117 * C3744 + C50890 * C3750) * C118) *
                C39216 +
            (C5865 + C5864) * C39215 + (C5863 + C5862) * C39214 +
            (C675 + C674) * C39213) *
               C50753 * C1463) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C458 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C51036 -
             (C36814 + C36815 + C36816) * C459 -
             (C36817 + C36818 + C36819) * C50848) *
                C33864 +
            ((C36816 + C36815 + C36814) * C458 +
             (C36819 + C36818 + C36817) * C51036 -
             (C37406 + C37405 + C37404) * C459 -
             (C37409 + C37408 + C37407) * C50848) *
                C50970) *
               C50753 * C1358 +
           (((C37234 + C37235 + C37236) * C459 -
             ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
               C2449 * C310 + C2444 * C319) *
                  C51036 +
              (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
               C2449 * C301 + C2444 * C311) *
                  C458) +
             (C37237 + C37238 + C37239) * C50848) *
                C33864 +
            ((C37570 + C37569 + C37568) * C459 -
             ((C37239 + C37238 + C37237) * C51036 +
              (C37236 + C37235 + C37234) * C458) +
             (C37573 + C37572 + C37571) * C50848) *
                C50970) *
               C50753 * C50822) *
              C1464 +
          ((((C2861 + C2860 + C2859) * C459 -
             ((C2494 + C2493 + C2492) * C51036 +
              (C2491 + C2490 + C2489) * C458) +
             (C2864 + C2863 + C2862) * C50848) *
                C33864 +
            ((C3485 + C3486 + C3487) * C459 -
             ((C2862 + C2863 + C2864) * C51036 +
              (C2859 + C2860 + C2861) * C458) +
             (C3488 + C3489 + C3490) * C50848) *
                C50970) *
               C50753 * C1358 +
           (((C2682 + C2681 + C2680) * C458 + (C2679 + C2678 + C2677) * C51036 -
             (C4263 + C4262 + C4261) * C459 -
             (C4266 + C4265 + C4264) * C50848) *
                C33864 +
            ((C4261 + C4262 + C4263) * C458 + (C4264 + C4265 + C4266) * C51036 -
             (C2451 * C3637 + C2446 * C3640 + C2450 * C3461 + C2445 * C3465 +
              C2449 * C1155 + C2444 * C1160) *
                 C459 -
             (C2451 * C3641 + C2446 * C3643 + C2450 * C3466 + C2445 * C3470 +
              C2449 * C1161 + C2444 * C1167) *
                 C50848) *
                C50970) *
               C50753 * C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C458 +
              (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
              C5693 * C50848) *
                 C33864 +
             (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
                 C50970) *
                C17370 +
            ((C485 + C486 - C519 - C520) * C33864 +
             (C5672 + C5673 - C5674 - C5675) * C50970) *
                C17371 +
            C34170 * C17372) *
               C1358 +
           (((C6126 * C459 -
              ((C117 * C310 + C50890 * C319) * C51036 +
               (C117 * C301 + C50890 * C311) * C458) +
              C6127 * C50848) *
                 C33864 +
             (C6128 * C459 - (C6127 * C51036 + C6126 * C458) + C6129 * C50848) *
                 C50970) *
                C17370 +
            ((C1625 - (C1603 + C1604) + C1626) * C33864 +
             (C7084 - (C7085 + C7086) + C7087) * C50970) *
                C17371 +
            ((C1627 - (C1609 + C1610) + C1628) * C33864 +
             (C12661 - (C12662 + C12663) + C12664) * C50970) *
                C17372) *
               C50822) *
              C1464 +
          ((((C519 - (C486 + C485) + C520) * C33864 +
             (C5674 - (C5673 + C5672) + C5675) * C50970) *
                C17370 +
            ((C521 - (C492 + C491) + C522) * C33864 +
             (C5682 - (C5683 + C5684) + C5685) * C50970) *
                C17371 +
            ((C523 - (C498 + C497) + C524) * C33864 +
             (C11373 - (C11374 + C11375) + C11376) * C50970) *
                C17372) *
               C1358 +
           (((C1604 + C1603 - C1625 - C1626) * C33864 +
             (C7086 + C7085 - C7084 - C7087) * C50970) *
                C17370 +
            ((C1610 + C1609 - C1627 - C1628) * C33864 +
             (C12663 + C12662 - C12661 - C12664) * C50970) *
                C17371 +
            ((C1616 + C1615 - C1629 - C1630) * C33864 +
             (C1623 * C458 + C1624 * C51036 -
              (C117 * C1157 + C50890 * C1164) * C459 -
              (C117 * C1165 + C50890 * C1169) * C50848) *
                 C50970) *
                C17372) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C458 +
             (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
             C5693 * C50848) *
                C39213 +
            (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
                C39214 +
            (C5694 * C458 + C5695 * C51036 - C6310 * C459 - C6311 * C50848) *
                C39215 +
            (C6310 * C458 + C6311 * C51036 - C6592 * C459 - C6593 * C50848) *
                C39216) *
               C50753 * C1358 +
           ((C6126 * C459 -
             ((C117 * C310 + C50890 * C319) * C51036 +
              (C117 * C301 + C50890 * C311) * C458) +
             C6127 * C50848) *
                C39213 +
            (C6128 * C459 - (C6127 * C51036 + C6126 * C458) + C6129 * C50848) *
                C39214 +
            (C6478 * C459 - (C6129 * C51036 + C6128 * C458) + C6479 * C50848) *
                C39215 +
            (C39882 * C459 - (C6479 * C51036 + C6478 * C458) +
             C39883 * C50848) *
                C39216) *
               C50753 * C50822) *
              C1464 +
          (((C519 - (C486 + C485) + C520) * C39213 +
            (C5674 - (C5673 + C5672) + C5675) * C39214 +
            (C5700 - (C5677 + C5676) + C5701) * C39215 +
            (C6312 * C459 - (C5697 * C51036 + C5696 * C458) + C6313 * C50848) *
                C39216) *
               C50753 * C1358 +
           ((C1604 + C1603 - C1625 - C1626) * C39213 +
            (C7086 + C7085 - C7084 - C7087) * C39214 +
            (C7090 + C7089 - C7088 - C7091) * C39215 +
            (C6480 * C458 + C6481 * C51036 -
             (C117 * C6462 + C50890 * C6465) * C459 -
             (C117 * C6466 + C50890 * C6468) * C50848) *
                C39216) *
               C50753 * C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C1730 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C1728 -
             (C36814 + C36815 + C36816) * C1731 -
             (C36817 + C36818 + C36819) * C50848) *
                C33864 +
            ((C36816 + C36815 + C36814) * C1730 +
             (C36819 + C36818 + C36817) * C1728 -
             (C37406 + C37405 + C37404) * C1731 -
             (C37409 + C37408 + C37407) * C50848) *
                C50970) *
               C50753 * C1358 +
           (((C37234 + C37235 + C37236) * C1731 -
             ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
               C2449 * C310 + C2444 * C319) *
                  C1728 +
              (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
               C2449 * C301 + C2444 * C311) *
                  C1730) +
             (C37237 + C37238 + C37239) * C50848) *
                C33864 +
            ((C37570 + C37569 + C37568) * C1731 -
             ((C37239 + C37238 + C37237) * C1728 +
              (C37236 + C37235 + C37234) * C1730) +
             (C37573 + C37572 + C37571) * C50848) *
                C50970) *
               C50753 * C50822) *
              C51027 +
          ((((C2861 + C2860 + C2859) * C1731 -
             ((C2494 + C2493 + C2492) * C1728 +
              (C2491 + C2490 + C2489) * C1730) +
             (C2864 + C2863 + C2862) * C50848) *
                C33864 +
            ((C3485 + C3486 + C3487) * C1731 -
             ((C2862 + C2863 + C2864) * C1728 +
              (C2859 + C2860 + C2861) * C1730) +
             (C3488 + C3489 + C3490) * C50848) *
                C50970) *
               C50753 * C1358 +
           (((C2682 + C2681 + C2680) * C1730 + (C2679 + C2678 + C2677) * C1728 -
             (C4263 + C4262 + C4261) * C1731 -
             (C4266 + C4265 + C4264) * C50848) *
                C33864 +
            ((C4261 + C4262 + C4263) * C1730 + (C4264 + C4265 + C4266) * C1728 -
             (C2451 * C3637 + C2446 * C3640 + C2450 * C3461 + C2445 * C3465 +
              C2449 * C1155 + C2444 * C1160) *
                 C1731 -
             (C2451 * C3641 + C2446 * C3643 + C2450 * C3466 + C2445 * C3470 +
              C2449 * C1161 + C2444 * C1167) *
                 C50848) *
                C50970) *
               C50753 * C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C1730 +
              (C117 * C127 + C50890 * C140) * C1728 - C5692 * C1731 -
              C5693 * C50848) *
                 C33864 +
             (C5692 * C1730 + C5693 * C1728 - C5694 * C1731 - C5695 * C50848) *
                 C50970) *
                C17370 +
            ((C1733 + C1734 - C1735 - C1736) * C33864 +
             (C7238 + C7239 - C7240 - C7241) * C50970) *
                C17371 +
            C35585 * C17372) *
               C1358 +
           (((C6126 * C1731 -
              ((C117 * C310 + C50890 * C319) * C1728 +
               (C117 * C301 + C50890 * C311) * C1730) +
              C6127 * C50848) *
                 C33864 +
             (C6128 * C1731 - (C6127 * C1728 + C6126 * C1730) +
              C6129 * C50848) *
                 C50970) *
                C17370 +
            ((C1887 - (C1888 + C1889) + C1890) * C33864 +
             (C7448 - (C7449 + C7450) + C7451) * C50970) *
                C17371 +
            ((C1891 - (C1892 + C1893) + C1894) * C33864 +
             (C13015 - (C13016 + C13017) + C13018) * C50970) *
                C17372) *
               C50822) *
              C51027 +
          ((((C1735 - (C1734 + C1733) + C1736) * C33864 +
             (C7240 - (C7239 + C7238) + C7241) * C50970) *
                C17370 +
            ((C1739 - (C1738 + C1737) + C1740) * C33864 +
             (C7246 - (C7247 + C7248) + C7249) * C50970) *
                C17371 +
            ((C1743 - (C1742 + C1741) + C1744) * C33864 +
             (C12813 - (C12814 + C12815) + C12816) * C50970) *
                C17372) *
               C1358 +
           (((C1889 + C1888 - C1887 - C1890) * C33864 +
             (C7450 + C7449 - C7448 - C7451) * C50970) *
                C17370 +
            ((C1893 + C1892 - C1891 - C1894) * C33864 +
             (C13017 + C13016 - C13015 - C13018) * C50970) *
                C17371 +
            ((C1897 + C1896 - C1895 - C1898) * C33864 +
             (C1623 * C1730 + C1624 * C1728 -
              (C117 * C1157 + C50890 * C1164) * C1731 -
              (C117 * C1165 + C50890 * C1169) * C50848) *
                 C50970) *
                C17372) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C1730 +
             (C117 * C127 + C50890 * C140) * C1728 - C5692 * C1731 -
             C5693 * C50848) *
                C39213 +
            (C5692 * C1730 + C5693 * C1728 - C5694 * C1731 - C5695 * C50848) *
                C39214 +
            (C5694 * C1730 + C5695 * C1728 - C6310 * C1731 - C6311 * C50848) *
                C39215 +
            (C6310 * C1730 + C6311 * C1728 - C6592 * C1731 - C6593 * C50848) *
                C39216) *
               C50753 * C1358 +
           ((C6126 * C1731 -
             ((C117 * C310 + C50890 * C319) * C1728 +
              (C117 * C301 + C50890 * C311) * C1730) +
             C6127 * C50848) *
                C39213 +
            (C6128 * C1731 - (C6127 * C1728 + C6126 * C1730) + C6129 * C50848) *
                C39214 +
            (C6478 * C1731 - (C6129 * C1728 + C6128 * C1730) + C6479 * C50848) *
                C39215 +
            (C39882 * C1731 - (C6479 * C1728 + C6478 * C1730) +
             C39883 * C50848) *
                C39216) *
               C50753 * C50822) *
              C51027 +
          (((C1735 - (C1734 + C1733) + C1736) * C39213 +
            (C7240 - (C7239 + C7238) + C7241) * C39214 +
            (C7244 - (C7243 + C7242) + C7245) * C39215 +
            (C6312 * C1731 - (C5697 * C1728 + C5696 * C1730) + C6313 * C50848) *
                C39216) *
               C50753 * C1358 +
           ((C1889 + C1888 - C1887 - C1890) * C39213 +
            (C7450 + C7449 - C7448 - C7451) * C39214 +
            (C7454 + C7453 - C7452 - C7455) * C39215 +
            (C6480 * C1730 + C6481 * C1728 -
             (C117 * C6462 + C50890 * C6465) * C1731 -
             (C117 * C6466 + C50890 * C6468) * C50848) *
                C39216) *
               C50753 * C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C1730 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C1728 -
            (C36814 + C36815 + C36816) * C1731 -
            (C36817 + C36818 + C36819) * C50848) *
               C33864 +
           ((C36816 + C36815 + C36814) * C1730 +
            (C36819 + C36818 + C36817) * C1728 -
            (C37406 + C37405 + C37404) * C1731 -
            (C37409 + C37408 + C37407) * C50848) *
               C50970) *
              C50753 * C51081 +
          (((C37234 + C37235 + C37236) * C1731 -
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C1728 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C1730) +
            (C37237 + C37238 + C37239) * C50848) *
               C33864 +
           ((C37570 + C37569 + C37568) * C1731 -
            ((C37239 + C37238 + C37237) * C1728 +
             (C37236 + C37235 + C37234) * C1730) +
            (C37573 + C37572 + C37571) * C50848) *
               C50970) *
              C50753 * C51068 +
          (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
             C2451 * C3016 + C2446 * C3019) *
                C1730 +
            (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
             C2451 * C3020 + C2446 * C3025) *
                C1728 -
            (C37240 + C37241 + C37242) * C1731 -
            (C37243 + C37244 + C37245) * C50848) *
               C33864 +
           ((C37242 + C37241 + C37240) * C1730 +
            (C37245 + C37244 + C37243) * C1728 -
            (C2451 * C20870 + C2446 * C20871 + C2450 * C3636 + C2445 * C3638 +
             C2449 * C3460 + C2444 * C3463) *
                C1731 -
            (C2451 * C20872 + C2446 * C20873 + C2450 * C3639 + C2445 * C3642 +
             C2449 * C3464 + C2444 * C3469) *
                C50848) *
               C50970) *
              C50753 * C1463) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C1730 +
             (C117 * C127 + C50890 * C140) * C1728 - C5692 * C1731 -
             C5693 * C50848) *
                C33864 +
            (C5692 * C1730 + C5693 * C1728 - C5694 * C1731 - C5695 * C50848) *
                C50970) *
               C17370 +
           ((C1733 + C1734 - C1735 - C1736) * C33864 +
            (C7238 + C7239 - C7240 - C7241) * C50970) *
               C17371 +
           C35585 * C17372) *
              C51081 +
          (((C6126 * C1731 -
             ((C117 * C310 + C50890 * C319) * C1728 +
              (C117 * C301 + C50890 * C311) * C1730) +
             C6127 * C50848) *
                C33864 +
            (C6128 * C1731 - (C6127 * C1728 + C6126 * C1730) + C6129 * C50848) *
                C50970) *
               C17370 +
           ((C1887 - (C1888 + C1889) + C1890) * C33864 +
            (C7448 - (C7449 + C7450) + C7451) * C50970) *
               C17371 +
           ((C1891 - (C1892 + C1893) + C1894) * C33864 +
            (C13015 - (C13016 + C13017) + C13018) * C50970) *
               C17372) *
              C51068 +
          ((((C117 * C635 + C50890 * C640) * C1730 +
             (C117 * C641 + C50890 * C650) * C1728 - C6130 * C1731 -
             C6131 * C50848) *
                C33864 +
            (C6130 * C1730 + C6131 * C1728 - C6132 * C1731 - C6133 * C50848) *
                C50970) *
               C17370 +
           ((C668 * C1730 + C669 * C1728 - C5858 * C1731 - C5859 * C50848) *
                C33864 +
            (C5858 * C1730 + C5859 * C1728 - C5860 * C1731 - C5861 * C50848) *
                C50970) *
               C17371 +
           ((C670 * C1730 + C671 * C1728 - C11531 * C1731 - C11532 * C50848) *
                C33864 +
            (C11531 * C1730 + C11532 * C1728 -
             (C117 * C3462 + C50890 * C3467) * C1731 -
             (C117 * C3468 + C50890 * C3471) * C50848) *
                C50970) *
               C17372) *
              C1463) *
         C50774) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C1730 +
            (C117 * C127 + C50890 * C140) * C1728 - C5692 * C1731 -
            C5693 * C50848) *
               C39213 +
           (C5692 * C1730 + C5693 * C1728 - C5694 * C1731 - C5695 * C50848) *
               C39214 +
           (C5694 * C1730 + C5695 * C1728 - C6310 * C1731 - C6311 * C50848) *
               C39215 +
           (C6310 * C1730 + C6311 * C1728 - C6592 * C1731 - C6593 * C50848) *
               C39216) *
              C50753 * C51081 +
          ((C6126 * C1731 -
            ((C117 * C310 + C50890 * C319) * C1728 +
             (C117 * C301 + C50890 * C311) * C1730) +
            C6127 * C50848) *
               C39213 +
           (C6128 * C1731 - (C6127 * C1728 + C6126 * C1730) + C6129 * C50848) *
               C39214 +
           (C6478 * C1731 - (C6129 * C1728 + C6128 * C1730) + C6479 * C50848) *
               C39215 +
           (C39882 * C1731 - (C6479 * C1728 + C6478 * C1730) +
            C39883 * C50848) *
               C39216) *
              C50753 * C51068 +
          (((C117 * C635 + C50890 * C640) * C1730 +
            (C117 * C641 + C50890 * C650) * C1728 - C6130 * C1731 -
            C6131 * C50848) *
               C39213 +
           (C6130 * C1730 + C6131 * C1728 - C6132 * C1731 - C6133 * C50848) *
               C39214 +
           (C6132 * C1730 + C6133 * C1728 - C39680 * C1731 - C39681 * C50848) *
               C39215 +
           (C39680 * C1730 + C39681 * C1728 -
            (C117 * C23094 + C50890 * C23095) * C1731 -
            (C117 * C23096 + C50890 * C23097) * C50848) *
               C39216) *
              C50753 * C1463) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C1999 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C51082 -
            (C36814 + C36815 + C36816) * C2000 -
            (C36817 + C36818 + C36819) * C51071 +
            (C37404 + C37405 + C37406) * C2001 +
            (C37407 + C37408 + C37409) * C1998) *
               C33864 +
           ((C36816 + C36815 + C36814) * C1999 +
            (C36819 + C36818 + C36817) * C51082 -
            (C37406 + C37405 + C37404) * C2000 -
            (C37409 + C37408 + C37407) * C51071 +
            (C37686 + C37685 + C37684) * C2001 +
            (C37689 + C37688 + C37687) * C1998) *
               C50970) *
              C50753 * C1358 +
          (((C37234 + C37235 + C37236) * C2000 -
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C51082 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C1999) +
            (C37237 + C37238 + C37239) * C51071 -
            (C37568 + C37569 + C37570) * C2001 -
            (C37571 + C37572 + C37573) * C1998) *
               C33864 +
           ((C37570 + C37569 + C37568) * C2000 -
            ((C37239 + C37238 + C37237) * C51082 +
             (C37236 + C37235 + C37234) * C1999) +
            (C37573 + C37572 + C37571) * C51071 -
            (C2451 * C20940 + C2446 * C20941 + C2450 * C3742 + C2445 * C3746 +
             C2449 * C3743 + C2444 * C3747) *
                C2001 -
            (C2451 * C20942 + C2446 * C20943 + C2450 * C3748 + C2445 * C3754 +
             C2449 * C3749 + C2444 * C3755) *
                C1998) *
               C50970) *
              C50753 * C50822) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C1999 +
             (C117 * C127 + C50890 * C140) * C51082 - C5692 * C2000 -
             C5693 * C51071 + C5694 * C2001 + C5695 * C1998) *
                C33864 +
            (C5692 * C1999 + C5693 * C51082 - C5694 * C2000 - C5695 * C51071 +
             C6310 * C2001 + C6311 * C1998) *
                C50970) *
               C17370 +
           ((C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C33864 +
            (C7602 + C7603 - C7604 - C7605 + C7606 + C7607) * C50970) *
               C17371 +
           ((C2009 + C2010 - C2011 - C2012 + C2013 + C2014) * C33864 +
            (C13165 + C13166 - C13167 - C13168 + C13169 + C13170) * C50970) *
               C17372) *
              C1358 +
          (((C6126 * C2000 -
             ((C117 * C310 + C50890 * C319) * C51082 +
              (C117 * C301 + C50890 * C311) * C1999) +
             C6127 * C51071 - C6128 * C2001 - C6129 * C1998) *
                C33864 +
            (C6128 * C2000 - (C6127 * C51082 + C6126 * C1999) + C6129 * C51071 -
             C6478 * C2001 - C6479 * C1998) *
                C50970) *
               C17370 +
           ((C1619 * C2000 - (C343 * C51082 + C344 * C1999) + C1620 * C51071 -
             C5511 * C2001 - C5510 * C1998) *
                C33864 +
            (C5511 * C2000 - (C1620 * C51082 + C1619 * C1999) + C5510 * C51071 -
             C6480 * C2001 - C6481 * C1998) *
                C50970) *
               C17371 +
           ((C1621 * C2000 - (C341 * C51082 + C342 * C1999) + C1622 * C51071 -
             C5512 * C2001 - C5513 * C1998) *
                C33864 +
            (C5512 * C2000 - (C1622 * C51082 + C1621 * C1999) + C5513 * C51071 -
             (C117 * C7079 + C50890 * C7080) * C2001 -
             (C117 * C7081 + C50890 * C7082) * C1998) *
                C50970) *
               C17372) *
              C50822) *
         C50774) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C1999 +
            (C117 * C127 + C50890 * C140) * C51082 - C5692 * C2000 -
            C5693 * C51071 + C5694 * C2001 + C5695 * C1998) *
               C39213 +
           (C5692 * C1999 + C5693 * C51082 - C5694 * C2000 - C5695 * C51071 +
            C6310 * C2001 + C6311 * C1998) *
               C39214 +
           (C5694 * C1999 + C5695 * C51082 - C6310 * C2000 - C6311 * C51071 +
            C6592 * C2001 + C6593 * C1998) *
               C39215 +
           (C6310 * C1999 + C6311 * C51082 - C6592 * C2000 - C6593 * C51071 +
            C39958 * C2001 + C39959 * C1998) *
               C39216) *
              C50753 * C1358 +
          ((C6126 * C2000 -
            ((C117 * C310 + C50890 * C319) * C51082 +
             (C117 * C301 + C50890 * C311) * C1999) +
            C6127 * C51071 - C6128 * C2001 - C6129 * C1998) *
               C39213 +
           (C6128 * C2000 - (C6127 * C51082 + C6126 * C1999) + C6129 * C51071 -
            C6478 * C2001 - C6479 * C1998) *
               C39214 +
           (C6478 * C2000 - (C6129 * C51082 + C6128 * C1999) + C6479 * C51071 -
            C39882 * C2001 - C39883 * C1998) *
               C39215 +
           (C39882 * C2000 - (C6479 * C51082 + C6478 * C1999) +
            C39883 * C51071 - (C117 * C23210 + C50890 * C23211) * C2001 -
            (C117 * C23212 + C50890 * C23213) * C1998) *
               C39216) *
              C50753 * C50822) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50890 * C126) * C118 +
                 (C117 * C127 + C50890 * C140) * C50836) *
                    C33864 +
                (C5692 * C118 + C5693 * C50836) * C50970) *
                   C17370 +
               ((C178 + C179) * C33864 + (C5340 + C5341) * C50970) * C17371 +
               C33871 * C17372) *
                  C50806 * C113 -
              (C33872 * C17372 +
               ((C5346 + C5347) * C50970 + (C181 + C180) * C33864) * C17371 +
               ((C5341 + C5340) * C50970 + (C179 + C178) * C33864) * C17370) *
                  C50806 * C114 +
              (C33871 * C17370 +
               (C189 * C33864 + (C5348 + C5349) * C50970) * C17371 +
               ((C185 + C184) * C33864 + (C11067 + C11068) * C50970) * C17372) *
                  C50806 * C115 -
              ((((C117 * C477 + C50890 * C483) * C50836 +
                 (C117 * C465 + C50890 * C476) * C118) *
                    C50970 +
                (C187 + C186) * C33864) *
                   C17372 +
               ((C11068 + C11067) * C50970 + C190 * C33864) * C17371 +
               C33872 * C17370) *
                  C50806 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((((C117 * C119 + C50890 * C126) * C118 +
                  (C117 * C127 + C50890 * C140) * C50836) *
                     C33864 +
                 (C5692 * C118 + C5693 * C50836) * C50970) *
                    C17370 +
                ((C178 + C179) * C33864 + (C5340 + C5341) * C50970) * C17371 +
                C33871 * C17372) *
                   C630 -
               (C34021 * C17372 +
                ((C5502 + C5503) * C50970 + (C351 + C352) * C33864) * C17371 +
                ((C6127 * C50836 + C6126 * C118) * C50970 +
                 ((C117 * C310 + C50890 * C319) * C50836 +
                  (C117 * C301 + C50890 * C311) * C118) *
                     C33864) *
                    C17370) *
                   C631 +
               ((((C117 * C635 + C50890 * C640) * C118 +
                  (C117 * C641 + C50890 * C650) * C50836) *
                     C33864 +
                 (C6130 * C118 + C6131 * C50836) * C50970) *
                    C17370 +
                ((C674 + C675) * C33864 + (C5862 + C5863) * C50970) * C17371 +
                ((C676 + C677) * C33864 + (C11533 + C11534) * C50970) *
                    C17372) *
                   C632) *
                  C51027 +
              ((((C352 + C351) * C33864 + (C5503 + C5502) * C50970) * C17370 +
                ((C350 + C349) * C33864 + (C5504 + C5505) * C50970) * C17371 +
                ((C348 + C347) * C33864 + (C11221 + C11222) * C50970) *
                    C17372) *
                   C631 -
               (C33872 * C17372 +
                ((C5346 + C5347) * C50970 + (C181 + C180) * C33864) * C17371 +
                ((C5341 + C5340) * C50970 + (C179 + C178) * C33864) * C17370) *
                   C630 -
               ((((C117 * C887 + C50890 * C895) * C50836 +
                  (C117 * C871 + C50890 * C886) * C118) *
                     C50970 +
                 (C679 + C678) * C33864) *
                    C17372 +
                ((C11534 + C11533) * C50970 + (C677 + C676) * C33864) * C17371 +
                ((C5863 + C5862) * C50970 + (C675 + C674) * C33864) * C17370) *
                   C632) *
                  C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C997 +
             (C117 * C127 + C50890 * C140) * C994 - C5692 * C998 -
             C5693 * C995 + C5694 * C999 + C5695 * C996) *
                C33864 +
            (C5692 * C997 + C5693 * C994 - C5694 * C998 - C5695 * C995 +
             C6310 * C999 + C6311 * C996) *
                C50970) *
               C17370 +
           ((C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C33864 +
            (C6296 + C6297 - C6298 - C6299 + C6300 + C6301) * C50970) *
               C17371 +
           ((C1029 + C1030 - C1031 - C1032 + C1053 + C1054) * C33864 +
            (C11925 + C11926 - C11927 - C11928 + C11929 + C11930) * C50970) *
               C17372) *
              C50806 * C51027 +
          (((C1023 - (C1022 + C1021) + C1024 - C1051 - C1052) * C33864 +
            (C6298 - (C6297 + C6296) + C6299 - C6300 - C6301) * C50970) *
               C17370 +
           ((C1031 - (C1030 + C1029) + C1032 - C1053 - C1054) * C33864 +
            (C11927 - (C11926 + C11925) + C11928 - C11929 - C11930) * C50970) *
               C17371 +
           ((C1039 - (C1038 + C1037) + C1040 - C1055 - C1056) * C33864 +
            (C1049 * C998 - (C516 * C994 + C515 * C997) + C1050 * C995 -
             (C117 * C1247 + C50890 * C1254) * C999 -
             (C117 * C1255 + C50890 * C1259) * C996) *
                C50970) *
               C17372) *
              C50806 * C50779)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C50836) *
               C33864 +
           ((C2449 * C460 + C2444 * C466 + C2450 * C864 + C2445 * C872 +
             C2451 * C868 + C2446 * C880) *
                C118 +
            (C2449 * C467 + C2444 * C478 + C2450 * C873 + C2445 * C888 +
             C2451 * C881 + C2446 * C892) *
                C50836) *
               C50970) *
              C50753 * C50806 * C113 -
          (((C2862 + C2863 + C2864) * C50836 + (C2859 + C2860 + C2861) * C118) *
               C50970 +
           ((C2494 + C2493 + C2492) * C50836 + (C2491 + C2490 + C2489) * C118) *
               C33864) *
              C50753 * C50806 * C114 +
          (((C2500 + C2499 + C2498) * C118 + (C2497 + C2496 + C2495) * C50836) *
               C33864 +
           ((C2865 + C2866 + C2867) * C118 + (C2868 + C2869 + C2870) * C50836) *
               C50970) *
              C50753 * C50806 * C115 -
          (((C2451 * C887 + C2446 * C895 + C2450 * C879 + C2445 * C891 +
             C2449 * C473 + C2444 * C481) *
                C50836 +
            (C2451 * C871 + C2446 * C886 + C2450 * C867 + C2445 * C878 +
             C2449 * C463 + C2444 * C472) *
                C118) *
               C50970 +
           ((C2506 + C2505 + C2504) * C50836 + (C2503 + C2502 + C2501) * C118) *
               C33864) *
              C50753 * C50806 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C50836) *
                C33864 +
            ((C36816 + C36815 + C36814) * C118 +
             (C36819 + C36818 + C36817) * C50836) *
                C50970) *
               C50753 * C630 -
           (((C2451 * C3303 + C2446 * C3310 + C2450 * C881 + C2445 * C892 +
              C2449 * C873 + C2444 * C888) *
                 C50836 +
             (C2451 * C3298 + C2446 * C3302 + C2450 * C868 + C2445 * C880 +
              C2449 * C864 + C2444 * C872) *
                 C118) *
                C50970 +
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C50836 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C118) *
                C33864) *
               C50753 * C631 +
           (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
              C2451 * C3016 + C2446 * C3019) *
                 C118 +
             (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
              C2451 * C3020 + C2446 * C3025) *
                 C50836) *
                C33864 +
            ((C2449 * C868 + C2444 * C880 + C2450 * C3298 + C2445 * C3302 +
              C2451 * C3300 + C2446 * C3306) *
                 C118 +
             (C2449 * C881 + C2444 * C892 + C2450 * C3303 + C2445 * C3310 +
              C2451 * C3307 + C2446 * C3312) *
                 C50836) *
                C50970) *
               C50753 * C632) *
              C51027 +
          ((((C2682 + C2681 + C2680) * C118 +
             (C2679 + C2678 + C2677) * C50836) *
                C33864 +
            ((C4261 + C4262 + C4263) * C118 +
             (C4264 + C4265 + C4266) * C50836) *
                C50970) *
               C50753 * C631 -
           (((C2862 + C2863 + C2864) * C50836 +
             (C2859 + C2860 + C2861) * C118) *
                C50970 +
            ((C2494 + C2493 + C2492) * C50836 +
             (C2491 + C2490 + C2489) * C118) *
                C33864) *
               C50753 * C630 -
           (((C2451 * C3309 + C2446 * C3313 + C2450 * C3305 + C2445 * C3311 +
              C2449 * C883 + C2444 * C893) *
                 C50836 +
             (C2451 * C3301 + C2446 * C3308 + C2450 * C3299 + C2445 * C3304 +
              C2449 * C869 + C2444 * C882) *
                 C118) *
                C50970 +
            ((C3046 + C3045 + C3044) * C50836 +
             (C3043 + C3042 + C3041) * C118) *
                C33864) *
               C50753 * C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C997 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C994 -
            (C36814 + C36815 + C36816) * C998 -
            (C36817 + C36818 + C36819) * C995 +
            (C37404 + C37405 + C37406) * C999 +
            (C37407 + C37408 + C37409) * C996) *
               C33864 +
           ((C36816 + C36815 + C36814) * C997 +
            (C36819 + C36818 + C36817) * C994 -
            (C37406 + C37405 + C37404) * C998 -
            (C37409 + C37408 + C37407) * C995 +
            (C2449 * C1244 + C2444 * C1248 + C2450 * C3743 + C2445 * C3747 +
             C2451 * C3742 + C2446 * C3746) *
                C999 +
            (C2449 * C1249 + C2444 * C1256 + C2450 * C3749 + C2445 * C3755 +
             C2451 * C3748 + C2446 * C3754) *
                C996) *
               C50970) *
              C50753 * C50806 * C51027 +
          (((C2861 + C2860 + C2859) * C998 -
            ((C2494 + C2493 + C2492) * C994 + (C2491 + C2490 + C2489) * C997) +
            (C2864 + C2863 + C2862) * C995 - (C3487 + C3486 + C3485) * C999 -
            (C3490 + C3489 + C3488) * C996) *
               C33864 +
           ((C3485 + C3486 + C3487) * C998 -
            ((C2862 + C2863 + C2864) * C994 + (C2859 + C2860 + C2861) * C997) +
            (C3488 + C3489 + C3490) * C995 -
            (C2451 * C3744 + C2446 * C3750 + C2450 * C3745 + C2445 * C3751 +
             C2449 * C1245 + C2444 * C1250) *
                C999 -
            (C2451 * C3752 + C2446 * C3756 + C2450 * C3753 + C2445 * C3757 +
             C2449 * C1251 + C2444 * C1257) *
                C996) *
               C50970) *
              C50753 * C50806 * C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C118 +
            (C117 * C127 + C50890 * C140) * C50836) *
               C39213 +
           (C5692 * C118 + C5693 * C50836) * C39214 +
           (C5694 * C118 + C5695 * C50836) * C39215 +
           (C6310 * C118 + C6311 * C50836) * C39216) *
              C50753 * C50806 * C113 -
          ((C5697 * C50836 + C5696 * C118) * C39216 + (C5343 + C5342) * C39215 +
           (C5341 + C5340) * C39214 + (C179 + C178) * C39213) *
              C50753 * C50806 * C114 +
          (C188 * C39213 + C11064 * C39214 + (C5345 + C5344) * C39215 +
           (C5698 * C118 + C5699 * C50836) * C39216) *
              C50753 * C50806 * C115 -
          (((C117 * C1255 + C50890 * C1259) * C50836 +
            (C117 * C1247 + C50890 * C1254) * C118) *
               C39216 +
           (C5351 + C5350) * C39215 + C11065 * C39214 + C191 * C39213) *
              C50753 * C50806 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C39213 +
            (C5692 * C118 + C5693 * C50836) * C39214 +
            (C5694 * C118 + C5695 * C50836) * C39215 +
            (C6310 * C118 + C6311 * C50836) * C39216) *
               C50753 * C630 -
           ((C6479 * C50836 + C6478 * C118) * C39216 +
            (C6129 * C50836 + C6128 * C118) * C39215 +
            (C6127 * C50836 + C6126 * C118) * C39214 +
            ((C117 * C310 + C50890 * C319) * C50836 +
             (C117 * C301 + C50890 * C311) * C118) *
                C39213) *
               C50753 * C631 +
           (((C117 * C635 + C50890 * C640) * C118 +
             (C117 * C641 + C50890 * C650) * C50836) *
                C39213 +
            (C6130 * C118 + C6131 * C50836) * C39214 +
            (C6132 * C118 + C6133 * C50836) * C39215 +
            ((C117 * C3742 + C50890 * C3746) * C118 +
             (C117 * C3748 + C50890 * C3754) * C50836) *
                C39216) *
               C50753 * C632) *
              C51027 +
          (((C352 + C351) * C39213 + (C5503 + C5502) * C39214 +
            (C5515 + C5514) * C39215 +
            (C6480 * C118 + C6481 * C50836) * C39216) *
               C50753 * C631 -
           ((C5697 * C50836 + C5696 * C118) * C39216 +
            (C5343 + C5342) * C39215 + (C5341 + C5340) * C39214 +
            (C179 + C178) * C39213) *
               C50753 * C630 -
           (((C117 * C3752 + C50890 * C3756) * C50836 +
             (C117 * C3744 + C50890 * C3750) * C118) *
                C39216 +
            (C5865 + C5864) * C39215 + (C5863 + C5862) * C39214 +
            (C675 + C674) * C39213) *
               C50753 * C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C997 +
            (C117 * C127 + C50890 * C140) * C994 - C5692 * C998 - C5693 * C995 +
            C5694 * C999 + C5695 * C996) *
               C39213 +
           (C5692 * C997 + C5693 * C994 - C5694 * C998 - C5695 * C995 +
            C6310 * C999 + C6311 * C996) *
               C39214 +
           (C5694 * C997 + C5695 * C994 - C6310 * C998 - C6311 * C995 +
            C6592 * C999 + C6593 * C996) *
               C39215 +
           (C6310 * C997 + C6311 * C994 - C6592 * C998 - C6593 * C995 +
            (C117 * C6579 + C50890 * C6581) * C999 +
            (C117 * C6582 + C50890 * C6585) * C996) *
               C39216) *
              C50753 * C50806 * C51027 +
          ((C1023 - (C1022 + C1021) + C1024 - C1051 - C1052) * C39213 +
           (C6298 - (C6297 + C6296) + C6299 - C6300 - C6301) * C39214 +
           (C6304 - (C6303 + C6302) + C6305 - C6314 - C6315) * C39215 +
           (C6312 * C998 - (C5697 * C994 + C5696 * C997) + C6313 * C995 -
            (C117 * C6580 + C50890 * C6583) * C999 -
            (C117 * C6584 + C50890 * C6586) * C996) *
               C39216) *
              C50753 * C50806 * C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((((C117 * C119 + C50890 * C126) * C118 +
                  (C117 * C127 + C50890 * C140) * C50836) *
                     C33864 +
                 (C5692 * C118 + C5693 * C50836) * C50970) *
                    C17370 +
                ((C178 + C179) * C33864 + (C5340 + C5341) * C50970) * C17371 +
                C33871 * C17372) *
                   C51034 -
               (C34021 * C17372 +
                ((C5502 + C5503) * C50970 + (C351 + C352) * C33864) * C17371 +
                ((C6127 * C50836 + C6126 * C118) * C50970 +
                 ((C117 * C310 + C50890 * C319) * C50836 +
                  (C117 * C301 + C50890 * C311) * C118) *
                     C33864) *
                    C17370) *
                   C50822) *
                  C295 +
              ((((C352 + C351) * C33864 + (C5503 + C5502) * C50970) * C17370 +
                ((C350 + C349) * C33864 + (C5504 + C5505) * C50970) * C17371 +
                ((C348 + C347) * C33864 + (C11221 + C11222) * C50970) *
                    C17372) *
                   C50822 -
               (C33872 * C17372 +
                ((C5346 + C5347) * C50970 + (C181 + C180) * C33864) * C17371 +
                ((C5341 + C5340) * C50970 + (C179 + C178) * C33864) * C17370) *
                   C51034) *
                  C296 +
              ((C33871 * C17370 +
                (C189 * C33864 + (C5348 + C5349) * C50970) * C17371 +
                ((C185 + C184) * C33864 + (C11067 + C11068) * C50970) *
                    C17372) *
                   C51034 -
               ((((C117 * C1598 + C50890 * C1599) * C50836 +
                  (C117 * C1596 + C50890 * C1597) * C118) *
                     C50970 +
                 (C354 + C353) * C33864) *
                    C17372 +
                ((C11222 + C11221) * C50970 + C355 * C33864) * C17371 +
                C34021 * C17370) *
                   C50822) *
                  C297) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50890 * C126) * C118 +
                 (C117 * C127 + C50890 * C140) * C50836) *
                    C33864 +
                (C5692 * C118 + C5693 * C50836) * C50970) *
                   C17370 +
               ((C178 + C179) * C33864 + (C5340 + C5341) * C50970) * C17371 +
               C33871 * C17372) *
                  C745 -
              (C34021 * C17372 +
               ((C5502 + C5503) * C50970 + (C351 + C352) * C33864) * C17371 +
               ((C6127 * C50836 + C6126 * C118) * C50970 +
                ((C117 * C310 + C50890 * C319) * C50836 +
                 (C117 * C301 + C50890 * C311) * C118) *
                    C33864) *
                   C17370) *
                  C746 +
              ((((C117 * C635 + C50890 * C640) * C118 +
                 (C117 * C641 + C50890 * C650) * C50836) *
                    C33864 +
                (C6130 * C118 + C6131 * C50836) * C50970) *
                   C17370 +
               ((C674 + C675) * C33864 + (C5862 + C5863) * C50970) * C17371 +
               ((C676 + C677) * C33864 + (C11533 + C11534) * C50970) * C17372) *
                  C747 -
              ((((C117 * C4246 + C50890 * C4247) * C50836 +
                 (C117 * C4244 + C50890 * C4245) * C118) *
                    C50970 +
                ((C117 * C756 + C50890 * C763) * C50836 +
                 (C117 * C751 + C50890 * C757) * C118) *
                    C33864) *
                   C17372 +
               (((C117 * C3305 + C50890 * C3311) * C50836 +
                 (C117 * C3299 + C50890 * C3304) * C118) *
                    C50970 +
                ((C117 * C758 + C50890 * C764) * C50836 +
                 (C117 * C752 + C50890 * C759) * C118) *
                    C33864) *
                   C17371 +
               (((C117 * C3303 + C50890 * C3310) * C50836 +
                 (C117 * C3298 + C50890 * C3302) * C118) *
                    C50970 +
                ((C117 * C760 + C50890 * C765) * C50836 +
                 (C117 * C753 + C50890 * C761) * C118) *
                    C33864) *
                   C17370) *
                  C748) *
             C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C997 +
             (C117 * C127 + C50890 * C140) * C994 - C5692 * C998 -
             C5693 * C995 + C5694 * C999 + C5695 * C996) *
                C33864 +
            (C5692 * C997 + C5693 * C994 - C5694 * C998 - C5695 * C995 +
             C6310 * C999 + C6311 * C996) *
                C50970) *
               C17370 +
           ((C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C33864 +
            (C6296 + C6297 - C6298 - C6299 + C6300 + C6301) * C50970) *
               C17371 +
           ((C1029 + C1030 - C1031 - C1032 + C1053 + C1054) * C33864 +
            (C11925 + C11926 - C11927 - C11928 + C11929 + C11930) * C50970) *
               C17372) *
              C51034 +
          (((C6126 * C998 -
             ((C117 * C310 + C50890 * C319) * C994 +
              (C117 * C301 + C50890 * C311) * C997) +
             C6127 * C995 - C6128 * C999 - C6129 * C996) *
                C33864 +
            (C6128 * C998 - (C6127 * C994 + C6126 * C997) + C6129 * C995 -
             C6478 * C999 - C6479 * C996) *
                C50970) *
               C17370 +
           ((C1619 * C998 - (C343 * C994 + C344 * C997) + C1620 * C995 -
             C5511 * C999 - C5510 * C996) *
                C33864 +
            (C5511 * C998 - (C1620 * C994 + C1619 * C997) + C5510 * C995 -
             C6480 * C999 - C6481 * C996) *
                C50970) *
               C17371 +
           ((C1621 * C998 - (C341 * C994 + C342 * C997) + C1622 * C995 -
             C5512 * C999 - C5513 * C996) *
                C33864 +
            (C5512 * C998 - (C1622 * C994 + C1621 * C997) + C5513 * C995 -
             (C117 * C7079 + C50890 * C7080) * C999 -
             (C117 * C7081 + C50890 * C7082) * C996) *
                C50970) *
               C17372) *
              C50822) *
         C50774) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C50836) *
                C33864 +
            ((C2449 * C460 + C2444 * C466 + C2450 * C864 + C2445 * C872 +
              C2451 * C868 + C2446 * C880) *
                 C118 +
             (C2449 * C467 + C2444 * C478 + C2450 * C873 + C2445 * C888 +
              C2451 * C881 + C2446 * C892) *
                 C50836) *
                C50970) *
               C50753 * C51034 -
           (((C2451 * C3303 + C2446 * C3310 + C2450 * C881 + C2445 * C892 +
              C2449 * C873 + C2444 * C888) *
                 C50836 +
             (C2451 * C3298 + C2446 * C3302 + C2450 * C868 + C2445 * C880 +
              C2449 * C864 + C2444 * C872) *
                 C118) *
                C50970 +
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C50836 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C118) *
                C33864) *
               C50753 * C50822) *
              C295 +
          ((((C2682 + C2681 + C2680) * C118 +
             (C2679 + C2678 + C2677) * C50836) *
                C33864 +
            ((C4261 + C4262 + C4263) * C118 +
             (C4264 + C4265 + C4266) * C50836) *
                C50970) *
               C50753 * C50822 -
           (((C2862 + C2863 + C2864) * C50836 +
             (C2859 + C2860 + C2861) * C118) *
                C50970 +
            ((C2494 + C2493 + C2492) * C50836 +
             (C2491 + C2490 + C2489) * C118) *
                C33864) *
               C50753 * C51034) *
              C296 +
          ((((C2500 + C2499 + C2498) * C118 +
             (C2497 + C2496 + C2495) * C50836) *
                C33864 +
            ((C2865 + C2866 + C2867) * C118 +
             (C2868 + C2869 + C2870) * C50836) *
                C50970) *
               C50753 * C51034 -
           (((C2451 * C4246 + C2446 * C4247 + C2450 * C885 + C2445 * C894 +
              C2449 * C877 + C2444 * C890) *
                 C50836 +
             (C2451 * C4244 + C2446 * C4245 + C2450 * C870 + C2445 * C884 +
              C2449 * C866 + C2444 * C876) *
                 C118) *
                C50970 +
            ((C2688 + C2687 + C2686) * C50836 +
             (C2685 + C2684 + C2683) * C118) *
                C33864) *
               C50753 * C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C50836) *
               C33864 +
           ((C36816 + C36815 + C36814) * C118 +
            (C36819 + C36818 + C36817) * C50836) *
               C50970) *
              C50753 * C745 -
          (((C2451 * C3303 + C2446 * C3310 + C2450 * C881 + C2445 * C892 +
             C2449 * C873 + C2444 * C888) *
                C50836 +
            (C2451 * C3298 + C2446 * C3302 + C2450 * C868 + C2445 * C880 +
             C2449 * C864 + C2444 * C872) *
                C118) *
               C50970 +
           ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
             C2449 * C310 + C2444 * C319) *
                C50836 +
            (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
             C2449 * C301 + C2444 * C311) *
                C118) *
               C33864) *
              C50753 * C746 +
          (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
             C2451 * C3016 + C2446 * C3019) *
                C118 +
            (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
             C2451 * C3020 + C2446 * C3025) *
                C50836) *
               C33864 +
           ((C2449 * C868 + C2444 * C880 + C2450 * C3298 + C2445 * C3302 +
             C2451 * C3300 + C2446 * C3306) *
                C118 +
            (C2449 * C881 + C2444 * C892 + C2450 * C3303 + C2445 * C3310 +
             C2451 * C3307 + C2446 * C3312) *
                C50836) *
               C50970) *
              C50753 * C747 -
          (((C2451 * C20672 + C2446 * C20673 + C2450 * C3307 + C2445 * C3312 +
             C2449 * C3303 + C2444 * C3310) *
                C50836 +
            (C2451 * C20670 + C2446 * C20671 + C2450 * C3300 + C2445 * C3306 +
             C2449 * C3298 + C2444 * C3302) *
                C118) *
               C50970 +
           ((C2451 * C3148 + C2446 * C3151 + C2450 * C3020 + C2445 * C3025 +
             C2449 * C760 + C2444 * C765) *
                C50836 +
            (C2451 * C3145 + C2446 * C3149 + C2450 * C3016 + C2445 * C3019 +
             C2449 * C753 + C2444 * C761) *
                C118) *
               C33864) *
              C50753 * C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C997 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C994 -
            (C36814 + C36815 + C36816) * C998 -
            (C36817 + C36818 + C36819) * C995 +
            (C37404 + C37405 + C37406) * C999 +
            (C37407 + C37408 + C37409) * C996) *
               C33864 +
           ((C36816 + C36815 + C36814) * C997 +
            (C36819 + C36818 + C36817) * C994 -
            (C37406 + C37405 + C37404) * C998 -
            (C37409 + C37408 + C37407) * C995 +
            (C2449 * C1244 + C2444 * C1248 + C2450 * C3743 + C2445 * C3747 +
             C2451 * C3742 + C2446 * C3746) *
                C999 +
            (C2449 * C1249 + C2444 * C1256 + C2450 * C3749 + C2445 * C3755 +
             C2451 * C3748 + C2446 * C3754) *
                C996) *
               C50970) *
              C50753 * C51034 +
          (((C37234 + C37235 + C37236) * C998 -
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C994 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C997) +
            (C37237 + C37238 + C37239) * C995 -
            (C37568 + C37569 + C37570) * C999 -
            (C37571 + C37572 + C37573) * C996) *
               C33864 +
           ((C37570 + C37569 + C37568) * C998 -
            ((C37239 + C37238 + C37237) * C994 +
             (C37236 + C37235 + C37234) * C997) +
            (C37573 + C37572 + C37571) * C995 -
            (C2451 * C20940 + C2446 * C20941 + C2450 * C3742 + C2445 * C3746 +
             C2449 * C3743 + C2444 * C3747) *
                C999 -
            (C2451 * C20942 + C2446 * C20943 + C2450 * C3748 + C2445 * C3754 +
             C2449 * C3749 + C2444 * C3755) *
                C996) *
               C50970) *
              C50753 * C50822) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C39213 +
            (C5692 * C118 + C5693 * C50836) * C39214 +
            (C5694 * C118 + C5695 * C50836) * C39215 +
            (C6310 * C118 + C6311 * C50836) * C39216) *
               C50753 * C51034 -
           ((C6479 * C50836 + C6478 * C118) * C39216 +
            (C6129 * C50836 + C6128 * C118) * C39215 +
            (C6127 * C50836 + C6126 * C118) * C39214 +
            ((C117 * C310 + C50890 * C319) * C50836 +
             (C117 * C301 + C50890 * C311) * C118) *
                C39213) *
               C50753 * C50822) *
              C295 +
          (((C352 + C351) * C39213 + (C5503 + C5502) * C39214 +
            (C5515 + C5514) * C39215 +
            (C6480 * C118 + C6481 * C50836) * C39216) *
               C50753 * C50822 -
           ((C5697 * C50836 + C5696 * C118) * C39216 +
            (C5343 + C5342) * C39215 + (C5341 + C5340) * C39214 +
            (C179 + C178) * C39213) *
               C50753 * C51034) *
              C296 +
          ((C188 * C39213 + C11064 * C39214 + (C5345 + C5344) * C39215 +
            (C5698 * C118 + C5699 * C50836) * C39216) *
               C50753 * C51034 -
           (((C117 * C7081 + C50890 * C7082) * C50836 +
             (C117 * C7079 + C50890 * C7080) * C118) *
                C39216 +
            (C5517 + C5516) * C39215 + C11219 * C39214 + C356 * C39213) *
               C50753 * C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C118 +
            (C117 * C127 + C50890 * C140) * C50836) *
               C39213 +
           (C5692 * C118 + C5693 * C50836) * C39214 +
           (C5694 * C118 + C5695 * C50836) * C39215 +
           (C6310 * C118 + C6311 * C50836) * C39216) *
              C50753 * C745 -
          ((C6479 * C50836 + C6478 * C118) * C39216 +
           (C6129 * C50836 + C6128 * C118) * C39215 +
           (C6127 * C50836 + C6126 * C118) * C39214 +
           ((C117 * C310 + C50890 * C319) * C50836 +
            (C117 * C301 + C50890 * C311) * C118) *
               C39213) *
              C50753 * C746 +
          (((C117 * C635 + C50890 * C640) * C118 +
            (C117 * C641 + C50890 * C650) * C50836) *
               C39213 +
           (C6130 * C118 + C6131 * C50836) * C39214 +
           (C6132 * C118 + C6133 * C50836) * C39215 +
           ((C117 * C3742 + C50890 * C3746) * C118 +
            (C117 * C3748 + C50890 * C3754) * C50836) *
               C39216) *
              C50753 * C747 -
          (((C117 * C20942 + C50890 * C20943) * C50836 +
            (C117 * C20940 + C50890 * C20941) * C118) *
               C39216 +
           ((C117 * C3639 + C50890 * C3642) * C50836 +
            (C117 * C3636 + C50890 * C3638) * C118) *
               C39215 +
           ((C117 * C3303 + C50890 * C3310) * C50836 +
            (C117 * C3298 + C50890 * C3302) * C118) *
               C39214 +
           ((C117 * C760 + C50890 * C765) * C50836 +
            (C117 * C753 + C50890 * C761) * C118) *
               C39213) *
              C50753 * C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C997 +
            (C117 * C127 + C50890 * C140) * C994 - C5692 * C998 - C5693 * C995 +
            C5694 * C999 + C5695 * C996) *
               C39213 +
           (C5692 * C997 + C5693 * C994 - C5694 * C998 - C5695 * C995 +
            C6310 * C999 + C6311 * C996) *
               C39214 +
           (C5694 * C997 + C5695 * C994 - C6310 * C998 - C6311 * C995 +
            C6592 * C999 + C6593 * C996) *
               C39215 +
           (C6310 * C997 + C6311 * C994 - C6592 * C998 - C6593 * C995 +
            (C117 * C6579 + C50890 * C6581) * C999 +
            (C117 * C6582 + C50890 * C6585) * C996) *
               C39216) *
              C50753 * C51034 +
          ((C6126 * C998 -
            ((C117 * C310 + C50890 * C319) * C994 +
             (C117 * C301 + C50890 * C311) * C997) +
            C6127 * C995 - C6128 * C999 - C6129 * C996) *
               C39213 +
           (C6128 * C998 - (C6127 * C994 + C6126 * C997) + C6129 * C995 -
            C6478 * C999 - C6479 * C996) *
               C39214 +
           (C6478 * C998 - (C6129 * C994 + C6128 * C997) + C6479 * C995 -
            C39882 * C999 - C39883 * C996) *
               C39215 +
           (C39882 * C998 - (C6479 * C994 + C6478 * C997) + C39883 * C995 -
            (C117 * C23210 + C50890 * C23211) * C999 -
            (C117 * C23212 + C50890 * C23213) * C996) *
               C39216) *
              C50753 * C50822) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50890 * C126) * C458 +
                 (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
                 C5693 * C50848) *
                    C33864 +
                (C5692 * C458 + C5693 * C51036 - C5694 * C459 -
                 C5695 * C50848) *
                    C50970) *
                   C17370 +
               ((C485 + C486 - C519 - C520) * C33864 +
                (C5672 + C5673 - C5674 - C5675) * C50970) *
                   C17371 +
               C34170 * C17372) *
                  C50806 * C295 +
              (((C519 - (C486 + C485) + C520) * C33864 +
                (C5674 - (C5673 + C5672) + C5675) * C50970) *
                   C17370 +
               ((C521 - (C492 + C491) + C522) * C33864 +
                (C5682 - (C5683 + C5684) + C5685) * C50970) *
                   C17371 +
               ((C523 - (C498 + C497) + C524) * C33864 +
                (C11373 - (C11374 + C11375) + C11376) * C50970) *
                   C17372) *
                  C50806 * C296 +
              (C34170 * C17370 +
               (C530 * C33864 + (C11375 + C11374 - C11373 - C11376) * C50970) *
                   C17371 +
               ((C506 + C505 - C525 - C526) * C33864 +
                (C517 * C458 + C518 * C51036 -
                 (C117 * C1004 + C50890 * C1013) * C459 -
                 (C117 * C1014 + C50890 * C1019) * C50848) *
                    C50970) *
                   C17372) *
                  C50806 * C297) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C50890 * C126) * C458 +
                 (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
                 C5693 * C50848) *
                    C33864 +
                (C5692 * C458 + C5693 * C51036 - C5694 * C459 -
                 C5695 * C50848) *
                    C50970) *
                   C17370 +
               ((C485 + C486 - C519 - C520) * C33864 +
                (C5672 + C5673 - C5674 - C5675) * C50970) *
                   C17371 +
               C34170 * C17372) *
                  C630 +
              (((C6126 * C459 -
                 ((C117 * C310 + C50890 * C319) * C51036 +
                  (C117 * C301 + C50890 * C311) * C458) +
                 C6127 * C50848) *
                    C33864 +
                (C6128 * C459 - (C6127 * C51036 + C6126 * C458) +
                 C6129 * C50848) *
                    C50970) *
                   C17370 +
               ((C1625 - (C1603 + C1604) + C1626) * C33864 +
                (C7084 - (C7085 + C7086) + C7087) * C50970) *
                   C17371 +
               ((C1627 - (C1609 + C1610) + C1628) * C33864 +
                (C12661 - (C12662 + C12663) + C12664) * C50970) *
                   C17372) *
                  C631 +
              ((((C117 * C635 + C50890 * C640) * C458 +
                 (C117 * C641 + C50890 * C650) * C51036 - C6130 * C459 -
                 C6131 * C50848) *
                    C33864 +
                (C6130 * C458 + C6131 * C51036 - C6132 * C459 -
                 C6133 * C50848) *
                    C50970) *
                   C17370 +
               ((C668 * C458 + C669 * C51036 - C5858 * C459 - C5859 * C50848) *
                    C33864 +
                (C5858 * C458 + C5859 * C51036 - C5860 * C459 -
                 C5861 * C50848) *
                    C50970) *
                   C17371 +
               ((C670 * C458 + C671 * C51036 - C11531 * C459 -
                 C11532 * C50848) *
                    C33864 +
                (C11531 * C458 + C11532 * C51036 -
                 (C117 * C3462 + C50890 * C3467) * C459 -
                 (C117 * C3468 + C50890 * C3471) * C50848) *
                    C50970) *
                   C17372) *
                  C632) *
             C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C1240 +
            (C117 * C127 + C50890 * C140) * C1236 - C5692 * C1241 -
            C5693 * C1237 + C5694 * C1242 + C5695 * C1238 - C6310 * C1243 -
            C6311 * C1239) *
               C33864 +
           (C5692 * C1240 + C5693 * C1236 - C5694 * C1241 - C5695 * C1237 +
            C6310 * C1242 + C6311 * C1238 - C6592 * C1243 - C6593 * C1239) *
               C50970) *
              C17370 +
          ((C168 * C1240 + C169 * C1236 - C509 * C1241 - C510 * C1237 +
            C1045 * C1242 + C1046 * C1238 - C5696 * C1243 - C5697 * C1239) *
               C33864 +
           (C509 * C1240 + C510 * C1236 - C1045 * C1241 - C1046 * C1237 +
            C5696 * C1242 + C5697 * C1238 - C6312 * C1243 - C6313 * C1239) *
               C50970) *
              C17371 +
          ((C170 * C1240 + C171 * C1236 - C512 * C1241 - C513 * C1237 +
            C1047 * C1242 + C1048 * C1238 - C5698 * C1243 - C5699 * C1239) *
               C33864 +
           (C512 * C1240 + C513 * C1236 - C1047 * C1241 - C1048 * C1237 +
            C5698 * C1242 + C5699 * C1238 -
            (C117 * C6281 + C50890 * C6286) * C1243 -
            (C117 * C6287 + C50890 * C6290) * C1239) *
               C50970) *
              C17372) *
         C50806 * C50774) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C458 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C51036 -
            (C36814 + C36815 + C36816) * C459 -
            (C36817 + C36818 + C36819) * C50848) *
               C33864 +
           ((C36816 + C36815 + C36814) * C458 +
            (C36819 + C36818 + C36817) * C51036 -
            (C2451 * C3460 + C2446 * C3463 + C2450 * C1154 + C2445 * C1158 +
             C2449 * C1000 + C2444 * C1005) *
                C459 -
            (C2451 * C3464 + C2446 * C3469 + C2450 * C1159 + C2445 * C1166 +
             C2449 * C1006 + C2444 * C1015) *
                C50848) *
               C50970) *
              C50753 * C50806 * C295 +
          (((C2861 + C2860 + C2859) * C459 -
            ((C2494 + C2493 + C2492) * C51036 +
             (C2491 + C2490 + C2489) * C458) +
            (C2864 + C2863 + C2862) * C50848) *
               C33864 +
           ((C3485 + C3486 + C3487) * C459 -
            ((C2862 + C2863 + C2864) * C51036 +
             (C2859 + C2860 + C2861) * C458) +
            (C3488 + C3489 + C3490) * C50848) *
               C50970) *
              C50753 * C50806 * C296 +
          (((C2500 + C2499 + C2498) * C458 + (C2497 + C2496 + C2495) * C51036 -
            (C2867 + C2866 + C2865) * C459 - (C2870 + C2869 + C2868) * C50848) *
               C33864 +
           ((C2865 + C2866 + C2867) * C458 + (C2868 + C2869 + C2870) * C51036 -
            (C2451 * C3462 + C2446 * C3467 + C2450 * C1156 + C2445 * C1162 +
             C2449 * C1002 + C2444 * C1009) *
                C459 -
            (C2451 * C3468 + C2446 * C3471 + C2450 * C1163 + C2445 * C1168 +
             C2449 * C1010 + C2444 * C1017) *
                C50848) *
               C50970) *
              C50753 * C50806 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C458 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C51036 -
            (C36814 + C36815 + C36816) * C459 -
            (C36817 + C36818 + C36819) * C50848) *
               C33864 +
           ((C36816 + C36815 + C36814) * C458 +
            (C36819 + C36818 + C36817) * C51036 -
            (C2451 * C3460 + C2446 * C3463 + C2450 * C1154 + C2445 * C1158 +
             C2449 * C1000 + C2444 * C1005) *
                C459 -
            (C2451 * C3464 + C2446 * C3469 + C2450 * C1159 + C2445 * C1166 +
             C2449 * C1006 + C2444 * C1015) *
                C50848) *
               C50970) *
              C50753 * C630 +
          (((C37234 + C37235 + C37236) * C459 -
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C51036 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C458) +
            (C37237 + C37238 + C37239) * C50848) *
               C33864 +
           ((C2449 * C1154 + C2444 * C1158 + C2450 * C3460 + C2445 * C3463 +
             C2451 * C3636 + C2446 * C3638) *
                C459 -
            ((C37239 + C37238 + C37237) * C51036 +
             (C37236 + C37235 + C37234) * C458) +
            (C2449 * C1159 + C2444 * C1166 + C2450 * C3464 + C2445 * C3469 +
             C2451 * C3639 + C2446 * C3642) *
                C50848) *
               C50970) *
              C50753 * C631 +
          (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
             C2451 * C3016 + C2446 * C3019) *
                C458 +
            (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
             C2451 * C3020 + C2446 * C3025) *
                C51036 -
            (C37240 + C37241 + C37242) * C459 -
            (C37243 + C37244 + C37245) * C50848) *
               C33864 +
           ((C37242 + C37241 + C37240) * C458 +
            (C37245 + C37244 + C37243) * C51036 -
            (C2451 * C20870 + C2446 * C20871 + C2450 * C3636 + C2445 * C3638 +
             C2449 * C3460 + C2444 * C3463) *
                C459 -
            (C2451 * C20872 + C2446 * C20873 + C2450 * C3639 + C2445 * C3642 +
             C2449 * C3464 + C2444 * C3469) *
                C50848) *
               C50970) *
              C50753 * C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
            C2451 * C635 + C2446 * C640) *
               C1240 +
           (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
            C2451 * C641 + C2446 * C650) *
               C1236 -
           (C36814 + C36815 + C36816) * C1241 -
           (C36817 + C36818 + C36819) * C1237 +
           (C37404 + C37405 + C37406) * C1242 +
           (C37407 + C37408 + C37409) * C1238 -
           (C37684 + C37685 + C37686) * C1243 -
           (C37687 + C37688 + C37689) * C1239) *
              C33864 +
          ((C36816 + C36815 + C36814) * C1240 +
           (C36819 + C36818 + C36817) * C1236 -
           (C37406 + C37405 + C37404) * C1241 -
           (C37409 + C37408 + C37407) * C1237 +
           (C37686 + C37685 + C37684) * C1242 +
           (C37689 + C37688 + C37687) * C1238 -
           (C2451 * C23094 + C2446 * C23095 + C2450 * C6461 + C2445 * C6463 +
            C2449 * C6279 + C2444 * C6282) *
               C1243 -
           (C2451 * C23096 + C2446 * C23097 + C2450 * C6464 + C2445 * C6467 +
            C2449 * C6283 + C2444 * C6288) *
               C1239) *
              C50970) *
         C50753 * C50806 * C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C458 +
            (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
            C5693 * C50848) *
               C39213 +
           (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
               C39214 +
           (C5694 * C458 + C5695 * C51036 - C6310 * C459 - C6311 * C50848) *
               C39215 +
           (C6310 * C458 + C6311 * C51036 - C6592 * C459 - C6593 * C50848) *
               C39216) *
              C50753 * C50806 * C295 +
          ((C519 - (C486 + C485) + C520) * C39213 +
           (C5674 - (C5673 + C5672) + C5675) * C39214 +
           (C5700 - (C5677 + C5676) + C5701) * C39215 +
           (C6312 * C459 - (C5697 * C51036 + C5696 * C458) + C6313 * C50848) *
               C39216) *
              C50753 * C50806 * C296 +
          (C529 * C39213 + C11378 * C39214 +
           (C5689 + C5688 - C5702 - C5703) * C39215 +
           (C5698 * C458 + C5699 * C51036 -
            (C117 * C6281 + C50890 * C6286) * C459 -
            (C117 * C6287 + C50890 * C6290) * C50848) *
               C39216) *
              C50753 * C50806 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C458 +
            (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
            C5693 * C50848) *
               C39213 +
           (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
               C39214 +
           (C5694 * C458 + C5695 * C51036 - C6310 * C459 - C6311 * C50848) *
               C39215 +
           (C6310 * C458 + C6311 * C51036 - C6592 * C459 - C6593 * C50848) *
               C39216) *
              C50753 * C630 +
          ((C6126 * C459 -
            ((C117 * C310 + C50890 * C319) * C51036 +
             (C117 * C301 + C50890 * C311) * C458) +
            C6127 * C50848) *
               C39213 +
           (C6128 * C459 - (C6127 * C51036 + C6126 * C458) + C6129 * C50848) *
               C39214 +
           (C6478 * C459 - (C6129 * C51036 + C6128 * C458) + C6479 * C50848) *
               C39215 +
           ((C117 * C6461 + C50890 * C6463) * C459 -
            (C6479 * C51036 + C6478 * C458) +
            (C117 * C6464 + C50890 * C6467) * C50848) *
               C39216) *
              C50753 * C631 +
          (((C117 * C635 + C50890 * C640) * C458 +
            (C117 * C641 + C50890 * C650) * C51036 - C6130 * C459 -
            C6131 * C50848) *
               C39213 +
           (C6130 * C458 + C6131 * C51036 - C6132 * C459 - C6133 * C50848) *
               C39214 +
           (C6132 * C458 + C6133 * C51036 - C39680 * C459 - C39681 * C50848) *
               C39215 +
           (C39680 * C458 + C39681 * C51036 -
            (C117 * C23094 + C50890 * C23095) * C459 -
            (C117 * C23096 + C50890 * C23097) * C50848) *
               C39216) *
              C50753 * C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C50890 * C126) * C1240 +
           (C117 * C127 + C50890 * C140) * C1236 - C5692 * C1241 -
           C5693 * C1237 + C5694 * C1242 + C5695 * C1238 - C6310 * C1243 -
           C6311 * C1239) *
              C39213 +
          (C5692 * C1240 + C5693 * C1236 - C5694 * C1241 - C5695 * C1237 +
           C6310 * C1242 + C6311 * C1238 - C6592 * C1243 - C6593 * C1239) *
              C39214 +
          (C5694 * C1240 + C5695 * C1236 - C6310 * C1241 - C6311 * C1237 +
           C6592 * C1242 + C6593 * C1238 - C39958 * C1243 - C39959 * C1239) *
              C39215 +
          (C6310 * C1240 + C6311 * C1236 - C6592 * C1241 - C6593 * C1237 +
           C39958 * C1242 + C39959 * C1238 -
           (C117 * C39949 + C50890 * C39950) * C1243 -
           (C117 * C39951 + C50890 * C39952) * C1239) *
              C39216) *
         C50753 * C50806 * C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C1730 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C1728 -
            (C36814 + C36815 + C36816) * C1731 -
            (C36817 + C36818 + C36819) * C50848) *
               C33864 +
           ((C36816 + C36815 + C36814) * C1730 +
            (C36819 + C36818 + C36817) * C1728 -
            (C37406 + C37405 + C37404) * C1731 -
            (C37409 + C37408 + C37407) * C50848) *
               C50970) *
              C50753 * C50806 * C51080 +
          (((C2861 + C2860 + C2859) * C1731 -
            ((C2494 + C2493 + C2492) * C1728 +
             (C2491 + C2490 + C2489) * C1730) +
            (C2864 + C2863 + C2862) * C50848) *
               C33864 +
           ((C3485 + C3486 + C3487) * C1731 -
            ((C2862 + C2863 + C2864) * C1728 +
             (C2859 + C2860 + C2861) * C1730) +
            (C3488 + C3489 + C3490) * C50848) *
               C50970) *
              C50753 * C50806 * C51065 +
          (((C2500 + C2499 + C2498) * C1730 + (C2497 + C2496 + C2495) * C1728 -
            (C2867 + C2866 + C2865) * C1731 -
            (C2870 + C2869 + C2868) * C50848) *
               C33864 +
           ((C2865 + C2866 + C2867) * C1730 + (C2868 + C2869 + C2870) * C1728 -
            (C2451 * C3462 + C2446 * C3467 + C2450 * C1156 + C2445 * C1162 +
             C2449 * C1002 + C2444 * C1009) *
                C1731 -
            (C2451 * C3468 + C2446 * C3471 + C2450 * C1163 + C2445 * C1168 +
             C2449 * C1010 + C2444 * C1017) *
                C50848) *
               C50970) *
              C50753 * C50806 * C1362)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C1730 +
             (C117 * C127 + C50890 * C140) * C1728 - C5692 * C1731 -
             C5693 * C50848) *
                C33864 +
            (C5692 * C1730 + C5693 * C1728 - C5694 * C1731 - C5695 * C50848) *
                C50970) *
               C17370 +
           ((C1733 + C1734 - C1735 - C1736) * C33864 +
            (C7238 + C7239 - C7240 - C7241) * C50970) *
               C17371 +
           C35585 * C17372) *
              C50806 * C51080 +
          (((C1735 - (C1734 + C1733) + C1736) * C33864 +
            (C7240 - (C7239 + C7238) + C7241) * C50970) *
               C17370 +
           ((C1739 - (C1738 + C1737) + C1740) * C33864 +
            (C7246 - (C7247 + C7248) + C7249) * C50970) *
               C17371 +
           ((C1743 - (C1742 + C1741) + C1744) * C33864 +
            (C12813 - (C12814 + C12815) + C12816) * C50970) *
               C17372) *
              C50806 * C51065 +
          (C35585 * C17370 +
           (C1754 * C33864 + (C12815 + C12814 - C12813 - C12816) * C50970) *
               C17371 +
           ((C1747 + C1746 - C1745 - C1748) * C33864 +
            (C517 * C1730 + C518 * C1728 -
             (C117 * C1004 + C50890 * C1013) * C1731 -
             (C117 * C1014 + C50890 * C1019) * C50848) *
                C50970) *
               C17372) *
              C50806 * C1362)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C1730 +
            (C117 * C127 + C50890 * C140) * C1728 - C5692 * C1731 -
            C5693 * C50848) *
               C39213 +
           (C5692 * C1730 + C5693 * C1728 - C5694 * C1731 - C5695 * C50848) *
               C39214 +
           (C5694 * C1730 + C5695 * C1728 - C6310 * C1731 - C6311 * C50848) *
               C39215 +
           (C6310 * C1730 + C6311 * C1728 - C6592 * C1731 - C6593 * C50848) *
               C39216) *
              C50753 * C50806 * C51080 +
          ((C1735 - (C1734 + C1733) + C1736) * C39213 +
           (C7240 - (C7239 + C7238) + C7241) * C39214 +
           (C7244 - (C7243 + C7242) + C7245) * C39215 +
           (C6312 * C1731 - (C5697 * C1728 + C5696 * C1730) + C6313 * C50848) *
               C39216) *
              C50753 * C50806 * C51065 +
          (C1753 * C39213 + C12818 * C39214 +
           (C7252 + C7251 - C7250 - C7253) * C39215 +
           (C5698 * C1730 + C5699 * C1728 -
            (C117 * C6281 + C50890 * C6286) * C1731 -
            (C117 * C6287 + C50890 * C6290) * C50848) *
               C39216) *
              C50753 * C50806 * C1362)) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C1730 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C1728 -
             (C36814 + C36815 + C36816) * C1731 -
             (C36817 + C36818 + C36819) * C50848) *
                C33864 +
            ((C36816 + C36815 + C36814) * C1730 +
             (C36819 + C36818 + C36817) * C1728 -
             (C37406 + C37405 + C37404) * C1731 -
             (C37409 + C37408 + C37407) * C50848) *
                C50970) *
               C50753 * C51034 +
           (((C37234 + C37235 + C37236) * C1731 -
             ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
               C2449 * C310 + C2444 * C319) *
                  C1728 +
              (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
               C2449 * C301 + C2444 * C311) *
                  C1730) +
             (C37237 + C37238 + C37239) * C50848) *
                C33864 +
            ((C37570 + C37569 + C37568) * C1731 -
             ((C37239 + C37238 + C37237) * C1728 +
              (C37236 + C37235 + C37234) * C1730) +
             (C37573 + C37572 + C37571) * C50848) *
                C50970) *
               C50753 * C50822) *
              C1464 +
          ((((C2861 + C2860 + C2859) * C1731 -
             ((C2494 + C2493 + C2492) * C1728 +
              (C2491 + C2490 + C2489) * C1730) +
             (C2864 + C2863 + C2862) * C50848) *
                C33864 +
            ((C3485 + C3486 + C3487) * C1731 -
             ((C2862 + C2863 + C2864) * C1728 +
              (C2859 + C2860 + C2861) * C1730) +
             (C3488 + C3489 + C3490) * C50848) *
                C50970) *
               C50753 * C51034 +
           (((C2682 + C2681 + C2680) * C1730 + (C2679 + C2678 + C2677) * C1728 -
             (C4263 + C4262 + C4261) * C1731 -
             (C4266 + C4265 + C4264) * C50848) *
                C33864 +
            ((C4261 + C4262 + C4263) * C1730 + (C4264 + C4265 + C4266) * C1728 -
             (C2451 * C3637 + C2446 * C3640 + C2450 * C3461 + C2445 * C3465 +
              C2449 * C1155 + C2444 * C1160) *
                 C1731 -
             (C2451 * C3641 + C2446 * C3643 + C2450 * C3466 + C2445 * C3470 +
              C2449 * C1161 + C2444 * C1167) *
                 C50848) *
                C50970) *
               C50753 * C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C1730 +
              (C117 * C127 + C50890 * C140) * C1728 - C5692 * C1731 -
              C5693 * C50848) *
                 C33864 +
             (C5692 * C1730 + C5693 * C1728 - C5694 * C1731 - C5695 * C50848) *
                 C50970) *
                C17370 +
            ((C1733 + C1734 - C1735 - C1736) * C33864 +
             (C7238 + C7239 - C7240 - C7241) * C50970) *
                C17371 +
            C35585 * C17372) *
               C51034 +
           (((C6126 * C1731 -
              ((C117 * C310 + C50890 * C319) * C1728 +
               (C117 * C301 + C50890 * C311) * C1730) +
              C6127 * C50848) *
                 C33864 +
             (C6128 * C1731 - (C6127 * C1728 + C6126 * C1730) +
              C6129 * C50848) *
                 C50970) *
                C17370 +
            ((C1887 - (C1888 + C1889) + C1890) * C33864 +
             (C7448 - (C7449 + C7450) + C7451) * C50970) *
                C17371 +
            ((C1891 - (C1892 + C1893) + C1894) * C33864 +
             (C13015 - (C13016 + C13017) + C13018) * C50970) *
                C17372) *
               C50822) *
              C1464 +
          ((((C1735 - (C1734 + C1733) + C1736) * C33864 +
             (C7240 - (C7239 + C7238) + C7241) * C50970) *
                C17370 +
            ((C1739 - (C1738 + C1737) + C1740) * C33864 +
             (C7246 - (C7247 + C7248) + C7249) * C50970) *
                C17371 +
            ((C1743 - (C1742 + C1741) + C1744) * C33864 +
             (C12813 - (C12814 + C12815) + C12816) * C50970) *
                C17372) *
               C51034 +
           (((C1889 + C1888 - C1887 - C1890) * C33864 +
             (C7450 + C7449 - C7448 - C7451) * C50970) *
                C17370 +
            ((C1893 + C1892 - C1891 - C1894) * C33864 +
             (C13017 + C13016 - C13015 - C13018) * C50970) *
                C17371 +
            ((C1897 + C1896 - C1895 - C1898) * C33864 +
             (C1623 * C1730 + C1624 * C1728 -
              (C117 * C1157 + C50890 * C1164) * C1731 -
              (C117 * C1165 + C50890 * C1169) * C50848) *
                 C50970) *
                C17372) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C1730 +
             (C117 * C127 + C50890 * C140) * C1728 - C5692 * C1731 -
             C5693 * C50848) *
                C39213 +
            (C5692 * C1730 + C5693 * C1728 - C5694 * C1731 - C5695 * C50848) *
                C39214 +
            (C5694 * C1730 + C5695 * C1728 - C6310 * C1731 - C6311 * C50848) *
                C39215 +
            (C6310 * C1730 + C6311 * C1728 - C6592 * C1731 - C6593 * C50848) *
                C39216) *
               C50753 * C51034 +
           ((C6126 * C1731 -
             ((C117 * C310 + C50890 * C319) * C1728 +
              (C117 * C301 + C50890 * C311) * C1730) +
             C6127 * C50848) *
                C39213 +
            (C6128 * C1731 - (C6127 * C1728 + C6126 * C1730) + C6129 * C50848) *
                C39214 +
            (C6478 * C1731 - (C6129 * C1728 + C6128 * C1730) + C6479 * C50848) *
                C39215 +
            (C39882 * C1731 - (C6479 * C1728 + C6478 * C1730) +
             C39883 * C50848) *
                C39216) *
               C50753 * C50822) *
              C1464 +
          (((C1735 - (C1734 + C1733) + C1736) * C39213 +
            (C7240 - (C7239 + C7238) + C7241) * C39214 +
            (C7244 - (C7243 + C7242) + C7245) * C39215 +
            (C6312 * C1731 - (C5697 * C1728 + C5696 * C1730) + C6313 * C50848) *
                C39216) *
               C50753 * C51034 +
           ((C1889 + C1888 - C1887 - C1890) * C39213 +
            (C7450 + C7449 - C7448 - C7451) * C39214 +
            (C7454 + C7453 - C7452 - C7455) * C39215 +
            (C6480 * C1730 + C6481 * C1728 -
             (C117 * C6462 + C50890 * C6465) * C1731 -
             (C117 * C6466 + C50890 * C6468) * C50848) *
                C39216) *
               C50753 * C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C1999 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C51082 -
            (C36814 + C36815 + C36816) * C2000 -
            (C36817 + C36818 + C36819) * C51071 +
            (C37404 + C37405 + C37406) * C2001 +
            (C37407 + C37408 + C37409) * C1998) *
               C33864 +
           ((C36816 + C36815 + C36814) * C1999 +
            (C36819 + C36818 + C36817) * C51082 -
            (C37406 + C37405 + C37404) * C2000 -
            (C37409 + C37408 + C37407) * C51071 +
            (C37686 + C37685 + C37684) * C2001 +
            (C37689 + C37688 + C37687) * C1998) *
               C50970) *
              C50753 * C50806 * C1464 +
          (((C2861 + C2860 + C2859) * C2000 -
            ((C2494 + C2493 + C2492) * C51082 +
             (C2491 + C2490 + C2489) * C1999) +
            (C2864 + C2863 + C2862) * C51071 - (C3487 + C3486 + C3485) * C2001 -
            (C3490 + C3489 + C3488) * C1998) *
               C33864 +
           ((C3485 + C3486 + C3487) * C2000 -
            ((C2862 + C2863 + C2864) * C51082 +
             (C2859 + C2860 + C2861) * C1999) +
            (C3488 + C3489 + C3490) * C51071 -
            (C2451 * C3744 + C2446 * C3750 + C2450 * C3745 + C2445 * C3751 +
             C2449 * C1245 + C2444 * C1250) *
                C2001 -
            (C2451 * C3752 + C2446 * C3756 + C2450 * C3753 + C2445 * C3757 +
             C2449 * C1251 + C2444 * C1257) *
                C1998) *
               C50970) *
              C50753 * C50806 * C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C1999 +
             (C117 * C127 + C50890 * C140) * C51082 - C5692 * C2000 -
             C5693 * C51071 + C5694 * C2001 + C5695 * C1998) *
                C33864 +
            (C5692 * C1999 + C5693 * C51082 - C5694 * C2000 - C5695 * C51071 +
             C6310 * C2001 + C6311 * C1998) *
                C50970) *
               C17370 +
           ((C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C33864 +
            (C7602 + C7603 - C7604 - C7605 + C7606 + C7607) * C50970) *
               C17371 +
           ((C2009 + C2010 - C2011 - C2012 + C2013 + C2014) * C33864 +
            (C13165 + C13166 - C13167 - C13168 + C13169 + C13170) * C50970) *
               C17372) *
              C50806 * C1464 +
          (((C2005 - (C2004 + C2003) + C2006 - C2007 - C2008) * C33864 +
            (C7604 - (C7603 + C7602) + C7605 - C7606 - C7607) * C50970) *
               C17370 +
           ((C2011 - (C2010 + C2009) + C2012 - C2013 - C2014) * C33864 +
            (C13167 - (C13166 + C13165) + C13168 - C13169 - C13170) * C50970) *
               C17371 +
           ((C2017 - (C2016 + C2015) + C2018 - C2019 - C2020) * C33864 +
            (C1049 * C2000 - (C516 * C51082 + C515 * C1999) + C1050 * C51071 -
             (C117 * C1247 + C50890 * C1254) * C2001 -
             (C117 * C1255 + C50890 * C1259) * C1998) *
                C50970) *
               C17372) *
              C50806 * C50779)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C1999 +
            (C117 * C127 + C50890 * C140) * C51082 - C5692 * C2000 -
            C5693 * C51071 + C5694 * C2001 + C5695 * C1998) *
               C39213 +
           (C5692 * C1999 + C5693 * C51082 - C5694 * C2000 - C5695 * C51071 +
            C6310 * C2001 + C6311 * C1998) *
               C39214 +
           (C5694 * C1999 + C5695 * C51082 - C6310 * C2000 - C6311 * C51071 +
            C6592 * C2001 + C6593 * C1998) *
               C39215 +
           (C6310 * C1999 + C6311 * C51082 - C6592 * C2000 - C6593 * C51071 +
            C39958 * C2001 + C39959 * C1998) *
               C39216) *
              C50753 * C50806 * C1464 +
          ((C2005 - (C2004 + C2003) + C2006 - C2007 - C2008) * C39213 +
           (C7604 - (C7603 + C7602) + C7605 - C7606 - C7607) * C39214 +
           (C7610 - (C7609 + C7608) + C7611 - C7612 - C7613) * C39215 +
           (C6312 * C2000 - (C5697 * C51082 + C5696 * C1999) + C6313 * C51071 -
            (C117 * C6580 + C50890 * C6583) * C2001 -
            (C117 * C6584 + C50890 * C6586) * C1998) *
               C39216) *
              C50753 * C50806 * C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C33864 +
             (C5692 * C118 + C5693 * C50836) * C50970) *
                C17370 +
            ((C178 + C179) * C33864 + (C5340 + C5341) * C50970) * C17371 +
            C33871 * C17372) *
               C630 -
           (C34021 * C17372 +
            ((C5502 + C5503) * C50970 + (C351 + C352) * C33864) * C17371 +
            ((C6127 * C50836 + C6126 * C118) * C50970 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C33864) *
                C17370) *
               C631 +
           ((((C117 * C635 + C50890 * C640) * C118 +
              (C117 * C641 + C50890 * C650) * C50836) *
                 C33864 +
             (C6130 * C118 + C6131 * C50836) * C50970) *
                C17370 +
            ((C674 + C675) * C33864 + (C5862 + C5863) * C50970) * C17371 +
            ((C676 + C677) * C33864 + (C11533 + C11534) * C50970) * C17372) *
               C632) *
              C51027 +
          ((((C352 + C351) * C33864 + (C5503 + C5502) * C50970) * C17370 +
            ((C350 + C349) * C33864 + (C5504 + C5505) * C50970) * C17371 +
            ((C348 + C347) * C33864 + (C11221 + C11222) * C50970) * C17372) *
               C631 -
           (C33872 * C17372 +
            ((C5346 + C5347) * C50970 + (C181 + C180) * C33864) * C17371 +
            ((C5341 + C5340) * C50970 + (C179 + C178) * C33864) * C17370) *
               C630 -
           ((((C117 * C887 + C50890 * C895) * C50836 +
              (C117 * C871 + C50890 * C886) * C118) *
                 C50970 +
             (C679 + C678) * C33864) *
                C17372 +
            ((C11534 + C11533) * C50970 + (C677 + C676) * C33864) * C17371 +
            ((C5863 + C5862) * C50970 + (C675 + C674) * C33864) * C17370) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C33864 +
            (C5692 * C118 + C5693 * C50836) * C50970) *
               C17370 +
           ((C178 + C179) * C33864 + (C5340 + C5341) * C50970) * C17371 +
           C33871 * C17372) *
              C50806 * C113 -
          (C33872 * C17372 +
           ((C5346 + C5347) * C50970 + (C181 + C180) * C33864) * C17371 +
           ((C5341 + C5340) * C50970 + (C179 + C178) * C33864) * C17370) *
              C50806 * C114 +
          (C33871 * C17370 +
           (C189 * C33864 + (C5348 + C5349) * C50970) * C17371 +
           ((C185 + C184) * C33864 + (C11067 + C11068) * C50970) * C17372) *
              C50806 * C115 -
          ((((C117 * C477 + C50890 * C483) * C50836 +
             (C117 * C465 + C50890 * C476) * C118) *
                C50970 +
            (C187 + C186) * C33864) *
               C17372 +
           ((C11068 + C11067) * C50970 + C190 * C33864) * C17371 +
           C33872 * C17370) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C50836) *
               C33864 +
           ((C2449 * C460 + C2444 * C466 + C2450 * C864 + C2445 * C872 +
             C2451 * C868 + C2446 * C880) *
                C118 +
            (C2449 * C467 + C2444 * C478 + C2450 * C873 + C2445 * C888 +
             C2451 * C881 + C2446 * C892) *
                C50836) *
               C50970) *
              C50753 * C50806 * C113 -
          (((C2862 + C2863 + C2864) * C50836 + (C2859 + C2860 + C2861) * C118) *
               C50970 +
           ((C2494 + C2493 + C2492) * C50836 + (C2491 + C2490 + C2489) * C118) *
               C33864) *
              C50753 * C50806 * C114 +
          (((C2500 + C2499 + C2498) * C118 + (C2497 + C2496 + C2495) * C50836) *
               C33864 +
           ((C2865 + C2866 + C2867) * C118 + (C2868 + C2869 + C2870) * C50836) *
               C50970) *
              C50753 * C50806 * C115 -
          (((C2451 * C887 + C2446 * C895 + C2450 * C879 + C2445 * C891 +
             C2449 * C473 + C2444 * C481) *
                C50836 +
            (C2451 * C871 + C2446 * C886 + C2450 * C867 + C2445 * C878 +
             C2449 * C463 + C2444 * C472) *
                C118) *
               C50970 +
           ((C2506 + C2505 + C2504) * C50836 + (C2503 + C2502 + C2501) * C118) *
               C33864) *
              C50753 * C50806 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C50836) *
                C33864 +
            ((C36816 + C36815 + C36814) * C118 +
             (C36819 + C36818 + C36817) * C50836) *
                C50970) *
               C50753 * C630 -
           (((C2451 * C3303 + C2446 * C3310 + C2450 * C881 + C2445 * C892 +
              C2449 * C873 + C2444 * C888) *
                 C50836 +
             (C2451 * C3298 + C2446 * C3302 + C2450 * C868 + C2445 * C880 +
              C2449 * C864 + C2444 * C872) *
                 C118) *
                C50970 +
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C50836 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C118) *
                C33864) *
               C50753 * C631 +
           (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
              C2451 * C3016 + C2446 * C3019) *
                 C118 +
             (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
              C2451 * C3020 + C2446 * C3025) *
                 C50836) *
                C33864 +
            ((C2449 * C868 + C2444 * C880 + C2450 * C3298 + C2445 * C3302 +
              C2451 * C3300 + C2446 * C3306) *
                 C118 +
             (C2449 * C881 + C2444 * C892 + C2450 * C3303 + C2445 * C3310 +
              C2451 * C3307 + C2446 * C3312) *
                 C50836) *
                C50970) *
               C50753 * C632) *
              C51027 +
          ((((C2682 + C2681 + C2680) * C118 +
             (C2679 + C2678 + C2677) * C50836) *
                C33864 +
            ((C4261 + C4262 + C4263) * C118 +
             (C4264 + C4265 + C4266) * C50836) *
                C50970) *
               C50753 * C631 -
           (((C2862 + C2863 + C2864) * C50836 +
             (C2859 + C2860 + C2861) * C118) *
                C50970 +
            ((C2494 + C2493 + C2492) * C50836 +
             (C2491 + C2490 + C2489) * C118) *
                C33864) *
               C50753 * C630 -
           (((C2451 * C3309 + C2446 * C3313 + C2450 * C3305 + C2445 * C3311 +
              C2449 * C883 + C2444 * C893) *
                 C50836 +
             (C2451 * C3301 + C2446 * C3308 + C2450 * C3299 + C2445 * C3304 +
              C2449 * C869 + C2444 * C882) *
                 C118) *
                C50970 +
            ((C3046 + C3045 + C3044) * C50836 +
             (C3043 + C3042 + C3041) * C118) *
                C33864) *
               C50753 * C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C118 +
            (C117 * C127 + C50890 * C140) * C50836) *
               C39213 +
           (C5692 * C118 + C5693 * C50836) * C39214 +
           (C5694 * C118 + C5695 * C50836) * C39215 +
           (C6310 * C118 + C6311 * C50836) * C39216) *
              C50753 * C50806 * C113 -
          ((C5697 * C50836 + C5696 * C118) * C39216 + (C5343 + C5342) * C39215 +
           (C5341 + C5340) * C39214 + (C179 + C178) * C39213) *
              C50753 * C50806 * C114 +
          (C188 * C39213 + C11064 * C39214 + (C5345 + C5344) * C39215 +
           (C5698 * C118 + C5699 * C50836) * C39216) *
              C50753 * C50806 * C115 -
          (((C117 * C1255 + C50890 * C1259) * C50836 +
            (C117 * C1247 + C50890 * C1254) * C118) *
               C39216 +
           (C5351 + C5350) * C39215 + C11065 * C39214 + C191 * C39213) *
              C50753 * C50806 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C39213 +
            (C5692 * C118 + C5693 * C50836) * C39214 +
            (C5694 * C118 + C5695 * C50836) * C39215 +
            (C6310 * C118 + C6311 * C50836) * C39216) *
               C50753 * C630 -
           ((C6479 * C50836 + C6478 * C118) * C39216 +
            (C6129 * C50836 + C6128 * C118) * C39215 +
            (C6127 * C50836 + C6126 * C118) * C39214 +
            ((C117 * C310 + C50890 * C319) * C50836 +
             (C117 * C301 + C50890 * C311) * C118) *
                C39213) *
               C50753 * C631 +
           (((C117 * C635 + C50890 * C640) * C118 +
             (C117 * C641 + C50890 * C650) * C50836) *
                C39213 +
            (C6130 * C118 + C6131 * C50836) * C39214 +
            (C6132 * C118 + C6133 * C50836) * C39215 +
            ((C117 * C3742 + C50890 * C3746) * C118 +
             (C117 * C3748 + C50890 * C3754) * C50836) *
                C39216) *
               C50753 * C632) *
              C51027 +
          (((C352 + C351) * C39213 + (C5503 + C5502) * C39214 +
            (C5515 + C5514) * C39215 +
            (C6480 * C118 + C6481 * C50836) * C39216) *
               C50753 * C631 -
           ((C5697 * C50836 + C5696 * C118) * C39216 +
            (C5343 + C5342) * C39215 + (C5341 + C5340) * C39214 +
            (C179 + C178) * C39213) *
               C50753 * C630 -
           (((C117 * C3752 + C50890 * C3756) * C50836 +
             (C117 * C3744 + C50890 * C3750) * C118) *
                C39216 +
            (C5865 + C5864) * C39215 + (C5863 + C5862) * C39214 +
            (C675 + C674) * C39213) *
               C50753 * C632) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C33864 +
            (C5692 * C118 + C5693 * C50836) * C50970) *
               C17370 +
           ((C178 + C179) * C33864 + (C5340 + C5341) * C50970) * C17371 +
           C33871 * C17372) *
              C745 -
          (C34021 * C17372 +
           ((C5502 + C5503) * C50970 + (C351 + C352) * C33864) * C17371 +
           ((C6127 * C50836 + C6126 * C118) * C50970 +
            ((C117 * C310 + C50890 * C319) * C50836 +
             (C117 * C301 + C50890 * C311) * C118) *
                C33864) *
               C17370) *
              C746 +
          ((((C117 * C635 + C50890 * C640) * C118 +
             (C117 * C641 + C50890 * C650) * C50836) *
                C33864 +
            (C6130 * C118 + C6131 * C50836) * C50970) *
               C17370 +
           ((C674 + C675) * C33864 + (C5862 + C5863) * C50970) * C17371 +
           ((C676 + C677) * C33864 + (C11533 + C11534) * C50970) * C17372) *
              C747 -
          ((((C117 * C4246 + C50890 * C4247) * C50836 +
             (C117 * C4244 + C50890 * C4245) * C118) *
                C50970 +
            ((C117 * C756 + C50890 * C763) * C50836 +
             (C117 * C751 + C50890 * C757) * C118) *
                C33864) *
               C17372 +
           (((C117 * C3305 + C50890 * C3311) * C50836 +
             (C117 * C3299 + C50890 * C3304) * C118) *
                C50970 +
            ((C117 * C758 + C50890 * C764) * C50836 +
             (C117 * C752 + C50890 * C759) * C118) *
                C33864) *
               C17371 +
           (((C117 * C3303 + C50890 * C3310) * C50836 +
             (C117 * C3298 + C50890 * C3302) * C118) *
                C50970 +
            ((C117 * C760 + C50890 * C765) * C50836 +
             (C117 * C753 + C50890 * C761) * C118) *
                C33864) *
               C17370) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C33864 +
             (C5692 * C118 + C5693 * C50836) * C50970) *
                C17370 +
            ((C178 + C179) * C33864 + (C5340 + C5341) * C50970) * C17371 +
            C33871 * C17372) *
               C51034 -
           (C34021 * C17372 +
            ((C5502 + C5503) * C50970 + (C351 + C352) * C33864) * C17371 +
            ((C6127 * C50836 + C6126 * C118) * C50970 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C33864) *
                C17370) *
               C50822) *
              C295 +
          ((((C352 + C351) * C33864 + (C5503 + C5502) * C50970) * C17370 +
            ((C350 + C349) * C33864 + (C5504 + C5505) * C50970) * C17371 +
            ((C348 + C347) * C33864 + (C11221 + C11222) * C50970) * C17372) *
               C50822 -
           (C33872 * C17372 +
            ((C5346 + C5347) * C50970 + (C181 + C180) * C33864) * C17371 +
            ((C5341 + C5340) * C50970 + (C179 + C178) * C33864) * C17370) *
               C51034) *
              C296 +
          ((C33871 * C17370 +
            (C189 * C33864 + (C5348 + C5349) * C50970) * C17371 +
            ((C185 + C184) * C33864 + (C11067 + C11068) * C50970) * C17372) *
               C51034 -
           ((((C117 * C1598 + C50890 * C1599) * C50836 +
              (C117 * C1596 + C50890 * C1597) * C118) *
                 C50970 +
             (C354 + C353) * C33864) *
                C17372 +
            ((C11222 + C11221) * C50970 + C355 * C33864) * C17371 +
            C34021 * C17370) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C50836) *
                C33864 +
            ((C2449 * C460 + C2444 * C466 + C2450 * C864 + C2445 * C872 +
              C2451 * C868 + C2446 * C880) *
                 C118 +
             (C2449 * C467 + C2444 * C478 + C2450 * C873 + C2445 * C888 +
              C2451 * C881 + C2446 * C892) *
                 C50836) *
                C50970) *
               C50753 * C51034 -
           (((C2451 * C3303 + C2446 * C3310 + C2450 * C881 + C2445 * C892 +
              C2449 * C873 + C2444 * C888) *
                 C50836 +
             (C2451 * C3298 + C2446 * C3302 + C2450 * C868 + C2445 * C880 +
              C2449 * C864 + C2444 * C872) *
                 C118) *
                C50970 +
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C50836 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C118) *
                C33864) *
               C50753 * C50822) *
              C295 +
          ((((C2682 + C2681 + C2680) * C118 +
             (C2679 + C2678 + C2677) * C50836) *
                C33864 +
            ((C4261 + C4262 + C4263) * C118 +
             (C4264 + C4265 + C4266) * C50836) *
                C50970) *
               C50753 * C50822 -
           (((C2862 + C2863 + C2864) * C50836 +
             (C2859 + C2860 + C2861) * C118) *
                C50970 +
            ((C2494 + C2493 + C2492) * C50836 +
             (C2491 + C2490 + C2489) * C118) *
                C33864) *
               C50753 * C51034) *
              C296 +
          ((((C2500 + C2499 + C2498) * C118 +
             (C2497 + C2496 + C2495) * C50836) *
                C33864 +
            ((C2865 + C2866 + C2867) * C118 +
             (C2868 + C2869 + C2870) * C50836) *
                C50970) *
               C50753 * C51034 -
           (((C2451 * C4246 + C2446 * C4247 + C2450 * C885 + C2445 * C894 +
              C2449 * C877 + C2444 * C890) *
                 C50836 +
             (C2451 * C4244 + C2446 * C4245 + C2450 * C870 + C2445 * C884 +
              C2449 * C866 + C2444 * C876) *
                 C118) *
                C50970 +
            ((C2688 + C2687 + C2686) * C50836 +
             (C2685 + C2684 + C2683) * C118) *
                C33864) *
               C50753 * C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C50836) *
               C33864 +
           ((C36816 + C36815 + C36814) * C118 +
            (C36819 + C36818 + C36817) * C50836) *
               C50970) *
              C50753 * C745 -
          (((C2451 * C3303 + C2446 * C3310 + C2450 * C881 + C2445 * C892 +
             C2449 * C873 + C2444 * C888) *
                C50836 +
            (C2451 * C3298 + C2446 * C3302 + C2450 * C868 + C2445 * C880 +
             C2449 * C864 + C2444 * C872) *
                C118) *
               C50970 +
           ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
             C2449 * C310 + C2444 * C319) *
                C50836 +
            (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
             C2449 * C301 + C2444 * C311) *
                C118) *
               C33864) *
              C50753 * C746 +
          (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
             C2451 * C3016 + C2446 * C3019) *
                C118 +
            (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
             C2451 * C3020 + C2446 * C3025) *
                C50836) *
               C33864 +
           ((C2449 * C868 + C2444 * C880 + C2450 * C3298 + C2445 * C3302 +
             C2451 * C3300 + C2446 * C3306) *
                C118 +
            (C2449 * C881 + C2444 * C892 + C2450 * C3303 + C2445 * C3310 +
             C2451 * C3307 + C2446 * C3312) *
                C50836) *
               C50970) *
              C50753 * C747 -
          (((C2451 * C20672 + C2446 * C20673 + C2450 * C3307 + C2445 * C3312 +
             C2449 * C3303 + C2444 * C3310) *
                C50836 +
            (C2451 * C20670 + C2446 * C20671 + C2450 * C3300 + C2445 * C3306 +
             C2449 * C3298 + C2444 * C3302) *
                C118) *
               C50970 +
           ((C2451 * C3148 + C2446 * C3151 + C2450 * C3020 + C2445 * C3025 +
             C2449 * C760 + C2444 * C765) *
                C50836 +
            (C2451 * C3145 + C2446 * C3149 + C2450 * C3016 + C2445 * C3019 +
             C2449 * C753 + C2444 * C761) *
                C118) *
               C33864) *
              C50753 * C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C39213 +
            (C5692 * C118 + C5693 * C50836) * C39214 +
            (C5694 * C118 + C5695 * C50836) * C39215 +
            (C6310 * C118 + C6311 * C50836) * C39216) *
               C50753 * C51034 -
           ((C6479 * C50836 + C6478 * C118) * C39216 +
            (C6129 * C50836 + C6128 * C118) * C39215 +
            (C6127 * C50836 + C6126 * C118) * C39214 +
            ((C117 * C310 + C50890 * C319) * C50836 +
             (C117 * C301 + C50890 * C311) * C118) *
                C39213) *
               C50753 * C50822) *
              C295 +
          (((C352 + C351) * C39213 + (C5503 + C5502) * C39214 +
            (C5515 + C5514) * C39215 +
            (C6480 * C118 + C6481 * C50836) * C39216) *
               C50753 * C50822 -
           ((C5697 * C50836 + C5696 * C118) * C39216 +
            (C5343 + C5342) * C39215 + (C5341 + C5340) * C39214 +
            (C179 + C178) * C39213) *
               C50753 * C51034) *
              C296 +
          ((C188 * C39213 + C11064 * C39214 + (C5345 + C5344) * C39215 +
            (C5698 * C118 + C5699 * C50836) * C39216) *
               C50753 * C51034 -
           (((C117 * C7081 + C50890 * C7082) * C50836 +
             (C117 * C7079 + C50890 * C7080) * C118) *
                C39216 +
            (C5517 + C5516) * C39215 + C11219 * C39214 + C356 * C39213) *
               C50753 * C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C118 +
            (C117 * C127 + C50890 * C140) * C50836) *
               C39213 +
           (C5692 * C118 + C5693 * C50836) * C39214 +
           (C5694 * C118 + C5695 * C50836) * C39215 +
           (C6310 * C118 + C6311 * C50836) * C39216) *
              C50753 * C745 -
          ((C6479 * C50836 + C6478 * C118) * C39216 +
           (C6129 * C50836 + C6128 * C118) * C39215 +
           (C6127 * C50836 + C6126 * C118) * C39214 +
           ((C117 * C310 + C50890 * C319) * C50836 +
            (C117 * C301 + C50890 * C311) * C118) *
               C39213) *
              C50753 * C746 +
          (((C117 * C635 + C50890 * C640) * C118 +
            (C117 * C641 + C50890 * C650) * C50836) *
               C39213 +
           (C6130 * C118 + C6131 * C50836) * C39214 +
           (C6132 * C118 + C6133 * C50836) * C39215 +
           ((C117 * C3742 + C50890 * C3746) * C118 +
            (C117 * C3748 + C50890 * C3754) * C50836) *
               C39216) *
              C50753 * C747 -
          (((C117 * C20942 + C50890 * C20943) * C50836 +
            (C117 * C20940 + C50890 * C20941) * C118) *
               C39216 +
           ((C117 * C3639 + C50890 * C3642) * C50836 +
            (C117 * C3636 + C50890 * C3638) * C118) *
               C39215 +
           ((C117 * C3303 + C50890 * C3310) * C50836 +
            (C117 * C3298 + C50890 * C3302) * C118) *
               C39214 +
           ((C117 * C760 + C50890 * C765) * C50836 +
            (C117 * C753 + C50890 * C761) * C118) *
               C39213) *
              C50753 * C748) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C458 +
             (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
             C5693 * C50848) *
                C33864 +
            (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
                C50970) *
               C17370 +
           ((C485 + C486 - C519 - C520) * C33864 +
            (C5672 + C5673 - C5674 - C5675) * C50970) *
               C17371 +
           C34170 * C17372) *
              C630 +
          (((C6126 * C459 -
             ((C117 * C310 + C50890 * C319) * C51036 +
              (C117 * C301 + C50890 * C311) * C458) +
             C6127 * C50848) *
                C33864 +
            (C6128 * C459 - (C6127 * C51036 + C6126 * C458) + C6129 * C50848) *
                C50970) *
               C17370 +
           ((C1625 - (C1603 + C1604) + C1626) * C33864 +
            (C7084 - (C7085 + C7086) + C7087) * C50970) *
               C17371 +
           ((C1627 - (C1609 + C1610) + C1628) * C33864 +
            (C12661 - (C12662 + C12663) + C12664) * C50970) *
               C17372) *
              C631 +
          ((((C117 * C635 + C50890 * C640) * C458 +
             (C117 * C641 + C50890 * C650) * C51036 - C6130 * C459 -
             C6131 * C50848) *
                C33864 +
            (C6130 * C458 + C6131 * C51036 - C6132 * C459 - C6133 * C50848) *
                C50970) *
               C17370 +
           ((C668 * C458 + C669 * C51036 - C5858 * C459 - C5859 * C50848) *
                C33864 +
            (C5858 * C458 + C5859 * C51036 - C5860 * C459 - C5861 * C50848) *
                C50970) *
               C17371 +
           ((C670 * C458 + C671 * C51036 - C11531 * C459 - C11532 * C50848) *
                C33864 +
            (C11531 * C458 + C11532 * C51036 -
             (C117 * C3462 + C50890 * C3467) * C459 -
             (C117 * C3468 + C50890 * C3471) * C50848) *
                C50970) *
               C17372) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C458 +
             (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
             C5693 * C50848) *
                C33864 +
            (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
                C50970) *
               C17370 +
           ((C485 + C486 - C519 - C520) * C33864 +
            (C5672 + C5673 - C5674 - C5675) * C50970) *
               C17371 +
           C34170 * C17372) *
              C50806 * C295 +
          (((C519 - (C486 + C485) + C520) * C33864 +
            (C5674 - (C5673 + C5672) + C5675) * C50970) *
               C17370 +
           ((C521 - (C492 + C491) + C522) * C33864 +
            (C5682 - (C5683 + C5684) + C5685) * C50970) *
               C17371 +
           ((C523 - (C498 + C497) + C524) * C33864 +
            (C11373 - (C11374 + C11375) + C11376) * C50970) *
               C17372) *
              C50806 * C296 +
          (C34170 * C17370 +
           (C530 * C33864 + (C11375 + C11374 - C11373 - C11376) * C50970) *
               C17371 +
           ((C506 + C505 - C525 - C526) * C33864 +
            (C517 * C458 + C518 * C51036 -
             (C117 * C1004 + C50890 * C1013) * C459 -
             (C117 * C1014 + C50890 * C1019) * C50848) *
                C50970) *
               C17372) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C458 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C51036 -
            (C36814 + C36815 + C36816) * C459 -
            (C36817 + C36818 + C36819) * C50848) *
               C33864 +
           ((C36816 + C36815 + C36814) * C458 +
            (C36819 + C36818 + C36817) * C51036 -
            (C2451 * C3460 + C2446 * C3463 + C2450 * C1154 + C2445 * C1158 +
             C2449 * C1000 + C2444 * C1005) *
                C459 -
            (C2451 * C3464 + C2446 * C3469 + C2450 * C1159 + C2445 * C1166 +
             C2449 * C1006 + C2444 * C1015) *
                C50848) *
               C50970) *
              C50753 * C50806 * C295 +
          (((C2861 + C2860 + C2859) * C459 -
            ((C2494 + C2493 + C2492) * C51036 +
             (C2491 + C2490 + C2489) * C458) +
            (C2864 + C2863 + C2862) * C50848) *
               C33864 +
           ((C3485 + C3486 + C3487) * C459 -
            ((C2862 + C2863 + C2864) * C51036 +
             (C2859 + C2860 + C2861) * C458) +
            (C3488 + C3489 + C3490) * C50848) *
               C50970) *
              C50753 * C50806 * C296 +
          (((C2500 + C2499 + C2498) * C458 + (C2497 + C2496 + C2495) * C51036 -
            (C2867 + C2866 + C2865) * C459 - (C2870 + C2869 + C2868) * C50848) *
               C33864 +
           ((C2865 + C2866 + C2867) * C458 + (C2868 + C2869 + C2870) * C51036 -
            (C2451 * C3462 + C2446 * C3467 + C2450 * C1156 + C2445 * C1162 +
             C2449 * C1002 + C2444 * C1009) *
                C459 -
            (C2451 * C3468 + C2446 * C3471 + C2450 * C1163 + C2445 * C1168 +
             C2449 * C1010 + C2444 * C1017) *
                C50848) *
               C50970) *
              C50753 * C50806 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C458 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C51036 -
            (C36814 + C36815 + C36816) * C459 -
            (C36817 + C36818 + C36819) * C50848) *
               C33864 +
           ((C36816 + C36815 + C36814) * C458 +
            (C36819 + C36818 + C36817) * C51036 -
            (C2451 * C3460 + C2446 * C3463 + C2450 * C1154 + C2445 * C1158 +
             C2449 * C1000 + C2444 * C1005) *
                C459 -
            (C2451 * C3464 + C2446 * C3469 + C2450 * C1159 + C2445 * C1166 +
             C2449 * C1006 + C2444 * C1015) *
                C50848) *
               C50970) *
              C50753 * C630 +
          (((C37234 + C37235 + C37236) * C459 -
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C51036 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C458) +
            (C37237 + C37238 + C37239) * C50848) *
               C33864 +
           ((C2449 * C1154 + C2444 * C1158 + C2450 * C3460 + C2445 * C3463 +
             C2451 * C3636 + C2446 * C3638) *
                C459 -
            ((C37239 + C37238 + C37237) * C51036 +
             (C37236 + C37235 + C37234) * C458) +
            (C2449 * C1159 + C2444 * C1166 + C2450 * C3464 + C2445 * C3469 +
             C2451 * C3639 + C2446 * C3642) *
                C50848) *
               C50970) *
              C50753 * C631 +
          (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
             C2451 * C3016 + C2446 * C3019) *
                C458 +
            (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
             C2451 * C3020 + C2446 * C3025) *
                C51036 -
            (C37240 + C37241 + C37242) * C459 -
            (C37243 + C37244 + C37245) * C50848) *
               C33864 +
           ((C37242 + C37241 + C37240) * C458 +
            (C37245 + C37244 + C37243) * C51036 -
            (C2451 * C20870 + C2446 * C20871 + C2450 * C3636 + C2445 * C3638 +
             C2449 * C3460 + C2444 * C3463) *
                C459 -
            (C2451 * C20872 + C2446 * C20873 + C2450 * C3639 + C2445 * C3642 +
             C2449 * C3464 + C2444 * C3469) *
                C50848) *
               C50970) *
              C50753 * C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C458 +
            (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
            C5693 * C50848) *
               C39213 +
           (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
               C39214 +
           (C5694 * C458 + C5695 * C51036 - C6310 * C459 - C6311 * C50848) *
               C39215 +
           (C6310 * C458 + C6311 * C51036 - C6592 * C459 - C6593 * C50848) *
               C39216) *
              C50753 * C50806 * C295 +
          ((C519 - (C486 + C485) + C520) * C39213 +
           (C5674 - (C5673 + C5672) + C5675) * C39214 +
           (C5700 - (C5677 + C5676) + C5701) * C39215 +
           (C6312 * C459 - (C5697 * C51036 + C5696 * C458) + C6313 * C50848) *
               C39216) *
              C50753 * C50806 * C296 +
          (C529 * C39213 + C11378 * C39214 +
           (C5689 + C5688 - C5702 - C5703) * C39215 +
           (C5698 * C458 + C5699 * C51036 -
            (C117 * C6281 + C50890 * C6286) * C459 -
            (C117 * C6287 + C50890 * C6290) * C50848) *
               C39216) *
              C50753 * C50806 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C458 +
            (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
            C5693 * C50848) *
               C39213 +
           (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
               C39214 +
           (C5694 * C458 + C5695 * C51036 - C6310 * C459 - C6311 * C50848) *
               C39215 +
           (C6310 * C458 + C6311 * C51036 - C6592 * C459 - C6593 * C50848) *
               C39216) *
              C50753 * C630 +
          ((C6126 * C459 -
            ((C117 * C310 + C50890 * C319) * C51036 +
             (C117 * C301 + C50890 * C311) * C458) +
            C6127 * C50848) *
               C39213 +
           (C6128 * C459 - (C6127 * C51036 + C6126 * C458) + C6129 * C50848) *
               C39214 +
           (C6478 * C459 - (C6129 * C51036 + C6128 * C458) + C6479 * C50848) *
               C39215 +
           ((C117 * C6461 + C50890 * C6463) * C459 -
            (C6479 * C51036 + C6478 * C458) +
            (C117 * C6464 + C50890 * C6467) * C50848) *
               C39216) *
              C50753 * C631 +
          (((C117 * C635 + C50890 * C640) * C458 +
            (C117 * C641 + C50890 * C650) * C51036 - C6130 * C459 -
            C6131 * C50848) *
               C39213 +
           (C6130 * C458 + C6131 * C51036 - C6132 * C459 - C6133 * C50848) *
               C39214 +
           (C6132 * C458 + C6133 * C51036 - C39680 * C459 - C39681 * C50848) *
               C39215 +
           (C39680 * C458 + C39681 * C51036 -
            (C117 * C23094 + C50890 * C23095) * C459 -
            (C117 * C23096 + C50890 * C23097) * C50848) *
               C39216) *
              C50753 * C632) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C51085 +
             (C5692 * C118 + C5693 * C50836) * C51086 +
             (C5694 * C118 + C5695 * C50836) * C44529) *
                C51022 +
            ((C178 + C179) * C51085 + (C5340 + C5341) * C51086 +
             (C5342 + C5343) * C44529) *
                C50758) *
               C1358 -
           (((C5514 + C5515) * C44529 + (C5502 + C5503) * C51086 +
             (C351 + C352) * C51085) *
                C50758 +
            ((C6129 * C50836 + C6128 * C118) * C44529 +
             (C6127 * C50836 + C6126 * C118) * C51086 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C51085) *
                C51022) *
               C50822) *
              C51080 +
          ((((C352 + C351) * C51085 + (C5503 + C5502) * C51086 +
             (C5515 + C5514) * C44529) *
                C51022 +
            ((C350 + C349) * C51085 + (C5504 + C5505) * C51086 +
             (C5516 + C5517) * C44529) *
                C50758) *
               C50822 -
           (((C5344 + C5345) * C44529 + (C5346 + C5347) * C51086 +
             (C181 + C180) * C51085) *
                C50758 +
            ((C5343 + C5342) * C44529 + (C5341 + C5340) * C51086 +
             (C179 + C178) * C51085) *
                C51022) *
               C1358) *
              C51065 +
          (((C188 * C51085 + C11064 * C51086 + (C5345 + C5344) * C44529) *
                C51022 +
            (C189 * C51085 + (C5348 + C5349) * C51086 +
             (C5350 + C5351) * C44529) *
                C50758) *
               C1358 -
           ((((C117 * C1165 + C50890 * C1169) * C50836 +
              (C117 * C1157 + C50890 * C1164) * C118) *
                 C44529 +
             (C11222 + C11221) * C51086 + C355 * C51085) *
                C50758 +
            ((C5517 + C5516) * C44529 + C11219 * C51086 + C356 * C51085) *
                C51022) *
               C50822) *
              C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[196] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C117 * C119 + C50890 * C126) * C118 +
                       (C117 * C127 + C50890 * C140) * C50836) *
                          C51085 +
                      (C5692 * C118 + C5693 * C50836) * C51086 +
                      (C5694 * C118 + C5695 * C50836) * C44529) *
                         C51022 +
                     ((C178 + C179) * C51085 + (C5340 + C5341) * C51086 +
                      (C5342 + C5343) * C44529) *
                         C50758) *
                        C51081 -
                    (((C5514 + C5515) * C44529 + (C5502 + C5503) * C51086 +
                      (C351 + C352) * C51085) *
                         C50758 +
                     ((C6129 * C50836 + C6128 * C118) * C44529 +
                      (C6127 * C50836 + C6126 * C118) * C51086 +
                      ((C117 * C310 + C50890 * C319) * C50836 +
                       (C117 * C301 + C50890 * C311) * C118) *
                          C51085) *
                         C51022) *
                        C51068 +
                    ((((C117 * C635 + C50890 * C640) * C118 +
                       (C117 * C641 + C50890 * C650) * C50836) *
                          C51085 +
                      (C6130 * C118 + C6131 * C50836) * C51086 +
                      (C6132 * C118 + C6133 * C50836) * C44529) *
                         C51022 +
                     ((C674 + C675) * C51085 + (C5862 + C5863) * C51086 +
                      (C5864 + C5865) * C44529) *
                         C50758) *
                        C1463) *
                       C1464 +
                   ((((C352 + C351) * C51085 + (C5503 + C5502) * C51086 +
                      (C5515 + C5514) * C44529) *
                         C51022 +
                     ((C350 + C349) * C51085 + (C5504 + C5505) * C51086 +
                      (C5516 + C5517) * C44529) *
                         C50758) *
                        C51068 -
                    (((C5344 + C5345) * C44529 + (C5346 + C5347) * C51086 +
                      (C181 + C180) * C51085) *
                         C50758 +
                     ((C5343 + C5342) * C44529 + (C5341 + C5340) * C51086 +
                      (C179 + C178) * C51085) *
                         C51022) *
                        C51081 -
                    ((((C117 * C3468 + C50890 * C3471) * C50836 +
                       (C117 * C3462 + C50890 * C3467) * C118) *
                          C44529 +
                      (C11534 + C11533) * C51086 + (C677 + C676) * C51085) *
                         C50758 +
                     ((C5865 + C5864) * C44529 + (C5863 + C5862) * C51086 +
                      (C675 + C674) * C51085) *
                         C51022) *
                        C1463) *
                       C50779)) /
                 (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C458 +
              (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
              C5693 * C50848) *
                 C51085 +
             (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
                 C51086 +
             (C5694 * C458 + C5695 * C51036 - C6310 * C459 - C6311 * C50848) *
                 C44529) *
                C51022 +
            ((C485 + C486 - C519 - C520) * C51085 +
             (C5672 + C5673 - C5674 - C5675) * C51086 +
             (C5676 + C5677 - C5700 - C5701) * C44529) *
                C50758) *
               C1358 +
           (((C6126 * C459 -
              ((C117 * C310 + C50890 * C319) * C51036 +
               (C117 * C301 + C50890 * C311) * C458) +
              C6127 * C50848) *
                 C51085 +
             (C6128 * C459 - (C6127 * C51036 + C6126 * C458) + C6129 * C50848) *
                 C51086 +
             (C6478 * C459 - (C6129 * C51036 + C6128 * C458) + C6479 * C50848) *
                 C44529) *
                C51022 +
            ((C1625 - (C1603 + C1604) + C1626) * C51085 +
             (C7084 - (C7085 + C7086) + C7087) * C51086 +
             (C7088 - (C7089 + C7090) + C7091) * C44529) *
                C50758) *
               C50822) *
              C1464 +
          ((((C519 - (C486 + C485) + C520) * C51085 +
             (C5674 - (C5673 + C5672) + C5675) * C51086 +
             (C5700 - (C5677 + C5676) + C5701) * C44529) *
                C51022 +
            ((C521 - (C492 + C491) + C522) * C51085 +
             (C5682 - (C5683 + C5684) + C5685) * C51086 +
             (C5702 - (C5688 + C5689) + C5703) * C44529) *
                C50758) *
               C1358 +
           (((C1604 + C1603 - C1625 - C1626) * C51085 +
             (C7086 + C7085 - C7084 - C7087) * C51086 +
             (C7090 + C7089 - C7088 - C7091) * C44529) *
                C51022 +
            ((C1610 + C1609 - C1627 - C1628) * C51085 +
             (C12663 + C12662 - C12661 - C12664) * C51086 +
             (C5512 * C458 + C5513 * C51036 -
              (C117 * C7079 + C50890 * C7080) * C459 -
              (C117 * C7081 + C50890 * C7082) * C50848) *
                 C44529) *
                C50758) *
               C50822) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C1730 +
              (C117 * C127 + C50890 * C140) * C1728 - C5692 * C1731 -
              C5693 * C50848) *
                 C51085 +
             (C5692 * C1730 + C5693 * C1728 - C5694 * C1731 - C5695 * C50848) *
                 C51086 +
             (C5694 * C1730 + C5695 * C1728 - C6310 * C1731 - C6311 * C50848) *
                 C44529) *
                C51022 +
            ((C1733 + C1734 - C1735 - C1736) * C51085 +
             (C7238 + C7239 - C7240 - C7241) * C51086 +
             (C7242 + C7243 - C7244 - C7245) * C44529) *
                C50758) *
               C1358 +
           (((C6126 * C1731 -
              ((C117 * C310 + C50890 * C319) * C1728 +
               (C117 * C301 + C50890 * C311) * C1730) +
              C6127 * C50848) *
                 C51085 +
             (C6128 * C1731 - (C6127 * C1728 + C6126 * C1730) +
              C6129 * C50848) *
                 C51086 +
             (C6478 * C1731 - (C6129 * C1728 + C6128 * C1730) +
              C6479 * C50848) *
                 C44529) *
                C51022 +
            ((C1887 - (C1888 + C1889) + C1890) * C51085 +
             (C7448 - (C7449 + C7450) + C7451) * C51086 +
             (C7452 - (C7453 + C7454) + C7455) * C44529) *
                C50758) *
               C50822) *
              C51027 +
          ((((C1735 - (C1734 + C1733) + C1736) * C51085 +
             (C7240 - (C7239 + C7238) + C7241) * C51086 +
             (C7244 - (C7243 + C7242) + C7245) * C44529) *
                C51022 +
            ((C1739 - (C1738 + C1737) + C1740) * C51085 +
             (C7246 - (C7247 + C7248) + C7249) * C51086 +
             (C7250 - (C7251 + C7252) + C7253) * C44529) *
                C50758) *
               C1358 +
           (((C1889 + C1888 - C1887 - C1890) * C51085 +
             (C7450 + C7449 - C7448 - C7451) * C51086 +
             (C7454 + C7453 - C7452 - C7455) * C44529) *
                C51022 +
            ((C1893 + C1892 - C1891 - C1894) * C51085 +
             (C13017 + C13016 - C13015 - C13018) * C51086 +
             (C5512 * C1730 + C5513 * C1728 -
              (C117 * C7079 + C50890 * C7080) * C1731 -
              (C117 * C7081 + C50890 * C7082) * C50848) *
                 C44529) *
                C50758) *
               C50822) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C1730 +
             (C117 * C127 + C50890 * C140) * C1728 - C5692 * C1731 -
             C5693 * C50848) *
                C51085 +
            (C5692 * C1730 + C5693 * C1728 - C5694 * C1731 - C5695 * C50848) *
                C51086 +
            (C5694 * C1730 + C5695 * C1728 - C6310 * C1731 - C6311 * C50848) *
                C44529) *
               C51022 +
           ((C1733 + C1734 - C1735 - C1736) * C51085 +
            (C7238 + C7239 - C7240 - C7241) * C51086 +
            (C7242 + C7243 - C7244 - C7245) * C44529) *
               C50758) *
              C51081 +
          (((C6126 * C1731 -
             ((C117 * C310 + C50890 * C319) * C1728 +
              (C117 * C301 + C50890 * C311) * C1730) +
             C6127 * C50848) *
                C51085 +
            (C6128 * C1731 - (C6127 * C1728 + C6126 * C1730) + C6129 * C50848) *
                C51086 +
            (C6478 * C1731 - (C6129 * C1728 + C6128 * C1730) + C6479 * C50848) *
                C44529) *
               C51022 +
           ((C1887 - (C1888 + C1889) + C1890) * C51085 +
            (C7448 - (C7449 + C7450) + C7451) * C51086 +
            (C7452 - (C7453 + C7454) + C7455) * C44529) *
               C50758) *
              C51068 +
          ((((C117 * C635 + C50890 * C640) * C1730 +
             (C117 * C641 + C50890 * C650) * C1728 - C6130 * C1731 -
             C6131 * C50848) *
                C51085 +
            (C6130 * C1730 + C6131 * C1728 - C6132 * C1731 - C6133 * C50848) *
                C51086 +
            (C6132 * C1730 + C6133 * C1728 - C39680 * C1731 - C39681 * C50848) *
                C44529) *
               C51022 +
           ((C668 * C1730 + C669 * C1728 - C5858 * C1731 - C5859 * C50848) *
                C51085 +
            (C5858 * C1730 + C5859 * C1728 - C5860 * C1731 - C5861 * C50848) *
                C51086 +
            (C5860 * C1730 + C5861 * C1728 -
             (C117 * C3744 + C50890 * C3750) * C1731 -
             (C117 * C3752 + C50890 * C3756) * C50848) *
                C44529) *
               C50758) *
              C1463) *
         C50774) /
        (p * q * std::sqrt(p + q));
    d2ee[200] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C50890 * C126) * C1999 +
                      (C117 * C127 + C50890 * C140) * C51082 - C5692 * C2000 -
                      C5693 * C51071 + C5694 * C2001 + C5695 * C1998) *
                         C51085 +
                     (C5692 * C1999 + C5693 * C51082 - C5694 * C2000 -
                      C5695 * C51071 + C6310 * C2001 + C6311 * C1998) *
                         C51086 +
                     (C5694 * C1999 + C5695 * C51082 - C6310 * C2000 -
                      C6311 * C51071 + C6592 * C2001 + C6593 * C1998) *
                         C44529) *
                        C51022 +
                    ((C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C51085 +
                     (C7602 + C7603 - C7604 - C7605 + C7606 + C7607) * C51086 +
                     (C7608 + C7609 - C7610 - C7611 + C7612 + C7613) * C44529) *
                        C50758) *
                       C1358 +
                   (((C6126 * C2000 -
                      ((C117 * C310 + C50890 * C319) * C51082 +
                       (C117 * C301 + C50890 * C311) * C1999) +
                      C6127 * C51071 - C6128 * C2001 - C6129 * C1998) *
                         C51085 +
                     (C6128 * C2000 - (C6127 * C51082 + C6126 * C1999) +
                      C6129 * C51071 - C6478 * C2001 - C6479 * C1998) *
                         C51086 +
                     (C6478 * C2000 - (C6129 * C51082 + C6128 * C1999) +
                      C6479 * C51071 - C39882 * C2001 - C39883 * C1998) *
                         C44529) *
                        C51022 +
                    ((C1619 * C2000 - (C343 * C51082 + C344 * C1999) +
                      C1620 * C51071 - C5511 * C2001 - C5510 * C1998) *
                         C51085 +
                     (C5511 * C2000 - (C1620 * C51082 + C1619 * C1999) +
                      C5510 * C51071 - C6480 * C2001 - C6481 * C1998) *
                         C51086 +
                     (C6480 * C2000 - (C5510 * C51082 + C5511 * C1999) +
                      C6481 * C51071 - (C117 * C6462 + C50890 * C6465) * C2001 -
                      (C117 * C6466 + C50890 * C6468) * C1998) *
                         C44529) *
                        C50758) *
                       C50822) *
                  C50774) /
                 (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C51085 +
             (C5692 * C118 + C5693 * C50836) * C51086 +
             (C5694 * C118 + C5695 * C50836) * C44529) *
                C51022 +
            ((C178 + C179) * C51085 + (C5340 + C5341) * C51086 +
             (C5342 + C5343) * C44529) *
                C50758) *
               C630 -
           (((C5514 + C5515) * C44529 + (C5502 + C5503) * C51086 +
             (C351 + C352) * C51085) *
                C50758 +
            ((C6129 * C50836 + C6128 * C118) * C44529 +
             (C6127 * C50836 + C6126 * C118) * C51086 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C51085) *
                C51022) *
               C631 +
           ((((C117 * C635 + C50890 * C640) * C118 +
              (C117 * C641 + C50890 * C650) * C50836) *
                 C51085 +
             (C6130 * C118 + C6131 * C50836) * C51086 +
             (C6132 * C118 + C6133 * C50836) * C44529) *
                C51022 +
            ((C674 + C675) * C51085 + (C5862 + C5863) * C51086 +
             (C5864 + C5865) * C44529) *
                C50758) *
               C632) *
              C51027 +
          ((((C352 + C351) * C51085 + (C5503 + C5502) * C51086 +
             (C5515 + C5514) * C44529) *
                C51022 +
            ((C350 + C349) * C51085 + (C5504 + C5505) * C51086 +
             (C5516 + C5517) * C44529) *
                C50758) *
               C631 -
           (((C5344 + C5345) * C44529 + (C5346 + C5347) * C51086 +
             (C181 + C180) * C51085) *
                C50758 +
            ((C5343 + C5342) * C44529 + (C5341 + C5340) * C51086 +
             (C179 + C178) * C51085) *
                C51022) *
               C630 -
           ((((C117 * C3468 + C50890 * C3471) * C50836 +
              (C117 * C3462 + C50890 * C3467) * C118) *
                 C44529 +
             (C11534 + C11533) * C51086 + (C677 + C676) * C51085) *
                C50758 +
            ((C5865 + C5864) * C44529 + (C5863 + C5862) * C51086 +
             (C675 + C674) * C51085) *
                C51022) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C51085 +
            (C5692 * C118 + C5693 * C50836) * C51086 +
            (C5694 * C118 + C5695 * C50836) * C44529) *
               C51022 +
           ((C178 + C179) * C51085 + (C5340 + C5341) * C51086 +
            (C5342 + C5343) * C44529) *
               C50758) *
              C50806 * C113 -
          (((C5344 + C5345) * C44529 + (C5346 + C5347) * C51086 +
            (C181 + C180) * C51085) *
               C50758 +
           ((C5343 + C5342) * C44529 + (C5341 + C5340) * C51086 +
            (C179 + C178) * C51085) *
               C51022) *
              C50806 * C114 +
          ((C188 * C51085 + C11064 * C51086 + (C5345 + C5344) * C44529) *
               C51022 +
           (C189 * C51085 + (C5348 + C5349) * C51086 +
            (C5350 + C5351) * C44529) *
               C50758) *
              C50806 * C115 -
          ((((C117 * C1014 + C50890 * C1019) * C50836 +
             (C117 * C1004 + C50890 * C1013) * C118) *
                C44529 +
            (C11068 + C11067) * C51086 + C190 * C51085) *
               C50758 +
           ((C5351 + C5350) * C44529 + C11065 * C51086 + C191 * C51085) *
               C51022) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C997 +
             (C117 * C127 + C50890 * C140) * C994 - C5692 * C998 -
             C5693 * C995 + C5694 * C999 + C5695 * C996) *
                C51085 +
            (C5692 * C997 + C5693 * C994 - C5694 * C998 - C5695 * C995 +
             C6310 * C999 + C6311 * C996) *
                C51086 +
            (C5694 * C997 + C5695 * C994 - C6310 * C998 - C6311 * C995 +
             C6592 * C999 + C6593 * C996) *
                C44529) *
               C51022 +
           ((C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C51085 +
            (C6296 + C6297 - C6298 - C6299 + C6300 + C6301) * C51086 +
            (C6302 + C6303 - C6304 - C6305 + C6314 + C6315) * C44529) *
               C50758) *
              C50806 * C51027 +
          (((C1023 - (C1022 + C1021) + C1024 - C1051 - C1052) * C51085 +
            (C6298 - (C6297 + C6296) + C6299 - C6300 - C6301) * C51086 +
            (C6304 - (C6303 + C6302) + C6305 - C6314 - C6315) * C44529) *
               C51022 +
           ((C1031 - (C1030 + C1029) + C1032 - C1053 - C1054) * C51085 +
            (C11927 - (C11926 + C11925) + C11928 - C11929 - C11930) * C51086 +
            (C5698 * C998 - (C1048 * C994 + C1047 * C997) + C5699 * C995 -
             (C117 * C6281 + C50890 * C6286) * C999 -
             (C117 * C6287 + C50890 * C6290) * C996) *
                C44529) *
               C50758) *
              C50806 * C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C51085 +
            (C5692 * C118 + C5693 * C50836) * C51086 +
            (C5694 * C118 + C5695 * C50836) * C44529) *
               C51022 +
           ((C178 + C179) * C51085 + (C5340 + C5341) * C51086 +
            (C5342 + C5343) * C44529) *
               C50758) *
              C745 -
          (((C5514 + C5515) * C44529 + (C5502 + C5503) * C51086 +
            (C351 + C352) * C51085) *
               C50758 +
           ((C6129 * C50836 + C6128 * C118) * C44529 +
            (C6127 * C50836 + C6126 * C118) * C51086 +
            ((C117 * C310 + C50890 * C319) * C50836 +
             (C117 * C301 + C50890 * C311) * C118) *
                C51085) *
               C51022) *
              C746 +
          ((((C117 * C635 + C50890 * C640) * C118 +
             (C117 * C641 + C50890 * C650) * C50836) *
                C51085 +
            (C6130 * C118 + C6131 * C50836) * C51086 +
            (C6132 * C118 + C6133 * C50836) * C44529) *
               C51022 +
           ((C674 + C675) * C51085 + (C5862 + C5863) * C51086 +
            (C5864 + C5865) * C44529) *
               C50758) *
              C747 -
          ((((C117 * C3641 + C50890 * C3643) * C50836 +
             (C117 * C3637 + C50890 * C3640) * C118) *
                C44529 +
            ((C117 * C3305 + C50890 * C3311) * C50836 +
             (C117 * C3299 + C50890 * C3304) * C118) *
                C51086 +
            ((C117 * C758 + C50890 * C764) * C50836 +
             (C117 * C752 + C50890 * C759) * C118) *
                C51085) *
               C50758 +
           (((C117 * C3639 + C50890 * C3642) * C50836 +
             (C117 * C3636 + C50890 * C3638) * C118) *
                C44529 +
            ((C117 * C3303 + C50890 * C3310) * C50836 +
             (C117 * C3298 + C50890 * C3302) * C118) *
                C51086 +
            ((C117 * C760 + C50890 * C765) * C50836 +
             (C117 * C753 + C50890 * C761) * C118) *
                C51085) *
               C51022) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C51085 +
             (C5692 * C118 + C5693 * C50836) * C51086 +
             (C5694 * C118 + C5695 * C50836) * C44529) *
                C51022 +
            ((C178 + C179) * C51085 + (C5340 + C5341) * C51086 +
             (C5342 + C5343) * C44529) *
                C50758) *
               C51034 -
           (((C5514 + C5515) * C44529 + (C5502 + C5503) * C51086 +
             (C351 + C352) * C51085) *
                C50758 +
            ((C6129 * C50836 + C6128 * C118) * C44529 +
             (C6127 * C50836 + C6126 * C118) * C51086 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C51085) *
                C51022) *
               C50822) *
              C295 +
          ((((C352 + C351) * C51085 + (C5503 + C5502) * C51086 +
             (C5515 + C5514) * C44529) *
                C51022 +
            ((C350 + C349) * C51085 + (C5504 + C5505) * C51086 +
             (C5516 + C5517) * C44529) *
                C50758) *
               C50822 -
           (((C5344 + C5345) * C44529 + (C5346 + C5347) * C51086 +
             (C181 + C180) * C51085) *
                C50758 +
            ((C5343 + C5342) * C44529 + (C5341 + C5340) * C51086 +
             (C179 + C178) * C51085) *
                C51022) *
               C51034) *
              C296 +
          (((C188 * C51085 + C11064 * C51086 + (C5345 + C5344) * C44529) *
                C51022 +
            (C189 * C51085 + (C5348 + C5349) * C51086 +
             (C5350 + C5351) * C44529) *
                C50758) *
               C51034 -
           ((((C117 * C1165 + C50890 * C1169) * C50836 +
              (C117 * C1157 + C50890 * C1164) * C118) *
                 C44529 +
             (C11222 + C11221) * C51086 + C355 * C51085) *
                C50758 +
            ((C5517 + C5516) * C44529 + C11219 * C51086 + C356 * C51085) *
                C51022) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C997 +
             (C117 * C127 + C50890 * C140) * C994 - C5692 * C998 -
             C5693 * C995 + C5694 * C999 + C5695 * C996) *
                C51085 +
            (C5692 * C997 + C5693 * C994 - C5694 * C998 - C5695 * C995 +
             C6310 * C999 + C6311 * C996) *
                C51086 +
            (C5694 * C997 + C5695 * C994 - C6310 * C998 - C6311 * C995 +
             C6592 * C999 + C6593 * C996) *
                C44529) *
               C51022 +
           ((C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C51085 +
            (C6296 + C6297 - C6298 - C6299 + C6300 + C6301) * C51086 +
            (C6302 + C6303 - C6304 - C6305 + C6314 + C6315) * C44529) *
               C50758) *
              C51034 +
          (((C6126 * C998 -
             ((C117 * C310 + C50890 * C319) * C994 +
              (C117 * C301 + C50890 * C311) * C997) +
             C6127 * C995 - C6128 * C999 - C6129 * C996) *
                C51085 +
            (C6128 * C998 - (C6127 * C994 + C6126 * C997) + C6129 * C995 -
             C6478 * C999 - C6479 * C996) *
                C51086 +
            (C6478 * C998 - (C6129 * C994 + C6128 * C997) + C6479 * C995 -
             C39882 * C999 - C39883 * C996) *
                C44529) *
               C51022 +
           ((C1619 * C998 - (C343 * C994 + C344 * C997) + C1620 * C995 -
             C5511 * C999 - C5510 * C996) *
                C51085 +
            (C5511 * C998 - (C1620 * C994 + C1619 * C997) + C5510 * C995 -
             C6480 * C999 - C6481 * C996) *
                C51086 +
            (C6480 * C998 - (C5510 * C994 + C5511 * C997) + C6481 * C995 -
             (C117 * C6462 + C50890 * C6465) * C999 -
             (C117 * C6466 + C50890 * C6468) * C996) *
                C44529) *
               C50758) *
              C50822) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C458 +
             (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
             C5693 * C50848) *
                C51085 +
            (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
                C51086 +
            (C5694 * C458 + C5695 * C51036 - C6310 * C459 - C6311 * C50848) *
                C44529) *
               C51022 +
           ((C485 + C486 - C519 - C520) * C51085 +
            (C5672 + C5673 - C5674 - C5675) * C51086 +
            (C5676 + C5677 - C5700 - C5701) * C44529) *
               C50758) *
              C630 +
          (((C6126 * C459 -
             ((C117 * C310 + C50890 * C319) * C51036 +
              (C117 * C301 + C50890 * C311) * C458) +
             C6127 * C50848) *
                C51085 +
            (C6128 * C459 - (C6127 * C51036 + C6126 * C458) + C6129 * C50848) *
                C51086 +
            (C6478 * C459 - (C6129 * C51036 + C6128 * C458) + C6479 * C50848) *
                C44529) *
               C51022 +
           ((C1625 - (C1603 + C1604) + C1626) * C51085 +
            (C7084 - (C7085 + C7086) + C7087) * C51086 +
            (C7088 - (C7089 + C7090) + C7091) * C44529) *
               C50758) *
              C631 +
          ((((C117 * C635 + C50890 * C640) * C458 +
             (C117 * C641 + C50890 * C650) * C51036 - C6130 * C459 -
             C6131 * C50848) *
                C51085 +
            (C6130 * C458 + C6131 * C51036 - C6132 * C459 - C6133 * C50848) *
                C51086 +
            (C6132 * C458 + C6133 * C51036 - C39680 * C459 - C39681 * C50848) *
                C44529) *
               C51022 +
           ((C668 * C458 + C669 * C51036 - C5858 * C459 - C5859 * C50848) *
                C51085 +
            (C5858 * C458 + C5859 * C51036 - C5860 * C459 - C5861 * C50848) *
                C51086 +
            (C5860 * C458 + C5861 * C51036 -
             (C117 * C3744 + C50890 * C3750) * C459 -
             (C117 * C3752 + C50890 * C3756) * C50848) *
                C44529) *
               C50758) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C458 +
             (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
             C5693 * C50848) *
                C51085 +
            (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
                C51086 +
            (C5694 * C458 + C5695 * C51036 - C6310 * C459 - C6311 * C50848) *
                C44529) *
               C51022 +
           ((C485 + C486 - C519 - C520) * C51085 +
            (C5672 + C5673 - C5674 - C5675) * C51086 +
            (C5676 + C5677 - C5700 - C5701) * C44529) *
               C50758) *
              C50806 * C295 +
          (((C519 - (C486 + C485) + C520) * C51085 +
            (C5674 - (C5673 + C5672) + C5675) * C51086 +
            (C5700 - (C5677 + C5676) + C5701) * C44529) *
               C51022 +
           ((C521 - (C492 + C491) + C522) * C51085 +
            (C5682 - (C5683 + C5684) + C5685) * C51086 +
            (C5702 - (C5688 + C5689) + C5703) * C44529) *
               C50758) *
              C50806 * C296 +
          ((C529 * C51085 + C11378 * C51086 +
            (C5689 + C5688 - C5702 - C5703) * C44529) *
               C51022 +
           (C530 * C51085 + (C11375 + C11374 - C11373 - C11376) * C51086 +
            (C1049 * C458 + C1050 * C51036 -
             (C117 * C1247 + C50890 * C1254) * C459 -
             (C117 * C1255 + C50890 * C1259) * C50848) *
                C44529) *
               C50758) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C1240 +
            (C117 * C127 + C50890 * C140) * C1236 - C5692 * C1241 -
            C5693 * C1237 + C5694 * C1242 + C5695 * C1238 - C6310 * C1243 -
            C6311 * C1239) *
               C51085 +
           (C5692 * C1240 + C5693 * C1236 - C5694 * C1241 - C5695 * C1237 +
            C6310 * C1242 + C6311 * C1238 - C6592 * C1243 - C6593 * C1239) *
               C51086 +
           (C5694 * C1240 + C5695 * C1236 - C6310 * C1241 - C6311 * C1237 +
            C6592 * C1242 + C6593 * C1238 - C39958 * C1243 - C39959 * C1239) *
               C44529) *
              C51022 +
          ((C168 * C1240 + C169 * C1236 - C509 * C1241 - C510 * C1237 +
            C1045 * C1242 + C1046 * C1238 - C5696 * C1243 - C5697 * C1239) *
               C51085 +
           (C509 * C1240 + C510 * C1236 - C1045 * C1241 - C1046 * C1237 +
            C5696 * C1242 + C5697 * C1238 - C6312 * C1243 - C6313 * C1239) *
               C51086 +
           (C1045 * C1240 + C1046 * C1236 - C5696 * C1241 - C5697 * C1237 +
            C6312 * C1242 + C6313 * C1238 -
            (C117 * C6580 + C50890 * C6583) * C1243 -
            (C117 * C6584 + C50890 * C6586) * C1239) *
               C44529) *
              C50758) *
         C50806 * C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C1730 +
             (C117 * C127 + C50890 * C140) * C1728 - C5692 * C1731 -
             C5693 * C50848) *
                C51085 +
            (C5692 * C1730 + C5693 * C1728 - C5694 * C1731 - C5695 * C50848) *
                C51086 +
            (C5694 * C1730 + C5695 * C1728 - C6310 * C1731 - C6311 * C50848) *
                C44529) *
               C51022 +
           ((C1733 + C1734 - C1735 - C1736) * C51085 +
            (C7238 + C7239 - C7240 - C7241) * C51086 +
            (C7242 + C7243 - C7244 - C7245) * C44529) *
               C50758) *
              C50806 * C51080 +
          (((C1735 - (C1734 + C1733) + C1736) * C51085 +
            (C7240 - (C7239 + C7238) + C7241) * C51086 +
            (C7244 - (C7243 + C7242) + C7245) * C44529) *
               C51022 +
           ((C1739 - (C1738 + C1737) + C1740) * C51085 +
            (C7246 - (C7247 + C7248) + C7249) * C51086 +
            (C7250 - (C7251 + C7252) + C7253) * C44529) *
               C50758) *
              C50806 * C51065 +
          ((C1753 * C51085 + C12818 * C51086 +
            (C7252 + C7251 - C7250 - C7253) * C44529) *
               C51022 +
           (C1754 * C51085 + (C12815 + C12814 - C12813 - C12816) * C51086 +
            (C1049 * C1730 + C1050 * C1728 -
             (C117 * C1247 + C50890 * C1254) * C1731 -
             (C117 * C1255 + C50890 * C1259) * C50848) *
                C44529) *
               C50758) *
              C50806 * C1362)) /
        (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C1730 +
              (C117 * C127 + C50890 * C140) * C1728 - C5692 * C1731 -
              C5693 * C50848) *
                 C51085 +
             (C5692 * C1730 + C5693 * C1728 - C5694 * C1731 - C5695 * C50848) *
                 C51086 +
             (C5694 * C1730 + C5695 * C1728 - C6310 * C1731 - C6311 * C50848) *
                 C44529) *
                C51022 +
            ((C1733 + C1734 - C1735 - C1736) * C51085 +
             (C7238 + C7239 - C7240 - C7241) * C51086 +
             (C7242 + C7243 - C7244 - C7245) * C44529) *
                C50758) *
               C51034 +
           (((C6126 * C1731 -
              ((C117 * C310 + C50890 * C319) * C1728 +
               (C117 * C301 + C50890 * C311) * C1730) +
              C6127 * C50848) *
                 C51085 +
             (C6128 * C1731 - (C6127 * C1728 + C6126 * C1730) +
              C6129 * C50848) *
                 C51086 +
             (C6478 * C1731 - (C6129 * C1728 + C6128 * C1730) +
              C6479 * C50848) *
                 C44529) *
                C51022 +
            ((C1887 - (C1888 + C1889) + C1890) * C51085 +
             (C7448 - (C7449 + C7450) + C7451) * C51086 +
             (C7452 - (C7453 + C7454) + C7455) * C44529) *
                C50758) *
               C50822) *
              C1464 +
          ((((C1735 - (C1734 + C1733) + C1736) * C51085 +
             (C7240 - (C7239 + C7238) + C7241) * C51086 +
             (C7244 - (C7243 + C7242) + C7245) * C44529) *
                C51022 +
            ((C1739 - (C1738 + C1737) + C1740) * C51085 +
             (C7246 - (C7247 + C7248) + C7249) * C51086 +
             (C7250 - (C7251 + C7252) + C7253) * C44529) *
                C50758) *
               C51034 +
           (((C1889 + C1888 - C1887 - C1890) * C51085 +
             (C7450 + C7449 - C7448 - C7451) * C51086 +
             (C7454 + C7453 - C7452 - C7455) * C44529) *
                C51022 +
            ((C1893 + C1892 - C1891 - C1894) * C51085 +
             (C13017 + C13016 - C13015 - C13018) * C51086 +
             (C5512 * C1730 + C5513 * C1728 -
              (C117 * C7079 + C50890 * C7080) * C1731 -
              (C117 * C7081 + C50890 * C7082) * C50848) *
                 C44529) *
                C50758) *
               C50822) *
              C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C1999 +
             (C117 * C127 + C50890 * C140) * C51082 - C5692 * C2000 -
             C5693 * C51071 + C5694 * C2001 + C5695 * C1998) *
                C51085 +
            (C5692 * C1999 + C5693 * C51082 - C5694 * C2000 - C5695 * C51071 +
             C6310 * C2001 + C6311 * C1998) *
                C51086 +
            (C5694 * C1999 + C5695 * C51082 - C6310 * C2000 - C6311 * C51071 +
             C6592 * C2001 + C6593 * C1998) *
                C44529) *
               C51022 +
           ((C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C51085 +
            (C7602 + C7603 - C7604 - C7605 + C7606 + C7607) * C51086 +
            (C7608 + C7609 - C7610 - C7611 + C7612 + C7613) * C44529) *
               C50758) *
              C50806 * C1464 +
          (((C2005 - (C2004 + C2003) + C2006 - C2007 - C2008) * C51085 +
            (C7604 - (C7603 + C7602) + C7605 - C7606 - C7607) * C51086 +
            (C7610 - (C7609 + C7608) + C7611 - C7612 - C7613) * C44529) *
               C51022 +
           ((C2011 - (C2010 + C2009) + C2012 - C2013 - C2014) * C51085 +
            (C13167 - (C13166 + C13165) + C13168 - C13169 - C13170) * C51086 +
            (C5698 * C2000 - (C1048 * C51082 + C1047 * C1999) + C5699 * C51071 -
             (C117 * C6281 + C50890 * C6286) * C2001 -
             (C117 * C6287 + C50890 * C6290) * C1998) *
                C44529) *
               C50758) *
              C50806 * C50779)) /
        (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C51085 +
            (C5692 * C118 + C5693 * C50836) * C51086 +
            (C5694 * C118 + C5695 * C50836) * C44529) *
               C51022 +
           ((C178 + C179) * C51085 + (C5340 + C5341) * C51086 +
            (C5342 + C5343) * C44529) *
               C50758) *
              C50806 * C113 -
          (((C5344 + C5345) * C44529 + (C5346 + C5347) * C51086 +
            (C181 + C180) * C51085) *
               C50758 +
           ((C5343 + C5342) * C44529 + (C5341 + C5340) * C51086 +
            (C179 + C178) * C51085) *
               C51022) *
              C50806 * C114 +
          ((C188 * C51085 + C11064 * C51086 + (C5345 + C5344) * C44529) *
               C51022 +
           (C189 * C51085 + (C5348 + C5349) * C51086 +
            (C5350 + C5351) * C44529) *
               C50758) *
              C50806 * C115 -
          ((((C117 * C1014 + C50890 * C1019) * C50836 +
             (C117 * C1004 + C50890 * C1013) * C118) *
                C44529 +
            (C11068 + C11067) * C51086 + C190 * C51085) *
               C50758 +
           ((C5351 + C5350) * C44529 + C11065 * C51086 + C191 * C51085) *
               C51022) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C51085 +
             (C5692 * C118 + C5693 * C50836) * C51086 +
             (C5694 * C118 + C5695 * C50836) * C44529) *
                C51022 +
            ((C178 + C179) * C51085 + (C5340 + C5341) * C51086 +
             (C5342 + C5343) * C44529) *
                C50758) *
               C630 -
           (((C5514 + C5515) * C44529 + (C5502 + C5503) * C51086 +
             (C351 + C352) * C51085) *
                C50758 +
            ((C6129 * C50836 + C6128 * C118) * C44529 +
             (C6127 * C50836 + C6126 * C118) * C51086 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C51085) *
                C51022) *
               C631 +
           ((((C117 * C635 + C50890 * C640) * C118 +
              (C117 * C641 + C50890 * C650) * C50836) *
                 C51085 +
             (C6130 * C118 + C6131 * C50836) * C51086 +
             (C6132 * C118 + C6133 * C50836) * C44529) *
                C51022 +
            ((C674 + C675) * C51085 + (C5862 + C5863) * C51086 +
             (C5864 + C5865) * C44529) *
                C50758) *
               C632) *
              C51027 +
          ((((C352 + C351) * C51085 + (C5503 + C5502) * C51086 +
             (C5515 + C5514) * C44529) *
                C51022 +
            ((C350 + C349) * C51085 + (C5504 + C5505) * C51086 +
             (C5516 + C5517) * C44529) *
                C50758) *
               C631 -
           (((C5344 + C5345) * C44529 + (C5346 + C5347) * C51086 +
             (C181 + C180) * C51085) *
                C50758 +
            ((C5343 + C5342) * C44529 + (C5341 + C5340) * C51086 +
             (C179 + C178) * C51085) *
                C51022) *
               C630 -
           ((((C117 * C3468 + C50890 * C3471) * C50836 +
              (C117 * C3462 + C50890 * C3467) * C118) *
                 C44529 +
             (C11534 + C11533) * C51086 + (C677 + C676) * C51085) *
                C50758 +
            ((C5865 + C5864) * C44529 + (C5863 + C5862) * C51086 +
             (C675 + C674) * C51085) *
                C51022) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C51085 +
             (C5692 * C118 + C5693 * C50836) * C51086 +
             (C5694 * C118 + C5695 * C50836) * C44529) *
                C51022 +
            ((C178 + C179) * C51085 + (C5340 + C5341) * C51086 +
             (C5342 + C5343) * C44529) *
                C50758) *
               C51034 -
           (((C5514 + C5515) * C44529 + (C5502 + C5503) * C51086 +
             (C351 + C352) * C51085) *
                C50758 +
            ((C6129 * C50836 + C6128 * C118) * C44529 +
             (C6127 * C50836 + C6126 * C118) * C51086 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C51085) *
                C51022) *
               C50822) *
              C295 +
          ((((C352 + C351) * C51085 + (C5503 + C5502) * C51086 +
             (C5515 + C5514) * C44529) *
                C51022 +
            ((C350 + C349) * C51085 + (C5504 + C5505) * C51086 +
             (C5516 + C5517) * C44529) *
                C50758) *
               C50822 -
           (((C5344 + C5345) * C44529 + (C5346 + C5347) * C51086 +
             (C181 + C180) * C51085) *
                C50758 +
            ((C5343 + C5342) * C44529 + (C5341 + C5340) * C51086 +
             (C179 + C178) * C51085) *
                C51022) *
               C51034) *
              C296 +
          (((C188 * C51085 + C11064 * C51086 + (C5345 + C5344) * C44529) *
                C51022 +
            (C189 * C51085 + (C5348 + C5349) * C51086 +
             (C5350 + C5351) * C44529) *
                C50758) *
               C51034 -
           ((((C117 * C1165 + C50890 * C1169) * C50836 +
              (C117 * C1157 + C50890 * C1164) * C118) *
                 C44529 +
             (C11222 + C11221) * C51086 + C355 * C51085) *
                C50758 +
            ((C5517 + C5516) * C44529 + C11219 * C51086 + C356 * C51085) *
                C51022) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C51085 +
            (C5692 * C118 + C5693 * C50836) * C51086 +
            (C5694 * C118 + C5695 * C50836) * C44529) *
               C51022 +
           ((C178 + C179) * C51085 + (C5340 + C5341) * C51086 +
            (C5342 + C5343) * C44529) *
               C50758) *
              C745 -
          (((C5514 + C5515) * C44529 + (C5502 + C5503) * C51086 +
            (C351 + C352) * C51085) *
               C50758 +
           ((C6129 * C50836 + C6128 * C118) * C44529 +
            (C6127 * C50836 + C6126 * C118) * C51086 +
            ((C117 * C310 + C50890 * C319) * C50836 +
             (C117 * C301 + C50890 * C311) * C118) *
                C51085) *
               C51022) *
              C746 +
          ((((C117 * C635 + C50890 * C640) * C118 +
             (C117 * C641 + C50890 * C650) * C50836) *
                C51085 +
            (C6130 * C118 + C6131 * C50836) * C51086 +
            (C6132 * C118 + C6133 * C50836) * C44529) *
               C51022 +
           ((C674 + C675) * C51085 + (C5862 + C5863) * C51086 +
            (C5864 + C5865) * C44529) *
               C50758) *
              C747 -
          ((((C117 * C3641 + C50890 * C3643) * C50836 +
             (C117 * C3637 + C50890 * C3640) * C118) *
                C44529 +
            ((C117 * C3305 + C50890 * C3311) * C50836 +
             (C117 * C3299 + C50890 * C3304) * C118) *
                C51086 +
            ((C117 * C758 + C50890 * C764) * C50836 +
             (C117 * C752 + C50890 * C759) * C118) *
                C51085) *
               C50758 +
           (((C117 * C3639 + C50890 * C3642) * C50836 +
             (C117 * C3636 + C50890 * C3638) * C118) *
                C44529 +
            ((C117 * C3303 + C50890 * C3310) * C50836 +
             (C117 * C3298 + C50890 * C3302) * C118) *
                C51086 +
            ((C117 * C760 + C50890 * C765) * C50836 +
             (C117 * C753 + C50890 * C761) * C118) *
                C51085) *
               C51022) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C458 +
             (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
             C5693 * C50848) *
                C51085 +
            (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
                C51086 +
            (C5694 * C458 + C5695 * C51036 - C6310 * C459 - C6311 * C50848) *
                C44529) *
               C51022 +
           ((C485 + C486 - C519 - C520) * C51085 +
            (C5672 + C5673 - C5674 - C5675) * C51086 +
            (C5676 + C5677 - C5700 - C5701) * C44529) *
               C50758) *
              C50806 * C295 +
          (((C519 - (C486 + C485) + C520) * C51085 +
            (C5674 - (C5673 + C5672) + C5675) * C51086 +
            (C5700 - (C5677 + C5676) + C5701) * C44529) *
               C51022 +
           ((C521 - (C492 + C491) + C522) * C51085 +
            (C5682 - (C5683 + C5684) + C5685) * C51086 +
            (C5702 - (C5688 + C5689) + C5703) * C44529) *
               C50758) *
              C50806 * C296 +
          ((C529 * C51085 + C11378 * C51086 +
            (C5689 + C5688 - C5702 - C5703) * C44529) *
               C51022 +
           (C530 * C51085 + (C11375 + C11374 - C11373 - C11376) * C51086 +
            (C1049 * C458 + C1050 * C51036 -
             (C117 * C1247 + C50890 * C1254) * C459 -
             (C117 * C1255 + C50890 * C1259) * C50848) *
                C44529) *
               C50758) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C458 +
             (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
             C5693 * C50848) *
                C51085 +
            (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
                C51086 +
            (C5694 * C458 + C5695 * C51036 - C6310 * C459 - C6311 * C50848) *
                C44529) *
               C51022 +
           ((C485 + C486 - C519 - C520) * C51085 +
            (C5672 + C5673 - C5674 - C5675) * C51086 +
            (C5676 + C5677 - C5700 - C5701) * C44529) *
               C50758) *
              C630 +
          (((C6126 * C459 -
             ((C117 * C310 + C50890 * C319) * C51036 +
              (C117 * C301 + C50890 * C311) * C458) +
             C6127 * C50848) *
                C51085 +
            (C6128 * C459 - (C6127 * C51036 + C6126 * C458) + C6129 * C50848) *
                C51086 +
            (C6478 * C459 - (C6129 * C51036 + C6128 * C458) + C6479 * C50848) *
                C44529) *
               C51022 +
           ((C1625 - (C1603 + C1604) + C1626) * C51085 +
            (C7084 - (C7085 + C7086) + C7087) * C51086 +
            (C7088 - (C7089 + C7090) + C7091) * C44529) *
               C50758) *
              C631 +
          ((((C117 * C635 + C50890 * C640) * C458 +
             (C117 * C641 + C50890 * C650) * C51036 - C6130 * C459 -
             C6131 * C50848) *
                C51085 +
            (C6130 * C458 + C6131 * C51036 - C6132 * C459 - C6133 * C50848) *
                C51086 +
            (C6132 * C458 + C6133 * C51036 - C39680 * C459 - C39681 * C50848) *
                C44529) *
               C51022 +
           ((C668 * C458 + C669 * C51036 - C5858 * C459 - C5859 * C50848) *
                C51085 +
            (C5858 * C458 + C5859 * C51036 - C5860 * C459 - C5861 * C50848) *
                C51086 +
            (C5860 * C458 + C5861 * C51036 -
             (C117 * C3744 + C50890 * C3750) * C459 -
             (C117 * C3752 + C50890 * C3756) * C50848) *
                C44529) *
               C50758) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C33864 +
             (C5692 * C118 + C5693 * C50836) * C50970) *
                C17370 +
            ((C178 + C179) * C33864 + (C5340 + C5341) * C50970) * C17371 +
            C33871 * C17372) *
               C1358 -
           (C34021 * C17372 +
            ((C5502 + C5503) * C50970 + (C351 + C352) * C33864) * C17371 +
            ((C6127 * C50836 + C6126 * C118) * C50970 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C33864) *
                C17370) *
               C50822) *
              C51080 +
          ((((C352 + C351) * C33864 + (C5503 + C5502) * C50970) * C17370 +
            ((C350 + C349) * C33864 + (C5504 + C5505) * C50970) * C17371 +
            ((C348 + C347) * C33864 + (C11221 + C11222) * C50970) * C17372) *
               C50822 -
           (C33872 * C17372 +
            ((C5346 + C5347) * C50970 + (C181 + C180) * C33864) * C17371 +
            ((C5341 + C5340) * C50970 + (C179 + C178) * C33864) * C17370) *
               C1358) *
              C51065 +
          ((C33871 * C17370 +
            (C189 * C33864 + (C5348 + C5349) * C50970) * C17371 +
            ((C185 + C184) * C33864 + (C11067 + C11068) * C50970) * C17372) *
               C1358 -
           ((((C117 * C1598 + C50890 * C1599) * C50836 +
              (C117 * C1596 + C50890 * C1597) * C118) *
                 C50970 +
             (C354 + C353) * C33864) *
                C17372 +
            ((C11222 + C11221) * C50970 + C355 * C33864) * C17371 +
            C34021 * C17370) *
               C50822) *
              C1362)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C50836) *
                C33864 +
            ((C36816 + C36815 + C36814) * C118 +
             (C36819 + C36818 + C36817) * C50836) *
                C50970) *
               C50753 * C1358 -
           (((C37239 + C37238 + C37237) * C50836 +
             (C37236 + C37235 + C37234) * C118) *
                C50970 +
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C50836 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C118) *
                C33864) *
               C50753 * C50822) *
              C51080 +
          ((((C2682 + C2681 + C2680) * C118 +
             (C2679 + C2678 + C2677) * C50836) *
                C33864 +
            ((C4261 + C4262 + C4263) * C118 +
             (C4264 + C4265 + C4266) * C50836) *
                C50970) *
               C50753 * C50822 -
           (((C2862 + C2863 + C2864) * C50836 +
             (C2859 + C2860 + C2861) * C118) *
                C50970 +
            ((C2494 + C2493 + C2492) * C50836 +
             (C2491 + C2490 + C2489) * C118) *
                C33864) *
               C50753 * C1358) *
              C51065 +
          ((((C2500 + C2499 + C2498) * C118 +
             (C2497 + C2496 + C2495) * C50836) *
                C33864 +
            ((C2865 + C2866 + C2867) * C118 +
             (C2868 + C2869 + C2870) * C50836) *
                C50970) *
               C50753 * C1358 -
           (((C2451 * C4246 + C2446 * C4247 + C2450 * C885 + C2445 * C894 +
              C2449 * C877 + C2444 * C890) *
                 C50836 +
             (C2451 * C4244 + C2446 * C4245 + C2450 * C870 + C2445 * C884 +
              C2449 * C866 + C2444 * C876) *
                 C118) *
                C50970 +
            ((C2688 + C2687 + C2686) * C50836 +
             (C2685 + C2684 + C2683) * C118) *
                C33864) *
               C50753 * C50822) *
              C1362)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C33864 +
             (C5692 * C118 + C5693 * C50836) * C50970) *
                C17370 +
            ((C178 + C179) * C33864 + (C5340 + C5341) * C50970) * C17371 +
            C33871 * C17372) *
               C51081 -
           (C34021 * C17372 +
            ((C5502 + C5503) * C50970 + (C351 + C352) * C33864) * C17371 +
            ((C6127 * C50836 + C6126 * C118) * C50970 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C33864) *
                C17370) *
               C51068 +
           ((((C117 * C635 + C50890 * C640) * C118 +
              (C117 * C641 + C50890 * C650) * C50836) *
                 C33864 +
             (C6130 * C118 + C6131 * C50836) * C50970) *
                C17370 +
            ((C674 + C675) * C33864 + (C5862 + C5863) * C50970) * C17371 +
            ((C676 + C677) * C33864 + (C11533 + C11534) * C50970) * C17372) *
               C1463) *
              C1464 +
          ((((C352 + C351) * C33864 + (C5503 + C5502) * C50970) * C17370 +
            ((C350 + C349) * C33864 + (C5504 + C5505) * C50970) * C17371 +
            ((C348 + C347) * C33864 + (C11221 + C11222) * C50970) * C17372) *
               C51068 -
           (C33872 * C17372 +
            ((C5346 + C5347) * C50970 + (C181 + C180) * C33864) * C17371 +
            ((C5341 + C5340) * C50970 + (C179 + C178) * C33864) * C17370) *
               C51081 -
           ((((C117 * C887 + C50890 * C895) * C50836 +
              (C117 * C871 + C50890 * C886) * C118) *
                 C50970 +
             (C679 + C678) * C33864) *
                C17372 +
            ((C11534 + C11533) * C50970 + (C677 + C676) * C33864) * C17371 +
            ((C5863 + C5862) * C50970 + (C675 + C674) * C33864) * C17370) *
               C1463) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C50836) *
                C33864 +
            ((C36816 + C36815 + C36814) * C118 +
             (C36819 + C36818 + C36817) * C50836) *
                C50970) *
               C50753 * C51081 -
           (((C37239 + C37238 + C37237) * C50836 +
             (C37236 + C37235 + C37234) * C118) *
                C50970 +
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C50836 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C118) *
                C33864) *
               C50753 * C51068 +
           (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
              C2451 * C3016 + C2446 * C3019) *
                 C118 +
             (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
              C2451 * C3020 + C2446 * C3025) *
                 C50836) *
                C33864 +
            ((C37242 + C37241 + C37240) * C118 +
             (C37245 + C37244 + C37243) * C50836) *
                C50970) *
               C50753 * C1463) *
              C1464 +
          ((((C2682 + C2681 + C2680) * C118 +
             (C2679 + C2678 + C2677) * C50836) *
                C33864 +
            ((C4261 + C4262 + C4263) * C118 +
             (C4264 + C4265 + C4266) * C50836) *
                C50970) *
               C50753 * C51068 -
           (((C2862 + C2863 + C2864) * C50836 +
             (C2859 + C2860 + C2861) * C118) *
                C50970 +
            ((C2494 + C2493 + C2492) * C50836 +
             (C2491 + C2490 + C2489) * C118) *
                C33864) *
               C50753 * C51081 -
           (((C2451 * C3309 + C2446 * C3313 + C2450 * C3305 + C2445 * C3311 +
              C2449 * C883 + C2444 * C893) *
                 C50836 +
             (C2451 * C3301 + C2446 * C3308 + C2450 * C3299 + C2445 * C3304 +
              C2449 * C869 + C2444 * C882) *
                 C118) *
                C50970 +
            ((C3046 + C3045 + C3044) * C50836 +
             (C3043 + C3042 + C3041) * C118) *
                C33864) *
               C50753 * C1463) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C458 +
              (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
              C5693 * C50848) *
                 C33864 +
             (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
                 C50970) *
                C17370 +
            ((C485 + C486 - C519 - C520) * C33864 +
             (C5672 + C5673 - C5674 - C5675) * C50970) *
                C17371 +
            C34170 * C17372) *
               C1358 +
           (((C6126 * C459 -
              ((C117 * C310 + C50890 * C319) * C51036 +
               (C117 * C301 + C50890 * C311) * C458) +
              C6127 * C50848) *
                 C33864 +
             (C6128 * C459 - (C6127 * C51036 + C6126 * C458) + C6129 * C50848) *
                 C50970) *
                C17370 +
            ((C1625 - (C1603 + C1604) + C1626) * C33864 +
             (C7084 - (C7085 + C7086) + C7087) * C50970) *
                C17371 +
            ((C1627 - (C1609 + C1610) + C1628) * C33864 +
             (C12661 - (C12662 + C12663) + C12664) * C50970) *
                C17372) *
               C50822) *
              C1464 +
          ((((C519 - (C486 + C485) + C520) * C33864 +
             (C5674 - (C5673 + C5672) + C5675) * C50970) *
                C17370 +
            ((C521 - (C492 + C491) + C522) * C33864 +
             (C5682 - (C5683 + C5684) + C5685) * C50970) *
                C17371 +
            ((C523 - (C498 + C497) + C524) * C33864 +
             (C11373 - (C11374 + C11375) + C11376) * C50970) *
                C17372) *
               C1358 +
           (((C1604 + C1603 - C1625 - C1626) * C33864 +
             (C7086 + C7085 - C7084 - C7087) * C50970) *
                C17370 +
            ((C1610 + C1609 - C1627 - C1628) * C33864 +
             (C12663 + C12662 - C12661 - C12664) * C50970) *
                C17371 +
            ((C1616 + C1615 - C1629 - C1630) * C33864 +
             (C1623 * C458 + C1624 * C51036 -
              (C117 * C1157 + C50890 * C1164) * C459 -
              (C117 * C1165 + C50890 * C1169) * C50848) *
                 C50970) *
                C17372) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C458 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C51036 -
             (C36814 + C36815 + C36816) * C459 -
             (C36817 + C36818 + C36819) * C50848) *
                C33864 +
            ((C36816 + C36815 + C36814) * C458 +
             (C36819 + C36818 + C36817) * C51036 -
             (C37406 + C37405 + C37404) * C459 -
             (C37409 + C37408 + C37407) * C50848) *
                C50970) *
               C50753 * C1358 +
           (((C37234 + C37235 + C37236) * C459 -
             ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
               C2449 * C310 + C2444 * C319) *
                  C51036 +
              (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
               C2449 * C301 + C2444 * C311) *
                  C458) +
             (C37237 + C37238 + C37239) * C50848) *
                C33864 +
            ((C37570 + C37569 + C37568) * C459 -
             ((C37239 + C37238 + C37237) * C51036 +
              (C37236 + C37235 + C37234) * C458) +
             (C37573 + C37572 + C37571) * C50848) *
                C50970) *
               C50753 * C50822) *
              C1464 +
          ((((C2861 + C2860 + C2859) * C459 -
             ((C2494 + C2493 + C2492) * C51036 +
              (C2491 + C2490 + C2489) * C458) +
             (C2864 + C2863 + C2862) * C50848) *
                C33864 +
            ((C3485 + C3486 + C3487) * C459 -
             ((C2862 + C2863 + C2864) * C51036 +
              (C2859 + C2860 + C2861) * C458) +
             (C3488 + C3489 + C3490) * C50848) *
                C50970) *
               C50753 * C1358 +
           (((C2682 + C2681 + C2680) * C458 + (C2679 + C2678 + C2677) * C51036 -
             (C4263 + C4262 + C4261) * C459 -
             (C4266 + C4265 + C4264) * C50848) *
                C33864 +
            ((C4261 + C4262 + C4263) * C458 + (C4264 + C4265 + C4266) * C51036 -
             (C2451 * C3637 + C2446 * C3640 + C2450 * C3461 + C2445 * C3465 +
              C2449 * C1155 + C2444 * C1160) *
                 C459 -
             (C2451 * C3641 + C2446 * C3643 + C2450 * C3466 + C2445 * C3470 +
              C2449 * C1161 + C2444 * C1167) *
                 C50848) *
                C50970) *
               C50753 * C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C1730 +
              (C117 * C127 + C50890 * C140) * C1728 - C5692 * C1731 -
              C5693 * C50848) *
                 C33864 +
             (C5692 * C1730 + C5693 * C1728 - C5694 * C1731 - C5695 * C50848) *
                 C50970) *
                C17370 +
            ((C1733 + C1734 - C1735 - C1736) * C33864 +
             (C7238 + C7239 - C7240 - C7241) * C50970) *
                C17371 +
            C35585 * C17372) *
               C1358 +
           (((C6126 * C1731 -
              ((C117 * C310 + C50890 * C319) * C1728 +
               (C117 * C301 + C50890 * C311) * C1730) +
              C6127 * C50848) *
                 C33864 +
             (C6128 * C1731 - (C6127 * C1728 + C6126 * C1730) +
              C6129 * C50848) *
                 C50970) *
                C17370 +
            ((C1887 - (C1888 + C1889) + C1890) * C33864 +
             (C7448 - (C7449 + C7450) + C7451) * C50970) *
                C17371 +
            ((C1891 - (C1892 + C1893) + C1894) * C33864 +
             (C13015 - (C13016 + C13017) + C13018) * C50970) *
                C17372) *
               C50822) *
              C51027 +
          ((((C1735 - (C1734 + C1733) + C1736) * C33864 +
             (C7240 - (C7239 + C7238) + C7241) * C50970) *
                C17370 +
            ((C1739 - (C1738 + C1737) + C1740) * C33864 +
             (C7246 - (C7247 + C7248) + C7249) * C50970) *
                C17371 +
            ((C1743 - (C1742 + C1741) + C1744) * C33864 +
             (C12813 - (C12814 + C12815) + C12816) * C50970) *
                C17372) *
               C1358 +
           (((C1889 + C1888 - C1887 - C1890) * C33864 +
             (C7450 + C7449 - C7448 - C7451) * C50970) *
                C17370 +
            ((C1893 + C1892 - C1891 - C1894) * C33864 +
             (C13017 + C13016 - C13015 - C13018) * C50970) *
                C17371 +
            ((C1897 + C1896 - C1895 - C1898) * C33864 +
             (C1623 * C1730 + C1624 * C1728 -
              (C117 * C1157 + C50890 * C1164) * C1731 -
              (C117 * C1165 + C50890 * C1169) * C50848) *
                 C50970) *
                C17372) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C1730 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C1728 -
             (C36814 + C36815 + C36816) * C1731 -
             (C36817 + C36818 + C36819) * C50848) *
                C33864 +
            ((C36816 + C36815 + C36814) * C1730 +
             (C36819 + C36818 + C36817) * C1728 -
             (C37406 + C37405 + C37404) * C1731 -
             (C37409 + C37408 + C37407) * C50848) *
                C50970) *
               C50753 * C1358 +
           (((C37234 + C37235 + C37236) * C1731 -
             ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
               C2449 * C310 + C2444 * C319) *
                  C1728 +
              (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
               C2449 * C301 + C2444 * C311) *
                  C1730) +
             (C37237 + C37238 + C37239) * C50848) *
                C33864 +
            ((C37570 + C37569 + C37568) * C1731 -
             ((C37239 + C37238 + C37237) * C1728 +
              (C37236 + C37235 + C37234) * C1730) +
             (C37573 + C37572 + C37571) * C50848) *
                C50970) *
               C50753 * C50822) *
              C51027 +
          ((((C2861 + C2860 + C2859) * C1731 -
             ((C2494 + C2493 + C2492) * C1728 +
              (C2491 + C2490 + C2489) * C1730) +
             (C2864 + C2863 + C2862) * C50848) *
                C33864 +
            ((C3485 + C3486 + C3487) * C1731 -
             ((C2862 + C2863 + C2864) * C1728 +
              (C2859 + C2860 + C2861) * C1730) +
             (C3488 + C3489 + C3490) * C50848) *
                C50970) *
               C50753 * C1358 +
           (((C2682 + C2681 + C2680) * C1730 + (C2679 + C2678 + C2677) * C1728 -
             (C4263 + C4262 + C4261) * C1731 -
             (C4266 + C4265 + C4264) * C50848) *
                C33864 +
            ((C4261 + C4262 + C4263) * C1730 + (C4264 + C4265 + C4266) * C1728 -
             (C2451 * C3637 + C2446 * C3640 + C2450 * C3461 + C2445 * C3465 +
              C2449 * C1155 + C2444 * C1160) *
                 C1731 -
             (C2451 * C3641 + C2446 * C3643 + C2450 * C3466 + C2445 * C3470 +
              C2449 * C1161 + C2444 * C1167) *
                 C50848) *
                C50970) *
               C50753 * C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C1730 +
             (C117 * C127 + C50890 * C140) * C1728 - C5692 * C1731 -
             C5693 * C50848) *
                C33864 +
            (C5692 * C1730 + C5693 * C1728 - C5694 * C1731 - C5695 * C50848) *
                C50970) *
               C17370 +
           ((C1733 + C1734 - C1735 - C1736) * C33864 +
            (C7238 + C7239 - C7240 - C7241) * C50970) *
               C17371 +
           C35585 * C17372) *
              C51081 +
          (((C6126 * C1731 -
             ((C117 * C310 + C50890 * C319) * C1728 +
              (C117 * C301 + C50890 * C311) * C1730) +
             C6127 * C50848) *
                C33864 +
            (C6128 * C1731 - (C6127 * C1728 + C6126 * C1730) + C6129 * C50848) *
                C50970) *
               C17370 +
           ((C1887 - (C1888 + C1889) + C1890) * C33864 +
            (C7448 - (C7449 + C7450) + C7451) * C50970) *
               C17371 +
           ((C1891 - (C1892 + C1893) + C1894) * C33864 +
            (C13015 - (C13016 + C13017) + C13018) * C50970) *
               C17372) *
              C51068 +
          ((((C117 * C635 + C50890 * C640) * C1730 +
             (C117 * C641 + C50890 * C650) * C1728 - C6130 * C1731 -
             C6131 * C50848) *
                C33864 +
            (C6130 * C1730 + C6131 * C1728 - C6132 * C1731 - C6133 * C50848) *
                C50970) *
               C17370 +
           ((C668 * C1730 + C669 * C1728 - C5858 * C1731 - C5859 * C50848) *
                C33864 +
            (C5858 * C1730 + C5859 * C1728 - C5860 * C1731 - C5861 * C50848) *
                C50970) *
               C17371 +
           ((C670 * C1730 + C671 * C1728 - C11531 * C1731 - C11532 * C50848) *
                C33864 +
            (C11531 * C1730 + C11532 * C1728 -
             (C117 * C3462 + C50890 * C3467) * C1731 -
             (C117 * C3468 + C50890 * C3471) * C50848) *
                C50970) *
               C17372) *
              C1463) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C1730 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C1728 -
            (C36814 + C36815 + C36816) * C1731 -
            (C36817 + C36818 + C36819) * C50848) *
               C33864 +
           ((C36816 + C36815 + C36814) * C1730 +
            (C36819 + C36818 + C36817) * C1728 -
            (C37406 + C37405 + C37404) * C1731 -
            (C37409 + C37408 + C37407) * C50848) *
               C50970) *
              C50753 * C51081 +
          (((C37234 + C37235 + C37236) * C1731 -
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C1728 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C1730) +
            (C37237 + C37238 + C37239) * C50848) *
               C33864 +
           ((C37570 + C37569 + C37568) * C1731 -
            ((C37239 + C37238 + C37237) * C1728 +
             (C37236 + C37235 + C37234) * C1730) +
            (C37573 + C37572 + C37571) * C50848) *
               C50970) *
              C50753 * C51068 +
          (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
             C2451 * C3016 + C2446 * C3019) *
                C1730 +
            (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
             C2451 * C3020 + C2446 * C3025) *
                C1728 -
            (C37240 + C37241 + C37242) * C1731 -
            (C37243 + C37244 + C37245) * C50848) *
               C33864 +
           ((C37242 + C37241 + C37240) * C1730 +
            (C37245 + C37244 + C37243) * C1728 -
            (C2451 * C20870 + C2446 * C20871 + C2450 * C3636 + C2445 * C3638 +
             C2449 * C3460 + C2444 * C3463) *
                C1731 -
            (C2451 * C20872 + C2446 * C20873 + C2450 * C3639 + C2445 * C3642 +
             C2449 * C3464 + C2444 * C3469) *
                C50848) *
               C50970) *
              C50753 * C1463) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C1999 +
             (C117 * C127 + C50890 * C140) * C51082 - C5692 * C2000 -
             C5693 * C51071 + C5694 * C2001 + C5695 * C1998) *
                C33864 +
            (C5692 * C1999 + C5693 * C51082 - C5694 * C2000 - C5695 * C51071 +
             C6310 * C2001 + C6311 * C1998) *
                C50970) *
               C17370 +
           ((C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C33864 +
            (C7602 + C7603 - C7604 - C7605 + C7606 + C7607) * C50970) *
               C17371 +
           ((C2009 + C2010 - C2011 - C2012 + C2013 + C2014) * C33864 +
            (C13165 + C13166 - C13167 - C13168 + C13169 + C13170) * C50970) *
               C17372) *
              C1358 +
          (((C6126 * C2000 -
             ((C117 * C310 + C50890 * C319) * C51082 +
              (C117 * C301 + C50890 * C311) * C1999) +
             C6127 * C51071 - C6128 * C2001 - C6129 * C1998) *
                C33864 +
            (C6128 * C2000 - (C6127 * C51082 + C6126 * C1999) + C6129 * C51071 -
             C6478 * C2001 - C6479 * C1998) *
                C50970) *
               C17370 +
           ((C1619 * C2000 - (C343 * C51082 + C344 * C1999) + C1620 * C51071 -
             C5511 * C2001 - C5510 * C1998) *
                C33864 +
            (C5511 * C2000 - (C1620 * C51082 + C1619 * C1999) + C5510 * C51071 -
             C6480 * C2001 - C6481 * C1998) *
                C50970) *
               C17371 +
           ((C1621 * C2000 - (C341 * C51082 + C342 * C1999) + C1622 * C51071 -
             C5512 * C2001 - C5513 * C1998) *
                C33864 +
            (C5512 * C2000 - (C1622 * C51082 + C1621 * C1999) + C5513 * C51071 -
             (C117 * C7079 + C50890 * C7080) * C2001 -
             (C117 * C7081 + C50890 * C7082) * C1998) *
                C50970) *
               C17372) *
              C50822) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C1999 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C51082 -
            (C36814 + C36815 + C36816) * C2000 -
            (C36817 + C36818 + C36819) * C51071 +
            (C37404 + C37405 + C37406) * C2001 +
            (C37407 + C37408 + C37409) * C1998) *
               C33864 +
           ((C36816 + C36815 + C36814) * C1999 +
            (C36819 + C36818 + C36817) * C51082 -
            (C37406 + C37405 + C37404) * C2000 -
            (C37409 + C37408 + C37407) * C51071 +
            (C37686 + C37685 + C37684) * C2001 +
            (C37689 + C37688 + C37687) * C1998) *
               C50970) *
              C50753 * C1358 +
          (((C37234 + C37235 + C37236) * C2000 -
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C51082 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C1999) +
            (C37237 + C37238 + C37239) * C51071 -
            (C37568 + C37569 + C37570) * C2001 -
            (C37571 + C37572 + C37573) * C1998) *
               C33864 +
           ((C37570 + C37569 + C37568) * C2000 -
            ((C37239 + C37238 + C37237) * C51082 +
             (C37236 + C37235 + C37234) * C1999) +
            (C37573 + C37572 + C37571) * C51071 -
            (C2451 * C20940 + C2446 * C20941 + C2450 * C3742 + C2445 * C3746 +
             C2449 * C3743 + C2444 * C3747) *
                C2001 -
            (C2451 * C20942 + C2446 * C20943 + C2450 * C3748 + C2445 * C3754 +
             C2449 * C3749 + C2444 * C3755) *
                C1998) *
               C50970) *
              C50753 * C50822) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C33864 +
             (C5692 * C118 + C5693 * C50836) * C50970) *
                C17370 +
            ((C178 + C179) * C33864 + (C5340 + C5341) * C50970) * C17371 +
            C33871 * C17372) *
               C630 -
           (C34021 * C17372 +
            ((C5502 + C5503) * C50970 + (C351 + C352) * C33864) * C17371 +
            ((C6127 * C50836 + C6126 * C118) * C50970 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C33864) *
                C17370) *
               C631 +
           ((((C117 * C635 + C50890 * C640) * C118 +
              (C117 * C641 + C50890 * C650) * C50836) *
                 C33864 +
             (C6130 * C118 + C6131 * C50836) * C50970) *
                C17370 +
            ((C674 + C675) * C33864 + (C5862 + C5863) * C50970) * C17371 +
            ((C676 + C677) * C33864 + (C11533 + C11534) * C50970) * C17372) *
               C632) *
              C51027 +
          ((((C352 + C351) * C33864 + (C5503 + C5502) * C50970) * C17370 +
            ((C350 + C349) * C33864 + (C5504 + C5505) * C50970) * C17371 +
            ((C348 + C347) * C33864 + (C11221 + C11222) * C50970) * C17372) *
               C631 -
           (C33872 * C17372 +
            ((C5346 + C5347) * C50970 + (C181 + C180) * C33864) * C17371 +
            ((C5341 + C5340) * C50970 + (C179 + C178) * C33864) * C17370) *
               C630 -
           ((((C117 * C887 + C50890 * C895) * C50836 +
              (C117 * C871 + C50890 * C886) * C118) *
                 C50970 +
             (C679 + C678) * C33864) *
                C17372 +
            ((C11534 + C11533) * C50970 + (C677 + C676) * C33864) * C17371 +
            ((C5863 + C5862) * C50970 + (C675 + C674) * C33864) * C17370) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C33864 +
            (C5692 * C118 + C5693 * C50836) * C50970) *
               C17370 +
           ((C178 + C179) * C33864 + (C5340 + C5341) * C50970) * C17371 +
           C33871 * C17372) *
              C50806 * C113 -
          (C33872 * C17372 +
           ((C5346 + C5347) * C50970 + (C181 + C180) * C33864) * C17371 +
           ((C5341 + C5340) * C50970 + (C179 + C178) * C33864) * C17370) *
              C50806 * C114 +
          (C33871 * C17370 +
           (C189 * C33864 + (C5348 + C5349) * C50970) * C17371 +
           ((C185 + C184) * C33864 + (C11067 + C11068) * C50970) * C17372) *
              C50806 * C115 -
          ((((C117 * C477 + C50890 * C483) * C50836 +
             (C117 * C465 + C50890 * C476) * C118) *
                C50970 +
            (C187 + C186) * C33864) *
               C17372 +
           ((C11068 + C11067) * C50970 + C190 * C33864) * C17371 +
           C33872 * C17370) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C997 +
             (C117 * C127 + C50890 * C140) * C994 - C5692 * C998 -
             C5693 * C995 + C5694 * C999 + C5695 * C996) *
                C33864 +
            (C5692 * C997 + C5693 * C994 - C5694 * C998 - C5695 * C995 +
             C6310 * C999 + C6311 * C996) *
                C50970) *
               C17370 +
           ((C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C33864 +
            (C6296 + C6297 - C6298 - C6299 + C6300 + C6301) * C50970) *
               C17371 +
           ((C1029 + C1030 - C1031 - C1032 + C1053 + C1054) * C33864 +
            (C11925 + C11926 - C11927 - C11928 + C11929 + C11930) * C50970) *
               C17372) *
              C50806 * C51027 +
          (((C1023 - (C1022 + C1021) + C1024 - C1051 - C1052) * C33864 +
            (C6298 - (C6297 + C6296) + C6299 - C6300 - C6301) * C50970) *
               C17370 +
           ((C1031 - (C1030 + C1029) + C1032 - C1053 - C1054) * C33864 +
            (C11927 - (C11926 + C11925) + C11928 - C11929 - C11930) * C50970) *
               C17371 +
           ((C1039 - (C1038 + C1037) + C1040 - C1055 - C1056) * C33864 +
            (C1049 * C998 - (C516 * C994 + C515 * C997) + C1050 * C995 -
             (C117 * C1247 + C50890 * C1254) * C999 -
             (C117 * C1255 + C50890 * C1259) * C996) *
                C50970) *
               C17372) *
              C50806 * C50779)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C50836) *
               C33864 +
           ((C2449 * C460 + C2444 * C466 + C2450 * C864 + C2445 * C872 +
             C2451 * C868 + C2446 * C880) *
                C118 +
            (C2449 * C467 + C2444 * C478 + C2450 * C873 + C2445 * C888 +
             C2451 * C881 + C2446 * C892) *
                C50836) *
               C50970) *
              C50753 * C50806 * C113 -
          (((C2862 + C2863 + C2864) * C50836 + (C2859 + C2860 + C2861) * C118) *
               C50970 +
           ((C2494 + C2493 + C2492) * C50836 + (C2491 + C2490 + C2489) * C118) *
               C33864) *
              C50753 * C50806 * C114 +
          (((C2500 + C2499 + C2498) * C118 + (C2497 + C2496 + C2495) * C50836) *
               C33864 +
           ((C2865 + C2866 + C2867) * C118 + (C2868 + C2869 + C2870) * C50836) *
               C50970) *
              C50753 * C50806 * C115 -
          (((C2451 * C887 + C2446 * C895 + C2450 * C879 + C2445 * C891 +
             C2449 * C473 + C2444 * C481) *
                C50836 +
            (C2451 * C871 + C2446 * C886 + C2450 * C867 + C2445 * C878 +
             C2449 * C463 + C2444 * C472) *
                C118) *
               C50970 +
           ((C2506 + C2505 + C2504) * C50836 + (C2503 + C2502 + C2501) * C118) *
               C33864) *
              C50753 * C50806 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C50836) *
                C33864 +
            ((C36816 + C36815 + C36814) * C118 +
             (C36819 + C36818 + C36817) * C50836) *
                C50970) *
               C50753 * C630 -
           (((C2451 * C3303 + C2446 * C3310 + C2450 * C881 + C2445 * C892 +
              C2449 * C873 + C2444 * C888) *
                 C50836 +
             (C2451 * C3298 + C2446 * C3302 + C2450 * C868 + C2445 * C880 +
              C2449 * C864 + C2444 * C872) *
                 C118) *
                C50970 +
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C50836 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C118) *
                C33864) *
               C50753 * C631 +
           (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
              C2451 * C3016 + C2446 * C3019) *
                 C118 +
             (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
              C2451 * C3020 + C2446 * C3025) *
                 C50836) *
                C33864 +
            ((C2449 * C868 + C2444 * C880 + C2450 * C3298 + C2445 * C3302 +
              C2451 * C3300 + C2446 * C3306) *
                 C118 +
             (C2449 * C881 + C2444 * C892 + C2450 * C3303 + C2445 * C3310 +
              C2451 * C3307 + C2446 * C3312) *
                 C50836) *
                C50970) *
               C50753 * C632) *
              C51027 +
          ((((C2682 + C2681 + C2680) * C118 +
             (C2679 + C2678 + C2677) * C50836) *
                C33864 +
            ((C4261 + C4262 + C4263) * C118 +
             (C4264 + C4265 + C4266) * C50836) *
                C50970) *
               C50753 * C631 -
           (((C2862 + C2863 + C2864) * C50836 +
             (C2859 + C2860 + C2861) * C118) *
                C50970 +
            ((C2494 + C2493 + C2492) * C50836 +
             (C2491 + C2490 + C2489) * C118) *
                C33864) *
               C50753 * C630 -
           (((C2451 * C3309 + C2446 * C3313 + C2450 * C3305 + C2445 * C3311 +
              C2449 * C883 + C2444 * C893) *
                 C50836 +
             (C2451 * C3301 + C2446 * C3308 + C2450 * C3299 + C2445 * C3304 +
              C2449 * C869 + C2444 * C882) *
                 C118) *
                C50970 +
            ((C3046 + C3045 + C3044) * C50836 +
             (C3043 + C3042 + C3041) * C118) *
                C33864) *
               C50753 * C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C997 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C994 -
            (C36814 + C36815 + C36816) * C998 -
            (C36817 + C36818 + C36819) * C995 +
            (C37404 + C37405 + C37406) * C999 +
            (C37407 + C37408 + C37409) * C996) *
               C33864 +
           ((C36816 + C36815 + C36814) * C997 +
            (C36819 + C36818 + C36817) * C994 -
            (C37406 + C37405 + C37404) * C998 -
            (C37409 + C37408 + C37407) * C995 +
            (C2449 * C1244 + C2444 * C1248 + C2450 * C3743 + C2445 * C3747 +
             C2451 * C3742 + C2446 * C3746) *
                C999 +
            (C2449 * C1249 + C2444 * C1256 + C2450 * C3749 + C2445 * C3755 +
             C2451 * C3748 + C2446 * C3754) *
                C996) *
               C50970) *
              C50753 * C50806 * C51027 +
          (((C2861 + C2860 + C2859) * C998 -
            ((C2494 + C2493 + C2492) * C994 + (C2491 + C2490 + C2489) * C997) +
            (C2864 + C2863 + C2862) * C995 - (C3487 + C3486 + C3485) * C999 -
            (C3490 + C3489 + C3488) * C996) *
               C33864 +
           ((C3485 + C3486 + C3487) * C998 -
            ((C2862 + C2863 + C2864) * C994 + (C2859 + C2860 + C2861) * C997) +
            (C3488 + C3489 + C3490) * C995 -
            (C2451 * C3744 + C2446 * C3750 + C2450 * C3745 + C2445 * C3751 +
             C2449 * C1245 + C2444 * C1250) *
                C999 -
            (C2451 * C3752 + C2446 * C3756 + C2450 * C3753 + C2445 * C3757 +
             C2449 * C1251 + C2444 * C1257) *
                C996) *
               C50970) *
              C50753 * C50806 * C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C33864 +
            (C5692 * C118 + C5693 * C50836) * C50970) *
               C17370 +
           ((C178 + C179) * C33864 + (C5340 + C5341) * C50970) * C17371 +
           C33871 * C17372) *
              C745 -
          (C34021 * C17372 +
           ((C5502 + C5503) * C50970 + (C351 + C352) * C33864) * C17371 +
           ((C6127 * C50836 + C6126 * C118) * C50970 +
            ((C117 * C310 + C50890 * C319) * C50836 +
             (C117 * C301 + C50890 * C311) * C118) *
                C33864) *
               C17370) *
              C746 +
          ((((C117 * C635 + C50890 * C640) * C118 +
             (C117 * C641 + C50890 * C650) * C50836) *
                C33864 +
            (C6130 * C118 + C6131 * C50836) * C50970) *
               C17370 +
           ((C674 + C675) * C33864 + (C5862 + C5863) * C50970) * C17371 +
           ((C676 + C677) * C33864 + (C11533 + C11534) * C50970) * C17372) *
              C747 -
          ((((C117 * C4246 + C50890 * C4247) * C50836 +
             (C117 * C4244 + C50890 * C4245) * C118) *
                C50970 +
            ((C117 * C756 + C50890 * C763) * C50836 +
             (C117 * C751 + C50890 * C757) * C118) *
                C33864) *
               C17372 +
           (((C117 * C3305 + C50890 * C3311) * C50836 +
             (C117 * C3299 + C50890 * C3304) * C118) *
                C50970 +
            ((C117 * C758 + C50890 * C764) * C50836 +
             (C117 * C752 + C50890 * C759) * C118) *
                C33864) *
               C17371 +
           (((C117 * C3303 + C50890 * C3310) * C50836 +
             (C117 * C3298 + C50890 * C3302) * C118) *
                C50970 +
            ((C117 * C760 + C50890 * C765) * C50836 +
             (C117 * C753 + C50890 * C761) * C118) *
                C33864) *
               C17370) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C33864 +
             (C5692 * C118 + C5693 * C50836) * C50970) *
                C17370 +
            ((C178 + C179) * C33864 + (C5340 + C5341) * C50970) * C17371 +
            C33871 * C17372) *
               C51034 -
           (C34021 * C17372 +
            ((C5502 + C5503) * C50970 + (C351 + C352) * C33864) * C17371 +
            ((C6127 * C50836 + C6126 * C118) * C50970 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C33864) *
                C17370) *
               C50822) *
              C295 +
          ((((C352 + C351) * C33864 + (C5503 + C5502) * C50970) * C17370 +
            ((C350 + C349) * C33864 + (C5504 + C5505) * C50970) * C17371 +
            ((C348 + C347) * C33864 + (C11221 + C11222) * C50970) * C17372) *
               C50822 -
           (C33872 * C17372 +
            ((C5346 + C5347) * C50970 + (C181 + C180) * C33864) * C17371 +
            ((C5341 + C5340) * C50970 + (C179 + C178) * C33864) * C17370) *
               C51034) *
              C296 +
          ((C33871 * C17370 +
            (C189 * C33864 + (C5348 + C5349) * C50970) * C17371 +
            ((C185 + C184) * C33864 + (C11067 + C11068) * C50970) * C17372) *
               C51034 -
           ((((C117 * C1598 + C50890 * C1599) * C50836 +
              (C117 * C1596 + C50890 * C1597) * C118) *
                 C50970 +
             (C354 + C353) * C33864) *
                C17372 +
            ((C11222 + C11221) * C50970 + C355 * C33864) * C17371 +
            C34021 * C17370) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C997 +
             (C117 * C127 + C50890 * C140) * C994 - C5692 * C998 -
             C5693 * C995 + C5694 * C999 + C5695 * C996) *
                C33864 +
            (C5692 * C997 + C5693 * C994 - C5694 * C998 - C5695 * C995 +
             C6310 * C999 + C6311 * C996) *
                C50970) *
               C17370 +
           ((C1021 + C1022 - C1023 - C1024 + C1051 + C1052) * C33864 +
            (C6296 + C6297 - C6298 - C6299 + C6300 + C6301) * C50970) *
               C17371 +
           ((C1029 + C1030 - C1031 - C1032 + C1053 + C1054) * C33864 +
            (C11925 + C11926 - C11927 - C11928 + C11929 + C11930) * C50970) *
               C17372) *
              C51034 +
          (((C6126 * C998 -
             ((C117 * C310 + C50890 * C319) * C994 +
              (C117 * C301 + C50890 * C311) * C997) +
             C6127 * C995 - C6128 * C999 - C6129 * C996) *
                C33864 +
            (C6128 * C998 - (C6127 * C994 + C6126 * C997) + C6129 * C995 -
             C6478 * C999 - C6479 * C996) *
                C50970) *
               C17370 +
           ((C1619 * C998 - (C343 * C994 + C344 * C997) + C1620 * C995 -
             C5511 * C999 - C5510 * C996) *
                C33864 +
            (C5511 * C998 - (C1620 * C994 + C1619 * C997) + C5510 * C995 -
             C6480 * C999 - C6481 * C996) *
                C50970) *
               C17371 +
           ((C1621 * C998 - (C341 * C994 + C342 * C997) + C1622 * C995 -
             C5512 * C999 - C5513 * C996) *
                C33864 +
            (C5512 * C998 - (C1622 * C994 + C1621 * C997) + C5513 * C995 -
             (C117 * C7079 + C50890 * C7080) * C999 -
             (C117 * C7081 + C50890 * C7082) * C996) *
                C50970) *
               C17372) *
              C50822) *
         C50774) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C50836) *
                C33864 +
            ((C2449 * C460 + C2444 * C466 + C2450 * C864 + C2445 * C872 +
              C2451 * C868 + C2446 * C880) *
                 C118 +
             (C2449 * C467 + C2444 * C478 + C2450 * C873 + C2445 * C888 +
              C2451 * C881 + C2446 * C892) *
                 C50836) *
                C50970) *
               C50753 * C51034 -
           (((C2451 * C3303 + C2446 * C3310 + C2450 * C881 + C2445 * C892 +
              C2449 * C873 + C2444 * C888) *
                 C50836 +
             (C2451 * C3298 + C2446 * C3302 + C2450 * C868 + C2445 * C880 +
              C2449 * C864 + C2444 * C872) *
                 C118) *
                C50970 +
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C50836 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C118) *
                C33864) *
               C50753 * C50822) *
              C295 +
          ((((C2682 + C2681 + C2680) * C118 +
             (C2679 + C2678 + C2677) * C50836) *
                C33864 +
            ((C4261 + C4262 + C4263) * C118 +
             (C4264 + C4265 + C4266) * C50836) *
                C50970) *
               C50753 * C50822 -
           (((C2862 + C2863 + C2864) * C50836 +
             (C2859 + C2860 + C2861) * C118) *
                C50970 +
            ((C2494 + C2493 + C2492) * C50836 +
             (C2491 + C2490 + C2489) * C118) *
                C33864) *
               C50753 * C51034) *
              C296 +
          ((((C2500 + C2499 + C2498) * C118 +
             (C2497 + C2496 + C2495) * C50836) *
                C33864 +
            ((C2865 + C2866 + C2867) * C118 +
             (C2868 + C2869 + C2870) * C50836) *
                C50970) *
               C50753 * C51034 -
           (((C2451 * C4246 + C2446 * C4247 + C2450 * C885 + C2445 * C894 +
              C2449 * C877 + C2444 * C890) *
                 C50836 +
             (C2451 * C4244 + C2446 * C4245 + C2450 * C870 + C2445 * C884 +
              C2449 * C866 + C2444 * C876) *
                 C118) *
                C50970 +
            ((C2688 + C2687 + C2686) * C50836 +
             (C2685 + C2684 + C2683) * C118) *
                C33864) *
               C50753 * C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C50836) *
               C33864 +
           ((C36816 + C36815 + C36814) * C118 +
            (C36819 + C36818 + C36817) * C50836) *
               C50970) *
              C50753 * C745 -
          (((C2451 * C3303 + C2446 * C3310 + C2450 * C881 + C2445 * C892 +
             C2449 * C873 + C2444 * C888) *
                C50836 +
            (C2451 * C3298 + C2446 * C3302 + C2450 * C868 + C2445 * C880 +
             C2449 * C864 + C2444 * C872) *
                C118) *
               C50970 +
           ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
             C2449 * C310 + C2444 * C319) *
                C50836 +
            (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
             C2449 * C301 + C2444 * C311) *
                C118) *
               C33864) *
              C50753 * C746 +
          (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
             C2451 * C3016 + C2446 * C3019) *
                C118 +
            (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
             C2451 * C3020 + C2446 * C3025) *
                C50836) *
               C33864 +
           ((C2449 * C868 + C2444 * C880 + C2450 * C3298 + C2445 * C3302 +
             C2451 * C3300 + C2446 * C3306) *
                C118 +
            (C2449 * C881 + C2444 * C892 + C2450 * C3303 + C2445 * C3310 +
             C2451 * C3307 + C2446 * C3312) *
                C50836) *
               C50970) *
              C50753 * C747 -
          (((C2451 * C20672 + C2446 * C20673 + C2450 * C3307 + C2445 * C3312 +
             C2449 * C3303 + C2444 * C3310) *
                C50836 +
            (C2451 * C20670 + C2446 * C20671 + C2450 * C3300 + C2445 * C3306 +
             C2449 * C3298 + C2444 * C3302) *
                C118) *
               C50970 +
           ((C2451 * C3148 + C2446 * C3151 + C2450 * C3020 + C2445 * C3025 +
             C2449 * C760 + C2444 * C765) *
                C50836 +
            (C2451 * C3145 + C2446 * C3149 + C2450 * C3016 + C2445 * C3019 +
             C2449 * C753 + C2444 * C761) *
                C118) *
               C33864) *
              C50753 * C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C997 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C994 -
            (C36814 + C36815 + C36816) * C998 -
            (C36817 + C36818 + C36819) * C995 +
            (C37404 + C37405 + C37406) * C999 +
            (C37407 + C37408 + C37409) * C996) *
               C33864 +
           ((C36816 + C36815 + C36814) * C997 +
            (C36819 + C36818 + C36817) * C994 -
            (C37406 + C37405 + C37404) * C998 -
            (C37409 + C37408 + C37407) * C995 +
            (C2449 * C1244 + C2444 * C1248 + C2450 * C3743 + C2445 * C3747 +
             C2451 * C3742 + C2446 * C3746) *
                C999 +
            (C2449 * C1249 + C2444 * C1256 + C2450 * C3749 + C2445 * C3755 +
             C2451 * C3748 + C2446 * C3754) *
                C996) *
               C50970) *
              C50753 * C51034 +
          (((C37234 + C37235 + C37236) * C998 -
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C994 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C997) +
            (C37237 + C37238 + C37239) * C995 -
            (C37568 + C37569 + C37570) * C999 -
            (C37571 + C37572 + C37573) * C996) *
               C33864 +
           ((C37570 + C37569 + C37568) * C998 -
            ((C37239 + C37238 + C37237) * C994 +
             (C37236 + C37235 + C37234) * C997) +
            (C37573 + C37572 + C37571) * C995 -
            (C2451 * C20940 + C2446 * C20941 + C2450 * C3742 + C2445 * C3746 +
             C2449 * C3743 + C2444 * C3747) *
                C999 -
            (C2451 * C20942 + C2446 * C20943 + C2450 * C3748 + C2445 * C3754 +
             C2449 * C3749 + C2444 * C3755) *
                C996) *
               C50970) *
              C50753 * C50822) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C458 +
             (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
             C5693 * C50848) *
                C33864 +
            (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
                C50970) *
               C17370 +
           ((C485 + C486 - C519 - C520) * C33864 +
            (C5672 + C5673 - C5674 - C5675) * C50970) *
               C17371 +
           C34170 * C17372) *
              C630 +
          (((C6126 * C459 -
             ((C117 * C310 + C50890 * C319) * C51036 +
              (C117 * C301 + C50890 * C311) * C458) +
             C6127 * C50848) *
                C33864 +
            (C6128 * C459 - (C6127 * C51036 + C6126 * C458) + C6129 * C50848) *
                C50970) *
               C17370 +
           ((C1625 - (C1603 + C1604) + C1626) * C33864 +
            (C7084 - (C7085 + C7086) + C7087) * C50970) *
               C17371 +
           ((C1627 - (C1609 + C1610) + C1628) * C33864 +
            (C12661 - (C12662 + C12663) + C12664) * C50970) *
               C17372) *
              C631 +
          ((((C117 * C635 + C50890 * C640) * C458 +
             (C117 * C641 + C50890 * C650) * C51036 - C6130 * C459 -
             C6131 * C50848) *
                C33864 +
            (C6130 * C458 + C6131 * C51036 - C6132 * C459 - C6133 * C50848) *
                C50970) *
               C17370 +
           ((C668 * C458 + C669 * C51036 - C5858 * C459 - C5859 * C50848) *
                C33864 +
            (C5858 * C458 + C5859 * C51036 - C5860 * C459 - C5861 * C50848) *
                C50970) *
               C17371 +
           ((C670 * C458 + C671 * C51036 - C11531 * C459 - C11532 * C50848) *
                C33864 +
            (C11531 * C458 + C11532 * C51036 -
             (C117 * C3462 + C50890 * C3467) * C459 -
             (C117 * C3468 + C50890 * C3471) * C50848) *
                C50970) *
               C17372) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C458 +
             (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
             C5693 * C50848) *
                C33864 +
            (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
                C50970) *
               C17370 +
           ((C485 + C486 - C519 - C520) * C33864 +
            (C5672 + C5673 - C5674 - C5675) * C50970) *
               C17371 +
           C34170 * C17372) *
              C50806 * C295 +
          (((C519 - (C486 + C485) + C520) * C33864 +
            (C5674 - (C5673 + C5672) + C5675) * C50970) *
               C17370 +
           ((C521 - (C492 + C491) + C522) * C33864 +
            (C5682 - (C5683 + C5684) + C5685) * C50970) *
               C17371 +
           ((C523 - (C498 + C497) + C524) * C33864 +
            (C11373 - (C11374 + C11375) + C11376) * C50970) *
               C17372) *
              C50806 * C296 +
          (C34170 * C17370 +
           (C530 * C33864 + (C11375 + C11374 - C11373 - C11376) * C50970) *
               C17371 +
           ((C506 + C505 - C525 - C526) * C33864 +
            (C517 * C458 + C518 * C51036 -
             (C117 * C1004 + C50890 * C1013) * C459 -
             (C117 * C1014 + C50890 * C1019) * C50848) *
                C50970) *
               C17372) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C50890 * C126) * C1240 +
            (C117 * C127 + C50890 * C140) * C1236 - C5692 * C1241 -
            C5693 * C1237 + C5694 * C1242 + C5695 * C1238 - C6310 * C1243 -
            C6311 * C1239) *
               C33864 +
           (C5692 * C1240 + C5693 * C1236 - C5694 * C1241 - C5695 * C1237 +
            C6310 * C1242 + C6311 * C1238 - C6592 * C1243 - C6593 * C1239) *
               C50970) *
              C17370 +
          ((C168 * C1240 + C169 * C1236 - C509 * C1241 - C510 * C1237 +
            C1045 * C1242 + C1046 * C1238 - C5696 * C1243 - C5697 * C1239) *
               C33864 +
           (C509 * C1240 + C510 * C1236 - C1045 * C1241 - C1046 * C1237 +
            C5696 * C1242 + C5697 * C1238 - C6312 * C1243 - C6313 * C1239) *
               C50970) *
              C17371 +
          ((C170 * C1240 + C171 * C1236 - C512 * C1241 - C513 * C1237 +
            C1047 * C1242 + C1048 * C1238 - C5698 * C1243 - C5699 * C1239) *
               C33864 +
           (C512 * C1240 + C513 * C1236 - C1047 * C1241 - C1048 * C1237 +
            C5698 * C1242 + C5699 * C1238 -
            (C117 * C6281 + C50890 * C6286) * C1243 -
            (C117 * C6287 + C50890 * C6290) * C1239) *
               C50970) *
              C17372) *
         C50806 * C50774) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C458 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C51036 -
            (C36814 + C36815 + C36816) * C459 -
            (C36817 + C36818 + C36819) * C50848) *
               C33864 +
           ((C36816 + C36815 + C36814) * C458 +
            (C36819 + C36818 + C36817) * C51036 -
            (C2451 * C3460 + C2446 * C3463 + C2450 * C1154 + C2445 * C1158 +
             C2449 * C1000 + C2444 * C1005) *
                C459 -
            (C2451 * C3464 + C2446 * C3469 + C2450 * C1159 + C2445 * C1166 +
             C2449 * C1006 + C2444 * C1015) *
                C50848) *
               C50970) *
              C50753 * C50806 * C295 +
          (((C2861 + C2860 + C2859) * C459 -
            ((C2494 + C2493 + C2492) * C51036 +
             (C2491 + C2490 + C2489) * C458) +
            (C2864 + C2863 + C2862) * C50848) *
               C33864 +
           ((C3485 + C3486 + C3487) * C459 -
            ((C2862 + C2863 + C2864) * C51036 +
             (C2859 + C2860 + C2861) * C458) +
            (C3488 + C3489 + C3490) * C50848) *
               C50970) *
              C50753 * C50806 * C296 +
          (((C2500 + C2499 + C2498) * C458 + (C2497 + C2496 + C2495) * C51036 -
            (C2867 + C2866 + C2865) * C459 - (C2870 + C2869 + C2868) * C50848) *
               C33864 +
           ((C2865 + C2866 + C2867) * C458 + (C2868 + C2869 + C2870) * C51036 -
            (C2451 * C3462 + C2446 * C3467 + C2450 * C1156 + C2445 * C1162 +
             C2449 * C1002 + C2444 * C1009) *
                C459 -
            (C2451 * C3468 + C2446 * C3471 + C2450 * C1163 + C2445 * C1168 +
             C2449 * C1010 + C2444 * C1017) *
                C50848) *
               C50970) *
              C50753 * C50806 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C458 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C51036 -
            (C36814 + C36815 + C36816) * C459 -
            (C36817 + C36818 + C36819) * C50848) *
               C33864 +
           ((C36816 + C36815 + C36814) * C458 +
            (C36819 + C36818 + C36817) * C51036 -
            (C2451 * C3460 + C2446 * C3463 + C2450 * C1154 + C2445 * C1158 +
             C2449 * C1000 + C2444 * C1005) *
                C459 -
            (C2451 * C3464 + C2446 * C3469 + C2450 * C1159 + C2445 * C1166 +
             C2449 * C1006 + C2444 * C1015) *
                C50848) *
               C50970) *
              C50753 * C630 +
          (((C37234 + C37235 + C37236) * C459 -
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C51036 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C458) +
            (C37237 + C37238 + C37239) * C50848) *
               C33864 +
           ((C2449 * C1154 + C2444 * C1158 + C2450 * C3460 + C2445 * C3463 +
             C2451 * C3636 + C2446 * C3638) *
                C459 -
            ((C37239 + C37238 + C37237) * C51036 +
             (C37236 + C37235 + C37234) * C458) +
            (C2449 * C1159 + C2444 * C1166 + C2450 * C3464 + C2445 * C3469 +
             C2451 * C3639 + C2446 * C3642) *
                C50848) *
               C50970) *
              C50753 * C631 +
          (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
             C2451 * C3016 + C2446 * C3019) *
                C458 +
            (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
             C2451 * C3020 + C2446 * C3025) *
                C51036 -
            (C37240 + C37241 + C37242) * C459 -
            (C37243 + C37244 + C37245) * C50848) *
               C33864 +
           ((C37242 + C37241 + C37240) * C458 +
            (C37245 + C37244 + C37243) * C51036 -
            (C2451 * C20870 + C2446 * C20871 + C2450 * C3636 + C2445 * C3638 +
             C2449 * C3460 + C2444 * C3463) *
                C459 -
            (C2451 * C20872 + C2446 * C20873 + C2450 * C3639 + C2445 * C3642 +
             C2449 * C3464 + C2444 * C3469) *
                C50848) *
               C50970) *
              C50753 * C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
            C2451 * C635 + C2446 * C640) *
               C1240 +
           (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
            C2451 * C641 + C2446 * C650) *
               C1236 -
           (C36814 + C36815 + C36816) * C1241 -
           (C36817 + C36818 + C36819) * C1237 +
           (C37404 + C37405 + C37406) * C1242 +
           (C37407 + C37408 + C37409) * C1238 -
           (C37684 + C37685 + C37686) * C1243 -
           (C37687 + C37688 + C37689) * C1239) *
              C33864 +
          ((C36816 + C36815 + C36814) * C1240 +
           (C36819 + C36818 + C36817) * C1236 -
           (C37406 + C37405 + C37404) * C1241 -
           (C37409 + C37408 + C37407) * C1237 +
           (C37686 + C37685 + C37684) * C1242 +
           (C37689 + C37688 + C37687) * C1238 -
           (C2451 * C23094 + C2446 * C23095 + C2450 * C6461 + C2445 * C6463 +
            C2449 * C6279 + C2444 * C6282) *
               C1243 -
           (C2451 * C23096 + C2446 * C23097 + C2450 * C6464 + C2445 * C6467 +
            C2449 * C6283 + C2444 * C6288) *
               C1239) *
              C50970) *
         C50753 * C50806 * C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C1730 +
             (C117 * C127 + C50890 * C140) * C1728 - C5692 * C1731 -
             C5693 * C50848) *
                C33864 +
            (C5692 * C1730 + C5693 * C1728 - C5694 * C1731 - C5695 * C50848) *
                C50970) *
               C17370 +
           ((C1733 + C1734 - C1735 - C1736) * C33864 +
            (C7238 + C7239 - C7240 - C7241) * C50970) *
               C17371 +
           C35585 * C17372) *
              C50806 * C51080 +
          (((C1735 - (C1734 + C1733) + C1736) * C33864 +
            (C7240 - (C7239 + C7238) + C7241) * C50970) *
               C17370 +
           ((C1739 - (C1738 + C1737) + C1740) * C33864 +
            (C7246 - (C7247 + C7248) + C7249) * C50970) *
               C17371 +
           ((C1743 - (C1742 + C1741) + C1744) * C33864 +
            (C12813 - (C12814 + C12815) + C12816) * C50970) *
               C17372) *
              C50806 * C51065 +
          (C35585 * C17370 +
           (C1754 * C33864 + (C12815 + C12814 - C12813 - C12816) * C50970) *
               C17371 +
           ((C1747 + C1746 - C1745 - C1748) * C33864 +
            (C517 * C1730 + C518 * C1728 -
             (C117 * C1004 + C50890 * C1013) * C1731 -
             (C117 * C1014 + C50890 * C1019) * C50848) *
                C50970) *
               C17372) *
              C50806 * C1362)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C1730 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C1728 -
            (C36814 + C36815 + C36816) * C1731 -
            (C36817 + C36818 + C36819) * C50848) *
               C33864 +
           ((C36816 + C36815 + C36814) * C1730 +
            (C36819 + C36818 + C36817) * C1728 -
            (C37406 + C37405 + C37404) * C1731 -
            (C37409 + C37408 + C37407) * C50848) *
               C50970) *
              C50753 * C50806 * C51080 +
          (((C2861 + C2860 + C2859) * C1731 -
            ((C2494 + C2493 + C2492) * C1728 +
             (C2491 + C2490 + C2489) * C1730) +
            (C2864 + C2863 + C2862) * C50848) *
               C33864 +
           ((C3485 + C3486 + C3487) * C1731 -
            ((C2862 + C2863 + C2864) * C1728 +
             (C2859 + C2860 + C2861) * C1730) +
            (C3488 + C3489 + C3490) * C50848) *
               C50970) *
              C50753 * C50806 * C51065 +
          (((C2500 + C2499 + C2498) * C1730 + (C2497 + C2496 + C2495) * C1728 -
            (C2867 + C2866 + C2865) * C1731 -
            (C2870 + C2869 + C2868) * C50848) *
               C33864 +
           ((C2865 + C2866 + C2867) * C1730 + (C2868 + C2869 + C2870) * C1728 -
            (C2451 * C3462 + C2446 * C3467 + C2450 * C1156 + C2445 * C1162 +
             C2449 * C1002 + C2444 * C1009) *
                C1731 -
            (C2451 * C3468 + C2446 * C3471 + C2450 * C1163 + C2445 * C1168 +
             C2449 * C1010 + C2444 * C1017) *
                C50848) *
               C50970) *
              C50753 * C50806 * C1362)) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C1730 +
              (C117 * C127 + C50890 * C140) * C1728 - C5692 * C1731 -
              C5693 * C50848) *
                 C33864 +
             (C5692 * C1730 + C5693 * C1728 - C5694 * C1731 - C5695 * C50848) *
                 C50970) *
                C17370 +
            ((C1733 + C1734 - C1735 - C1736) * C33864 +
             (C7238 + C7239 - C7240 - C7241) * C50970) *
                C17371 +
            C35585 * C17372) *
               C51034 +
           (((C6126 * C1731 -
              ((C117 * C310 + C50890 * C319) * C1728 +
               (C117 * C301 + C50890 * C311) * C1730) +
              C6127 * C50848) *
                 C33864 +
             (C6128 * C1731 - (C6127 * C1728 + C6126 * C1730) +
              C6129 * C50848) *
                 C50970) *
                C17370 +
            ((C1887 - (C1888 + C1889) + C1890) * C33864 +
             (C7448 - (C7449 + C7450) + C7451) * C50970) *
                C17371 +
            ((C1891 - (C1892 + C1893) + C1894) * C33864 +
             (C13015 - (C13016 + C13017) + C13018) * C50970) *
                C17372) *
               C50822) *
              C1464 +
          ((((C1735 - (C1734 + C1733) + C1736) * C33864 +
             (C7240 - (C7239 + C7238) + C7241) * C50970) *
                C17370 +
            ((C1739 - (C1738 + C1737) + C1740) * C33864 +
             (C7246 - (C7247 + C7248) + C7249) * C50970) *
                C17371 +
            ((C1743 - (C1742 + C1741) + C1744) * C33864 +
             (C12813 - (C12814 + C12815) + C12816) * C50970) *
                C17372) *
               C51034 +
           (((C1889 + C1888 - C1887 - C1890) * C33864 +
             (C7450 + C7449 - C7448 - C7451) * C50970) *
                C17370 +
            ((C1893 + C1892 - C1891 - C1894) * C33864 +
             (C13017 + C13016 - C13015 - C13018) * C50970) *
                C17371 +
            ((C1897 + C1896 - C1895 - C1898) * C33864 +
             (C1623 * C1730 + C1624 * C1728 -
              (C117 * C1157 + C50890 * C1164) * C1731 -
              (C117 * C1165 + C50890 * C1169) * C50848) *
                 C50970) *
                C17372) *
               C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C1730 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C1728 -
             (C36814 + C36815 + C36816) * C1731 -
             (C36817 + C36818 + C36819) * C50848) *
                C33864 +
            ((C36816 + C36815 + C36814) * C1730 +
             (C36819 + C36818 + C36817) * C1728 -
             (C37406 + C37405 + C37404) * C1731 -
             (C37409 + C37408 + C37407) * C50848) *
                C50970) *
               C50753 * C51034 +
           (((C37234 + C37235 + C37236) * C1731 -
             ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
               C2449 * C310 + C2444 * C319) *
                  C1728 +
              (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
               C2449 * C301 + C2444 * C311) *
                  C1730) +
             (C37237 + C37238 + C37239) * C50848) *
                C33864 +
            ((C37570 + C37569 + C37568) * C1731 -
             ((C37239 + C37238 + C37237) * C1728 +
              (C37236 + C37235 + C37234) * C1730) +
             (C37573 + C37572 + C37571) * C50848) *
                C50970) *
               C50753 * C50822) *
              C1464 +
          ((((C2861 + C2860 + C2859) * C1731 -
             ((C2494 + C2493 + C2492) * C1728 +
              (C2491 + C2490 + C2489) * C1730) +
             (C2864 + C2863 + C2862) * C50848) *
                C33864 +
            ((C3485 + C3486 + C3487) * C1731 -
             ((C2862 + C2863 + C2864) * C1728 +
              (C2859 + C2860 + C2861) * C1730) +
             (C3488 + C3489 + C3490) * C50848) *
                C50970) *
               C50753 * C51034 +
           (((C2682 + C2681 + C2680) * C1730 + (C2679 + C2678 + C2677) * C1728 -
             (C4263 + C4262 + C4261) * C1731 -
             (C4266 + C4265 + C4264) * C50848) *
                C33864 +
            ((C4261 + C4262 + C4263) * C1730 + (C4264 + C4265 + C4266) * C1728 -
             (C2451 * C3637 + C2446 * C3640 + C2450 * C3461 + C2445 * C3465 +
              C2449 * C1155 + C2444 * C1160) *
                 C1731 -
             (C2451 * C3641 + C2446 * C3643 + C2450 * C3466 + C2445 * C3470 +
              C2449 * C1161 + C2444 * C1167) *
                 C50848) *
                C50970) *
               C50753 * C50822) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C1999 +
             (C117 * C127 + C50890 * C140) * C51082 - C5692 * C2000 -
             C5693 * C51071 + C5694 * C2001 + C5695 * C1998) *
                C33864 +
            (C5692 * C1999 + C5693 * C51082 - C5694 * C2000 - C5695 * C51071 +
             C6310 * C2001 + C6311 * C1998) *
                C50970) *
               C17370 +
           ((C2003 + C2004 - C2005 - C2006 + C2007 + C2008) * C33864 +
            (C7602 + C7603 - C7604 - C7605 + C7606 + C7607) * C50970) *
               C17371 +
           ((C2009 + C2010 - C2011 - C2012 + C2013 + C2014) * C33864 +
            (C13165 + C13166 - C13167 - C13168 + C13169 + C13170) * C50970) *
               C17372) *
              C50806 * C1464 +
          (((C2005 - (C2004 + C2003) + C2006 - C2007 - C2008) * C33864 +
            (C7604 - (C7603 + C7602) + C7605 - C7606 - C7607) * C50970) *
               C17370 +
           ((C2011 - (C2010 + C2009) + C2012 - C2013 - C2014) * C33864 +
            (C13167 - (C13166 + C13165) + C13168 - C13169 - C13170) * C50970) *
               C17371 +
           ((C2017 - (C2016 + C2015) + C2018 - C2019 - C2020) * C33864 +
            (C1049 * C2000 - (C516 * C51082 + C515 * C1999) + C1050 * C51071 -
             (C117 * C1247 + C50890 * C1254) * C2001 -
             (C117 * C1255 + C50890 * C1259) * C1998) *
                C50970) *
               C17372) *
              C50806 * C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C1999 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C51082 -
            (C36814 + C36815 + C36816) * C2000 -
            (C36817 + C36818 + C36819) * C51071 +
            (C37404 + C37405 + C37406) * C2001 +
            (C37407 + C37408 + C37409) * C1998) *
               C33864 +
           ((C36816 + C36815 + C36814) * C1999 +
            (C36819 + C36818 + C36817) * C51082 -
            (C37406 + C37405 + C37404) * C2000 -
            (C37409 + C37408 + C37407) * C51071 +
            (C37686 + C37685 + C37684) * C2001 +
            (C37689 + C37688 + C37687) * C1998) *
               C50970) *
              C50753 * C50806 * C1464 +
          (((C2861 + C2860 + C2859) * C2000 -
            ((C2494 + C2493 + C2492) * C51082 +
             (C2491 + C2490 + C2489) * C1999) +
            (C2864 + C2863 + C2862) * C51071 - (C3487 + C3486 + C3485) * C2001 -
            (C3490 + C3489 + C3488) * C1998) *
               C33864 +
           ((C3485 + C3486 + C3487) * C2000 -
            ((C2862 + C2863 + C2864) * C51082 +
             (C2859 + C2860 + C2861) * C1999) +
            (C3488 + C3489 + C3490) * C51071 -
            (C2451 * C3744 + C2446 * C3750 + C2450 * C3745 + C2445 * C3751 +
             C2449 * C1245 + C2444 * C1250) *
                C2001 -
            (C2451 * C3752 + C2446 * C3756 + C2450 * C3753 + C2445 * C3757 +
             C2449 * C1251 + C2444 * C1257) *
                C1998) *
               C50970) *
              C50753 * C50806 * C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C33864 +
            (C5692 * C118 + C5693 * C50836) * C50970) *
               C17370 +
           ((C178 + C179) * C33864 + (C5340 + C5341) * C50970) * C17371 +
           C33871 * C17372) *
              C50806 * C113 -
          (C33872 * C17372 +
           ((C5346 + C5347) * C50970 + (C181 + C180) * C33864) * C17371 +
           ((C5341 + C5340) * C50970 + (C179 + C178) * C33864) * C17370) *
              C50806 * C114 +
          (C33871 * C17370 +
           (C189 * C33864 + (C5348 + C5349) * C50970) * C17371 +
           ((C185 + C184) * C33864 + (C11067 + C11068) * C50970) * C17372) *
              C50806 * C115 -
          ((((C117 * C477 + C50890 * C483) * C50836 +
             (C117 * C465 + C50890 * C476) * C118) *
                C50970 +
            (C187 + C186) * C33864) *
               C17372 +
           ((C11068 + C11067) * C50970 + C190 * C33864) * C17371 +
           C33872 * C17370) *
              C50806 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C33864 +
             (C5692 * C118 + C5693 * C50836) * C50970) *
                C17370 +
            ((C178 + C179) * C33864 + (C5340 + C5341) * C50970) * C17371 +
            C33871 * C17372) *
               C630 -
           (C34021 * C17372 +
            ((C5502 + C5503) * C50970 + (C351 + C352) * C33864) * C17371 +
            ((C6127 * C50836 + C6126 * C118) * C50970 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C33864) *
                C17370) *
               C631 +
           ((((C117 * C635 + C50890 * C640) * C118 +
              (C117 * C641 + C50890 * C650) * C50836) *
                 C33864 +
             (C6130 * C118 + C6131 * C50836) * C50970) *
                C17370 +
            ((C674 + C675) * C33864 + (C5862 + C5863) * C50970) * C17371 +
            ((C676 + C677) * C33864 + (C11533 + C11534) * C50970) * C17372) *
               C632) *
              C51027 +
          ((((C352 + C351) * C33864 + (C5503 + C5502) * C50970) * C17370 +
            ((C350 + C349) * C33864 + (C5504 + C5505) * C50970) * C17371 +
            ((C348 + C347) * C33864 + (C11221 + C11222) * C50970) * C17372) *
               C631 -
           (C33872 * C17372 +
            ((C5346 + C5347) * C50970 + (C181 + C180) * C33864) * C17371 +
            ((C5341 + C5340) * C50970 + (C179 + C178) * C33864) * C17370) *
               C630 -
           ((((C117 * C887 + C50890 * C895) * C50836 +
              (C117 * C871 + C50890 * C886) * C118) *
                 C50970 +
             (C679 + C678) * C33864) *
                C17372 +
            ((C11534 + C11533) * C50970 + (C677 + C676) * C33864) * C17371 +
            ((C5863 + C5862) * C50970 + (C675 + C674) * C33864) * C17370) *
               C632) *
              C50779)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C50836) *
               C33864 +
           ((C2449 * C460 + C2444 * C466 + C2450 * C864 + C2445 * C872 +
             C2451 * C868 + C2446 * C880) *
                C118 +
            (C2449 * C467 + C2444 * C478 + C2450 * C873 + C2445 * C888 +
             C2451 * C881 + C2446 * C892) *
                C50836) *
               C50970) *
              C50753 * C50806 * C113 -
          (((C2862 + C2863 + C2864) * C50836 + (C2859 + C2860 + C2861) * C118) *
               C50970 +
           ((C2494 + C2493 + C2492) * C50836 + (C2491 + C2490 + C2489) * C118) *
               C33864) *
              C50753 * C50806 * C114 +
          (((C2500 + C2499 + C2498) * C118 + (C2497 + C2496 + C2495) * C50836) *
               C33864 +
           ((C2865 + C2866 + C2867) * C118 + (C2868 + C2869 + C2870) * C50836) *
               C50970) *
              C50753 * C50806 * C115 -
          (((C2451 * C887 + C2446 * C895 + C2450 * C879 + C2445 * C891 +
             C2449 * C473 + C2444 * C481) *
                C50836 +
            (C2451 * C871 + C2446 * C886 + C2450 * C867 + C2445 * C878 +
             C2449 * C463 + C2444 * C472) *
                C118) *
               C50970 +
           ((C2506 + C2505 + C2504) * C50836 + (C2503 + C2502 + C2501) * C118) *
               C33864) *
              C50753 * C50806 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C50836) *
                C33864 +
            ((C36816 + C36815 + C36814) * C118 +
             (C36819 + C36818 + C36817) * C50836) *
                C50970) *
               C50753 * C630 -
           (((C2451 * C3303 + C2446 * C3310 + C2450 * C881 + C2445 * C892 +
              C2449 * C873 + C2444 * C888) *
                 C50836 +
             (C2451 * C3298 + C2446 * C3302 + C2450 * C868 + C2445 * C880 +
              C2449 * C864 + C2444 * C872) *
                 C118) *
                C50970 +
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C50836 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C118) *
                C33864) *
               C50753 * C631 +
           (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
              C2451 * C3016 + C2446 * C3019) *
                 C118 +
             (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
              C2451 * C3020 + C2446 * C3025) *
                 C50836) *
                C33864 +
            ((C2449 * C868 + C2444 * C880 + C2450 * C3298 + C2445 * C3302 +
              C2451 * C3300 + C2446 * C3306) *
                 C118 +
             (C2449 * C881 + C2444 * C892 + C2450 * C3303 + C2445 * C3310 +
              C2451 * C3307 + C2446 * C3312) *
                 C50836) *
                C50970) *
               C50753 * C632) *
              C51027 +
          ((((C2682 + C2681 + C2680) * C118 +
             (C2679 + C2678 + C2677) * C50836) *
                C33864 +
            ((C4261 + C4262 + C4263) * C118 +
             (C4264 + C4265 + C4266) * C50836) *
                C50970) *
               C50753 * C631 -
           (((C2862 + C2863 + C2864) * C50836 +
             (C2859 + C2860 + C2861) * C118) *
                C50970 +
            ((C2494 + C2493 + C2492) * C50836 +
             (C2491 + C2490 + C2489) * C118) *
                C33864) *
               C50753 * C630 -
           (((C2451 * C3309 + C2446 * C3313 + C2450 * C3305 + C2445 * C3311 +
              C2449 * C883 + C2444 * C893) *
                 C50836 +
             (C2451 * C3301 + C2446 * C3308 + C2450 * C3299 + C2445 * C3304 +
              C2449 * C869 + C2444 * C882) *
                 C118) *
                C50970 +
            ((C3046 + C3045 + C3044) * C50836 +
             (C3043 + C3042 + C3041) * C118) *
                C33864) *
               C50753 * C632) *
              C50779)) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C50890 * C126) * C118 +
              (C117 * C127 + C50890 * C140) * C50836) *
                 C33864 +
             (C5692 * C118 + C5693 * C50836) * C50970) *
                C17370 +
            ((C178 + C179) * C33864 + (C5340 + C5341) * C50970) * C17371 +
            C33871 * C17372) *
               C51034 -
           (C34021 * C17372 +
            ((C5502 + C5503) * C50970 + (C351 + C352) * C33864) * C17371 +
            ((C6127 * C50836 + C6126 * C118) * C50970 +
             ((C117 * C310 + C50890 * C319) * C50836 +
              (C117 * C301 + C50890 * C311) * C118) *
                 C33864) *
                C17370) *
               C50822) *
              C295 +
          ((((C352 + C351) * C33864 + (C5503 + C5502) * C50970) * C17370 +
            ((C350 + C349) * C33864 + (C5504 + C5505) * C50970) * C17371 +
            ((C348 + C347) * C33864 + (C11221 + C11222) * C50970) * C17372) *
               C50822 -
           (C33872 * C17372 +
            ((C5346 + C5347) * C50970 + (C181 + C180) * C33864) * C17371 +
            ((C5341 + C5340) * C50970 + (C179 + C178) * C33864) * C17370) *
               C51034) *
              C296 +
          ((C33871 * C17370 +
            (C189 * C33864 + (C5348 + C5349) * C50970) * C17371 +
            ((C185 + C184) * C33864 + (C11067 + C11068) * C50970) * C17372) *
               C51034 -
           ((((C117 * C1598 + C50890 * C1599) * C50836 +
              (C117 * C1596 + C50890 * C1597) * C118) *
                 C50970 +
             (C354 + C353) * C33864) *
                C17372 +
            ((C11222 + C11221) * C50970 + C355 * C33864) * C17371 +
            C34021 * C17370) *
               C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C118 +
             (C117 * C127 + C50890 * C140) * C50836) *
                C33864 +
            (C5692 * C118 + C5693 * C50836) * C50970) *
               C17370 +
           ((C178 + C179) * C33864 + (C5340 + C5341) * C50970) * C17371 +
           C33871 * C17372) *
              C745 -
          (C34021 * C17372 +
           ((C5502 + C5503) * C50970 + (C351 + C352) * C33864) * C17371 +
           ((C6127 * C50836 + C6126 * C118) * C50970 +
            ((C117 * C310 + C50890 * C319) * C50836 +
             (C117 * C301 + C50890 * C311) * C118) *
                C33864) *
               C17370) *
              C746 +
          ((((C117 * C635 + C50890 * C640) * C118 +
             (C117 * C641 + C50890 * C650) * C50836) *
                C33864 +
            (C6130 * C118 + C6131 * C50836) * C50970) *
               C17370 +
           ((C674 + C675) * C33864 + (C5862 + C5863) * C50970) * C17371 +
           ((C676 + C677) * C33864 + (C11533 + C11534) * C50970) * C17372) *
              C747 -
          ((((C117 * C4246 + C50890 * C4247) * C50836 +
             (C117 * C4244 + C50890 * C4245) * C118) *
                C50970 +
            ((C117 * C756 + C50890 * C763) * C50836 +
             (C117 * C751 + C50890 * C757) * C118) *
                C33864) *
               C17372 +
           (((C117 * C3305 + C50890 * C3311) * C50836 +
             (C117 * C3299 + C50890 * C3304) * C118) *
                C50970 +
            ((C117 * C758 + C50890 * C764) * C50836 +
             (C117 * C752 + C50890 * C759) * C118) *
                C33864) *
               C17371 +
           (((C117 * C3303 + C50890 * C3310) * C50836 +
             (C117 * C3298 + C50890 * C3302) * C118) *
                C50970 +
            ((C117 * C760 + C50890 * C765) * C50836 +
             (C117 * C753 + C50890 * C761) * C118) *
                C33864) *
               C17370) *
              C748) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
              C2451 * C635 + C2446 * C640) *
                 C118 +
             (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
              C2451 * C641 + C2446 * C650) *
                 C50836) *
                C33864 +
            ((C2449 * C460 + C2444 * C466 + C2450 * C864 + C2445 * C872 +
              C2451 * C868 + C2446 * C880) *
                 C118 +
             (C2449 * C467 + C2444 * C478 + C2450 * C873 + C2445 * C888 +
              C2451 * C881 + C2446 * C892) *
                 C50836) *
                C50970) *
               C50753 * C51034 -
           (((C2451 * C3303 + C2446 * C3310 + C2450 * C881 + C2445 * C892 +
              C2449 * C873 + C2444 * C888) *
                 C50836 +
             (C2451 * C3298 + C2446 * C3302 + C2450 * C868 + C2445 * C880 +
              C2449 * C864 + C2444 * C872) *
                 C118) *
                C50970 +
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C50836 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C118) *
                C33864) *
               C50753 * C50822) *
              C295 +
          ((((C2682 + C2681 + C2680) * C118 +
             (C2679 + C2678 + C2677) * C50836) *
                C33864 +
            ((C4261 + C4262 + C4263) * C118 +
             (C4264 + C4265 + C4266) * C50836) *
                C50970) *
               C50753 * C50822 -
           (((C2862 + C2863 + C2864) * C50836 +
             (C2859 + C2860 + C2861) * C118) *
                C50970 +
            ((C2494 + C2493 + C2492) * C50836 +
             (C2491 + C2490 + C2489) * C118) *
                C33864) *
               C50753 * C51034) *
              C296 +
          ((((C2500 + C2499 + C2498) * C118 +
             (C2497 + C2496 + C2495) * C50836) *
                C33864 +
            ((C2865 + C2866 + C2867) * C118 +
             (C2868 + C2869 + C2870) * C50836) *
                C50970) *
               C50753 * C51034 -
           (((C2451 * C4246 + C2446 * C4247 + C2450 * C885 + C2445 * C894 +
              C2449 * C877 + C2444 * C890) *
                 C50836 +
             (C2451 * C4244 + C2446 * C4245 + C2450 * C870 + C2445 * C884 +
              C2449 * C866 + C2444 * C876) *
                 C118) *
                C50970 +
            ((C2688 + C2687 + C2686) * C50836 +
             (C2685 + C2684 + C2683) * C118) *
                C33864) *
               C50753 * C50822) *
              C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C118 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C50836) *
               C33864 +
           ((C36816 + C36815 + C36814) * C118 +
            (C36819 + C36818 + C36817) * C50836) *
               C50970) *
              C50753 * C745 -
          (((C2451 * C3303 + C2446 * C3310 + C2450 * C881 + C2445 * C892 +
             C2449 * C873 + C2444 * C888) *
                C50836 +
            (C2451 * C3298 + C2446 * C3302 + C2450 * C868 + C2445 * C880 +
             C2449 * C864 + C2444 * C872) *
                C118) *
               C50970 +
           ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
             C2449 * C310 + C2444 * C319) *
                C50836 +
            (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
             C2449 * C301 + C2444 * C311) *
                C118) *
               C33864) *
              C50753 * C746 +
          (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
             C2451 * C3016 + C2446 * C3019) *
                C118 +
            (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
             C2451 * C3020 + C2446 * C3025) *
                C50836) *
               C33864 +
           ((C2449 * C868 + C2444 * C880 + C2450 * C3298 + C2445 * C3302 +
             C2451 * C3300 + C2446 * C3306) *
                C118 +
            (C2449 * C881 + C2444 * C892 + C2450 * C3303 + C2445 * C3310 +
             C2451 * C3307 + C2446 * C3312) *
                C50836) *
               C50970) *
              C50753 * C747 -
          (((C2451 * C20672 + C2446 * C20673 + C2450 * C3307 + C2445 * C3312 +
             C2449 * C3303 + C2444 * C3310) *
                C50836 +
            (C2451 * C20670 + C2446 * C20671 + C2450 * C3300 + C2445 * C3306 +
             C2449 * C3298 + C2444 * C3302) *
                C118) *
               C50970 +
           ((C2451 * C3148 + C2446 * C3151 + C2450 * C3020 + C2445 * C3025 +
             C2449 * C760 + C2444 * C765) *
                C50836 +
            (C2451 * C3145 + C2446 * C3149 + C2450 * C3016 + C2445 * C3019 +
             C2449 * C753 + C2444 * C761) *
                C118) *
               C33864) *
              C50753 * C748) *
         C50774) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C458 +
             (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
             C5693 * C50848) *
                C33864 +
            (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
                C50970) *
               C17370 +
           ((C485 + C486 - C519 - C520) * C33864 +
            (C5672 + C5673 - C5674 - C5675) * C50970) *
               C17371 +
           C34170 * C17372) *
              C50806 * C295 +
          (((C519 - (C486 + C485) + C520) * C33864 +
            (C5674 - (C5673 + C5672) + C5675) * C50970) *
               C17370 +
           ((C521 - (C492 + C491) + C522) * C33864 +
            (C5682 - (C5683 + C5684) + C5685) * C50970) *
               C17371 +
           ((C523 - (C498 + C497) + C524) * C33864 +
            (C11373 - (C11374 + C11375) + C11376) * C50970) *
               C17372) *
              C50806 * C296 +
          (C34170 * C17370 +
           (C530 * C33864 + (C11375 + C11374 - C11373 - C11376) * C50970) *
               C17371 +
           ((C506 + C505 - C525 - C526) * C33864 +
            (C517 * C458 + C518 * C51036 -
             (C117 * C1004 + C50890 * C1013) * C459 -
             (C117 * C1014 + C50890 * C1019) * C50848) *
                C50970) *
               C17372) *
              C50806 * C297)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C50890 * C126) * C458 +
             (C117 * C127 + C50890 * C140) * C51036 - C5692 * C459 -
             C5693 * C50848) *
                C33864 +
            (C5692 * C458 + C5693 * C51036 - C5694 * C459 - C5695 * C50848) *
                C50970) *
               C17370 +
           ((C485 + C486 - C519 - C520) * C33864 +
            (C5672 + C5673 - C5674 - C5675) * C50970) *
               C17371 +
           C34170 * C17372) *
              C630 +
          (((C6126 * C459 -
             ((C117 * C310 + C50890 * C319) * C51036 +
              (C117 * C301 + C50890 * C311) * C458) +
             C6127 * C50848) *
                C33864 +
            (C6128 * C459 - (C6127 * C51036 + C6126 * C458) + C6129 * C50848) *
                C50970) *
               C17370 +
           ((C1625 - (C1603 + C1604) + C1626) * C33864 +
            (C7084 - (C7085 + C7086) + C7087) * C50970) *
               C17371 +
           ((C1627 - (C1609 + C1610) + C1628) * C33864 +
            (C12661 - (C12662 + C12663) + C12664) * C50970) *
               C17372) *
              C631 +
          ((((C117 * C635 + C50890 * C640) * C458 +
             (C117 * C641 + C50890 * C650) * C51036 - C6130 * C459 -
             C6131 * C50848) *
                C33864 +
            (C6130 * C458 + C6131 * C51036 - C6132 * C459 - C6133 * C50848) *
                C50970) *
               C17370 +
           ((C668 * C458 + C669 * C51036 - C5858 * C459 - C5859 * C50848) *
                C33864 +
            (C5858 * C458 + C5859 * C51036 - C5860 * C459 - C5861 * C50848) *
                C50970) *
               C17371 +
           ((C670 * C458 + C671 * C51036 - C11531 * C459 - C11532 * C50848) *
                C33864 +
            (C11531 * C458 + C11532 * C51036 -
             (C117 * C3462 + C50890 * C3467) * C459 -
             (C117 * C3468 + C50890 * C3471) * C50848) *
                C50970) *
               C17372) *
              C632) *
         C50774) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C458 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C51036 -
            (C36814 + C36815 + C36816) * C459 -
            (C36817 + C36818 + C36819) * C50848) *
               C33864 +
           ((C36816 + C36815 + C36814) * C458 +
            (C36819 + C36818 + C36817) * C51036 -
            (C2451 * C3460 + C2446 * C3463 + C2450 * C1154 + C2445 * C1158 +
             C2449 * C1000 + C2444 * C1005) *
                C459 -
            (C2451 * C3464 + C2446 * C3469 + C2450 * C1159 + C2445 * C1166 +
             C2449 * C1006 + C2444 * C1015) *
                C50848) *
               C50970) *
              C50753 * C50806 * C295 +
          (((C2861 + C2860 + C2859) * C459 -
            ((C2494 + C2493 + C2492) * C51036 +
             (C2491 + C2490 + C2489) * C458) +
            (C2864 + C2863 + C2862) * C50848) *
               C33864 +
           ((C3485 + C3486 + C3487) * C459 -
            ((C2862 + C2863 + C2864) * C51036 +
             (C2859 + C2860 + C2861) * C458) +
            (C3488 + C3489 + C3490) * C50848) *
               C50970) *
              C50753 * C50806 * C296 +
          (((C2500 + C2499 + C2498) * C458 + (C2497 + C2496 + C2495) * C51036 -
            (C2867 + C2866 + C2865) * C459 - (C2870 + C2869 + C2868) * C50848) *
               C33864 +
           ((C2865 + C2866 + C2867) * C458 + (C2868 + C2869 + C2870) * C51036 -
            (C2451 * C3462 + C2446 * C3467 + C2450 * C1156 + C2445 * C1162 +
             C2449 * C1002 + C2444 * C1009) *
                C459 -
            (C2451 * C3468 + C2446 * C3471 + C2450 * C1163 + C2445 * C1168 +
             C2449 * C1010 + C2444 * C1017) *
                C50848) *
               C50970) *
              C50753 * C50806 * C297)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C2444 * C126 + C2450 * C301 + C2445 * C311 +
             C2451 * C635 + C2446 * C640) *
                C458 +
            (C2449 * C127 + C2444 * C140 + C2450 * C310 + C2445 * C319 +
             C2451 * C641 + C2446 * C650) *
                C51036 -
            (C36814 + C36815 + C36816) * C459 -
            (C36817 + C36818 + C36819) * C50848) *
               C33864 +
           ((C36816 + C36815 + C36814) * C458 +
            (C36819 + C36818 + C36817) * C51036 -
            (C2451 * C3460 + C2446 * C3463 + C2450 * C1154 + C2445 * C1158 +
             C2449 * C1000 + C2444 * C1005) *
                C459 -
            (C2451 * C3464 + C2446 * C3469 + C2450 * C1159 + C2445 * C1166 +
             C2449 * C1006 + C2444 * C1015) *
                C50848) *
               C50970) *
              C50753 * C630 +
          (((C37234 + C37235 + C37236) * C459 -
            ((C2451 * C760 + C2446 * C765 + C2450 * C641 + C2445 * C650 +
              C2449 * C310 + C2444 * C319) *
                 C51036 +
             (C2451 * C753 + C2446 * C761 + C2450 * C635 + C2445 * C640 +
              C2449 * C301 + C2444 * C311) *
                 C458) +
            (C37237 + C37238 + C37239) * C50848) *
               C33864 +
           ((C2449 * C1154 + C2444 * C1158 + C2450 * C3460 + C2445 * C3463 +
             C2451 * C3636 + C2446 * C3638) *
                C459 -
            ((C37239 + C37238 + C37237) * C51036 +
             (C37236 + C37235 + C37234) * C458) +
            (C2449 * C1159 + C2444 * C1166 + C2450 * C3464 + C2445 * C3469 +
             C2451 * C3639 + C2446 * C3642) *
                C50848) *
               C50970) *
              C50753 * C631 +
          (((C2449 * C635 + C2444 * C640 + C2450 * C753 + C2445 * C761 +
             C2451 * C3016 + C2446 * C3019) *
                C458 +
            (C2449 * C641 + C2444 * C650 + C2450 * C760 + C2445 * C765 +
             C2451 * C3020 + C2446 * C3025) *
                C51036 -
            (C37240 + C37241 + C37242) * C459 -
            (C37243 + C37244 + C37245) * C50848) *
               C33864 +
           ((C37242 + C37241 + C37240) * C458 +
            (C37245 + C37244 + C37243) * C51036 -
            (C2451 * C20870 + C2446 * C20871 + C2450 * C3636 + C2445 * C3638 +
             C2449 * C3460 + C2444 * C3463) *
                C459 -
            (C2451 * C20872 + C2446 * C20873 + C2450 * C3639 + C2445 * C3642 +
             C2449 * C3464 + C2444 * C3469) *
                C50848) *
               C50970) *
              C50753 * C632) *
         C50774) /
            (p * q * std::sqrt(p + q));
}
